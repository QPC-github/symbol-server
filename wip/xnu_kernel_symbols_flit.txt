-[IDSRegistrationController systemSupportsPhoneNumberRegistration]
-[RecentVisitExpressionDAO expandTable:]
-[SDStatusMonitor browseAllInterfaces]
A5AC3PassThrough::GetSyncFrameSize(void const*,ulong,ulong *)
A5AC3PassThrough::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5AC3PassThrough::ProcessSinglePacket(void const*,ulong *,void *,ulong *)
A5AppleLosslessPassThrough::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5EC3PassThrough::A5EC3PassThrough(void)
A5EC3PassThrough::GetSyncFrameSize(void const*,ulong,ulong *)
A5EC3PassThrough::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5EC3PassThrough::ProcessSinglePacket(void const*,ulong *,void *,ulong *)
A5FLACPassThrough::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5MP4AACLowComplexityDecoder::A5MP4AACLowComplexityDecoder(void)
A5MP4AACLowComplexityDecoder::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5MP4AACLowComplexityDecoder::ProcessSinglePacket(void const*,ulong *,void *,ulong *)
A5MP4AACLowComplexityDecoder::Reset(void)
A5MP4AACLowComplexityDecoder::~A5MP4AACLowComplexityDecoder()
A5USACPassThrough::Initialize(FunctionAudioAudioStreamBasicDescription const*,FunctionAudioAudioStreamBasicDescription const*,void const*,ulong)
A5USACPassThrough::ProcessSinglePacket(void const*,ulong *,void *,ulong *)
AACChannelPairElement::AACChannelPairElement(SFBOffsetTable const*,uint,uint)
AACChannelPairElement::Deserialize(BitstreamReader &)
AACChannelPairElement::~AACChannelPairElement()
AACDecoder::Deserialize(BitstreamReader &,char *,uint &)
AACDecoder::Initialize(DecoderConfigDescr const&)
AACDecoder::Initialize(uint,uint,uint)
AACDecoder::ReassignInstanceTag(ElementTagAndID)
AACDecoder::~AACDecoder()
AACProgramConfigElement::Deserialize(BitstreamReader &)
AACSingleChannelElement::Deserialize(BitstreamReader &)
AACSingleChannelElement::~AACSingleChannelElement()
AACSyntacticElement::CreateList(std::vector<InstanceTypeIDAndElement<AACSyntacticElement*>> &,SFBOffsetTable const*,uint,uint,DecoderConfigDescr const&)
AACSyntacticElement::DestroyList(std::vector<InstanceTypeIDAndElement<AACSyntacticElement*>> &)
AACSyntacticElement::NumberOfChannels(std::vector<InstanceTypeIDAndElement<AACSyntacticElement*>> const&)
ABPBHIDevice::deRegisterChannel(ABPBHIChannel *)
ABPBHIDevice::getBHIBaseRegister(void)
ABPCallable::Container<AppleBasebandPCITraceUserClient::registerTraceBuffer(void *,IOExternalMethodArguments *)::$_4>::invoke(int,void *,void *,void *,void *)
ABPControl::enterLowPower(bool)
ABPControl::mmioReadMemory(uchar *,uchar *,uint,bool)
ABPMAVControl::linkUp(ulong long,uint,ulong long,uint,abpLinkState)
ABPMAVControl::scanCheck(void)
ABPMAVControl::teardownController(void)
ABPMHIChannel::freeQueues(void)
ABPMHIChannel::validateCommand(abpMHICommand *,int &)
ABPMHIDevice::changeToM2(void)
ABPMHIDevice::getMHIBaseRegister(void)
ABPMHIDevice::shadowDoorbell(ulong long,abpMHIDeviceDoorbellType,uint,uchar)
ABPMHIDevice::shadowDoorbellCheck(void)
ABPPort::changeState(abpPortState)
ABPPort::invokeAsync(void *)
ABPPort::portActionDone(abpPortState)
ABPPort::processCurrentPortAction(void)
ACIPCBTIDevice::ACIPCBTIDevice(void)
ACIPCBTIDevice::changeState(acipcBTIState)
ACIPCBTIDevice::deRegisterPipe(ACIPCBTIPipe *)
ACIPCBTIDevice::deRegisterPipe(ACIPCBTIPipe *)
ACIPCBTIDevice::engage(void)
ACIPCBTIDevice::enterDead(acipcErrorType,void *,void *)
ACIPCBTIDevice::enterLowPower(void)
ACIPCBTIDevice::excludePatchFromMMIOCoredump(void)
ACIPCBTIDevice::exitLowPower(void)
ACIPCBTIDevice::getExitCode(void)
ACIPCBTIDevice::initialize(acipcBTIDeviceParams *)
ACIPCBTIDevice::linkDown(acipcLinkState)
ACIPCBTIDevice::msiInterrupt(uchar)
ACIPCBTIDevice::prepareForMMIOCoredump(void)
ACIPCBTIDevice::quiesce(void)
ACIPCBTIDevice::registerPipe(ACIPCBTIPipe *)
ACIPCBTIDevice::resetAllowed(void)
ACIPCBTIDevice::sendImage(ulong long,uint)
ACIPCBTIDevice::sendTimesyncMessage(void)
ACIPCBTIDevice::setupDevice(void)
ACIPCBTIDevice::terminate(void)
ACIPCBTIDevice::unquiesce(void)
ACIPCBTIDevice::updateImageAddr(ulong long)
ACIPCBTIDevice::updateImageDoorbell(acipcOLYBTImageDoorbellValue)
ACIPCBTIDevice::updateImageSize(uint)
ACIPCBTIPipe::cancelImage(void)
ACIPCBTIPipe::initialize(acipcBTIPipeParams *)
ACIPCBTIPipe::notifyError(acipcErrorType,void *,void *)
ACIPCBTIPipe::readRegister(acipcBTIRegisters,uchar *,uint *)
ACIPCBTIPipe::sendImage(acipcImage *)
ACIPCBTIPipe::sendImageCompletion(int,uint)
ACIPCBTIPipe::setupPipe(void)
ACIPCBTIPipe::teardownPipe(void)
ACIPCBTIPipe::terminate(void)
ACIPCBTIPipe::~ACIPCBTIPipe()
ACIPCChip4378::withRevisionID(uchar)
ACIPCChip4387::disableMMIOCoredumpOnError(acipcErrorType)
ACIPCChip::computeDoorbellOffset(uint)
ACIPCChip::getRegisterOffset(acipcPeripheralRegister,uint)
ACIPCControl::ACIPCControl(void)
ACIPCControl::cancelTimer(void)
ACIPCControl::cancelTimesync(void)
ACIPCControl::cancelTimesyncTimer(void)
ACIPCControl::checkPendingMessage(void)
ACIPCControl::deRegisterPort(ACIPCPort *)
ACIPCControl::deRegisterPort(ACIPCPort *)
ACIPCControl::deviceAlive(void)
ACIPCControl::deviceAwakeCheck(void)
ACIPCControl::deviceWakeAsync(void)
ACIPCControl::disableMMIOCoredumpOnError(acipcErrorType)
ACIPCControl::enterLowPower(void)
ACIPCControl::enterLowPower(void)
ACIPCControl::exitLowPower(bool,bool)
ACIPCControl::hostExitSleepCheck(void)
ACIPCControl::hostExitSleepCompletion(void)
ACIPCControl::hostExitSleepCompletion(void)
ACIPCControl::initialize(acipcControlParams *)
ACIPCControl::initializeDeviceWakeDoorbell(ulong long *)
ACIPCControl::isMemoryAccessible(void)
ACIPCControl::linkDownCheck(int)
ACIPCControl::linkDownCheck(int)
ACIPCControl::linkQuiesceUnQuiesceAck(bool)
ACIPCControl::linkUpCheck(int,bool)
ACIPCControl::mmioRead(uint volatile*,bool)
ACIPCControl::mmioReadBar0(uint,bool)
ACIPCControl::mmioReadBar0(uint,bool)
ACIPCControl::mmioReadBar1(uint,bool)
ACIPCControl::mmioReadBar1(uint,bool)
ACIPCControl::mmioReadMemory(uchar volatile*,uchar *,uint,bool)
ACIPCControl::mmioReadMemoryBar0(uint,uchar *,uint,bool)
ACIPCControl::mmioReadMemoryBar1(uint,uchar *,uint,bool)
ACIPCControl::mmioReadOTP(uint,uchar *,uint,bool)
ACIPCControl::mmioWrite(uint volatile*,uint)
ACIPCControl::mmioWriteBar0(uint,uint)
ACIPCControl::mmioWriteBar1(uint,uint)
ACIPCControl::mmioWriteBar1(uint,uint)
ACIPCControl::mmioWriteMemory(uint volatile*,uint *,uint)
ACIPCControl::mmioWriteMemoryBar0(uint,uint *,uint)
ACIPCControl::mmioWriteMemoryBar0(uint,uint *,uint)
ACIPCControl::mmioWriteMemoryBar1(uint,uint *,uint)
ACIPCControl::mmioWriteMemoryBar1(uint,uint *,uint)
ACIPCControl::msiInterrupt(uchar)
ACIPCControl::prepareShutDown(void)
ACIPCControl::quiesce(void)
ACIPCControl::registerPort(ACIPCPort *)
ACIPCControl::registerPort(ACIPCPort *)
ACIPCControl::scan(void)
ACIPCControl::sendTimesyncMessage(void)
ACIPCControl::setChip(ACIPCChip *)
ACIPCControl::setChip(ACIPCChip *)
ACIPCControl::sleepCheck(int)
ACIPCControl::startQuiesceActivityTimer(ulong long,bool)
ACIPCControl::startSleepTimer(ulong long,void *)
ACIPCControl::startTimer(ulong long,acipcControlTimerMode,void *)
ACIPCControl::startTimer(ulong long,acipcControlTimerMode,void *)
ACIPCControl::startTimesyncTimer(void)
ACIPCControl::teardownController(void)
ACIPCControl::terminate(void)
ACIPCControl::timer(void *)
ACIPCControl::timerCallback(void *,void *)
ACIPCControl::timesyncCompletion(ulong long,uint,int)
ACIPCControl::timesyncTimer(void *)
ACIPCControl::timesyncTimerCallback(void *,void *)
ACIPCControl::unquiesce(void)
ACIPCControl::unquiesce(void)
ACIPCControl::~ACIPCControl()
ACIPCDataQueue::_assume_subrange(ulong,ulong)
ACIPCDataQueue::_release_subrange(ulong,ulong)
ACIPCDataQueue::_signalDataAvailable(uint,uint,uint,uint)
ACIPCNullDevice::ACIPCNullDevice(void)
ACIPCNullDevice::enterDead(acipcErrorType,void *,void *)
ACIPCNullDevice::enterLowPower(void)
ACIPCNullDevice::exitLowPower(void)
ACIPCNullDevice::linkDown(acipcLinkState)
ACIPCNullDevice::msiInterrupt(uchar)
ACIPCNullDevice::quiesce(void)
ACIPCNullDevice::sendTimesyncMessage(void)
ACIPCNullDevice::unquiesce(void)
ACIPCNullDevice::~ACIPCNullDevice()
ACIPCOLYBTControl::ACIPCOLYBTControl(void)
ACIPCOLYBTControl::checkAPBBridgeCB0Status(void)
ACIPCOLYBTControl::checkAXI2AHBStatus(void)
ACIPCOLYBTControl::checkBTClockStatus(void)
ACIPCOLYBTControl::deviceWake(bool,acipcDeviceWakeVotes)
ACIPCOLYBTControl::deviceWakeRequest(bool)
ACIPCOLYBTControl::linkDown(acipcLinkState)
ACIPCOLYBTControl::linkUp(ulong long,ulong long,uint,uint,acipcLinkState,bool)
ACIPCOLYBTControl::readBootStage(void)
ACIPCOLYBTControl::scanCheck(void)
ACIPCOLYBTControl::scanCheck(void)
ACIPCOLYBTControl::setDevice(ACIPCDevice *,acipcOLYBTDeviceType)
ACIPCOLYBTControl::setupController(void)
ACIPCOLYBTControl::teardownController(void)
ACIPCOLYBTControl::teardownController(void)
ACIPCPort::ACIPCPort(void)
ACIPCPort::callAsync(acipcPortAsyncMode,void *)
ACIPCPort::callAsyncCallback(void *,void *)
ACIPCPort::cancelAsync(acipcPortAsyncMode)
ACIPCPort::changeState(acipcPortState)
ACIPCPort::checkPortAction(void)
ACIPCPort::completeCurrentPortAction(void)
ACIPCPort::flushPortAction(void)
ACIPCPort::freeQueues(void)
ACIPCPort::freeQueues(void)
ACIPCPort::initialize(acipcPortParams *)
ACIPCPort::invokeAsync(void *)
ACIPCPort::invokeAsync(void *)
ACIPCPort::lockPort(bool)
ACIPCPort::manualDisablePort(void)
ACIPCPort::manualEnablePort(void)
ACIPCPort::notifyPortStateChange(int)
ACIPCPort::notifyPortStateChange(int)
ACIPCPort::portAction(acipcPortState)
ACIPCPort::portActionDone(acipcPortState)
ACIPCPort::portEnable(bool)
ACIPCPort::portEnabled(bool)
ACIPCPort::portSleep(void)
ACIPCPort::portWake(bool)
ACIPCPort::portWake(bool)
ACIPCPort::processCurrentPortAction(void)
ACIPCPort::reportError(acipcErrorType,void *,void *)
ACIPCPort::setupPort(void)
ACIPCPort::stateAsString(acipcPortState)
ACIPCPort::teardownPort(void)
ACIPCPort::terminate(void)
ACIPCPort::unlockPort(void)
ACIPCPort::~ACIPCPort()
ACIPCRTIDevice::cancelCoredump(void)
ACIPCRTIDevice::cancelMemoryMap(void)
ACIPCRTIDevice::cancelQuiesce(void)
ACIPCRTIDevice::cancelSnapshot(void)
ACIPCRTIDevice::cancelTimer(void)
ACIPCRTIDevice::cancelTimesync(void)
ACIPCRTIDevice::cancelTrap(void)
ACIPCRTIDevice::changeQuiesceState(acipcRTIQuiesceState)
ACIPCRTIDevice::changeSleepState(acipcRTISleepState)
ACIPCRTIDevice::changeState(acipcRTIState)
ACIPCRTIDevice::changeToError(void)
ACIPCRTIDevice::changeToInit(void)
ACIPCRTIDevice::changeToRecovery(void)
ACIPCRTIDevice::changeToRunning(void)
ACIPCRTIDevice::changeToUninit(void)
ACIPCRTIDevice::clearCROptFooter(uint,void const*)
ACIPCRTIDevice::clearTROptFooter(uint,void const*)
ACIPCRTIDevice::collectCoredump(acipcImage *)
ACIPCRTIDevice::deRegisterPipe(uint,ushort)
ACIPCRTIDevice::deviceActive(void)
ACIPCRTIDevice::deviceWakeAsync(void)
ACIPCRTIDevice::deviceWakeAsync(void)
ACIPCRTIDevice::engage(void)
ACIPCRTIDevice::enterDead(acipcErrorType,void *,void *)
ACIPCRTIDevice::enterLowPower(void)
ACIPCRTIDevice::exitLowPower(void)
ACIPCRTIDevice::getCRMem(uint,ulong long *,uint *)
ACIPCRTIDevice::getCapability(void)
ACIPCRTIDevice::getImageResponse(void)
ACIPCRTIDevice::getImageSize(void)
ACIPCRTIDevice::getMRBufMem(ulong long *,uint *)
ACIPCRTIDevice::getMRMem(ulong long *,uint *)
ACIPCRTIDevice::getStatus(void)
ACIPCRTIDevice::getTRMem(uint,ulong long *,uint *)
ACIPCRTIDevice::hostEnterQuiesce(void)
ACIPCRTIDevice::hostEnterQuiesce(void)
ACIPCRTIDevice::hostEnterSleep(void)
ACIPCRTIDevice::hostEnterSleep(void)
ACIPCRTIDevice::hostEnterSleepCompletion(void)
ACIPCRTIDevice::hostExitQuiesce(void)
ACIPCRTIDevice::hostExitQuiesce(void)
ACIPCRTIDevice::hostExitSleep(void)
ACIPCRTIDevice::hostExitSleep(void)
ACIPCRTIDevice::hostExitSleepCompletion(void)
ACIPCRTIDevice::initPipe(uint)
ACIPCRTIDevice::initPipe(uint)
ACIPCRTIDevice::ioCompletion(uint,uint,ushort,void *,uint,acipcRTICompletionStatus)
ACIPCRTIDevice::linkDown(acipcLinkState)
ACIPCRTIDevice::linkDown(acipcLinkState)
ACIPCRTIDevice::linkUp(ulong long,ulong long,uint,uint)
ACIPCRTIDevice::memoryMapMessageCompletion(acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::messageAllowed(void)
ACIPCRTIDevice::messageCompletion(acipcRTIMessagesStructure *,uint,acipcRTICompletionStatus)
ACIPCRTIDevice::peripheralWakeCheck(void)
ACIPCRTIDevice::prepareForMMIOCoredump(void)
ACIPCRTIDevice::printScanHostMems(void)
ACIPCRTIDevice::printScanHostMems(void)
ACIPCRTIDevice::processCD(acipcRTICD *,uint,void *)
ACIPCRTIDevice::processCompletionRing(uint,bool *)
ACIPCRTIDevice::processDeviceInfo(void)
ACIPCRTIDevice::processExecutionStageChange(acipcOLYBTDeviceBootStage)
ACIPCRTIDevice::processRecovery(void)
ACIPCRTIDevice::processRecovery(void)
ACIPCRTIDevice::processSleepNotification(acipcRTISleepState)
ACIPCRTIDevice::processSleepNotification(acipcRTISleepState)
ACIPCRTIDevice::queueMessage(acipcRTIMessagesStructure *)
ACIPCRTIDevice::quiesce(void)
ACIPCRTIDevice::quiesce(void)
ACIPCRTIDevice::quiesceActivityCompletion(acipcRTIMessageType,acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::quiesceActivityCompletion(acipcRTIMessageType,acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::quiesceCompletion(bool)
ACIPCRTIDevice::recoveryCheck(void)
ACIPCRTIDevice::registerPipe(uint,ACIPCRTIPipe *,uint,ushort)
ACIPCRTIDevice::sendMessage(acipcRTIMessagesStructure *)
ACIPCRTIDevice::sendTimesyncMessage(void)
ACIPCRTIDevice::sendTransfer(uint,uint,ushort,ulong long,acipcRTIPipeDirection,bool)
ACIPCRTIDevice::setupCR(void)
ACIPCRTIDevice::setupConfiguration(uint *)
ACIPCRTIDevice::setupConfiguration(uint *)
ACIPCRTIDevice::setupDevice(void)
ACIPCRTIDevice::setupMR(void)
ACIPCRTIDevice::setupMemory(void)
ACIPCRTIDevice::setupMemory(void)
ACIPCRTIDevice::setupMessage(acipcRTIMessageType,acipcRTIMessagesStructure *,ushort)
ACIPCRTIDevice::setupMessage(acipcRTIMessageType,acipcRTIMessagesStructure *,ushort)
ACIPCRTIDevice::shadowDoorbellCheck(void)
ACIPCRTIDevice::shadowDoorbellCheck(void)
ACIPCRTIDevice::shadowDoorbellFlush(ulong long)
ACIPCRTIDevice::shadowDoorbellProcess(void)
ACIPCRTIDevice::shadowDoorbellProcess(void)
ACIPCRTIDevice::shadowDoorbellRing(ushort,bool)
ACIPCRTIDevice::sleepStateAsString(acipcRTISleepState)
ACIPCRTIDevice::snapshotMessageCompletion(uint,acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::snapshotMessageCompletion(uint,acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::startTimer(ulong long,acipcRTIDeviceTimerMode,bool,void *)
ACIPCRTIDevice::startTimer(ulong long,acipcRTIDeviceTimerMode,bool,void *)
ACIPCRTIDevice::stateAsString(acipcRTIState)
ACIPCRTIDevice::stateDump(char *,uint *)
ACIPCRTIDevice::stateDump(char *,uint *)
ACIPCRTIDevice::teardownDevice(void)
ACIPCRTIDevice::terminate(void)
ACIPCRTIDevice::timer(void *)
ACIPCRTIDevice::timer(void *)
ACIPCRTIDevice::timerCallback(void *,void *)
ACIPCRTIDevice::timesyncCompletion(ulong long,uint,acipcRTIMessageCompletionStatus)
ACIPCRTIDevice::triggerError(void)
ACIPCRTIDevice::triggerError(void)
ACIPCRTIDevice::triggerRecovery(void)
ACIPCRTIDevice::triggerTrap(acipcTrapCompletionCall *)
ACIPCRTIDevice::unQuiesceCompletion(void)
ACIPCRTIDevice::unquiesce(void)
ACIPCRTIDevice::updateContextAddr(ulong long)
ACIPCRTIDevice::updateControl(uint)
ACIPCRTIDevice::updateDoorbell(ushort,uint,bool)
ACIPCRTIDevice::updateImageAddr(ulong long)
ACIPCRTIDevice::updateImageDoorbell(acipcOLYBTImageDoorbellValue)
ACIPCRTIDevice::updateImageSize(uint)
ACIPCRTIDevice::updateMSIAddress(ulong long)
ACIPCRTIDevice::updateMSIData(ushort)
ACIPCRTIDevice::updateWindowBase(ulong long)
ACIPCRTIDevice::updateWindowSize(uint)
ACIPCRTIPipe::abortPipe(acipcRTIMessage *)
ACIPCRTIPipe::abortPipeComplete(int)
ACIPCRTIPipe::callAsync(acipcRTIPipeAsyncMode,void *)
ACIPCRTIPipe::callAsyncCallback(void *,void *)
ACIPCRTIPipe::cancelAsync(acipcRTIPipeAsyncMode)
ACIPCRTIPipe::cancelIO(void)
ACIPCRTIPipe::cancelMessage(void)
ACIPCRTIPipe::changeState(acipcRTIPipeState)
ACIPCRTIPipe::checkCompletedIO(void)
ACIPCRTIPipe::checkCompletedIO(void)
ACIPCRTIPipe::checkPendingIO(void)
ACIPCRTIPipe::checkPendingMessage(void)
ACIPCRTIPipe::checkPendingMessage(void)
ACIPCRTIPipe::clearOptFooter(void const*)
ACIPCRTIPipe::closePipe(acipcRTIMessage *)
ACIPCRTIPipe::closePipeComplete(int)
ACIPCRTIPipe::completeIO(acipcIO *,uint,uint)
ACIPCRTIPipe::completeIO(acipcIO *,uint,uint)
ACIPCRTIPipe::enterError(acipcErrorType)
ACIPCRTIPipe::enterErrorCallback(void *,int)
ACIPCRTIPipe::enterErrorCompletion(int)
ACIPCRTIPipe::freeQueues(void)
ACIPCRTIPipe::freeQueues(void)
ACIPCRTIPipe::getRingMem(ulong long *,uint *)
ACIPCRTIPipe::invokeAsync(void *)
ACIPCRTIPipe::invokeAsync(void *)
ACIPCRTIPipe::ioCompletion(uint,bool *,void *,uint,acipcRTICompletionStatus)
ACIPCRTIPipe::ioCompletionReliable(uint)
ACIPCRTIPipe::ioTransfer(acipcIOQueue *,bool)
ACIPCRTIPipe::linkRecovery(void)
ACIPCRTIPipe::linkRecovery(void)
ACIPCRTIPipe::messageCompletion(acipcRTIMessageType,acipcRTIMessageCompletionStatus)
ACIPCRTIPipe::openPipe(acipcRTIMessage *)
ACIPCRTIPipe::openPipeComplete(int)
ACIPCRTIPipe::processCurrentMessage(int)
ACIPCRTIPipe::processCurrentMessage(int)
ACIPCRTIPipe::processTD(acipcRTITD *,void *,uint,acipcRTICompletionStatus)
ACIPCRTIPipe::queueMessage(acipcRTIMessage *)
ACIPCRTIPipe::queueTransfer(acipcIO *,acipcRTITD *)
ACIPCRTIPipe::sendTransfer(void)
ACIPCRTIPipe::setupMessage(acipcRTIMessageType,acipcRTIMessagesStructure *)
ACIPCRTIPipe::setupPipe(void)
ACIPCRTIPipe::setupTR(void)
ACIPCRTIPipe::stateAsString(acipcRTIPipeState)
ACIPCRTIPipe::teardownPipe(void)
ACIPCRTIPipe::terminate(void)
ACIPCRTIPipe::validateMessage(acipcRTIMessage *,int &)
ACIPCRTIPipe::~ACIPCRTIPipe()
ACMAccessoryCacheKernelService::MetaClass::alloc(void)
ACMAccessoryCacheKernelService::_loadAccCacheSize(void)
ACMAccessoryCacheKernelService::_loadFromPersistentStore(void)
ACMAccessoryCacheKernelService::_logCache(uchar,char const*)
ACMAccessoryCacheKernelService::_logHash(uchar,char const*,void const*,ulong)
ACMAccessoryCacheKernelService::_logRecord(uchar,char const*,ACMAccCacheRecord_v1 const*)
ACMAccessoryCacheKernelService::_onAdd(ACMControlRequestTRMAccessoryCache_Add const*)
ACMAccessoryCacheKernelService::_onCheck(ACMControlRequestTRMAccessoryCache_Check const*,ACMControlResponseTRMAccessoryCache_Check *)
ACMAccessoryCacheKernelService::_onClear(void)
ACMAccessoryCacheKernelService::_onRemove(ACMControlRequestTRMAccessoryCache_Remove const*,ACMControlResponseTRMAccessoryCache_Remove *)
ACMAccessoryCacheKernelService::_onStatus(ACMControlResponseTRMAccessoryCache_Status *)
ACMAccessoryCacheKernelService::_saveToPersistentStore(bool)
ACMAccessoryCacheKernelService::_searchRecords(void const*,ulong)
ACMAccessoryCacheKernelService::_shrinkToFit(void)
ACMAccessoryCacheKernelService::getActiveCount(uint *)
ACMAccessoryCacheKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMAccessoryCacheKernelService::onDaemonStarted(bool)
ACMAccessoryCacheKernelService::performKernelControlGated(uint,void const*,ulong,void *,uint *,ACMPerformCommandContext const*)
ACMAccessoryCacheKernelService::start(void)
ACMAccessoryCacheKernelService::~ACMAccessoryCacheKernelService()
ACMBridgeKernelService::_detectDFRPresence(void)
ACMBridgeKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMBridgeKernelService::performKernelControlGated(uint,void const*,ulong,void *,uint *,ACMPerformCommandContext const*)
ACMBridgeKernelService::processNotificationGated(KernelServiceNotification)
ACMBridgeKernelService::start(void)
ACMBridgeKernelService::stop(void)
ACMFirstResponderKernelService::_onGetCapabilities(ACMControlResponseGetCapabilities *)
ACMFirstResponderKernelService::free(void)
ACMFirstResponderKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMFirstResponderKernelService::performKernelControlGated(uint,void const*,ulong,void *,uint *,ACMPerformCommandContext const*)
ACMFirstResponderKernelService::start(void)
ACMFirstResponderKernelService::stop(void)
ACMKernControlDirect(uint,void const*,ulong,void *,ulong *)
ACMKernelService::_createActionTimer(void)
ACMKernelService::_createServiceTimer(void)
ACMKernelService::_onActionTimer(IOTimerEventSource *)
ACMKernelService::_onActionTimerHandler(IOTimerEventSource *)
ACMKernelService::_onActionTimerHandlerGated(ACMKernelService*,IOTimerEventSource *)
ACMKernelService::_onServiceTimerHandlerGated(ACMKernelService*,IOTimerEventSource *)
ACMKernelService::_queryKernelService(KernelService)
ACMKernelService::_resetServiceTimer(IOTimerEventSource *,uint)
ACMKernelService::_safeReleaseActionTimer(IOTimerEventSource **)
ACMKernelService::_triggerActionTimer(IOTimerEventSource *)
ACMKernelService::checkEntitlement(task *,char const*)
ACMKernelService::free(void)
ACMKernelService::init(ACMKernelService*(*)[7],IOService *,IOCommandGate *)
ACMKernelService::initValueFromBootArgAliasesUInt32(uchar,char const*,char const**,ulong,uint)
ACMKernelService::isProdFused(void)
ACMKernelService::performKernelControlGated(uint,void const*,ulong,void *,uint *,ACMPerformCommandContext const*)
ACMKernelService::start(void)
ACMKernelService::stop(void)
ACMKernelService::upTime(void)
ACMKernelService::upTimeMs(void)
ACMKeybagKernelService::_aksThreadCallHandler(void *)
ACMKeybagKernelService::_aksThreadCallHandlerGatedSelf(uchar,uint)
ACMKeybagKernelService::_currentDeviceStateFromDeviceKeybag(uchar *,uint *)
ACMKeybagKernelService::_dispatchEvents(void)
ACMKeybagKernelService::_enqueueEvent(ACMKeybagKernelService::Event)
ACMKeybagKernelService::_enqueueEventAndDispatchQueue(ACMKeybagKernelService::Event)
ACMKeybagKernelService::_onAKSLoaded(void)
ACMKeybagKernelService::_onActionTimer(IOTimerEventSource *)
ACMKeybagKernelService::_onDeviceLockStateChanged(uchar)
ACMKeybagKernelService::_onKeybagStateChanged(uint)
ACMKeybagKernelService::_onLockStateChanged(void *,uint,IOService *,void *,ulong)
ACMKeybagKernelService::_registerAKSNotifier(void)
ACMKeybagKernelService::addAKSLoadedNotificationHandler(void)
ACMKeybagKernelService::free(void)
ACMKeybagKernelService::handleAKSLoadedNotification(void *,IOService *)
ACMKeybagKernelService::handleAKSLoadedNotificationGated(ACMKeybagKernelService*,IOService *)
ACMKeybagKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMKeybagKernelService::start(void)
ACMKeybagKernelService::stop(void)
ACMP4BitStreams::ASBDFromDecoderConfig(DecoderConfigDescr const&,AudioStreamBasicDescription &)
ACMP4BitStreams::AddBitRatesToESDS(uchar *,uint,uint,uint,bool)
ACMP4BitStreams::BaseLevelASBDFromDecoderConfig(DecoderConfigDescr const&,AudioStreamBasicDescription &)
ACMP4BitStreams::BitRatesFromESDS(uchar const*,uint,uint *,uint *)
ACMP4BitStreams::CalculateChannelConfiguration(MP4AudioProgramConfig const&)
ACMP4BitStreams::DefaultPrimingFromDecoderConfig(DecoderConfigDescr const&,uint &)
ACMP4BitStreams::FramesPerPacketFromDecoderConfig(DecoderConfigDescr const&,uint)
ACMP4BitStreams::GetADTSPacketSize(uint const*,uint *)
ACMP4BitStreams::GetChannelConfigFromChannelLayoutTag(uint)
ACMP4BitStreams::GetChannelConfigFromNumChannels(uint)
ACMP4BitStreams::GetChannelLayoutTagFromDecoderConfig(DecoderConfigDescr const&,uint &)
ACMP4BitStreams::GetDecoderConfigFromADTSHeader(uint const*,uint *,DecoderConfigDescr &)
ACMP4BitStreams::GetDecoderConfigFromADTSHeaderAndPCE(uint const*,uint *,DecoderConfigDescr &,uint *)
ACMP4BitStreams::GetFormatFromDecoderConfig(DecoderConfigDescr const&)
ACMP4BitStreams::MakeStreamDescriptionFromDecoderConfig(DecoderConfigDescr const&,AudioStreamBasicDescription &,uint)
ACMP4BitStreams::ParseDecoderConfigBitStream(CABitStreamReader &,DecoderConfigDescr *)
ACMP4BitStreams::ParseESDSBitStream(CABitStreamReader &,MP4AudioESDS &,uint *)
ACMP4BitStreams::ParseProgramConfigBitStream(CABitStreamReader &,MP4AudioProgramConfig &)
ACMPersistentStoreKernelService::MetaClass::alloc(void)
ACMPersistentStoreKernelService::_copyToLockerMirror(ACMTRMPersistentPolicy const*,ACMAccCache_v1 const*,bool *)
ACMPersistentStoreKernelService::_findSlot(uint)
ACMPersistentStoreKernelService::_isLockerAvailable(void)
ACMPersistentStoreKernelService::_onServiceTimer(IOTimerEventSource *)
ACMPersistentStoreKernelService::_saveAll(void)
ACMPersistentStoreKernelService::getData(uint,void const**,ulong *)
ACMPersistentStoreKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMPersistentStoreKernelService::onDaemonStarted(void)
ACMPersistentStoreKernelService::setData(uint,void const*,ulong,bool)
ACMPersistentStoreKernelService::start(void)
ACMPersistentStoreKernelService::stop(void)
ACMPersistentStoreKernelService::~ACMPersistentStoreKernelService()
ACMRestrictedModeAnalyticsKernelService::_loadAnalytics(ACMTRMPersistentAnalytics *)
ACMRestrictedModeAnalyticsKernelService::_loadAnalyticsCollectionPeriod(void)
ACMRestrictedModeAnalyticsKernelService::_logAnalytics(uchar,char const*,ACMTRMPersistentAnalytics const*)
ACMRestrictedModeAnalyticsKernelService::_logAnalyticsData(uchar,ACMDRMDaemonNotificationAnalyticsCollected const*)
ACMRestrictedModeAnalyticsKernelService::_onServiceTimer(IOTimerEventSource *)
ACMRestrictedModeAnalyticsKernelService::_publishAndRestartAnalytics(void)
ACMRestrictedModeAnalyticsKernelService::_restartAnalytics(ulong long,ulong long,uint,ulong long,uint)
ACMRestrictedModeAnalyticsKernelService::_resumeState(bool)
ACMRestrictedModeAnalyticsKernelService::_saveAnalytics(char const*,ACMTRMPersistentAnalytics const*)
ACMRestrictedModeAnalyticsKernelService::enterRestrictedMode(void)
ACMRestrictedModeAnalyticsKernelService::enterRestrictedModePublished(void)
ACMRestrictedModeAnalyticsKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMRestrictedModeAnalyticsKernelService::leaveRestrictedMode(void)
ACMRestrictedModeAnalyticsKernelService::leaveRestrictedModePublished(void)
ACMRestrictedModeAnalyticsKernelService::notifyAIDResetBlocked(void)
ACMRestrictedModeAnalyticsKernelService::notifyBioLockoutWithCombinedSequence(bool)
ACMRestrictedModeAnalyticsKernelService::notifyBlockAIDResetBootArgChanged(uint)
ACMRestrictedModeAnalyticsKernelService::notifyDaemonStarted(void)
ACMRestrictedModeAnalyticsKernelService::notifyDeviceUnlocked(void)
ACMRestrictedModeAnalyticsKernelService::notifyGracePeriodTimeoutChanged(uint)
ACMRestrictedModeAnalyticsKernelService::notifySleepWake(uint)
ACMRestrictedModeAnalyticsKernelService::notifyStandardModeExpired(bool)
ACMRestrictedModeAnalyticsKernelService::notifyStandardModeTimeoutChanged(uint)
ACMRestrictedModeAnalyticsKernelService::notifyStandardModeTimerRestarted(void)
ACMRestrictedModeAnalyticsKernelService::notifyUnexpectedShutdownDetected(void)
ACMRestrictedModeAnalyticsKernelService::onDaemonStarted(void)
ACMRestrictedModeAnalyticsKernelService::saveAnalytics(void)
ACMRestrictedModeAnalyticsKernelService::start(void)
ACMRestrictedModeKernelService::ACMRestrictedModeKernelService(void)
ACMRestrictedModeKernelService::MetaClass::alloc(void)
ACMRestrictedModeKernelService::_aksThreadCallHandler(void *)
ACMRestrictedModeKernelService::_aksThreadCallHandlerGated(ACMRestrictedModeKernelService*,void *,void *)
ACMRestrictedModeKernelService::_aksThreadCallHandlerGatedSelf(uchar,uint)
ACMRestrictedModeKernelService::_bioThreadCallHandler(void *)
ACMRestrictedModeKernelService::_bioThreadCallHandlerGated(ACMRestrictedModeKernelService*,void *)
ACMRestrictedModeKernelService::_bioThreadCallHandlerGatedSelf(void *)
ACMRestrictedModeKernelService::_blockAIDReset(void)
ACMRestrictedModeKernelService::_configureGracePeriod(void)
ACMRestrictedModeKernelService::_consoleUsersThreadCallHandler(void *)
ACMRestrictedModeKernelService::_consoleUsersThreadCallHandlerGated(ACMRestrictedModeKernelService*,void *)
ACMRestrictedModeKernelService::_consoleUsersThreadCallHandlerGatedSelf(uchar)
ACMRestrictedModeKernelService::_currentDeviceStateFromConsoleUsers(uchar *)
ACMRestrictedModeKernelService::_currentDeviceStateFromDeviceKeybag(uchar *,uint *)
ACMRestrictedModeKernelService::_disableBy(ACMRestrictedModeKernelService::DisabledByBit,bool)
ACMRestrictedModeKernelService::_dispatchEvents(void)
ACMRestrictedModeKernelService::_enqueueEvent(ACMRestrictedModeKernelService::Event)
ACMRestrictedModeKernelService::_enqueueEventAndDispatchQueue(ACMRestrictedModeKernelService::Event)
ACMRestrictedModeKernelService::_loadConfig(void)
ACMRestrictedModeKernelService::_loadDisabledByOSEnvironment(void)
ACMRestrictedModeKernelService::_loadEnabledByDefault(void)
ACMRestrictedModeKernelService::_loadGracePeriodTimeout(void)
ACMRestrictedModeKernelService::_loadPolicy(ACMTRMPersistentPolicy *)
ACMRestrictedModeKernelService::_loadPolicyModeTimeout(void)
ACMRestrictedModeKernelService::_logConfig(uchar,char const*)
ACMRestrictedModeKernelService::_logPolicy(uchar,char const*,ACMTRMPersistentPolicy const*)
ACMRestrictedModeKernelService::_mapAndPublishTRM(uint const*,uchar const*,uint const*,uchar const*,bool const*)
ACMRestrictedModeKernelService::_onActionTimer(IOTimerEventSource *)
ACMRestrictedModeKernelService::_onBioDropReceived(ACMRestrictedModeKernelService::BioDropInfo)
ACMRestrictedModeKernelService::_onBioMessage(void *,uint,IOService *,void *,ulong)
ACMRestrictedModeKernelService::_onDaemonStarted(bool)
ACMRestrictedModeKernelService::_onDeviceDetached(void)
ACMRestrictedModeKernelService::_onDeviceLockStateChanged(uchar)
ACMRestrictedModeKernelService::_onEnablePolicy(uint,bool)
ACMRestrictedModeKernelService::_onEnterRestrictedMode(uint)
ACMRestrictedModeKernelService::_onEnvGet(ACMTRMEnvKey,uint *)
ACMRestrictedModeKernelService::_onEnvSet(ACMTRMEnvKey,uint)
ACMRestrictedModeKernelService::_onGetStatus(void *,uint *)
ACMRestrictedModeKernelService::_onGetStatusFlags(void *,uint *)
ACMRestrictedModeKernelService::_onKeybagStateChanged(uint)
ACMRestrictedModeKernelService::_onLockStateChanged(void *,uint,IOService *,void *,ulong)
ACMRestrictedModeKernelService::_onNotificationAcknowledged(char const*)
ACMRestrictedModeKernelService::_onServiceTimer(IOTimerEventSource *)
ACMRestrictedModeKernelService::_onSleepWake(void *,uint,IOService *,void *,ulong)
ACMRestrictedModeKernelService::_onTokenDropped(bool)
ACMRestrictedModeKernelService::_onTrustedDeviceAttached(void)
ACMRestrictedModeKernelService::_publish(char const*,uchar)
ACMRestrictedModeKernelService::_publishGracePeriodReason(uchar)
ACMRestrictedModeKernelService::_publishIOResource(char const*,uint)
ACMRestrictedModeKernelService::_publishIOResourceWithReason(uchar)
ACMRestrictedModeKernelService::_registerAKSNotifier(void)
ACMRestrictedModeKernelService::_registerBioNotifier(void)
ACMRestrictedModeKernelService::_restartGracePeriodTimerWithReason(uint)
ACMRestrictedModeKernelService::_restartStandardModeTimer(void)
ACMRestrictedModeKernelService::_resumeGracePeriodTimerWithReason(uint,uint)
ACMRestrictedModeKernelService::_resumeStandardModeTimer(uint)
ACMRestrictedModeKernelService::_resumeState(void)
ACMRestrictedModeKernelService::_saveConfig(char const*)
ACMRestrictedModeKernelService::_savePolicy(bool)
ACMRestrictedModeKernelService::_setStandardModeExpired(bool)
ACMRestrictedModeKernelService::_setStaticPolicyReason(uchar)
ACMRestrictedModeKernelService::_stopGracePeriodTimer(void)
ACMRestrictedModeKernelService::_stopStandardModeTimer(void)
ACMRestrictedModeKernelService::free(void)
ACMRestrictedModeKernelService::init(ACMKernelService *(*)[7],IOService *,IOCommandGate *)
ACMRestrictedModeKernelService::performKernelControlGated(uint,void const*,ulong,void *,uint *,ACMPerformCommandContext const*)
ACMRestrictedModeKernelService::processNotificationGated(KernelServiceNotification)
ACMRestrictedModeKernelService::start(void)
ACMRestrictedModeKernelService::stop(void)
ADTSHeader::Deserialize(uchar const*,uint)
AEARuntimeRegisterPatch::MetaClass::alloc(void)
AEARuntimeRegisterPatch::getPatchFromUser(OSArray *)
AEARuntimeRegisterPatch::~AEARuntimeRegisterPatch()
AEARuntimeRegisterPatchForI2C::AEARuntimeRegisterPatchForI2C(OSMetaClass const*)
AEARuntimeRegisterPatchForI2C::MetaClass::alloc(void)
AEARuntimeRegisterPatchForI2C::addRegisterPatch(RegisterPatch const&)
AEARuntimeRegisterPatchForI2C::free(void)
AEARuntimeRegisterPatchForI2C::init(void)
AEARuntimeRegisterPatchForI2C::patchRegister(uint,uint,uint &)
AEARuntimeRegisterPatchForI2C::reportPatchedRegistersToUser(OSArray *)
AEARuntimeRegisterPatchForI2C::resetAllRegisterPatch(void)
AEARuntimeRegisterPatchForI2C::searchPatchRegisterList(uint)
AFKAction::free(void)
AFKAsyncRequest::free(void)
AFKEndpointInterface::open(IOService *,void ( {block_pointer})(IOService *,AFKEndpointInterface*,void *,int,ulong long,void const*,ulong),void ( {block_pointer})(IOService *,AFKEndpointInterface*,uint,ulong long,void const*,ulong,uint),int ( {block_pointer})(IOService *,AFKEndpointInterface*,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint),uint)
AFKEndpointInterface::open(IOService *,void ( {block_pointer})(IOService *,AFKEndpointInterface*,void *,int,ulong long,void const*,ulong),void ( {block_pointer})(IOService *,AFKEndpointInterface*,uint,ulong long,void const*,ulong,uint),void ( {block_pointer})(IOService *,AFKEndpointInterface*,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint))
AFKEndpointInterfaceClient::handleCommand(AFKEndpointInterface *,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint)
AFKEndpointInterfaceClient::withClientInfo(IOService *,void ( {block_pointer})(IOService *,AFKEndpointInterface *,void *,int,ulong long,void const*,ulong),void ( {block_pointer})(IOService *,AFKEndpointInterface *,uint,ulong long,void const*,ulong,uint),int ( {block_pointer})(IOService *,AFKEndpointInterface *,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint))
AFKEndpointInterfaceClient::withClientInfo(IOService *,void ( {block_pointer})(IOService *,AFKEndpointInterface *,void *,int,ulong long,void const*,ulong),void ( {block_pointer})(IOService *,AFKEndpointInterface *,uint,ulong long,void const*,ulong,uint),void ( {block_pointer})(IOService *,AFKEndpointInterface *,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint))
AFKEndpointInterfaceUserClient::clientClose(void)
AFKEndpointInterfaceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AFKEndpointInterfaceUserClient::closeGated(void *,IOExternalMethodArguments *)
AFKEndpointInterfaceUserClient::enqueueCommand(uint,ulong long,void const*,ulong,ulong,AFKEndpointInterfaceUserClient::AsyncContext *,uint)
AFKEndpointInterfaceUserClient::enqueueReport(uint,ulong long,void const*,ulong,uint)
AFKEndpointInterfaceUserClient::enqueueResponse(void *,int,ulong long,void const*,ulong)
AFKEndpointInterfaceUserClient::extSessionMethod(OSObject *,void *,IOExternalMethodArguments *)
AFKEndpointInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AFKEndpointInterfaceUserClient::free(void)
AFKEndpointInterfaceUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
AFKEndpointInterfaceUserClient::registerNotificationPortGated(ipc_port *)
AFKEndpointInterfaceUserClient::serializeDebugState(void *,OSSerialize *)
AFKEndpointInterfaceUserClient::setProperties(OSObject *)
AFKEndpointInterfaceUserClient__initWithTask_task___void___unsigned_int
AFKEndpointInterfaceUserClient__start_IOService
AFKEndpointInterfaceUserClient__stop_IOService
AFKFirmwareService__image4Tag
AFKIOServiceClient::copyProperty_rpc(AFKEndpointInterface::CommandContext *,AFK_iovec *,ulong)
AFKIOServiceClient::free(void)
AFKIOServiceClient::handleReport(uint,ulong long,AFK_iovec *,ulong,uint)
AFKIOServiceClient::setProperty_rpc(AFKEndpointInterface::CommandContext *,AFK_iovec *,ulong)
AFKIOServiceClientBase::didTerminate(IOService *,uint,bool *)
AFKIOServiceClientBase::enqueueResponse(AFKEndpointInterface::CommandContext *,int,ulong long,AFK_iovec *,ulong,uint)
AFKIOServiceClientBase::free(void)
AFKIOServiceClientBase::handleCommand(AFKEndpointInterface::CommandContext *,uint,ulong long,AFK_iovec *,ulong,uint)
AFKIOServiceClientBase::handleCommandInternal(AFKEndpointInterface *,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint)
AFKIOServiceClientBase::serializeDebugState(void *,OSSerialize *)
AFKMailboxEndpoint::free(void)
AFKMailboxEndpoint::handleStart(IOService *)
AFKMailboxEndpoint::serializeDebugState(void *,OSSerialize *)
AFKMailboxEndpoint::stateMachineInit(SMMachine *)
AFKMailboxEndpointBase::_asyncMessage(void *,void *)
AFKMailboxEndpointBase::_incomingMsgAction(ulong long)
AFKMailboxEndpointBase::_initForPM(void)
AFKMailboxEndpointBase::_smInit(void)
AFKMailboxEndpointBase::close(IOService *,uint)
AFKMailboxEndpointBase::enqueueMessage(uint,uint,AFK_iovec const*,ulong)
AFKMailboxEndpointBase::free(void)
AFKMailboxEndpointBase::handleClose(IOService *,uint)
AFKMailboxEndpointBase::handleIsOpen(IOService const*)
AFKMailboxEndpointBase::init(OSDictionary *)
AFKMailboxEndpointBase::open(IOService *,uint,void *)
AFKMailboxEndpointBase::serializeDebugState(void *,OSSerialize *)
AFKMailboxEndpointInterface::MetaClass::alloc(void)
AFKMailboxEndpointInterface::_abortRxCommand(void)
AFKMailboxEndpointInterface::_commandForContext(void *)
AFKMailboxEndpointInterface::_commandForSubPacket(_IOPSubPacketHeader const*)
AFKMailboxEndpointInterface::_enqueueReportGated(AFKMailboxEndpointInterface::DispatchReportParams *)
AFKMailboxEndpointInterface::_getEPICForIOService(IOService const*)
AFKMailboxEndpointInterface::_handleCommandSubPacket(_IOPSubPacketHeader const*,uchar const*,ulong)
AFKMailboxEndpointInterface::_prepareOOLBuffer(IOSlaveMemory **,uchar const*,ulong)
AFKMailboxEndpointInterface::abortCommand(void *)
AFKMailboxEndpointInterface::attemptAsyncRequests(void)
AFKMailboxEndpointInterface::close(IOService *,uint)
AFKMailboxEndpointInterface::didTerminate(IOService *,uint,bool *)
AFKMailboxEndpointInterface::enqueueAsyncRequest(void ( {block_pointer})(bool),uint)
AFKMailboxEndpointInterface::free(void)
AFKMailboxEndpointInterface::handleIsOpen(IOService const*)
AFKMailboxEndpointInterface::message(uint,IOService *,void *)
AFKMailboxEndpointInterface::newUserClient(task *,void *,uint,IOUserClient **)
AFKMailboxEndpointInterface::open(IOService *,void ( {block_pointer})(IOService *,AFKEndpointInterface *,void *,int,ulong long,void const*,ulong),void ( {block_pointer})(IOService *,AFKEndpointInterface *,uint,ulong long,void const*,ulong,uint),void ( {block_pointer})(IOService *,AFKEndpointInterface *,AFKEndpointInterface::CommandContext *,uint,ulong long,void const*,ulong,uint))
AFKMailboxEndpointInterface::processAsyncRequestsGated(void)
AFKMailboxEndpointInterface::serializeDebugState(void *,OSSerialize *)
AFKMailboxEndpointInterface::terminateInterfaceThreadCall(IOService *,thread_call *)
AFKMailboxEndpointInterface::willTerminate(IOService *,uint)
AFKMailboxEndpointInterface::~AFKMailboxEndpointInterface()
AFKMailboxEndpointInterface__fn_0x558
AFKMailboxEndpointInterface__fn_0x560
AFKMailboxEndpointInterface__handleClose_IOService___unsigned_int
AFKMailboxEndpointInterface__handleOpen_IOService___unsigned_int__void
AFKMailboxEndpointInterface__setPowerState_unsigned_long__IOService
AFKMailboxEndpointInterface__setProperty_OSSymbol_const___OSObject
AFKMailboxEndpointInterface__stop_IOService
AFKMailboxEndpoint__fn_0x540
AFKMailboxEndpoint__fn_0x570
AFKMailboxEndpoint__handleOpen_IOService___unsigned_int__void
AFKMailboxEndpoint__setPowerState_unsigned_long__IOService
AFKMailboxEndpoint__stop_IOService
AFKMailboxSharedMemoryEndpoint::_handleTxQueue(uint *)
AFKMailboxSharedMemoryEndpoint::free(void)
AFKMailboxSharedMemoryEndpoint::handleStart(IOService *)
AFKMailboxSharedMemoryEndpoint::init(OSDictionary *)
AFKMailboxSharedMemoryEndpoint::serializeDebugState(void *,OSSerialize *)
AFKMailboxSharedMemoryEndpoint::stateMachineInit(SMMachine *)
AFKMailboxSharedMemoryEndpointInterface::_handleIOPPacket(uchar const*,ulong)
AFKMailboxSharedMemoryEndpoint__open_IOService___unsigned_int__void
AFKMailboxSharedMemoryEndpoint__open_IOService___unsigned_int__void_0
AFKRemoteMemoryDescriptorAllocator::didTerminate(IOService *,uint,bool *)
AFKRemoteMemoryDescriptorAllocator::free(void)
AFKRemoteMemoryDescriptorAllocator::serializeDebugState(void *,OSSerialize *)
AFKRemoteMemoryDescriptorAllocator::stop(IOService *)
AFKRemoteMemoryDescriptorAllocator__setPowerState_unsigned_long__IOService
AFKRemoteMemoryDescriptorAllocator__start_IOService
AFKRemoteSMCClient::handleService(IOService *)
AFKSharedDataQueue::enqueue(uint,void ( {block_pointer})(void *,ulong))
AFKSharedDataQueue::serialize(OSSerialize *)
AFKSharedDataQueue::withCapacity(uint)
AGMConfigManager::executeSequenceMember(AppleARMFunction *,OSObject *,OSObject *,OSObject *)::ValueWrap::ValueWrap(OSObject *)
AGMConfigManager::extract32Bit(OSDictionary *,char const*,uint &)
AGMConfigManager::extract8Bit(OSDictionary *,char const*,uchar &)
AGMFemtoHIDSPI::AckPacket::~AckPacket()
AGMFemtoHIDSPI::HIDPacket::HIDPacket(AGMFemtoHIDSPI::HIDPacket::Type,uchar,AGMFemtoHIDSPI::HIDPacket::Status,uchar,ulong,void const*,ulong)
AGMFemtoHIDSPI::HIDPacket::type(void)
AGMFemtoHIDSPI::HIDPacket::~HIDPacket()
AGMFemtoHIDSPI::LLPacket::computeCRC(void)
AGMFemtoHIDSPI::LLPacket::type(void)
AGMFemtoHIDSPI::LLPacket::~LLPacket()
AGMFemtoHIDSPI::createLLPacket(AGMFemtoHIDSPI::LLPacket &,AGMFemtoHIDSPI::LLPacket::Type,uchar,void const*,ulong)
AGMFemtoHIDSPI::~AGMFemtoHIDSPI()
AGX3DChannel::encodeOptimized3DCommandSKUStream(AGFIChannelCommand3D *,AGX3DCommandDescriptor *,ulong long,IOGPUEvent const*)
AGX3DChannel::encodeOptimizedFastBlitSKUStream(AGFIChannelCommandFastBlit *,AGX3DCommandDescriptor *,ulong long,IOGPUEvent const*)
AGX3DChannel::init(AGXCommandQueue const*,AGXWorkQueue *,int,int,ulong long)
AGX3DChannelG12::generateFrgBarrierRegister(AGX3DCommandDescriptor *,bool,uint *)
AGX3DCommandDescriptor::MetaClass::alloc(void)
AGX3DCommandDescriptor::init(IOGPU *,IOGPUCommandQueue *,IOGPUTask *,ulong long,AGXDebugBufferShmem *)
AGX3DCommandDescriptor::load3DFields(AGX3DCommandRec *)
AGX3DCommandDescriptor::loadCommandBufferData(AGXCommandBuffer *)
AGX3DCommandDescriptor::loadCommon3DFields(AGX3DCommandCommonRec *)
AGX3DCommandDescriptor::loadFastRenderTargetData(AGXFastRenderTarget *)
AGX3DCommandDescriptor::loadParameterManagementData(AGXParameterManagement *)
AGX3DCommandDescriptor::loadRenderCommonFields(AGXRenderCommandCommonRec *)
AGX3DCommandDescriptor::loadRenderTargetMemoryData(AGXRenderTargetMemory *)
AGX3DCommandDescriptor::parseAndValidateSidebandBuffer(AGXFastRenderCommandRec *)
AGX3DCommandDescriptor::parseAndValidateSidebandBuffer(AGXRenderCommandRec *)
AGX3DCommandDescriptor::~AGX3DCommandDescriptor()
AGX3DWorkQueue::alloc3DChannel(ulong long)
AGX3DWorkQueue::allocParameterManagement(AGXShared *,AGXCommandQueuePMConfig *)
AGX3DWorkQueue::allocTAChannel(ulong long)
AGX3DWorkQueue::finalize(void)
AGX3DWorkQueue::free(void)
AGX3DWorkQueue::resetChannelState(void)
AGX3DWorkQueue::scrubEvents(void)
AGX3DWorkQueue::shareParameterManagement(AGXParameterManagement *)
AGX3DWorkQueue::submitCommand(IOGPUCommandDescriptor *)
AGX3DWorkQueue::submitForFenceComplete(AGXIOFenceData *)
AGXAccelerator::acceleratorDidLock(char const*,int)
AGXAccelerator::acceleratorWillUnlock(char const*,int)
AGXAccelerator::calcMaxGPUPhysicalMemoryBytes(ulong long)
AGXAccelerator::checkIdlePowerTimer(void)
AGXAccelerator::checkSystemSleep(void)
AGXAccelerator::copyProperty(OSString const*)
AGXAccelerator::createBufferMemoryDescriptorInTaskWithOptions(task *,uint,ulong,ulong)
AGXAccelerator::createKernelGPUTask(void)
AGXAccelerator::createUserGPUTask(task *)
AGXAccelerator::ctxSwitchTelemetryEvent(IOInterruptEventSource *,int)
AGXAccelerator::drainCommandsTimer(void)
AGXAccelerator::enableInterrupts(bool)
AGXAccelerator::enableSleepInterrupt(bool)
AGXAccelerator::formatStartMessage(char *,uint)
AGXAccelerator::getEnabledNumUSCs(void)
AGXAccelerator::getFWKextMatchingDictionary(void)
AGXAccelerator::getGPTBATBase(void)
AGXAccelerator::getGPTBATDesc(void)
AGXAccelerator::getGPTBATMap(void)
AGXAccelerator::getGPTBATPtr(void)
AGXAccelerator::getIndirectMaxVal(AGXIndirectRegisterType,bool *,AGXBitmap<80u> *)
AGXAccelerator::getMaxResourceSizeForTask(IOGPUTask *)
AGXAccelerator::getPropertyAbsTimeOffset(void)
AGXAccelerator::getPropertyCLTMPerfMax(void)
AGXAccelerator::getPropertyGPUAccumulatedEnergy(void)
AGXAccelerator::getPropertyGPUMaxPower(void)
AGXAccelerator::getPropertyGPUMtrMaxOverallTemp(void)
AGXAccelerator::getPropertyGPUUtilization(void)
AGXAccelerator::getPropertyMaxGPUAbsolutePower(void)
AGXAccelerator::getPropertyMaxGPUUtilization(void)
AGXAccelerator::getPropertyPPMGPUPowerMax(void)
AGXAccelerator::getPropertyPPMPerfMax(void)
AGXAccelerator::getPropertyPerfCtrPartitionInfoList(void)
AGXAccelerator::halGetDefaultParameterBufferSizeMax(ulong long)
AGXAccelerator::handleFWLogging(IOInterruptEventSource *)
AGXAccelerator::handleInterrupt(IOInterruptEventSource *,int)
AGXAccelerator::idleParameterEvent(IOInterruptEventSource *,int)
AGXAccelerator::idleStaticPowerOffTimerStart(bool)
AGXAccelerator::idleStaticPowerOffTimerStop(void)
AGXAccelerator::invalidateGPUTTBACache(uint,uint)
AGXAccelerator::issueDSB(void)
AGXAccelerator::issueTLBI(uint,ulong long,ulong long)
AGXAccelerator::newMemoryMap(void)
AGXAccelerator::newStatistics(void)
AGXAccelerator::notifyFirmware(void)
AGXAccelerator::populateDPEPPTConfigData(AGFDPEPPTConfigData *)
AGXAccelerator::populatePowerEstimationConfigData(uint)
AGXAccelerator::populatePowerEstimationConfigDataPreG5(void)
AGXAccelerator::populateSoCHotConfigData(AGXSoCHotConfig *)
AGXAccelerator::removeParameterManager(AGXParameterManagement *)
AGXAccelerator::retainWorkQueueForStampIndex(int)
AGXAccelerator::setPropertyCLPCDeadlineControlEffort(OSDictionary *,OSObject *)
AGXAccelerator::signalChannelsUpdated(void)
AGXAccelerator::sleepWakeNotification(void *,void *,uint,IOService *,void *,ulong)
AGXAccelerator::submit3DChannel(AGXChannel *,uint)
AGXAccelerator::submitCLChannel(AGXChannel *,uint)
AGXAccelerator::submitCommandToFirmware(AGXWorkQueue *,AGXChannel *,AGXCommandDescriptor *)
AGXAccelerator::submitDeviceControl(AGFIAcceleratorRingEntry *,uint *,uint *)
AGXAccelerator::submitTAChannel(AGXChannel *,uint)
AGXAccelerator::systemWillShutdown(uint)
AGXAccelerator::timestamp_event(IOInterruptEventSource *,int)
AGXAccelerator::updateDisplayPMParams(ulong long *,ulong long *)
AGXAcceleratorG12::agxGIN264CheckForceEnable(AGXWalkOrder,uint)
AGXAcceleratorG12::dePrioritizeHWDSID(uchar)
AGXAcceleratorG12::ensurePoweredHardware(bool)
AGXAcceleratorG12::halGetDefaultParameterBufferSizeMin(void)
AGXAcceleratorG12::halGetPMConfig(void)
AGXAcceleratorG12::halNewFenderController(void)
AGXAcceleratorG12::isHWDSIDAvailable(uchar)
AGXAcceleratorG12::new3DChannel(void)
AGXAcceleratorG12::newCLChannel(void)
AGXAcceleratorG12::newTAChannel(void)
AGXAcceleratorG12::requestFirmwareBinary(IOService *,uchar const**,ulong *)
AGXAcceleratorG12::start(IOService *)
AGXAcceleratorG12P_A0__fn_0x880
AGXAcceleratorG12P_A0__fn_0x880_0
AGXAcceleratorG12__fn_0x740
AGXAcceleratorG12__fn_0x880
AGXAcceleratorG12__fn_0x930
AGXAcceleratorG14::enumerateHardwareMappings(void (*)(AGXAccelerator *,AGXMemoryMap *,char const*,void *),void *)
AGXAcceleratorG14::getDPEACDthrInfo(AGFDPEPPTInfo *,ushort,ulong long)
AGXAcceleratorG14::getDPEDCDthrInfo(AGFDPEPPTInfo *,ushort,ulong long)
AGXAcceleratorG14::halNewSecureMonitor(void)
AGXAcceleratorG14::halPopulateAccelConfig(IOGPUConfig *)
AGXAcceleratorG14::releaseHardwareMappings(void)
AGXAcceleratorG14::~AGXAcceleratorG14()
AGXAllocation::MetaClass::alloc(void)
AGXAllocation::~AGXAllocation()
AGXAllocationList2::free(void)
AGXArmFirmware::blockForRingEmpty(uint)
AGXArmFirmware::changePowerStateTo(ulong)
AGXArmFirmware::checkGPUProgress(void)
AGXArmFirmware::completeFirmwareData(void)
AGXArmFirmware::completePIOGPUMappings(void)
AGXArmFirmware::contextSwitchHistogramCommand(_AGFIDataMasterType,AGFICtxSwitchHistogramCommandType)
AGXArmFirmware::describeDriverAllocations(IOGPUAllocationInfo *)
AGXArmFirmware::dumpFirmwareRegisters(bool)
AGXArmFirmware::enableCommandSubmission(void)
AGXArmFirmware::freeFirmwareData(void)
AGXArmFirmware::getDMContextSwitchTimeBoundaries(_AGFIDataMasterType)
AGXArmFirmware::getFSTPOverrideMask(_AGFIDataMasterType,bool)
AGXArmFirmware::getGPUAccumulatedEnergy(void)
AGXArmFirmware::getMCacheRegistersBaseAddress(void)
AGXArmFirmware::getPerformanceBoostModeCEStep(void)
AGXArmFirmware::getPerformanceBoostModeMinUtil(void)
AGXArmFirmware::getPerformanceControllerDualFilter(void)
AGXArmFirmware::getPerformanceControllerIntegralGain(int)
AGXArmFirmware::getPerformanceControllerProportionalGain(int)
AGXArmFirmware::getPerformanceControllerResetIters(void)
AGXArmFirmware::getPerformanceControllerTimeFilterConstant(int)
AGXArmFirmware::getPowerCounterDictionary(void)
AGXArmFirmware::getPowerZoneFilterTimeConstantData(void)
AGXArmFirmware::getPowerZoneTargetData(void)
AGXArmFirmware::getPowerZoneTargetoffsetData(void)
AGXArmFirmware::gpuPerfStateToConsistentPerfStateLevel(uint)
AGXArmFirmware::init(AGXAccelerator *)
AGXArmFirmware::initSoftFaultSettings(bool)
AGXArmFirmware::initializePowerZones(void)
AGXArmFirmware::isFenderPowerTransitionInProgress(void)
AGXArmFirmware::isGPUCorePowerEnabled(void)
AGXArmFirmware::joinPMPowerManagement(IOService *,IOService *)
AGXArmFirmware::kickFirmware(void)
AGXArmFirmware::loadFirmwareBinary(uchar const*,uint,uint)
AGXArmFirmware::notifyFirmwareStarted(void)
AGXArmFirmware::notifyNewUnmapping(ulong long,ulong long,uint)
AGXArmFirmware::prepareFirmwareForBoot(void)
AGXArmFirmware::preparePIOGPUMappings(void)
AGXArmFirmware::recomputeGPUDPEPPTValues(ulong long)
AGXArmFirmware::setDPEACDshft(ushort,ulong long)
AGXArmFirmware::setDPEACDthr(ushort,ulong long)
AGXArmFirmware::setDPEACWin(ushort,ulong long)
AGXArmFirmware::setDPEBudget(ushort,ulong long)
AGXArmFirmware::setDPEDCDshft(ushort,ulong long)
AGXArmFirmware::setDPEDCDthr(ushort,ulong long)
AGXArmFirmware::setDPEImaxBudget(ushort,ulong long)
AGXArmFirmware::setDPEImaxDshft(ushort,ulong long)
AGXArmFirmware::setDPEImaxDthr(ushort,ulong long)
AGXArmFirmware::setDPEImaxPredBudget(ushort,ulong long)
AGXArmFirmware::setDPEImaxPredTrigThresh(ushort,ushort,ulong long)
AGXArmFirmware::setDPEImaxPredWin1(ushort,ulong long)
AGXArmFirmware::setDPEImaxPredWin2(ushort,ulong long)
AGXArmFirmware::setDPEImaxReactBudget(ushort,ulong long)
AGXArmFirmware::setDPEImaxReactTrigThresh(ushort,ushort,ulong long)
AGXArmFirmware::setDPEImaxReactWin1(ushort,ulong long)
AGXArmFirmware::setDPEImaxReactWin2(ushort,ulong long)
AGXArmFirmware::setDPEImaxWin1(ushort,ulong long)
AGXArmFirmware::setDPEImaxWin2(ushort,ulong long)
AGXArmFirmware::setFWEarlyWakeTimeout(uint,uint)
AGXArmFirmware::setFenderIdleOffDelay(uint,uint)
AGXArmFirmware::setFenderPowerEnabled(bool)
AGXArmFirmware::setFenderPowerTransitionInProgress(bool)
AGXArmFirmware::setFwUtilDebouncePeriods(ulong long)
AGXArmFirmware::setFwUtilDefaultFabPState(ulong long)
AGXArmFirmware::setFwUtilPStateStepSize(ulong long)
AGXArmFirmware::setFwUtilPStateThreshold(ulong long)
AGXArmFirmware::setGFXDeviceBusy(bool)
AGXArmFirmware::setGPUIdleOffDelay(uint,uint)
AGXArmFirmware::setInitReg32(ushort,uint,uchar)
AGXArmFirmware::setInitReg64(ushort,ulong long,uchar)
AGXArmFirmware::setInitReg64PA(ushort,ulong long,uint,uchar)
AGXArmFirmware::setPerformanceControllerDualFilter(bool)
AGXArmFirmware::setPerformanceControllerIntegralGain(float,int)
AGXArmFirmware::setPerformanceControllerProportionalGain(float,int)
AGXArmFirmware::setPerformanceControllerTarget(uint)
AGXArmFirmware::setPerformanceControllerTimeFilterConstant(uint,int)
AGXArmFirmware::setPerformanceControllerTransferOutput(uint)
AGXArmFirmware::setupMMUConfig(void)
AGXArmFirmware::setupPowerZoneConfig(void)
AGXArmFirmware::stopFirmware(void)
AGXArmFirmware::submit3DChannel(AGXChannel *,uint,uint,uint)
AGXArmFirmware::submitCLChannel(AGXChannel *,uint,uint,uint)
AGXArmFirmware::submitDeviceControl(AGFIAcceleratorRingEntry *,uint,uint *)
AGXArmFirmware::submitTAChannel(AGXChannel *,uint,uint,uint)
AGXArmFirmware::updateDPEPPT(OSDictionary *)
AGXArmFirmware::updateLifetimeServoTempTarget(uint)
AGXArmFirmware::updateSoftFaultSettings(bool)
AGXArmFirmware::validatePIOConfig(AGXFWPIORegion const*)
AGXArmFirmwareChinookCommon::MetaClass::alloc(void)
AGXArmFirmwareChinookCommon::~AGXArmFirmwareChinookCommon()
AGXArmFirmwareMapper::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AGXArmFirmwareMapper::iovmInsert(uint,ulong long,ulong long,ulong long,ulong long)
AGXArmFirmwareMapper::mapToPhysicalAddress(ulong long)
AGXArmFirmwareMapper__start_IOService
AGXArmFirmware__receivedMessageFromAKF_unsigned_long_long
AGXBlockFence::free(void)
AGXBlockFence::getHostTime(ulong long *,ulong long *)
AGXBlockFence::init(IOGPU *,IOGPUCommandQueue *,IOGPUBlockFencePort *,ulong long,ulong long)
AGXCLChannel::encodeOptimizedCLCommandSKUStream(AGFIChannelCommandCL *,AGXCLCommandDescriptor *,ulong long,IOGPUEvent const*)
AGXCLChannel::init(AGXCommandQueue const*,AGXWorkQueue *,int,int,ulong long)
AGXCLChannelG12::encodeComputeWFI(void)
AGXCLChannelG12::generateRegisterList(AGFIChannelCommandCL *,AGXCLCommandDescriptor *)
AGXCLCommandDescriptor::MetaClass::alloc(void)
AGXCLCommandDescriptor::init(IOGPU *,IOGPUCommandQueue *,IOGPUTask *,ulong long,AGXDebugBufferShmem *)
AGXCLCommandDescriptor::loadCommandBufferData(AGXCommandBuffer *)
AGXCLCommandDescriptor::parseAndValidateSidebandBuffer(AGXComputeCommandRec *,bool)
AGXCLCommandDescriptor::~AGXCLCommandDescriptor()
AGXCLWorkQueue::allocCLChannel(ulong long)
AGXCLWorkQueue::finalize(void)
AGXCLWorkQueue::resetChannelState(void)
AGXCLWorkQueue::scrubEvents(void)
AGXCLWorkQueue::submitCommand(IOGPUCommandDescriptor *)
AGXCLWorkQueue::submitForFenceComplete(AGXIOFenceData *)
AGXChannel::complete(void)
AGXChannel::free(void)
AGXChannel::prepare(void)
AGXChannel::resetChannelState(void)
AGXChannel::setPriority(eAGXContextPriorityType,uint,eIOGPUCommandQueueQosLevel)
AGXChannel::writeChannelCommandPointer(ulong long,AGFIChannelCommandType *)
AGXCommandBuffer::MetaClass::alloc(void)
AGXCommandBuffer::complete(void)
AGXCommandBuffer::describeDriverAllocations(IOGPUAllocationInfo *)
AGXCommandBuffer::free(void)
AGXCommandBuffer::prepare(void)
AGXCommandBuffer::scrubEvents(void)
AGXCommandBuffer::~AGXCommandBuffer()
AGXCommandDescriptor::completeRemoteNodeCommands(void)
AGXCommandDescriptor::free(void)
AGXCommandDescriptor::init(IOGPU *,IOGPUCommandQueue *,IOGPUTask *,ulong long,AGXDebugBufferShmem *)
AGXCommandDescriptor::nopCommand(void)
AGXCommandQueue::MetaClass::alloc(void)
AGXCommandQueue::bindFastBlitResourcesToFRGChannel(AGX3DCommandDescriptor *,AGXAllocationList2 *,IOGPUEvent *)
AGXCommandQueue::bindResourcesToCLChannel(AGXCLCommandDescriptor *,AGXAllocationList2 *,IOGPUEvent *)
AGXCommandQueue::bindResourcesToFRGChannel(AGX3DCommandDescriptor *,AGXAllocationList2 *)
AGXCommandQueue::bindResourcesToGTPChannel(AGX3DCommandDescriptor *,AGXAllocationList2 *)
AGXCommandQueue::clientRelease(void)
AGXCommandQueue::describeDriverAllocations(IOGPUAllocationInfo *)
AGXCommandQueue::generateFRGBarrierEvent(AGXAllocationList2 *,IOGPUEvent *,IOGPUEvent *,ulong long,IOGPUEvent *,bool)
AGXCommandQueue::generateMTLFenceFRGBarrierEvent(AGXUserFenceListHeader const&,ulong,IOGPUEvent *,ulong long)
AGXCommandQueue::generateMTLFenceFastBlitBarrierEvent(AGXUserFenceListHeader const&,ulong,IOGPUEvent *,IOGPUEvent *,ulong long)
AGXCommandQueue::generateMTLFenceGTPBarrierEvent(AGXUserFenceListHeader const&,ulong,IOGPUEvent *,AGXPreparseBarrierState *,ulong long)
AGXCommandQueue::parseSegmentList(IOGPUDevice *,IOGPUSegmentResourceListHeader const*,IOGPUDeviceShmem *)
AGXCommandQueue::scrubEvents(void)
AGXCommandQueue::setCurrentDebugBufferShmem(IOGPUDeviceShmem *)
AGXCommandQueue::setupChannelAndCmdForLateEvalEvent(AGXChannel *,AGXCommandDescriptor *)
AGXCommandQueue::stripExternalBarriers(IOGPUEvent *,IOGPUEvent *)
AGXCommandQueue::~AGXCommandQueue()
AGXCommandQueuePMConfig::init(AGXAccelerator *)
AGXContextIDManager::alloc(AGXGart *,int,_AGXGartContextIDSelect,uchar *)
AGXContextIDManager::dealloc(AGXGart *)
AGXContextIDManager::release(void)
AGXContextIDManager::reset(void)
AGXDeviceUserClient::MetaClass::alloc(void)
AGXDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AGXDeviceUserClient::getDeviceConfig(AGXGPUCoreConfig *)
AGXDeviceUserClient::getDeviceInfo(AGXDeviceInfo *)
AGXDeviceUserClient::getDriverInfo(AGXDriverInfo *)
AGXDeviceUserClient::getTargetAndMethodForIndex(IOService **,uint)
AGXDeviceUserClient::s_set_command_queue_config(AGXDeviceUserClient*,void *,IOExternalMethodArguments *)
AGXDeviceUserClient::set_display_params_for_gpu(ulong long,ulong long)
AGXEventMachine::MetaClass::alloc(void)
AGXEventMachine::forceCompleteStamp(int,uint)
AGXEventMachine::~AGXEventMachine()
AGXEventMachine__writeBarrierElement_vendevtBarrierRec___int__unsigned_int__const
AGXFastRenderTargetG12::halComputeGeometry(void)
AGXFastRenderTargetG4P_B0::halValidateInput(AGXFastRenderTargetInfoRec *)
AGXFirmware::AGXFirmware(OSMetaClass const*)
AGXFirmware::completeFirmwareData(void)
AGXFirmware::configurePoolElementSizes(void)
AGXFirmware::createFWGPUMapping(IOMemoryDescriptor *,bool,eGartRange)
AGXFirmware::createFWPIOMapping(ulong long const*,uint,uint *,bool,uint)
AGXFirmware::describeDriverAllocations(IOGPUAllocationInfo *)
AGXFirmware::drainFirmwareTraceRing(void)
AGXFirmware::enableSleepInterrupt(bool)
AGXFirmware::free(void)
AGXFirmware::freeFirmwareData(void)
AGXFirmware::freeFirmwareObjects(void)
AGXFirmware::handleLogging(void)
AGXFirmware::prepareFirmwareData(void)
AGXFirmware::requestChannelCommand3D(ulong long *)
AGXFirmware::requestChannelCommandBarrier(ulong long *)
AGXFirmware::requestChannelCommandCL(ulong long *)
AGXFirmware::requestChannelCommandFastBlit(ulong long *)
AGXFirmware::requestChannelCommandPMGrow(ulong long *)
AGXFirmware::requestChannelCommandPMRebuild(ulong long *)
AGXFirmware::requestChannelCommandRemoteNode(ulong long *)
AGXFirmware::requestChannelCommandTA(ulong long *)
AGXFirmware::scrubEvents(void)
AGXFirmware::setAbsTimeOffset(void)
AGXFirmware::submitDeviceControl(AGFIAcceleratorRingEntry *,uint,uint *)
AGXFirmwareKextRTBuddy::changePowerStateTo(ulong)
AGXFirmwareKextRTBuddy::enableEndpoints(void)
AGXFirmwareKextRTBuddy::initRTBuddyEndpoint(AGXAccelerator *,AGXArmFirmware *,char const*)
AGXFirmwareKextRTBuddy::isFirmwareStarted(void)
AGXFirmwareKextRTBuddy::joinPMPowerManagement(IOService *)
AGXFirmwareKextRTBuddy::matchedGFXEndpoint(void *,IOService *,IONotifier *)
AGXFirmwareKextRTBuddy::matchedGFXEndpointGated(void *)
AGXFirmwareKextRTBuddy::powerStateChange(ulong,ulong)
AGXFirmwareKextRTBuddy::readMessageFromAKF(ulong long *)
AGXFirmwareKextRTBuddy::receivedMessageFromAKF(ulong long)
AGXFirmwareKextRTBuddy::sendAsyncNoteToFirmware(ulong long,bool)
AGXFirmwareKextRTBuddy::sendMessageToFirmware(ulong long)
AGXFirmwareKextRTBuddy::stop(IOService *)
AGXFirmwareKextRTBuddy::terminateGFXEndpointGated(void *)
AGXFirmwareKextRTBuddy__bootFirmware_IOMemoryMap
AGXFirmwareResourceStack<AGXCachedFWChannelMem,AGXChannel>::growResourceStack(void)
AGXFirmwareResourceStack<AGXCachedFWChannelMem,AGXChannel>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<AGXCachedFWChannelMem,AGXChannel>::shrinkStack(void)
AGXFirmwareResourceStack<AGXCachedFWChannelMem,AGXChannel>::~AGXFirmwareResourceStack()
AGXFirmwareResourceStack<AGXUncachedFWChannelMem,AGXChannel>::growResourceStack(void)
AGXFirmwareResourceStack<AGXUncachedFWChannelMem,AGXChannel>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<AGXUncachedFWChannelMem,AGXChannel>::shrinkStack(void)
AGXFirmwareResourceStack<AGXUncachedFWChannelMem,AGXChannel>::~AGXFirmwareResourceStack()
AGXFirmwareResourceStack<_AGFIChannelState,AGXChannel>::growResourceStack(void)
AGXFirmwareResourceStack<_AGFIChannelState,AGXChannel>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<_AGFIChannelState,AGXChannel>::shrinkStack(void)
AGXFirmwareResourceStack<_AGFIChannelState,AGXChannel>::~AGXFirmwareResourceStack()
AGXFirmwareResourceStack<_AGFISchedulerState,AGXCommandQueue>::growResourceStack(void)
AGXFirmwareResourceStack<_AGFISchedulerState,AGXCommandQueue>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<_AGFISchedulerState,AGXCommandQueue>::shrinkStack(void)
AGXFirmwareResourceStack<_AGFISchedulerState,AGXCommandQueue>::~AGXFirmwareResourceStack()
AGXFirmwareResourceStack<_AGFITimeStampQueue,AGXTimeStampQueue>::growResourceStack(void)
AGXFirmwareResourceStack<_AGFITimeStampQueue,AGXTimeStampQueue>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<_AGFITimeStampQueue,AGXTimeStampQueue>::shrinkStack(void)
AGXFirmwareResourceStack<_AGFITimeStampQueue,AGXTimeStampQueue>::~AGXFirmwareResourceStack()
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::freeAllocationBlock(AGXFirmwareResourceAllocation *)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::getAvailableBlockCount(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::growResourceStack(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::init(AGXAccelerator *,eGartRange,ulong long,char const*,IOGPUTask *,AGXFWPoolShrinkMode,bool)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::registerNewUser(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::releaseAllocationBlockIfPossible(uint,bool)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::replaceStorageArrays(uint)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::shrinkStack(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::teardown(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::unregisterUser(void)
AGXFirmwareResourceStack<ulong long,AGXLateEvalEvent>::~AGXFirmwareResourceStack()
AGXGFXDVAccessor::free(void)
AGXGart::deallocate(IOGPUMemoryMap *,ulong long)
AGXGart::reserve(uint,ulong long,ulong long)
AGXGartG12::MetaClass::alloc(void)
AGXGartG12__allocate_IOGPUMemoryMap
AGXHWDSIDManager::cleanupResources(void)
AGXHardwareBufferBase::init(void)
AGXHardwareBufferIDManager::alloc(AGXHardwareBufferBase *)
AGXHardwareBufferIDManager::complete(AGXHardwareBufferBase *,int)
AGXHardwareBufferIDManager::init(AGXAccelerator *,int,char const*)
AGXHardwareBufferIDManager::release(void)
AGXIOFenceData::agxIOFenceCallback(void *,void *,IOSurface *,int)
AGXIOFenceData::init(AGXAccelerator *)
AGXIOFenceManager::createFence(IOSurface *,uint,AGXCommandDescriptor *,IOFenceTransaction *)
AGXIOFenceManager::createIOFenceDataStructures(AGXAccelerator *)
AGXIOFenceManager::fenceCallbackCompleted(AGXIOFenceData *)
AGXIOFenceManager::resetFenceData(void)
AGXIOFenceManager::stashIOFenceData(AGXIOFenceData *)
AGXLateEvalEvent::free(void)
AGXLateEvalEventWaitStack::free(void)
AGXLateEvalEventWaitStack::init(void)
AGXLegacyMemoryMap::__walkMappingPagesUpdatePTE(uint,ulong long,uint,ulong long,bool)
AGXLegacyMemoryMap::commitIntoGPUPageTable(void)
AGXLegacyMemoryMap::getGPUVirtualAddressForUserProcess(void)
AGXLegacyMemoryMap::init(IOGPU *,IOGPUTask *,IOGPUMemory *,ulong long)
AGXLegacyMemoryMap::releaseFromGPUPageTable(void)
AGXMTLCounterSampler::free(void)
AGXMTLCounterSampler::init(AGXAccelerator *)
AGXMemoryMap::__getGPUVirtualAddressForPhysicalOffset(ulong long,ulong long)
AGXMemoryMap::__getLengthWithoutPadding(void)
AGXMemoryMap::__isGPUVirtualAddressForPadding(ulong long)
AGXMemoryMap::__walkMappingPages(void (AGXMemoryMap::*)(uint,ulong long,uint,ulong long,bool),bool,bool)
AGXMemoryMap::__walkMappingPagesNotifyFirmwareOfMapping(uint,ulong long,uint,ulong long,bool)
AGXMemoryMap::__walkMappingPagesNotifyFirmwareOfUnmapping(uint,ulong long,uint,ulong long,bool)
AGXMemoryMap::isStandardFWMapping(void)
AGXMemoryMap::notifyFirmwareOfUnmapping(void)
AGXParameterBufferBlockVirtual::init(void)
AGXParameterBufferBlockVirtual::prepareBacking(void)
AGXParameterBufferBlockVirtual::setPurgeable(uint)
AGXParameterManagement::checkForShrink(ulong long)
AGXParameterManagement::deleteParameterBufferBlock(AGXParameterBufferBlock *)
AGXParameterManagement::describeDriverAllocationsLocked(IOGPUAllocationInfo *,int)
AGXParameterManagement::free(void)
AGXParameterManagement::growImmediately(void)
AGXParameterManagement::resetParameterState(void)
AGXParameterManagement::scrubEvents(void)
AGXParameterManagementVirtual::cleanup(void)
AGXParameterManagementVirtual::freeBlockBackingMemory(AGXParameterBufferBlock *)
AGXParameterManagementVirtual::isPageListDirty(void)
AGXParameterManagementVirtual::prepareAndRetainPageListMapping(AGXTACommandDescriptor *)
AGXParameterManagementVirtual::prepareParameterBufferBlock(AGXParameterBufferBlock *)
AGXParameterManagementVirtual::releasePageListMapping(void)
AGXParameterMemoryVirtual::addMapping(AGXMemoryMap *)
AGXParameterMemoryVirtual::free(void)
AGXParameterMemoryVirtual::init(AGXAccelerator *,AGXMemoryMap **,uint)
AGXParameterMemoryVirtual::unwire(void)
AGXParameterMemoryVirtual::wire(void)
AGXPeakPowerManager::free(void)
AGXPerfCtrRDESampleHeaderParser::parse(ulong long const*,AGXSPerfCtrSample *,ulong long *)
AGXPerfCtrRDESampleHeaderParser::reset(uint,uint,ulong long)
AGXPerfCtrSampler::free(void)
AGXPerfCtrSampler::getPerfCtrBufferState(uint *,uint *)
AGXPerfCtrSampler::lockAccess(bool,AGXShared *)
AGXPerfCtrSampler::snapshotBufferAlloc(void)
AGXPerfCtrSamplerGen11::AGXPerfCtrSamplerGen11(void)
AGXPerfCtrSamplerGen11::MetaClass::alloc(void)
AGXPerfCtrSamplerGen11::addSelectedCounter(AGXSPerfCtrSamplerControlRec *)
AGXPerfCtrSamplerGen11::addSelectedCounter(AGXSPerfCtrSelect *,uint)
AGXPerfCtrSamplerGen11::adjustSamplingFlag(uint)
AGXPerfCtrSamplerGen11::adjustSamplingMode(uint)
AGXPerfCtrSamplerGen11::commitSelectedCounterList(void)
AGXPerfCtrSamplerGen11::getCommandListBufferSize(uint *,uint *)
AGXPerfCtrSamplerGen11::getSelectedCounterListSize(void)
AGXPerfCtrSamplerGen11::handleGPURestart(void)
AGXPerfCtrSamplerGen11::resetRDESampleHeaderParser(uint,uint)
AGXPerfCtrSamplerGen11::resetSelectedCounterList(void)
AGXPerfCtrSamplerGen11::resetSourceCounterList(uint)
AGXPerfCtrSamplerGen11::~AGXPerfCtrSamplerGen11()
AGXRenderTargetMemory::delete_render_target_buffers(void)
AGXRenderTargetMemory::describeDriverAllocations(IOGPUAllocationInfo *)
AGXRenderTargetMemory::free(void)
AGXRenderTargetMemory::init(AGXAccelerator *,AGXShared *)
AGXRenderTargetMemory::scrubEvents(void)
AGXRenderTargetMemory::updateGtpOnlyBuffers(uint)
AGXRenderTargetMemory::updateRenderTarget(AGXRenderTargetInfoRec const*,uint,uint,IOGPUEvent *,uint,uint,bool)
AGXRenderTargetMemoryG12::MetaClass::alloc(void)
AGXRenderTargetMemoryG12::halComputeGeometry(uint,uint)
AGXRenderTargetMemoryG12::setupRegisters(uint,uint,uint,uint,uint,uint)
AGXRenderTargetMemoryG12::~AGXRenderTargetMemoryG12()
AGXRenderTargetMemoryG4P_B0::halValidateInput(AGXRenderTargetInfoRec *)
AGXResource::free(void)
AGXResource::init(IOGPU *,IOGPUDevice *,uint)
AGXResource::scrubEvents(void)
AGXResource::setResourceTwiddled(IOGPUNewResourceArgs *,bool)
AGXResource__getMappingOptions_IOGPUNewResourceArgs___unsigned_long_long__const
AGXRestartReport::free(void)
AGXSKUEncoder::free(void)
AGXSKUEncoder::scrubEvents(void)
AGXScheduler::eventTimeout(int)
AGXScheduler::progressTimerCheckInterrupt(void)
AGXSecureGart::allocate(ulong long,ulong long,uint)
AGXSecureGart::deallocate(IOGPUMemoryMap *,ulong long)
AGXSecureGart::deallocate(ulong long,ulong long,uint,ulong long)
AGXSecureGart::getCodeGartRangeInfo(ulong long *,ulong long *)
AGXSecureGart::getGartPhysicalBaseAddress(uint)
AGXSecureGart::getPageTableEntry(ulong long)
AGXSecureGart::initMicroPPLSequenceLocks(void)
AGXSecureGart::isPageFaultExpected(ulong long,uint)
AGXSecureGart__releaseMappings
AGXSecureMemoryMap::__validateMapping(void)
AGXSecureMemoryMap::freeGPUVirtualAddress(void)
AGXSecureMemoryMap::getGPUVirtualAddressForUserProcess(void)
AGXSecureMemoryMap::init(IOGPU *,IOGPUTask *,IOGPUMemory *,ulong long)
AGXSecureMemoryMap__allocGPUVirtualAddress
AGXSecureMemoryMap__commitIntoGPUPageTable
AGXSecureMemoryMap__releaseFromGPUPageTable
AGXSecureMonitor::free(void)
AGXSecureMonitor::issueDSB(void)
AGXSecureMonitor::issueTLBI(uint,ulong long,ulong long)
AGXSecureMonitorG12::issueDSBInternal(uint)
AGXSecureMonitorG12::issueTLBIInternal(uint,ulong long,ulong long,uint)
AGXSecureMonitorG12::readGPTBATBaseAddress(void)
AGXSecureMonitorG12::setupMMUConfig(void)
AGXSecureSharedGartTableBacking__init_AGXAccelerator
AGXShared::addStampIndex(int)
AGXShared::clientClose(void)
AGXShared::createUserGPUTask(task *)
AGXShared::destroy_mtllateevalevent(uint)
AGXShared::init(IOGPU *,task *,ulong long)
AGXShared::rdeFree(void)
AGXShared::rdeProcessBuffer(uint)
AGXShared::rdeProcessControl(AGXSPerfCtrSamplerControlRec *,bool *)
AGXShared::rdeSetup(AGXSPerfCtrSamplerControlRec *)
AGXShared::removeStampIndex(int)
AGXShared::scrubEvents(void)
AGXShared::setFWBufferMap(AGXMemoryMap *)
AGXShared::setRDEBufferMap(AGXMemoryMap *)
AGXShared::setSourceBufferMap(uint,AGXMemoryMap *)
AGXShared::shmemWithTask(task *,ulong,eIOGPUShmemType)
AGXSharedGartTableBackingG12::initGartInfo(void)
AGXSpillBufferManager::evaluateSpillBufferSize(void)
AGXSpillBufferManager::free(void)
AGXStatistics::MetaClass::alloc(void)
AGXStatistics::free(void)
AGXStatistics::recordBoostControllerStatisticsEntryFromFW(AGFIStatisticsEventRingEntry *)
AGXStatistics::releaseIOReporting(void)
AGXStatistics::updateReport(IOReportChannelList *,uint,void *,void *)
AGXStatistics::writePerformanceStats(OSDictionary *,bool)
AGXStatistics::~AGXStatistics()
AGXTAChannel::bindAndRetainMeshRenderingBuffers(AGXTACommandDescriptor *)
AGXTAChannel::encodeOptimizedTACommandSKUStream(AGFIChannelCommandTA *,AGXTACommandDescriptor *,ulong long,IOGPUEvent const*)
AGXTAChannel::free(void)
AGXTAChannel::init(AGXCommandQueue const*,AGXWorkQueue *,int,int,ulong long)
AGXTAChannel::scrubEvents(void)
AGXTAChannelG12::generateSKURegisterList(AGFIChannelCommandTA *,AGXTACommandDescriptor *)
AGXTACommandDescriptor::MetaClass::alloc(void)
AGXTACommandDescriptor::free(void)
AGXTACommandDescriptor::init(IOGPU *,IOGPUCommandQueue *,IOGPUTask *,ulong long,AGXDebugBufferShmem *)
AGXTACommandDescriptor::loadParameterManagementData(AGXParameterManagement *)
AGXTACommandDescriptor::loadRenderCommonFields(AGXRenderCommandCommonRec *)
AGXTACommandDescriptor::loadRenderTargetMemoryData(AGXRenderTargetMemory *,uint)
AGXTACommandDescriptor::loadTAFields(AGXTACommandRec *)
AGXTACommandDescriptor::parseAndValidateSidebandBuffer(AGXRenderCommandRec *)
AGXTACommandDescriptor::~AGXTACommandDescriptor()
AGXTimeStampQueue::free(void)
AGXTimeStampQueue::resetTimeStampQueueState(void)
AGXTimeStampQueue::setUpdateMode(bool)
AGXUATMux::registerTaskForService(task *,IOService *,bool)
AGXUnifiedAddressTranslator::MetaClass::alloc(void)
AGXUnifiedAddressTranslator::allocateDummyGart(void)
AGXUnifiedAddressTranslator::encodePTEFlags(uint,uint)
AGXUnifiedAddressTranslator::getPageTableEntry(ulong long)
AGXUnifiedAddressTranslator::getPageTablePhysicalBaseAddress(uint)
AGXUnifiedAddressTranslator::getTotalPageTableMemory(void)
AGXUnifiedAddressTranslator::isMappedToDummyPage(ulong long)
AGXUnifiedAddressTranslator::map(IOMemoryMap *,uint)
AGXUnifiedAddressTranslator::mapToPhysicalAddress(ulong long)
AGXUnifiedAddressTranslator::queueUnmap(IOMemoryDescriptor *,ulong long,ulong long)
AGXUnifiedAddressTranslator::removeClientContextID(void)
AGXUnifiedAddressTranslator::~AGXUnifiedAddressTranslator()
AGXUnifiedAddressTranslator__initHandoff
AGXUnifiedAddressTranslator__isPageFaultExpected_unsigned_long_long__unsigned_int
AGXUnifiedAddressTranslator__taskDied
AGXWorkQueue::didSubmitCommands(int)
AGXWorkQueue::init(IOGPU *,IOGPUCommandQueue const*,int,int)
AGXWorkQueue::restart(void)
AHS::Util::CovenientOSBoundedArrayRef<float const>::at(uint)
AHS::Util::CovenientOSBoundedArrayRef<uchar const>::at(uint)
AHS::Util::Function<int ()(OSArray const*,OSSharedPtr<OSDictionary> &)>::Function<AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_3>(AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_3)::ClosureInvoker::invoke(OSArray const*,OSSharedPtr<OSDictionary> &)
AHS::Util::Function<int ()(OSDictionary const*)>::Function<AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_4>(AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_4)::ClosureInvoker::invoke(OSDictionary const*)
AHS::Util::Function<void ()(OSDictionary const*)>::Function<AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_5>(AppleHapticsSupportLEAP::handleNewFW(OSDictionary*,OSDictionary*)::$_5)::ClosureInvoker::invoke(OSDictionary const*)
AHS::Util::addEntryToCoeffDict<OSSharedPtr<OSNumber>>(OSDictionary *,OSSymbol const*,OSSharedPtr<OSNumber>)
AHS::Util::addIntToCoeffDict(OSDictionary *,OSSymbol const*,int)
AHS::Util::createFloatWithOSNumber(OSNumber const*)
AHS::Util::createStringFromFloat(float,uint)
AHS::Util::extractFloatFromCoeffDict(OSDictionary const*,OSSymbol const*,float &)
AHS::Util::fourCCToString(uint)
AHS::Util::getUptimeNanoseconds(void)
AHS::Util::getUptimeSeconds(void)
AHS::Util::stringToFourCC(OSString *)
AHSActiveSessionEvent::dynamicBiasFault(bool)
AHSActiveSessionEvent::setHighMediumLow(char const*,int,int,int)
AHSActiveSessionEvent::setInitialOffsetMeters(float)
AHSActiveSessionEvent::setMaxSlewFraction(float)
AHSActiveSessionEvent::setTemperatureDegreesCelsius(float)
AHSCal::AHSCal(OSMetaClass const*)
AHSCal::AHSCal(void)
AHSCal::PSClMatchHandler<PSClLegacy>::handleMatch(PSClLegacy const*,OSSharedPtr<OSString> &,uchar &,PSClSuperset &,PSClLegacy const*&,PSClV3 const*&)
AHSCal::TCalMatchHandler<TCalLegacy>::handleMatch(TCalLegacy const*,float &,uint &,TCalSuperset &,TCalLegacy const*&,TCalV10 const*&)
AHSCal::getCalPtr<PSClLegacy>(OSData const*)
AHSCal::getCalPtr<TCalLegacy>(OSData const*)
AHSCal::sakonnetBiasRegisterToAmp(uchar)
AHSCal::validateCal<PSClLegacy>(PSClLegacy const&)
AHSCal::validateCal<TCalLegacy>(TCalLegacy const&)
AHSCal::validateSystemCalContents(AHSCal::SystemCalData const&,AHSCal::SystemCalContents *,uint,OSSharedPtr<OSString const> &)::$_0::operator()(char const*)
AHSCal::~AHSCal()
AHSCommandQueue::AHSCommandQueue(void)
AHSCommandQueue::checkForWork(void)
AHSCommandQueue::free(void)
AHSCommandQueue::init(OSObject *,void (*)(OSObject *,...))
AHSCommandQueue::runAction(int (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
AHSCommandQueue::runAction<AppleHapticsSupport,uint>(int (*)(AppleHapticsSupport *,uint),uint)
AHSCommandQueue::runActionInline<&(AHSCommandQueue::runAction<AppleHapticsSupport,OSSharedPtr<AHSEventCollection>>(int (*)(AppleHapticsSupport *,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)::{lambda(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)#1}::__invoke(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)),AppleHapticsSupport,int (*)(AppleHapticsSupport*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,int (*)(AppleHapticsSupport*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,void *,void *>(int (*)(AppleHapticsSupport*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSCommandQueue::runAction<AppleHapticsSupport,bool,OSSharedPtr<AHSEventCollection>>(int (*)(AppleHapticsSupport *,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>)::{lambda(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>)#1}::__invoke(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>)),AppleHapticsSupport,int (*)(AppleHapticsSupport*,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>,int (*)(AppleHapticsSupport*,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>,void *>(int (*)(AppleHapticsSupport*,bool,OSSharedPtr<AHSEventCollection>),bool,OSSharedPtr<AHSEventCollection>,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSCommandQueue::runAction<AppleHapticsSupport,uint>(int (*)(AppleHapticsSupport *,uint),uint)::{lambda(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,uint),uint)#1}::__invoke(AppleHapticsSupport*,int (*)(AppleHapticsSupport*,uint),uint)),AppleHapticsSupport,int (*)(AppleHapticsSupport*,uint),uint,int (*)(AppleHapticsSupport*,uint),uint,void *,void *>(int (*)(AppleHapticsSupport*,uint),uint,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSLeela::_enqueueWorkAsync<AHSLeelaPhone,OSSharedPtr<AHSEventCollection>>(int (*)(AHSLeelaPhone *,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)::{lambda(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)#1}::__invoke(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)),AppleHapticsSupportLEAP,int (*)(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,int (*)(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,void *,void *>(int (*)(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSLeela::_enqueueWorkAsync<AHSLeelaPhone,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>>(int (*)(AHSLeelaPhone *,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>)::{lambda(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>)#1}::__invoke(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>)),AppleHapticsSupportLEAP,int (*)(AHSLeelaPhone*,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>,int (*)(AHSLeelaPhone*,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>,void *>(int (*)(AHSLeelaPhone*,OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>),OSSharedPtr<OSDictionary const>,OSSharedPtr<AHSEventCollection>,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSLeela::_enqueueWorkAsync<AHSLeelaPhone,float>(int (*)(AHSLeelaPhone *,float),float)::{lambda(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,float),float)#1}::__invoke(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,float),float)),AppleHapticsSupportLEAP,int (*)(AHSLeelaPhone*,float),float,int (*)(AHSLeelaPhone*,float),float,void *,void *>(int (*)(AHSLeelaPhone*,float),float,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSCommandQueue::runActionInline<&(AHSLeela::_enqueueWorkAsync<AHSLeelaPhone,uint *,uint>(int (*)(AHSLeelaPhone *,uint *,uint),uint *,uint)::{lambda(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,uint *,uint),uint *,uint)#1}::__invoke(AppleHapticsSupportLEAP *,int (*)(AHSLeelaPhone*,uint *,uint),uint *,uint)),AppleHapticsSupportLEAP,int (*)(AHSLeelaPhone*,uint *,uint),uint *,uint,int (*)(AHSLeelaPhone*,uint *,uint),uint *,uint,void *>(int (*)(AHSLeelaPhone*,uint *,uint),uint *,uint,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
AHSEvent::initWithName(char const*)
AHSEvent::set(char const*,OSSharedPtr<OSObject>)
AHSEvent::set(char const*,int)
AHSEventCollection::ensureEvent<AHSActiveSessionEvent>(void)
AHSEventCollection::ensureEvent<AHSSessionEvent>(void)::{lambda(AHSEvent *,bool *,AHSEvent **)#1}::__invoke(AHSEvent *,bool *,AHSEvent **)
AHSEventCollection::init(void)
AHSEventCollection::iterateOverEvents<AHSEvent **>(void (*)(AHSEvent *,bool *,AHSEvent **),AHSEvent **)
AHSEventLogger::free(void)
AHSEventLogger::init(void)
AHSEventLogger::matchCoreAnalyticsHub(void)
AHSFunctionBase::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AHSFunctionNotifySessionChange::callFunction(void *,void *,void *)
AHSFunctionSetAveragePowerBudget::callFunction(void *,void *,void *)
AHSFunctionSetHapticDebugChannels::callFunction(void *,void *,void *)
AHSFunctionSetPeakPowerBudget::callFunction(void *,void *,void *)
AHSFunctionSetTravelScaler::callFunction(void *,void *,void *)
AHSInteger::serialize(OSSerialize *)
AHSLEAPContextRestorer::handleSessionEnd(void)
AHSLEAPContextRestorer::~AHSLEAPContextRestorer()
AHSLeela::AHSLeela(OSMetaClass const*)
AHSLeela::AHSLeela(void)
AHSLeela::MetaClass::alloc(void)
AHSLeela::_enqueueWorkAsync<AHSLeelaPhone,OSSharedPtr<AHSEventCollection>>(int (*)(AHSLeelaPhone *,OSSharedPtr<AHSEventCollection>),OSSharedPtr<AHSEventCollection>)
AHSLeela::createVPassThruFallbackCoeffs(void)
AHSLeela::currentlySWHighPower(void)
AHSLeela::notifyHapticsSessionChange(bool,OSSharedPtr<AHSEventCollection>)
AHSLeela::setHapticDebugChannels(OSArray *,bool)
AHSLeela::~AHSLeela()
AHSLeelaPhone::AHSLeelaPhone(void)
AHSLeelaPhone::dispatchTemperature(void)
AHSLeelaPhone::dispatchTemperature(void)::$_8::__invoke(AHSLeelaPhone*,float)
AHSLeelaPhone::free(void)
AHSLeelaPhone::gatherPowerBudgetRanges(void)
AHSLeelaPhone::gatherPowerBudgetRanges(void)::$_0::__invoke(void *,void *,IOService *,IONotifier *)
AHSLeelaPhone::getTemperatureCelsius(void)
AHSLeelaPhone::getTemperatureValidity(void)
AHSLeelaPhone::initConstants(OSDictionary const*)
AHSLeelaPhone::notifyHapticsSessionChange(bool,OSSharedPtr<AHSEventCollection>)
AHSLeelaPhone::notifyHapticsSessionChange(bool,OSSharedPtr<AHSEventCollection>)::$_3::__invoke(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>)
AHSLeelaPhone::notifyHapticsSessionChange(bool,OSSharedPtr<AHSEventCollection>)::$_4::__invoke(AHSLeelaPhone*,OSSharedPtr<AHSEventCollection>)
AHSLeelaPhone::onPowerBudgetRangesServiceMatched(IOService *)
AHSLeelaPhone::setPeakPowerBudget(uint,uint *)
AHSLeelaPhone::setPowerBudget(AHS::Leela::Sym,uint,uint *,uint *,char const*)
AHSLeelaPhone::setPowerBudget(AHS::Leela::Sym,uint,uint *,uint *,char const*)::$_9::__invoke(AHSLeelaPhone*,uint *,uint)
AHSLeelaPhone::~AHSLeelaPhone()
AHSLeelaPhoneCal::MetaClass::alloc(void)
AHSLeelaPhoneCal::initWith(IOService *,uint,OSSharedPtr<OSString const> &,OSSharedPtr<AHSLeelaSymbols>)
AHSLeelaPhoneCal::withProvider(IOService *,uint,OSSharedPtr<OSString const> &,OSSharedPtr<AHSLeelaSymbols>)
AHSLeelaPhoneCal::~AHSLeelaPhoneCal()
AHSLeelaSymbols::create(void)
AHSSegmentFinder::MetaClass::alloc(void)
AHSSegmentFinder::getMatchingEntry(ulong long,ulong long)
AHSSegmentFinder::withEntries(libkern::bounded_array_ref<RTKSegmapEntry const,os_detail::panic_trapping_policy>)
AHSSegmentFinder::~AHSSegmentFinder()
AHSStatsAggregator::addDataPoint(double)
AHSStatsAggregator::init(void)
AHSSymbols::get(ulong)
AHSSymbols::~AHSSymbols()
AHSTemperatureReporter::copyEvent(uint,IOHIDEvent *,uint)
AHSTemperatureReporter::dispatchTemperatureEvent(float)
AHSTemperatureReporter::withTemperatureSensor(IOService *,char const*,uint)
AHTEeprom::content(void)
AHTEeprom::findEepromDriver(void)
AHTEeprom::free(void)
AHTEeprom::initEepromReader(AIDService *,IOService *)
AHTEeprom::invalidate(void)
AHTEeprom::load(void)
AHTFunction::callFunction(void *,void *,void *)
AHTFunction::initWithProvider(IORegistryEntry *,char const*)
AHTFunction::withProvider(IORegistryEntry *,char const*)
AHTFunctionInfo::call(bool,bool)
AHTFunctionInfo::free(void)
AHTFunctionInfo::init(AIDService *,IORegistryEntry *,void const*,ulong long *)
AHTFunctionKill::callFunction(void *,void *,void *)
AHTFunctionPing::callFunction(void *,void *,void *)
AHTFunctionPing::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AHTFunctionSequence::add(IORegistryEntry *,char const*,uint,uint,AHTFunctionInfo::FunctionType,AHTFunctionInfo::FunctionType)
AHTFunctionSequence::contains(char const*)
AHTFunctionSequence::runSequence(bool)
AHTHSBuffer::AHTHSBuffer(void)
AHTHSBuffer::init(IOMemoryDescriptor *,bool)
AHTHSBuffer::init(ulong)
AHTHSBuffer::setLength(ulong)
AHTHSBuffer::withCapacity(ulong)
AHTHSBuffer::~AHTHSBuffer()
AHTHSWorkLoop::MetaClass::alloc(void)
AHTHSWorkLoop::addEventSource(HSEventSource *)
AHTHSWorkLoop::checkForWork(void)
AHTHSWorkLoop::commandSleep(void *,ulong long)
AHTHSWorkLoop::commandWakeup(void *)
AHTHSWorkLoop::getDeadline(ulong long)
AHTHSWorkLoop::removeEventSource(HSEventSource *)
AHTHSWorkLoop::workLoop(OSObject *)
AHTMemoryDumpExtractor::getMemoryDumpLevel(void)
AHTMemoryDumpExtractor::setMemoryDumpLevel(uint)
AHTMemoryDumpExtractor::withConfig(OSDictionary *,AppleHIDTransportBootloader *)
AHTPlatformFunction::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AHTProtocolHBPP13::bufferToWord(uchar *)
AHTProtocolHBPP13::buildCommandHeader(AHTProtocolHBPP13::CommandType,AHTProtocolHBPP13::CommandSize)
AHTProtocolHBPP13::checkAck(AHTProtocolHBPP13::AckType,uchar *,uint *)
AHTProtocolHBPP13::checkAckData(uchar *,uint *)
AHTProtocolHBPP13::checkAckNop(uchar *,uint *)
AHTProtocolHBPP13::checkAckWrReq(uchar *,uint *)
AHTProtocolHBPP13::checkCalDone(uchar *,uint *)
AHTProtocolHBPP13::checkCommandReqBoot(uchar *,uint *,bool)
AHTProtocolHBPP13::checksum16(uchar *,uchar *)
AHTProtocolHBPP13::checksum32(uchar *,uint)
AHTProtocolHBPP13::commandMemRMW(uint,uint,uint,uchar *,uint *)
AHTProtocolHBPP13::dataPacket(uint,uchar *,uint,uchar *,uint *)
AHTProtocolHBPP13::getDataPacketSize(uint)
AHTProtocolHBPP13::getMaxPayloadSize(void)
AHTProtocolHBPP13::getPacketLength(uchar *,ushort *)
AHTProtocolHBPP13::wordToBuffer(uint,uchar *)
AHTProtocolHBPP15::commandMemReadBulk(uint,uchar *,uint)
AHTProtocolHBPP15::parseAckRdReqB(uchar *,uint)
AHTProtocolHBPP15::validateCommandMemReadBulk(uchar *,uint,uchar *)
AHTRTBuddyFirmwareService::free(void)
AHTRTBuddyFirmwareService::stop(IOService *)
AHTSCMMessage::calculateChecksum(void)
AHTSCMMessage::checkChecksum(void)
AHTSCMMessage::createControlMessage(uchar,uchar,AHTSCMMessage::ReportType,AHTSCMMessage::Status,void const*,ushort)
AHTSCMMessage::createErrorMessage(uchar,uchar,AHTSCMMessage::Status)
AHTSCMMessage::createInputMessage(uchar,uchar,ushort,void const*,ushort)
AHTSCMMessage::free(void)
AHTSCMMessage::getMessageType(void)
AHTSCMMessage::getRemainingSize(void)
AHTSCMMessage::getReportType(void)
AHTSCMMessage::getStatus(void)
AHTSCMMessage::init(IOMemoryDescriptor *,ulong long)
AHTSCMMessage::parseNewBytes(ulong long)
AHTSCMMessage::readPayload(uchar *)
AICInterruptTimestampFunction::disable(void)
AICInterruptTimestampFunction::enable(void)
AICInterruptTimestampFunction::getTimestamp(void)
AICInterruptTimestampFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AIDCircularBuffer::free(void)
AIDCircularBuffer::init(uint)
AIDCircularBuffer::read(uchar *,uint)
AIDCircularBuffer::withCapacity(uint)
AIDCircularBuffer::write(uchar *,uint)
AIDCircularBufferShared::init(IOMapper *,ulong)
AIDCircularBufferShared::read(uchar *,uint)
AIDCircularBufferShared::readableBytes(void)
AIDCircularBufferShared::withMapper(IOMapper *,ulong)
AIDEventLogger::addIOReporter(char const*,char const*,ulong long const*,char const* const*,uint)
AIDEventLogger::anyChannelExists(IOReportChannelList *)
AIDEventLogger::configureReport(IOReportChannelList *,uint,void *,void *)
AIDEventLogger::coreAnalyticsNotificationHandler(void *,IOService *,IONotifier *)
AIDEventLogger::coreAnalyticsNotificationHandlerGated(void *,IOService *,IONotifier *)
AIDEventLogger::free(void)
AIDEventLogger::getStatIDForName(char const*)
AIDEventLogger::getValue(ulong long)
AIDEventLogger::incrementValue(char const*,uint,OSDictionary *)
AIDEventLogger::initWithService(AIDService *)
AIDEventLogger::logEvent(char const*,char const*,OSDictionary *)
AIDEventLogger::logEventWithFullName(OSString *,OSDictionary *)
AIDEventLogger::updateReport(IOReportChannelList *,uint,void *,void *)
AIDImageDownloader::addDownloader(IOService *,IORegistryEntry *,OSArray *)
AIDImageDownloader::beginFirmwareDownload(FWValidationStatus,uint,OSData *)
AIDImageDownloader::createdDownloaders(IOService *)
AIDImageDownloader::downloader(IOService *,IORegistryEntry *,uint)
AIDImageDownloader::extractFromFtab(OSData *)
AIDImageDownloader::findDownloaders(IOService *)
AIDImageDownloader::free(void)
AIDImageDownloader::getFdrData(char const*)
AIDImageDownloader::init(char const*,uint,OSDictionary *,uint)
AIDImageDownloader::processFdrData(FWValidationStatus,uint,OSString *,OSData *)
AIDImageDownloader::readFdrClasses(IORegistryEntry *)
AIDImageDownloader::readImageTag(IORegistryEntry *)
AIDImageDownloader::readSymbol(char const**,uint *)
AIDImageDownloader::setAction(OSObject *,int (*)(OSObject *))
AIDLogger::driverLogString(char const*,...)
AIDLogger::driverLogStringError(char const*,...)
AIDLogger::driverLogStringInfo(char const*,...)
AIDLogger::driverLogStringNotice(char const*,...)
AIDLogger::logTransactionHeader(uchar *,ushort,uchar *,ushort,uchar,char const*,char const*)
AIDLoggerUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AIDLoggerUserClient::createLogQueue(void)
AIDLoggerUserClient::enqueueLog(uchar *,uint)
AIDLoggerUserClient::free(void)
AIDLoggerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AIDLoggerUserClient::registerNotificationPort(ipc_port *,uint,uint)
AIDLoggerUserClient::start(IOService *,AIDLogger *)
AIDLoggerUserClient::stop(IOService *)
AIDQueueEventSource::checkForWork(void)
AIDQueueEventSource::free(void)
AIDQueueEventSource::init(OSObject *,void (*)(OSObject *,OSObject *),uint,bool)
AIDQueueEventSource::queueEventSource(OSObject *,void (*)(OSObject *,OSObject *),uint,bool)
AIDQueueEventSource::queueObject(OSObject *)
AIDQueueEventSourceWorkItem::free(void)
AIDQueueEventSourceWorkItem::init(void (*)(OSObject *,void *,void *,void *,void *),OSObject *,void *,void *,void *,void *)
AIDReporter::addDefaultProxyConfig(void)
AIDReporter::configureReport(IOReportChannelList *,uint,void *,void *)
AIDReporter::containsAnyChannel(IOReportChannelList *)
AIDReporter::free(void)
AIDReporter::getReportLength(void)
AIDReporter::init(IOService *,OSDictionary *,ulong long,AIDReporters *)
AIDReporter::updateReport(IOReportChannelList *,uint,void *,void *)
AIDReporter::useSameData(AIDReporter*)
AIDReporter::with(IOService *,OSDictionary *,ulong long,AIDReporters *)
AIDReporterSimple::free(void)
AIDReporterSimple::initReporter(IOService *,OSDictionary *,ushort,ulong long)
AIDReporterSimple::updateReportWithData(OSData const*)
AIDReporterState::Channel::addChannel(IOStateReporter *,AIDReporterState::FieldReporters *,uint,ulong long *)
AIDReporterState::Channel::init(AIDReporterState*,OSDictionary *)
AIDReporterState::Channel::stateNameToStateId(char const*)
AIDReporterState::Channel::updateReportWithData(IOStateReporter *,AIDReporterState::FieldReporters *,ulong long,ulong long,OSData const*)
AIDReporterState::free(void)
AIDReporterState::initReporter(IOService *,OSDictionary *,ushort,ulong long)
AIDReporterState::updateReportWithData(OSData const*)
AIDReporters::clearReporterData(AIDReporterInterface *,AIDReporter *)
AIDReporters::configureReport(IOReportChannelList *,uint,void *,void *)
AIDReporters::getReporterData(AIDReporterInterface *,AIDReporter *)
AIDReporters::groupReporters(OSArray *)
AIDReporters::init(IOService *,OSArray *,AIDReporterInterface *)
AIDReporters::setReport(AIDReporterInterface *,uchar,OSData *,ulong long)
AIDReporters::updateReport(IOReportChannelList *,uint,void *,void *)
AIDReporters::updateReportersData(void)
AIDReporters::updateReportersGroupData(OSArray *,OSData *)
AIDSerialLogger::driverLogTransaction(uchar *,ushort,uchar *,ushort,uchar,char const*,char const*)
AIDSerialLogger::vDriverLogString(char const*,char *,AIDLogger::LogLevel)
AIDService::init(IORegistryEntry *,IORegistryPlane const*)
AIDService::init(OSDictionary *)
AIDService::setLogger(AIDLogger *)
AIDService::start(IOService *)
AIDService::stop(IOService *)
AIDSnifferInterface::attachIfnet(char const*,uint,uint)
AIDSnifferInterface::createWithPrefix(char const*,uint,uint)
AIDSnifferInterface::detachIfnet(void)
AIDSnifferInterface::free(void)
AIDSnifferInterface::initWithPrefix(char const*,uint,uint)
AIDSnifferInterface::tap(void const*,ulong,AIDSnifferInterface::PacketDirection,void *)
AIDUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AIDUserClient::start(IOService *)
AIDUserClient::stop(IOService *)
AIDUserClientLogger::driverLogTransaction(uchar *,ushort,uchar *,ushort,uchar,char const*,char const*)
AIDUserClientLogger::flushLogs(AIDLoggerUserClient *)
AIDUserClientLogger::free(void)
AIDUserClientLogger::init(void)
AIDUserClientLogger::readMessageCache(AHTLogPacketHeader *)
AIDUserClientLogger::registerUserClient(AIDLoggerUserClient *)
AIDUserClientLogger::unregisterUserClient(AIDLoggerUserClient *)
AIDUserClientLogger::vDriverLogString(char const*,char *,AIDLogger::LogLevel)
AIDUserClientLogger::writeMessageCache(AHTLogPacketHeader *)
AKS_service(char const*)
AKS_services(void)
AMCTempSensor::copyEvent(uint,IOHIDEvent *,uint)
AMCTempSensor::free(void)
AMCTempSensor::handleStart(IOService *)
AMDReporter::fromService(IOService *,OSDictionary *,ulong long)
AMDReporter::getReportLength(void)
AMDReporter::parseDescriptor(OSDictionary *)
AMDReporter::updateReport(uchar *)
AMDReporter::~AMDReporter()
AMDReporterManager::configureReport(IOReportChannelList *,uint,void *,void *)
AMDReporterManager::createReporters(void)
AMDReporterManager::fromDevice(AppleMultitouchDevice *)
AMDReporterManager::updateReport(IOReportChannelList *,uint,void *,void *)
AMDReporterManager::updateReport(void)
AMDReporterManager::~AMDReporterManager()
AMDTimestampSyncMgr::free(void)
AMDTimestampSyncMgr::initWithAMD(AppleMultitouchDevice *)
AMDTimestampSyncMgr::matchingNotification(void *,IOService *,IONotifier *)
AMDTimestampSyncMgr::matchingNotificationGated(AppleMultitouchTimestampSync *)
AMDTimestampSyncMgr::processReport(uchar **,uint *)
AMFIGetLocalSigningPublicKey(void)
AMFIGetLocalSigningPublicKey(void)
AMFIInitializeLocalSigningPublicKey(void)
AMFIInitializeLocalSigningPublicKey(void)
AMFILocalSigningIsRestricted(uchar const*)
AMFIPlatformSupportsXART(void)
AMFIRestrictLocalSigning(void)
AMFISetLocalSigningPublicKey(uchar *)
AMFISetLocalSigningPublicKey(uchar *)
AMFIUnrestrictLocalSigning(uchar const*)
AOPAudioIOTrackerNS::AOPAudioIOTracker::clearAllEvents(void)
AOPAudioIOTrackerNS::AOPAudioIOTracker::getEventBlock(AOPAudioIOTrackerNS::AOPAudIOEventBlock &)
AOPAudioIOTrackerNS::AOPAudioIOTracker::logEvent(AOPAudioIOTrackerNS::AOPAudIOEventInfo const&)
AOPTouchHIDDriver::MetaClass::alloc(void)
AOPTouchHIDDriver::authCPInterest(void *,uint,IOService *,void *,ulong)
AOPTouchHIDDriver::authCPMatched(void *,IOService *,IONotifier *)
AOPTouchHIDDriver::authenticityStateDetermined(bool)
AOPTouchHIDDriver::createDigitizerEventCollection(ulong long,bool,int,int,bool,AOPTouchHIDDriverEventType)
AOPTouchHIDDriver::findAndRetainChildElement(IOHIDElement **,IOHIDElement *,uint,uint)
AOPTouchHIDDriver::free(void)
AOPTouchHIDDriver::getScaledIOFixedValue(IOHIDElement *)
AOPTouchHIDDriver::handleHeartbeatFailure(ulong long,uint)
AOPTouchHIDDriver::handleHeartbeatFailure(ulong long,uint)::$_0::__invoke(void *,void *)
AOPTouchHIDDriver::handlePencilTap(ulong long,uint)
AOPTouchHIDDriver::handleStart(IOService *)
AOPTouchHIDDriver::handleTap(ulong long,uint)
AOPTouchHIDDriver::parseElements(OSArray *)
AOPTouchHIDDriver::pollAuthenticityState(IOService *)
AOPTouchHIDDriver::setupMatchingCallback(void)
AOPTouchHIDDriver::start(IOService *)
AOPTouchHIDDriver::~AOPTouchHIDDriver()
AOPTouchHIDDriverDataSource::checkForWork(void)
AOPTouchHIDDriverDataSource::init(OSObject *,void (*)(OSObject *,...))
APCIEPortControl::callFunction(void *,void *,void *)
APCIEPortControl::enable(bool)
APCIEPortControl::getCurrentLinkSpeed(void)
APCIEPortControl::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
APCIEPortControl::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
APCIEPortControl::nvmeEnable(bool)
APCIEPortControl::probePort(void)
APCIEPortControl::registerErrorHandler(int (*)(void *,AppleEmbeddedPCIEErrorHandlerEvent,OSData *),void *)
APCIEPortControl::resetEndpoint(bool)
APCIEPortControl::resetEndpoint(bool)
APCIEPortControl::setDesiredLinkSpeed(uint)
APCIEPortControl::setDesiredLinkSpeedRetrain(uint)
APFSOSNumberAtomic::withNumber(long long)
APFSOSNumberAtomic::~APFSOSNumberAtomic()
APFS_AA_DeviceInfo::init(IOMedia *)
APFS_AA_DeviceInfo::release(void)
ARFilter(float *,int,uint,float const*,uint)
ASIOKit::FJ6UnG2J0DlyL43A(_XqnwpLSFrBke2fSP *)
ASIOKit::MetaClass::alloc(void)
ASIOKit::XYyzPN8jt1XoYiqP(OSData **,OSData **,OSArray **,_InputToKext *)
ASIOKit::gCTqHYqK053YVV7f(OSData **,OSData **,OSArray **,_InputToKext *)
ASIOKit::kkUx5VJz0Ll8bbuV(OSData **,OSData **,OSArray **,_InputToKext *)
ASIOKit::mzk5nw1OBhhZhoIc(OSData *)
ASIOKit::start(IOService *)
ASIOKit::stop(IOService *)
ASIOKit::~ASIOKit()
ASIOKitUserClient::AoOapHZis11ZWGBt(_XqnwpLSFrBke2fSP *)
ASIOKitUserClient::IbN2f3LUJbYHz0fZ(OSObject *,void *,IOExternalMethodArguments *)
ASIOKitUserClient::MetaClass::alloc(void)
ASIOKitUserClient::NNW6204XjGxsj6oV(OSObject *,void *,IOExternalMethodArguments *)
ASIOKitUserClient::SyUDm5uomtfMytmv(OSObject *,void *,IOExternalMethodArguments *)
ASIOKitUserClient::TaWOjBSsmF3GGaLj(OSData **,OSData **,OSArray **,_InputToKext *)
ASIOKitUserClient::initWithTask(task *,void *,uint)
ASIOKitUserClient::vvzNvdGIueJcRdKd(OSObject *,void *,IOExternalMethodArguments *)
ASIOKitUserClient::~ASIOKitUserClient()
ASIOKitUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AUAADC3ClassSpecificDescriptorFetcher::BADD_Cluster(ushort)
AUAADC3ClassSpecificDescriptorFetcher::BADD_Connectors(ushort)
AUAADC3ClassSpecificDescriptorFetcher::getADC3ClassSpecificDescriptor(USBADC3::tClassSpecificRequest,USBADC3::ExtendedDescriptor *,uchar,uchar)
AUAADC3ClassSpecificDescriptorFetcher::initWithDevice(AppleUSBAudioDevice *)
AUAADC3ClassSpecificDescriptorFetcher::withDevice(AppleUSBAudioDevice *)
AUAASEndpointDictionary::initWithValues(bool,bool,bool,uchar,ushort)
AUAASEndpointDictionary::withValues(bool,bool,bool,uchar,ushort)
AUAClockMultiplierDictionary::initControlsArray(uchar const*,uchar)
AUAClockSelectorDictionary::initClockSourceIDs(uchar const*,uchar)
AUAClockSelectorDictionary::initControlsArray(uchar const*,uchar)
AUAClockSourceDictionary::getClockType(uchar *)
AUAClockSourceDictionary::getControlBitmap(uchar *)
AUAClockSourceDictionary::getIndexedClockSourceSamplingFrequencySubRange(SubRange32 *,ushort)
AUAClockSourceDictionary::hasFrequencyControl(bool)
AUAClockSourceDictionary::initControlsArray(uchar const*,uchar)
AUAConfigurationDictionary::addSampleRateToStreamDictionary(OSNumber *,uchar,uchar,bool)
AUAConfigurationDictionary::alternateSettingZeroCanStream(uchar)
AUAConfigurationDictionary::asEndpointGetLockDelay(ushort *,uchar,uchar)
AUAConfigurationDictionary::asEndpointGetLockDelayUnits(uchar *,uchar,uchar)
AUAConfigurationDictionary::asEndpointHasSampleFreqControl(uchar,uchar)
AUAConfigurationDictionary::asHasActiveAlternateSettingControl(uchar,uchar)
AUAConfigurationDictionary::asHasValidAlternateSettingsControl(uchar,uchar)
AUAConfigurationDictionary::channelHasMuteControl(uchar,uchar,uchar,uchar,bool &)
AUAConfigurationDictionary::clearAllSampleRates(uchar,uchar)
AUAConfigurationDictionary::clockSourceHasFrequencyControl(uchar,uchar,uchar,bool)
AUAConfigurationDictionary::clockSourceHasValidityControl(uchar,uchar,uchar)
AUAConfigurationDictionary::getAltSettingWithSettings(uchar *,uchar,uchar,uchar,uint)
AUAConfigurationDictionary::getAudioClusterDescriptor(AudioClusterDescriptor *,uchar,uchar,uchar)
AUAConfigurationDictionary::getBitResolution(uchar *,uchar,uchar)
AUAConfigurationDictionary::getClockSelectorSources(OSArray **,uchar,uchar,uchar)
AUAConfigurationDictionary::getClockSourceAssocTerminal(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getClockSourceClockType(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getClockSourceDictionary(uchar,uchar,uchar)
AUAConfigurationDictionary::getClockSourceID(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getControlDictionary(uchar,uchar)
AUAConfigurationDictionary::getControlledStreamNumbers(OSArray **,uchar *)
AUAConfigurationDictionary::getDelay(uchar *,uchar,uchar)
AUAConfigurationDictionary::getFormat(ushort *,uchar,uchar)
AUAConfigurationDictionary::getHighestSampleRate(uint *,uchar,uchar)
AUAConfigurationDictionary::getIndexedClockSelectorID(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIndexedInputTerminalID(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIndexedInputTerminalType(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIndexedOutputTerminalID(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIndexedOutputTerminalType(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getInputTerminalType(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getInterfaceClass(uchar *,uchar,uchar)
AUAConfigurationDictionary::getInterfaceSubClass(uchar *,uchar,uchar)
AUAConfigurationDictionary::getInterruptEndpointAddress(uchar *,uchar,uchar)
AUAConfigurationDictionary::getIsocAssociatedEndpointAddress(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocAssociatedEndpointMaxPacketSize(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocAssociatedEndpointRefreshInt(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointAddress(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointDirection(uchar *,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointInterval(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointMaxPacketSize(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointSyncType(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getIsocEndpointUsageType(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getNextAltSettingWithNumChannels(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getNextAltSettingWithSampleRate(uchar *,uchar,uchar,uint)
AUAConfigurationDictionary::getNextAltSettingWithSampleSize(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getNumAltSettings(uchar *,uchar)
AUAConfigurationDictionary::getNumChannels(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumClockSelectors(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumControls(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getNumInputTerminals(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumOutputTerminals(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumSampleRates(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumSelectorUnits(uchar *,uchar,uchar)
AUAConfigurationDictionary::getNumSources(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getNumStreamInterfaces(uchar *)
AUAConfigurationDictionary::getOutputTerminalType(ushort *,uchar,uchar,uchar)
AUAConfigurationDictionary::getSampleRates(uchar,uchar)
AUAConfigurationDictionary::getSourceID(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getSourceIDs(OSArray **,uchar,uchar,uchar)
AUAConfigurationDictionary::getStreamDictionary(uchar,uchar)
AUAConfigurationDictionary::getStringIndex(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getSubType(uchar *,uchar,uchar,uchar)
AUAConfigurationDictionary::getSubframeSize(uchar *,uchar,uchar)
AUAConfigurationDictionary::getTerminalClockEntities(uchar,uchar)
AUAConfigurationDictionary::getTerminalLink(uchar *,uchar,uchar)
AUAConfigurationDictionary::hasAudioStreamingInterfaces(void)
AUAConfigurationDictionary::hasInterruptEndpoint(uchar,uchar)
AUAConfigurationDictionary::initWithValues(StandardUSB::ConfigurationDescriptor const*,uchar,AppleUSBAudioDevice *)
AUAConfigurationDictionary::isHeadsetAdapterFunction(void)
AUAConfigurationDictionary::parseConfigurationDescriptor(OSArray *,AppleUSBAudioDevice *)
AUAConfigurationDictionary::parseInterfaceDescriptor(OSArray *,uchar *,uchar *,uchar *,bool)
AUAConfigurationDictionary::supportsLatencyControls(uchar,uchar)
AUAConfigurationDictionary::verifySampleRateIsSupported(uchar,uchar,uint)
AUAConfigurationDictionary::withValues(StandardUSB::ConfigurationDescriptor const*,uchar,AppleUSBAudioDevice *)
AUAControlDictionary::BADD_ACInterface(uchar,ushort)
AUAControlDictionary::BADD_ASInterface(uchar,uchar,uchar)
AUAControlDictionary::BADD_ClockSource(uchar,uchar)
AUAControlDictionary::BADD_FeatureUnit(uchar,uchar,uchar)
AUAControlDictionary::BADD_InputTerminal(uchar,uchar,uchar)
AUAControlDictionary::BADD_MixerUnit(uchar,uchar)
AUAControlDictionary::BADD_OutputTerminal(uchar,uchar,uchar)
AUAControlDictionary::BADD_PowerDomain(uchar)
AUAControlDictionary::channelHasMuteControl(uchar,uchar,bool &)
AUAControlDictionary::channelHasVolumeControl(uchar,uchar,bool &)
AUAControlDictionary::checkForBasicAudioDevice(OSArray *,AUAADC3ClassSpecificDescriptorFetcher *,uchar)
AUAControlDictionary::clockSourceHasFrequencyControl(uchar,bool)
AUAControlDictionary::clockSourceHasValidityControl(uchar)
AUAControlDictionary::getAudioClusterDescriptor(AudioClusterDescriptor *,uchar)
AUAControlDictionary::getClockMultiplierDictionary(uchar)
AUAControlDictionary::getClockSelectorDictionary(uchar)
AUAControlDictionary::getClockSelectorSources(OSArray **,uchar)
AUAControlDictionary::getClockSourceAssocTerminal(uchar *,uchar)
AUAControlDictionary::getClockSourceClockType(uchar *,uchar)
AUAControlDictionary::getClockSourceDictionary(uchar)
AUAControlDictionary::getClockSourceID(uchar *,uchar)
AUAControlDictionary::getEffectUnitDictionary(uchar)
AUAControlDictionary::getExtensionUnitDictionary(uchar)
AUAControlDictionary::getExtensionUnitSources(OSArray **,uchar)
AUAControlDictionary::getFeatureUnitDictionary(uchar)
AUAControlDictionary::getIndexedClockSelectorDictionary(uchar)
AUAControlDictionary::getIndexedClockSelectorID(uchar *,uchar)
AUAControlDictionary::getIndexedEndpointDictionary(uchar)
AUAControlDictionary::getIndexedInputTerminalID(uchar *,uchar)
AUAControlDictionary::getIndexedInputTerminalType(ushort *,uchar)
AUAControlDictionary::getIndexedOutputTerminalID(uchar *,uchar)
AUAControlDictionary::getIndexedOutputTerminalType(ushort *,uchar)
AUAControlDictionary::getInputTerminalDictionary(uchar)
AUAControlDictionary::getInputTerminalType(ushort *,uchar)
AUAControlDictionary::getInterruptEndpointAddress(uchar *)
AUAControlDictionary::getMixerSources(OSArray **,uchar)
AUAControlDictionary::getMixerUnitDictionary(uchar)
AUAControlDictionary::getNumControls(uchar *,uchar)
AUAControlDictionary::getNumInputTerminals(uchar *)
AUAControlDictionary::getNumOutputTerminals(uchar *)
AUAControlDictionary::getNumSelectorUnits(uchar *)
AUAControlDictionary::getNumSources(uchar *,uchar)
AUAControlDictionary::getOutputTerminalDictionary(uchar)
AUAControlDictionary::getOutputTerminalType(ushort *,uchar)
AUAControlDictionary::getProcessingUnitDictionary(uchar)
AUAControlDictionary::getProcessingUnitSources(OSArray **,uchar)
AUAControlDictionary::getSelectorSources(OSArray **,uchar)
AUAControlDictionary::getSelectorUnitDictionary(uchar)
AUAControlDictionary::getSourceID(uchar *,uchar)
AUAControlDictionary::getSourceIDs(OSArray **,uchar)
AUAControlDictionary::getStringIndex(uchar *,uchar)
AUAControlDictionary::getSubType(uchar *,uchar)
AUAControlDictionary::getTerminalClockEntities(void)
AUAControlDictionary::getUnitDictionary(uchar)
AUAControlDictionary::hasInterruptEndpoint(void)
AUAControlDictionary::inputTerminalHasConnectorControl(uchar)
AUAControlDictionary::outputTerminalHasConnectorControl(uchar)
AUAControlDictionary::parseACInterfaceDescriptor_1_0(OSArray *,uchar,ulong long)
AUAControlDictionary::parseACInterfaceDescriptor_2_0(OSArray *,uchar,ulong long)
AUAControlDictionary::parseACInterfaceDescriptor_3_0(OSArray *,uchar,ulong long,AUAADC3ClassSpecificDescriptorFetcher *)
AUAControlDictionary::parseACInterruptEndpointDescriptor(OSArray *)
AUAControlDictionary::parseACStandardInterfaceDescriptor(StandardUSB::InterfaceDescriptor const*)
AUAControlDictionary::parseInterfaceAssociationDescriptor(StandardUSB::InterfaceAssociationDescriptor const*)
AUAControlDictionary::validateBasicAudioDeviceDescriptors(uchar,OSArray const*,uint &)
AUAEffectUnitDictionary::initControlsArray(uchar const*,uchar)
AUAEndpointDictionary::getDirection(uchar *)
AUAEndpointDictionary::getSyncType(uchar *)
AUAEndpointDictionary::getUsageType(uchar *)
AUAEndpointDictionary::isIsocFeedback(void)
AUAEndpointDictionary::isIsocStreaming(void)
AUAExtensionUnitDictionary::initSourceIDs(uchar const*,uchar)
AUAFeatureUnitDictionary::channelHasMuteControl(uchar,bool &)
AUAFeatureUnitDictionary::channelHasVolumeControl(uchar,bool &)
AUAFeatureUnitDictionary::initControlsArray(uchar const*,uchar)
AUAMixerUnitDictionary::initControlsArray(uchar const*,uchar)
AUAMixerUnitDictionary::initSourceIDs(uchar const*,uchar)
AUAProcessingUnitDictionary::initControlsArray(uchar const*,uchar)
AUAProcessingUnitDictionary::initSourceIDs(uchar const*,uchar)
AUASelectorUnitDictionary::initSourceIDs(uchar const*,uchar)
AUAStreamDictionary::addSampleRate(uint,bool)
AUAStreamDictionary::addSampleRateToStreamDictionary(OSNumber *,bool)
AUAStreamDictionary::asEndpointGetLockDelay(ushort *)
AUAStreamDictionary::asEndpointGetLockDelayUnits(uchar *)
AUAStreamDictionary::asEndpointHasSampleFreqControl(void)
AUAStreamDictionary::asHasActiveAlternateSettingControl(void)
AUAStreamDictionary::asHasValidAlternateSettingsControl(void)
AUAStreamDictionary::clearAllSampleRates(void)
AUAStreamDictionary::getASEndpointDictionary(void)
AUAStreamDictionary::getControlBitmap(uchar *)
AUAStreamDictionary::getEndpointByAddress(uchar)
AUAStreamDictionary::getEndpoints(void)
AUAStreamDictionary::getIndexedEndpointDictionary(uchar)
AUAStreamDictionary::getIsocAssociatedEndpointAddress(uchar *,uchar)
AUAStreamDictionary::getIsocAssociatedEndpointMaxPacketSize(ushort *,uchar)
AUAStreamDictionary::getIsocAssociatedEndpointRefreshInt(uchar *,uchar)
AUAStreamDictionary::getIsocEndpointAddress(uchar *,uchar)
AUAStreamDictionary::getIsocEndpointDirection(uchar *,uchar)
AUAStreamDictionary::getIsocEndpointInterval(uchar *,uchar)
AUAStreamDictionary::getIsocEndpointMaxPacketSize(ushort *,uchar)
AUAStreamDictionary::getIsocEndpointSyncType(uchar *,uchar)
AUAStreamDictionary::getIsocEndpointUsageType(uchar *,uchar)
AUAStreamDictionary::initControlsArray(uchar const*,uchar)
AUAStreamDictionary::parseASInterfaceDescriptor_1_0(OSArray *,uchar)
AUAStreamDictionary::parseASInterfaceDescriptor_2_0(OSArray *,uchar,ushort)
AUAStreamDictionary::parseASInterfaceDescriptor_3_0(OSArray *,uchar,AUAADC3ClassSpecificDescriptorFetcher *)
AUC::AUCVideoInterfaceMatching(IOAVLocation)
AUC::DPPluggedNotification(void *,IOService *)
AUC::DPPluggedNotificationGated(IOService *)
AUC::DPRemovedNotification(void *,IOService *)
AUC::DPRemovedNotificationGated(IOService *)
AUC::DisplayCapable(ulong long,AUCDisplayType)
AUC::DisplayProtectionOptions(AUCDisplayType,ulong long *)
AUC::HDCPGetSecureStatusForDisplay(uint,uint *,uint *,uint *,uint *,bool *)
AUC::InterfaceCapable(IOAVVideoInterface *,ulong long,bool *)
AUC::InterfaceProtectionOptions(IOAVVideoInterface *,ulong long *)
AUC::InterfaceStatusAndType(IOAVVideoInterface *,uint *,uint *)
AUC::RemoveUserClient(AUCUserClient *,uint)
AUC::SetUserClient(AUCUserClient *,uint *)
AUC::aucUpstreamConnectionCallback(UpstreamConnectionCallbackType,void *)
AUC::aucUpstreamConnectionStatusUpdated(void)
AUC::call_DPPluggedNotificationGated(IOService *)
AUC::call_DPRemovedNotificationGated(IOService *)
AUC::checkForHooverProtocolRequired(void)
AUC::createDisplayNotifications(void)
AUC::finalize(uint)
AUC::free(void)
AUC::hdcp_ConnectionWatchdog_will_stop(ConnectionWatchdog *)
AUC::hdcp_get_reply(uchar *,ulong *)
AUC::hdcp_send_request(uchar const*,ulong,ConnectionWatchdog *)
AUC::hdcp_send_request_gated(uchar const*,ulong,ConnectionWatchdog *)
AUC::init(OSDictionary *)
AUC::probe(IOService *,int *)
AUC::protectedIOSurfaceSeen(void)
AUC::protectedIOSurfaceSeenRecentlyTimer_Enable(bool)
AUC::protectedIOSurfaceSeenRecentlyTimer_Handler(OSObject *,IOTimerEventSource *)
AUC::setBootFailure(char const*,...)
AUC::start(IOService *)
AUC::stop(IOService *)
AUC::terminate(uint)
AUC::upstreamConnectionsGetCombinedStatusUpdatedFlag(void)
AUC::willTerminate(IOService *,uint)
AUCLock::create(void)
AUCScheduler::create(char *)
AUCScheduler::dispatchDPPluggedNotification(AUC *,IOAVVideoInterface *)
AUCUserClient::CloseUserClient(void)
AUCUserClient::DetachUserClientFromProvider(void)
AUCUserClient::OpenUserClient(void)
AUCUserClient::ProcessStatusChange(void)
AUCUserClient::SetStatusChangeCallback(_AUCKernelStatusChangeCallbackInStruct *,_AUCKernelStatusChangeCallbackOutStruct *,ipc_port *,ulong long *)
AUCUserClient::_GetStatus(AUCUserClient*,void *,IOExternalMethodArguments *)
AUCUserClient::_IsDisplayCapable(AUCUserClient*,void *,IOExternalMethodArguments *)
AUCUserClient::_SetStatusChangeCallback(AUCUserClient*,void *,IOExternalMethodArguments *)
AUCUserClient::clientClose(void)
AUCUserClient::clientDied(void)
AUCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AUCUserClient::start(IOService *)
AUCWorkloop::addAUCEventSource(IOTimerEventSource *,AUC *)
AUCWorkloop::release(void)
AVC_CalcMaxDpbSize(uint,uint,SH_PROFILE_TYPE,SH_LEVEL_TYPE)
AVC_PPS::AVC_PPS(H264_PICTURE_HEADER_PARAMS *)
AVC_PPS::Generate(AVC_SPS *,int,int)
AVC_PPS::GenerateExtra(AVC_SPS *,int,int)
AVC_PPS::pic_parameter_set_rbsp(AVC_SPS *,WriteBits *,int)
AVC_RBSP::AVC_RBSP(void)
AVC_RBSP::flush_bits(int,bool)
AVC_RBSP::getNumberOfBitsParsed(void)
AVC_RBSP::get_next_uint32(uchar *,uint *,uint *)
AVC_RBSP::more_rbsp_data(void)
AVC_RBSP::next_access_unit(bool)
AVC_RBSP::parseNAL(sAvcNaluHeader *,bool)
AVC_RBSP::parsePPS(sAvcPPS *,sAvcSPS *)
AVC_RBSP::parseSliceHeader(sAvcSliceHeader *,sAvcNaluHeader *,sAvcPPS *,sAvcSPS *)
AVC_RBSP::scalingList(uchar *,uint,uint,uint)
AVC_RBSP::setRBSP(uchar *,ulong long)
AVC_RLM::AVC_RLM(CAVDAvcDecoder *)
AVC_RLM::createDPBIndex(sAvcPictureInfo *,uint &)
AVC_RLM::dec_ref_pic_marking(sAvcSliceHeader &,sAvcPictureInfo &)
AVC_RLM::decodePicOrderCnt(sAvcNaluHeader &,sAvcSPS &,sAvcSliceHeader &)
AVC_RLM::fillFrameNumGap(sAvcSliceHeader &)
AVC_RLM::findRefFrameByPicNumInDPB(int)
AVC_RLM::getDPBRef(sAvcPictureInfo **)
AVC_RLM::getDpbSize(sAvcSPS &)
AVC_RLM::getOutputFrame(sAvcPictureInfo &)
AVC_RLM::initPicture(sAvcNaluHeader &,sAvcSPS &,sAvcSliceHeader &,sAvcPictureInfo &)
AVC_RLM::initRefPicList(sAvcSliceHeader &,sAvcSliceInfo &,sAvcPictureInfo const&)
AVC_RLM::invalidateDpb(void)
AVC_RLM::ref_pic_list_modification(sAvcSliceInfo &,sAvcPictureInfo const&)
AVC_RLM::removeReferenceFrame(uint)
AVC_RLM::removeUnusedRefFrames(void)
AVC_RLM::reorderRefPicList(sAvcSliceInfo &,sAvcPictureInfo const&,uint)
AVC_RLM::slidingWindowProcess(bool)
AVC_RLM::truncateDpb(uint)
AVC_SPS::AVC_SPS(H264_SEQUENCE_HEADER_PARAMS *)
AVC_SPS::Generate(void)
AVC_SPS::seq_parameter_set_rbsp(WriteBits *)
AVC_SPS::set_default_SPS(void)
AVC_SPS::vui_parameters(WriteBits *)
AVC_Slice::AVC_Slice(H264_SLICE_HEADER_PARAMS *)
AVC_Slice::Generate(AVC_SPS const*,AVC_PPS const*,SlicePerFrameFields *,AVE_DPB *)
AVC_Slice::GenerateMap(uint,uint,uint,uint)
AVC_Slice::ResetMultiPass(void)
AVC_Slice::dec_ref_pic_marking(WriteBits *,SlicePerFrameFields *)
AVC_Slice::pred_weight_table(WriteBits *)
AVC_Slice::ref_pic_list_modification(WriteBits *,SlicePerFrameFields *)
AVC_Slice::slice_header(WriteBits *,AVC_SPS const*,AVC_PPS const*,int,SlicePerFrameFields *)
AVDDart::AVDDart(uint)
AVDDart::addMemoryDescToGart(IOMemoryDescriptor *,IODMACommand **,ulong long *,uint)
AVDDart::dartMapMemoryDescriptor(IOMemoryDescriptor *,IODMACommand **,ulong long *,uint)
AVDDart::flushInactiveDARTMappings(void)
AVDDart::grabPowerLock(void)
AVDDart::initialize(IOService *,IOWorkLoop *,IOService *,IOSurfaceRoot *,eValidNumDvaBits,bool)
AVDDart::removeMemoryDescFromGart(IOMemoryDescriptor *,IODMACommand *,uint)
AVDDart::setActive(bool)
AVDDart::teardown(void)
AVDDart::~AVDDart()
AVE_AVC_CheckFrameDimension(uint,uint,bool)
AVE_AVC_CheckInfo(_E_AVE_DevType,AVE_SessionSettings_UserKernel_Data *)
AVE_AVC_GeneratePPS(_S_AVE_Client *)
AVE_AVC_GenerateSlice(_S_AVE_Client *,_S_AVE_FrameInfo *,bool)
AVE_BlkBuf_AlignMem(ulong *,uint *,uint,uint)
AVE_BlkBuf_Alloc(_S_AVE_BlkBuf *,ulong *)
AVE_BlkBuf_CalcSize(uint,uint,uint)
AVE_BlkBuf_Create(uint,uint,uint,_S_AVE_BlkBuf **)
AVE_BlkBuf_Destroy(_S_AVE_BlkBuf *)
AVE_BlkBuf_Free(_S_AVE_BlkBuf *,ulong)
AVE_BlkBuf_Make(_S_AVE_BlkBuf *,uint,ulong,uint,uint)
AVE_BlkPool::AVE_BlkPool(void)
AVE_BlkPool::Alloc(ulong *)
AVE_BlkPool::Create(uint,uint,uint,uint)
AVE_BlkPool::Destroy(void)
AVE_BlkPool::Free(ulong)
AVE_BlkPool::SearchAllocBuf(_S_AVE_BlkBuf **)
AVE_CHMList_CalcDPMStats(_S_AVE_DLNode *,_S_AVE_DPMStats *)
AVE_CHMList_CalcPipeStats(_S_AVE_DLNode *,_S_AVE_PipeStats *)
AVE_CHMList_DARTMap(_S_AVE_DLNode *,_S_AVE_CHM *,uint,AVE_Surface *,AVE_DART *)
AVE_CHMList_FindClient(_S_AVE_DLNode *,uint)
AVE_CHMList_GetCmdCntInInput(_S_AVE_DLNode *,uint)
AVE_CHMList_GetCmdCntInOutput(_S_AVE_DLNode *,uint)
AVE_CHMList_GetCmdCntInReady(_S_AVE_DLNode *,uint)
AVE_CHMList_GetCmdCntInRun(_S_AVE_DLNode *,uint)
AVE_CHMList_InsertByPriority(_S_AVE_DLNode *,_S_AVE_CHM *)
AVE_CHMList_SetState(_S_AVE_DLNode *,_E_AVE_CHM_State)
AVE_CHMList_SkipAllCmds_First(_S_AVE_DLNode *,uint)
AVE_CHMList_SkipAllCmds_Second(_S_AVE_DLNode *,uint)
AVE_CHM_AppendCmd(_S_AVE_CHM *,_E_AVE_Cmd,uint,ulong long,_S_AVE_TimeOut *,_S_AVE_FrameInfo *)
AVE_CHM_CalcDPMStats(_S_AVE_CHM *,_S_AVE_DPMStats *)
AVE_CHM_CalcPipeStats(_S_AVE_CHM *,_S_AVE_PipeStats *)
AVE_CHM_CheckDataReady(_S_AVE_CHM *)
AVE_CHM_DARTMapInInput(_S_AVE_CHM *,uint,AVE_Surface *,AVE_DART *)
AVE_CHM_DARTMapInReady(_S_AVE_CHM *,uint,AVE_Surface *,AVE_DART *)
AVE_CHM_DARTMapSurfaces(_S_AVE_CHM *)
AVE_CHM_DropAllCmds_First(_S_AVE_CHM *,uint)
AVE_CHM_DropAllCmds_Second(_S_AVE_CHM *,uint)
AVE_CHM_FinishCmd(_S_AVE_CHM *,_S_AVE_Cmd *,int)
AVE_CHM_GetCmdCntInAll(_S_AVE_CHM *,uint)
AVE_CHM_GetCmdCntInReady(_S_AVE_CHM *,uint)
AVE_CHM_GetFwCmdCnt(_S_AVE_CHM *)
AVE_CHM_GetFwDPBBuf(_S_AVE_CHM *,AVE_Surface *,uint *,ulong long *)
AVE_CHM_HandleCmds(_S_AVE_CHM *,_S_AVE_DLNode *,uint,int)
AVE_CHM_Init(_S_AVE_CHM *,void *)
AVE_CHM_InsertCmdByCnt(_S_AVE_DLNode *,_S_AVE_Cmd *)
AVE_CHM_MakeFwCmd_Close(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdStop *)
AVE_CHM_MakeFwCmd_Complete(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdComplete *)
AVE_CHM_MakeFwCmd_Flush(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdFlush *)
AVE_CHM_MakeFwCmd_Open(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdStart *)
AVE_CHM_MakeFwCmd_Process_AVC(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdAvcEncode *,uint,AVE_PICMGMT_PARAMS *)
AVE_CHM_MakeFwCmd_Process_HEVC(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdHevcEncode *,uint,AVE_PICMGMT_PARAMS *)
AVE_CHM_MakeFwCmd_Reset(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdReset *)
AVE_CHM_MakeFwCmd_Start_AVC(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdAvcInit *)
AVE_CHM_MakeFwCmd_Start_HEVC(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdHevcInit *)
AVE_CHM_MakeFwCmd_Stop(_S_AVE_CHM *,_S_AVE_TimeOut *,sCAveCmdUninit *)
AVE_CHM_MarkCmds(_S_AVE_CHM *,_S_AVE_DLNode *,uint,uint,long long)
AVE_CHM_MoveCmd(_S_AVE_CHM *,_S_AVE_Cmd *,_E_AVE_CHM_Stage)
AVE_CHM_PrepareDataInfo(_S_AVE_CHM *,_S_AVE_FrameInfo *,_S_AVE_DPB_Set *,AVE_PICMGMT_PARAMS *)
AVE_CHM_Print(_S_AVE_CHM *,uint,int,char const*,uint)
AVE_CHM_PrintCmds(_S_AVE_CHM *,_S_AVE_DLNode *,uint,uint,int,char const*)
AVE_CHM_SetDataInfo_Frame(_S_AVE_CHM *,_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *)
AVE_CHM_SetDataInfo_FwBuf(_S_AVE_CHM *,_S_AVE_FrameInfo *,_S_AVE_DPB_Set *,AVE_PICMGMT_PARAMS *)
AVE_CHM_SetDataInfo_Header(_S_AVE_CHM *,_S_AVE_FrameInfo *,bool,AVE_PICMGMT_PARAMS *)
AVE_CHM_SetDataInfo_RC(_S_AVE_CHM *,_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *)
AVE_CHM_SetFwBuf(_S_AVE_CHM *,_S_AVE_SurfaceSet *,_S_AVE_SurfaceInfoSet *,AVE_VIDEO_PARAMS *)
AVE_CHM_SkipAllCmds_First(_S_AVE_CHM *,uint)
AVE_CHM_Uninit(_S_AVE_CHM *)
AVE_CalcBufNumOfCodedData(_E_AVE_DevType,uint,uint,uint)
AVE_CalcBufNumOfColocated(uint,uint,int,bool)
AVE_CalcBufNumOfEntropyCoding(_E_AVE_CodecType,uint,bool)
AVE_CalcBufNumOfLowResRef(uint,uint,int,bool)
AVE_CalcBufNumOfMBStats(bool,_E_AVE_DevType,uint,uint,uint)
AVE_CalcBufNumOfRecon(uint,uint,int,bool,uint,uint,uint,_E_AVE_CodecType,uint,uint)
AVE_CalcBufNumOfSliceHeader(_E_AVE_CodecType,_E_AVE_DevType,uint,uint,uint)
AVE_CalcBufNumOfSrcNeighborFwData(_E_AVE_DevType)
AVE_CalcBufNumOfTranscodedData(_E_AVE_DevType,int)
AVE_CalcBufSetNumOfColocated(_E_AVE_DevType,uint)
AVE_CalcBufSizeOfCodedData(_E_AVE_CodecType,uint,uint,CHROMA_FORMAT,bool,bool,bool,bool,uint,uint)
AVE_CalcBufSizeOfColocated(_E_AVE_CodecType,uint,uint)
AVE_CalcBufSizeOfCrcQPMod(uint,uint)
AVE_CalcBufSizeOfEntropyCoding(_E_AVE_CodecType,uint,uint,CHROMA_FORMAT,uint,bool)
AVE_CalcBufSizeOfLowResRCResult(_E_AVE_DevType,bool,uint,uint)
AVE_CalcBufSizeOfLowResRef(AVE_VIDEO_CODEC_TYPE,uint,uint,CHROMA_FORMAT)
AVE_CalcBufSizeOfLowResResult(_E_AVE_DevType,_E_AVE_CodecType,uint,uint)
AVE_CalcBufSizeOfMBInputCtrl(AVE_VIDEO_CODEC_TYPE,uint,uint)
AVE_CalcBufSizeOfMBStats(AVE_VIDEO_CODEC_TYPE,uint,uint)
AVE_CalcBufSizeOfRecon(_E_AVE_DevType,_E_AVE_CodecType,uint,uint,uint,uint,CHROMA_FORMAT,bool,uint *,uint *,uint *,uint *)
AVE_CalcBufSizeOfSrcNeighborData(AVE_VIDEO_CODEC_TYPE,uint)
AVE_CalcBufSizeOfSrcNeighborFwData(_E_AVE_CodecType,uint)
AVE_CalcBufSizeOfSrcNeighborInfo(AVE_VIDEO_CODEC_TYPE,uint,uint)
AVE_CalcBufSizeOfSrcNeighborPixel(AVE_VIDEO_CODEC_TYPE,uint,uint)
AVE_CalcBufSizeOfTranscodedData(_E_AVE_CodecType,uint,uint,CHROMA_FORMAT,bool,bool,bool,bool,uint,uint)
AVE_CalcFrameSize(uint,uint,uint,CHROMA_FORMAT)
AVE_CalcNumOfInputQueue(_E_AVE_DevType,uint,uint,uint,uint)
AVE_Cfg_Init(void)
AVE_Cfg_InitDPM(_S_AVE_DPM_Cfg volatile*)
AVE_Cfg_Print(uint,int,char const*,uint)
AVE_Cfg_RetrieveBootArgs(_S_AVE_Cfg *)
AVE_Cfg_UpdateDPM(_S_AVE_DPM_Range volatile*,_S_AVE_DPM_Range*)
AVE_ChkBuf_Alloc(_S_AVE_ChkBuf *,uint,uint *,ulong *)
AVE_ChkBuf_BuddyMerge(_S_AVE_ChkIdx *,int,int)
AVE_ChkBuf_BuddySplit(_S_AVE_ChkIdx *,uint,int)
AVE_ChkBuf_CalcAlignedSize(uint *,uint *,_S_AVE_Ratio *)
AVE_ChkBuf_CalcSize(uint,uint,bool)
AVE_ChkBuf_Create(uint,uint,_S_AVE_ChkBuf **)
AVE_ChkBuf_CreateWithMem(ulong,uint,uint,uint,_S_AVE_ChkBuf **)
AVE_ChkBuf_Free(_S_AVE_ChkBuf *,ulong)
AVE_ChkBuf_Make(_S_AVE_ChkBuf *,uint,ulong,uint,uint)
AVE_ChkBuf_RoundRatio(uint,uint,_S_AVE_Ratio *)
AVE_ChkBuf_SearchFreeNode(_S_AVE_ChkBuf *,uint,int *)
AVE_ChkPool::AVE_ChkPool(void)
AVE_ChkPool::Alloc(uint,uint *,ulong *)
AVE_ChkPool::CreateWithMem(ulong,uint,uint,uint)
AVE_ChkPool::Destroy(void)
AVE_ChkPool::Free(ulong)
AVE_ChkPool::SearchAllocBuf(uint,uint,_S_AVE_ChkBuf **)
AVE_ChkPool::SearchFreeBuf(ulong,_S_AVE_ChkBuf **)
AVE_ClientList_CalcClientStats(_S_AVE_DLNode *,_S_AVE_DLB_ClientStats *)
AVE_ClientList_CalcSVEStats(_S_AVE_DLNode *,_S_AVE_DLB_SVEStats *,uint)
AVE_ClientList_CalcStats(_S_AVE_DLNode *,_S_AVE_ClientStats *)
AVE_ClientList_GetCmdCntInInput(_S_AVE_DLNode *,uint)
AVE_ClientList_InsertByPriority(_S_AVE_DLNode *,_S_AVE_Client *)
AVE_ClientList_SetPowerState(_S_AVE_DLNode *,bool)
AVE_ClientList_SkipAllCmds(_S_AVE_DLNode *,uint)
AVE_Client_AcquireOutputBuf(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Client_AddDLBStatsPerCHM(_S_AVE_Client *,_S_AVE_SVEMap *,_S_AVE_DLB_SVEStats *)
AVE_Client_AppendCmd(_S_AVE_Client *,_E_AVE_Cmd,uint,_S_AVE_TimeOut *,void *)
AVE_Client_AssignHwC(_S_AVE_Client *,int *,uint)
AVE_Client_CalcCTUNumOfCHM(_S_AVE_Client *,uint,uint *)
AVE_Client_CalcDPMThreshold(_S_AVE_Client *,_S_AVE_DPM_Threshold *)
AVE_Client_CalcHwCMax(_S_AVE_Client *)
AVE_Client_CalcHwCNum(_S_AVE_Client *)
AVE_Client_CalcMBNumOfCHM(_S_AVE_Client *,uint,uint *)
AVE_Client_CalcRefNum(_S_AVE_Client *)
AVE_Client_CalcRefNum_Ext(_S_AVE_Client *)
AVE_Client_CalcSurfaceInfo(_S_AVE_Client *,_S_AVE_SurfaceInfoSet *)
AVE_Client_CalcSurfaceInfo_LRME(_S_AVE_Client *,_S_AVE_SurfaceInfoSet *)
AVE_Client_CheckCodecInfo(_E_AVE_DevType,AVE_SessionSettings_UserKernel_Data *)
AVE_Client_CheckCommonInfo(_S_AVE_Client *,bool,AVE_SessionSettings_UserKernel_Data *)
AVE_Client_CheckExternalSurface(_S_AVE_Client *,_S_AVE_SurfaceSet *)
AVE_Client_CheckFrameInfo(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_CheckFwBuf(AVE_SessionSettings_UserKernel_Data *)
AVE_Client_CheckInfo(_S_AVE_Client *,bool,AVE_SessionSettings_UserKernel_Data *)
AVE_Client_Close(_S_AVE_Client *,_S_AVE_TimeOut *)
AVE_Client_CmpPriority(_S_AVE_Client *,_S_AVE_Client *)
AVE_Client_Complete(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Client_Config(_S_AVE_Client *,bool)
AVE_Client_ConfigDLB(_S_AVE_Client *)
AVE_Client_CopyFrameInfoFromEx(_S_AVE_Client *,uint)
AVE_Client_CopyFrameInfoToEx(_S_AVE_Client *,uint)
AVE_Client_Create(AppleAVE2UserClient *,AppleAVE2Driver *,task *,_S_AVE_Cfg const*,AVE_DevInfo *,AVE_SurfaceMgr *,_S_AVE_History *,uint,_E_AVE_ClientType,_E_AVE_CodecType,uint,_S_AVE_Client **)
AVE_Client_CreateDataSurface(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_CreateMultiPassDataSurface(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_DecideFrameType(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_DecideRegOpt(_S_AVE_Client *)
AVE_Client_DecideThroughputMode(_S_AVE_Client *,_S_AVE_ClientStats *,_S_AVE_FrameInfo *)
AVE_Client_Destroy(_S_AVE_Client *)
AVE_Client_DestroyDataSurface(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_DestroyMultiPassDataSurface(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_Die(_S_AVE_Client *,_S_AVE_TimeOut *)
AVE_Client_DispatchCmd(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Client_DropAllCmds(_S_AVE_Client *,uint)
AVE_Client_DropGroupCmds(_S_AVE_Client *)
AVE_Client_FindCHM(_S_AVE_Client *,uint)
AVE_Client_GeneratePPS(_S_AVE_Client *)
AVE_Client_GenerateSPS(_S_AVE_Client *)
AVE_Client_GenerateSlicesMap(_S_AVE_Client *,uint)
AVE_Client_GenerateVPS(_S_AVE_Client *)
AVE_Client_HandleCmd(_S_AVE_Client *,_S_AVE_Cmd *,int)
AVE_Client_HandleCmds(_S_AVE_Client *,_S_AVE_DLNode *,uint,int)
AVE_Client_HandleGroupCmds(_S_AVE_Client *,_S_AVE_DLNode *,int)
AVE_Client_Init(_S_AVE_Client *,AppleAVE2UserClient *,AppleAVE2Driver *,task *,_S_AVE_Cfg const*,AVE_DevInfo *,AVE_SurfaceMgr *,_S_AVE_History *,uint,_E_AVE_ClientType,_E_AVE_CodecType)
AVE_Client_InitFrameQueue(_S_AVE_Client *,uint)
AVE_Client_InitPS(_S_AVE_Client *)
AVE_Client_InitRC(_S_AVE_Client *)
AVE_Client_ManageRC(_S_AVE_Client *,_S_AVE_FrameInfo *,_S_AVE_DPB_Set *,AVE_PICMGMT_PARAMS *)
AVE_Client_Notify(_S_AVE_Client *,_S_AVE_FrameInfo *,int,int,bool)
AVE_Client_Open(_S_AVE_Client *)
AVE_Client_Prepare(_S_AVE_Client *,_S_AVE_TimeOut *,int,_S_AVE_SurfaceIDSet *,char const*)
AVE_Client_Print(_S_AVE_Client *,uint,int,char const*,uint)
AVE_Client_PrintCmds(_S_AVE_Client *,_S_AVE_DLNode *,uint,uint,int,char const*)
AVE_Client_Process(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Client_ReleaseOutputBuf(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Client_Reset(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Client_SetSliceHeader(_S_AVE_Client *,_S_AVE_FrameInfo *,bool)
AVE_Client_Start(_S_AVE_Client *,_S_AVE_TimeOut *,int,_S_AVE_SurfaceIDSet *,char const*)
AVE_Client_Stop(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Client_Uninit(_S_AVE_Client *)
AVE_Client_UninitFrameQueue(_S_AVE_Client *)
AVE_Client_UninitPS(_S_AVE_Client *)
AVE_Client_UninitRC(_S_AVE_Client *)
AVE_Client_Update(_S_AVE_Client *,_S_AVE_ClientStats *,_S_AVE_FrameInfo *)
AVE_Client_UpdateCfg(_S_AVE_Client *)
AVE_Client_UpdateDPB(_S_AVE_Client *,_S_AVE_FrameInfo *,_S_AVE_DPB_Set *)
AVE_Client_UpdateFrameInfoFromOutputData(_S_AVE_Client *,_S_AVE_FrameInfo *,CODED_DATA_HDR *)
AVE_Client_UpdateFrameInfoFromStats(_S_AVE_Client *,_S_AVE_FrameInfo *,S_AVE_DRC_FrameStats *)
AVE_Client_UpdateOutputBuf(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Client_UpdateParameterSet(_S_AVE_Client *,uchar *,uint *)
AVE_Client_UpdateRC(_S_AVE_Client *,_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *)
AVE_Client_VerifyDataResource(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_Cmd2Str(_E_AVE_Cmd)
AVE_Cmd2Trace(_E_AVE_Cmd)
AVE_CmdList_GetCnt(_S_AVE_DLNode *,uint)
AVE_CmdList_Print(_S_AVE_DLNode *,uint,uint,int,char const*)
AVE_Cmd_SetResult(_S_AVE_Cmd *,int)
AVE_CreateExternalSurfaces(AVE_SurfaceMgr *,task *,_S_AVE_SurfaceIDSet *,uint,_S_AVE_SurfaceSet *)
AVE_CreateInternalSurfaces(AVE_SurfaceMgr *,_S_AVE_SurfaceInfoSet *,uint,_S_AVE_SurfaceSet *)
AVE_DART::AVE_DART(void)
AVE_DART::AddPool(int)
AVE_DART::DeletePools(void)
AVE_DART::ErrorHandler(void *,IODARTErrorInfo const*)
AVE_DART::Flush(void)
AVE_DART::GetEntry(_S_AVE_DART_Entry **)
AVE_DART::GetMapperRegistryEntry(uint)
AVE_DART::Init(IOService *,_S_AVE_Cfg const*,AVE_DevInfo *,uint,int)
AVE_DART::InstallErrorHandler(void)
AVE_DART::Map(IOMemoryDescriptor *,_S_AVE_DART_Entry **)
AVE_DART::Print(uint,int,char const*,uint)
AVE_DART::PrintPanic(void)
AVE_DART::PutEntry(_S_AVE_DART_Entry *)
AVE_DART::RetrieveDARTInfo(uint,ulong long *,ulong long *,ulong long *)
AVE_DART::RetrieveMapperInfo(uint,int *)
AVE_DART::SetActive(bool)
AVE_DART::SetMapCacheAttr(IOMemoryDescriptor *,uint)
AVE_DART::Uninit(void)
AVE_DART::Unmap(_S_AVE_DART_Entry *)
AVE_DART::~AVE_DART()
AVE_DARTMapExternalSurfaces(AVE_SurfaceMgr *,_S_AVE_SurfaceSet *,uint)
AVE_DARTMapInternalSurfaces(AVE_SurfaceMgr *,_S_AVE_SurfaceSet *,uint)
AVE_DART_Pool_Create(int,IOMapper *,_S_AVE_DART_Pool **)
AVE_DART_Pool_Destroy(_S_AVE_DART_Pool *)
AVE_DART_Pool_GetEntry(_S_AVE_DART_Pool *,_S_AVE_DART_Entry **)
AVE_DLB_Acquire(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_Alloc(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_Alloc(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_Assign(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_CalcStats(_S_AVE_DLB *,_S_AVE_DLNode *)
AVE_DLB_Init(_S_AVE_DLB *,_S_AVE_Cfg const*,AVE_DevInfo *)
AVE_DLB_Release(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_Remap(_S_AVE_DLB *,_S_AVE_DLNode *)
AVE_DLB_Select(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_Select(_S_AVE_DLB *,_S_AVE_DLNode *,_S_AVE_Client *)
AVE_DLB_SortStats_Cmp(void const*,void const*)
AVE_DLB_Uninit(_S_AVE_DLB *)
AVE_DLList_Back(_S_AVE_DLNode *)
AVE_DLList_Back(_S_AVE_DLNode *)
AVE_DLList_Begin(_S_AVE_DLNode *)
AVE_DLList_Begin(_S_AVE_DLNode *)
AVE_DLList_Empty(_S_AVE_DLNode *)
AVE_DLList_Empty(_S_AVE_DLNode *)
AVE_DLList_End(_S_AVE_DLNode *)
AVE_DLList_End(_S_AVE_DLNode *)
AVE_DLList_Erase(_S_AVE_DLNode *)
AVE_DLList_Erase(_S_AVE_DLNode *)
AVE_DLList_Front(_S_AVE_DLNode *)
AVE_DLList_Front(_S_AVE_DLNode *)
AVE_DLList_Init(_S_AVE_DLNode *)
AVE_DLList_Init(_S_AVE_DLNode *)
AVE_DLList_InsertAfter(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_InsertAfter(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_InsertBefore(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_InsertBefore(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_Next(_S_AVE_DLNode *)
AVE_DLList_Next(_S_AVE_DLNode *)
AVE_DLList_PopBack(_S_AVE_DLNode *)
AVE_DLList_PopBack(_S_AVE_DLNode *)
AVE_DLList_PopFront(_S_AVE_DLNode *)
AVE_DLList_PopFront(_S_AVE_DLNode *)
AVE_DLList_Prev(_S_AVE_DLNode *)
AVE_DLList_Prev(_S_AVE_DLNode *)
AVE_DLList_PushBack(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_PushBack(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_PushFront(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_PushFront(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_RBegin(_S_AVE_DLNode *)
AVE_DLList_RBegin(_S_AVE_DLNode *)
AVE_DLList_REnd(_S_AVE_DLNode *)
AVE_DLList_REnd(_S_AVE_DLNode *)
AVE_DLList_Size(_S_AVE_DLNode *)
AVE_DLList_Size(_S_AVE_DLNode *)
AVE_DLList_Splice(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DLList_Splice(_S_AVE_DLNode *,_S_AVE_DLNode *)
AVE_DPB::AVE_DPB(uint,uint,SH_HEVC_LEVEL_TYPE,SH_HEVC_PROFILE_TYPE,uint,bool,bool,uint)
AVE_DPB::AVE_DPB(uint,uint,SH_PROFILE_TYPE,SH_LEVEL_TYPE,uint,bool,bool,uint)
AVE_DPB::DPBFindEntryFromPOC(_S_AVE_DPB_Entry *,uint,uint)
AVE_DPB::DPBFindFirstInvalid(_S_AVE_DPB_Entry *,uint)
AVE_DPB::DPBFindLastShortTerm(_S_AVE_DPB_Entry *,uint)
AVE_DPB::DPBGetFrameRequested(_S_AVE_DPB_Entry *,uint)
AVE_DPB::DPBSanityCheck(bool *,bool *,uint *,uint *,uint *,_S_AVE_FrameInfo *)
AVE_DPB::DebugPrint(void)
AVE_DPB::GetDPBSnapShot(_S_AVE_DPB_Snapshot *,uint,char const*)
AVE_DPB::InitPointerAndVariables(uint)
AVE_DPB::InsertAfterDPBEntry(_S_AVE_DPB_Entry *,_S_AVE_DPB_Entry *)
AVE_DPB::InsertBeforeDPBEntry(_S_AVE_DPB_Entry *,_S_AVE_DPB_Entry *)
AVE_DPB::RemoveDPBEntry(_S_AVE_DPB_Entry *)
AVE_DPB::SetDPBSnapShot(_S_AVE_DPB_Snapshot *,uint)
AVE_DPB::SetRefFrames(uint,uint,uint,AVE_Surface *(*)[17],AVE_Surface **,AVE_Surface *(*)[8],AVE_Surface *(*)[8],bool)
AVE_DPB::SignalFrameHasBeenDropped(void)
AVE_DPB::UpdateDPBFromFullSliceRPS(_S_AVE_FrameInfo *)
AVE_DPE::Add(uint)
AVE_DPE::ApplyTunables(_E_AVE_DPE_Type)
AVE_DPE::ApplyTunables(uint,_S_AVE_DPE_RegCfg const*,uint)
AVE_DPE::Delete(uint)
AVE_DPE::Disable(void)
AVE_DPE::Enable(void)
AVE_DPE::Init(AVE_DevInfo *,uint,AVE_Reg *)
AVE_DPE::Reset(void)
AVE_DPE::~AVE_DPE()
AVE_DPE_GetTunables(_E_AVE_DevID,_S_AVE_DPE_CfgSet const**)
AVE_DPM_CalcDPMStats(_S_AVE_DPM *,_S_AVE_DLNode *)
AVE_DPM_CalcPipeStats(_S_AVE_DPM *,_S_AVE_DLNode *)
AVE_DPM_DecideDCSPower(_S_AVE_DPM *)
AVE_DPM_DecideFABPower(_S_AVE_DPM *)
AVE_DPM_DecideIOPPower(_S_AVE_DPM *)
AVE_DPM_Init(_S_AVE_DPM *,_S_AVE_Cfg const*,uint,AVE_PMGR *)
AVE_DPM_PowerOff(_S_AVE_DPM *)
AVE_DPM_PowerOn(_S_AVE_DPM *)
AVE_DPM_Print(_S_AVE_DPM *,uint,int,char const*,uint)
AVE_DPM_SetDCS(AVE_PMGR *,_E_AVE_DPM_PL)
AVE_DPM_SetFAB(AVE_PMGR *,_E_AVE_DPM_PL)
AVE_DPM_SetIOP(AVE_PMGR *,_E_AVE_DPM_PL)
AVE_DPM_Start(_S_AVE_DPM *)
AVE_DPM_Stop(_S_AVE_DPM *)
AVE_DPM_Tune(_S_AVE_DPM *)
AVE_DPM_TuneDCS(_S_AVE_DPM *)
AVE_DPM_TuneDownPipe(_S_AVE_DPM *)
AVE_DPM_TuneFAB(_S_AVE_DPM *)
AVE_DPM_TuneIOP(_S_AVE_DPM *)
AVE_DPM_TuneUpPipe(_S_AVE_DPM *,bool,bool,bool)
AVE_DPM_Uninit(_S_AVE_DPM *)
AVE_DRC::AVE_DRC(void)
AVE_DRC::SetFrameData(_S_AVE_ISP_Metadata *,_S_AVE_FrameInfo *,uint)
AVE_DRC::calcRefNum(bool,uint,uint,bool)
AVE_DRC::getFrameIndexReferenceFrameL0a(_S_AVE_FrameInfo *)
AVE_DRC::getFrameIndexReferenceFrameL0b(_S_AVE_FrameInfo *)
AVE_DRC::getFrameIndexReferenceFrameL1(_S_AVE_FrameInfo *)
AVE_DRC::getFrameIsThisLongTermFrame(uint,uint *)
AVE_DRC::getFrameQP(_S_AVE_FrameInfo *,uint)
AVE_DRC::getIsThisFrameMarkedAsNonReference(_S_AVE_FrameInfo *)
AVE_DRC::getRVRAFrames(uint,uint *,uint *,uint *)
AVE_DRC::init(S_AVE_DRC_Ctrl *)
AVE_DestroyExternalSurfaces(AVE_SurfaceMgr *,_S_AVE_SurfaceSet *)
AVE_DestroyInternalSurfaces(AVE_SurfaceMgr *,_S_AVE_SurfaceSet *)
AVE_DevInfo::Init(_E_AVE_DevID)
AVE_DevInfo::Print(uint,int,char const*,uint)
AVE_DevInfo::Retrieve(void)
AVE_DevInfo::RetrieveDevID(IORegistryEntry *)
AVE_DevInfo::RetrieveSVEID(IORegistryEntry *,uint *)
AVE_DevInfo::SetDevSubID(IORegistryEntry *,int)
AVE_Drv::AcquireHwC(_S_AVE_Client *)
AVE_Drv::CalcProcTimeout(void)
AVE_Drv::CheckStopped(_S_AVE_Client *)
AVE_Drv::CheckStopped(_S_AVE_Client *)
AVE_Drv::Drain_First(void)
AVE_Drv::Get(void)
AVE_Drv::IO_close(_S_AVE_Client *)
AVE_Drv::IO_free(void)
AVE_Drv::IO_init(void)
AVE_Drv::IO_open(_S_AVE_Client *)
AVE_Drv::IO_setPowerState(_E_AVE_PowerState)
AVE_Drv::IO_start(IOService *,uint)
AVE_Drv::IO_stop(uint)
AVE_Drv::Init(void *,_S_AVE_Cfg const*)
AVE_Drv::MarkFrameNonDrop(_S_AVE_Client *)
AVE_Drv::PowerOff(void)
AVE_Drv::PowerOff(void)
AVE_Drv::PowerOn(void)
AVE_Drv::PowerOn(void)
AVE_Drv::ProcTimerHandler(IOTimerEventSource *)
AVE_Drv::Process(void)
AVE_Drv::ProcessClient(void)
AVE_Drv::ProcessClient(void)
AVE_Drv::ProcessCmd(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Drv::ProcessHwC(void)
AVE_Drv::ProcessHwC(void)
AVE_Drv::ProcessInput(_S_AVE_Client *)
AVE_Drv::ProcessInputCmd(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Drv::ProcessInputCmd_Assign(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Drv::ProcessInputCmd_Sync(_S_AVE_Client *,_S_AVE_Cmd *)
AVE_Drv::RegisterClient(_S_AVE_Client *)
AVE_Drv::RegisterClient(_S_AVE_Client *)
AVE_Drv::ReleaseHwC(_S_AVE_Client *)
AVE_Drv::StopClient(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Drv::StopClient(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AVE_Drv::TryPowerOff(void)
AVE_Drv::TryPowerOn(void)
AVE_Drv::Uninit(void)
AVE_Drv::UnregisterClient(_S_AVE_Client *)
AVE_Drv::UnregisterClient(_S_AVE_Client *)
AVE_ERC::Accumulate(_S_AVE_FrameInfo *,ERC_StatPerFrame *,bool *)
AVE_ERC::CalculateComplexity(_S_AVE_FrameInfo *,uint,ERC_StatPerFrame *)
AVE_ERC::FWSetUp(AVE_VIDEO_PARAMS *,AVE_VIDEO_PARAMS_DRIVER *,_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *,_E_AVE_DevType)
AVE_ERC::FrameType(_S_AVE_FrameInfo *)
AVE_ERC::FrameTypeChangedFromOutside(_S_AVE_FrameInfo *,IMG_FRAME_TYPE)
AVE_ERC::calcCARC(_S_AVE_FrameInfo *,ERC_StatPerFrame *,uint)
AVE_ERC::calcChromaDirection(_S_AVE_FrameInfo *,ERC_StatPerFrame *)
AVE_ERC::calcFPSinstantaneous(_S_AVE_FrameInfo *)
AVE_ERC::calcMV(_S_AVE_FrameInfo *,ERC_StatPerFrame *)
AVE_ERC::calcMultiPasslocalcplx(_S_AVE_FrameInfo *,uint)
AVE_ERC::calcSceneChangeRatio(_S_AVE_FrameInfo *)
AVE_ERC::calcStaticArea(_S_AVE_FrameInfo *,ERC_StatPerFrame *)
AVE_ERC::getFrameIndexReferenceFrameL0b(_S_AVE_FrameInfo *)
AVE_ERC::getIntraRefreshEnabled(_S_AVE_FrameInfo *)
AVE_ERC::getIntraWasInterEnabled(_S_AVE_FrameInfo *)
AVE_ERC::getIsThisFrameMarkedAsNonReference(_S_AVE_FrameInfo *)
AVE_ERC::getStaticAreas(AVEStaticAreas *)
AVE_ERC::init(ERC_init_structure *)
AVE_ERC::initInternal(void)
AVE_ERC::setI(uint,long long,long long,bool)
AVE_ERC::setIDR(uint,long long,long long,bool)
AVE_ERC_STREAMING::Accumulate(_S_AVE_FrameInfo *,ERC_StatPerFrame *,bool *,bool *)
AVE_ERC_STREAMING::CalculateComplexity(_S_AVE_FrameInfo *,ERC_StatPerFrame *)
AVE_ERC_STREAMING::DecideReEncodeOrDrop(_S_AVE_FrameInfo *,ERC_StatPerFrame *,bool *)
AVE_ERC_STREAMING::DumpInputStats(_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *)
AVE_ERC_STREAMING::FWSetUp(AVE_VIDEO_PARAMS *,_S_AVE_FrameInfo *,AVE_PICMGMT_PARAMS *,_E_AVE_DevType)
AVE_ERC_STREAMING::FrameType(_S_AVE_FrameInfo *)
AVE_ERC_STREAMING::SetDPBStateForEncRLM(H264VideoEncoderDPBContext *,H264VideoEncoderFrameInfo *)
AVE_ERC_STREAMING::SetPreviousFlagsIfDropped(_S_AVE_FrameInfo *)
AVE_ERC_STREAMING::calMaxFrameSize(_S_AVE_FrameInfo *)
AVE_ERC_STREAMING::calcCARC(_S_AVE_FrameInfo *,ERC_StatPerFrame *,uint)
AVE_ERC_STREAMING::calcChromaDirection(_S_AVE_FrameInfo *,ERC_StatPerFrame *)
AVE_ERC_STREAMING::calcFPSinstantaneous(_S_AVE_FrameInfo *)
AVE_ERC_STREAMING::getCPLXr(_S_AVE_FrameInfo *,uint)
AVE_ERC_STREAMING::getFrameIndexReferenceFrameL0a(uint)
AVE_ERC_STREAMING::getFrameIndexReferenceFrameL0b(uint)
AVE_ERC_STREAMING::getFrameIsThisLongTermFrame(uint,uint *)
AVE_ERC_STREAMING::init(ERC_init_structure *)
AVE_ERC_STREAMING::rate_estimate_LambdaQP(AVE_VIDEO_PARAMS *,_S_AVE_FrameInfo *)
AVE_ERC_STREAMING::updateBufferConditonAndFindTargetSize(_S_AVE_FrameInfo *)
AVE_FPS_Add(_S_AVE_FPS *,_S_AVE_Time *)
AVE_FPS_Calc(_S_AVE_Time *,_S_AVE_Time *,uint)
AVE_FPS_CalcAvg(_S_AVE_FPS *)
AVE_FPS_CalcOverall(_S_AVE_FPS *)
AVE_FPS_CalcRt(_S_AVE_FPS *)
AVE_FPS_GetComp(_S_AVE_FPS *)
AVE_FPS_GetElapsedCnt(_S_AVE_FPS *,_S_AVE_Time *)
AVE_FPS_Init(_S_AVE_FPS *,uint,uint)
AVE_FPS_Uninit(_S_AVE_FPS *)
AVE_Firmware::AVE_Firmware(void)
AVE_Firmware::AcquireCTRRData(void)
AVE_Firmware::GetBaseAddr(void)
AVE_Firmware::Init(IOService *,_S_AVE_Cfg const*,AVE_DevInfo *,AVE_SurfaceMgr *,uint,AVE_DART *,uint)
AVE_Firmware::InitBufImage(AVE_SurfaceMgr *,uint,uint)
AVE_Firmware::InitCTRRImage(AVE_SurfaceMgr *,uint,uint,AVE_DART *)
AVE_Firmware::ReleaseCTRRData(void)
AVE_Firmware::RestoreCTRRData(void)
AVE_Firmware::RetrieveInfo(IOService *)
AVE_Firmware::Uninit(void)
AVE_Firmware::UninitCTRRImage(void)
AVE_Firmware::UpdateBufImage(AVE_Surface *)
AVE_Firmware::UpdateImage(AVE_Surface *)
AVE_FwCmd2Cmd(uint)
AVE_GetRegistryEntry(uint *)
AVE_HEVC_CheckFrameDimension(_E_AVE_DevType,uint,uint,bool,bool)
AVE_HEVC_CheckInfo(_E_AVE_DevType,AVE_SessionSettings_UserKernel_Data *)
AVE_HEVC_GeneratePPS(_S_AVE_Client *)
AVE_HEVC_GenerateSlice(_S_AVE_Client *,_S_AVE_FrameInfo *,bool)
AVE_HEVC_SetScalingList(HEVC_SEQUENCE_HEADER_PARAMS *,ScalingMatrixMode,bool)
AVE_HEVC_SetSliceRPS(_S_AVE_Client *,_S_AVE_FrameInfo *)
AVE_HEVC_UpdateSliceHeaderBuffer(_S_AVE_CHM *,_S_AVE_FrameInfo *)
AVE_History_Add(_S_AVE_History *,int,_E_AVE_History_Pos,_E_AVE_History_Cmd,ulong long,int,_E_AVE_History_Type,void *,int)
AVE_History_Create(uint)
AVE_History_Destroy(_S_AVE_History *)
AVE_History_Print(_S_AVE_History *,uint,int,uint,uint)
AVE_History_PrintEntry(ulong long,_S_AVE_History_Entry *,uint,int)
AVE_History_PrintHeader(uint,int)
AVE_History_Stage2Pos(_E_AVE_CHM_Stage)
AVE_HwC::CalcProcTimeout(void)
AVE_HwC::CheckStopped(_S_AVE_CHM *)
AVE_HwC::CleanAllFwCmds(void)
AVE_HwC::CleanCHM(_S_AVE_CHM *)
AVE_HwC::CleanFwCmds(_S_AVE_CHM *)
AVE_HwC::CreateFwHeap(uint)
AVE_HwC::CreateFwHeartBeatTimer(IOWorkLoop *,_S_AVE_Cfg const*,uint)
AVE_HwC::Drain_First(void)
AVE_HwC::Finish_First(void)
AVE_HwC::Finish_Second(void)
AVE_HwC::FreeAllIPCMem(void)
AVE_HwC::FwHeartBeatTimerHandler(IOTimerEventSource *)
AVE_HwC::FwHeartBeatTimerHandler(IOTimerEventSource *)
AVE_HwC::Get(void)
AVE_HwC::ISR(IOInterruptEventSource *,int)
AVE_HwC::Init(IOService *,IOWorkLoop *,_S_AVE_Cfg const*,AVE_DevInfo *,AVE_SurfaceMgr *,uint,AVE_Surface *,_S_AVE_History *)
AVE_HwC::MakeFwCmd_Config(_S_AVE_TimeOut *,sCAveCmdConfig *)
AVE_HwC::MakeFwCmd_Halt(_S_AVE_TimeOut *,sCAveCmdPowerDown *)
AVE_HwC::MetaClass::alloc(void)
AVE_HwC::PowerOff(void)
AVE_HwC::PowerOn(void)
AVE_HwC::PrepareDataResource(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::Prepare_First(void)
AVE_HwC::Prepare_Second(void)
AVE_HwC::Print(uint,int,char const*,uint)
AVE_HwC::PrintAll(uint,uint,int,char const*,uint)
AVE_HwC::PrintStats(uint,int,uint,char const*,uint)
AVE_HwC::ProcesOutputCmd_Done(_S_AVE_CHM *,_S_AVE_Cmd *,uint)
AVE_HwC::ProcesOutputCmd_Drop(_S_AVE_CHM *,_S_AVE_Cmd *,uint)
AVE_HwC::ProcesOutputCmd_Skip(_S_AVE_CHM *,_S_AVE_Cmd *,uint)
AVE_HwC::Process(void)
AVE_HwC::Process(void)
AVE_HwC::ProcessInput(_S_AVE_CHM *)
AVE_HwC::ProcessInputCmd(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessInputCmd_Close(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessInputCmd_Complete(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessInputCmd_Flush(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessInputCmd_Stop(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessInputCmd_Verify(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessIntr(bool)
AVE_HwC::ProcessIntr_Cmd(ulong,uint,uint)
AVE_HwC::ProcessIntr_CmdAck(ulong,uint)
AVE_HwC::ProcessIntr_CmdErr(_S_AVE_CHM *,sCAveControllerCmdHdr *,_S_AVE_Cmd *)
AVE_HwC::ProcessIntr_IPCCh(_E_AVE_IPC_Ch)
AVE_HwC::ProcessIntr_IPCMem(ulong,uint)
AVE_HwC::ProcessIntr_Log(ulong,uint,uint)
AVE_HwC::ProcessIntr_OutputData(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessOutput(_S_AVE_CHM *,uint)
AVE_HwC::ProcessOutputCmd(_S_AVE_CHM *,_S_AVE_Cmd *,uint)
AVE_HwC::ProcessReady(_S_AVE_CHM *)
AVE_HwC::ProcessReadyCmd(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Close(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Complete(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Flush(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Open(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Process(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Reset(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Start(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_StartIOP(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Stop(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::ProcessReadyCmd_Sync(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::RegisterCHM(_S_AVE_CHM *)
AVE_HwC::SendFwCmd(_S_AVE_CHM *,void *,uint,void *)
AVE_HwC::SendFwCmd(void *,uint)
AVE_HwC::SendFwCmd_Config(void)
AVE_HwC::SendFwCmd_Halt(void)
AVE_HwC::SendFwCmd_Open(_S_AVE_CHM *,_S_AVE_Cmd *)
AVE_HwC::SendFwCmd_Process(_S_AVE_CHM *,_S_AVE_Cmd *,uint,AVE_PICMGMT_PARAMS *)
AVE_HwC::SetDPE(_S_AVE_CHM *,int)
AVE_HwC::ShutDown(void)
AVE_HwC::ShutDownIOP(void)
AVE_HwC::StartFwHeartBeatTimer(void)
AVE_HwC::StartUp(AVE_Surface *)
AVE_HwC::StartUpIOP(AVE_Surface *)
AVE_HwC::StopCHM(_S_AVE_CHM *)
AVE_HwC::StopFwHeartBeatTimer(void)
AVE_HwC::Uninit(void)
AVE_HwC::UnregisterCHM(_S_AVE_CHM *)
AVE_HwC::~AVE_HwC()
AVE_IOP::Config(ulong long)
AVE_IOP::GetCurrTime(void)
AVE_IOP::Init(_S_AVE_Cfg const*,AVE_DevInfo *,uint,AVE_Reg *,AVE_SVECtrl *)
AVE_IOP::Print(uint,int,char const*,uint)
AVE_IOP::Start(void)
AVE_IOP::Stop(void)
AVE_IOP_CheckIdle_Cronus(AVE_Reg *)
AVE_IOP_CheckIdle_Tethys(AVE_Reg *)
AVE_IOP_Config_Cronus(AVE_Reg *,ulong long)
AVE_IOP_Config_Panda(AVE_Reg *,ulong long)
AVE_IOP_Config_Tethys(AVE_Reg *,ulong long)
AVE_IOP_GetCurrTime32(AVE_Reg *,uint,uint)
AVE_IOP_GetCurrTime64(AVE_Reg *,uint,uint,uint)
AVE_IOP_Start_Cronus(AVE_Reg *)
AVE_IOP_Start_Panda(AVE_Reg *)
AVE_IOP_Start_Tethys(AVE_Reg *)
AVE_IPC::AVE_IPC(void)
AVE_IPC::AllocChannelMem(uint,ulong *)
AVE_IPC::CheckChIntr(_E_AVE_IPC_Ch,uint)
AVE_IPC::CreateChannel(uint,uint,ulong)
AVE_IPC::DestroyChannel(void)
AVE_IPC::Free(ulong)
AVE_IPC::FreeChannelMem(void)
AVE_IPC::Fw2KernelAddr(ulong long)
AVE_IPC::GetInfo(ulong *,uint *)
AVE_IPC::Init(AVE_DevInfo *,AVE_SurfaceMgr *,uint,AVE_SVECtrl *,AVE_Firmware *)
AVE_IPC::Kernel2FwAddr(ulong)
AVE_IPC::Recv(_E_AVE_IPC_Ch,void **,uint *,uint *)
AVE_IPC::Send(_E_AVE_IPC_Ch,void *,uint)
AVE_IPC::SetChIntr(void *)
AVE_IPC::Uninit(void)
AVE_IPC::~AVE_IPC()
AVE_IPC_ChName2ID(char *,uint *)
AVE_Log_Print(signed char)
AVE_MCC::DisableDS(_E_AVE_MCC_DSType)
AVE_MCC::EnableDS(_E_AVE_MCC_DSType)
AVE_MCC::GetDSID(_E_AVE_MCC_DSType)
AVE_MCC::Init(IOService *,AVE_DevInfo *,uint)
AVE_MCC::Print(uint,int,char const*,uint)
AVE_MCC::~AVE_MCC()
AVE_MList_Add(_S_AVE_DLNode *,ulong long,uint)
AVE_MList_Delete(_S_AVE_DLNode *,ulong long)
AVE_MList_Find(_S_AVE_DLNode *,ulong long)
AVE_MemList_FreeAll(_S_AVE_DLNode *)
AVE_Mem_Free(_S_AVE_Mem *)
AVE_PMGR::AVE_PMGR(void)
AVE_PMGR::GetPS(_E_AVE_PMGR_PD,_E_AVE_PMGR_PS *)
AVE_PMGR::Init(IOService *,_S_AVE_Cfg const*,AVE_DevInfo *,uint,AVE_SVECtrl *)
AVE_PMGR::SetClockGating(bool)
AVE_PMGR::SetPS(_E_AVE_PMGR_PD,_E_AVE_PMGR_PS,bool)
AVE_PMGR::SetPSDependencyDown(uint const*,uint,_E_AVE_PMGR_PD,_E_AVE_PMGR_PS,bool)
AVE_PMGR::SetPSDependencyUp(uint const*,uint,_E_AVE_PMGR_PD,_E_AVE_PMGR_PS,bool)
AVE_PMGR::SetPSDown(_E_AVE_PMGR_PD,_E_AVE_PMGR_PS,bool)
AVE_PMGR::SetPSFlag(uint,_E_AVE_PMGR_PS)
AVE_PMGR::SetPSUp(_E_AVE_PMGR_PD,_E_AVE_PMGR_PS,bool)
AVE_PMGR::SetPowerState(_E_AVE_PMGR_PD,_E_AVE_PMGR_PS)
AVE_PMGR::Uninit(void)
AVE_PMGR_GetPDConf(_E_AVE_ChipType)
AVE_PixelFmt_Convert(uint)
AVE_PrintExternalSurfaces(_S_AVE_SurfaceSet *,uint,int)
AVE_PrintInternalSurfaces(_S_AVE_SurfaceSet *,uint,int)
AVE_PrintLoadStats(_S_AVE_LoadStats *,uint,int,char const*,uint)
AVE_PrintPipeStats(_S_AVE_PipeStats *,uint,int,char const*,uint)
AVE_PrintSurfaceInfoSet(_S_AVE_SurfaceInfoSet *,uint,int)
AVE_Reg::DARTMap(_E_AVE_RegType)
AVE_Reg::GetDARTAddr(_E_AVE_RegType,uint)
AVE_Reg::Init(IOService *,uint,AVE_DART *,int)
AVE_Reg::Print(uint,int,char const*,uint)
AVE_Reg::Read32(_E_AVE_RegType,uint)
AVE_Reg::Read64(_E_AVE_RegType,uint)
AVE_Reg::Uninit(void)
AVE_Reg::Write32(_E_AVE_RegType,uint,uint)
AVE_Reg::Write64(_E_AVE_RegType,uint,ulong long)
AVE_RegCfgList_Apply(_S_AVE_DLNode *,AVE_Reg *,uint)
AVE_RegCfgList_Release(_S_AVE_DLNode *)
AVE_RegCfg_Apply(AVE_Reg *,_S_AVE_RegCfg *)
AVE_RetrieveRCStats(_E_AVE_CodecType,CODED_DATA_HDR *,S_AVE_DRC_FrameStats *)
AVE_SVECtrl::CheckIOPFlag(uchar)
AVE_SVECtrl::ClearIntr(uint)
AVE_SVECtrl::GetIntr(uint *)
AVE_SVECtrl::Init(_S_AVE_Cfg const*,AVE_DevInfo *,uint,AVE_Reg *)
AVE_SVECtrl::PrintRegs(uint,int,char const*,uint)
AVE_SVECtrl::ReadScratch(uchar,uint *)
AVE_SVECtrl::RecvIOPMsg(uint *,uint *,uint *,uint *)
AVE_SVECtrl::SendIOPMsg(uint,uint,uint,uint)
AVE_SVECtrl::SetIOPFlag(uchar)
AVE_SVECtrl::SetIPCIntr(uint)
AVE_SVECtrl::SetIdle(uint)
AVE_SVECtrl::WriteScratch(uchar,uint)
AVE_Stats_Enc_Print(_S_AVE_Stats_Enc *,uint,int,char const*,uint)
AVE_StrNStr(char const*,char const*,uint)
AVE_Surface::AVE_Surface(AVE_DevInfo *)
AVE_Surface::AcquireAutoFence(void)
AVE_Surface::AcquireFence(void)
AVE_Surface::Complete(void)
AVE_Surface::Create(IOSurface *,ulong long,char const*,ulong long)
AVE_Surface::Create(IOSurfaceRoot *,uint,task *,ulong long,char const*,ulong long)
AVE_Surface::Create(IOSurfaceRoot *,uint,uint,uint,uint,ulong long,char const*,ulong long)
AVE_Surface::CreateDict(uint,uint,uint,uint,OSDictionary **)
AVE_Surface::CreateIOSurface(IOSurfaceRoot *,uint,uint,uint,uint,IOSurface **)
AVE_Surface::DARTMap(uint,AVE_DART *)
AVE_Surface::DARTUnmap(uint)
AVE_Surface::Destroy(void)
AVE_Surface::Flush(void)
AVE_Surface::GetDARTAddr(uint,uint)
AVE_Surface::GetYUVCompData(uint,ulong long *,ulong long *,ulong long *,AVE_COMPRESSED_DATA *)
AVE_Surface::GetYUVDARTAddr(uint,ulong long *,ulong long *,ulong long *)
AVE_Surface::GetYUVStride(uint *,uint *,uint *)
AVE_Surface::KernelMap(void)
AVE_Surface::KernelMap(void)
AVE_Surface::KernelUnmap(void)
AVE_Surface::LockCache(void)
AVE_Surface::Prepare(void)
AVE_Surface::Prepare(void)
AVE_Surface::Print(uint,int,char const*,uint)
AVE_Surface::ReleaseAutoFence(void)
AVE_Surface::ReleaseFence(void)
AVE_Surface::UnlockCache(void)
AVE_SurfaceMgr::AVE_SurfaceMgr(void)
AVE_SurfaceMgr::CreateSurface(char const*,uint,ulong long,uint,AVE_Surface **)
AVE_SurfaceMgr::CreateSurface(task *,char const*,uint,ulong long,uint,AVE_Surface **)
AVE_SurfaceMgr::DARTFlush(uint)
AVE_SurfaceMgr::DARTFlushAll(ulong long)
AVE_SurfaceMgr::DARTMapSurface(AVE_Surface *,uint)
AVE_SurfaceMgr::DARTUnmapSurface(AVE_Surface *)
AVE_SurfaceMgr::DARTUnmapSurface(AVE_Surface *,uint)
AVE_SurfaceMgr::DestroySurface(AVE_Surface *)
AVE_SurfaceMgr::DisableOp(ulong long)
AVE_SurfaceMgr::EnableOp(ulong long)
AVE_SurfaceMgr::Init(AVE_DevInfo *,IOSurfaceRoot *)
AVE_SurfaceMgr::Print(uint,int,char const*,uint)
AVE_SurfaceMgr::ReleaseList(_S_AVE_DLNode *,signed char)
AVE_SurfaceMgr::ReleaseSurfaces(void)
AVE_SurfaceMgr::SetDART(uint,AVE_DART *)
AVE_SurfaceMgr::Uninit(void)
AVE_SurfaceMgr::~AVE_SurfaceMgr()
AVE_Time_Add(_S_AVE_Time *,_S_AVE_Time *)
AVE_Time_Cmp(_S_AVE_Time *,_S_AVE_Time *)
AVE_Time_Sub(_S_AVE_Time *,_S_AVE_Time *)
AVE_Timer_Create(IOWorkLoop *,IOTimerEventSource *)
AVE_Timer_Destroy(_S_AVE_Timer *)
AVE_Timer_Print(_S_AVE_Timer *,uint,int,char const*,uint)
AVE_Timer_Set(_S_AVE_Timer *,bool)
AVE_Timer_Start(_S_AVE_Timer *,uint)
AVE_Timer_Stop(_S_AVE_Timer *)
AVE_UpdateStatsFromMBStats(uint,uint,uint,uint,void *,S_AVE_DRC_FrameStats *)
AdapterSMCCCG2::InterruptAction(uchar,uchar,ushort *,bool *)
AdapterSMCCCG2::ReadFirmwareReg(uint *,uchar)
AdapterSMCCCG2::readAdapterInfo(AdapterInfo *)
AdapterSMCCCG2::readCCCurrent(uchar *)
AdapterSMCCCG2::readDeviceInfo(uint *,uint *,uint *)
AdapterSMCCCG2::readNumberOfCapabilities(uchar *)
AdapterSMCCCG2::readSourceCapabilityItem(uchar,uint *)
AdapterSMCCCG2::reset(bool)
AdapterSMCCCG2::sendVDMGated(uchar *,uchar)
AddSCECPEChannelElements(std::vector<InstanceTypeIDAndElement<AACSyntacticElement *>> &,SFBOffsetTable const*,uint,uint,MP4AudioElementList const&)
AddStringToDictionary(char const*,OSDictionary *,OSString const*,char const*)
AllocKernelMem(void *,ulong,int,void *)
AltInfo::getMinServiceInterval(void)
AnchorTable::anchorWasNotified(void *,void *,uint,IOService *,void *,ulong)
AnchorTable::insert(IOService *,void *)
AnchorTable::locate(IOService *,void *)
AnchorTable::remove(uint)
AnchorTable::update(IOService *,void *)
AnchorTable::~AnchorTable()
AneIspIPCEndPoints::AneIspIPCEndPoints(char const*,char const*,H11ANEIn *)
AneIspIPCEndPoints::IPC_initEndPoint(void)
AneIspIPCEndPoints::dartMapIPCEndPoints(AneIspEndpointIndex,_IpcEndpointConfiguration &)
AneIspIPCEndPoints::dumpEPConfiguration(void)
AneIspIPCEndPoints::enableFWIPCEP_gated(AneIspEndpointIndex,bool)
AneIspIPCEndPoints::processIPCServiceMsg_gated(OSString *,void *,void *)
AneIspIPCEndPoints::~AneIspIPCEndPoints()
AppleA7IOP::AppleA7IOP(OSMetaClass const*)
AppleA7IOP::_dartMapMemoryDescriptor(IOMapper *,IOMemoryDescriptor *,ulong long *)
AppleA7IOP::_dartMapMemoryDescriptor(IOMapper *,IOMemoryDescriptor *,ulong long *)
AppleA7IOP::_dartMapiBootFirmware(IOMapper *)
AppleA7IOP::_dartMapiBootFirmware(IOMapper *)
AppleA7IOP::_disablePower(void)
AppleA7IOP::_enableInboxFilter(void)
AppleA7IOP::_enablePowerLate(void)
AppleA7IOP::_inboxHandler(IOInterruptEventSource *)
AppleA7IOP::_isSingleRange(IOMemoryDescriptor *)
AppleA7IOP::_mailboxesAvailable(void)
AppleA7IOP::_outboxHandler(IOInterruptEventSource *)
AppleA7IOP::_outboxHandler(IOInterruptEventSource *)
AppleA7IOP::_outboxUnderflowCheck(uint,uint)
AppleA7IOP::_publishBelow(IORegistryEntry *)
AppleA7IOP::_setMapperActive(bool)
AppleA7IOP::enableMailboxInterrupts(bool)
AppleA7IOP::enablePower(void)
AppleA7IOP::getMailbox(uint,void *,bool)
AppleA7IOP::getMailboxBulk(void *,uint *)
AppleA7IOP::getMailboxBulk(void *,uint *)
AppleA7IOP::getMailboxDebugStatus(void)
AppleA7IOP::getWrapperPhysicalAddress(void)
AppleA7IOP::getWrapperPhysicalAddress(void)
AppleA7IOP::postMailbox(uint,void *,uint,bool)
AppleA7IOP::postMailbox(uint,void *,uint,bool)
AppleA7IOP::ringDoorbell(uint)
AppleA7IOP::setDoorbellAction(void (*)(OSObject *,void *,uint),OSObject *,void *,uint)
AppleA7IOP::setDoorbellAction(void (*)(OSObject *,void *,uint),OSObject *,void *,uint)
AppleA7IOP::start(IOService *)
AppleA7IOP::start(IOService *)
AppleA7IOP::startCPU(IOSlaveFirmware *)
AppleA7IOP::startCPUWithOptions(IOSlaveFirmware *,uint)
AppleA7IOP::startCPUWithOptions(IOSlaveFirmware *,uint)
AppleA7IOP::stopCPU(void)
AppleA7IOP::waitForMailbox(uint)
AppleA7IOPNub::withRegistryEntry(IORegistryEntry *,IOService *)
AppleA7IOPV1::AppleA7IOPV1(void)
AppleA7IOPV1::MetaClass::alloc(void)
AppleA7IOPV1::_enableInboxInterrupt(bool)
AppleA7IOPV1::_enableOutbox(bool)
AppleA7IOPV1::_generateNMI(void)
AppleA7IOPV1::_getInboxEmpty(void)
AppleA7IOPV1::_getInboxEmpty(void)
AppleA7IOPV1::_getInboxFull(void)
AppleA7IOPV1::_getKICInboxEnabled(void)
AppleA7IOPV1::_getOutboxEmpty(void)
AppleA7IOPV1::_getOutboxEmpty(void)
AppleA7IOPV1::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV1::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV1::_runCPU(bool)
AppleA7IOPV1::_syncIOPTimebase(void)
AppleA7IOPV1::initialize(void)
AppleA7IOPV1::renderMailboxDebugStatus(char *,ulong)
AppleA7IOPV1::~AppleA7IOPV1()
AppleA7IOPV2::_enableInboxInterrupt(bool)
AppleA7IOPV2::_enableOutbox(bool)
AppleA7IOPV2::_enableOutboxInterrupt(bool)
AppleA7IOPV2::_generateNMI(void)
AppleA7IOPV2::_getInboxEmpty(void)
AppleA7IOPV2::_getInboxEmpty(void)
AppleA7IOPV2::_getInboxFull(void)
AppleA7IOPV2::_getOutboxEmpty(void)
AppleA7IOPV2::_getOutboxEmpty(void)
AppleA7IOPV2::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV2::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV2::_runCPU(bool)
AppleA7IOPV2::_syncIOPTimebase(void)
AppleA7IOPV2::renderMailboxDebugStatus(char *,ulong)
AppleA7IOPV2GFX::MetaClass::alloc(void)
AppleA7IOPV2GFX::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV2GFX::initialize(void)
AppleA7IOPV2GFX::initialize(void)
AppleA7IOPV2GFX::~AppleA7IOPV2GFX()
AppleA7IOPV2Marconi::MetaClass::alloc(void)
AppleA7IOPV2Marconi::_disableAllInterrupts(void)
AppleA7IOPV2Marconi::_enableInboxInterrupt(bool)
AppleA7IOPV2Marconi::_enableOutboxInterrupt(bool)
AppleA7IOPV2Marconi::_getInboxEmpty(void)
AppleA7IOPV2Marconi::_getInboxEmpty(void)
AppleA7IOPV2Marconi::_getOutboxEmpty(void)
AppleA7IOPV2Marconi::_getOutboxEmpty(void)
AppleA7IOPV2Marconi::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV2Marconi::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV2Marconi::_runCPU(bool)
AppleA7IOPV2Marconi::enablePower(void)
AppleA7IOPV2Marconi::initialize(void)
AppleA7IOPV2Marconi::initialize(void)
AppleA7IOPV2Marconi::~AppleA7IOPV2Marconi()
AppleA7IOPV2PMP::_reg(uint)
AppleA7IOPV2PMP::initialize(void)
AppleA7IOPV2PMP::initialize(void)
AppleA7IOPV4::_enableOutbox(bool)
AppleA7IOPV4::_generateNMI(void)
AppleA7IOPV4::_getInboxEmpty(void)
AppleA7IOPV4::_getInboxFull(void)
AppleA7IOPV4::_getKICInboxEnabled(void)
AppleA7IOPV4::_getOutboxEmpty(void)
AppleA7IOPV4::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleA7IOPV4::_runCPU(bool)
AppleA7IOPV4::_syncIOPTimebase(void)
AppleA7IOPV4::getMailbox(uint,void *,bool)
AppleA7IOPV4::getMailboxBulk(void *,uint *)
AppleA7IOPV4::getMailboxBulk(void *,uint *)
AppleA7IOPV4::getMailboxDebugEntries(void)
AppleA7IOPV4::renderMailboxDebugStatus(char *,ulong)
AppleA7IOPV4GFX::initialize(void)
AppleAD5860::AppleAD5860(OSMetaClass const*)
AppleAD5860::AppleAD5860(void)
AppleAD5860::MetaClass::alloc(void)
AppleAD5860::_createReporters(void)
AppleAD5860::_destroyReporters(void)
AppleAD5860::_getSerialConfig(IOService *)
AppleAD5860::_logErrors(void)
AppleAD5860::_maskWriteReg(uchar,uchar,uchar)
AppleAD5860::_multiByteReadReg(uchar,uint,uchar *)
AppleAD5860::_readOTP(uint,uint,uint,uchar *)
AppleAD5860::_readReg(uchar)
AppleAD5860::_setupCalibrationData(AppleAD5860::AD5860HallSensorConfig const&)
AppleAD5860::_setupSerialSlotConfig(void)
AppleAD5860::_writeReg(uchar,uchar)
AppleAD5860::acquireIICProvider(IOService *)
AppleAD5860::disableGated(void)
AppleAD5860::enableGated(void)
AppleAD5860::handleStart(IOService *)
AppleAD5860::start(IOService *)
AppleAD5860::stop(IOService *)
AppleAGXFunctionMetrology::callFunction(void *,void *,void *)
AppleAJPEGHal::MetaClass::alloc(void)
AppleAJPEGHal::ajpeg_driver_check_setup_decode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_driver_check_setup_encode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_driver_set_default_regs(bool)
AppleAJPEGHal::ajpeg_drv_set_compressed_dma(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_decode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_decode_mbcounts(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_decode_submode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_dither(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_encode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_encode_mbcounts(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_encode_submode(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_encode_uv_subsample(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_image_boundary(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_mtrx_mult(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_set_pointers(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_400(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleAJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_411(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleAJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_420(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleAJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_422(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleAJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_444(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleAJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_400(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_420(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_422(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_444(ajpeg_setup_t *)
AppleAJPEGHal::ajpeg_drv_wrcnvset_w_h(ajpeg_setup_t *,int,int,int,int)
AppleAJPEGHal::checkForInterrupt(IOFilterInterruptEventSource *)
AppleAJPEGHal::checkHardwareVersion(bool,bool &,bool &,bool &)
AppleAJPEGHal::check_compressed_dma(uint,ajpeg_setup_t *)
AppleAJPEGHal::chooseClock_gated(void)
AppleAJPEGHal::decoder_req2setup(JpegRequest *,ajpeg_setup_t *)
AppleAJPEGHal::doDecoderChecks(JpegRequest *,uint,uint)
AppleAJPEGHal::dumpBitstream(JpegRequest *)
AppleAJPEGHal::encoder_req2setup(JpegRequest *,ajpeg_setup_t *)
AppleAJPEGHal::executeOperation_gated(JpegRequest *)
AppleAJPEGHal::finishDecode_gated(JpegRequest *)
AppleAJPEGHal::finishEncode_gated(JpegRequest *)
AppleAJPEGHal::get_compressed_buffer_mb_layout(JpegRequest *,ajpeg_setup_t *,uint)
AppleAJPEGHal::init(uint,AppleJPEGDriver *,IOService *,IOWorkLoop *,uint,bool,bool)
AppleAJPEGHal::interruptOccurred_gated(IOInterruptEventSource *,int)
AppleAJPEGHal::jpeg_write_tables(uint,bool,JpegRequest *)
AppleAJPEGHal::reset_jpeg_block(void)
AppleAJPEGHal::setActive_gated(bool)
AppleAJPEGHal::startDecoderGated(JpegRequest *)
AppleAJPEGHal::startEncoderGated(JpegRequest *)
AppleAJPEGHal::stop(IOWorkLoop *)
AppleAJPEGHal::waitForAXI_gated(void)
AppleAJPEGHal::writeRSTOffsetSegmentInPlace(JpegRequest *)
AppleAJPEGHal::~AppleAJPEGHal()
AppleALSColorSensor::_copyEvent(IOHIDEvent *&)
AppleALSColorSensor::_interruptAction(IOInterruptEventSource *,int)
AppleALSColorSensor::_setPowerState(ulong,IOService *)
AppleALSColorSensor::_setProperties(OSObject *)
AppleALSColorSensor::_timerExpired(void)
AppleALSColorSensor::_updatePowerState(void)
AppleALSColorSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleALSColorSensor::free(void)
AppleALSColorSensor::handleStart(IOService *)
AppleALSColorSensor::readBurst(uchar,uchar *,uint)
AppleALSColorSensor::readReg8(uchar,uchar *)
AppleALSColorSensor::reportEvent(float,uint,uint,uint,uint,float,uchar *,uint)
AppleALSColorSensor::reportEvent(uint,uint,uint,uint,uint)
AppleALSColorSensor::setPowerState(ulong,IOService *)
AppleALSColorSensor::setSensorEnabled(bool)
AppleALSColorSensor::writeReg8(uchar,uchar)
AppleANEEPFunction::callFunction(void *,void *,void *)
AppleANEPerfCounterReadFunction::callFunction(void *,void *,void *)
AppleANEPowerOnOffFunction::callFunction(void *,void *,void *)
AppleANS2CGNVMeController::ClearPendingRequest(uint,AppleNVMeRequest *,NVMeResetPersistentMappingsFlags_t)
AppleANS2CGNVMeController::EnablePersistentMappings(void)
AppleANS2CGNVMeController::GetNVMePPLQueueEntries(void)
AppleANS2CGNVMeController::InitializePCI(void)
AppleANS2CGNVMeController::InitializePCI(void)
AppleANS2CGNVMeController::MapPolledRequest(IOMemoryDescriptor *)
AppleANS2CGNVMeController::NVMeCoastGuardSetTCB(AppleNVMeRequest *,NVMePersistentMappingsFlags_t)
AppleANS2CGNVMeController::NVMeCoastGuardSetTCB(AppleNVMeRequest *,NVMePersistentMappingsFlags_t)
AppleANS2CGNVMeController::NVMeCoastGuardSetTCBEntry(tcb_queue_entry *,AppleNVMeRequest *)
AppleANS2CGNVMeController::SetSQEntry(AppleNVMeRequest *,ushort,ushort,uchar *)
AppleANS2CGNVMeController::SetupAdminQueue(void)
AppleANS2CGNVMeController::SetupAdminQueue(void)
AppleANS2CGNVMeController::UnmapPolledRequest(void)
AppleANS2CGNVMeController::probe(IOService *,int *)
AppleANS2NVMeController::AllocateNVMeQueue(uint,ushort,uchar)
AppleANS2NVMeController::AllocateResources(void)
AppleANS2NVMeController::AllocateTunnelBuffer(uint)
AppleANS2NVMeController::ApplyTunables(void)
AppleANS2NVMeController::ApplyTunablesFromData(OSData const*,ans2context)
AppleANS2NVMeController::CheckNVMemuDevice(void)
AppleANS2NVMeController::CheckNameSpaceSizeGreater(void)
AppleANS2NVMeController::CheckNameSpaceSizeMismatch(void)
AppleANS2NVMeController::CompletionsThreadEntry(void)
AppleANS2NVMeController::ConfigFWUpdateRetry(int)
AppleANS2NVMeController::ConfigFWUpdateRetry(int)
AppleANS2NVMeController::ConfigPcieSTGLanes(bool)
AppleANS2NVMeController::ConfigSpiGpios(bool)
AppleANS2NVMeController::CopyNANDIDData(AppleNVMeBuffer *,uchar *)
AppleANS2NVMeController::CreateDeviceInterrupt(void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOService *)
AppleANS2NVMeController::CreateLifeboatBlockDevice(uint,uchar)
AppleANS2NVMeController::CreateNVRAMDevice(void)
AppleANS2NVMeController::CreatePCIeUPDARTMapping(void)
AppleANS2NVMeController::EnableANS2Clocks(void)
AppleANS2NVMeController::EnableCompletionQueue(ushort)
AppleANS2NVMeController::EnableDeviceInterrupt(void)
AppleANS2NVMeController::EnableLifeboatMode(void)
AppleANS2NVMeController::EnableSubmissionQueue(ushort)
AppleANS2NVMeController::FirmwareVersionCheck(void *)
AppleANS2NVMeController::ForceAssert(uint)
AppleANS2NVMeController::GetBaseCommandID(void)
AppleANS2NVMeController::GetIOMappers(void)
AppleANS2NVMeController::GetMSPType(uint *)
AppleANS2NVMeController::GetNANDDebugProperty(void)
AppleANS2NVMeController::GetNANDInfo(ulong long *)
AppleANS2NVMeController::GetProviderFunctions(void)
AppleANS2NVMeController::HandleAbruptShutdown(void)
AppleANS2NVMeController::InitializeNVMe(bool)
AppleANS2NVMeController::InitializePCI(void)
AppleANS2NVMeController::InitializePowerManagement(void)
AppleANS2NVMeController::IsClogMismatch(void)
AppleANS2NVMeController::IsNamespaceUpdateRequired(void)
AppleANS2NVMeController::MetaClass::alloc(void)
AppleANS2NVMeController::PPMArrivalHandler(void *,IOService *,IONotifier *)
AppleANS2NVMeController::PerformBFH(void *,uint)
AppleANS2NVMeController::PollBegin(void)
AppleANS2NVMeController::PollEnd(void)
AppleANS2NVMeController::PollWakeUp(void)
AppleANS2NVMeController::PowerStateAction(ulong,ulong)
AppleANS2NVMeController::PreCCEnableHook(void)
AppleANS2NVMeController::PublishPCIUpDARTMapping(void)
AppleANS2NVMeController::RegisterPPM(void)
AppleANS2NVMeController::SendANS2Table(uint,uchar *,ulong)
AppleANS2NVMeController::SetANS2Table(uint,char const*)
AppleANS2NVMeController::SetFatalErrorString(char *,uint)
AppleANS2NVMeController::SetFirmwareTables(void)
AppleANS2NVMeController::SetModeselRegister(uint)
AppleANS2NVMeController::SetNANDDebug(void)
AppleANS2NVMeController::SetNANDGeomProperties(OSDictionary *)
AppleANS2NVMeController::SetNANDGeomPropertiesV2(OSDictionary *)
AppleANS2NVMeController::SetNVMeProperties(void)
AppleANS2NVMeController::SetPcieSTGLanes(void)
AppleANS2NVMeController::SetPowerBudget(uchar)
AppleANS2NVMeController::SetRuntimeProperties(void)
AppleANS2NVMeController::SetTTParams(void)
AppleANS2NVMeController::SetupANS2Registers(void)
AppleANS2NVMeController::SetupCommandPermissions(void)
AppleANS2NVMeController::UpdateMspBfhParams(void *,uint)
AppleANS2NVMeController::WaitDeviceActive(void)
AppleANS2NVMeController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleANS2NVMeController::free(void)
AppleANS2NVMeController::probe(IOService *,int *)
AppleANS2NVMeController::setPowerState(ulong,IOService *)
AppleANS2NVMeController::setProperties(OSObject *)
AppleANS2NVMeController::start(IOService *)
AppleANS2NVMeController::~AppleANS2NVMeController()
AppleANS2NVMeController__fn_0x7b8
AppleANS3NVMeController::EnableLinearSQ(void)
AppleANS3NVMeController::MetaClass::alloc(void)
AppleANS3NVMeController::RingSQTailDoorbell(AppleNVMeSubmissionQueue *,AppleNVMeRequest *)
AppleANS3NVMeController::SubmitCommand(AppleNVMeSubmissionQueue *,AppleNVMeRequest *)
AppleANS3NVMeController::probe(IOService *,int *)
AppleANS3NVMeController::~AppleANS3NVMeController()
AppleANXDPTXHDCP1Controller::free(void)
AppleAOPAD5860::MetaClass::alloc(void)
AppleAOPAD5860::_multiByteReadReg(uchar,uint,uchar *)
AppleAOPAD5860::_passPropertyToAOP(uint,uint,ulong)
AppleAOPAD5860::_readReg(uchar)
AppleAOPAD5860::_writeReg(uchar,uchar)
AppleAOPAD5860::free(void)
AppleAOPAD5860::handleStart(IOService *)
AppleAOPAD5860::start(IOService *)
AppleAOPAudio::Util::addDictionaryEntry(OSDictionary *,OSSymbol const*,ulong long)
AppleAOPAudio::Util::addDictionaryEntry(OSDictionary *,char const*,ulong long)
AppleAOPAudio::Util::getEllapsedTimeInMsSince(ulong long)
AppleAOPAudio::Util::updateIOReportingChannelName(uint,char const*,char *,ulong)
AppleAOPAudioAmpManagerDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioAmpManagerDevice::getStatusReport(OSDictionary *)
AppleAOPAudioAmpManagerDevice::setAmpState(uint,AppleAOPAudioFirmware::AmpState)
AppleAOPAudioAmpManagerDevice::start(IOService *)
AppleAOPAudioAmpStateFunction::callFunction(void *,void *,void *)
AppleAOPAudioAmpStateFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleAOPAudioAssetManagerDevice::AppleAOPAudioAssetManagerDevice(OSMetaClass const*)
AppleAOPAudioAssetManagerDevice::MetaClass::alloc(void)
AppleAOPAudioAssetManagerDevice::checkDataPacket(void const*,uint)
AppleAOPAudioAssetManagerDevice::externalClientRequestCallGated(OSDictionary *)
AppleAOPAudioAssetManagerDevice::getNumberOfSupportedAssets(uint *)
AppleAOPAudioAssetManagerDevice::start(IOService *)
AppleAOPAudioAssetManagerDevice::updateAsset(void const*,uint)
AppleAOPAudioButtonHapticDevice::GetNumberOfSupportedAssets(uint *)
AppleAOPAudioButtonHapticDevice::UpdateSSHBWaveformAsset(AppleButtonHapticsAssetResourceV1 const*)
AppleAOPAudioButtonHapticDevice::start(IOService *)
AppleAOPAudioButtonOutputDevice::getStatusReport(OSDictionary *)
AppleAOPAudioButtonOutputDevice::processDeviceTreeConfig(void)
AppleAOPAudioButtonOutputDevice::start(IOService *)
AppleAOPAudioClientManager::device2Id(uint,uint &)
AppleAOPAudioClientManager::getDeviceActiveDirections(uint,uint &)
AppleAOPAudioClientManager::getInterruptStatus(uint,ulong long *)
AppleAOPAudioClientManager::getStatusReport(OSDictionary *)
AppleAOPAudioClientManager::handleStart(IOService *)
AppleAOPAudioClientManager::setActive(uint,bool)
AppleAOPAudioClientManager::setInterruptEnable(uint,ulong long,ulong long)
AppleAOPAudioClientManager::stop(IOService *)
AppleAOPAudioClientManager::stopDevice(uint,uint)
AppleAOPAudioCodecRequestCompletionFunction::MetaClass::alloc(void)
AppleAOPAudioCodecRequestCompletionFunction::callFunction(void *,void *,void *)
AppleAOPAudioCodecRequestCompletionFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleAOPAudioController::MetaClass::alloc(void)
AppleAOPAudioController::_aopStateChangeEvent(void)
AppleAOPAudioController::_createIOHandlerDeprecated(void)
AppleAOPAudioController::_enableInputIOHandler(bool)
AppleAOPAudioController::_enableLPMicInput(bool)
AppleAOPAudioController::_enableListening(bool)
AppleAOPAudioController::_enableListeningIOHandler(bool)
AppleAOPAudioController::_getBuffer(int,IOBufferMemoryDescriptor *&)
AppleAOPAudioController::_getControlValue(uint,uint &)
AppleAOPAudioController::_hasListenOnGesture(bool &)
AppleAOPAudioController::_publishBelow(IORegistryEntry *)
AppleAOPAudioController::_setControlValue(uint,uint)
AppleAOPAudioController::_setPowerState(ulong)
AppleAOPAudioController::_startHardware(uint)
AppleAOPAudioController::_stopHardware(uint)
AppleAOPAudioController::_systemWillShutdownGated(void const*)
AppleAOPAudioController::getListenOnGestureSupported(void)
AppleAOPAudioController::handleHistoricOnDemand(_SpuMCAPacket const*)
AppleAOPAudioController::handleStart(IOService *)
AppleAOPAudioController::historicalDataCallback(uint,ulong long,uchar const*,ulong,uint)
AppleAOPAudioController::publishBelow(IORegistryEntry *)
AppleAOPAudioController::registerLPMicInDeviceDeprecated(AppleAOPAudioLPMicInDevice *)
AppleAOPAudioController::sHistoricalDataCallback(OSObject *,uint,ulong long,uchar const*,ulong,uint)
AppleAOPAudioController::sServiceCallback(OSObject *,uint,ulong long,uchar const*,ulong,uint)
AppleAOPAudioController::serviceCallback(uint,ulong long,uchar const*,ulong,uint)
AppleAOPAudioController::start(IOService *)
AppleAOPAudioController::systemWillShutdown(uint)
AppleAOPAudioController::teardown(void)
AppleAOPAudioDataPacker::PackData(uchar const*,uint *,uchar *,uint *)
AppleAOPAudioDataPacker::ReInit(uint,uint,uint,uint)
AppleAOPAudioDataPacker::UnpackData(uchar *,uint *,uchar const*,uint *)
AppleAOPAudioDataPacker::_PackData(uchar const*,uint *,uchar *,uint *)
AppleAOPAudioDataPacker::_UnpackData(uchar *,uint *,uchar const*,uint *)
AppleAOPAudioDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioDevice::getDeviceProperty(uint,void *,ulong *)
AppleAOPAudioDevice::getNamedProperty(char const*,uint *)
AppleAOPAudioDevice::getNamedProperty(char const*,void *,ulong *)
AppleAOPAudioDevice::initForPM(IOService *)
AppleAOPAudioDevice::processDeviceTreeU32Entry(char const*,uint)
AppleAOPAudioDevice::setDeviceProperty(uint,void const*,ulong)
AppleAOPAudioDevice::start(IOService *)
AppleAOPAudioDevice::stop(IOService *)
AppleAOPAudioDevice::transferEdtProperty(void)
AppleAOPAudioDevice::transferOptionalEdtProperty(char const*)
AppleAOPAudioDeviceControllerObject::getInterruptStatus(uint,ulong long *)
AppleAOPAudioDeviceControllerObject::registerRead(ulong,void const*,ulong,ulong *,void *)
AppleAOPAudioDeviceControllerObject::registerWrite(ulong,void const*,ulong,ulong,void const*)
AppleAOPAudioDeviceControllerObject::setActive(uint,bool)
AppleAOPAudioDeviceControllerObject::setDevicePowerState(uint)
AppleAOPAudioDeviceControllerObject::setInterruptAction(uint,void *,int (*)(uint,void *,ulong long))
AppleAOPAudioDeviceControllerObject::setInterruptEnable(uint,ulong long,ulong long)
AppleAOPAudioDeviceControllerObject::startDevice(uint,uint)
AppleAOPAudioDeviceControllerObject::stopDevice(uint,uint)
AppleAOPAudioDeviceNode::_getIdentifersFromDeviceTree(void)
AppleAOPAudioDeviceNode::getIdentifier(uint)
AppleAOPAudioDeviceNode::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleAOPAudioDeviceNode::withRegistryEntry(IORegistryEntry *,IOService *)
AppleAOPAudioDeviceProvider::_getValueBySize(void const*,ulong)
AppleAOPAudioDeviceProvider::handleStart(IOService *)
AppleAOPAudioDeviceProvider::registerRead(ulong,void const*,ulong,ulong *,void *)
AppleAOPAudioDeviceProvider::registerWrite(ulong,void const*,ulong,ulong,void const*)
AppleAOPAudioDeviceProvider::setDevicePowerState(uint)
AppleAOPAudioDeviceProvider::stop(IOService *)
AppleAOPAudioFWdtAssetManagerDevice::checkDataPacket(void const*,uint)
AppleAOPAudioFWdtAssetManagerDevice::processResourceUpdateRequest(OSDictionary *)
AppleAOPAudioHallDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioHallDevice::handlePropertyAccess(uint,void *,void *,void *,void *)
AppleAOPAudioHallDevice::handleRegisterAccess(uint,void *,void *,void *,void *)
AppleAOPAudioHallDevice::readRegister(uint,void const*,void *,uint,uint,uint)
AppleAOPAudioHallDevice::writeRegister(uint,void const*,void const*,uint,uint,uint)
AppleAOPAudioHapticLEAP::handleStart(IOService *)
AppleAOPAudioHapticLEAP::productSpecificExternalClientRequestCallGated(OSDictionary *)
AppleAOPAudioIOHandler::AppleAOPAudioIOHandler(void)
AppleAOPAudioIOHandler::_getBuffer(int,IOBufferMemoryDescriptor *&)
AppleAOPAudioIOHandler::_getChannelControl(void)
AppleAOPAudioIOHandler::_getEnabledChannelMask(uint &)
AppleAOPAudioIOHandler::_getProperty(uint,uint &,bool)
AppleAOPAudioIOHandler::_handleHistoricMailboxData(uchar const*,ulong,ulong long,ulong long)
AppleAOPAudioIOHandler::_handleMailboxData(AppleAOPAudioFirmware::Packet const*,ulong long,ulong long,ulong long)
AppleAOPAudioIOHandler::_initChannelControl(void)
AppleAOPAudioIOHandler::_initIOConfigurations(void)
AppleAOPAudioIOHandler::_initIOHandlerControl(void)
AppleAOPAudioIOHandler::_isIORunning(void)
AppleAOPAudioIOHandler::_publishProperty(char const*,uint)
AppleAOPAudioIOHandler::_publishProperty(char const*,ulong long)
AppleAOPAudioIOHandler::_publishStreamPropInRegistry(void)
AppleAOPAudioIOHandler::_setActiveChannelMask(uint)
AppleAOPAudioIOHandler::_setChannelControl(void)
AppleAOPAudioIOHandler::_setEnabledChannelMask(uint)
AppleAOPAudioIOHandler::_setHWInStrmSRate(uint)
AppleAOPAudioIOHandler::_setListeningOnGesture(uint)
AppleAOPAudioIOHandler::_setProperty(uint,uint)
AppleAOPAudioIOHandler::_startIO(void)
AppleAOPAudioIOHandler::_stopIO(void)
AppleAOPAudioIOHandler::deinit(void)
AppleAOPAudioIOHandler::init(uint,AppleAOPAudioController *)
AppleAOPAudioIOHandler::reset(void)
AppleAOPAudioIOHandler::~AppleAOPAudioIOHandler()
AppleAOPAudioIOReporter::AppleAOPAudioIOReporter(IOService *)
AppleAOPAudioIOReporter::_getReporterChannelIDForName(OSSymbol const*)
AppleAOPAudioIOReporter::_getReporterForName(OSSymbol const*,bool)
AppleAOPAudioIOReporter::_teardown(void)
AppleAOPAudioIOReporter::addIOReporters(OSDictionary *)
AppleAOPAudioIOReporter::updateReport(IOReportChannelList *,uint,void *,void *,OSDictionary *)
AppleAOPAudioIOReporter::~AppleAOPAudioIOReporter()
AppleAOPAudioLEAP::AppleAOPAudioLEAP(OSMetaClass const*)
AppleAOPAudioLEAP::MetaClass::alloc(void)
AppleAOPAudioLEAP::externalClientRequestCallGated(OSDictionary *,ulong long)
AppleAOPAudioLEAP::getStatusReport(OSDictionary *)
AppleAOPAudioLEAP::handleStart(IOService *)
AppleAOPAudioLEAP::loadLeapFirmware(OSData *)
AppleAOPAudioLEAP::readRegister(uint,void const*,void *,uint,uint,uint)
AppleAOPAudioLEAP::stop(IOService *)
AppleAOPAudioLEAP::writeRegister(uint,void const*,void const*,uint,uint,uint)
AppleAOPAudioLEAPClientManager::MetaClass::alloc(void)
AppleAOPAudioLEAPClientManager::handleStart(IOService *)
AppleAOPAudioLEAPClientManager::matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleAOPAudioLEAPClientManager::registerMatchingNotification(IOService *)
AppleAOPAudioLEAPClientManager::stop(IOService *)
AppleAOPAudioLPMicInDevice::AppleAOPAudioLPMicInDevice(void)
AppleAOPAudioLPMicInDevice::MetaClass::alloc(void)
AppleAOPAudioLPMicInDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioLPMicInDevice::codecReplyHandler(void *)
AppleAOPAudioLPMicInDevice::codecReplyHandlerGated(void *)
AppleAOPAudioLPMicInDevice::configureCodec(AOPLPMicInDeviceState)
AppleAOPAudioLPMicInDevice::copyNamedAudioPropertyFromDeviceTree(char const*,uint *)
AppleAOPAudioLPMicInDevice::copyNamedAudioPropertyFromDeviceTree(char const*,void *,ulong &)
AppleAOPAudioLPMicInDevice::createRequestPacket(AOPLPMicInDeviceState,AOPLPMicCodecARMFuncRequest &)
AppleAOPAudioLPMicInDevice::enableListening(bool)
AppleAOPAudioLPMicInDevice::enableListeningClientManager(bool)
AppleAOPAudioLPMicInDevice::getBuffer(int,IOBufferMemoryDescriptor *&)
AppleAOPAudioLPMicInDevice::getClockDomainPropertyFromDevice(void)
AppleAOPAudioLPMicInDevice::getDeviceTreeAudioProperty(char const*,char const*)
AppleAOPAudioLPMicInDevice::getEnabledChannelMask(uint &)
AppleAOPAudioLPMicInDevice::getState(void)
AppleAOPAudioLPMicInDevice::handleHistoricMailboxData(uchar const*,ulong,ulong long,ulong long,ulong long)
AppleAOPAudioLPMicInDevice::handleMailboxData(AppleAOPAudioFirmware::Packet const*,ulong long,ulong long,ulong long)
AppleAOPAudioLPMicInDevice::handleStart(IOService *)
AppleAOPAudioLPMicInDevice::initChannelControl(void)
AppleAOPAudioLPMicInDevice::initClockConfig(void)
AppleAOPAudioLPMicInDevice::initCodecConfigurationHandle(IOService *)
AppleAOPAudioLPMicInDevice::initCommandGate(void)
AppleAOPAudioLPMicInDevice::initFeatureAttributes(bool)
AppleAOPAudioLPMicInDevice::initIOHandlerControl(void)
AppleAOPAudioLPMicInDevice::initInputBuffer(void)
AppleAOPAudioLPMicInDevice::invalidateState(void)
AppleAOPAudioLPMicInDevice::isListeningClientEnabled(bool &)
AppleAOPAudioLPMicInDevice::isValidReply(AOPLPMicCodecARMFuncRequest *)
AppleAOPAudioLPMicInDevice::notifyOnWake(void)
AppleAOPAudioLPMicInDevice::publishStreamProperties(void)
AppleAOPAudioLPMicInDevice::reset(void)
AppleAOPAudioLPMicInDevice::sendCodecRequest(AOPLPMicCodecARMFuncRequest &)
AppleAOPAudioLPMicInDevice::setActiveChannelMask(uint)
AppleAOPAudioLPMicInDevice::setChannelControl(AppleAOPAudioFirmware::AOPChannelControl &)
AppleAOPAudioLPMicInDevice::setEnabledChannelMask(uint)
AppleAOPAudioLPMicInDevice::setListeningOnGesture(uint)
AppleAOPAudioLPMicInDevice::setSampleRate(uint)
AppleAOPAudioLPMicInDevice::startHardware(bool)
AppleAOPAudioLPMicInDevice::startIO(void)
AppleAOPAudioLPMicInDevice::stop(IOService *)
AppleAOPAudioLPMicInDevice::stopIO(void)
AppleAOPAudioLPMicInDevice::waitForCodecReply(void)
AppleAOPAudioLPMicInDevice::~AppleAOPAudioLPMicInDevice()
AppleAOPAudioLPMicInDevice__getStatusReport_OSDictionary
AppleAOPAudioLogApi::LogDebug(char const*,...)
AppleAOPAudioLogApi::LogInfo(char const*,...)
AppleAOPAudioLogApi::LogNotice(char const*,...)
AppleAOPAudioLogApi::LogWarning(char const*,...)
AppleAOPAudioMCA2Device::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioMCA2Device::getStatusReport(OSDictionary *)
AppleAOPAudioMCA2Device::start(IOService *)
AppleAOPAudioPCMAssetManagerDevice::checkDataPacket(void const*,uint)
AppleAOPAudioPCMAssetManagerDevice::processResourceUpdateRequest(OSDictionary *)
AppleAOPAudioPCMAssetManagerDevice::start(IOService *)
AppleAOPAudioPCMAssetManagerDevice::updatePCMAudioAsset(void const*,uint)
AppleAOPAudioPCMAssetManagerUserClient::GetAssetInterfaceVersion(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioPCMAssetManagerUserClient::GetNumberOfSupportedAssets(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioPCMAssetManagerUserClient::UpdatePCMAudioAsset(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioPCMAssetManagerUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleAOPAudioPCMAssetManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleAOPAudioPCMAssetManagerUserClient::start(IOService *)
AppleAOPAudioPCMAssetManagerUserClient::stop(IOService *)
AppleAOPAudioPCMAssetManagerUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleAOPAudioPDM2Device::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPAudioPDM2Device::enableHPClientMngr(uint,bool)
AppleAOPAudioPDM2Device::getMicTuningParameters(IOService *,AppleAOPAudioFirmware::MicTuningParameters &)
AppleAOPAudioPDM2Device::readPDM2Configuration(IOService *)
AppleAOPAudioPDM2Device::start(IOService *)
AppleAOPAudioPDM2Device::updateClockDomain(void)
AppleAOPAudioRingBuffer::Create(uint,uint,uint,uint,uint,uint,bool)
AppleAOPAudioRingBuffer::~AppleAOPAudioRingBuffer()
AppleAOPAudioRingBufferImpl::AppleAOPAudioRingBufferImpl(AppleAOPAudioStatus *,uchar *,uchar *,ulong,uint,uint,uint,uint,uint,void (*)(ulong long,ulong long *))
AppleAOPAudioRingBufferImpl::BytesToFrames(ulong long,bool)
AppleAOPAudioRingBufferImpl::Create(AppleAOPAudioStatus *,uchar *,uchar *,ulong,uint,uint,uint,uint,uint,void (*)(ulong long,ulong long *))
AppleAOPAudioRingBufferImpl::FillBuffer(uchar const*,uint,ulong long,ulong long,bool)
AppleAOPAudioRingBufferImpl::Reconfigure(uint,uint,uint,uint,uint)
AppleAOPAudioRingBufferImpl::Reset(bool)
AppleAOPAudioRingBufferImpl::UpdatePendingTimestamp(void)
AppleAOPAudioRingBufferImpl::_copyData(uchar const*,ulong long,ulong long,bool)
AppleAOPAudioRingBufferImpl::_reportHistoricAfterLive(void)
AppleAOPAudioRingBufferImpl::_reportHistoricErrorDiscontinuous(ulong long)
AppleAOPAudioRingBufferImpl::_reportLiveAfterHistoricDiscountinuous(ulong long)
AppleAOPAudioRingBufferImpl::_reportLiveErrorDiscontinuous(ulong long)
AppleAOPAudioRingBufferImpl::_setNewTimeline(ulong long)
AppleAOPAudioRingBufferImpl::_updateFrameCount(ulong long,ulong long)
AppleAOPAudioSawDevice::attach(IOService *)
AppleAOPAudioSawDevice::init(IORegistryEntry *,IORegistryPlane const*)
AppleAOPAudioSawDevice::init(OSDictionary *)
AppleAOPAudioSawDevice::probe(IOService *,int *)
AppleAOPAudioSawDevice::start(IOService *)
AppleAOPAudioService::EnableHistoricalDataDeferredStart(bool)
AppleAOPAudioService::GetInstance(IOService *)
AppleAOPAudioService::RegisterCallback(void (*)(OSObject *,uint,ulong long,uchar const*,ulong,uint),OSObject *)
AppleAOPAudioService::RetrieveHistoricalData(void (*)(OSObject *,uint,ulong long,uchar const*,ulong,uint),OSObject *)
AppleAOPAudioService::create(IOService *)
AppleAOPAudioService::getDeviceCount(uint &)
AppleAOPAudioService::getIOHandlerCount(uint &)
AppleAOPAudioService::getNamedProperty(IOService *,char const*,void *,uint,uint *)
AppleAOPAudioService::getProperty(uint,void *,ulong *)
AppleAOPAudioService::init(AppleSPUAppInterface *)
AppleAOPAudioService::initChannelControl(AppleAOPAudioFirmware::AOPChannelControl &,channelStatus *)
AppleAOPAudioService::initIOHandlerControl(AppleIOHandlerConfig &)
AppleAOPAudioService::performCommand(AppleAOPAudioFirmware::ControllerCommand::Type,void const*,ulong,void *,ulong *)
AppleAOPAudioService::setProperty(uint,void const*,ulong)
AppleAOPAudioService::teardown(void)
AppleAOPAudioServiceBase::attachDevice(uint,uint)
AppleAOPAudioServiceBase::detachDevice(uint,uint)
AppleAOPAudioServiceBase::getDeviceCount(uint &)
AppleAOPAudioServiceBase::getDeviceId(uint,uint &)
AppleAOPAudioServiceBase::getDeviceProperty(uint,uint,uint &)
AppleAOPAudioServiceBase::getDeviceProperty(uint,uint,void *,ulong *)
AppleAOPAudioServiceBase::getIdentity(uint &)
AppleAOPAudioServiceBase::getPlatform(uchar *,ulong)
AppleAOPAudioServiceBase::getProperty(uint,uint &)
AppleAOPAudioServiceBase::getVersion(uchar *,ulong)
AppleAOPAudioServiceBase::handleEvent(AppleAOPAudioFirmware::ControllerCommand::EventType,void const*,ulong)
AppleAOPAudioServiceBase::registerRead(uint,ulong,void const*,ulong,ulong *,void *)
AppleAOPAudioServiceBase::registerWrite(uint,ulong,void const*,ulong,ulong,void const*)
AppleAOPAudioServiceBase::setDeviceProperty(uint,uint,uint)
AppleAOPAudioServiceBase::setDeviceProperty(uint,uint,void const*,ulong)
AppleAOPAudioUserClient::clientClose(void)
AppleAOPAudioUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleAOPAudioUserClient::didTerminate(IOService *,uint,bool *)
AppleAOPAudioUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleAOPAudioUserClient::method_Close(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioUserClient::method_GetControlValue(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioUserClient::method_Open(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioUserClient::method_SetControlValue(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioUserClient::method_StartHardware(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPAudioUserClient::method_StopHardware(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPButtonHapticsServiceUserClient::GetNumberOfSupportedAssets(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPButtonHapticsServiceUserClient::UpdateSSHBWaveformAsset(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPButtonHapticsServiceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleAOPButtonHapticsServiceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleAOPButtonHapticsServiceUserClient::start(IOService *)
AppleAOPButtonHapticsServiceUserClient::stop(IOService *)
AppleAOPButtonHapticsServiceUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleAOPHaptics::_setupPowerBudgetManagement(IOService *)
AppleAOPHaptics::_setupThermalBudgetConfigRangeFunction(IOService *)
AppleAOPSMC::start(IOService *)
AppleAOPSMCDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAOPSMCDriver::getDataGated(OSString *,void *,void *)
AppleAOPSMCDriver::setDataGated(OSString *,void *,void *)
AppleAOPSMCDriver::setEnableGated(bool,void *)
AppleAOPSMCDriver::setPowerState(ulong,IOService *)
AppleAOPSMCDriver::start(IOService *)
AppleAOPSMCDriver::stop(IOService *)
AppleAOPSMCFunction::callFunction(void *,void *,void *)
AppleAOPSMCFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleAOPSMCLink::configureEndpoints(AppleSMCFamily *)
AppleAOPSMCLink::enableLink(bool)
AppleAOPSMCLink::withProvider(IOService *)
AppleAOPService::AppleAOPService(IOService *)
AppleAOPService::GetProperty(uint,uint &)
AppleAOPService::RegisterCallback(void (*)(OSObject *,uint,ulong long,uchar const*,ulong,uint),OSObject *)
AppleAOPService::WaitForPropertyChange(bool,uint,uint,uint &,char const*)
AppleAOPService::WaitTillPropertyChangesTo(uint,uint,char const*)
AppleAOPService::~AppleAOPService()
AppleAOPVoiceTriggerController::AppleAOPVoiceTriggerController(void)
AppleAOPVoiceTriggerController::MetaClass::alloc(void)
AppleAOPVoiceTriggerController::_createConfiguration(OSDictionary *&)
AppleAOPVoiceTriggerController::_enableListening(bool)
AppleAOPVoiceTriggerController::_getControlValue(OSObject *,void *,void *,void *,void *)
AppleAOPVoiceTriggerController::_getControlValue(uint,uint &)
AppleAOPVoiceTriggerController::_initForPM(IOService *)
AppleAOPVoiceTriggerController::_queryListening(bool &)
AppleAOPVoiceTriggerController::_setConfiguration(OSDictionary *)
AppleAOPVoiceTriggerController::_setConfiguration(OSObject *,void *,void *,void *,void *)
AppleAOPVoiceTriggerController::_setControlValue(OSObject *,void *,void *,void *,void *)
AppleAOPVoiceTriggerController::_setControlValue(uint,uint)
AppleAOPVoiceTriggerController::_setPowerState(OSObject *,void *,void *,void *,void *)
AppleAOPVoiceTriggerController::_setPowerState(ulong)
AppleAOPVoiceTriggerController::_setTriggerData(AppleAOPVoiceTrigger::TriggerData *)
AppleAOPVoiceTriggerController::_teardown(void)
AppleAOPVoiceTriggerController::getControlValue(uint,uint &)
AppleAOPVoiceTriggerController::getTriggerData(AppleAOPVoiceTrigger::TriggerData *)
AppleAOPVoiceTriggerController::sServiceCallback(OSObject *,uint,ulong long,uchar const*,ulong,uint)
AppleAOPVoiceTriggerController::serviceCallback(uint,ulong long,uchar const*,ulong,uint)
AppleAOPVoiceTriggerController::setConfiguration(OSDictionary *)
AppleAOPVoiceTriggerController::setControlValue(uint,uint)
AppleAOPVoiceTriggerController::setPowerState(ulong,IOService *)
AppleAOPVoiceTriggerController::setProperty(char const*,uint)
AppleAOPVoiceTriggerController::start(IOService *)
AppleAOPVoiceTriggerController::stop(IOService *)
AppleAOPVoiceTriggerController::~AppleAOPVoiceTriggerController()
AppleAOPVoiceTriggerDataImpl::AppleAOPVoiceTriggerDataImpl(ulong long,ulong long,uint,uint,uchar const*,uint)
AppleAOPVoiceTriggerDataImpl::AppleAOPVoiceTriggerDataImpl(void)
AppleAOPVoiceTriggerDataImpl::clear(void)
AppleAOPVoiceTriggerDataImpl::get(AppleAOPVoiceTrigger::TriggerData *)
AppleAOPVoiceTriggerDataImpl::update(AppleAOPVoiceTrigger::TriggerData const&)
AppleAOPVoiceTriggerDataImpl::~AppleAOPVoiceTriggerDataImpl()
AppleAOPVoiceTriggerLogger::VTLogDebug(char const*,...)
AppleAOPVoiceTriggerLogger::VTLogError(char const*,...)
AppleAOPVoiceTriggerLogger::VTLogInfo(char const*,...)
AppleAOPVoiceTriggerLogger::VTLogNotice(char const*,...)
AppleAOPVoiceTriggerLogger::VTLogWarning(char const*,...)
AppleAOPVoiceTriggerLoggerInst::VLog(uint,char const*,char *)
AppleAOPVoiceTriggerService::AppleAOPVoiceTriggerService(IOService *)
AppleAOPVoiceTriggerService::IsConfigured(void)
AppleAOPVoiceTriggerService::IsEnabled(void)
AppleAOPVoiceTriggerService::configure(void const*,ulong)
AppleAOPVoiceTriggerService::reset(void)
AppleAOPVoiceTriggerService::start(void)
AppleAOPVoiceTriggerUserClient::clientClose(void)
AppleAOPVoiceTriggerUserClient::didTerminate(IOService *,uint,bool *)
AppleAOPVoiceTriggerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAOPVoiceTriggerUserClient::free(void)
AppleAOPVoiceTriggerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleAOPVoiceTriggerUserClient::method_Close(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPVoiceTriggerUserClient::method_GetControlValue(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPVoiceTriggerUserClient::method_GetVoiceTriggerData(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPVoiceTriggerUserClient::method_Open(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPVoiceTriggerUserClient::method_SetControlValue(OSObject *,void *,IOExternalMethodArguments *)
AppleAOPVoiceTriggerUserClient::setProperties(OSObject *)
AppleAPFSContainer::MetaClass::MetaClass(void)
AppleAPFSContainer::MetaClass::alloc(void)
AppleAPFSContainer::checkCachedInfoForVolume(uint,bool,int (*)(OSDictionary const*,void *),void *)
AppleAPFSContainer::containerClearVolumesCryptoState(void)
AppleAPFSContainer::containerDefrag(uint)
AppleAPFSContainer::containerDisableCryptoIO(void)
AppleAPFSContainer::containerEnableCryptoIO(klckr_ctx,ulong long,uchar *)
AppleAPFSContainer::containerExtendedInfo(OSSerialize **)
AppleAPFSContainer::containerFindVolumeByRole(ushort)
AppleAPFSContainer::containerGetMinimalSize(uint,ulong long *)
AppleAPFSContainer::containerGetResizeProgress(uint *)
AppleAPFSContainer::containerPublishPreBoot(void)
AppleAPFSContainer::containerResize(ulong long,uint,ulong long *)
AppleAPFSContainer::containerSpacemanInfo(apfs_iouc_sm_stats_t *)
AppleAPFSContainer::containerStampUUIDs(void)
AppleAPFSContainer::containerVolumeGroupGet(uchar,uchar *)
AppleAPFSContainer::containerVolumeGroupGetFirmlinks(uchar *,uchar,ulong long *,uchar *)
AppleAPFSContainer::containerVolumeGroupGetVolumes(uchar *,uchar,uchar *,uchar *)
AppleAPFSContainer::containerVolumeGroupRemove(uchar *)
AppleAPFSContainer::containerWipeKeys(void)
AppleAPFSContainer::deltaCreateChunk(delta_create_ctx_t *,uchar *,uint,uint *,bool *)
AppleAPFSContainer::deltaCreatePrepare(uint,delta_create_ctx_t **,uchar const*,uchar const*)
AppleAPFSContainer::deltaCreateTeardown(delta_create_ctx_t *)
AppleAPFSContainer::deltaRestoreChunk(delta_restore_ctx_t *,uchar *,uint,uint)
AppleAPFSContainer::deltaRestoreFinalize(delta_restore_ctx_t *)
AppleAPFSContainer::deltaRestorePrepare(uint,delta_restore_ctx_t **,delta_op_begin_t const*)
AppleAPFSContainer::deltaRestoreTeardown(delta_restore_ctx_t *)
AppleAPFSContainer::fetchBSDName(void)
AppleAPFSContainer::free(void)
AppleAPFSContainer::getContainerAttributes(bool *,uint *,OSDictionary **)
AppleAPFSContainer::getContainerHistograms(bool,apfs_iouc_nx_hist_t *)
AppleAPFSContainer::getContainerStats(apfs_iouc_nx_stats_t *)
AppleAPFSContainer::getVolumeStats(uint,apfs_iouc_vol_stats_t *)
AppleAPFSContainer::get_fragmentation_histogram(ulong long *,bool,uint)
AppleAPFSContainer::get_nx(nx_mount_options const*,int,int,int *)
AppleAPFSContainer::init(OSDictionary *)
AppleAPFSContainer::initContainerStats(IOMedia *)
AppleAPFSContainer::lockerDataGetSet(bool,klckr_ctx,uchar *,ulong long,task *)
AppleAPFSContainer::migrateMediaKeys(void)
AppleAPFSContainer::probe(IOService *,int *)
AppleAPFSContainer::probe2status(nx_superblock const*,int)
AppleAPFSContainer::reconcile(nx *)
AppleAPFSContainer::republish(nx *,apfs *)
AppleAPFSContainer::republishVolume(nx const*,apfs const*)
AppleAPFSContainer::setContainerProperties(nx const*)
AppleAPFSContainer::start(IOService *)
AppleAPFSContainer::stop(IOService *)
AppleAPFSContainer::unmap(IOService *,IOStorageExtent *,uint,uint)
AppleAPFSContainer::updateContainerCryptoInfoRef(OSDictionary *)
AppleAPFSContainer::updateContainerExtendedInfoRef(OSDictionary *)
AppleAPFSContainer::volumeCreate(apfs_format_options const*,uint,uint *)
AppleAPFSContainer::volumeDelete(uint)
AppleAPFSContainer::volumePayload(uint,ushort,int,void *,ulong *)
AppleAPFSContainer::volumeRole(uint,ushort *,ushort const*)
AppleAPFSContainer::volumeRollingMediaKeygen(uint)
AppleAPFSContainer::volumeSpace(uint,ulong long *,ulong long *)
AppleAPFSContainer::~AppleAPFSContainer()
AppleAPFSContainerScheme::MetaClass::MetaClass(void)
AppleAPFSContainerScheme::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
AppleAPFSContainerScheme::filter_insert(void)
AppleAPFSContainerScheme::filter_remove(void)
AppleAPFSContainerScheme::free(void)
AppleAPFSContainerScheme::getHiberKey(uchar (*)[16],void *,uint,uint *)
AppleAPFSContainerScheme::handleClose(IOService *,uint)
AppleAPFSContainerScheme::handleIsOpen(IOService const*)
AppleAPFSContainerScheme::handleOpen(IOService *,uint,void *)
AppleAPFSContainerScheme::init(OSDictionary *)
AppleAPFSContainerScheme::init_from_superblock(IOMedia *)
AppleAPFSContainerScheme::internalRead(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSContainerScheme::internalWrite(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSContainerScheme::message(uint,IOService *,void *)
AppleAPFSContainerScheme::probe(IOService *,int *)
AppleAPFSContainerScheme::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSContainerScheme::setHiberKey(uchar const(*)[16],void const*,ulong long)
AppleAPFSContainerScheme::setPriority(IOService *,IOStorageExtent *,uint,uchar)
AppleAPFSContainerScheme::start(IOService *)
AppleAPFSContainerScheme::stop(IOService *)
AppleAPFSContainerScheme::synchronize(IOService *,ulong long,ulong long,uint)
AppleAPFSContainerScheme::terminate(uint)
AppleAPFSContainerScheme::unmap(IOService *,IOStorageExtent *,uint,uint)
AppleAPFSContainerScheme::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSMedia::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAPFSMedia::init(ulong long,ulong long,ulong long,uint,bool,char const*,OSDictionary *)
AppleAPFSMedia::resize(ulong long,ulong long)
AppleAPFSMediaBSDClient::ioctl(int,ulong,char *,int,proc *)
AppleAPFSSnapshot::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
AppleAPFSSnapshot::createAPFSSnapshot(AppleAPFSContainer *,nx const*,apfs const*,j_snap_metadata *,snap_meta_ext *)
AppleAPFSSnapshot::init(AppleAPFSContainer *,nx const*,apfs const*,j_snap_metadata *,snap_meta_ext *)
AppleAPFSSnapshot::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSSnapshot::setSnapshotProperties(nx const*,apfs const*,j_snap_metadata *,snap_meta_ext *)
AppleAPFSSnapshot::setSnapshotPropertiesFromVolume(AppleAPFSVolume *)
AppleAPFSUserClient::MetaClass::MetaClass(void)
AppleAPFSUserClient::clientClose(void)
AppleAPFSUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAPFSUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleAPFSUserClient::methodContainerDisableCryptoIO(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerEnableCryptoIO(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerGetKeyLockerRanges(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerMigrateMediaKeys(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerVolumeGroupGetFirmlinks(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerVolumeGroupGetVolumes(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerVolumeRollingMediaKeygen(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodContainerWipeKeys(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaCreateChunk(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaCreateFinalize(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaCreatePrepare(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaRestoreChunk(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaRestoreFinalize(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodDeltaRestorePrepare(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodGetFragmentationHistogram(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodGetSetLockerData(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodResizeContainer(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodVolumePayload(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::methodVolumeRole(AppleAPFSUserClient*,void *,IOExternalMethodArguments *)
AppleAPFSUserClient::start(IOService *)
AppleAPFSUserClient::stop(IOService *)
AppleAPFSVolume::MetaClass::MetaClass(void)
AppleAPFSVolume::MetaClass::alloc(void)
AppleAPFSVolume::clearCrypto(void)
AppleAPFSVolume::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
AppleAPFSVolume::createAPFSVolume(AppleAPFSContainer *,nx const*,int,apfs const*)
AppleAPFSVolume::free(void)
AppleAPFSVolume::get_nx(AppleAPFSContainer *,bool *)
AppleAPFSVolume::handleOpen(IOService *,uint,void *)
AppleAPFSVolume::performCryptoIO(AppleAPFSContainer *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,void (AppleAPFSContainer::*)(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *))
AppleAPFSVolume::probe2status(apfs_superblock const*,int)
AppleAPFSVolume::publishRole(void)
AppleAPFSVolume::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSVolume::setCrypto(cpx *,char const*,bool)
AppleAPFSVolume::setVolumeKey(char const*,bool)
AppleAPFSVolume::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
AppleAPFSVolume::~AppleAPFSVolume()
AppleAPFSVolumeBSDClient::ioctl(int,ulong,char *,int,proc *)
AppleAPFSVolume__init_AppleAPFSContainer___nx_const___int__apfs_const
AppleARM64ErrorHandler::_dpcErrorHandler(ulong,ulong long,bool)
AppleARM64ErrorHandler::_fedErrorHandler(ulong,ulong long,ulong long,bool)
AppleARM64ErrorHandler::_llcErrorHandler(ulong,ulong long,ulong long,ulong long)
AppleARM64ErrorHandler::_llcSource(ulong long,char *,ulong)
AppleARM64ErrorHandler::_lsuErrorHandler(ulong,ulong long,ulong long,bool)
AppleARM64ErrorHandler::_mmuErrorHandler(ulong,ulong long,bool)
AppleARM64ErrorHandler::_platformErrorHandler(uint,ulong)
AppleARM64ErrorHandler::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMBacklight::MetaClass::alloc(void)
AppleARMBacklight::_setBacklightLevelGated(uint,bool,uint)
AppleARMBacklight::armFunctionCallback(void *,IOService *,IONotifier *)
AppleARMBacklight::backlightUpdateTimerCallback(IOTimerEventSource *)
AppleARMBacklight::calibratedNits2Nits(int)
AppleARMBacklight::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMBacklight::createARMFunctionDictionary(char const*)
AppleARMBacklight::createReporters(void)
AppleARMBacklight::darkBootCallback(void *,IOService *,IONotifier *)
AppleARMBacklight::dcpExpertCallback(void *,AFKEndpointInterface *,IONotifier *)
AppleARMBacklight::destroyReporters(void)
AppleARMBacklight::exportCalibration(void)
AppleARMBacklight::free(void)
AppleARMBacklight::getBacklightUpdateConfigGated(AsyncBacklightUpdateConfig *)
AppleARMBacklight::getFunctionParentSymbol(OSData const*)
AppleARMBacklight::handleDarkBootFlagGated(bool)
AppleARMBacklight::handleMessageGated(uint,void *)
AppleARMBacklight::handlePCCUpdate(int,int)
AppleARMBacklight::handlePCCUpdateGated(int,int,int *)
AppleARMBacklight::iDAC2Nits(uint)
AppleARMBacklight::iDAC2milliAmps(uint)
AppleARMBacklight::initForPM(IOService *)
AppleARMBacklight::isDarkBoot(void)
AppleARMBacklight::isEntitlementSetOnTask(char const*,task *)
AppleARMBacklight::legacyBacklightRamp(int)
AppleARMBacklight::message(uint,IOService *,void *)
AppleARMBacklight::milliAmps2RelativeNits(int)
AppleARMBacklight::milliAmps2iDAC(int)
AppleARMBacklight::nits2CalibratedNits(int)
AppleARMBacklight::nits2DAC(int)
AppleARMBacklight::nits2Slider(int)
AppleARMBacklight::nits2milliAmps(int)
AppleARMBacklight::overrideImin(int *)
AppleARMBacklight::registerNotificationForARMFunctionProvider(char const*,bool (*)(void *,void *,IOService *,IONotifier *),void *)
AppleARMBacklight::setBacklightEnableGated(bool,uint)
AppleARMBacklight::setBacklightLevelGated(uint,eBacklightUpdateTypes)
AppleARMBacklight::setPowerState(ulong,IOService *)
AppleARMBacklight::setProperties(OSObject *)
AppleARMBacklight::setPropertiesGated(OSObject *)
AppleARMBacklight::slider2Nits(int)
AppleARMBacklight::smoothTimerCallback(IOTimerEventSource *)
AppleARMBacklight::start(IOService *)
AppleARMBacklight::timerCallback(IOTimerEventSource *)
AppleARMBacklight::updateBacklightLevel(uint,bool,eBacklightUpdateTypes)
AppleARMBacklight::updateRegistry(char const*,uint,char const*)
AppleARMBacklight::~AppleARMBacklight()
AppleARMBacklightFunction::withProvider(IORegistryEntry *,char const*)
AppleARMBacklightPCCUpdateFunction::callFunction(void *,void *,void *)
AppleARMBootPerf::getActualProfileDataSize(void *,ulong long)
AppleARMBootPerf::init(OSDictionary *)
AppleARMBootPerf::locateProfileRegion(ulong long *,ulong long *)
AppleARMBootPerf::publishProfileData(void)
AppleARMBootPerf::setPowerState(ulong,IOService *)
AppleARMBootPerf::start(IOService *)
AppleARMBootPerf::stop(IOService *)
AppleARMCFIFlashController::_eraseSector(uint)
AppleARMCFIFlashController::_identifyNORDevice(void)
AppleARMCFIFlashController::_programSector(uint,uchar const*)
AppleARMCFIFlashController::_readPort(uint,uint)
AppleARMCFIFlashController::_waitDone(uint,uint,uint,uint)
AppleARMCFIFlashController::_writePort(uint,uchar)
AppleARMCFIFlashController::_writePrefix(void)
AppleARMCFIFlashController::eraseArea(ulong long,ulong long)
AppleARMCFIFlashController::readBuffer(uchar *,ulong long,ulong long)
AppleARMCFIFlashController::start(IOService *)
AppleARMCFIFlashController::writeBuffer(uchar const*,ulong long,ulong long)
AppleARMCHRPNVRAM::MetaClass::alloc(void)
AppleARMCHRPNVRAM::getNVRAMProperties(void)
AppleARMCHRPNVRAM::read(ulong long,uchar *,ulong long)
AppleARMCHRPNVRAM::start(IOService *)
AppleARMCHRPNVRAM::sync(void)
AppleARMCHRPNVRAM::write(ulong long,uchar *,ulong long)
AppleARMCHRPNVRAM::~AppleARMCHRPNVRAM()
AppleARMCPU::MetaClass::alloc(void)
AppleARMCPU::_idleTimer(ulong long *)
AppleARMCPU::_platformCacheDispatch(uint,uint,uint)
AppleARMCPU::_platformErrorHandler(ulong)
AppleARMCPU::_processorIdle(bool,ulong long *)
AppleARMCPU::_validateConfiguration(void)
AppleARMCPU::getCPUName(void)
AppleARMCPU::haltCPU(void)
AppleARMCPU::initCPU(bool)
AppleARMCPU::quiesceCPU(void)
AppleARMCPU::signalCPU(IOCPU *)
AppleARMCPU::signalCPUCancel(IOCPU *)
AppleARMCPU::signalCPUDeferred(IOCPU *)
AppleARMCPU::start(IOService *)
AppleARMCPU::start(IOService *)
AppleARMCPU::startCPU(ulong,ulong)
AppleARMCPU::~AppleARMCPU()
AppleARMCPUPerformanceArbiter::free(void)
AppleARMCPUPerformanceArbiter::init(OSDictionary *)
AppleARMCPUPerformanceArbiter::message(uint,IOService *,void *)
AppleARMCPUPerformanceArbiter::probe(IOService *,int *)
AppleARMCPUPerformanceArbiter::publishBelow(IORegistryEntry *)
AppleARMCPUPerformanceArbiter::start(IOService *)
AppleARMCPUPerformanceArbiter::stop(IOService *)
AppleARMCPUPerformanceServiceNub::MetaClass::alloc(void)
AppleARMCPUPerformanceServiceNub::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMDMAAudioDevice::AppleARMDMAAudioDevice(OSMetaClass const*)
AppleARMDMAAudioDevice::_addUserSafetyOffset(uint &,int)
AppleARMDMAAudioDevice::_computeSafetyOffsetDivisors(int,int &)
AppleARMDMAAudioDevice::_processBootArgs(IOService *)
AppleARMDMAAudioDevice::_setSafetyOffsetSeedDivisor(IOService *)
AppleARMDMAAudioDevice::allocateBuffer(uint,ulong long)
AppleARMDMAAudioDevice::allocateBuffers(void)
AppleARMDMAAudioDevice::checkDMACompletion(IOTimerEventSource *)
AppleARMDMAAudioDevice::completeBuffer(void *,int,ulong long,ulong long)
AppleARMDMAAudioDevice::deallocateInternal(void)
AppleARMDMAAudioDevice::destroyIOReporters(void)
AppleARMDMAAudioDevice::fractionOfBufferZeroFilled(void)
AppleARMDMAAudioDevice::free(void)
AppleARMDMAAudioDevice::gangAudioDevices(AppleARMDMAAudioDevice*,bool)
AppleARMDMAAudioDevice::getAudioStreamDescription(uint,long long,AppleARMDMAAudioDevice::DataFormatType,uint,uint,uint)
AppleARMDMAAudioDevice::getCurrentSampleRate(void)
AppleARMDMAAudioDevice::getCurrentStreamFormat(uint,uint)
AppleARMDMAAudioDevice::getDeviceName(void)
AppleARMDMAAudioDevice::getIOBufferForStream(uint,uint *,IOMemoryDescriptor **)
AppleARMDMAAudioDevice::getInstantaneousSampleRate(uint)
AppleARMDMAAudioDevice::getName(IORegistryPlane const*)
AppleARMDMAAudioDevice::getRangedStreamDescription(uint,long long,AppleARMDMAAudioDevice::DataFormatType,uint,uint,uint)
AppleARMDMAAudioDevice::getRangedStreamDescription(uint,long long,long long,AppleARMDMAAudioDevice::DataFormatType,uint,uint,uint)
AppleARMDMAAudioDevice::getStreamFormatSupportedFormat(uint,uint,IOAudio2StreamBasicDescription const*,uint *)
AppleARMDMAAudioDevice::getStreamFormatSupportedSampleRate(long long,uint,uint)
AppleARMDMAAudioDevice::getTransportBufferSize(long long)
AppleARMDMAAudioDevice::getTransportDirectionSkew(void)
AppleARMDMAAudioDevice::handleChangeSampleRate(long long *,ulong long)
AppleARMDMAAudioDevice::handleChangeStreamFormat(uint,IOAudio2StreamBasicDescription *,ulong long)
AppleARMDMAAudioDevice::init(OSDictionary *)
AppleARMDMAAudioDevice::performConfigChange(IOAudio2Notification *)
AppleARMDMAAudioDevice::performConfigChangeGated(IOAudio2Notification *)
AppleARMDMAAudioDevice::performSampleRateChange(long long const*)
AppleARMDMAAudioDevice::performStreamFormatChange(uint,uint,long long const*)
AppleARMDMAAudioDevice::restartTransport(void)
AppleARMDMAAudioDevice::sendBuffer(uint,IOMemoryDescriptor *,uint,ulong long,ulong long)
AppleARMDMAAudioDevice::setAudioFormat(uint,uint,uint,uint)
AppleARMDMAAudioDevice::setAudioFormat(uint,uint,uint,uint)
AppleARMDMAAudioDevice::setAudioSampleRate(long long)
AppleARMDMAAudioDevice::setAudioStreamFormat(uint,AppleARMDMAAudioDevice::DataFormatType,uint,uint,uint)
AppleARMDMAAudioDevice::setAudioStreamFormatInternal(uint,AppleARMDMAAudioDevice::DataFormatType,uint,uint,uint,OSDictionary *,OSDictionary *)
AppleARMDMAAudioDevice::setAudioStreamFormats(OSArray const*,long long,OSArray const* const*,AppleARMDMAAudioDevice::DataFormatType const*,OSArray const* const*,uint const*,OSArray const* const*,uint const*,OSArray const* const*,uint const*)
AppleARMDMAAudioDevice::setStreamActive(uint,uint)
AppleARMDMAAudioDevice::setStreamActiveGated(uint,uint)
AppleARMDMAAudioDevice::start(IOService *,OSArray const*,long long,uint,uint const*,OSArray const* const*,AppleARMDMAAudioDevice::DataFormatType const*,OSArray const* const*,uint const*,OSArray const* const*,uint const*,OSArray const* const*,uint const*)
AppleARMDMAAudioDevice::start(IOService *,long long,uint,uint const*,uint const*,uint const*,uint const*)
AppleARMDMAAudioDevice::start(IOService *,long long,uint,uint,uint const*,uint const*,uint const*)
AppleARMDMAAudioDevice::startDMAInternal(bool)
AppleARMDMAAudioDevice::startDataTransfers(uint,IOMemoryDescriptor *,uint,ulong long,ulong long)
AppleARMDMAAudioDevice::startIOEngine(void)
AppleARMDMAAudioDevice::startIOEngineGated(void)
AppleARMDMAAudioDevice::startIOEngineInternal(bool)
AppleARMDMAAudioDevice::startInternal(IOService *,long long,uint,uint const*,uint const*,uint const*,uint const*)
AppleARMDMAAudioDevice::stop(IOService *)
AppleARMDMAAudioDevice::stopDataTransfers(uint)
AppleARMDMAAudioDevice::stopIOEngineGated(void)
AppleARMDMAAudioDevice::stopIOEngineInternal(void)
AppleARMDMAAudioDevice::stopTransfer(uint,uint)
AppleARMDMAAudioDevice::streamFormatFormatFromIndex(uint,uint,uint,uint *,uint *,uint *)
AppleARMDMAAudioDevice::transferData(uint,IOMemoryDescriptor *,void *,uint,ulong long,ulong long)
AppleARMDMAAudioDevice::updateDMAMarginHistogram(void)
AppleARMDMAAudioDevice::updateReport(IOReportChannelList *,uint,void *,void *)
AppleARMDMAAudioDevice::updateTimestamp(ulong long,ulong long)
AppleARMDMAAudioDevice::zeroFillActiveBuffers(uint)
AppleARMDMAAudioDevice__createIOReporters_OSArray_const
AppleARMFunction::MetaClass::alloc(void)
AppleARMFunction::callFunction(void *,void *,void *)
AppleARMFunction::createFunctionDictionary(IORegistryEntry *,OSSymbol const*)
AppleARMFunction::createFunctionDictionary(IORegistryEntry *,char const*)
AppleARMFunction::free(void)
AppleARMFunction::getFunctionParentSymbol(OSData const*)
AppleARMFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunction::registerFunctionParent(IOService *,IOService *)
AppleARMFunction::withProvider(IORegistryEntry *,OSSymbol const*,ulong long)
AppleARMFunction::withProvider(IORegistryEntry *,char const*)
AppleARMFunction::~AppleARMFunction()
AppleARMFunctionAssertReset::callFunction(void *,void *,void *)
AppleARMFunctionAssertReset::withProvider(IORegistryEntry *,char const*)
AppleARMFunctionCharger::_notifyInputCurrentLimitChanged(uint)
AppleARMFunctionCharger::causeEvent(uint)
AppleARMFunctionCharger::causeUSBDetectEvent(bool)
AppleARMFunctionCharger::setChargerProperties(OSDictionary const*)
AppleARMFunctionChargerMux::copyDebugProperty(char const*)
AppleARMFunctionChargerMux::enableChargerStatusEvent(bool)
AppleARMFunctionChargerMux::enablePowerSupplyLimitedEvent(bool)
AppleARMFunctionChargerMux::getChargeCurrentConfiguration(void)
AppleARMFunctionChargerMux::getChargeVoltageConfiguration(void)
AppleARMFunctionChargerMux::getChargerState(bool *,bool *,bool *,char const**)
AppleARMFunctionChargerMux::getUSBInputCurrentLimitMax(void)
AppleARMFunctionChargerMux::getUSBInputCurrentLimitStep(uint,uint,uint)
AppleARMFunctionChargerMux::getUSBInputCurrentLimitTargetInfo(uint,uint *,uint *)
AppleARMFunctionChargerMux::getUSBPowerLimited(void)
AppleARMFunctionChargerMux::measureBatteryTemperature(int *)
AppleARMFunctionChargerMux::measureBatteryVoltage(int *)
AppleARMFunctionChargerMux::measureSystemVoltage(int *)
AppleARMFunctionChargerMux::measureVBUSCurrent(int *)
AppleARMFunctionChargerMux::resetChargeTimer(void)
AppleARMFunctionChargerMux::resetEndOfCharge(uint)
AppleARMFunctionChargerMux::setChargeCurrentLimit(bool,uint,uint *)
AppleARMFunctionChargerMux::setChargeVoltageLimit(uint)
AppleARMFunctionChargerMux::setChargerProperties(OSDictionary const*)
AppleARMFunctionChargerMux::setUSBInputCurrentLimit(uint,bool *)
AppleARMFunctionChargerMux::setUSBInputHighVoltage(bool,uint)
AppleARMFunctionIISActive::free(void)
AppleARMFunctionIISActive::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunctionIISActive::interestNotification(void *,uint,IOService *,void *,ulong)
AppleARMFunctionIISRoute::enableRoute(uint,uint)
AppleARMFunctionIISRoute::getClockDomain(uint)
AppleARMFunctionIISRoute::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunctionMCA2Config::enableBclkFsync(AppleMCA2::SyncGenConfig *,uint,bool,bool)
AppleARMFunctionMCA2Config::enableBclkFsyncGated(AppleMCA2::SyncGenConfig *,uint,bool,bool)
AppleARMFunctionMCA2Config::enableBclkFsyncGated(AppleMCA2::SyncGenConfig *,uint,bool,bool)
AppleARMFunctionMCA2Config::enableClockGen(AppleMCA2::SyncGenConfig *,uint,bool,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableClockGenDual(uint,uint,bool,uint,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableDeviceClock(bool,uint,uint,uint)
AppleARMFunctionMCA2Config::enableRx(uint,bool,uint)
AppleARMFunctionMCA2Config::enableRxPrepare(uint,uint,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableSyncGen(AppleMCA2::SyncGenConfig *,uint,bool,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableSyncGenDual(uint,uint,bool,uint,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableSyncGenSingle(uint,bool,uint,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::enableTx(uint,bool,uint)
AppleARMFunctionMCA2Config::enableTxPrepare(uint,uint,AppleMCA2SwitchRegs::ov_t *)
AppleARMFunctionMCA2Config::fifoCheck(uint,uchar,uint,uint,uint,uint,uint)
AppleARMFunctionMCA2Config::fifoCheckEmpty(uint,uint)
AppleARMFunctionMCA2Config::fifoZeroFill(AppleARMIISConfig *,uint,uint)
AppleARMFunctionMCA2Config::getIISConfigGated(AppleARMIISConfig *,uint)
AppleARMFunctionMCA2Config::getMCLKClkCon(AppleARMIISConfig *,uint,uint,uint,uint,bool,uint *)
AppleARMFunctionMCA2Config::getMCLKClkCon(AppleARMIISConfig *,uint,uint,uint,uint,bool,uint *)
AppleARMFunctionMCA2Config::initNCO(AppleMCA2Controller *,char const*,uint)
AppleARMFunctionMCA2Config::initNCOGated(AppleMCA2Controller *,char const*,uint)
AppleARMFunctionMCA2Config::initWithIdentity(AppleMCA2Switch *,AppleMCA2Switch_MCAConfig *,uint)
AppleARMFunctionMCA2Config::initWithIdentity(AppleMCA2Switch *,AppleMCA2Switch_MCAConfig *,uint)
AppleARMFunctionMCA2Config::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunctionMCA2Config::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunctionMCA2Config::interruptService(uint *)
AppleARMFunctionMCA2Config::interruptServiceGated(uint *)
AppleARMFunctionMCA2Config::joinPMtree(IOService *)
AppleARMFunctionMCA2Config::postflight(AppleARMIISConfig *,uint,uint,uint)
AppleARMFunctionMCA2Config::postflightGated(AppleARMIISConfig *,uint,uint,uint)
AppleARMFunctionMCA2Config::preflight(AppleARMIISConfig *,uint,uint,uint)
AppleARMFunctionMCA2Config::preflightGated(AppleARMIISConfig *,uint,uint,uint)
AppleARMFunctionMCA2Config::resetRx(uint,uint)
AppleARMFunctionMCA2Config::resetRx(uint,uint)
AppleARMFunctionMCA2Config::resetTx(uint,uint)
AppleARMFunctionMCA2Config::resetTx(uint,uint)
AppleARMFunctionMCA2Config::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::setIISConfigGated(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::setMCLKClkConfig(AppleARMIISConfig *,AppleMCATiming *,uint,uint,uint,uint)
AppleARMFunctionMCA2Config::setMCLKClkConfigGated(AppleARMFunctionMCA2Config::MclkConfigArgs *)
AppleARMFunctionMCA2Config::setMCLKClkEnabed(bool,uint,uint,uint)
AppleARMFunctionMCA2Config::setMCLKClkEnabledGated(bool,uint,uint,uint)
AppleARMFunctionMCA2Config::setNCOFrequency(uint,uint,uint)
AppleARMFunctionMCA2Config::setNCOFrequencyGated(uint,uint,uint)
AppleARMFunctionMCA2Config::startIISCommand(uint,uint,bool,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::startIISCommandGated(uint,uint,bool,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::stopIISCommand(uint,uint,uint)
AppleARMFunctionMCA2Config::stopIISCommandGated(uint,uint,uint)
AppleARMFunctionMCA2Config::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::validIISConfigGated(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleARMFunctionMCA2Config::validIISRoute(AppleARMIISDevice *,AppleARMIISConfig *)
AppleARMFunctionMCA2Config::validMCLKClkConfig(AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig const*,uint,uint,uint,uint)
AppleARMFunctionMCA2Config::validMCLKClkConfigGated(AppleARMFunctionMCA2Config::MclkConfigArgs *)
AppleARMFunctionMCA2Config::withProvider(IOService *,char const*)
AppleARMFunctionPerfAdvise::callAction(bool,bool,uint)
AppleARMFunctionPerfAdvise::free(void)
AppleARMFunctionPerfAdvise::~AppleARMFunctionPerfAdvise()
AppleARMFunctionSlowAdaptiveClocking::addVictims(uint,IOSACVictimFrequency *)
AppleARMFunctionSlowAdaptiveClocking::callFunction(void *,void *,void *)
AppleARMFunctionSlowAdaptiveClocking::clearVictims(void)
AppleARMFunctionSlowAdaptiveClocking::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMFunctionSlowAdaptiveClocking::removeVictims(uint,IOSACVictimFrequency *)
AppleARMFunctionSlowAdaptiveClocking::withProvider(IOService *,char const*)
AppleARMFunctionSlowAdaptiveClockingAggressor::_initAggressor(void *,IOSACActionCallback_t const&,uint,ulong long *,uint *)
AppleARMFunctionSlowAdaptiveClockingAggressor::callFunction(void *,void *,void *)
AppleARMFunctionSlowAdaptiveClockingAggressor::getLeastAggressors(uint *,uint *)
AppleARMFunctionSlowAdaptiveClockingAggressor::withProvider(IOService *,char const*,void *,IOSACActionCallback_t const&,uint,ulong long *,uint *)
AppleARMFunctionSlowAdaptiveClockingAggressor::withProvider(IOService *,char const*,void *,int (*)(void *,uint),uint,ulong long *,uint *)
AppleARMFunctionUSBDataMonitor::determineChargerDetect(AppleARMFunctionUSBDataMonitor::DetectType,int)
AppleARMGPICFunction::callFunction(void *,void *,void *)
AppleARMGPIOFunction::callFunction(void *,void *,void *)
AppleARMI2CEEPROM::readBuffer(uchar *,ulong long,ulong long)
AppleARMI2CEEPROM::start(IOService *)
AppleARMI2CEEPROM::start(IOService *)
AppleARMI2CEEPROM::writeBuffer(uchar const*,ulong long,ulong long)
AppleARMIICController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMIICController::compareNubName(IOService const*,OSString *,OSString **)
AppleARMIICController::enqueueIICCommandGated(AppleARMIICCommand *)
AppleARMIICController::executeLoggedIICCommand(AppleARMIICCommand *)
AppleARMIICController::free(void)
AppleARMIICController::lockIICBusGated(bool,AppleARMIICDevice *)
AppleARMIICController::logDumpTail(char const*,uint)
AppleARMIICController::logFinishIICCommand(int)
AppleARMIICController::logNewIICCommand(AppleARMIICCommand *)
AppleARMIICController::logUpdateIICCommand(ushort)
AppleARMIICController::publishBelow(IORegistryEntry *)
AppleARMIICController::sleepActionGated(ulong)
AppleARMIICController::start(IOService *)
AppleARMIICController::updateIICConfig(AppleARMIICDevice *)
AppleARMIICDevice::MetaClass::alloc(void)
AppleARMIICDevice::compareName(OSString *,OSString **)
AppleARMIICDevice::getIICConfig(AppleARMIICConfig *)
AppleARMIICDevice::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleARMIICDevice::lockIICBus(bool)
AppleARMIICDevice::setIICConfig(AppleARMIICConfig *)
AppleARMIICDevice::transferData(uint,ulong long,uchar *,ulong long,uchar *)
AppleARMIICDevice::transferDataWithTimestamp(uint,ulong long,uchar *,ulong long,uchar *,ulong long *)
AppleARMIICDevice::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMIICDevice::~AppleARMIICDevice()
AppleARMIICUserClient::MetaClass::alloc(void)
AppleARMIICUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleARMIICUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleARMIICUserClient::~AppleARMIICUserClient()
AppleARMIISAudioDevice::MetaClass::alloc(void)
AppleARMIISAudioDevice::_initExternalPowerDependency(IOService *)
AppleARMIISAudioDevice::_initForPM(IOService *)
AppleARMIISAudioDevice::_matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleARMIISAudioDevice::_matchingNotificationHandlerGated(void *,IOService *,IONotifier *)
AppleARMIISAudioDevice::_powerChangeDoneGated(ulong)
AppleARMIISAudioDevice::_powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleARMIISAudioDevice::_powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleARMIISAudioDevice::_setPowerStateGated(ulong)
AppleARMIISAudioDevice::configureReport(IOReportChannelList *,uint,void *,void *)
AppleARMIISAudioDevice::createIOReporters(OSArray const*)
AppleARMIISAudioDevice::createRangedStreamFormat(long long,bool)
AppleARMIISAudioDevice::createRangedStreamFormat(long long,long long,bool)
AppleARMIISAudioDevice::createStreamFormat(long long,bool)
AppleARMIISAudioDevice::destroyIOReporters(void)
AppleARMIISAudioDevice::free(void)
AppleARMIISAudioDevice::gangAudioDevices(AppleARMIISAudioDevice*,bool)
AppleARMIISAudioDevice::getActiveDirection(void)
AppleARMIISAudioDevice::getBytesPerFrame(uint,uint)
AppleARMIISAudioDevice::getBytesPerFrame(uint,uint)
AppleARMIISAudioDevice::getClockDomain(void)
AppleARMIISAudioDevice::getCurrentStreamFormat(uint)
AppleARMIISAudioDevice::getIsSupportedFormat(uint,uint,IOAudio2StreamRangedDescription const*)
AppleARMIISAudioDevice::getMaximumSupportedBitsPerChannel(uint)
AppleARMIISAudioDevice::getSupportedBitsPerSampleList(uint,uint *)
AppleARMIISAudioDevice::getSupportedChannelCountList(uint,uint *)
AppleARMIISAudioDevice::getSupportedDataFormatList(AppleARMDMAAudioDevice::DataFormatType *)
AppleARMIISAudioDevice::getTransportDirectionSkew(void)
AppleARMIISAudioDevice::getTransportLatency(uint)
AppleARMIISAudioDevice::getTransportSafetyOffset(uint)
AppleARMIISAudioDevice::init(OSDictionary *,uint)
AppleARMIISAudioDevice::isTransferCoherent(void)
AppleARMIISAudioDevice::setAudioSampleRate(long long,uint,uint)
AppleARMIISAudioDevice::setAudioStreamFormats(long long,OSArray const*)
AppleARMIISAudioDevice::setPowerState(ulong,IOService *)
AppleARMIISAudioDevice::setTransportDataFormat(uint,AppleARMDMAAudioDevice::DataFormatType)
AppleARMIISAudioDevice::setTransportFormat(uint,uint,uint,uint)
AppleARMIISAudioDevice::setTransportSampleRate(long long)
AppleARMIISAudioDevice::start(IOService *,AppleARMIISDevice *,long long,uint,uint)
AppleARMIISAudioDevice::start(IOService *,AppleARMIISDevice *,uint,uint,long long,OSArray const*)
AppleARMIISAudioDevice::startTransport(IOMemoryDescriptor * const*,uint const*,ulong long const*,ulong long const*)
AppleARMIISAudioDevice::stopAudioAndDataTransfers(void)
AppleARMIISAudioDevice::stopTransfer(uint,uint)
AppleARMIISAudioDevice::stopTransport(void)
AppleARMIISAudioDevice::transferData(uint,IOMemoryDescriptor *,void *,uint,ulong long,ulong long)
AppleARMIISAudioDevice::updateReport(IOReportChannelList *,uint,void *,void *)
AppleARMIISAudioDevice::waitAwake(void)
AppleARMIISAudioDevice::waitAwake(void)
AppleARMIISAudioDevice::~AppleARMIISAudioDevice()
AppleARMIISCommand::initWithController(AppleARMIISController *)
AppleARMIISCommand::withController(AppleARMIISController *)
AppleARMIISController::AppleARMIISController(OSMetaClass const*)
AppleARMIISController::calculateStandardTiming(AppleARMIISConfig *,uint *,uint *,uint *,uint *)
AppleARMIISController::completeIISCommand(AppleARMIISCommand *)
AppleARMIISController::completeIISNoCommand(void)
AppleARMIISController::configureReport(IOReportChannelList *,uint,void *,void *)
AppleARMIISController::convertFSFromSampleRate(ushort,ushort,uint *,uint)
AppleARMIISController::createReporters(void)
AppleARMIISController::destroyReporters(void)
AppleARMIISController::enqueueIISCommandGated(AppleARMIISDevice *,uint,AppleARMIISCommand *)
AppleARMIISController::free(void)
AppleARMIISController::getPhysicalChannel(AppleARMIISConfig *,uint,uint,uint *)
AppleARMIISController::getSupportedChannelCounts(AppleARMIISConfig *,uint)
AppleARMIISController::init(IORegistryEntry *,IORegistryPlane const*)
AppleARMIISController::init(OSDictionary *)
AppleARMIISController::initForPM(IOService *)
AppleARMIISController::notifyIISFrequencyChange(void)
AppleARMIISController::publishBelow(IORegistryEntry *)
AppleARMIISController::setPowerState(ulong,IOService *)
AppleARMIISController::setPowerStateGated(ulong,IOService *)
AppleARMIISController::start(IOService *)
AppleARMIISController::stopIISCommandGated(AppleARMIISDevice *,uint)
AppleARMIISController::updateIISConfig(AppleARMIISDevice *)
AppleARMIISController::updateReport(IOReportChannelList *,uint,void *,void *)
AppleARMIISDevice::gangIISDevices(AppleARMIISDevice*,bool)
AppleARMIISDevice::getBCLKCount(void)
AppleARMIISDevice::getBitsPerChannel(uint)
AppleARMIISDevice::getBitsPerChannel(void)
AppleARMIISDevice::getBitsPerSlot(uint)
AppleARMIISDevice::getClockDomain(void)
AppleARMIISDevice::getDataDelay(uint)
AppleARMIISDevice::getDataEdgeFalling(uint)
AppleARMIISDevice::getIISConfig(AppleARMIISConfig *)
AppleARMIISDevice::getLatency(uint)
AppleARMIISDevice::getMCLKFrequency(void)
AppleARMIISDevice::getPhysicalChannel(uint,uint,uint *)
AppleARMIISDevice::getSafetyOffset(uint)
AppleARMIISDevice::getSupportedChannelCounts(uint)
AppleARMIISDevice::getSyncEdgeFalling(void)
AppleARMIISDevice::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleARMIISDevice::isTransferCoherent(void)
AppleARMIISDevice::message(uint,IOService *,void *)
AppleARMIISDevice::setBitsPerChannel(uint)
AppleARMIISDevice::setBitsPerChannel(uint,uint)
AppleARMIISDevice::setBitsPerSlot(uint)
AppleARMIISDevice::setBitsPerSlot(uint,uint)
AppleARMIISDevice::setChannelCount(uint,uint)
AppleARMIISDevice::setIISConfig(AppleARMIISConfig *)
AppleARMIISDevice::setIISMaster(bool)
AppleARMIISDevice::setLRCLKFrequency(ulong long)
AppleARMIISDevice::setMCLKEnabled(bool)
AppleARMIISDevice::setMCLKFrequency(ulong long)
AppleARMIISDevice::startTransferNoData(uint)
AppleARMIISDevice::stopTransfer(uint)
AppleARMIISDevice::transferData(IOMemoryDescriptor *,uint,ulong long,ulong long,AppleARMIISCompletion *,mach_timespec const*)
AppleARMIISDevice::validIISConfig(AppleARMIISConfig *)
AppleARMIISDevice::validIISConfig(uint,uint,uint,ulong long)
AppleARMIISDevice::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMIISSwitch::_connectObjects(uint,uint,AppleARMIISSwitch::ChangeSet const*,uint *,uint *,uint *,OSArray *,OSArray *,bool)
AppleARMIISSwitch::_connectObjects(uint,uint,uint,uint,uint *,uint *)
AppleARMIISSwitch::_makeConnection(AppleARMIISSwitch::ConnectionType,uint,uint,uint *,uint *)
AppleARMIISSwitch::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMIISSwitch::connectI2SPorts(uint,uint,uint,uint,uint,uint,uint,uint,bool,uint *)
AppleARMIISSwitch::copyRouteDescription(OSString const*,OSString const*,uint,uint,uint)
AppleARMIISSwitch::copyRouteDescription(uint,uint,uint,uint,uint)
AppleARMIISSwitch::defaultRegisterState(uint *)
AppleARMIISSwitch::free(void)
AppleARMIISSwitch::getActiveDirection(uint,uint)
AppleARMIISSwitch::start(IOService *)
AppleARMIO::getClockFrequency(OSSymbol const*,uint *,uint)
AppleARMIO::getClockFrequency(char const*,uint *,uint)
AppleARMIO::getClockFrequency(uint,uint *,uint)
AppleARMIO::getClockName(uint,uint *,uint)
AppleARMIO::getNubResources(IOService *)
AppleARMIO::handlePlatformError(ulong)
AppleARMIO::publishBelow(IORegistryEntry *)
AppleARMIO::start(IOService *)
AppleARMIODevice::enableDeviceClock(uint,uint)
AppleARMIODevice::enableDevicePinGroup(uint,uint)
AppleARMIODevice::enableDevicePower(uint,uint *,uint)
AppleARMIODevice::getClockFrequency(OSSymbol const*)
AppleARMIODevice::getClockFrequency(char const*)
AppleARMIODevice::getClockFrequency(uint)
AppleARMIODevice::getClockName(uint)
AppleARMIODevice::getResources(void)
AppleARMIODevice::initDeviceWithProvider(AppleARMIO *,IORegistryEntry *)
AppleARMIODevice::isDMACoherent(uint)
AppleARMIODevice::newDeviceWithProvider(AppleARMIO *,IORegistryEntry *)
AppleARMIODevice::setDevicePowerState(AppleARMIODevice::DevicePowerState,uint)
AppleARMIODevice::setDevicePowerState(AppleARMIODevice::DevicePowerState,uint)
AppleARMLightEmUp::CPUHalter::Expression::init(AppleARMLightEmUp::CPUHalter::Expression&,OSData const*,uint)
AppleARMLightEmUp::CPUHalter::Expression::init(AppleARMLightEmUp::CPUHalter::Expression&,OSData const*,uint)
AppleARMLightEmUp::CPUHalter::halt(void)
AppleARMLightEmUp::halt(uint)
AppleARMLightEmUp::ignite(void)
AppleARMLightEmUp::setProperties(OSObject *)
AppleARMLightEmUp::start(IOService *)
AppleARMLightEmUp::start(IOService *)
AppleARMLightEmUp::stop(IOService *)
AppleARMMIPIDSIController::publishBelow(IORegistryEntry *)
AppleARMMIPIDSIController::setProperties(OSObject *)
AppleARMMIPIDSIDevice::enableHighSpeedMode(bool)
AppleARMMIPIDSIDevice::enableInterface(bool)
AppleARMMIPIDSIDevice::enableVideo(bool)
AppleARMMIPIDSIDevice::getDisplayTiming(bool,display_timing_t *)
AppleARMMIPIDSIDevice::getSupportLPM(void)
AppleARMMIPIDSIDevice::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleARMMIPIDSIDevice::sendLongCommand(uchar,uchar const*,ulong long)
AppleARMMIPIDSIDevice::sendShortCommand(uchar,uchar,uchar)
AppleARMMIPIDSIDevice::setLPMEnable(bool)
AppleARMMIPIDSIDevice::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMNMI::handleInterrupt(void *,IOService *,int)
AppleARMNMI::start(IOService *)
AppleARMNORFlashController::free(void)
AppleARMNORFlashController::publishBelow(IORegistryEntry *)
AppleARMNORFlashController::start(IOService *)
AppleARMNORFlashDevice::eraseRegion(uint,ulong long,ulong long)
AppleARMNORFlashDevice::getRegionSize(uint)
AppleARMNORFlashDevice::initDeviceWithProvider(AppleARMNORFlashController *,IORegistryEntry *)
AppleARMNORFlashDevice::newDeviceWithProvider(AppleARMNORFlashController *,IORegistryEntry *)
AppleARMNORFlashDevice::readRegion(uint,uchar *,ulong long,ulong long)
AppleARMNORFlashDevice::writeBytes(uint,uchar const*,ulong long,ulong long)
AppleARMNORFlashDevice::writeRegion(uint,uchar const*,ulong long,ulong long)
AppleARMNORNVRAM::getNVRAMProperties(void)
AppleARMNORNVRAM::nextBank(void)
AppleARMNORNVRAM::read(ulong long,uchar *,ulong long)
AppleARMNORNVRAM::start(IOService *)
AppleARMNORNVRAM::sync(void)
AppleARMNORNVRAM::write(ulong long,uchar *,ulong long)
AppleARMNORPanicLog::MetaClass::alloc(void)
AppleARMNORPanicLog::clearRegion(ulong long,ulong long)
AppleARMNORPanicLog::createBlockStorageDevice(void)
AppleARMNORPanicLog::readRegion(uchar *,ulong long,ulong long)
AppleARMNORPanicLog::start(IOService *)
AppleARMNORPanicLog::writeRegion(uchar const*,ulong long,ulong long)
AppleARMNORPanicLogDevice::MetaClass::alloc(void)
AppleARMNORPanicLogDevice::attach(IOService *)
AppleARMNORPanicLogDevice::detach(IOService *)
AppleARMNORPanicLogDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
AppleARMNORPanicLogDevice::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
AppleARMNORPanicLogDevice::init(ulong long,OSDictionary *)
AppleARMPE::PMInstantiatePowerDomains(void)
AppleARMPE::PMRegisterDevice(IOService *,IOService *)
AppleARMPE::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPE::createSystemSerialNumberString(OSData *)
AppleARMPE::getUTCTimeOfDay(ulong *,uint *)
AppleARMPE::platformAdjustService(IOService *)
AppleARMPE::setUTCTimeOfDay(ulong,uint)
AppleARMPE::start(IOService *)
AppleARMPMUAccessoryPS::free(void)
AppleARMPMUAccessoryPS::handlePowerSourceDetect(IOAccessoryPowerSourceBehavior const*)
AppleARMPMUAccessoryPS::initWithPowerSource(AppleARMPMUPowerSource *,uint)
AppleARMPMUCharger::DisplayCapacityCurve::createReplacementCapacityCurve(float,float,bool,float,float,bool)
AppleARMPMUCharger::DisplayCapacityCurve::displayLevelForBatteryLevel(float)
AppleARMPMUCharger::DisplayCapacityFilter::_clock_get_uptime(void)
AppleARMPMUCharger::DisplayCapacityFilter::_sane(float)
AppleARMPMUCharger::DisplayCapacityFilter::getDisplayLevel(float,uint,bool,int)
AppleARMPMUCharger::DisplayCapacityFilter::setDisplayLevel(float)
AppleARMPMUCharger::MetaClass::alloc(void)
AppleARMPMUCharger::_setupForBacklightNotification(void)
AppleARMPMUCharger::causeChargerEvent(AppleARMFunctionCharger *,uint)
AppleARMPMUCharger::chargeTimerEvent(IOTimerEventSource *)
AppleARMPMUCharger::chargerInputConfigurationAction(AppleARMFunctionCharger *,uint *)
AppleARMPMUCharger::chargerInterruptAction(AppleARMFunctionCharger *,void *)
AppleARMPMUCharger::chargerInterruptEvent(IOInterruptEventSource *,IOInterruptEventSource *,int)
AppleARMPMUCharger::chargingWork(bool)
AppleARMPMUCharger::checkHvcSelection(void)
AppleARMPMUCharger::configureReport(IOReportChannelList *,uint,void *,void *)
AppleARMPMUCharger::copyAndSetAdapterDetailFromChargerFunction(AppleARMFunctionCharger *,char const*)
AppleARMPMUCharger::copyBatteryVoltageArray(bool,int)
AppleARMPMUCharger::copyChargerBatteryVoltage(AppleARMFunctionCharger *,bool)
AppleARMPMUCharger::copyChargerConfiguration(AppleARMFunctionCharger *,uint)
AppleARMPMUCharger::copyDetectStatus(uint,bool)
AppleARMPMUCharger::copyDockChargers<bool>(uint,OSObject * (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,bool),bool,bool)
AppleARMPMUCharger::copyDockChargers<uint>(uint,OSObject * (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,uint),bool,uint)
AppleARMPMUCharger::copyDockChargersAction<bool>(AppleARMFunctionCharger *,AppleARMPMUCharger::ConstCopyDockChargersActionParam<bool> *)
AppleARMPMUCharger::copyDockChargersAction<uint *>(AppleARMFunctionCharger *,AppleARMPMUCharger::ConstCopyDockChargersActionParam<uint *> *)
AppleARMPMUCharger::copyDockChargersAction<uint>(AppleARMFunctionCharger *,AppleARMPMUCharger::ConstCopyDockChargersActionParam<uint> *)
AppleARMPMUCharger::createReporters(void)
AppleARMPMUCharger::currentLimitBackoffTimerAction(IOTimerEventSource *)
AppleARMPMUCharger::enableChargerEventsAction(AppleARMFunctionCharger *,bool *)
AppleARMPMUCharger::forceUiSocTimerAction(IOTimerEventSource *)
AppleARMPMUCharger::gatedSetProperties(OSObject *)
AppleARMPMUCharger::getChargeLimit(uint *)
AppleARMPMUCharger::getDetectStatusAction(AppleARMFunctionCharger *,AppleARMPMUCharger::GetDetectStatusActionParam *)
AppleARMPMUCharger::ggEOCTimerAction(IOTimerEventSource *)
AppleARMPMUCharger::handleBacklightUpdate(void *,uint,IOService *,void *,ulong)
AppleARMPMUCharger::handleSetPowerState(bool)
AppleARMPMUCharger::handleStartGated(bool,bool)
AppleARMPMUCharger::handleUSBInputFlags(uint,bool *,bool *)
AppleARMPMUCharger::handleUSBInputFlagsAction(AppleARMFunctionCharger *,AppleARMPMUCharger::HandleUSBInputFlagsParam *)
AppleARMPMUCharger::handleUpdateRegistry(void)
AppleARMPMUCharger::inputCurrentLimitStep(void)
AppleARMPMUCharger::inputCurrentLimitStepAction(AppleARMFunctionCharger *,ulong long *)
AppleARMPMUCharger::invokeAllChargers<int *>(void (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,int *),int *)
AppleARMPMUCharger::invokeDockChargers<bool *>(uint,void (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,bool *),bool *)
AppleARMPMUCharger::invokeDockChargers<bool>(uint,void (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,bool),bool)
AppleARMPMUCharger::invokeDockChargers<void *>(uint,void (AppleARMPMUCharger::*)(AppleARMFunctionCharger *,void *),void *)
AppleARMPMUCharger::measureBatteryTemperatureAction(AppleARMFunctionCharger *,int *)
AppleARMPMUCharger::measureBatteryVoltageAction(AppleARMFunctionCharger *,int *)
AppleARMPMUCharger::measureCapacity(bool,uint)
AppleARMPMUCharger::posmState2Pmu(uchar)
AppleARMPMUCharger::postInit(void)
AppleARMPMUCharger::resetCurrentLimitChargerAction(AppleARMFunctionCharger *,bool *)
AppleARMPMUCharger::resetCurrentLimitTimerAction(IOTimerEventSource *)
AppleARMPMUCharger::resetUSBInputLimit(uint,bool)
AppleARMPMUCharger::setCharger(int const*,uint,bool,bool *)
AppleARMPMUCharger::setChargerCurrentLimitAction(AppleARMFunctionCharger *,AppleARMPMUCharger::SetChargerCurrentLimitActionParam *)
AppleARMPMUCharger::setChargerHighVoltage(uint,uint)
AppleARMPMUCharger::setChargerHvcAction(AppleARMFunctionCharger *,uint)
AppleARMPMUCharger::setChargerProperties(AppleARMFunctionCharger *,OSDictionary *)
AppleARMPMUCharger::setInputCurrentLimitBackoff(AppleARMFunctionCharger *,uint)
AppleARMPMUCharger::setInputPower(void)
AppleARMPMUCharger::setPreferredInputAction(AppleARMFunctionCharger *,void *)
AppleARMPMUCharger::start(IOService *)
AppleARMPMUCharger::startCharger(void)
AppleARMPMUCharger::uiUpdateTimerAction(IOTimerEventSource *)
AppleARMPMUCharger::updateChargeStatus(void)
AppleARMPMUCharger::updateChargeStatusAction(AppleARMFunctionCharger *,bool *)
AppleARMPMUCharger::updateReport(IOReportChannelList *,uint,void *,void *)
AppleARMPMUCharger::~AppleARMPMUCharger()
AppleARMPMUPowerSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleARMPMUPowerSensor::initWithProvider(IOService *,IOService *,uint,char const*,char const*,int (*)(IOService *,AppleARMPMUSensor *,void *,long long *),void *)
AppleARMPMUPowerSource::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPMUPowerSource::determinePowerSupply(void)
AppleARMPMUPowerSource::finishStart(AppleARMPMUPowerSource::startArgs *,int)
AppleARMPMUPowerSource::finishStartGated(_IOLock *,bool *)
AppleARMPMUPowerSource::finishStartGated(_IOLock *,bool *)
AppleARMPMUPowerSource::functionWithCharger(int,char const*)
AppleARMPMUPowerSource::gatedSetProperties(OSObject *)
AppleARMPMUPowerSource::getBatteryPack(int)
AppleARMPMUPowerSource::getUSBHvcConfigParamVoltage(uint,uchar)
AppleARMPMUPowerSource::getUSBInputCurrentLimit(uint,int *)
AppleARMPMUPowerSource::getUSBInputCurrentLimitOffset(uint,int *)
AppleARMPMUPowerSource::getWorkLoop(void)
AppleARMPMUPowerSource::handleInterrupt(IOInterruptEventSource *,int)
AppleARMPMUPowerSource::init(OSDictionary *)
AppleARMPMUPowerSource::initForPM(IOService *)
AppleARMPMUPowerSource::powerSupplyChange(void)
AppleARMPMUPowerSource::powerSupplyDebounce(uint)
AppleARMPMUPowerSource::powerSupplyEvent(bool,uint)
AppleARMPMUPowerSource::removePSProperty(OSSymbol const*)
AppleARMPMUPowerSource::setAdapterDetailsProperty(uint,char const*,OSObject const*)
AppleARMPMUPowerSource::setAdapterDetailsProperty(uint,char const*,char const*)
AppleARMPMUPowerSource::setAdapterDetailsProperty(uint,char const*,ulong long,uint)
AppleARMPMUPowerSource::setCharger(bool *)
AppleARMPMUPowerSource::setCharger(void)
AppleARMPMUPowerSource::setHvcAdapter(uint)
AppleARMPMUPowerSource::setHvcConfigParams(uint,OSArray const*)
AppleARMPMUPowerSource::setInputPower(void)
AppleARMPMUPowerSource::setPSProperty(OSSymbol const*,char const*)
AppleARMPMUPowerSource::setPSProperty(OSSymbol const*,ulong long,uint)
AppleARMPMUPowerSource::setPowerState(ulong,IOService *)
AppleARMPMUPowerSource::setProperties(OSObject *)
AppleARMPMUPowerSource::sleepWakeNotification(void *,uint,IOService *,void *,ulong)
AppleARMPMUPowerSource::sleepWakeNotificationGated(uint)
AppleARMPMUPowerSource::start(IOService *)
AppleARMPMUPowerSource::start(IOService *)
AppleARMPMUPowerSource::updateRegistry(void)
AppleARMPMUSensor::free(void)
AppleARMPMUSensor::initWithProvider(IOService *,IOService *,uint,char const*,char const*,int (*)(IOService *,AppleARMPMUSensor*,void *,long long *),void *)
AppleARMPMUSensor::withProvider(IOService *,IOService *,uint,char const*,char const*,int (*)(IOService *,AppleARMPMUSensor*,void *,long long *),void *)
AppleARMPMUTempSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleARMPWM::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPWM::publishBelow(IORegistryEntry *)
AppleARMPWM::start(IOService *)
AppleARMPWM::startPWM(void const*,ulong long,ulong long,ulong long,bool)
AppleARMPWMBacklight::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPWMBacklight::free(void)
AppleARMPWMBacklight::setBacklightLevelGated(uchar,int,int)
AppleARMPWMBacklight::start(IOService *)
AppleARMPWMBacklightControllerUpdateFunction::callFunction(void *,void *,void *)
AppleARMPWMCaptureTimestampFunction::disable(void)
AppleARMPWMCaptureTimestampFunction::enable(void)
AppleARMPWMCaptureTimestampFunction::getTimestamp(void)
AppleARMPWMCaptureTimestampFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMPWMDevice::_publishValues(ulong long,ulong long,ulong long)
AppleARMPWMDevice::_setPropertiesGated(OSObject *)
AppleARMPWMDevice::_startPWMGated(ulong long const*,ulong long const*,ulong long const*,bool const*)
AppleARMPWMDevice::_stopPWMGated(bool)
AppleARMPWMDevice::_timerAction(IOTimerEventSource *)
AppleARMPWMDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPWMDevice::initWithRegistryEntry(IORegistryEntry *,AppleARMPWM *)
AppleARMPWMDevice::setProperties(OSObject *)
AppleARMPWMDevice::startPWMWithFrequency(ulong long,uint,bool,ulong long)
AppleARMPWMDevice::startPWMWithPeriod(ulong long,ulong long,bool,ulong long)
AppleARMPWMDevice::stopPWM(void)
AppleARMPWMInOutPulseController::MetaClass::alloc(void)
AppleARMPWMInOutPulseController::_disableInputPulseSampler(void)
AppleARMPWMInOutPulseController::_disableOutputPulseGenerator(void)
AppleARMPWMInOutPulseController::_enableInputPulseSampler(void)
AppleARMPWMInOutPulseController::_enableOutputPulseGenerator(ulong long,ulong long,bool)
AppleARMPWMInOutPulseController::_setPropertiesGated(OSObject *)
AppleARMPWMInOutPulseController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMPWMInOutPulseController::initWithRegistryEntry(IORegistryEntry *,AppleARMPWM *)
AppleARMPWMInOutPulseController::setProperties(OSObject *)
AppleARMPWMInOutPulseController::~AppleARMPWMInOutPulseController()
AppleARMParamFIFO::MetaClass::MetaClass(void)
AppleARMPassthroughPowerSource::MetaClass::alloc(void)
AppleARMPerformanceControllerCLPCNub::attachToChild(IORegistryEntry *,IORegistryPlane const*)
AppleARMPerformanceControllerCLPCNub::enableDeviceClock(uint,bool)
AppleARMPerformanceControllerCLPCNub::message(uint,IOService *,void *)
AppleARMPerformanceControllerCLPCNub::setCPUPerformance(uint)
AppleARMPerformanceControllerCLPCNub::setCPUPerformanceMap(uint *,uint)
AppleARMPerformanceControllerFunctionAssertReset::MetaClass::alloc(void)
AppleARMPerformanceControllerFunctionAssertReset::assertReset(bool)
AppleARMPerformanceControllerFunctionAssertReset::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMPerformanceControllerFunctionCLPCEnabled::callFunction(void *,void *,void *)
AppleARMPerformanceControllerFunctionCPUIdle::callFunction(void *,void *,void *)
AppleARMPerformanceControllerFunctionClockGate::MetaClass::alloc(void)
AppleARMPerformanceControllerFunctionClockGate::callFunction(void *,void *,void *)
AppleARMPerformanceControllerFunctionClockGate::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMPerformanceControllerFunctionClockGate::~AppleARMPerformanceControllerFunctionClockGate()
AppleARMPerformanceControllerFunctionPerfAdvise::MetaClass::alloc(void)
AppleARMPerformanceControllerFunctionPerfAdvise::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleARMPerformanceControllerFunctionPerfAdvise::registerAction(OSObject *,int (*)(OSObject *,bool,bool,uint))
AppleARMPerformanceControllerFunctionPerfAdvise::unregisterAction(void)
AppleARMPerformanceControllerFunctionPerfAdvise::~AppleARMPerformanceControllerFunctionPerfAdvise()
AppleARMPerformanceControllerFunctionPowerGate::callFunction(void *,void *,void *)
AppleARMRTC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMRTC::convertDateTimeToSeconds(RTCDateTime const*)
AppleARMRTC::convertSecondsToDateTime(long,RTCDateTime *)
AppleARMRTC::enableSecondsAlarm(uint)
AppleARMRTC::free(void)
AppleARMRTC::getGMTTimeOfDay(void)
AppleARMRTC::getUTCTimeOfDay(ulong *,uint *)
AppleARMRTC::handlePMSettingNotification(OSSymbol const*,OSObject *,OSObject *)
AppleARMRTC::handlePMSettingNotificationGated(OSSymbol const*,OSObject *,OSObject *)
AppleARMRTC::handleShutdownRestart(uint)
AppleARMRTC::init(OSDictionary *)
AppleARMRTC::setGMTTimeOfDay(long)
AppleARMRTC::setProperties(OSObject *)
AppleARMRTC::setUTCTimeOfDay(ulong,uint)
AppleARMRTC::shutdownNotification(void *,void *,uint,IOService *,void *,ulong)
AppleARMRTC::start(IOService *)
AppleARMRTC::stop(IOService *)
AppleARMSPICommand::free(void)
AppleARMSPICommand::initWithController(AppleARMSPIController *)
AppleARMSPICommand::withController(AppleARMSPIController *)
AppleARMSPIController::arbitrate(AppleARMSPICommand *)
AppleARMSPIController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMSPIController::completeSPICommand(AppleARMSPICommand *)
AppleARMSPIController::enqueueSPICommandGated(AppleARMSPICommand *)
AppleARMSPIController::free(void)
AppleARMSPIController::init(OSDictionary *)
AppleARMSPIController::publishBelow(IORegistryEntry *)
AppleARMSPIController::sleepActionGated(ulong)
AppleARMSPIController::start(IOService *)
AppleARMSPIController::updateSPIConfig(AppleARMSPIDevice *)
AppleARMSPIDevice::getSPIConfig(AppleARMSPIConfig *)
AppleARMSPIDevice::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleARMSPIDevice::setSPIConfig(AppleARMSPIConfig *)
AppleARMSPIDevice::transferData(IOMemoryDescriptor *,ulong long,ulong long,IOMemoryDescriptor *,ulong long,ulong long,AppleARMSPICompletion *,ulong long)
AppleARMSPIDevice::transferData(IOMemoryDescriptor *,ulong long,ulong long,void *,ulong long,AppleARMSPICompletion *,ulong long)
AppleARMSPIDevice::transferData(IOMemoryDescriptor *,void *,ulong long,ulong long,IOMemoryDescriptor *,void *,ulong long,ulong long,AppleARMSPICompletion *,ulong long)
AppleARMSPIDevice::transferData(void *,ulong long,IOMemoryDescriptor *,ulong long,ulong long,AppleARMSPICompletion *,ulong long)
AppleARMSPIDevice::transferData(void *,ulong long,void *,ulong long,AppleARMSPICompletion *,ulong long)
AppleARMSPIDevice::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMSPIFlashController::_eraseSector(uint)
AppleARMSPIFlashController::_identifyNORDevice(void)
AppleARMSPIFlashController::_programBytes(uchar const*,ulong long,ulong long)
AppleARMSPIFlashController::_programBytesSST(uchar const*,ulong long,ulong long)
AppleARMSPIFlashController::_programSector(uint,uchar const*)
AppleARMSPIFlashController::_programSectorSST(uint,uchar const*)
AppleARMSPIFlashController::_readJedecId(void)
AppleARMSPIFlashController::_readRDSR(void)
AppleARMSPIFlashController::_waitBusy(uint,uint)
AppleARMSPIFlashController::_writeEnable(bool)
AppleARMSPIFlashController::_writeWRSR(uchar)
AppleARMSPIFlashController::eraseArea(ulong long,ulong long)
AppleARMSPIFlashController::readBuffer(uchar *,ulong long,ulong long)
AppleARMSPIFlashController::start(IOService *)
AppleARMSPIFlashController::writeBuffer(uchar const*,ulong long,ulong long)
AppleARMSPIFlashController::writeBytes(uchar const*,ulong long,ulong long)
AppleARMSPMIController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMSPMIController::enqueueSPMICommandGated(AppleARMSPMICommand *)
AppleARMSPMIController::executeLoggedSPMICommand(AppleARMSPMICommand *)
AppleARMSPMIController::free(void)
AppleARMSPMIController::lockSPMIBusGated(bool,AppleARMSPMIDevice *)
AppleARMSPMIController::logFinishSPMICommand(int)
AppleARMSPMIController::logNewSPMICommand(AppleARMSPMICommand *)
AppleARMSPMIController::logUpdateSPMICommand(ushort)
AppleARMSPMIController::publishBelow(IORegistryEntry *)
AppleARMSPMIController::sendCommand(AppleARMSPMICommand *)
AppleARMSPMIController::sleepActionGated(ulong)
AppleARMSPMIController::start(IOService *)
AppleARMSPMIController::updateSPMIConfig(AppleARMSPMIDevice *)
AppleARMSPMIDevice::dataRead(ushort,uchar *,ulong,uint)
AppleARMSPMIDevice::dataWrite(ushort,uchar const*,ulong,uint)
AppleARMSPMIDevice::extRegisterRead(ushort,uchar *,ulong,uint)
AppleARMSPMIDevice::extRegisterReadLong(ushort,uchar *,ulong,uint)
AppleARMSPMIDevice::extRegisterWrite(ushort,uchar const*,ulong,uint)
AppleARMSPMIDevice::extRegisterWriteLong(ushort,uchar const*,ulong,uint)
AppleARMSPMIDevice::getSPMIConfig(AppleARMSPMIConfig *)
AppleARMSPMIDevice::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleARMSPMIDevice::lockSPMIBus(bool)
AppleARMSPMIDevice::register0Write(uchar,uint)
AppleARMSPMIDevice::registerRead(ushort,uchar *,uint)
AppleARMSPMIDevice::registerWrite(ushort,uchar,uint)
AppleARMSPMIDevice::setSPMIConfig(AppleARMSPMIConfig *)
AppleARMSPMIDevice::withRegistryEntry(IORegistryEntry *,IOService *)
AppleARMSPMIUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleARMSlowAdaptiveClockingManager::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMSoftIICController::MetaClass::alloc(void)
AppleARMSoftIICController::_getSDA(void)
AppleARMSoftIICController::_readByte(bool)
AppleARMSoftIICController::_sendAck(bool)
AppleARMSoftIICController::_sendStart(void)
AppleARMSoftIICController::_sendStop(void)
AppleARMSoftIICController::_setSCL(bool)
AppleARMSoftIICController::_setSDA(bool)
AppleARMSoftIICController::_writeByte(uchar)
AppleARMSoftIICController::executeIICCommand(AppleARMIICCommand *)
AppleARMSoftIICController::free(void)
AppleARMSoftIICController::start(IOService *)
AppleARMSoftIICController::~AppleARMSoftIICController()
AppleARMWatchdogTimer::_handleInterrupt(OSObject *,void *,IOService *,int)
AppleARMWatchdogTimer::_handlePEARMDebugPanicHook(char const*)
AppleARMWatchdogTimer::_handlePEHaltRestart(uint)
AppleARMWatchdogTimer::_handlePEHaltRestart(uint)
AppleARMWatchdogTimer::_writeApWatchdogConfiguration(void)
AppleARMWatchdogTimer::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleARMWatchdogTimer::check_system_cpu_health(void)
AppleARMWatchdogTimer::check_system_cpu_health(void)
AppleARMWatchdogTimer::disableWatchdog(void)
AppleARMWatchdogTimer::enablePanicLongPeriodWatchdog(void)
AppleARMWatchdogTimer::enableReconfigWatchdogMonitoring(void)
AppleARMWatchdogTimer::enableWatchdog(void)
AppleARMWatchdogTimer::extendAPWatchdog(void)
AppleARMWatchdogTimer::extendPanicWatchdog(void)
AppleARMWatchdogTimer::setBootStageFromPanic(uchar)
AppleARMWatchdogTimer::setPMUVariable(char const*,uint)
AppleARMWatchdogTimer::start(IOService *)
AppleARMWatchdogTimer__extendWatchdog
AppleASCANS2::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleASCANS2::_runCPU(bool)
AppleASCANS2::initialize(void)
AppleASCANS2::initialize(void)
AppleASCWrapV2::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleASCWrapV4::AppleASCWrapV4(OSMetaClass const*)
AppleASCWrapV4::MetaClass::alloc(void)
AppleASCWrapV4::_enableOutbox(bool)
AppleASCWrapV4::_getInboxEmpty(void)
AppleASCWrapV4::_getInboxFull(void)
AppleASCWrapV4::_getKICInboxEnabled(void)
AppleASCWrapV4::_isIdle(uint *)
AppleASCWrapV4::_mapFirmware(ulong long,IOMemoryDescriptor *)
AppleASCWrapV4::_unmapFirmware(void)
AppleASCWrapV4::getMailboxBulk(void *,uint *)
AppleASCWrapV4::getMailboxBulk(void *,uint *)
AppleASCWrapV4::getMailboxDebugEntries(void)
AppleASCWrapV4::initialize(void)
AppleASCWrapV4::renderMailboxDebugStatus(char *,ulong)
AppleASCWrapV4SEP::MetaClass::alloc(void)
AppleASCWrapV4SEP::~AppleASCWrapV4SEP()
AppleAVD::CheckAVDHwStatus(int)
AppleAVD::DARTErrorHandler(void *,IODARTErrorInfo const*)
AppleAVD::DVAMapControl(IOMemoryDescriptor *,bool)
AppleAVD::DeallocKernelMem(void *,uint)
AppleAVD::HardReset(int)
AppleAVD::MetaClass::alloc(void)
AppleAVD::SoftReset(void)
AppleAVD::addDVASize(IOMemoryDescriptor *)
AppleAVD::allocateKernelMemoryInternal(uint,ulong,eAvdMemType,eAvdMapType,task *,_avd_client_mem_info *,bool,bool,ulong long,ulong long,uint)
AppleAVD::avdCtrlIdle(bool,uint)
AppleAVD::avdInbox0ISR(uint)
AppleAVD::avdOutbox0ISR(uint)
AppleAVD::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleAVD::checkRVRAScalingRatio(uint,uint,uint,uint)
AppleAVD::clientClosed(AppleAVDUserClient *)
AppleAVD::clientClosedGated(AppleAVDUserClient *)
AppleAVD::confirmProtectionOptions(uint,ulong long)
AppleAVD::createWorkLoop(void)
AppleAVD::deallocateKernelMemoryInternal(_kern_mem_info *,bool,uint)
AppleAVD::decryptFrame(uchar const*,uchar *,uint,int)
AppleAVD::decryptFrame_CTRMode(uchar const*,uchar *,uint,int,uint,uchar *,uint)
AppleAVD::decryptFrame_CTRSliceData(uchar const*,uchar *,uint,int,uint,uint *,uint *,uchar *,uint)
AppleAVD::decryptFrame_KeyDelivery(uchar const*,uchar *,uint,int,int)
AppleAVD::decryptFrame_SliceData(uchar const*,uchar *,uint,int,uint,uint *,uint *)
AppleAVD::disableFastClockInternal(uint)
AppleAVD::dvaOnDemandMapOverride(bool)
AppleAVD::enableFastClockInternal(uint)
AppleAVD::free(void)
AppleAVD::getRequiredIOSurfaceProtectionOptions(int,int,ulong long *)
AppleAVD::handleInterrupts(IOInterruptEventSource *,int)
AppleAVD::handleInterruptsInternal(IOInterruptEventSource *)
AppleAVD::init(OSDictionary *)
AppleAVD::initFairPlayServiceReference(void)
AppleAVD::initKeyDeliveryIOKitServiceReference(void)
AppleAVD::initializeDevice(void)
AppleAVD::initializeDeviceInternal(void)
AppleAVD::mapDART(_avd_client_mem_info *,eAvdMemType,uint)
AppleAVD::memCacheInit(uint)
AppleAVD::memCacheTerminate(uint)
AppleAVD::newUserClient(task *,void *,uint,IOUserClient **)
AppleAVD::powerDownDeviceInternal(void)
AppleAVD::powerUpDeviceInternal(void)
AppleAVD::probe(IOService *,int *)
AppleAVD::reqMemCacheMode(uint)
AppleAVD::runCommand(OSObject *,void *,void *,void *,void *)
AppleAVD::sendCommandToCommandGate(sPQEntry *,eAppleAvdCmdTypes)
AppleAVD::setCryptRef(rp6S0jzg **,int)
AppleAVD::setKDCryptRef(guNUWjBHDxSrlXfjY **,int,int)
AppleAVD::setPowerState(ulong,IOService *)
AppleAVD::setPowerStateOff(uint)
AppleAVD::setPowerStateOffLegacy(AppleARMIODevice *)
AppleAVD::setPowerStateOn(uint)
AppleAVD::setPowerStateOnLegacy(AppleARMIODevice *)
AppleAVD::setResolutionInfo(uint,uint,uint,uint,uint,uint)
AppleAVD::stop(IOService *)
AppleAVD::subtractDVASize(IOMemoryDescriptor *)
AppleAVD::terminateDevice(void)
AppleAVD::terminateDeviceInternal(void)
AppleAVD::timeoutHandler(OSObject *,IOTimerEventSource *)
AppleAVD::unmapDART(_kern_mem_info *,uint,bool)
AppleAVD::~AppleAVD()
AppleAVDCoreControl::AppleAVDCoreControl(void)
AppleAVDCoreControl::addFrameWorkLoad(uint,eDecodeSpeed,uint,uint)
AppleAVDCoreControl::assignCoreIndex_weightedLoadScore(uint)
AppleAVDCoreControl::cleanUp(void)
AppleAVDCoreControl::forceUpdateAVDCoreActiveLoadRate(AppleAVDCoreControl::sAVDClientInfo *,ulong long,ulong long)
AppleAVDCoreControl::getCoreLoadScore(ushort)
AppleAVDCoreControl::init(eVideoDecoderDeviceType,uint)
AppleAVDCoreControl::newClientCoreAssignment(uint,eAVDCoreLoadBalanceMode,uint &)
AppleAVDCoreControl::removeClient(uint)
AppleAVDCoreControl::removeFrameWorkLoad(uint,uint,bool)
AppleAVDCoreControl::requestAVDCoreSpeed(ushort)
AppleAVDCoreControl::selectAVDCoreTier(eVideoDecoderDeviceType)
AppleAVDCoreControl::setClientInfo(uint,uint,uint,uint)
AppleAVDCoreControl::updateAVDCoreActiveLoadRate(AppleAVDCoreControl::sAVDClientInfo *,eAVDCoreArithmetic)
AppleAVDCoreControl::updateAVDCoreTotalClientLoadRate(AppleAVDCoreControl::sAVDClientInfo *,eAVDCoreArithmetic)
AppleAVDCoreControl::updateCoreClientCount(ushort,eAVDCoreArithmetic)
AppleAVDCoreControl::updateCoreHighSpeedCount(ushort,eAVDCoreArithmetic)
AppleAVDCoreControl::updateCoreMidSpeedCount(ushort,eAVDCoreArithmetic)
AppleAVDUserClient::BurstMap(uint)
AppleAVDUserClient::BurstUnmap(int,bool)
AppleAVDUserClient::DeallocateUserClientKernelMemory(void)
AppleAVDUserClient::MetaClass::alloc(void)
AppleAVDUserClient::_mapPixelBuffer(AppleAVDUserClient*,void *,IOExternalMethodArguments *)
AppleAVDUserClient::_setCallback(AppleAVDUserClient*,void *,IOExternalMethodArguments *)
AppleAVDUserClient::_unmapPixelBuffer(AppleAVDUserClient*,void *,IOExternalMethodArguments *)
AppleAVDUserClient::allocRVRAMemory(uint,uint)
AppleAVDUserClient::allocateMemory(_sAppleAVDAllocateMemoryIn *,_sAppleAVDAllocateMemoryOut *,bool,bool)
AppleAVDUserClient::clientClose(void)
AppleAVDUserClient::clientDied(void)
AppleAVDUserClient::createDecoder(_sAppleAVDCreateDecoderIn *,_sAppleAVDCreateDecoderOut *)
AppleAVDUserClient::createHistogramBuffer(ulong long &)
AppleAVDUserClient::deallocateMemory(_sAppleAVDDeallocateMemoryIn *,_sAppleAVDDeallocateMemoryOut *,bool)
AppleAVDUserClient::decodeFrameFig(_sAppleAVDDecodeFrameFigIn *,_sAppleAVDDecodeFrameFigOut *)
AppleAVDUserClient::decodeFrameFigHelper_CheckDecryptionParameters(_sAppleAVDDecodeFrameFigIn *)
AppleAVDUserClient::decodeFrameFigHelper_CheckParameters(_sAppleAVDDecodeFrameFigIn *,_sAppleAVDDecodeFrameFigOut *)
AppleAVDUserClient::decodeFrameFigHelper_CheckSoftwareDecryptionParameters(_sAppleAVDDecodeFrameFigIn *)
AppleAVDUserClient::decodeFrameFigHelper_CreateAndSubmitDecodeCMD(_sAppleAVDDecodeFrameFigIn *)
AppleAVDUserClient::decodeFrameFigHelper_CreateAndSubmitEncryptProperty(uint,uint)
AppleAVDUserClient::decodeFrameFigHelper_DecryptFrame(_sAppleAVDDecodeFrameFigIn *)
AppleAVDUserClient::decodeFrameFigHelper_VASetParameters(_sAppleAVDDecodeFrameFigIn *)
AppleAVDUserClient::destroyDecoder(_sAppleAVDDestroyDecoderIn *,_sAppleAVDDestroyDecoderOut *)
AppleAVDUserClient::destroyHistogramBuffer(void)
AppleAVDUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAVDUserClient::freeRVRAMemory(void)
AppleAVDUserClient::getResendEncryptProperty(uint *)
AppleAVDUserClient::mapDartVAddr(uint,uint,uint)
AppleAVDUserClient::mapPixelBuffer(_sAppleAVDMapPixelBufferIn *,_sAppleAVDMapPixelBufferOut *)
AppleAVDUserClient::processHWResponse(int,int,int,uint,DecProfileParams *)
AppleAVDUserClient::setCallback(_sAppleAVDKernelCallbackIn *,_sAppleAVDKernelCallbackOut *,ipc_port *,ulong long *)
AppleAVDUserClient::setDecryptionParams(uint,uchar *,uchar *,uchar *)
AppleAVDUserClient::setDisplaySurf(int)
AppleAVDUserClient::setReleaseCVPixelBufferIndex(int,uint)
AppleAVDUserClient::setReleaseCurrentBuffersToOutStruct(_sAppleAVDDecodeFrameFigOut *)
AppleAVDUserClient::setResendEncryptProperty(uint *)
AppleAVDUserClient::setupdateIV(void)
AppleAVDUserClient::start(IOService *)
AppleAVDUserClient::stop(IOService *)
AppleAVDUserClient::unmapPixelBuffer(_sAppleAVDUnmapPixelBufferIn *,_sAppleAVDUnmapPixelBufferOut *)
AppleAVDUserClient::withTask(task *,uint,uint,uint)
AppleAVDUserClient::~AppleAVDUserClient()
AppleAVE2Driver::AcquireHwC(_S_AVE_Client *)
AppleAVE2Driver::CheckStopped(_S_AVE_Client *)
AppleAVE2Driver::CleanClient(_S_AVE_Client *)
AppleAVE2Driver::GetClientNum(void)
AppleAVE2Driver::ProcessCmd(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AppleAVE2Driver::ReleaseHwC(_S_AVE_Client *)
AppleAVE2Driver::SetAbility(_E_AVE_ChipType)
AppleAVE2Driver::StopClient(_S_AVE_Client *,_S_AVE_TimeOut *,int)
AppleAVE2Driver::TryPowerOff(void)
AppleAVE2Driver::TryPowerOn(void)
AppleAVE2Driver::close(IOService *)
AppleAVE2Driver::free(void)
AppleAVE2Driver::init(OSDictionary *)
AppleAVE2Driver::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleAVE2Driver::open(IOService *)
AppleAVE2Driver::setPowerState(ulong,IOService *)
AppleAVE2Driver::start(IOService *)
AppleAVE2Driver::start(IOService *)
AppleAVE2Driver::stop(IOService *)
AppleAVE2Driver::stop(IOService *)
AppleAVE2UserClient::Close(AVE_Close_UserKernel_In_Info *,AVE_Close_UserKernel_Out_Info *)
AppleAVE2UserClient::Complete(AVE_CompleteFrames_UserKernel_In_Info *,AVE_CompleteFrames_UserKernel_Out_Info *)
AppleAVE2UserClient::IO_Close(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Complete(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Open(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Prepare(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Process(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Reset(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_SetCallback(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Start(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::IO_Stop(AppleAVE2UserClient*,void *,IOExternalMethodArguments *)
AppleAVE2UserClient::Notify(uint,uint,int,bool)
AppleAVE2UserClient::Open(AVE_Open_UserKernel_In_Info *,AVE_Open_UserKernel_Out_Info *)
AppleAVE2UserClient::Prepare(AVE_SessionSettings_UserKernel_In_Info *,AVE_SessionSettings_UserKernel_Out_Info *)
AppleAVE2UserClient::Process(AVE_EncodeFrame_UserKernel_In_Info *,AVE_EncodeFrame_UserKernel_Out_Info *)
AppleAVE2UserClient::Reset(AVE_ResetBetweenPasses_UserKernel_In_Info *,AVE_ResetBetweenPasses_UserKernel_Out_Info *)
AppleAVE2UserClient::SetCallback(AVE_KernelCallback_UserKernel_In_Info *,AVE_KernelCallback_UserKernel_Out_Info *,ipc_port *,ulong long *,uint)
AppleAVE2UserClient::Start(AVE_SessionSettings_UserKernel_In_Info *,AVE_SessionSettings_UserKernel_Out_Info *)
AppleAVE2UserClient::Stop(AVE_StopSession_UserKernel_In_Info *,AVE_StopSession_UserKernel_Out_Info *)
AppleAVE2UserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAVE2UserClient::free(void)
AppleAVE2UserClient::initWithDrv(AppleAVE2Driver *,uint,task *,void *,uint,OSDictionary *)
AppleAVE2UserClient::stop(IOService *)
AppleAVE2UserClient::withDrv(AppleAVE2Driver *,uint,task *,void *,uint,OSDictionary *)
AppleAVEIOProcessorChannel::Create(void *,void *,void (*)(void *),int,void *,bool)
AppleAVEIOProcessorChannel::Delete(void)
AppleAVEIOProcessorChannel::Receive(ulong long *,uint *,uint *)
AppleAVEIOProcessorChannel::Send(ulong long,uint,uint)
AppleAcornDisplayPMU::free(void)
AppleActuatorCalibration::addCalibrationProperties(IOService *,IOService *,uint *,OSString **)
AppleActuatorDevice::_addHostClickControlClient(void)
AppleActuatorDevice::_cacheDeviceProperties(void)
AppleActuatorDevice::_deviceGetReportWithLookUp(AADDeviceReportStruct *,uchar)
AppleActuatorDevice::_deviceSetReportWithLookUp(AADDeviceReportStruct *,uchar)
AppleActuatorDevice::_getFeatureReportInfo(uchar,uchar *,ushort *,uchar)
AppleActuatorDevice::_initializeCachedReportInfo(void)
AppleActuatorDevice::_reclaimHostClickControl(void)
AppleActuatorDevice::_registerUserClient(AppleActuatorDeviceUserClient *)
AppleActuatorDevice::_removeHostClickControlClient(void)
AppleActuatorDevice::_sendLogToUserClients(uchar *,uint)
AppleActuatorDevice::_setHostClickControl(uint)
AppleActuatorDevice::_setWaveform(AADDeviceWaveformStruct *,uchar)
AppleActuatorDevice::_unregisterUserClient(AppleActuatorDeviceUserClient *)
AppleActuatorDevice::addHostClickControlClient(void)
AppleActuatorDevice::cacheDeviceProperties(void)
AppleActuatorDevice::driverLogString(OSObject *,char const*,...)
AppleActuatorDevice::driverLogTransaction(OSObject *,uchar *,ushort,uchar *,ushort)
AppleActuatorDevice::free(void)
AppleActuatorDevice::getReport(AADDeviceReportStruct *,uchar)
AppleActuatorDevice::getWorkLoop(void)
AppleActuatorDevice::init(OSDictionary *)
AppleActuatorDevice::initializeCachedReportInfo(void)
AppleActuatorDevice::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleActuatorDevice::reclaimHostClickControl(void)
AppleActuatorDevice::registerUserClient(AppleActuatorDeviceUserClient *)
AppleActuatorDevice::removeHostClickControlClient(void)
AppleActuatorDevice::resetDevice(void)
AppleActuatorDevice::scheduleSetHostClickControl(uint)
AppleActuatorDevice::sendLogToUserClients(uchar *,uint)
AppleActuatorDevice::setPreferences(OSDictionary *)
AppleActuatorDevice::setReport(AADDeviceReportStruct *,uchar)
AppleActuatorDevice::setWaveform(AADDeviceWaveformStruct *,uchar)
AppleActuatorDevice::start(IOService *)
AppleActuatorDevice::stop(IOService *)
AppleActuatorDevice::systemPowerChangeHandler(void *,uint,IOService *,void *,ulong)
AppleActuatorDevice::unregisterUserClient(AppleActuatorDeviceUserClient *)
AppleActuatorDeviceUserClient::clientClose(void)
AppleActuatorDeviceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleActuatorDeviceUserClient::createLogQueue(void)
AppleActuatorDeviceUserClient::enqueueLog(uchar *,uint)
AppleActuatorDeviceUserClient::free(void)
AppleActuatorDeviceUserClient::getReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleActuatorDeviceUserClient::getTargetAndMethodForIndex(IOService **,uint)
AppleActuatorDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleActuatorDeviceUserClient::issueDriverRequest(MTDriverRequestStruct *,MTDriverRequestResultStruct *,ulong long,ulong long *)
AppleActuatorDeviceUserClient::recacheProperties(void)
AppleActuatorDeviceUserClient::reclaimHostClickControl(void)
AppleActuatorDeviceUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleActuatorDeviceUserClient::reservedMethod(void)
AppleActuatorDeviceUserClient::setHostClickControlRequested(bool)
AppleActuatorDeviceUserClient::setReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleActuatorDeviceUserClient::setSendsLogs(bool)
AppleActuatorDeviceUserClient::setWaveform(MTActuatorSetWaveformStruct *,MTActuatorSetWaveformStruct *,ulong long,ulong long *)
AppleActuatorDeviceUserClient::start(IOService *)
AppleActuatorDeviceUserClient::stop(IOService *)
AppleActuatorHIDEventDriver::BuildActDeviceEntry(OSObject *,void *)
AppleActuatorHIDEventDriver::buildActDevice(void)
AppleActuatorHIDEventDriver::closeReportGate(void)
AppleActuatorHIDEventDriver::didTerminate(IOService *,uint,bool *)
AppleActuatorHIDEventDriver::enableActuatorEvents(bool)
AppleActuatorHIDEventDriver::enableHostClickControl(bool,uchar)
AppleActuatorHIDEventDriver::free(void)
AppleActuatorHIDEventDriver::getActuatorReport(uchar,uchar *,uint *,uchar,IOHIDReportType)
AppleActuatorHIDEventDriver::getActuatorReportGated(AppleActuatorHIDEventDriver::AAHEDReportStruct *)
AppleActuatorHIDEventDriver::getActuatorReportInfo(uchar,uchar *,uint *,int)
AppleActuatorHIDEventDriver::getActuatorReportInfoGated(uchar *,uchar *,uint *)
AppleActuatorHIDEventDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleActuatorHIDEventDriver::init(OSDictionary *)
AppleActuatorHIDEventDriver::message(uint,IOService *,void *)
AppleActuatorHIDEventDriver::newActuatorProperties(void)
AppleActuatorHIDEventDriver::setActuatorReport(uchar,uchar *,uint,uchar,IOHIDReportType)
AppleActuatorHIDEventDriver::setActuatorReportGated(AppleActuatorHIDEventDriver::AAHEDReportStruct *)
AppleActuatorHIDEventDriver::setWaveform(uchar,uchar *,uint,uchar)
AppleActuatorHIDEventDriver::simpleGetReport(uchar,IOBufferMemoryDescriptor *,uint *,IOHIDReportType)
AppleActuatorHIDEventDriver::simpleSetReport(uchar,IOBufferMemoryDescriptor *,uint,IOHIDReportType)
AppleActuatorHIDEventDriver::start(IOService *)
AppleActuatorHIDEventDriver::stop(IOService *)
AppleActuatorHIDEventDriver::willTerminate(IOService *,uint)
AppleActuatorSecondaryAudio::getWorkLoop(void)
AppleActuatorSecondaryAudio::setDeviceSampleRate(long long,uint *,uint *)
AppleActuatorSecondaryAudio::start(IOService *)
AppleActuatorSecondaryAudio::waitAwake(void)
AppleAintreeBTM::overrideInitialConfig(void)
AppleAirPowerCharger::AppleAirPowerCharger(OSMetaClass const*)
AppleAirPowerCharger::clearPresentDevices(void)
AppleAirPowerCharger::commitPresentDevicesToRegistry(void)
AppleAirPowerCharger::getResolvableAddress(uchar *,ulong)
AppleAirPowerCharger::isCommsWaitingOnReset(void)
AppleAirPowerCharger::padArrayWithNullPresentDevices(OSArray *,int,int)
AppleAirPowerCharger::publishPresentDevices(AirPowerPresentDevice *,int,bool,uchar)
AppleAirPowerCharger::publishPresentDevicesFromMultiDeviceComms(AirPowerPresentDevice *,int,bool,uchar)
AppleAirPowerCharger::publishPresentDevicesFromPresentDevPackets(void)
AppleAirPowerCharger::reportMatError(uchar)
AppleAirPowerCharger::setProperties(OSObject *)
AppleAirPowerCharger::setPropertiesGated(OSObject *)
AppleAirPowerCharger::setUpCommsStreams(void)
AppleAirPowerCharger::shouldPresentDeviceReplaceOSObject(OSObject *,AirPowerPresentDevice *,int)
AppleAirPowerCharger::start(IOService *)
AppleAirPowerCharger::stop(IOService *)
AppleAirPowerCharger::tearDownCommsStreams(void)
AppleAirPowerCharger::updatePresentDeviceAddress(uchar const*,uchar const*)
AppleAirPowerCharger::updatePresentDeviceFromPresentDevPacket(AirPowerPresentDevice *,int,int)
AppleAirPowerMultiDevice::MetaClass::alloc(void)
AppleAirPowerMultiDevice::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleAirPowerMultiDevice::getBatteryPercent(void)
AppleAirPowerMultiDevice::receiveAirPowerChargerNotification(void *,uint,IOService *,void *,ulong)
AppleAirPowerMultiDevice::receivePowerSourceNotification(void *,uint,IOService *,void *,ulong)
AppleAirPowerMultiDevice::receiveRetAllPresentDevices(uchar const*,ulong)
AppleAirPowerMultiDevice::receiveRetDeviceState(uchar const*,ulong)
AppleAirPowerMultiDevice::receiveRetUpdateAddress(uchar const*,ulong)
AppleAirPowerMultiDevice::sendSetDeviceAddressTelegram(void)
AppleAirPowerMultiDevice::sendSetDeviceStateTelegram(void)
AppleAirPowerMultiDevice::start(IOService *)
AppleAirPowerMultiDevice::stop(IOService *)
AppleAstrisGpioProbe::ASProcessCommand(cscommand_s *,uint)
AppleAstrisGpioProbe::AppleAstrisGpioProbe(void)
AppleAstrisGpioProbe::DapAP(cscommand_s *,uint)
AppleAstrisGpioProbe::DapMemAP_Bus(cscommand_s *,uint)
AppleAstrisGpioProbe::DapReadWrite(cscommand_s *,uint)
AppleAstrisGpioProbe::GenSWDReset(cscommand_s *,uint)
AppleAstrisGpioProbe::GenTckRate(cscommand_s *,uint)
AppleAstrisGpioProbe::GenVersion(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagAPExplore(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagChipCnt(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagExplore(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagIRScan(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagIdle(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagRTI(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagSRST(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagScan(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagSetClr(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagTLR(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagTRST(cscommand_s *,uint)
AppleAstrisGpioProbe::JtagTgtStatus(cscommand_s *,uint)
AppleAstrisGpioProbe::RelayGet(cscommand_s *,uint)
AppleAstrisGpioProbe::RelaySet(cscommand_s *,uint)
AppleAstrisGpioProbe::SWDAPRead(uint,uint *)
AppleAstrisGpioProbe::SWDAPWrite(uint,uint)
AppleAstrisGpioProbe::SWDJtagToSwdMode(void)
AppleAstrisGpioProbe::SWDLineReset(void)
AppleAstrisGpioProbe::SWD_error_cleanup(void)
AppleAstrisGpioProbe::SWD_fix_orun(armdap_ack_t *)
AppleAstrisGpioProbe::SetGrapeCS(uint)
AppleAstrisGpioProbe::armdap_ap_readn(int,uint,uint *,uint *)
AppleAstrisGpioProbe::armdap_ap_write(int,uint,uint *)
AppleAstrisGpioProbe::armdap_apdp_readn(uint,uint *,uint *)
AppleAstrisGpioProbe::armdap_apdp_writen(uint,uint *,uint *)
AppleAstrisGpioProbe::armdap_memap_bus_readn(int,ulong long,uint *,uint *)
AppleAstrisGpioProbe::armdap_memap_bus_writen(int,ulong long,uint *,uint *)
AppleAstrisGpioProbe::jtagap_packtdo(uchar **,uint *,uint *,uint)
AppleAstrisGpioProbe::jtagap_packtms(uchar *,uint,uint *)
AppleAstrisGpioProbe::jtagap_rst(void *,int,int)
AppleAstrisGpioProbe::jtagap_xact(void *,ushort,uchar *,int,uchar *,int,uint)
AppleAstrisGpioProbe::jtagfsm_capture_update_dr(jtagfsm_s *)
AppleAstrisGpioProbe::jtagfsm_chipcnt(jtagfsm_s *)
AppleAstrisGpioProbe::jtagfsm_circ(jtagfsm_s *,chipinfo_s *,int,uchar *,uchar *,uchar *,uchar *,uint)
AppleAstrisGpioProbe::jtagfsm_drscan(jtagfsm_s *,chipinfo_s *,uchar *,uchar *,int,uint)
AppleAstrisGpioProbe::jtagfsm_gotorti(jtagfsm_s *,int)
AppleAstrisGpioProbe::jtagfsm_gotostate(jtagfsm_s *,int)
AppleAstrisGpioProbe::jtagfsm_gototlr(jtagfsm_s *)
AppleAstrisGpioProbe::jtagfsm_irscan(jtagfsm_s *,chipinfo_s *,uchar *,int,uint)
AppleAstrisGpioProbe::jtagfsm_jtag_explore(jtagfsm_s *,ushort)
AppleAstrisGpioProbe::jtagfsm_scanconst(jtagfsm_s *,int,int)
AppleAstrisGpioProbe::platformInit(IOService *)
AppleAstrisGpioProbe::preflight(cscommand_s *,jtagfsm_s **,chipinfo_s **,int)
AppleAstrisGpioProbe::readBitsLsb(uint)
AppleAstrisGpioProbe::start(IOService *)
AppleAstrisGpioProbe::swdDeinit(void)
AppleAstrisGpioProbe::swdInit(void)
AppleAstrisGpioProbe::swdioHigh(void)
AppleAstrisGpioProbe::transmitBitsLsb(uint,uint)
AppleAstrisGpioProbeUserClient::extGetProbePortNumber(OSObject *,void *,IOExternalMethodArguments *)
AppleAstrisGpioProbeUserClient::extParseCSProtocol(OSObject *,void *,IOExternalMethodArguments *)
AppleAstrisGpioProbeUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAstrisGpioProbeUserClient::initWithTask(task *,void *,uint)
AppleAstrisGpioProbeUserClient::start(IOService *)
AppleAstrisGpioProbeUserClient::stop(IOService *)
AppleAudioClock::Utility::getMachTimeAlignment(void)
AppleAudioClock::Utility::getSynchronousClockDomain(ulong long,ulong long)
AppleAudioDeviceTreeHelper::getDeviceTreeAudioNodeProperty(char const*,char const*)
AppleAudioDeviceTreeHelper::getHapticsSessionFunction(IOService *,AppleARMFunction **)
AppleAudioDeviceTreeHelper::getProperty(char const*,char const*)
AppleAudioDeviceTreeHelper::getPropertyUint32t(uint *,char const*,char const*)
AppleAudioDeviceTreeHelper::getZeroFilledBufferSizeProperty(IOService *,uint *)
AppleAudioFirmwareDownloader::AppleAudioFirmwareDownloader(void)
AppleAudioFirmwareDownloader::CreateAudioFirmwareDownloader(IOService *,uint,int (*)(OSObject *,void *,void *,void *,void *))
AppleAudioFirmwareDownloader::MetaClass::alloc(void)
AppleAudioFirmwareDownloader::_firmwareDownloadCallbackHandler(uint,uint,OSData *)
AppleAudioFirmwareDownloader::_firmwareDownloadTimerAction(IOTimerEventSource *)
AppleAudioFirmwareDownloader::_requestFirmwareUpdateCallbackGated(bool)
AppleAudioFirmwareDownloader::requestFirmwareUpdateCallback(bool)
AppleAudioFirmwareDownloader::start(IOService *)
AppleAudioFirmwareDownloader::stop(IOService *)
AppleAudioFirmwareDownloader::~AppleAudioFirmwareDownloader()
AppleAudioStreamFormatterFactory::createAppleAudioStreamFormatter(IOService *,OSData *)
AppleAuthCP::clearAuthState(void)
AppleAuthCP::copyProperty(char const*)
AppleAuthCP::getAuthVersionMajor(void)
AppleAuthCP::requestAuthRestart(void)
AppleAuthCP::setAuthError(uchar)
AppleAuthCP::setAuthErrorDescription(char const*)
AppleAuthCP::setAuthFullPass(bool)
AppleAuthCP::setAuthStatus(bool)
AppleAuthCP::setFdrValidationStatus(AuthCPFdrValidationStatus_t)
AppleAuthCP::setTrustStatus(bool)
AppleAuthCP::setTrustStatusForUI(bool)
AppleAuthCP::start(IOService *)
AppleAuthCPAID::_endExclusiveModeIfRequired(void const*,ulong long,void *,ulong long,ulong long)
AppleAuthCPAID::_fetchPropertyGated(char const*)
AppleAuthCPAID::_getAuthInfo(void)
AppleAuthCPAID::_getIDSN(void)
AppleAuthCPAID::_idBusLockAction(int ( {block_pointer})(void))
AppleAuthCPAID::_propertyIsAuthInfo(char const*)
AppleAuthCPAID::_readData(uchar,ulong long,OSData **,bool)
AppleAuthCPAID::_readString(uchar,OSString **,bool)
AppleAuthCPAID::_transferData(void const*,ulong long,void *,ulong long,ulong long,uint,uint)
AppleAuthCPAID::clearAuthState(void)
AppleAuthCPAID::copyCertificate(void)
AppleAuthCPAID::copyProperty(char const*)
AppleAuthCPAID::free(void)
AppleAuthCPAID::generateSignature(void const*,ulong long,void *,ulong long *)
AppleAuthCPAID::generateSignatureLocked(void const*,ulong long,void *,ulong long *)
AppleAuthCPAID::message(uint,IOService *,void *)
AppleAuthCPAID::setAuthStatus(bool)
AppleAuthCPAID::start(IOService *)
AppleAuthCPAID::stop(IOService *)
AppleAuthCPC26::_generateSignatureGated(void const*,ulong long,void *,ulong long *)
AppleAuthCPC26::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleAuthCPC26::_receiveMessage(void *,void *,uint,IOService *,void *,ulong)
AppleAuthCPC26::_waitForPropertyGated(char const*,uchar const*)
AppleAuthCPC26::copyProperty(char const*)
AppleAuthCPC26::free(void)
AppleAuthCPC26::generateSignature(void const*,ulong long,void *,ulong long *)
AppleAuthCPC26::getDownstreamAuthMajorVer(uchar *)
AppleAuthCPC26::getDownstreamCertificateSerialNumber(void *,uint *)
AppleAuthCPC26::setDownstreamRevokeStatus(bool)
AppleAuthCPC26::start(IOService *)
AppleAuthCPC26::stop(IOService *)
AppleAuthCPC26::willTerminate(IOService *,uint)
AppleAuthCPHSAID::copyCertificate(void)
AppleAuthCPHSAID::eventHandler(IOAccessoryHSAIDBusTransport::HSAIDEvent,void const*,uint)
AppleAuthCPHSAID::free(void)
AppleAuthCPHSAID::generateSignature(void const*,ulong long,void *,ulong long *)
AppleAuthCPHSAID::handleGetAuthenticationCertificateResponse(void const*,uint)
AppleAuthCPHSAID::handleGetAuthenticationCertificateSerialNumberResponse(void const*,uint)
AppleAuthCPHSAID::handleGetAuthenticationInfoResponse(void const*,uint)
AppleAuthCPHSAID::handleGetLastErrorResponse(void const*,uint)
AppleAuthCPHSAID::handleStartAuthenticationResponse(void const*,uint)
AppleAuthCPHSAID::message(uint,IOService *,void *)
AppleAuthCPHSAID::probe(IOService *,int *)
AppleAuthCPHSAID::requestAuthenticationCertificate(void)
AppleAuthCPHSAID::requestAuthenticationCertificateSerialNumber(void)
AppleAuthCPHSAID::requestAuthenticationInfo(void)
AppleAuthCPHSAID::requestAuthenticationSignature(void)
AppleAuthCPHSAID::requestAuthenticationStart(void const*,ulong long)
AppleAuthCPHSAID::start(IOService *)
AppleAuthCPHSAID::stop(IOService *)
AppleAuthCPI2C::_transferData(uint,uchar,void *,ulong long)
AppleAuthCPI2C::copyCertificate(void)
AppleAuthCPI2C::copyCertificateLocked(void)
AppleAuthCPI2C::free(void)
AppleAuthCPI2C::generateSignature(void const*,ulong long,void *,ulong long *)
AppleAuthCPI2C::generateSignatureLocked(void const*,ulong long,void *,ulong long *)
AppleAuthCPI2C::setPowerState(ulong,IOService *)
AppleAuthCPI2C::stop(IOService *)
AppleAuthCPI2C::willTerminate(IOService *,uint)
AppleAuthCPMGAID::_resolveUpdateTransferMode(uint,uchar)
AppleAuthCPMGAID::_transferData(void const*,ulong long,void *,ulong long,ulong long,uint,uint)
AppleAuthCPMGAID::start(IOService *)
AppleAuthCPRelay::_fetchPropertyGated(char const*)
AppleAuthCPRelay::_getCert(void)
AppleAuthCPRelay::_getCertSN(void)
AppleAuthCPRelay::_getDeviceInfo(void)
AppleAuthCPRelay::_propertyIsDeviceInfo(char const*)
AppleAuthCPRelay::_receiveAction(AppleAuthCPRelayInterface *,int,uchar,OSObject *)
AppleAuthCPRelay::_sendCommandGated(uchar,OSData *,OSObject **)
AppleAuthCPRelay::copyProperty(char const*)
AppleAuthCPRelay::free(void)
AppleAuthCPRelay::generateSignature(void const*,ulong long,void *,ulong long *)
AppleAuthCPRelay::setTrustStatus(bool)
AppleAuthCPRelay::start(IOService *)
AppleAuthCPRelay::willTerminate(IOService *,uint)
AppleAuthCPRelayInterface::authSendData(uchar)
AppleAuthCPUserClient::extClearAuthState(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extClearCertificate(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extCopyDownstreamCertSN(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extGenerateSignature(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extGetDownstreamAuthMajorVer(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extI2CRead(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extI2CWrite(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extRequestAuthRestart(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetAuthError(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetAuthErrorDescription(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetAuthFullPass(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetAuthStatus(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetDownstreamRevokeStatus(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetFdrValidationStatus(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetTrustStatus(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::extSetTrustStatusForUI(AppleAuthCP *,void *,IOExternalMethodArguments *)
AppleAuthCPUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleAvusBTM::batteryCallbackEventHandler(IOInterruptEventSource *,int)
AppleAvusBTM::configSampling(void)
AppleAvusBTM::free(void)
AppleAvusBTM::initWithProvider(IOService *)
AppleAvusBTM::initWithProvider(IOService *)
AppleAvusBTM::powerReport(ulong long,uint *,uint)
AppleAvusBTM::powerReportCallback(OSObject *,ulong long,uint *,uint)
AppleAvusBTM::startSampling(uint,uint)
AppleAvusBTM::stopSampling(void)
AppleAvusBTM::withParent(AppleBTM *,IOService *)
AppleB237DockInfo::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleB237DockInfo::_transferDataGated(AppleB237DockInfo::TransferDataParams *)
AppleB237DockInfo::free(void)
AppleB237DockInfo::getCoilPower(int *,int *)
AppleB237DockInfo::getThermistorTemperature(uint,int *)
AppleB237DockInfo::getUSBPowerInfo(uchar *,ushort *)
AppleB237DockInfo::getVBUSPower(int *,int *)
AppleB237DockInfo::handleStart(IOService *)
AppleB237DockInfo::stop(IOService *)
AppleB237DockInfo::willTerminate(IOService *,uint)
AppleBCM4750::MetaClass::alloc(void)
AppleBCM4750::_interruptAction(IOInterruptEventSource *,int)
AppleBCM4750::disable(void)
AppleBCM4750::enable(void)
AppleBCM4750::readFIFO(uint,uchar *)
AppleBCM4750::sendData(uio *)
AppleBCM4750::writeFIFO(uchar,uint,uchar *)
AppleBCM4750::~AppleBCM4750()
AppleBCMWLAN11axManager::configure11axForAWDL(bool)
AppleBCMWLAN11axManager::configureDbgULOFDMA(bool)
AppleBCMWLAN11axManager::enterAssociatedSleepMode(void)
AppleBCMWLAN11axManager::exitAssociatedSleepMode(void)
AppleBCMWLAN11axManager::free(void)
AppleBCMWLAN11axManager::freeResources(void)
AppleBCMWLAN11axManager::handle11axAsrActionFrameCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLAN11axManager::handleUlOfdmaConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLAN11axManager::linkInactivityConfiguration(uint)
AppleBCMWLAN11axManager::lowPowerModeConfiguration(uint)
AppleBCMWLANAudioProtector::attachAudioDriver(void *,IOService *,IONotifier *)
AppleBCMWLANAudioProtector::checkForWork(void)
AppleBCMWLANAudioProtector::handleAudioNotification(void *,uint,IOService *,void *,ulong)
AppleBCMWLANBGScanManager::bgScanDynamicProfileParams(OSDictionary *)
AppleBCMWLANBGScanManager::collectBGScanCachedResults(void)
AppleBCMWLANBGScanManager::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANBGScanManager::configureBGScanMacRandomMask(uchar *)
AppleBCMWLANBGScanManager::configureBGScanPowerDownProfile(void)
AppleBCMWLANBGScanManager::configureBGScanPowerOnProfile(void)
AppleBCMWLANBGScanManager::configureBGScanPrivateMac(uchar *)
AppleBCMWLANBGScanManager::configureBGScanPrivateMacTimeout(uint)
AppleBCMWLANBGScanManager::configureBackOffForEPNO(bool)
AppleBCMWLANBGScanManager::configureMotionProfileForBSSIDPreferredNetworks(void)
AppleBCMWLANBGScanManager::configureMotionProfileForSSIDPreferredNetworks(void)
AppleBCMWLANBGScanManager::configureMotionProfiles(void)
AppleBCMWLANBGScanManager::configurePFNSuspend(uint)
AppleBCMWLANBGScanManager::disablePrivateMACForScans(void)
AppleBCMWLANBGScanManager::enablePrivateMACForScans(void)
AppleBCMWLANBGScanManager::free(void)
AppleBCMWLANBGScanManager::freeResources(void)
AppleBCMWLANBGScanManager::getBGScanCacheResults(void)
AppleBCMWLANBGScanManager::getBGScanCacheResultsSize(void)
AppleBCMWLANBGScanManager::getBGScanMacRandomMask(uchar *)
AppleBCMWLANBGScanManager::getBGScanPrivateMac(uchar *)
AppleBCMWLANBGScanManager::getPrevAndCurrentBGScanPrivateMac(uchar *,uchar *)
AppleBCMWLANBGScanManager::getScanBackoffReport(apple80211_scan_backoff_report_t *)
AppleBCMWLANBGScanManager::handleGetBGScanCachedResultsAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANBGScanManager::handleGetMotionStateAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANBGScanManager::handleGetScanMacStateAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANBGScanManager::handlePFNSuspendAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANBGScanManager::handleSetDynamicScanFreqAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANBGScanManager::parsePFNAllGoneExtEvent(wl_event_msg_t *)
AppleBCMWLANBGScanManager::reset(void)
AppleBCMWLANBGScanManager::resetBGScanManager(void)
AppleBCMWLANBGScanManager::resumeBGScan(void)
AppleBCMWLANBGScanManager::resumeBGScanPeriodicCacheRetrievalTimer(void)
AppleBCMWLANBGScanManager::scanPrivacyMACTimer(IOTimerEventSource *)
AppleBCMWLANBGScanManager::setOffloadScan(apple80211_offload_scan_data *)
AppleBCMWLANBGScanManager::setScanBackoffReport(apple80211_scan_backoff_report_t *)
AppleBCMWLANBGScanManager::suspendBGScan(void)
AppleBCMWLANBGScanManager::suspendBGScanPeriodicCacheRetrievalTimer(void)
AppleBCMWLANBGScanManager::unConfigureUnAssociatedScanTime(void)
AppleBCMWLANBSSBeacon::addressMatches(AppleBCMWLANBSSBeacon const&)
AppleBCMWLANBSSBeacon::addressMatches(ether_addr const&)
AppleBCMWLANBSSBeacon::getAPMode(void)
AppleBCMWLANBSSBeacon::getAgeInMS(void)
AppleBCMWLANBSSBeacon::getAgeInSeconds(void)
AppleBCMWLANBSSBeacon::getApAppleAndRsnIeList(uchar *,uint &)
AppleBCMWLANBSSBeacon::getCCAStats(apple80211_cca_stats &)
AppleBCMWLANBSSBeacon::getRxRatePercent(void)
AppleBCMWLANBSSBeacon::getWPSInfo(WPSInfo *)
AppleBCMWLANBSSBeacon::init(wl_bss_info *,AppleChannelSpec_t,ulong long,CCLogStream *)
AppleBCMWLANBSSBeacon::isAP(void)
AppleBCMWLANBSSBeacon::isOnNetwork(AppleBCMWLANBSSBeacon const*)
AppleBCMWLANBSSBeacon::isOnNetwork(uchar const*,uchar,ushort,ushort)
AppleBCMWLANBSSBeacon::isPatternFound(char const*,char const*)
AppleBCMWLANBSSBeacon::isPrivacyCompatible(AppleBCMWLANBSSBeacon const*)
AppleBCMWLANBSSBeacon::isPrivacyEnabled(void)
AppleBCMWLANBSSBeacon::isWEPEnabled(void)
AppleBCMWLANBSSBeacon::isWPAEnabled(void)
AppleBCMWLANBSSBeacon::isWiFiNetworkFullyLoaded(void)
AppleBCMWLANBSSBeacon::logBeaconWithOSLog(char const*,char const*,char *,uint,uint)
AppleBCMWLANBSSBeacon::setAsCurrent(void)
AppleBCMWLANBSSBeacon::ssidMatches(AppleBCMWLANBSSBeacon const&)
AppleBCMWLANBSSBeacon::ssidMatches(uchar const*,uchar)
AppleBCMWLANBSSBeacon::ssidPrefixMatches(uchar const*,uchar)
AppleBCMWLANBSSBeacon::updateRxRate(wl_delta_stats_t const*)
AppleBCMWLANBSSBeacon::updateWeightAvgLQM(apple80211_weight_avg_lqm_event_data *)
AppleBCMWLANBusInterface::captureRequestCallback(char const*,CCTimestamp const*)
AppleBCMWLANBusInterface::enqueueRxIOs(RxIODescriptor &)
AppleBCMWLANBusInterface::free(void)
AppleBCMWLANBusInterface::freeResources(void)
AppleBCMWLANBusInterface::getLogPipesAndStreams(CCPipe **,CCPipe **,CCPipe **,CCLogStream **,CCDataStream **)
AppleBCMWLANBusInterface::getRxDescriptorCommandQueueSize(void)
AppleBCMWLANBusInterface::getRxDescriptorEventQueueSize(void)
AppleBCMWLANBusInterface::getRxDescriptorPacketQueueSize(void)
AppleBCMWLANBusInterface::getTxCompletionDescriptorPacketQueueSize(void)
AppleBCMWLANBusInterface::init(OSDictionary *)
AppleBCMWLANBusInterface::parseOTPData(OSData const*,OSObject *,int (*)(OSObject *,uchar,uchar,void const*,void *),void *)
AppleBCMWLANBusInterface::parseOTPTuple(uchar,uchar,void const*,void *)
AppleBCMWLANBusInterface::registerDriver(AppleBCMWLANCore *,Callbacks *)
AppleBCMWLANBusInterface::reportCommittedTxCommands(void)
AppleBCMWLANBusInterface::reportCompletedTxIOs(TxIODescriptor &,int)
AppleBCMWLANBusInterface::setVendorIdProperty(OSString *)
AppleBCMWLANBusInterface::start(IOService *)
AppleBCMWLANBusInterface::stop(IOService *)
AppleBCMWLANBusInterface::unregisterDriver(AppleBCMWLANCore *,Callbacks *)
AppleBCMWLANBusInterfacePCIe::allocBufferMD(ulong long,uint,uchar **,task *)
AppleBCMWLANBusInterfacePCIe::attachPCIeBus(IOPCIDevice *)
AppleBCMWLANBusInterfacePCIe::completeChipImage(AppleBCMWLANChipImage *)
AppleBCMWLANBusInterfacePCIe::createDynamicCompletionRing(PCIeRingInfo *,DynamicRingOperationCompletion *,uint (*)(OSObject *,AppleBCMWLANByteRing *,void *,uint),void (*)(OSObject *,AppleBCMWLANByteRing *,int,void *))
AppleBCMWLANBusInterfacePCIe::destroyDynamicCompletionRing(AppleBCMWLANPCIeCompletionRing *,DynamicRingOperationCompletion *)
AppleBCMWLANBusInterfacePCIe::disableCompletionRingGated(AppleBCMWLANPCIeCompletionRing *,IO80211WorkQueue *)
AppleBCMWLANBusInterfacePCIe::disableSubmissionRingGated(AppleBCMWLANPCIeSubmissionRing *,IO80211WorkQueue *)
AppleBCMWLANBusInterfacePCIe::doesHWIdentifiersKeyContainString(char const*,char const*,ulong)
AppleBCMWLANBusInterfacePCIe::editImage(IOBufferMemoryDescriptor *,Ranges &,void *)
AppleBCMWLANBusInterfacePCIe::enableCompletionRing(AppleBCMWLANPCIeCompletionRing *,IO80211WorkQueue *)
AppleBCMWLANBusInterfacePCIe::enableCompletionRingGated(AppleBCMWLANPCIeCompletionRing *,IO80211WorkQueue *)
AppleBCMWLANBusInterfacePCIe::enableSubmissionRingGated(AppleBCMWLANPCIeSubmissionRing *,IO80211WorkQueue *)
AppleBCMWLANBusInterfacePCIe::enableTimeSyncEngine(void)
AppleBCMWLANBusInterfacePCIe::fillIOPool(IOCommandPool *,uint,ulong,uint)
AppleBCMWLANBusInterfacePCIe::fillRingEndpointMemory(AppleBCMWLANPCIeCompletionRing *,ushort)
AppleBCMWLANBusInterfacePCIe::fillRingEndpointMemory(AppleBCMWLANPCIeSubmissionRing *,ushort)
AppleBCMWLANBusInterfacePCIe::flushPendingTxIOs(void)
AppleBCMWLANBusInterfacePCIe::flushTrackedD2HRingCreationRequest(short,OSObject *,void *)
AppleBCMWLANBusInterfacePCIe::flushTrackedFlowDeleteRequest(short,OSObject *,void *)
AppleBCMWLANBusInterfacePCIe::flushTrackedH2DRingCreationRequest(short,OSObject *,void *)
AppleBCMWLANBusInterfacePCIe::flushTrackedRxDebugIO(short,OSObject *,void *)
AppleBCMWLANBusInterfacePCIe::flushTrackedTxDataIO(short,OSObject *,void *)
AppleBCMWLANBusInterfacePCIe::getChipNumber(void)
AppleBCMWLANBusInterfacePCIe::getDriver(void)
AppleBCMWLANBusInterfacePCIe::getMaxRxControlFramePayload(void)
AppleBCMWLANBusInterfacePCIe::getMaxTxControlFramePayload(void)
AppleBCMWLANBusInterfacePCIe::getProvisioningRoot(void)
AppleBCMWLANBusInterfacePCIe::getTimestampingCapabilities(bool *,bool *)
AppleBCMWLANBusInterfacePCIe::getUCodeSCRSize(void)
AppleBCMWLANBusInterfacePCIe::getUCodeSHMSize(void)
AppleBCMWLANBusInterfacePCIe::getWorkLoop(void)
AppleBCMWLANBusInterfacePCIe::handleRxTimeSync(BCOMIPCRxCompleteMessageV7 *,AppleBCMWLANPCIeSkywalkPacket *,int)
AppleBCMWLANBusInterfacePCIe::handleTxTimeSync(BCOMIPCTxStatusMessageV7 *,AppleBCMWLANPCIeSkywalkPacket *,int)
AppleBCMWLANBusInterfacePCIe::init(OSDictionary *)
AppleBCMWLANBusInterfacePCIe::inputMonitorPacket(__mbuf *,uint,void *,ulong)
AppleBCMWLANBusInterfacePCIe::invalidateFlowId(ushort,uint)
AppleBCMWLANBusInterfacePCIe::isFWTrap(void)
AppleBCMWLANBusInterfacePCIe::isSecureBootEnabled(void)
AppleBCMWLANBusInterfacePCIe::isTCMAccessible(void)
AppleBCMWLANBusInterfacePCIe::logState(void)
AppleBCMWLANBusInterfacePCIe::newTxBuffer(ulong long,IO80211BufferPool *)
AppleBCMWLANBusInterfacePCIe::pcapFillBusState(pcap_pcie_driver_state *)
AppleBCMWLANBusInterfacePCIe::pcapFillRingState(pcap_ring_state *,AppleBCMWLANPCIeSubmissionRing *,char const*)
AppleBCMWLANBusInterfacePCIe::pcapFillRingState(pcap_tx_ring_state *,AppleBCMWLANPCIeTransmitFlowRing *,char const*)
AppleBCMWLANBusInterfacePCIe::powerOff(void)
AppleBCMWLANBusInterfacePCIe::probe(IOService *,int *)
AppleBCMWLANBusInterfacePCIe::requestFlowQueue(ether_addr const&,ether_addr const&,uint,uchar)
AppleBCMWLANBusInterfacePCIe::requestIOTx(requestIOTxTypes)
AppleBCMWLANBusInterfacePCIe::shouldGenerateFileName(void)
AppleBCMWLANBusInterfacePCIe::updateReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANBusInterfacePCIe::updateRxBufFillState(void)
AppleBCMWLANBusInterfacePCIe::verifyImages(OSDictionary const*,IOImageLoader const*)
AppleBCMWLANBusInterfacePCIe::waitForBusAttachWithTimeoutGated(uint *)
AppleBCMWLANBusInterfacePCIe::writeRTLV(AppleBCMWLANChipMemory *,uchar *,uint,uint)
AppleBCMWLANByteRing::free(void)
AppleBCMWLANByteRing::getWorkQueue(void)
AppleBCMWLANByteRing::init(OSObject *,void (*)(OSObject *,...))
AppleBCMWLANByteRing::setLogger(CCLogStream *)
AppleBCMWLANChanSpec::convToStateID(AppleChannelSpec_t)
AppleBCMWLANChanSpec::free(void)
AppleBCMWLANChanSpec::getAppleChannelSpec(ushort)
AppleBCMWLANChanSpec::getBCMChannelSpec(AppleChannelSpec_t)
AppleBCMWLANChipBackplane::dumpARMCoreEnumerationRegisters(char *,ulong,ChipRegionRange const*,ulong)
AppleBCMWLANChipBackplane::dumpCommonCoreEnumerationRegisters(char *,ulong)
AppleBCMWLANChipBackplane::dumpCoreRegisters(int (*)(OSObject const*,uint,uint &),char const*,char *,ulong,ulong *,AppleBCMWLANChipBackplane::AddressRangeTable const*,ulong,ulong)
AppleBCMWLANChipBackplane::dumpD11CoreEnumerationRegisters(char *,ulong)
AppleBCMWLANChipBackplane::dumpDMPWrapperRegisters(char *,ulong)
AppleBCMWLANChipBackplane::dumpDMPWrapperRegisters43x7(char *,ulong)
AppleBCMWLANChipBackplane::dumpUCodeRegisters(char *,ulong)
AppleBCMWLANChipBackplane::dumpWrapperRegisters(int (*)(OSObject const*,uint,uint &),char const*,char *,ulong,ulong *,d_cmd const*,ulong)
AppleBCMWLANChipBackplane::forcePower(bool,bool)
AppleBCMWLANChipBackplane::isCoreMapped(ChipCoreID)
AppleBCMWLANChipBackplane::isWrapperMapped(ChipWrapperID)
AppleBCMWLANChipBackplane::map32(ChipRegion *,uint)
AppleBCMWLANChipBackplane::mapCore(ChipCoreID)
AppleBCMWLANChipBackplane::mapWrapper(ChipWrapperID)
AppleBCMWLANChipBackplane::readAPBBridge0SlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readAPBBridge1SlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readARMCoreReg32(uint,uint &)
AppleBCMWLANChipBackplane::readARMMasterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readARMSlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readBTAXI2AAHBWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readCommonCoreReg32(uint,uint &)
AppleBCMWLANChipBackplane::readCommonMasterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readCommonSlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readD11AUXMaster1WrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readD11AUXMasterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readD11AUXSlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readD11Master1WrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readD11SlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readDefaultSlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readEROMWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readMACCoreReg32(uint,uint &)
AppleBCMWLANChipBackplane::readMACMasterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readOOBRouterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readPCIeMasterWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readPCIeSlaveWrapperReg32(uint,uint &)
AppleBCMWLANChipBackplane::readPMUCoreReg32(uint,uint &)
AppleBCMWLANChipBackplane::readUCodeSCRRAM(char *,ulong)
AppleBCMWLANChipBackplane::readUCodeSHMRAM(char *,ulong)
AppleBCMWLANChipBackplane::restoreDeviceState(void)
AppleBCMWLANChipBackplane::saveDeviceState(void)
AppleBCMWLANChipBackplane::sysmemReset(bool)
AppleBCMWLANChipBackplane::validateWindow(ChipWindow const*,uint)
AppleBCMWLANChipBackplane::waitForValue32(ChipRegion *,uint,uint,uint,uint,bool)
AppleBCMWLANChipBackplane::writeRegister32(ChipRegion *,uint,uint)
AppleBCMWLANChipConfigSpace::free(void)
AppleBCMWLANChipConfigSpace::initWithPCIDevice(IOPCIDevice *,AppleBCMWLANPCIeMMIOHistory *)
AppleBCMWLANChipConfigSpace::modifyReg16(uint,ushort,ushort,ushort *)
AppleBCMWLANChipConfigSpace::modifyReg32(uint,uint,uint,uint *)
AppleBCMWLANChipConfigSpace::readReg16(uint,ushort &)
AppleBCMWLANChipConfigSpace::readReg32(uint,uint &)
AppleBCMWLANChipConfigSpace::readReg8(uint,uchar &)
AppleBCMWLANChipConfigSpace::writeReg16(uint,ushort)
AppleBCMWLANChipConfigSpace::writeReg32(uint,uint)
AppleBCMWLANChipImage::clear(void)
AppleBCMWLANChipImage::completeMapping(AppleBCMWLANChipImageMap &)
AppleBCMWLANChipImage::completeMapping(task *,OSDictionary *)
AppleBCMWLANChipImage::edit(OSObject const*,int (*)(OSObject const*,IOBufferMemoryDescriptor *,Ranges &,void *),void *)
AppleBCMWLANChipImage::free(void)
AppleBCMWLANChipImage::getFirmwareImageLayoutFromImageDictionary(IOImageLoaderImageDictionary *,Ranges &,ulong)
AppleBCMWLANChipImage::getImageSizeForImage(IOImageLoaderImageDictionary *,char const*,ulong long &)
AppleBCMWLANChipImage::getNVRAMImageLayoutFromImageDictionary(IOImageLoaderImageDictionary *,Ranges &,ulong)
AppleBCMWLANChipImage::getRegulatoryImageLayoutFromImageDictionary(IOImageLoaderImageDictionary *,Ranges &,ulong)
AppleBCMWLANChipImage::getTxCapImageLayoutFromImageDictionary(IOImageLoaderImageDictionary *,Ranges &,ulong)
AppleBCMWLANChipImage::paint(uchar)
AppleBCMWLANChipImage::prepareMapping(task *,AppleBCMWLANChipImageMap &)
AppleBCMWLANChipImage::prepareMapping(task *,OSDictionary *)
AppleBCMWLANChipLogger::free(void)
AppleBCMWLANChipLogger::reapplyCCStreamsFlags(void)
AppleBCMWLANChipLogger::setCCStreamsFlags(ulong long)
AppleBCMWLANChipLogger::setLogFlags(ulong long)
AppleBCMWLANChipManager::init(AppleBCMWLANBusInterface *)
AppleBCMWLANChipManager::init(void)
AppleBCMWLANChipManagerPCIe4387::copySROM(void)
AppleBCMWLANChipManagerPCIe4388::checkHardware(AppleBCMWLANChipConfigSpace *,AppleBCMWLANChipBackplane *)
AppleBCMWLANChipManagerPCIe::checkHardware(AppleBCMWLANChipConfigSpace *,AppleBCMWLANChipBackplane *)
AppleBCMWLANChipManagerPCIe::copyBackplaneRegion(ChipRegion &,ChipRegionType,ChipRegionID,uchar volatile*)
AppleBCMWLANChipManagerPCIe::copyMemoryRegion(ChipRegion &,ChipRegionType,ChipRegionID,uchar volatile*)
AppleBCMWLANChipManagerPCIe::copyRemappableWindows(ChipWindow *,uint,ChipRegionType,uchar volatile*)
AppleBCMWLANChipManagerPCIe::copySROM(void)
AppleBCMWLANChipManagerPCIe::free(void)
AppleBCMWLANChipManagerPCIe::getChipProvisioningData(char const*)
AppleBCMWLANChipManagerPCIe::getChipProvisioningData(char const*,uchar *,ulong,ulong *)
AppleBCMWLANChipManagerPCIe::init(void)
AppleBCMWLANChipManagerPCIe::prepareHardware(AppleBCMWLANChipConfigSpace *,AppleBCMWLANChipBackplane *)
AppleBCMWLANChipMemory::clone(AppleBCMWLANChipManagerPCIe *,uint)
AppleBCMWLANChipMemory::free(void)
AppleBCMWLANChipMemory::read32(ChipMemoryID,uint,uint &)
AppleBCMWLANChipMemory::read8(ChipMemoryID,uint,uchar &)
AppleBCMWLANChipMemory::write32(ChipMemoryID,uint,uint)
AppleBCMWLANChipMemory::write8(ChipMemoryID,uint,uchar)
AppleBCMWLANChipUART::advanceWriteByteCountGated(uint *)
AppleBCMWLANChipUART::attachBus(void *,IOService *,IONotifier *)
AppleBCMWLANChipUART::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANChipUART::disableCommandGate(void)
AppleBCMWLANChipUART::free(void)
AppleBCMWLANChipUART::printUartStatus(char *,uint,uint)
AppleBCMWLANChipUART::requestRingDrainGated(void)
AppleBCMWLANChipUART::serialThread(void)
AppleBCMWLANChipUART::serialTimeout(IOTimerEventSource *)
AppleBCMWLANChipUART::stopChipUART(void)
AppleBCMWLANChipUART::updateAllReports(void)
AppleBCMWLANChipUART::updateReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANChipUART::write(uchar *,uint)
AppleBCMWLANCommand::free(void)
AppleBCMWLANCommand::getQueuedDuration_ms(void)
AppleBCMWLANCommand::init(AppleBCMWLANBusInterface *,ulong long,IO80211BufferPool *)
AppleBCMWLANCommandMonitor::free(void)
AppleBCMWLANCommandMonitor::setRateThreshold(uint,uint)
AppleBCMWLANCommandQueue::dequeue(void)
AppleBCMWLANCommandQueue::enqueue(IOCommand *)
AppleBCMWLANCommandQueue::filterInternal(bool (*)(OSObject *,IOCommand *,void *),bool ( {block_pointer})(IOCommand *),OSObject *,void *,queue_entry *)
AppleBCMWLANCommandQueue::flush(void)
AppleBCMWLANCommandQueue::free(void)
AppleBCMWLANCommandQueue::initWithGateAndCapacity(IOCommandGate *,uint)
AppleBCMWLANCommandQueue::remove(IOCommand *)
AppleBCMWLANCommandWithXTLV::addXTLV(ushort,ushort,void const*)
AppleBCMWLANCommandWithXTLV::free(void)
AppleBCMWLANCommandWithXTLV::initWithLengthAndHeader(uint,void *,ushort,CCLogStream *)
AppleBCMWLANCommander::checkExpiration(AppleBCMWLANCommand *,AppleBCMWLANCommander::CheckExpirationContext *)
AppleBCMWLANCommander::checkForWork(void)
AppleBCMWLANCommander::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANCommander::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANCommander::countAsyncCommandsInQueue(OSObject *,IOCommand *,void *)
AppleBCMWLANCommander::crashCommander(void)
AppleBCMWLANCommander::crashIOVar(void)
AppleBCMWLANCommander::delayQueueTimeouts(uint)
AppleBCMWLANCommander::dequeueByID(IOCommand *,void *)
AppleBCMWLANCommander::enqueueCommand(AppleBCMWLANCommanderQueueID,AppleBCMWLANCommand *)
AppleBCMWLANCommander::free(void)
AppleBCMWLANCommander::getMaxCmdRxPayload(void)
AppleBCMWLANCommander::getMaxCmdTxPayload(void)
AppleBCMWLANCommander::handleCrashCommanderAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANCommander::induceFaultCallback(int,char const*)
AppleBCMWLANCommander::prepareFRCallback(CCFaultReport const*)
AppleBCMWLANCommander::printCommandCallback(OSObject *,IOCommand *,void *)
AppleBCMWLANCommander::queryByID(IOCommand *,void *)
AppleBCMWLANCommander::reportCommittedTxCommands(CommandTxIODescriptor &)
AppleBCMWLANCommander::reportCompletedTxCommands(CommandTxIODescriptor &,int)
AppleBCMWLANCommander::resetFreeCommanderPool(void)
AppleBCMWLANCommander::runIOVarGet(char const*,CommandTxPayload const&,CommandRxPayload &,CommandBusPreference)
AppleBCMWLANCommander::runIOVarSet(char const*,CommandTxPayload const&,CommandRxPayload *,CommandBusPreference)
AppleBCMWLANCommander::runVirtualIOCtlGet(uchar,uint,CommandTxPayload const&,CommandRxPayload &,CommandBusPreference)
AppleBCMWLANCommander::runVirtualIOCtlSet(uchar,uint,CommandTxPayload const&,CommandRxPayload *,CommandBusPreference)
AppleBCMWLANCommander::runVirtualIOVarGet(uchar,char const*,CommandTxPayload const&,CommandRxPayload &,CommandBusPreference)
AppleBCMWLANCommander::runVirtualIOVarSet(uchar,char const*,CommandTxPayload const&,CommandRxPayload *,CommandBusPreference)
AppleBCMWLANCommander::sendVirtualIOCtlGet(uchar,uint,CommandTxPayload const&,CommandRxExpected const&,CommandCompletion const&,CommandBusPreference)
AppleBCMWLANCommander::sendVirtualIOCtlSet(uchar,uint,CommandTxPayload const&,CommandRxExpected const&,CommandCompletion const&,CommandBusPreference)
AppleBCMWLANCommander::sendVirtualIOVarGet(uchar,char const*,CommandTxPayload const&,CommandRxExpected const&,CommandCompletion const&,CommandBusPreference)
AppleBCMWLANCommander::sendVirtualIOVarSet(uchar,char const*,CommandTxPayload const&,CommandRxExpected const&,CommandCompletion const&,CommandBusPreference)
AppleBCMWLANCommander::updateReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANCommander::updateTimestamp(AppleBCMWLANCommand *,AppleBCMWLANCommander::UpdateTimestempContext *)
AppleBCMWLANCommander::wakeup(void)
AppleBCMWLANConfigManager::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANConfigManager::configureWoWRoamParams(bool)
AppleBCMWLANConfigManager::printRoamParams(char *,uint,uint)
AppleBCMWLANConfigManager::printRoamProfile(char *,uint,uint)
AppleBCMWLANConfigManager::setupFirmwareWithDTDefaults(void)
AppleBCMWLANCore::apple80211_ioctl(IO80211SkywalkInterface *,ulong,void *)
AppleBCMWLANCore::completeCacheControlTask(void *,void **)
AppleBCMWLANCore::configureInterface(IONetworkInterface *)
AppleBCMWLANCore::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANCore::createVirtualInterface(ether_addr *,uint)
AppleBCMWLANCore::editImage(IOService const*,IOImageDescriptor *)
AppleBCMWLANCore::enablePacketTimestamping(void)
AppleBCMWLANCore::generateRequestedImages(IOImageLoaderImageDictionary *,char const*,char const*,bool,uint)
AppleBCMWLANCore::generateVerifyImages(IOImageLoaderImageDictionary *,char const*,char const*,char const*,ulong long,bool)
AppleBCMWLANCore::getDRIVER_VERSION(IO80211Interface *,apple80211_version_data *)
AppleBCMWLANCore::getHE_CAPABILITY(apple80211_he_capability *)
AppleBCMWLANCore::getHW_SUPPORTED_CHANNELS(IO80211Interface *,apple80211_sup_channel_data *)
AppleBCMWLANCore::getPacketFilters(OSSymbol const*,uint *)
AppleBCMWLANCore::getRADIO_INFO(IO80211Interface *,apple80211_radio_info_data *)
AppleBCMWLANCore::getSTATUS_DEV(IO80211Interface *,apple80211_status_dev_data *)
AppleBCMWLANCore::getSUPPORTED_CHANNELS(IO80211Interface *,apple80211_sup_channel_data *)
AppleBCMWLANCore::isCommandAllowedInRestrictedMode(int)
AppleBCMWLANCore::isFirmwareLoaded(void)
AppleBCMWLANCore::notifyImageLoad(IOService const*,IOImageDescriptor *,OSDictionary *,int)
AppleBCMWLANCore::outputRegTable(IOBufferMemoryDescriptor *,Ranges const&,void *)
AppleBCMWLANCore::outputTxCapTable(IOBufferMemoryDescriptor *,Ranges const&,void *)
AppleBCMWLANCore::postMessageTask(void *,void **)
AppleBCMWLANCore::processRxEvents_WithEventQueue(EventRxIODescriptor &)
AppleBCMWLANCore::processRxPackets_WithEventQueue(PacketRxIODescriptor &)
AppleBCMWLANCore::requestQueueSizeAndTimeout(ushort *,ushort *)
AppleBCMWLANCore::setDEBONUCE_STATUS(IO80211Interface *,apple80211_linkdown_debounce_status *)
AppleBCMWLANCore::setLQM(ulong long)
AppleBCMWLANCore::setPowerState(ulong,IOService *)
AppleBCMWLANCore::setWOW_TEST(IO80211Interface *,apple80211_wow_test_data *)
AppleBCMWLANCore::sha256(uchar *,void const*,ulong)
AppleBCMWLANCore::shouldSupportTethering(void)
AppleBCMWLANCore::transferScratchInfo(__mbuf *,__mbuf *)
AppleBCMWLANCoreDbg::cmdChannel(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdDisablePacketTimestamping(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdDumpNeighborDiscoveryStats(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdEnablePacketTimestamping(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdIfCounters(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdPrintStats(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdRoamBoost(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdSetTxCapHighPowerTimeout(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdStaticSMPS(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::cmdTxPowerCapConfig(apple80211_debug_command *,AppleBCMWLANCore *)
AppleBCMWLANCoreDbg::dbgTriggerWatchdog(char *)
AppleBCMWLANCoreDbg::free(void)
AppleBCMWLANCoreFirmwareLoader::attach(IOService *)
AppleBCMWLANCoreFirmwareLoader::free(void)
AppleBCMWLANCoreFirmwareLoader::initWithProvider(IOService *)
AppleBCMWLANDMASlab::zero(uint)
AppleBCMWLANEnterpriseManager::configureACMOverrideForFastLaneAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANEnterpriseManager::configureEnterpriseAssociatedSleepEntry(void)
AppleBCMWLANEnterpriseManager::configureEnterpriseAssociatedSleepExit(void)
AppleBCMWLANEnterpriseManager::configureEnterpriseFeatures(void)
AppleBCMWLANEnterpriseManager::configureWNM(uint)
AppleBCMWLANEnterpriseManager::configureWNMExtCapability(uint)
AppleBCMWLANEnterpriseManager::free(void)
AppleBCMWLANEnterpriseManager::freeResources(void)
AppleBCMWLANEnterpriseManager::getConfiguredRssiToRateMappingTable(void)
AppleBCMWLANEnterpriseManager::handleBeaconReportingConfigAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANEnterpriseManager::handleBeaconReportingVendorIEAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANEnterpriseManager::handleLinkDownConfiguration(void)
AppleBCMWLANEnterpriseManager::handleLinkUpConfiguration(void)
AppleBCMWLANEnterpriseManager::handleRssiToRateMappingAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANEnterpriseManager::updateEnterpriseAssociationOnWoWExit(void)
AppleBCMWLANEnterpriseManager::updateQoSFastLaneToNetworkState(void)
AppleBCMWLANGASManager::free(void)
AppleBCMWLANGASManager::freeResources(void)
AppleBCMWLANGASManager::retrieveGASResponses(wl_event_msg_t *)
AppleBCMWLANHashtable::flush(OSObject *,void (*)(OSObject *,short,OSObject *,void *),void *)
AppleBCMWLANHashtable::flushCollection(void)
AppleBCMWLANHashtable::getNextObjectForIterator(void *,OSObject **)
AppleBCMWLANHashtable::remove(short)
AppleBCMWLANHexdump(CCLogStream *,char const*,void const*,ulong,CCStreamLogLevel)
AppleBCMWLANHistogram::addItem(uint)
AppleBCMWLANHistogram::dump(char const*,char *,long,uint)
AppleBCMWLANHistogram::free(void)
AppleBCMWLANHistogram::initWithBins(int,int,uint (*)(uint))
AppleBCMWLANHistogram::withBinCountAndQuantizer(uint (*)(uint),int,int)
AppleBCMWLANHostOffloadDriverInterface::free(void)
AppleBCMWLANHostOffloadNub::free(void)
AppleBCMWLANHostOffloadNub::getWorkLoop(void)
AppleBCMWLANHostOffloadNub::getWorkQueue(void)
AppleBCMWLANHostOffloadNub::withDriverInterface(AppleBCMWLANHostOffloadDriverInterface *)
AppleBCMWLANIO80211APSTAInterface::configureLowPowerModeExit(void)
AppleBCMWLANIO80211APSTAInterface::configureManagementFrameProtectionForSoftAP(uint)
AppleBCMWLANIO80211APSTAInterface::convertBCMAssocListToAppleAssocList(maclist *,apple80211_sta_data *)
AppleBCMWLANIO80211APSTAInterface::createChipInterface(void)
AppleBCMWLANIO80211APSTAInterface::deleteChipInterface(void)
AppleBCMWLANIO80211APSTAInterface::deleteIPv4PktFiltersAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::free(void)
AppleBCMWLANIO80211APSTAInterface::freeResources(void)
AppleBCMWLANIO80211APSTAInterface::getAssocListAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::getCHANNEL(apple80211_channel_data *)
AppleBCMWLANIO80211APSTAInterface::getHOST_AP_MODE_HIDDEN(apple80211_host_ap_mode_hidden_t *)
AppleBCMWLANIO80211APSTAInterface::getKEY_RSC(apple80211_key *)
AppleBCMWLANIO80211APSTAInterface::getSTA_LIST(apple80211_sta_data *)
AppleBCMWLANIO80211APSTAInterface::getSoftAP_PARAMS(apple80211_softap_params *)
AppleBCMWLANIO80211APSTAInterface::getSoftAP_STATS(apple80211_softap_stats *)
AppleBCMWLANIO80211APSTAInterface::handleSetARPHostIPAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetARPHostIPClearAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetARPOffloadAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetBcnDTIMPeriodAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetBcnIntervalAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetBcnWaitPeriodAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetLowPowerModeAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetRpsNoaAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::handleSetScbProbeAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANIO80211APSTAInterface::holdSoftAPPowerAssertion(void)
AppleBCMWLANIO80211APSTAInterface::hostAPPowerOff(void)
AppleBCMWLANIO80211APSTAInterface::hostAPPowerOn(void)
AppleBCMWLANIO80211APSTAInterface::postMessageForSTA(uint,void *,ushort)
AppleBCMWLANIO80211APSTAInterface::releaseSoftAPPowerAssertion(void)
AppleBCMWLANIO80211APSTAInterface::removeStaFromStaTable(uchar)
AppleBCMWLANIO80211APSTAInterface::setBeaconInterval(ushort)
AppleBCMWLANIO80211APSTAInterface::setCIPHER_KEY(apple80211_key *)
AppleBCMWLANIO80211APSTAInterface::setPEER_CACHE_CONTROL(apple80211_peer_cache_control *)
AppleBCMWLANIO80211APSTAInterface::setSSID(apple80211_ssid_data *)
AppleBCMWLANIO80211APSTAInterface::setSoftAP_PARAMS(apple80211_softap_params *)
AppleBCMWLANIO80211APSTAInterface::softApStatsAccumulatePowerStateDuration(apple80211_softap_power_state,ulong long)
AppleBCMWLANIO80211P2PInterface::deleteChipInterface(void)
AppleBCMWLANIO80211P2PInterface::getBSSID(apple80211_bssid_data *)
AppleBCMWLANIO80211P2PInterface::getSSID(apple80211_ssid_data *)
AppleBCMWLANIO80211P2PInterface::init(IO80211Controller *,ether_addr *,uint,char const*)
AppleBCMWLANIO80211P2PInterface::join(apple80211_ssid_data *)
AppleBCMWLANIO80211P2PInterface::reset(void)
AppleBCMWLANIO80211P2PInterface::setSSID(apple80211_ssid_data *)
AppleBCMWLANIO80211VirtualInterface::buildNAN_CommittedAvailability(apple80211_nan_committed_availability *,uchar *,int)
AppleBCMWLANIO80211VirtualInterface::enableRoaming(void)
AppleBCMWLANIO80211VirtualInterface::free(void)
AppleBCMWLANIO80211VirtualInterface::freeResources(void)
AppleBCMWLANIO80211VirtualInterface::getASSOCIATION_EXTENDED_STATUS(apple80211_assoc_status_data *)
AppleBCMWLANIO80211VirtualInterface::getASSOCIATION_STATUS(apple80211_assoc_status_data *)
AppleBCMWLANIO80211VirtualInterface::getAWDLEncryption(apple80211_encrypt *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_AF_TX_MODE(apple80211_awdl_af_tx_mode *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_CAP(apple80211_awdl_cap *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_CCA(apple80211_awdl_cca *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_CHAN_SEQUENCE(apple80211_awdl_sync_channel_sequence *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_DEVICE_CAPABILITIES(apple80211_awdl_device_capabilities *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_DEV_STATS(apple80211_awdl_dev_stats *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_DFSP_CONFIG(apple80211_awdl_dfsp_config *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_ELECTION_ID(apple80211_awdl_election_id *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_ELECTION_METRIC(apple80211_awdl_election_metric *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_ELECTION_PARAMS(apple80211_awdl_election_params *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_ELECTION_RSSI_THRESHOLDS(apple80211_awdl_election_rssi_thresholds *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_EXTENSION_SM_PARAMS(apple80211_awdl_extension_state_machine_parameter *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_MASTER_CHANNEL(apple80211_awdl_master_channel *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_PRESENCE_MODE(apple80211_awdl_presence_mode *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_SECONDARY_MASTER_CHANNEL(apple80211_awdl_secondary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_SYNC_STATE(apple80211_awdl_sync_state *)
AppleBCMWLANIO80211VirtualInterface::getAWDL_TXCAL_PERIOD(apple80211_awdl_txcal_period *)
AppleBCMWLANIO80211VirtualInterface::getBSSID(apple80211_bssid_data *)
AppleBCMWLANIO80211VirtualInterface::getCHANNEL(apple80211_channel_data *)
AppleBCMWLANIO80211VirtualInterface::getCHANNELSPECS(apple80211_channels_info *)
AppleBCMWLANIO80211VirtualInterface::getCURRENT_NETWORK(apple80211_scan_result *)
AppleBCMWLANIO80211VirtualInterface::getDEAUTH(apple80211_deauth_data *)
AppleBCMWLANIO80211VirtualInterface::getHOST_AP_MODE_HIDDEN(apple80211_host_ap_mode_hidden_t *)
AppleBCMWLANIO80211VirtualInterface::getKEY_RSC(apple80211_key *)
AppleBCMWLANIO80211VirtualInterface::getLLW_PARAMS(apple80211_llw_params *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Advertisers(apple80211_nan_advertisers *)
AppleBCMWLANIO80211VirtualInterface::getNAN_BeaconControl(apple80211_nan_bcn_control *)
AppleBCMWLANIO80211VirtualInterface::getNAN_ChannelSequence(apple80211_nan_chan_sequence *)
AppleBCMWLANIO80211VirtualInterface::getNAN_ClusterId(apple80211_nan_cluster_id *)
AppleBCMWLANIO80211VirtualInterface::getNAN_CurrentAMRRecord(apple80211_nan_current_amr_record_data *)
AppleBCMWLANIO80211VirtualInterface::getNAN_DWAwakePeriod(apple80211_nan_dw_awake_period *)
AppleBCMWLANIO80211VirtualInterface::getNAN_DeviceCapability(apple80211_nan_device_capability *)
AppleBCMWLANIO80211VirtualInterface::getNAN_DeviceInfo(apple80211_nan_device_info *)
AppleBCMWLANIO80211VirtualInterface::getNAN_DiscBeaconPeriod(apple80211_nan_disc_bcn_period *)
AppleBCMWLANIO80211VirtualInterface::getNAN_ElectionMetric(apple80211_nan_election_metric *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Enable(apple80211_nan_enable *)
AppleBCMWLANIO80211VirtualInterface::getNAN_HopCount(apple80211_nan_hop_count *)
AppleBCMWLANIO80211VirtualInterface::getNAN_HopCountLimit(apple80211_nan_hop_count_limit *)
AppleBCMWLANIO80211VirtualInterface::getNAN_HostElection(apple80211_nan_host_election *)
AppleBCMWLANIO80211VirtualInterface::getNAN_LastAMRRecord(apple80211_nan_last_amr_record_data *)
AppleBCMWLANIO80211VirtualInterface::getNAN_MasterPref(apple80211_nan_master_pref *)
AppleBCMWLANIO80211VirtualInterface::getNAN_MaxPeers(apple80211_nan_maxpeers *)
AppleBCMWLANIO80211VirtualInterface::getNAN_MinTxRate(apple80211_nan_min_tx_rate *)
AppleBCMWLANIO80211VirtualInterface::getNAN_PrimaryMasterChannel(apple80211_nan_primary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Publish(apple80211_nan_publish_data *)
AppleBCMWLANIO80211VirtualInterface::getNAN_PublishedList(apple80211_nan_published_service_list_data *)
AppleBCMWLANIO80211VirtualInterface::getNAN_RandomFactor(apple80211_nan_random_factor *)
AppleBCMWLANIO80211VirtualInterface::getNAN_RandomFactorRotation(apple80211_nan_random_factor_rotation *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Rssi(apple80211_nan_rssi_thresholds *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Rssi5GClose(apple80211_nan_rssi_5G_close *)
AppleBCMWLANIO80211VirtualInterface::getNAN_Rssi5GMid(apple80211_nan_rssi_5G_mid *)
AppleBCMWLANIO80211VirtualInterface::getNAN_RssiClose(apple80211_nan_rssi_close *)
AppleBCMWLANIO80211VirtualInterface::getNAN_RssiMid(apple80211_nan_rssi_mid *)
AppleBCMWLANIO80211VirtualInterface::getNAN_SecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::getNAN_ServiceDescriptorExtension(apple80211_nan_service_descriptor_extension *)
AppleBCMWLANIO80211VirtualInterface::getNAN_ServiceDiscoveryStats(apple80211_nan_service_disc_stats *)
AppleBCMWLANIO80211VirtualInterface::getNAN_SubscribedList(apple80211_nan_subscribed_service_list_data *)
AppleBCMWLANIO80211VirtualInterface::getNAN_SyncBeaconPeriod(apple80211_nan_sync_bcn_period *)
AppleBCMWLANIO80211VirtualInterface::getNAN_SyncStats(apple80211_nan_sync_stats *)
AppleBCMWLANIO80211VirtualInterface::getNAN_WarmupTime(apple80211_nan_warmup_time *)
AppleBCMWLANIO80211VirtualInterface::getOP_MODE(apple80211_opmode_data *)
AppleBCMWLANIO80211VirtualInterface::getPEER_CACHE_MAXIMUM_SIZE(apple80211_peer_cache_maximum_size *)
AppleBCMWLANIO80211VirtualInterface::getRATE(apple80211_rate_data *)
AppleBCMWLANIO80211VirtualInterface::getRSSI(apple80211_rssi_data *)
AppleBCMWLANIO80211VirtualInterface::getRX_RATE(apple80211_rate_data *)
AppleBCMWLANIO80211VirtualInterface::getSSID(apple80211_ssid_data *)
AppleBCMWLANIO80211VirtualInterface::getSTATE(apple80211_state_data *)
AppleBCMWLANIO80211VirtualInterface::getSTA_IE_LIST(apple80211_sta_ie_data *)
AppleBCMWLANIO80211VirtualInterface::getSTA_LIST(apple80211_sta_data *)
AppleBCMWLANIO80211VirtualInterface::getSTA_STATS(apple80211_sta_stats_data *)
AppleBCMWLANIO80211VirtualInterface::getSYNC_ENABLED(apple80211_awdl_sync_enabled *)
AppleBCMWLANIO80211VirtualInterface::getSYNC_PARAMS(apple80211_awdl_sync_params *)
AppleBCMWLANIO80211VirtualInterface::getSoftAP_PARAMS(apple80211_softap_params *)
AppleBCMWLANIO80211VirtualInterface::getSoftAP_STATS(apple80211_softap_stats *)
AppleBCMWLANIO80211VirtualInterface::handleEvent(IO80211BufferCursor const&)
AppleBCMWLANIO80211VirtualInterface::handleEvent(wl_event_msg_t *)
AppleBCMWLANIO80211VirtualInterface::hostAPPowerOff(void)
AppleBCMWLANIO80211VirtualInterface::hostAPPowerOn(void)
AppleBCMWLANIO80211VirtualInterface::setASSOCIATE(apple80211_assoc_data *)
AppleBCMWLANIO80211VirtualInterface::setAWDLEncryption(apple80211_encrypt *)
AppleBCMWLANIO80211VirtualInterface::setAWDLKey(apple80211_key *)
AppleBCMWLANIO80211VirtualInterface::setAWDLPeerTrafficRegistration(apple80211_awdl_peer_traffic_registration *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ADVERTISERS(awdl_peer_advert_add *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_AF_TX_MODE(apple80211_awdl_af_tx_mode *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_CHAN_SEQUENCE(apple80211_awdl_sync_channel_sequence *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_Config(apple80211_awdl_bssid *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_DFSP_CONFIG(apple80211_awdl_dfsp_config *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_DFSP_UCSA_CONFIG(apple80211_awdl_dfsp_ucsa_config *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ELECTION_ALGORITHM_ENABLED(apple80211_awdl_election_algorithm_enabled *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ELECTION_ID(apple80211_awdl_election_id *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ELECTION_METRIC(apple80211_awdl_election_metric *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ELECTION_PARAMS(apple80211_awdl_election_params *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_ELECTION_RSSI_THRESHOLDS(apple80211_awdl_election_rssi_thresholds *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_EXTENSION_SM_PARAMS(apple80211_awdl_extension_state_machine_parameter *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_MASTER_CHANNEL(apple80211_awdl_master_channel *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_MIN_RATE(apple80211_awdl_min_rate *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_OOB_AUTO_REQUEST(apple80211_awdl_oob_request *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_OOB_REQUEST(apple80211_awdl_oob_request *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_OOB_SEC_PAYLOAD_REQUEST(apple80211_awdl_af_sec_payload_request *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_PRESENCE_MODE(apple80211_awdl_presence_mode *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_SECONDARY_MASTER_CHANNEL(apple80211_awdl_secondary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_SYNC_FRAME_TEMPLATE(apple80211_awdl_sync_frame_template *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_SYNC_STATE(apple80211_awdl_sync_state *)
AppleBCMWLANIO80211VirtualInterface::setAWDL_TXCAL_PERIOD(apple80211_awdl_txcal_period *)
AppleBCMWLANIO80211VirtualInterface::setCHANNEL(apple80211_channel_data *)
AppleBCMWLANIO80211VirtualInterface::setCIPHER_KEY(apple80211_key *)
AppleBCMWLANIO80211VirtualInterface::setCSA_CONF(apple80211_softap_csa_params *)
AppleBCMWLANIO80211VirtualInterface::setForcedRoam(apple80211_awdl_forced_roam_config *)
AppleBCMWLANIO80211VirtualInterface::setHOSTAP_MODE(apple80211_network_data *)
AppleBCMWLANIO80211VirtualInterface::setHOST_AP_MODE_HIDDEN(apple80211_host_ap_mode_hidden_t *)
AppleBCMWLANIO80211VirtualInterface::setLLW_PARAMS(apple80211_llw_params *)
AppleBCMWLANIO80211VirtualInterface::setMaxAssoc(uint)
AppleBCMWLANIO80211VirtualInterface::setNANVendorSpecificPayload(apple80211_nan_vendor_payload *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ActionFrameTransmit(apple80211_nan_af_tx *)
AppleBCMWLANIO80211VirtualInterface::setNAN_BeaconControl(apple80211_nan_bcn_control *)
AppleBCMWLANIO80211VirtualInterface::setNAN_CancelPublish(apple80211_nan_cancel_publish_data *)
AppleBCMWLANIO80211VirtualInterface::setNAN_CancelSubscribe(apple80211_nan_cancel_subscribe_data *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ChannelSequence(apple80211_nan_chan_sequence *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ClusterId(apple80211_nan_cluster_id *)
AppleBCMWLANIO80211VirtualInterface::setNAN_CommittedAvailability(apple80211_nan_committed_availability *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DWAwakePeriod(apple80211_nan_dw_awake_period *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DataClusterAvailability(apple80211_nan_data_cluster_availability *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DataPathConfirm(apple80211_nan_dp_confirm *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DataPathRequest(apple80211_nan_dp_request *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DataPathResponse(apple80211_nan_dp_response *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DataPathTerminate(apple80211_nan_dp_terminate *)
AppleBCMWLANIO80211VirtualInterface::setNAN_DiscBeaconPeriod(apple80211_nan_disc_bcn_period *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ElectionMetric(apple80211_nan_election_metric *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ElectionParams(apple80211_nan_role_cfg *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Enable(apple80211_nan_enable *)
AppleBCMWLANIO80211VirtualInterface::setNAN_FollowupTransmission(apple80211_nan_follow_up_transmit_data *)
AppleBCMWLANIO80211VirtualInterface::setNAN_HopCount(apple80211_nan_hop_count *)
AppleBCMWLANIO80211VirtualInterface::setNAN_HopCountLimit(apple80211_nan_hop_count_limit *)
AppleBCMWLANIO80211VirtualInterface::setNAN_HostElection(apple80211_nan_host_election *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ImmutableAvailability(apple80211_nan_immutable_availability *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Initialize(void)
AppleBCMWLANIO80211VirtualInterface::setNAN_MasterPref(apple80211_nan_master_pref *)
AppleBCMWLANIO80211VirtualInterface::setNAN_MaxPeers(apple80211_nan_maxpeers *)
AppleBCMWLANIO80211VirtualInterface::setNAN_MinTxRate(apple80211_nan_min_tx_rate *)
AppleBCMWLANIO80211VirtualInterface::setNAN_PotentialAvailability(apple80211_nan_potential_availability *)
AppleBCMWLANIO80211VirtualInterface::setNAN_PrimaryMasterChannel(apple80211_nan_primary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Publish(apple80211_nan_publish_data *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RandomFactor(apple80211_nan_random_factor *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RandomFactorRotation(apple80211_nan_random_factor_rotation *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RangingAvailability(apple80211_nan_ranging_availability *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RangingCancel(apple80211_nan_ranging_cancel *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RangingRequest(apple80211_nan_ranging_request *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RangingResponse(apple80211_nan_ranging_response *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Rssi(apple80211_nan_rssi_thresholds *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Rssi5GClose(apple80211_nan_rssi_5G_close *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Rssi5GMid(apple80211_nan_rssi_5G_mid *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RssiClose(apple80211_nan_rssi_close *)
AppleBCMWLANIO80211VirtualInterface::setNAN_RssiMid(apple80211_nan_rssi_mid *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ScheduleUpdate(apple80211_nan_schedule_update *)
AppleBCMWLANIO80211VirtualInterface::setNAN_SecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
AppleBCMWLANIO80211VirtualInterface::setNAN_ServiceDescriptorExtension(apple80211_nan_service_descriptor_extension *)
AppleBCMWLANIO80211VirtualInterface::setNAN_Subscribe(apple80211_nan_subscribe_data *)
AppleBCMWLANIO80211VirtualInterface::setNAN_SyncBeaconPeriod(apple80211_nan_sync_bcn_period *)
AppleBCMWLANIO80211VirtualInterface::setNAN_WarmupTime(apple80211_nan_warmup_time *)
AppleBCMWLANIO80211VirtualInterface::setP2P_GO_CONF(apple80211_p2p_go_conf_data *)
AppleBCMWLANIO80211VirtualInterface::setP2P_MODE(bool)
AppleBCMWLANIO80211VirtualInterface::setP2P_MODE(void)
AppleBCMWLANIO80211VirtualInterface::setPEER_CACHE_CONTROL(apple80211_peer_cache_control *)
AppleBCMWLANIO80211VirtualInterface::setPowerSaveState(apple80211_softap_power_state,apple80211_softap_ps_change_reason)
AppleBCMWLANIO80211VirtualInterface::setRSN_CONF(apple80211_rsn_conf_data *)
AppleBCMWLANIO80211VirtualInterface::setSSID(apple80211_ssid_data *)
AppleBCMWLANIO80211VirtualInterface::setSTA_AUTHORIZE(apple80211_sta_authorize_data *)
AppleBCMWLANIO80211VirtualInterface::setSTA_DISASSOCIATE(apple80211_sta_disassoc_data *)
AppleBCMWLANIO80211VirtualInterface::setSYNC_ENABLED(apple80211_awdl_sync_enabled *)
AppleBCMWLANIO80211VirtualInterface::setSYNC_PARAMS(apple80211_awdl_sync_params *)
AppleBCMWLANIO80211VirtualInterface::setSoftAPWiFINetworkIe(apple80211_softap_wifi_network_info *)
AppleBCMWLANIO80211VirtualInterface::setSoftAP_PARAMS(apple80211_softap_params *)
AppleBCMWLANIO80211VirtualInterface::transmitNAN_ActionFrame(apple80211_nan_af_tx *)
AppleBCMWLANIO80211VirtualInterface::updateAWDL_SERVICE_CNT(apple80211_awdl_update_service_count *)
AppleBCMWLANIO80211VirtualInterface::withOptions(AppleBCMWLANCore *,ether_addr *,uint,char *)
AppleBCMWLANIOReporting::init(AppleBCMWLANIOReporting::Params)
AppleBCMWLANIOReportingCore::free(void)
AppleBCMWLANIOReportingCore::getIndexForProcessName(OSString *)
AppleBCMWLANIOReportingCore::incrementBackoffStuckDetected(void)
AppleBCMWLANIOReportingCore::incrementStaleConfigurationDetected(void)
AppleBCMWLANIOReportingCore::report(wl_pwr_pcie_stats *)
AppleBCMWLANIOReportingCore::reportEventLogSet(uchar,ushort)
AppleBCMWLANIOReportingCore::reportMem(uint,uint)
AppleBCMWLANIOReportingCore::reportSCTxBlankingStats(scBlankingSummary *)
AppleBCMWLANIOReportingCore::reportTxDC(txdc_report *)
AppleBCMWLANIOReportingCore::reportTxDCSlice0Ant0(txdc_report_slice0_ant0 *)
AppleBCMWLANIOReportingCore::reportTxDCSlice1Ant0(txdc_report_slice1_ant0 *)
AppleBCMWLANIOReportingCore::updateBeaconOffloadStats(wlc_sta_pm_sc_status_v1 *,ulong long)
AppleBCMWLANIOReportingCore::updateInactivitySleepStats(ulong long,ulong long,ulong long)
AppleBCMWLANIOReportingCore::updateScanRoamStats(scanRoamStats,scanMotionStats,roamProtectionStats)
AppleBCMWLANIOReportingPerSlice::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANIOReportingPerSlice::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANIOReportingPerSlice::free(void)
AppleBCMWLANIOReportingPerSlice::initRxErrorReporter(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::initRxMngReporter(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::initScanModeSinceLinkUpReporter(AppleBCMWLANSliceId,uchar)
AppleBCMWLANIOReportingPerSlice::initTxMngReporter(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::initWlCntReporter(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::initWlCntSliceFrameReporter(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportBTLECnxStats(btle_connection_stats *)
AppleBCMWLANIOReportingPerSlice::reportChannelSwitchV1PerSlice(OSData *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportDSA(AppleBCMWLANSliceId,apple_dynsar_event_per_slice_data *)
AppleBCMWLANIOReportingPerSlice::reportOmiCntPerSlice(OSData *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportRC1Coex(OSData *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportRC2Coex(OSData *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportRxMpduLost(rx_mpdu_lost_cnt *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportRxMpduWme(rx_wme_eCounters *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportScanModeStatsSinceLinkUp(AppleBCMWLANSliceId,uchar,uchar)
AppleBCMWLANIOReportingPerSlice::reportScanPwrStats(uint,OSData *,AppleBCMWLANSliceId,uchar)
AppleBCMWLANIOReportingPerSlice::reportScanPwrStatsAtLinkUp(uint,OSData *,AppleBCMWLANSliceId,uchar)
AppleBCMWLANIOReportingPerSlice::reportScanPwrStatsSinceLinkUp(AppleBCMWLANSliceId,uchar)
AppleBCMWLANIOReportingPerSlice::reportTDM(OSData *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportTVPM(OSData *,AppleBCMWLANSliceId,apple80211_tvpm_event *)
AppleBCMWLANIOReportingPerSlice::reportTxMpduWme(tx_wme_eCounters *,AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::reportWlCntPerSlice(OSData *,AppleBCMWLANSliceId,apple80211_chip_stats *,uchar)
AppleBCMWLANIOReportingPerSlice::reportWlCntSliceCounters(OSData *,AppleBCMWLANSliceId,apple80211_chip_stats *)
AppleBCMWLANIOReportingPerSlice::reportWlCntSliceFrameCounters(OSData *,AppleBCMWLANSliceId,apple80211_chip_stats *)
AppleBCMWLANIOReportingPerSlice::resetScanModeStats(AppleBCMWLANSliceId)
AppleBCMWLANIOReportingPerSlice::updateReport(IOReportChannelList *,uint,void *,void *)
AppleBCMWLANItemRing::CallErrorAction(int,void *)
AppleBCMWLANItemRing::free(void)
AppleBCMWLANItemRing::getIndices(uint *,uint *)
AppleBCMWLANItemRing::getReadOffset(void)
AppleBCMWLANItemRing::getReadableByteCount(void)
AppleBCMWLANItemRing::getReadableItemCount(void)
AppleBCMWLANItemRing::getReadableItemCountContinuous(void)
AppleBCMWLANItemRing::getWritableByteCount(void)
AppleBCMWLANItemRing::getWritableItemCount(void)
AppleBCMWLANItemRing::getWritableItemCountContinuous(void)
AppleBCMWLANItemRing::getWriteOffset(void)
AppleBCMWLANItemRing::initWithOptions(OSObject *,void (*)(OSObject *,...),void (*)(OSObject *,AppleBCMWLANByteRing *,int,void *))
AppleBCMWLANItemRing::logRing(char const*,uint)
AppleBCMWLANJoinManager::abortFirmwareJoinAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::abortJoinAsync(ushort)
AppleBCMWLANJoinManager::abortJoinSync(ushort)
AppleBCMWLANJoinManager::addInstantHSAppleDeviceIE(bool,uchar)
AppleBCMWLANJoinManager::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANJoinManager::copyJoinTimeoutBlob(uchar *,ulong)
AppleBCMWLANJoinManager::crashJoinTimeout(void)
AppleBCMWLANJoinManager::customUnAssocDwell(uint)
AppleBCMWLANJoinManager::enableSupplicantEvents(void)
AppleBCMWLANJoinManager::free(void)
AppleBCMWLANJoinManager::freeResources(void)
AppleBCMWLANJoinManager::handleAssoc(wl_event_msg_t *)
AppleBCMWLANJoinManager::handleAuth(wl_event_msg_t *)
AppleBCMWLANJoinManager::handleCustomUnAssocDwellAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::handleICVErrorEvent(wl_event_msg_t *)
AppleBCMWLANJoinManager::handleSupplicantTimeoutConfigAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::induceFaultCallback(int,char const*)
AppleBCMWLANJoinManager::populateJoinStatusSubStateInfo(apple80211_join_status *)
AppleBCMWLANJoinManager::programKeyAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::removeNoACKAP(void)
AppleBCMWLANJoinManager::setAssocRSNIEAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::setAssocWsecInfo(ushort,uint)
AppleBCMWLANJoinManager::setCustomAssocIE(uchar *,ulong long)
AppleBCMWLANJoinManager::setCustomAssocIEAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANJoinManager::simulateJoinStatusSubState(uchar,uchar,uint,uint)
AppleBCMWLANJoinManager::updateNoAckCounter(ether_addr *,bool)
AppleBCMWLANKeepAliveOffload::free(void)
AppleBCMWLANKeepAliveOffload::freeResources(void)
AppleBCMWLANKeepAliveOffload::getNumActiveNATKeepAlives(void)
AppleBCMWLANKeepAliveOffload::getTCPAliveOffloadDump(apple80211_tko_dump *)
AppleBCMWLANKeepAliveOffload::handleMkeepAlivesAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::handleTCPKeepAliveConfigAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::handleTCPKeepAliveEnableAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::handleTCPKeepAliveParamAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::handleTCPKeepAliveStatusAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::handleTKOEvent(wl_event_msg_t *)
AppleBCMWLANKeepAliveOffload::handleUnconfigureMkeepAlivesAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANKeepAliveOffload::initializeKeepAliveCapabilities(void)
AppleBCMWLANKeepAliveOffload::setTCPAliveOffloadEnable(bool)
AppleBCMWLANKernelPrint(CCLogStream *,CCStreamLogLevel,ulong long,uint,char *,ulong,ulong,char const*,...)
AppleBCMWLANLeakyApParser::free(void)
AppleBCMWLANLeakyApParser::init(CCLogStream *)
AppleBCMWLANLeakyApParser::releaseLeakyApParserResources(void)
AppleBCMWLANLogger::free(void)
AppleBCMWLANLowLatencyInterface::MetaClass::alloc(void)
AppleBCMWLANLowLatencyInterface::initBSDInterfaceParameters(ifnet_init_eparams *,sockaddr_dl **)
AppleBCMWLANLowLatencyInterface::inputPacket(IOSkywalkNetworkPacket *,packet_info_tag *,ether_header *)
AppleBCMWLANLowLatencyInterface::logTxPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,bool)
AppleBCMWLANLowLatencyInterface::processBSDCommand(__ifnet *,uint,void *)
AppleBCMWLANLowLatencyInterface::~AppleBCMWLANLowLatencyInterface()
AppleBCMWLANNANDataInterface::apple80211Request(uint,int,void *)
AppleBCMWLANNANDataInterface::bringdownLink(void)
AppleBCMWLANNANDataInterface::bringupLink(void)
AppleBCMWLANNANDataInterface::free(void)
AppleBCMWLANNANDataInterface::setNAN_CompanionSkywalkInterfaceSetLinkState(apple80211_companion_skywalk_if_link_state *)
AppleBCMWLANNANInterface::MetaClass::alloc(void)
AppleBCMWLANNANInterface::bringdownLink(void)
AppleBCMWLANNANInterface::bringupLink(void)
AppleBCMWLANNANInterface::convertNANFWFrameType(uchar,uchar *,uchar *)
AppleBCMWLANNANInterface::copyDeviceInfo(apple80211_nan_device_info *,wl_nan_conf_status *)
AppleBCMWLANNANInterface::disableNAN(void)
AppleBCMWLANNANInterface::free(void)
AppleBCMWLANNANInterface::getIOVARString(ushort)
AppleBCMWLANNANInterface::getNAN_Advertisers(apple80211_nan_advertisers *)
AppleBCMWLANNANInterface::getNAN_Band(apple80211_nan_band *)
AppleBCMWLANNANInterface::getNAN_DeviceInfo(apple80211_nan_device_info *)
AppleBCMWLANNANInterface::getNAN_DiscBeaconPeriod(apple80211_nan_disc_bcn_period *)
AppleBCMWLANNANInterface::getNAN_Enable(apple80211_nan_enable *)
AppleBCMWLANNANInterface::getNAN_HopCount(apple80211_nan_hop_count *)
AppleBCMWLANNANInterface::getNAN_HopCountLimit(apple80211_nan_hop_count_limit *)
AppleBCMWLANNANInterface::getNAN_HostElection(apple80211_nan_host_election *)
AppleBCMWLANNANInterface::getNAN_InterfaceAddr(ether_addr *)
AppleBCMWLANNANInterface::getNAN_MasterPref(apple80211_nan_master_pref *)
AppleBCMWLANNANInterface::getNAN_MaxPeers(apple80211_nan_maxpeers *)
AppleBCMWLANNANInterface::getNAN_Merge(apple80211_nan_merge *)
AppleBCMWLANNANInterface::getNAN_PrimaryMasterChannel(apple80211_nan_primary_master_channel *)
AppleBCMWLANNANInterface::getNAN_Publish(apple80211_nan_publish_data *)
AppleBCMWLANNANInterface::getNAN_RandomFactor(apple80211_nan_random_factor *)
AppleBCMWLANNANInterface::getNAN_RandomFactorRotation(apple80211_nan_random_factor_rotation *)
AppleBCMWLANNANInterface::getNAN_Role(void)
AppleBCMWLANNANInterface::getNAN_Rssi5GClose(apple80211_nan_rssi_5G_close *)
AppleBCMWLANNANInterface::getNAN_Rssi5GMid(apple80211_nan_rssi_5G_mid *)
AppleBCMWLANNANInterface::getNAN_RssiClose(apple80211_nan_rssi_close *)
AppleBCMWLANNANInterface::getNAN_RssiMid(apple80211_nan_rssi_mid *)
AppleBCMWLANNANInterface::getNAN_SecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
AppleBCMWLANNANInterface::getNAN_SubscribedList(apple80211_nan_subscribed_service_list_data *)
AppleBCMWLANNANInterface::getNAN_WarmupTime(apple80211_nan_warmup_time *)
AppleBCMWLANNANInterface::handleProxIovarAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANNANInterface::reset(void)
AppleBCMWLANNANInterface::setNAN_Band(apple80211_nan_band *)
AppleBCMWLANNANInterface::setNAN_CancelPublish(apple80211_nan_cancel_publish_data *)
AppleBCMWLANNANInterface::setNAN_CancelSubscribe(apple80211_nan_cancel_subscribe_data *)
AppleBCMWLANNANInterface::setNAN_CommittedAvailability(apple80211_nan_committed_availability *)
AppleBCMWLANNANInterface::setNAN_CompanionSkywalkInterfaceSetLinkState(apple80211_companion_skywalk_if_link_state *)
AppleBCMWLANNANInterface::setNAN_ControlBits(uint *)
AppleBCMWLANNANInterface::setNAN_DataPathConfirm(apple80211_nan_dp_confirm *)
AppleBCMWLANNANInterface::setNAN_DiscBeaconPeriod(apple80211_nan_disc_bcn_period *)
AppleBCMWLANNANInterface::setNAN_DpRestoreCmd(apple80211_nan_restore_data_path_restore_info *)
AppleBCMWLANNANInterface::setNAN_FastDiscovery(apple80211_nan_forced_disc_beacon_transmission *)
AppleBCMWLANNANInterface::setNAN_FollowupTransmission(apple80211_nan_follow_up_transmit_data *)
AppleBCMWLANNANInterface::setNAN_HopCount(apple80211_nan_hop_count *)
AppleBCMWLANNANInterface::setNAN_HopCountLimit(apple80211_nan_hop_count_limit *)
AppleBCMWLANNANInterface::setNAN_HostElection(apple80211_nan_host_election *)
AppleBCMWLANNANInterface::setNAN_ImmutableAvailability(apple80211_nan_immutable_availability *)
AppleBCMWLANNANInterface::setNAN_InterfaceAddr(ether_addr *)
AppleBCMWLANNANInterface::setNAN_MaxPeers(apple80211_nan_maxpeers *)
AppleBCMWLANNANInterface::setNAN_Merge(apple80211_nan_merge *)
AppleBCMWLANNANInterface::setNAN_OobActionFrame(apple80211_nan_oob_act_frm_data *)
AppleBCMWLANNANInterface::setNAN_PotentialAvailability(apple80211_nan_potential_availability *)
AppleBCMWLANNANInterface::setNAN_PrimaryMasterChannel(apple80211_nan_primary_master_channel *)
AppleBCMWLANNANInterface::setNAN_RangingAvailability(apple80211_nan_ranging_availability *)
AppleBCMWLANNANInterface::setNAN_RangingCancel(apple80211_nan_ranging_cancel *)
AppleBCMWLANNANInterface::setNAN_RangingRequest(apple80211_nan_ranging_request *)
AppleBCMWLANNANInterface::setNAN_RangingResponse(apple80211_nan_ranging_response *)
AppleBCMWLANNANInterface::setNAN_Role(void)
AppleBCMWLANNANInterface::setNAN_SecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
AppleBCMWLANNANInterface::setNAN_WarmupTime(apple80211_nan_warmup_time *)
AppleBCMWLANNetManager::dumpWmeCounters(char *,uint,uint)
AppleBCMWLANObjectQueue::dequeue(void)
AppleBCMWLANObjectQueue::enqueue(OSObject *)
AppleBCMWLANPCIeAllocateDartMappedMemory(AppleBCMWLANPCIeHostDartMemory &,ulong,uint,IOMapper *)
AppleBCMWLANPCIeCompletionRing::checkForWork(void)
AppleBCMWLANPCIeCompletionRing::commit(void)
AppleBCMWLANPCIeCompletionRing::dumpRingState(char const*,char *,uint,uint,uint)
AppleBCMWLANPCIeCompletionRing::free(void)
AppleBCMWLANPCIeCompletionRing::getIndices(uint *,uint *)
AppleBCMWLANPCIeCompletionRing::logRing(char const*,uint)
AppleBCMWLANPCIeCompletionRing::printRingState(char const*)
AppleBCMWLANPCIeCompletionRing::requestRingDrain(uint)
AppleBCMWLANPCIeDoorbell::cancelRing(void)
AppleBCMWLANPCIeDoorbell::free(void)
AppleBCMWLANPCIeDoorbell::handleCoalescingTimer(IOTimerEventSource *)
AppleBCMWLANPCIeFlowQueue::assignFlowRing(AppleBCMWLANPCIeTransmitFlowRing *)
AppleBCMWLANPCIeFlowQueue::dequeuePacket(void)
AppleBCMWLANPCIeFlowQueue::enqueuePacket(__mbuf *)
AppleBCMWLANPCIeFlowQueue::pendingPackets(void)
AppleBCMWLANPCIeFlowQueue::queueSize(void)
AppleBCMWLANPCIeFlowQueue::queueSpace(void)
AppleBCMWLANPCIeFlowQueue::sendPacketToFWRing(__mbuf *)
AppleBCMWLANPCIeFlowQueue::withParamaters(ether_addr const&,ether_addr const&,uchar,uchar)
AppleBCMWLANPCIeFreeDartMappedMemory(AppleBCMWLANPCIeHostDartMemory &)
AppleBCMWLANPCIeIO::complete(IO80211Buffer **)
AppleBCMWLANPCIeIO::complete(__mbuf **)
AppleBCMWLANPCIeLinkChangeEventSource::detachPending(void)
AppleBCMWLANPCIeLinkChangeEventSource::free(void)
AppleBCMWLANPCIeLinkChangeEventSource::signalPCIeAttach(IOPCIDevice *)
AppleBCMWLANPCIeLinkChangeEventSource::signalPCIeDetach(IOPCIDevice *)
AppleBCMWLANPCIeMMIOHistory::dumpMMIO1lineToBuffer(MMIORecord *,char *,long)
AppleBCMWLANPCIeMMIOHistory::free(void)
AppleBCMWLANPCIeMMIOHistory::recordMMIO(char const*,PCIeMMIOType,ulong long,ulong long,uchar)
AppleBCMWLANPCIeSkywalk::destroyLowLatencyCompRingComplete(AppleBCMWLANItemRing *,int,void *)
AppleBCMWLANPCIeSkywalk::storePTMTimestamp(BCOMIPCTimestamp *,AppleBCMWLANPCIeSkywalkPacket *)
AppleBCMWLANPCIeSkywalk::withProviderAndCapacity(AppleBCMWLANBusInterfacePCIe *,uint,uint,uint,uint,uint,CCLogStream *,CCFaultReporter *)
AppleBCMWLANPCIeSkywalkFlowQueue::collectQueueStats(skywalkDataPathStats_t *)
AppleBCMWLANPCIeSkywalkFlowQueue::free(void)
AppleBCMWLANPCIeSkywalkFlowQueue::getRingFreeSpace(void)
AppleBCMWLANPCIeSkywalkMemorySegment::complete(uint)
AppleBCMWLANPCIeSkywalkMemorySegment::free(void)
AppleBCMWLANPCIeSkywalkMemorySegment::initWithPool(IOSkywalkPacketBufferPool *,IOSkywalkMemorySegmentDescriptor *,CCLogStream *,CCFaultReporter *,uint)
AppleBCMWLANPCIeSkywalkMemorySegment::prepare(uint)
AppleBCMWLANPCIeSkywalkMemorySegment::setBufferMemoryDescriptor(IOBufferMemoryDescriptor *)
AppleBCMWLANPCIeSkywalkMemorySegment::setMapper(IOMapper *)
AppleBCMWLANPCIeSkywalkMulticastQueue::checkForWork(void)
AppleBCMWLANPCIeSkywalkMulticastQueue::collectQueueStats(skywalkDataPathStats_t *)
AppleBCMWLANPCIeSkywalkMulticastQueue::free(void)
AppleBCMWLANPCIeSkywalkPacket::complete(IOSkywalkPacketQueue *,uint)
AppleBCMWLANPCIeSkywalkPacket::free(void)
AppleBCMWLANPCIeSkywalkPacket::initWithPool(AppleBCMWLANPCIeSkywalkPacketPool *,IOSkywalkPacketDescriptor *,CCLogStream *,CCFaultReporter *,uint)
AppleBCMWLANPCIeSkywalkPacketPool::flushPacketAction(short,OSObject *,void *)
AppleBCMWLANPCIeSkywalkPacketPool::free(void)
AppleBCMWLANPCIeSkywalkPacketPool::initWithName(char const*,OSObject *,uint,IOSkywalkPacketBufferPool::PoolOptions const*,CCLogStream *,CCFaultReporter *)
AppleBCMWLANPCIeSkywalkPacketPool::newPacket(IOSkywalkPacketDescriptor *,IOSkywalkPacket **)
AppleBCMWLANPCIeSkywalkPacketPool::rxTrackerFlush(void)
AppleBCMWLANPCIeSkywalkPacketPool::setMapper(IOMapper *)
AppleBCMWLANPCIeSkywalkPacketPool::txTrackerFlush(void)
AppleBCMWLANPCIeSkywalkRxCompletionQueue::collectQueueStats(skywalkDataPathStats_t *)
AppleBCMWLANPCIeSkywalkRxCompletionQueue::flushPackets(void)
AppleBCMWLANPCIeSkywalkRxCompletionQueue::free(void)
AppleBCMWLANPCIeSkywalkRxCompletionQueue::stagePacket(AppleBCMWLANPCIeSkywalkPacket *)
AppleBCMWLANPCIeSkywalkRxSubmissionQueue::collectQueueStats(skywalkDataPathStats_t *)
AppleBCMWLANPCIeSkywalkRxSubmissionQueue::free(void)
AppleBCMWLANPCIeSkywalkTxCompletionQueue::collectQueueStats(skywalkDataPathStats_t *)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::MetaClass::alloc(void)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::clearFWRings(void)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::collectQueueStats(skywalkDataPathStats_t *,ushort)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::free(void)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::getPendingPacketCount(void)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::getRingFreeSpace(void)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::setFWRing(AppleBCMWLANPCIeTransmitFlowRing *,ushort)
AppleBCMWLANPCIeSkywalkTxSubmissionQueue::~AppleBCMWLANPCIeSkywalkTxSubmissionQueue()
AppleBCMWLANPCIeSnapshotContext::free(void)
AppleBCMWLANPCIeSubmissionRing::checkForWork(void)
AppleBCMWLANPCIeSubmissionRing::commit(void)
AppleBCMWLANPCIeSubmissionRing::dumpRingState(char const*,char *,uint,uint,uint)
AppleBCMWLANPCIeSubmissionRing::free(void)
AppleBCMWLANPCIeSubmissionRing::getIndices(uint *,uint *)
AppleBCMWLANPCIeSubmissionRing::logRing(char const*,uint)
AppleBCMWLANPCIeSubmissionRing::printRingState(char const*)
AppleBCMWLANPCIeSubmissionRing::requestRingFill(uint,bool)
AppleBCMWLANPCIeTransmitFlowRing::checkForWork(void)
AppleBCMWLANPCIeTransmitFlowRing::dumpRingState(char const*,char *,uint,uint,uint)
AppleBCMWLANPCIeTransmitFlowRing::free(void)
AppleBCMWLANPCIeTransmitFlowRing::getCounter(void)
AppleBCMWLANPCIeTransmitFlowRing::packetsWaitingForRingCount(uint)
AppleBCMWLANPCIeTransmitFlowRing::printRingState(char const*)
AppleBCMWLANPCIeTransmitFlowRing::requestRingFill(uint,bool)
AppleBCMWLANPacketQueue::countFiltered(bool (*)(void *,__mbuf *),void *)
AppleBCMWLANPacketQueue::dequeueFiltered(bool (*)(void *,__mbuf *),void *)
AppleBCMWLANPacketQueue::lockCountFiltered(bool (*)(void *,__mbuf *),void *)
AppleBCMWLANPacketQueue::lockDequeueFiltered(bool (*)(void *,__mbuf *),void *)
AppleBCMWLANPacketTransmitter::assertPropTxStatusCredits(PropTxStatusChange)
AppleBCMWLANPacketTransmitter::free(void)
AppleBCMWLANPacketTransmitter::ignorePropTxStatusCredits(PropTxStatusChange)
AppleBCMWLANPacketTransmitter::isACStarved(FirmwareAC)
AppleBCMWLANPacketTransmitter::lockReportBusPacketTxFailure(FirmwareAC)
AppleBCMWLANPacketTransmitter::logState(char *,uint,int)
AppleBCMWLANPacketTransmitter::pulldownXmittedCredits(FirmwareAC)
AppleBCMWLANPacketTransmitter::setCreditLimitPerAC(uint *,uint)
AppleBCMWLANPacketTransmitter::setCreditsPerAC(uint *,uint)
AppleBCMWLANPacketTransmitter::updateTxPktCounPerAC(FirmwareAC)
AppleBCMWLANParseRing::checkForWork(void)
AppleBCMWLANParseRing::free(void)
AppleBCMWLANParseRing::getReadableByteCount(void)
AppleBCMWLANParseRing::getReadableByteCountToEnd(int *)
AppleBCMWLANParseRing::getWritableByteCount(void)
AppleBCMWLANParseRing::hexDumpRing(void)
AppleBCMWLANParseRing::initWithOptions(OSObject *,int (*)(OSObject *,AppleBCMWLANByteRing *,void *,uint,void *,uint),AppleBCMWLANParseRing::ParseReturn (*)(OSObject *,AppleBCMWLANByteRing *,void *,uint,void *,uint,uint *),AppleBCMWLANParseRing::ParseRingCreationInfo &,CCLogStream *)
AppleBCMWLANParseRing::logRing(char const*,uint)
AppleBCMWLANParseRing::requestRingDrain(uint)
AppleBCMWLANPowerManager::configureOpportunisticPowerSave(bool)
AppleBCMWLANPowerManager::configureTVPM(void)
AppleBCMWLANPowerManager::free(void)
AppleBCMWLANPowerManager::freeResources(void)
AppleBCMWLANPowerManager::handleConfigureBCMInterfaceStateAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureBcnBasedRadioChainSwitchAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureBcnBasedRadioChannelWidthSwitchAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureMIMOPSCfgAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureMIMOPSCfgGetAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureMPCThresholdAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleConfigureTVPMPeriodicityAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleDigitalNapConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleEBTConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetBCNRXAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetMIMOGaurdAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetMRCRssiThresholdAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetRxChannelSpecAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetRxRadioChainsAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleGetTxRadioChainsAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleMRCThresholdConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleOCLConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleOCLRssiThresholdConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleOPSConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleScanPowerPolicyConfigurationAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::handleSetActFrameAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANPowerManager::quiesce(void)
AppleBCMWLANProvisioningManager::addSInt16ValToImage(char const*,short,ProvisionControl &)
AppleBCMWLANProvisioningManager::addStringValToImage(char const*,char *)
AppleBCMWLANProvisioningManager::checkNormalizedNVRAM(IOBufferMemoryDescriptor *,Ranges &,void *)
AppleBCMWLANProvisioningManager::checkRegulatorTable(IOBufferMemoryDescriptor *,Ranges &,void *)
AppleBCMWLANProvisioningManager::checkTxCapTable(IOBufferMemoryDescriptor *,Ranges &,void *)
AppleBCMWLANProvisioningManager::free(void)
AppleBCMWLANProvisioningManager::generateProvisionedNVRAMParameters(IOBufferMemoryDescriptor *,Ranges &,void *)
AppleBCMWLANProvisioningManager::handleBluetoothRegistration(void *,IOService *,IONotifier *)
AppleBCMWLANProvisioningManager::handleBluetoothRegistrationGated(void *,IOService *,IONotifier *)
AppleBCMWLANProvisioningManager::init(IOService *,AppleBCMWLANBusInterface *)
AppleBCMWLANProvisioningManager::prepareNVRAMString(char *,ushort,signed char *,ushort,char const*,ProvisionControl &)
AppleBCMWLANProvisioningManager::process(void)
AppleBCMWLANProximityInterface::MetaClass::alloc(void)
AppleBCMWLANProximityInterface::dump(char *,uint,int)
AppleBCMWLANProximityInterface::freeResources(void)
AppleBCMWLANProximityInterface::getAWDL_ELECTION_ID(apple80211_awdl_election_id *)
AppleBCMWLANProximityInterface::getBSSID(apple80211_bssid_data *)
AppleBCMWLANProximityInterface::getSSID(apple80211_ssid_data *)
AppleBCMWLANProximityInterface::setForcedRoam(apple80211_awdl_forced_roam_config *)
AppleBCMWLANProximityInterface::setLinkState(IO80211LinkState,uint)
AppleBCMWLANRoamManager::addChannelsToUserRoamCache(void)
AppleBCMWLANRoamManager::clearChannelsFromUserRoamCache(void)
AppleBCMWLANRoamManager::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANRoamManager::configureAssociatedSleepExit(void)
AppleBCMWLANRoamManager::dbgConfigureAdaptiveRoamParams(void)
AppleBCMWLANRoamManager::dbgUnConfigureAdaptiveRoamParams(void)
AppleBCMWLANRoamManager::free(void)
AppleBCMWLANRoamManager::freeResources(void)
AppleBCMWLANRoamManager::getChannelsFromUserRoamCache(void)
AppleBCMWLANRoamManager::getOverrideStateFromUserRoamCache(void)
AppleBCMWLANRoamManager::handleConfigureGetUserRoamCacheAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANRoamManager::handleConfigureProgramGARPAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANRoamManager::handleConfigureSetUserRoamCacheAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANRoamManager::handleConfigureStopGARPAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANRoamManager::handleLinkDownConfiguration(void)
AppleBCMWLANRoamManager::handleRoamEventConfiguration(wl_event_msg_t *)
AppleBCMWLANRoamManager::handleRoamScanDoneConfiguration(void)
AppleBCMWLANRoamManager::overrideChannelsToUserRoamCache(void)
AppleBCMWLANRoamManager::prepareScanRejectStatsForCA(void)
AppleBCMWLANRoamManager::quiesce(void)
AppleBCMWLANRoamManager::resetOverrideChannelsInUserRoamCache(void)
AppleBCMWLANRxByteRing::free(void)
AppleBCMWLANRxByteRing::initWithOptions(OSObject *,int (*)(OSObject *,AppleBCMWLANByteRing *,void *,uint,void *,uint))
AppleBCMWLANRxItemRing::free(void)
AppleBCMWLANRxItemRing::initWithOptions(OSObject *,uint (*)(OSObject *,AppleBCMWLANByteRing *,void *,uint),void (*)(OSObject *,AppleBCMWLANByteRing *,int,void *))
AppleBCMWLANScanManager::addBeacon(AppleBCMWLANBSSBeacon *)
AppleBCMWLANScanManager::collectImmediateFaultDataCallback(CCFaultReport *)
AppleBCMWLANScanManager::eventRoamScanResult(wl_event_msg_t *)
AppleBCMWLANScanManager::free(void)
AppleBCMWLANScanManager::freeResources(void)
AppleBCMWLANScanManager::getCachedBeacon(uchar *,uchar,ether_addr *)
AppleBCMWLANScanManager::getNextIScanReturnValue(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANScanManager::handleEScanAbortResults(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANScanManager::logScanCache(char *,uint,uint)
AppleBCMWLANScanManager::piggyBackScanComplete(void)
AppleBCMWLANScanManager::purgeScanCache(void)
AppleBCMWLANScanManager::quiesce(void)
AppleBCMWLANScanManager::reapOldBeacons(void)
AppleBCMWLANScanManager::removeBeaconsMatching(AppleBCMWLANBSSBeacon *)
AppleBCMWLANScanManager::removeBeaconsMatching(uchar *,ulong long,ether_addr *)
AppleBCMWLANScanManager::reset(void)
AppleBCMWLANScanManager::resetState(void)
AppleBCMWLANSetBPFLoggerTarget(IO80211Controller *)
AppleBCMWLANSkywalkInterface::MetaClass::alloc(void)
AppleBCMWLANSkywalkInterface::collectCommonQueueStats(char const*)
AppleBCMWLANSkywalkInterface::configureMulticastFilter(uint,ether_addr const*,uint)
AppleBCMWLANSkywalkInterface::disable(uint)
AppleBCMWLANSkywalkInterface::free(void)
AppleBCMWLANSkywalkInterface::handleChosenMedia(uint)
AppleBCMWLANSkywalkInterface::notifyQueueState(mbuf_traffic_class_t,ushort)
AppleBCMWLANSkywalkInterface::packetSpace(uchar)
AppleBCMWLANSkywalkInterface::pendingPackets(uchar)
AppleBCMWLANSkywalkInterface::setCurrentBssid(ether_addr *)
AppleBCMWLANSkywalkInterface::setRunningState(bool)
AppleBCMWLANSkywalkInterface::stop(IOService *)
AppleBCMWLANSkywalkInterface::~AppleBCMWLANSkywalkInterface()
AppleBCMWLANSkywalkMulticastQueue::enable(void)
AppleBCMWLANSkywalkMulticastQueue::free(void)
AppleBCMWLANSkywalkMulticastQueue::initWithInterface(AppleBCMWLANSkywalkInterface *)
AppleBCMWLANSkywalkRxCompletionQueue::free(void)
AppleBCMWLANSkywalkRxCompletionQueue::initWithPoolAndQueueInfo(IOSkywalkPacketBufferPool *,ushort,uint,uint)
AppleBCMWLANSkywalkRxSubmissionQueue::free(void)
AppleBCMWLANSkywalkRxSubmissionQueue::initWithPoolAndQueueInfo(IOSkywalkPacketBufferPool *,ushort,uint,uint)
AppleBCMWLANSkywalkTxCompletionQueue::free(void)
AppleBCMWLANSkywalkTxCompletionQueue::initWithPoolAndQueueInfo(IOSkywalkPacketBufferPool *,ushort,uint,uint)
AppleBCMWLANSkywalkTxSubmissionQueue::enable(void)
AppleBCMWLANSkywalkTxSubmissionQueue::free(void)
AppleBCMWLANSkywalkTxSubmissionQueue::initWithPoolAndQueueInfo(IOSkywalkPacketBufferPool *,ushort,uint,mbuf_traffic_class_t,uint,CCLogStream *,CCFaultReporter *)
AppleBCMWLANSkywalkTxSubmissionQueue::setInterface(AppleBCMWLANSkywalkInterface *)
AppleBCMWLANStopwatch::init(void)
AppleBCMWLANTaskmaster::dispatch(AppleBCMWLANTaskmaster::Task const&,AppleBCMWLANTaskmaster::TaskCompletion const*,void *)
AppleBCMWLANTaskmaster::free(void)
AppleBCMWLANTaskmaster::work(IOTimerEventSource *)
AppleBCMWLANTestManager::free(void)
AppleBCMWLANTestManager::freeResources(void)
AppleBCMWLANTestManager::handleTestTimeout(IOTimerEventSource *)
AppleBCMWLANTimeKeeper::handleRteTimesyncIoVarAsyncCallBack(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTimeKeeper::synchronizeTime(void)
AppleBCMWLANTimeSyncClockInfo::free(void)
AppleBCMWLANTimeSyncClockInfo::reset(void)
AppleBCMWLANTimeSyncEngine::extractTickCountAndClockID(BCOMIPCTimestamp const&,ulong long *,uchar *)
AppleBCMWLANTimeSyncEngine::getWorkLoop(void)
AppleBCMWLANTimeSyncEngine::getWorkQueue(void)
AppleBCMWLANTimeTrace::free(void)
AppleBCMWLANTimeTrace::getRecordTraceElement(void)
AppleBCMWLANTimeTrace::recordTracevWithTimestamp(ulong long,ulong long,ulong long,char const*,char *)
AppleBCMWLANTxBuffer::free(void)
AppleBCMWLANTxBuffer::init(AppleBCMWLANBusInterface const*,ulong long,IO80211BufferPool *)
AppleBCMWLANTxPowerManager::attachCoreAnalyticsService(void *,IOService *,IONotifier *)
AppleBCMWLANTxPowerManager::freeResources(void)
AppleBCMWLANTxPowerManager::handleConfigureDynSAREventAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::handleConfigureDynSARModeAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::handleConfigureDynSARPwrBoostAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::handleConfigureTxSDBAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::handleGetDynSARProfileAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::handleGetDynSARStatusAsyncCallback(CommandID &,int,CommandRxPayload &,void *)
AppleBCMWLANTxPowerManager::updateDynSARCurState(ushort)
AppleBCMWLANUserClient::closeUserClient(AppleBCMWLANUserClient*,void *,IOExternalMethodArguments *)
AppleBCMWLANUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleBCMWLANUserClient::externalMethodGated(void *)
AppleBCMWLANUserClient::free(void)
AppleBCMWLANUserClient::freeResources(void)
AppleBCMWLANUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleBCMWLANUtil::AutoLock::~AutoLock()
AppleBCMWLANUtil::AutoreleasedAllignedOSData::AutoreleasedAllignedOSData(OSData *,ulong)
AppleBCMWLANUtil::AutoreleasedAllignedOSData::~AutoreleasedAllignedOSData()
AppleBCMWLANUtil::AutoreleasedBuffer::load(void const*,ulong,ulong)
AppleBCMWLANUtil::AutoreleasedBuffer::~AutoreleasedBuffer()
AppleBCMWLANUtil::AutoreleasedTimeTrace::AutoreleasedTimeTrace(uint,uint,bool)
AppleBCMWLANUtil::AutoreleasedTimeTrace::dumpToLog(uint,uint)
AppleBCMWLANUtil::AutoreleasedTimeTrace::recordTraceFromMarkTimestamp(ulong long,ulong long,char const*,...)
AppleBCMWLANUtil::AutoreleasedTimeTrace::recordTraceWithTimestamp(ulong long,ulong long,ulong long,char const*,...)
AppleBCMWLANUtil::AutoreleasedTimeTrace::timeTraceCallback(AppleBCMWLANUtil::AppleBCMWLANTimeTraceRecordElement *,void const*,void const*,void const*)
AppleBCMWLANUtil::copyDTParameterString(IOService *,IORegistryPlane const*,char const*,OSString *)
AppleBCMWLANUtil::findpattern(char const*,char const*,ulong)
AppleBCMWLANUtil::getDTParameter32(IOService *,IORegistryPlane const*,char const*,uint)
AppleBCMWLANUtil::getHwFeatureFlags(IOService *,IORegistryPlane const*)
AppleBCMWLANUtil::getcrc8(uchar *,uint,uchar)
AppleBCMWLANUtil::releaseOSObjectArray(OSString const**,OSObject const**,uint)
AppleBCMWLANWorkOrder::free(void)
AppleBCMWLANWorkOrder::initWithID(uint)
AppleBCMWLAN_isVerboseDebugLoggingAllowed(void)
AppleBPIC::free(void)
AppleBPIC::getDTProperty(char const*,uint *,IOService *)
AppleBPIC::newReportDescriptor(IOMemoryDescriptor **)
AppleBPIC::setReport(IOMemoryDescriptor *,IOHIDReportType,uint)
AppleBPIC::start(IOService *)
AppleBPIC::start(IOService *)
AppleBSDKextStarter::start(IOService *)
AppleBTM::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleBTM::getDTProperty(char const*,uint *,IOService *)
AppleBTM::getDTProperty(char const*,uint *,IOService *)
AppleBTM::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
AppleBTM::newReportDescriptor(IOMemoryDescriptor **)
AppleBTM::newReportDescriptor(IOMemoryDescriptor **)
AppleBTM::setReport(IOMemoryDescriptor *,IOHIDReportType,uint)
AppleBTM::start(IOService *)
AppleBTMBPICAgent::AppleBTMBPICAgent(OSMetaClass const*)
AppleBTMBPICAgent::configBPICHysteresisOverride(uint)
AppleBTMBPICAgent::configBPICReporting(void)
AppleBTMBPICAgent::configBPICRevision(uint)
AppleBTMBPICAgent::dataWrite(ushort,uchar const*,ulong)
AppleBTMBPICAgent::disableBPICInterrupt(uchar)
AppleBTMBPICAgent::enableBPICInterrupt(uchar)
AppleBTMBPICAgent::free(void)
AppleBTMBPICAgent::initWithParent(AppleBPIC *,IOService *)
AppleBTMBPICAgent::initWithParent(AppleBPIC *,IOService *)
AppleBTMBPICAgent::setIntBit(int,bool)
AppleBTMBPICAgent::startBPICReporting(void)
AppleBTMBPICAgent::stopBPICReporting(void)
AppleBTMFunction::callFunction(void *,void *,void *)
AppleBTMFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleBTMPMUAgent::AppleBTMPMUAgent(OSMetaClass const*)
AppleBTMPMUAgent::configBatteryReporting(SampleRate)
AppleBTMPMUAgent::configCallbackBatteryReporting(OSObject *,void (*)(OSObject *,ulong long,uint *,uint),SampleRate)
AppleBTMPMUAgent::forceReducedMode(void)
AppleBTMPMUAgent::free(void)
AppleBTMPMUAgent::initWithParent(AppleBTM *,IOService *)
AppleBTMPMUAgent::ppmArrivalHandler(IOService *)
AppleBTMPMUAgent::ppmArrivalHandler(IOService *)
AppleBTMPMUAgent::resetWorstCaseIV(void)
AppleBTMPMUAgent::startBatteryReporting(uint,uint)
AppleBTMPMUAgent::startCallbackBatteryReporting(uint,uint,bool)
AppleBTMPMUAgent::stopBatteryReporting(void)
AppleBTMPMUAgent::stopCallbackBatteryReporting(bool)
AppleBTMPMUAgent::stopHIDReporting(void)
AppleBTMPMUAgent::updatePMUVthreshold(uint)
AppleBaseAudioController::_accessRegister(uint,AppleAOPAudioRegisterAccessDescriptor *)
AppleBaseAudioController::_addDevice(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_addDevice(uint,AppleAOPAudioDevice *)
AppleBaseAudioController::_attachDevice(uint,uint)
AppleBaseAudioController::_configureReport(IOReportChannelList *,uint,void *,void *)
AppleBaseAudioController::_configureReport(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_createIOReport(OSDictionary *&)
AppleBaseAudioController::_detachDevice(uint,uint)
AppleBaseAudioController::_getBuffer(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_getControlValue(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_getDeviceProperty(uint,uint,void *,ulong *)
AppleBaseAudioController::_setControlValue(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_setPowerState(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_startHardware(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_stopHardware(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_updateReport(IOReportChannelList *,uint,void *,void *)
AppleBaseAudioController::_updateReport(OSObject *,void *,void *,void *,void *)
AppleBaseAudioController::_waitTillAwake(bool)
AppleBaseAudioController::accessRegister(uint,AppleAOPAudioRegisterAccessDescriptor *)
AppleBaseAudioController::addDevice(uint,AppleAOPAudioDevice *)
AppleBaseAudioController::attachDevice(uint,uint)
AppleBaseAudioController::close(IOService *,uint)
AppleBaseAudioController::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBaseAudioController::detachDevice(uint,uint)
AppleBaseAudioController::getBuffer(int,IOBufferMemoryDescriptor *&)
AppleBaseAudioController::getControlValue(uint,uint &)
AppleBaseAudioController::getDeviceProperty(uint,uint,void *,ulong *)
AppleBaseAudioController::initForPM(IOService *)
AppleBaseAudioController::setControlValue(uint,uint)
AppleBaseAudioController::setDeviceProperty(uint,uint,uint)
AppleBaseAudioController::setDeviceProperty(uint,uint,void const*,ulong)
AppleBaseAudioController::setPowerState(ulong,IOService *)
AppleBaseAudioController::start(IOService *)
AppleBaseAudioController::startHardware(uint)
AppleBaseAudioController::stop(IOService *)
AppleBaseAudioController::stopHardware(uint)
AppleBaseAudioController::teardown(void)
AppleBaseband::AppleBaseband(OSMetaClass const*)
AppleBaseband::initialize(IOService *)
AppleBaseband::loadBootArguments(void)
AppleBaseband::startModemThread(void)
AppleBasebandBackpowering::findAliases(IOService *,uint &)
AppleBasebandBackpowering::findPins(IOService *,uint &)
AppleBasebandBackpowering::getPinCountData(IOService *)
AppleBasebandBackpowering::initialize(IOService *)
AppleBasebandBackpowering::quiesce(void)
AppleBasebandBackpowering::restore(void)
AppleBasebandI19__MetaClass__fn_0x68
AppleBasebandI19__fn_0x628
AppleBasebandI19__fn_0x660
AppleBasebandI19__fn_0x680
AppleBasebandI19__fn_0x6e8
AppleBasebandI19__free
AppleBasebandM20::spmiTimerCleanUp(void)
AppleBasebandPCI::enableL1SSGated(void)
AppleBasebandPCIBHIDevice::start(IOService *)
AppleBasebandPCIBHIDevice::stop(IOService *)
AppleBasebandPCIBHIInterface::start(IOService *)
AppleBasebandPCIBHIInterface::stop(IOService *)
AppleBasebandPCIControl::handleAER(IOPCIEventSource *,IOPCIEvent *)
AppleBasebandPCIControl::linkSpeedCheck(IOTimerEventSource *)
AppleBasebandPCIControl::portManualEnableFunction(bool,bool)
AppleBasebandPCIControl::start(IOService *)
AppleBasebandPCIControlUserClient::start(IOService *)
AppleBasebandPCIEDevice::enablePCIPort(bool,bool)
AppleBasebandPCIEDevice::enablePCIPortSleep(bool)
AppleBasebandPCIEDevice::notifyCompletionTimeoutAsync(void)
AppleBasebandPCIEDevice::notifyCompletionTimeoutThreadGated(void)
AppleBasebandPCIEDevice::pciErrorHandler(AppleEmbeddedPCIEErrorHandlerEvent,OSData *)
AppleBasebandPCIEDevice__checkPCIDriverIsUp
AppleBasebandPCIEDevice__enablePCIPortSleep_bool
AppleBasebandPCIEDevice__findPCIControl
AppleBasebandPCIEDevice__fn_0x638
AppleBasebandPCIEDevice__free
AppleBasebandPCIEDevice__setDesiredLinkSpeed_unsigned_int
AppleBasebandPCIEDevice__setProperties_OSObject
AppleBasebandPCIEDevice__updatePCIDriverIsUp_bool
AppleBasebandPCIMAVControl::createDeviceFunction(bool,uint)
AppleBasebandPCIMHIDevice::getIOCommand(void)
AppleBasebandPCIMHIDevice::getRequest(void)
AppleBasebandPCIMHIDevice::start(IOService *)
AppleBasebandPCIMHIDevice::timeSync(IOMemoryDescriptor *,IOABPCompletion *)
AppleBasebandPCIMHIInterface::dummyCommandCallback(void *,int)
AppleBasebandPCIMHIInterface::dummyCommandCallback(void *,int)
AppleBasebandPCIMemoryCommand::bounceIn(IOMemoryDescriptor *,ulong long *)
AppleBasebandPCIMemoryCommand::bounceIn(__mbuf *,ulong long)
AppleBasebandPCIMemoryCommand::prepare(IOMemoryDescriptor *,AppleBasebandPCIIODirection,AppleBasebandPCIMemoryCommand*,uint,uint)
AppleBasebandPCIMemoryCommand::prepare(__mbuf *,ulong long,AppleBasebandPCIIODirection)
AppleBasebandPCIMemoryCommand::transferDone(ulong long)
AppleBasebandPCIMemoryPolicy::prepareDMATransfer(IOMemoryDescriptor *)
AppleBasebandPCIMemoryPolicy::updateUse(bool)
AppleBasebandPCIPDPManagerBase::getTxSlotCount(uint)
AppleBasebandPCIPDPManagerBase::reservedSizeForMuxing(uint,uint *,uint *)
AppleBasebandPCIPDPQMAPSkywalk::openGated(IOService *,uint,void *)
AppleBasebandPCIPDPQMAPSkywalk::outputComplete(void *,int,ulong long,void *)
AppleBasebandPCIPDPQMAPSkywalk::readComplete(void *,int,ulong long,void *)
AppleBasebandPCIPDPQMAPSkywalk::requestTxGated(AppleBasebandPCIPDPSkywalkInterface *,IOSkywalkPacket * const*,uint)
AppleBasebandPCIQMAPControl::outputComplete(void *,int,ulong long,void *)
AppleBasebandPCIQMAPControl::requestTxGated(AppleBasebandPCIPDPSkywalkInterface *,IOSkywalkPacket * const*,uint)
AppleBasebandPCISkywalkInterfaceBase::attachProtocol(__ifnet *,uint)
AppleBasebandPCISkywalkInterfaceBase::enqueuePDPEvent(uint,void *)
AppleBasebandPCISkywalkInterfaceBase::getProtocolFamily(__mbuf *)
AppleBasebandPCISkywalkInterfaceBase::initBSDInterfaceParameters(ifnet_init_eparams *,sockaddr_dl **)
AppleBasebandPCISkywalkInterfaceBase::pdpAddProto(__ifnet *,uint,ifnet_demux_desc const*,uint)
AppleBasebandPCISkywalkInterfaceBase::pdpDemux(__ifnet *,__mbuf *,char *,uint *)
AppleBasebandPCISkywalkInterfaceBase::registerNetworkPlumbers(void)
AppleBasebandPCISkywalkInterfaceBase::reportLinkStatus(void const*,uint)
AppleBasebandPCISkywalkInterfaceBase::returnPacket(AppleBasebandPCISkywalkPacket *)
AppleBasebandPCISkywalkInterfaceBase::signalOutput(IOSkywalkNetworkInterface *)
AppleBasebandPCISkywalkMemorySegment::initPendingList(void)
AppleBasebandPCISkywalkPacket::packetWriteBytes(IOSkywalkNetworkPacket *,uint,void const*,uint)
AppleBasebandPCISkywalkPacketBufferPool::newPacket(IOSkywalkPacketDescriptor *,IOSkywalkPacket **)
AppleBasebandPCISkywalkProvider::free(void)
AppleBasebandPCISkywalkProvider::handleOpen(IOService *,uint,void *)
AppleBasebandPCISkywalkProvider::requestRxGated(AppleBasebandPCIPDPSkywalkInterface *,IOSkywalkPacket **,uint)
AppleBasebandPCISkywalkProvider::telescoper_init(OSDictionary *)
AppleBasebandPCITraceBackend::init(OSDictionary *)
AppleBasebandPCIUserClient::start(IOService *)
AppleBasebandPCIUserClient::timeEventCallback(void *,void *,uint,ulong long,uint)
AppleBasebandPlatform::addFreqList(uint,void *,uint)
AppleBasebandPlatform::addFreqListGated(uint,void *,uint)
AppleBasebandPlatform::chargerDesense(bool)
AppleBasebandPlatform::chargerDesenseGated(bool)
AppleBasebandPlatform::clearFreqList(void)
AppleBasebandPlatform::clearFreqListGated(void)
AppleBasebandPlatform::coredumpModem(bool)
AppleBasebandPlatform::coredumpModemGated(bool)
AppleBasebandPlatform::enableTraceMux(int)
AppleBasebandPlatform::free(void)
AppleBasebandPlatform::getBasebandProperty(BasebandProperty,ulong long *)
AppleBasebandPlatform::getBasebandState(BasebandState *)
AppleBasebandPlatform::getModemReset(ulong long *)
AppleBasebandPlatform::getModemResetGated(ulong long *)
AppleBasebandPlatform::getPmuExtOn(ulong long *)
AppleBasebandPlatform::getPmuExtOnGated(ulong long *)
AppleBasebandPlatform::getResetRequest(ulong long *)
AppleBasebandPlatform::getResetRequestGated(ulong long *)
AppleBasebandPlatform::notifyBasebandPoweringDown(void)
AppleBasebandPlatform::notifyBasebandPoweringDownGated(void)
AppleBasebandPlatform::pmuExtOnConfig(uint)
AppleBasebandPlatform::powerCycleModem(void)
AppleBasebandPlatform::ppmEmergency(bool)
AppleBasebandPlatform::ppmEmergencyGated(bool)
AppleBasebandPlatform::quiesceBackpoweringPins(void)
AppleBasebandPlatform::radioOn(int)
AppleBasebandPlatform::radioUsbOn(int)
AppleBasebandPlatform::removeFreqList(uint,void *,uint)
AppleBasebandPlatform::removeFreqListGated(uint,void *,uint)
AppleBasebandPlatform::reportThermalData(void const*,uint,ulong long *)
AppleBasebandPlatform::resetModem(uint)
AppleBasebandPlatform::restoreBackpoweringPins(void)
AppleBasebandPlatform::setBasebandProperty(BasebandProperty,ulong long)
AppleBasebandPlatform::setBasebandState(BasebandState)
AppleBasebandPlatform::setPowerOnBBPMUPinGated(bool)
AppleBasebandPlatform::timeSync(ulong long *,ulong long *)
AppleBasebandPlatform::timeSyncGated(ulong long *,ulong long *)
AppleBasebandPlatform::wakeInterrupt(IOInterruptEventSource *,int)
AppleBasebandPlatform__fn_0x5d0
AppleBasebandPlatform__fn_0x5d8
AppleBasebandPlatform__fn_0x5f0
AppleBasebandPlatform__fn_0x620
AppleBasebandPlatform__fn_0x628
AppleBasebandPlatform__fn_0x668
AppleBasebandPlatform__fn_0x680
AppleBasebandPlatform__fn_0x688
AppleBasebandPlatform__fn_0x6e0
AppleBasebandPlatform__fn_0x6e8
AppleBasebandPlatform__fn_0x6f8
AppleBasebandPlatform__getProperty_char_const___const
AppleBasebandUserClient::clientClose(void)
AppleBasebandUserClient::extAddFreqList(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extChargerDesense(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extClearFreqList(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extClose(AppleBaseband *,IOService *,IOExternalMethodArguments *)
AppleBasebandUserClient::extCoredumpModem(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extEnableTrace(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetBasebandProperty(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetBasebandState(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetEraseEFSDone(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetManagerState(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetModemDiagReady(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetModemReset(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetPmuExtOn(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extGetResetRequest(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extNotifyBasebandPoweringDown(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extOpen(AppleBaseband *,IOService *,IOExternalMethodArguments *)
AppleBasebandUserClient::extPPMEmergency(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extPmuExtOnConfigOverride(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extPowerCycle(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extRadioOn(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extRadioUsbOn(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extRemoveFreqList(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extReportThermalData(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extResetModem(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extSelfIdentify(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extSetBasebandProperty(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extSetBasebandState(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extSetHSICReady(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extSetManagerState(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::extTimeSync(AppleBaseband *,void *,IOExternalMethodArguments *)
AppleBasebandUserClient::start(IOService *)
AppleBasebandUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleBaseband__start_IOService
AppleBatteryAuth::_battAuthThreadGated(batt_auth_cmd *)
AppleBatteryAuth::_checkOperationStatus(uchar)
AppleBatteryAuth::_createReporters(void)
AppleBatteryAuth::_destroyReporters(void)
AppleBatteryAuth::_getCertificate(batt_auth_cmd *,OSData **)
AppleBatteryAuth::_getInfo(uchar,void *)
AppleBatteryAuth::_incrementChannel(uchar)
AppleBatteryAuth::_interfaceTryGet(void)
AppleBatteryAuth::_readGgResetCount(void)
AppleBatteryAuth::_smcAuthNotifierHandler(OSSymbol const*,OSObject *,ulong)
AppleBatteryAuth::_smcAuthNotifierHandlerThread(OSObject *)
AppleBatteryAuth::_smcReadKey(uint,ulong long,void *)
AppleBatteryAuth::_smcWriteKey(uint,ulong long,void *)
AppleBatteryAuth::_veridianPollAuthStatus(uint)
AppleBatteryAuth::authInit(OSObject *,void (*)(OSObject *,AppleAuthCPRelayInterface *,int,uchar,OSObject *))
AppleBatteryAuth::authSendData(uchar,OSData *)
AppleBatteryAuth::configureReport(IOReportChannelList *,uint,void *,void *)
AppleBatteryAuth::free(void)
AppleBatteryAuth::start(IOService *)
AppleBatteryAuth::updateReport(IOReportChannelList *,uint,void *,void *)
AppleBatteryAuth::withSMCFamily(AppleSMCFamily *,uint)
AppleBluetoothModule::amfmMessageHandler(void *,uint,IOService *,void *,ulong)
AppleBluetoothModule::amfmMessageHandlerGated(uint,IOService *,void *,ulong)
AppleBluetoothModule::amfmServiceNotifier(void *,IOService *,IONotifier *)
AppleBluetoothModule::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleBluetoothModule::coredumpModule(char const*)
AppleBluetoothModule::coredumpModuleGated(char const*)
AppleBluetoothModule::deepSleepVote(bool)
AppleBluetoothModule::flr(char const*)
AppleBluetoothModule::flrGated(char const*)
AppleBluetoothModule::flrGated(char const*)
AppleBluetoothModule::getWorkLoop(void)
AppleBluetoothModule::initCoreCapture(CCStreamLogLevel,CCStreamLogLevel)
AppleBluetoothModule::interruptActionTimeSync(IOInterruptEventSource *,int)
AppleBluetoothModule::interruptFilterTimeSync(IOFilterInterruptEventSource *)
AppleBluetoothModule::notifyPCIDeviceTransition(bool)
AppleBluetoothModule::notifyPCIDeviceTransitionGated(bool)
AppleBluetoothModule::pciDriverBlocker(void)
AppleBluetoothModule::pciDriverBlockerGated(void)
AppleBluetoothModule::pciDriverBlockerGated(void)
AppleBluetoothModule::powerCycleModule(char const*)
AppleBluetoothModule::powerCycleModuleGated(char const*)
AppleBluetoothModule::powerCycleModuleGated(char const*)
AppleBluetoothModule::powerModule(bool,char const*)
AppleBluetoothModule::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleBluetoothModule::quiesceGated(void)
AppleBluetoothModule::resetWorker(void)
AppleBluetoothModule::resetWorkerMain(void *,void *)
AppleBluetoothModule::setInitialModulePowerStateGated(void)
AppleBluetoothModule::setPowerState(ulong,IOService *)
AppleBluetoothModule::setProperties(OSObject *)
AppleBluetoothModule::setProperties(OSObject *)
AppleBluetoothModule::setupTimeSync(IOService *)
AppleBluetoothModule::start(IOService *)
AppleBluetoothModule::stop(IOService *)
AppleBluetoothModule::stop(IOService *)
AppleBluetoothModule::unquiesceGated(void)
AppleBluetoothModule::waitForPCIDriverGated(void)
AppleBluetoothModule::willTerminate(IOService *,uint)
AppleBluetoothModuleUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleBluetoothModuleUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleBluetoothModuleUserClient::start(IOService *)
AppleBringUpPMGR::MetaClass::alloc(void)
AppleBringUpPMGR::initDriver(IOService *)
AppleBringUpPMGR::initRegGroups(void)
AppleBringUpPMGR::initRegGroups(void)
AppleBringUpPMGR::initRegMaps(void)
AppleBringUpPMGR::~AppleBringUpPMGR()
AppleButtonsDispatchFunction::callFunction(void *,void *,void *)
AppleC26AuthProtocol::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26AuthProtocol::free(void)
AppleC26AuthProtocol::sendData(void const*,ulong long)
AppleC26AuthProtocol::start(IOService *)
AppleC26AuthProtocol::stop(IOService *)
AppleC26Charger::completeConfigSend(AppleC26DataStream *,void *,int)
AppleC26Charger::completePacketGated(int,uchar,OSObject *)
AppleC26Charger::completeTelegramGated(uchar)
AppleC26Charger::copyDeviceString(char const*,uchar)
AppleC26Charger::copyDeviceStringGated(char const*,uchar,OSString **)
AppleC26Charger::copyStreamProperty(uchar,uchar)
AppleC26Charger::copyStreamPropertyGated(uchar,uchar,OSData **)
AppleC26Charger::createDeviceStream(ushort,ushort,bool)
AppleC26Charger::createStringFromUTF16LE(void const*,ulong)
AppleC26Charger::dataStream(IOService *,uchar)
AppleC26Charger::getStreamData(uchar)
AppleC26Charger::handleClose(IOService *,uint)
AppleC26Charger::handleOpen(IOService *,uint,void *)
AppleC26Charger::newDataStream(void)
AppleC26Charger::newTelegramStream(void)
AppleC26Charger::publishCloakedState(bool,uchar)
AppleC26Charger::receiveConfigData(AppleC26DataStream *,void const*,ulong)
AppleC26Charger::receivePacketGated(uchar,AppleC26Packet *)
AppleC26Charger::registerDataStream(AppleC26DataStream *)
AppleC26Charger::registerDataStreamGated(AppleC26DataStream *)
AppleC26Charger::resetCommsCalloutGated(void)
AppleC26Charger::sendAckPacket(uchar,AppleC26Packet *)
AppleC26Charger::sendPacket(uchar,AppleC26Packet *)
AppleC26Charger::setConnectionStatusGated(bool)
AppleC26Charger::setStreamProperty(uchar,uchar,uchar const*,ulong)
AppleC26Charger::setUpCommsStreams(void)
AppleC26Charger::start(IOService *)
AppleC26Charger::stop(IOService *)
AppleC26Charger::tearDownCommsStreams(void)
AppleC26Charger::telegramStream(IOService *,uchar,ulong)
AppleC26Charger::unregisterDataStream(AppleC26DataStream *)
AppleC26Charger::unregisterDataStreamGated(AppleC26DataStream *)
AppleC26Charger::updateThermalProfile(uint)
AppleC26ChargerUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleC26ChargerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleC26ChargerUserClient::externalMethodGated(uint,IOExternalMethodArguments *)
AppleC26ChargerUserClient::receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26ChargerUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleC26ChargerUserClient::stop(IOService *)
AppleC26ConfigStream::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26ConfigStream::free(void)
AppleC26ConfigStream::sendData(void const*,ulong long)
AppleC26ConfigStream::start(IOService *)
AppleC26ConfigStream::stop(IOService *)
AppleC26DataStream::AppleC26DataStream(void)
AppleC26DataStream::MetaClass::alloc(void)
AppleC26DataStream::checkForWork(void)
AppleC26DataStream::completeSendData(int,OSObject *)
AppleC26DataStream::disable(void)
AppleC26DataStream::enable(void (*)(OSObject *,AppleC26DataStream*,void const*,ulong),void (*)(OSObject *,AppleC26DataStream*,void *,int))
AppleC26DataStream::free(void)
AppleC26DataStream::init(OSObject *,AppleC26Charger *,uchar)
AppleC26DataStream::initAndBuildPacket(AppleC26Packet *,uchar const*,ulong)
AppleC26DataStream::receivePacketFromController(AppleC26Packet *)
AppleC26DataStream::sendData(void const*,ulong,void *)
AppleC26DataStream::sendPacketToController(AppleC26Packet *,OSData *)
AppleC26DeviceStream::copyStreamProperty(uchar)
AppleC26DeviceStream::matchPropertyTable(OSDictionary *,int *)
AppleC26DeviceStream::setStreamProperty(uchar,uchar const*,ulong)
AppleC26DeviceStream::start(IOService *)
AppleC26DeviceStream::telegramStream(IOService *,ulong)
AppleC26DockInfo::start(IOService *)
AppleC26EA::_getDockTypeFromProtocolString(OSString *)
AppleC26EA::_getDockTypeFromSerialNumber(OSString *)
AppleC26EA::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26EA::_updateDockType(void)
AppleC26EA::copyDeviceDockType(void)
AppleC26EA::copyDeviceSerialNumber(void)
AppleC26EA::copyProtocolString(void)
AppleC26EA::free(void)
AppleC26EA::sendData(void const*,ulong long)
AppleC26EA::sessionClose(void)
AppleC26EA::sessionOpen(void)
AppleC26EA::start(IOService *)
AppleC26EA::stop(IOService *)
AppleC26HID::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26HID::free(void)
AppleC26HID::sendOutData(void const*,ulong long)
AppleC26HID::start(IOService *)
AppleC26HID::stop(IOService *)
AppleC26HIDWatch::_receiveData(AppleC26DataStream *,void const*,ulong)
AppleC26HIDWatch::sendOutData(void const*,ulong long)
AppleC26Packet::arePacketsSame(AppleC26Packet*,AppleC26Packet*)
AppleC26Packet::free(void)
AppleC26Packet::fromSerializedReceivePacket(uchar const*,ulong)
AppleC26Packet::getSerializedSendPacket(ulong long,ulong,uchar *,uint *)
AppleC26Packet::packetTooSmall(void)
AppleC26TelegramStream::AppleC26TelegramStream(void)
AppleC26TelegramStream::MetaClass::alloc(void)
AppleC26TelegramStream::completionHandler(OSObject *,AppleC26DataStream *,void *,int)
AppleC26TelegramStream::enable(void (*)(OSObject *,AppleC26DataStream *,void const*,ulong),void (*)(OSObject *,AppleC26DataStream *,void *,int))
AppleC26TelegramStream::free(void)
AppleC26TelegramStream::receivePacketFromController(AppleC26Packet *)
AppleC26TelegramStream::sendData(void const*,ulong,void *)
AppleCBTL1610::enterTestMode(void)
AppleCBTL1610::leaveTestMode(void)
AppleCBTL1610::setTestMode(bool)
AppleCBTL1610Companion::free(void)
AppleCBTL1610Companion::start(IOService *)
AppleCBTL1610Companion::usbDataConnect(uint,bool)
AppleCBTL1612::enterTestMode(bool)
AppleCBTL1614::assertBusResetGated(IOAccessoryIDBusTransport::IOAccessoryIDBusAssertType)
AppleCBTL1614::sendBreakGated(void)
AppleCBTL1614::sendBusResetGated(void)
AppleCBTL1614::startReorient(void)
AppleCLCD::MetaClass::alloc(void)
AppleCLPC::configureReport(IOReportChannelList *,uint,void *,void *)
AppleCLPC::handleUserClientMethod(clpc::UniquePtr<IOMemoryDescriptor,clpc::ObjectDeleter<IOMemoryDescriptor>> const&,clpc::UniquePtr<IOMemoryDescriptor,clpc::ObjectDeleter<IOMemoryDescriptor>> const&,uint &)
AppleCLPC::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleCLPC::setProperties(OSObject *)
AppleCLPC::start(IOService *)
AppleCLPC::start(IOService *)
AppleCLPC::start(IOService *)::$_2::__invoke(void *,void *,uint,IOService *,void *,ulong)
AppleCLPC::stop(IOService *)
AppleCLPC::updateReport(IOReportChannelList *,uint,void *,void *)
AppleCLPCUserClient::MetaClass::alloc(void)
AppleCLPCUserClient::clientClose(void)
AppleCLPCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleCLPCWorkLoop::MetaClass::alloc(void)
AppleCLPCWorkLoop::threadMain(void)
AppleCLPCWorkLoop::workLoop(void)
AppleCS35L27Amp::SetControl(uint,uint)
AppleCS35L27Amp::_configureClassDAmpSignalPath(CS35L27AmpDeviceID)
AppleCS35L27Amp::_getAmpConfiguration(CS35L27AmpDeviceID)
AppleCS35L27Amp::_getI2CDeviceIndex(CS35L27AmpDeviceID,uint &)
AppleCS35L27Amp::_getRegisterWriteOnlyBitsMask(uint,uint,uint &)
AppleCS35L27Amp::getUID(void)
AppleCS35L27Amp::setSampleRate(long long)
AppleCS35L27Amp::start(IOService *)
AppleCS35L27AmpDevice::AppleCS35L27AmpDevice(void)
AppleCS35L27AmpDevice::setGlobalEnable(CS35L27AmpGlobalEnableClient,bool)
AppleCS42L75MicBiasFunction::callFunction(void *,void *,void *)
AppleCS42L75TDMClockFunction::callFunction(void *,void *,void *)
AppleCS42L75TDMClockFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleCS42L77Audio::_configureADC(bool,bool)
AppleCS42L77Audio::_configureANCSources(bool)
AppleCS42L77Audio::_configureSpeakerARMFunc(bool,AppleCS42L7xAudio::CS42L7xClient)
AppleCS42L77Audio::_configureTxPath(AppleCS42L7xAudio::kCS42L7xASP,uint,bool,uint)
AppleCS42L77Audio::_enableDSPDebug2(bool)
AppleCS42L77Audio::_getANCMicSource(AppleCS42L7xAudio::kCS42L7xMic)
AppleCS42L77Audio::_initHawking(IOService *)
AppleCS42L77Audio::_setupAudioRoute(bool,AppleCS42L7xAudio::ASPDirection,AppleCS42L7xAudio::audioRouteStruct *,uchar,uint,bool)
AppleCS42L77Audio::handleStart(IOService *)
AppleCS42L77Audio::probe(IOService *,int *)
AppleCS42L77Audio::stop(IOService *)
AppleCS42L77AudioDSP::AppleCS42L77AudioDSP(void)
AppleCS42L77AudioDSP::_configureANCSources(bool)
AppleCS42L77AudioDSP::_copyPropertyInternal(OSString const*)
AppleCS42L77AudioDSP::_createIOReporters(void)
AppleCS42L77AudioDSP::_enableANCAsync(IOTimerEventSource *)
AppleCS42L77AudioDSP::_enableCLP(bool,bool)
AppleCS42L77AudioDSP::_enableCLPHighPower(bool,uint)
AppleCS42L77AudioDSP::_enableCLPHighPower(bool,uint)
AppleCS42L77AudioDSP::_enableHWService(bool)
AppleCS42L77AudioDSP::_enableHWService(bool)
AppleCS42L77AudioDSP::_enableSidetoneAsync(IOTimerEventSource *)
AppleCS42L77AudioDSP::_getANCFirmwareDictionary(OSDictionary *)
AppleCS42L77AudioDSP::_getCLPState(AppleCS42L77AudioDSP::CS42L77DSPState &)
AppleCS42L77AudioDSP::_getGetFirmwareMemorySection(OSDictionary *,char const*)
AppleCS42L77AudioDSP::_handleStart(IOService *)
AppleCS42L77AudioDSP::_handleStart(IOService *)
AppleCS42L77AudioDSP::_hardwareWillPowerOff(void)
AppleCS42L77AudioDSP::_setSideToneScaleConfigGated(uint,uint)
AppleCS42L77AudioDSP::_waitForDspActive(void)
AppleCS42L77AudioDSP::_writeAndVerifyMemorySection(OSDictionary *)
AppleCS42L77AudioDSP::_writeAndVerifyMultipleWord(uint,uchar const*,ulong long,uint)
AppleCS42L77AudioDSP::configureReport(IOReportChannelList *,uint,void *,void *)
AppleCS42L77AudioDSP::copyFirmwareRegisters(OSArray *)
AppleCS42L77AudioDSP::copyProperty(OSString const*)
AppleCS42L77AudioDSP::copyProperty(OSSymbol const*)
AppleCS42L77AudioDSP::copyProperty(char const*)
AppleCS42L77AudioDSP::dataBlockExchange(uint,uint,uint,void *)
AppleCS42L77AudioDSP::enableANCBlock(bool)
AppleCS42L77AudioDSP::enableHWService(bool)
AppleCS42L77AudioDSP::enableSidetone(bool)
AppleCS42L77AudioDSP::handleANCInterrupt(void)
AppleCS42L77AudioDSP::init(bool,OSDictionary *)
AppleCS42L77AudioDSP::isDSPMemoryAddressAccessible(uint)
AppleCS42L77AudioDSP::notifyCodecReset(void)
AppleCS42L77AudioDSP::requiresCodecReset(void)
AppleCS42L77AudioDSP::setProperties(OSObject *)
AppleCS42L77AudioDSP::setSideToneScaleConfig(uint,uint)
AppleCS42L77AudioDSP::stop(IOService *)
AppleCS42L77AudioDSP::updateReport(IOReportChannelList *,uint,void *,void *)
AppleCS42L77AudioDSP::writeFirmwareRegister(uint,uint)
AppleCS42L7xAOPLPMicInRequestARMFunction::callFunction(void *,void *,void *)
AppleCS42L7xAOPLPMicInRequestARMFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleCS42L7xAudio::_configureMCLKForClient(AppleCS42L7xAudioClients,bool)
AppleCS42L7xAudio::_enableAncInterrupt(bool)
AppleCS42L7xAudio::_enableMCLK(AppleCS42L7xAudio::kCS42L7xInputMCLK,bool,bool)
AppleCS42L7xAudio::_enableMixer(bool)
AppleCS42L7xAudio::_enablePCMBus(bool)
AppleCS42L7xAudio::_enablePDNAll(bool,bool)
AppleCS42L7xAudio::_getBiasTransitionDelay_ms(AppleCS42L7xAudio::CS42L7xMicBiasVoltage,AppleCS42L7xAudio::CS42L7xMicBiasVoltage)
AppleCS42L7xAudio::_getCurrentDataSources(bool,uint,bool *)
AppleCS42L7xAudio::_getLPMicConfigFromDeviceTree(char const*,uint (&)[4],uint &)
AppleCS42L7xAudio::_getLPMicConfigFromDeviceTree(char const*,uint (&)[4],uint &)
AppleCS42L7xAudio::_getLPMicsConfig(void)
AppleCS42L7xAudio::_isValidAOPLPMicRequestPacket(AOPLPMicCodecARMFuncRequest *)
AppleCS42L7xAudio::_isValidStateTransition(AppleCS42L7xAudio::AppleTempSensorState,AppleCS42L7xAudio::AppleTempSensorState)
AppleCS42L7xAudio::_validMicBiasParameters(uchar,AppleCS42L7xAudio::AppleTempSensorState)
AppleCS42L7xAudio::_waitUntilBiasRequestCompletes(void)
AppleCS42L7xAudio::configureTDMARMFunction(void *)
AppleCS42L7xAudio::getBlockControlDefault(uint,void *)
AppleCS42L7xAudio::getSupportedBitsPerSampleList(uint,uint *)
AppleCS42L7xAudio::getTrimGainIndex(uint)
AppleCS42L7xAudio::initMicConfig(void)
AppleCS42L7xAudio::messageClients(uint,void *,ulong)
AppleCS42L7xLdcmBypassRequestARMFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleCS42L7xMikeyBus::MetaClass::alloc(void)
AppleCS42L7xMikeyBus::codecAudioDeviceSetSampleRate(AppleCSCodecMikeyBusAudio *,long long,uint *,uint *)
AppleCS42L7xMikeyBus::codecAudioDeviceValidFormat(AppleCSCodecMikeyBusAudio *,uint,IOAudio2StreamRangedDescription const*)
AppleCS42L7xMikeyBus::handleStart(IOService *)
AppleCS42L7xMikeyBus::~AppleCS42L7xMikeyBus()
AppleCS46L0xAudio::AppleCS46L0xAudio(void)
AppleCS46L0xAudio::StartAudio(uint)
AppleCS46L0xAudio::StopAudio(uint)
AppleCS46L0xAudio::StopAudioGated(uint)
AppleCS46L0xAudio::_copyInputSourceControlMap(void)
AppleCS46L0xAudio::_copyInputSourceValueList(void)
AppleCS46L0xAudio::_getControlDictionary(uint)
AppleCS46L0xAudio::_getMicForSelector(uint,uint *)
AppleCS46L0xAudio::_getVolgaForSelector(uint,uint *)
AppleCS46L0xAudio::addHeadphoneDetectControl(OSArray *,bool)
AppleCS46L0xAudio::addMicDetectControl(OSArray *,bool)
AppleCS46L0xAudio::copySupportedBitsPerSampleList(uint *)
AppleCS46L0xAudio::copySupportedChannelCountList(uint,uint *)
AppleCS46L0xAudio::copySupportedSampleRateList(IOMikeyBusSampleRate *)
AppleCS46L0xAudio::deviceSupportsDirection(uint)
AppleCS46L0xAudio::diffAmpDeviceSupports(void)
AppleCS46L0xAudio::free(void)
AppleCS46L0xAudio::getControlValue(uint,uint)
AppleCS46L0xAudio::getDataExchangeBlock(uint,uint *,IOMemoryDescriptor **)
AppleCS46L0xAudio::getOutputVolumeAndMuteSettings(bool &,uint &)
AppleCS46L0xAudio::getTerminalType(uint)
AppleCS46L0xAudio::handleStart(IOService *)
AppleCS46L0xAudio::init(IOMikeyBusDevice *,OSDictionary *)
AppleCS46L0xAudio::moveBlockControlData(uint,uint,uint)
AppleCS46L0xAudio::notifyHPDetectChanged(bool,OSDictionary *)
AppleCS46L0xAudio::setControlValue(uint,uint,uint *)
AppleCS46L0xAudio::setDeviceSampleRate(IOMikeyBusSampleRate,uint *,uint *)
AppleCS46L0xAudio::setMultiControlValue(uint *,ulong long,uint *,ulong long *)
AppleCS46L0xAudio::willTerminate(IOService *,uint)
AppleCS46L0xButtons::AppleCS46L0xButtons(void)
AppleCS46L0xButtons::MetaClass::alloc(void)
AppleCS46L0xButtons::copyButtonEvent(uint)
AppleCS46L0xButtons::copyEvent(uint,IOHIDEvent *,uint)
AppleCS46L0xButtons::handleOpen(IOService *,uint,void *)
AppleCS46L0xButtons::handleStart(IOService *)
AppleCS46L0xButtons::mapEventToButtonIndex(AppleCS46L0xButtons::buttonEvent)
AppleCS46L0xDevice::MetaClass::alloc(void)
AppleCS46L0xDevice::_busRetainTimeoutHandler(IOTimerEventSource *)
AppleCS46L0xDevice::_chipReceive(uchar,uchar const*,ulong long)
AppleCS46L0xDevice::_chipSetSampleRate(uint,IOMikeyBusSampleRate)
AppleCS46L0xDevice::_copyPropertyAction(OSArray *)
AppleCS46L0xDevice::_doAccMgrTask(AppleCS46L0xDevice::IoAccMgrTask)
AppleCS46L0xDevice::_getTempSensor(void)
AppleCS46L0xDevice::_gpiReceive(uchar,uchar const*,ulong long)
AppleCS46L0xDevice::_hpReceive(uchar,uchar const*,ulong long)
AppleCS46L0xDevice::_hsBiasTimeoutHandler(IOTimerEventSource *)
AppleCS46L0xDevice::_hsDetectReceive(uchar,uchar const*,ulong long)
AppleCS46L0xDevice::_initHW(void)
AppleCS46L0xDevice::_otpReceive(uchar,uchar const*,ulong long)
AppleCS46L0xDevice::_receiveAccMgrMessageInternal(uint,IOService *,void *)
AppleCS46L0xDevice::_setPowerStateGated(ulong)
AppleCS46L0xDevice::_startBusRetainTimer(uint)
AppleCS46L0xDevice::_submitUngatedActionCallback(int ( {block_pointer})(void))
AppleCS46L0xDevice::_tempSensorEventCallback(IOHIDEventService *,void *,IOHIDEvent *,uint)
AppleCS46L0xDevice::_tempSensorMatchingCallback(void *,IOService *,IONotifier *)
AppleCS46L0xDevice::_threadCallback(void *)
AppleCS46L0xDevice::_ungatedActionThreadCallback(void *)
AppleCS46L0xDevice::copyProperty(char const*)
AppleCS46L0xDevice::eqSetDefault(void *)
AppleCS46L0xDevice::getAccVoltageFromOutputVolume(bool,uchar,bool)
AppleCS46L0xDevice::getDefaultHPandMicDetect(bool &,bool &)
AppleCS46L0xDevice::getRegisterForEndpoint(OSArray *,char const*,char const*,uint,uint,uchar)
AppleCS46L0xDevice::gpiGetState(uint)
AppleCS46L0xDevice::hasDefaultHPandMicDetect(void)
AppleCS46L0xDevice::i2cTransferComplete(void)
AppleCS46L0xDevice::isSupportedDirection(uint)
AppleCS46L0xDevice::message(uint,IOService *,void *)
AppleCS46L0xDevice::micCopyVolumeRange(void)
AppleCS46L0xDevice::notifyHPDetectChanged(bool,OSDictionary *)
AppleCS46L0xDevice::powerOn(bool)
AppleCS46L0xDevice::queueThreadCommand(AppleCS46L0xDevice::TheadCommand,void *,void *,void *,void *)
AppleCS46L0xDevice::releaseBus(void)
AppleCS46L0xDevice::resetDevice(void)
AppleCS46L0xDevice::retainBus(void)
AppleCS46L0xDevice::setPowerState(ulong,IOService *)
AppleCS46L0xDevice::setupAudio(bool,OSDictionary *)
AppleCS46L0xDevice::setupVendorSpecificMBInfo(OSArray *,char const*,char const*,uchar const*,uchar)
AppleCS46L0xDevice::sidetoneGetVolumeRange(long long *,long long *,uint *)
AppleCS46L0xDevice::stop(IOService *)
AppleCS46L0xDevice::updateVoltageSupported(bool,bool,uchar,bool)
AppleCS46L0xDevice::waitEventDoneInternal(IOCommandGate *,int *,ulong long,char const*)
AppleCS46L0xDevice::willTerminate(IOService *,uint)
AppleCS46L21AccessoryPS::initWithManager(IOAccessoryManager *)
AppleCS46L21AccessoryPS::start(IOService *)
AppleCS46L21AccessoryPort::UartDisable(void)
AppleCS46L21AccessoryPort::UartEnable(void)
AppleCS46L21AccessoryPort::UartSetBaudRate(uint)
AppleCS46L21AccessoryPort::UartStartAutoBaud(void)
AppleCS46L21AccessoryPort::getSerialConfig(uint *)
AppleCS46L21AccessoryPort::message(uint,IOService *,void *)
AppleCS46L21AccessoryPort::start(IOService *,IOAccessoryManager *)
AppleCS46L21AccessoryPort::transmitData(IOMemoryDescriptor *,uint)
AppleCS46L21AccessoryPort::transmitDataGated(IOMemoryDescriptor *,uint)
AppleCS46L21AccessoryPort::waitSendDone(uint)
AppleCS46L21AccessoryPort::waitSendDoneGated(uint)
AppleCS46L21AccessoryPort::willTerminate(IOService *,uint)
AppleCS46L21Audio::StartAudio(uint)
AppleCS46L21Audio::StopAudio(uint)
AppleCS46L21Audio::copySupportedBitsPerSampleList(uint *)
AppleCS46L21Audio::copySupportedChannelCountList(uint,uint *)
AppleCS46L21Audio::copySupportedDataFormatList(uint *)
AppleCS46L21Audio::copySupportedSampleRateList(IOMikeyBusSampleRate *)
AppleCS46L21Audio::copyTrafficChannelAssignment(uint)
AppleCS46L21Audio::getControlValue(uint,uint)
AppleCS46L21Audio::getTerminalType(uint)
AppleCS46L21Audio::setDeviceSampleRate(IOMikeyBusSampleRate,uint *,uint *)
AppleCS46L21Audio::stop(IOService *)
AppleCS46L21Audio::terminate(uint)
AppleCS46L21Audio::terminateInternal(void)
AppleCS46L21Audio::willTerminate(IOService *,uint)
AppleCS46L21AudioJack::handleMessage(uint,IOService *,void *)
AppleCS46L21AudioJack::message(uint,IOService *,void *)
AppleCS46L21AudioJack::start(IOService *,uint,bool)
AppleCS46L21AudioJack::stop(IOService *)
AppleCS46L21Audio__handleStart_IOService
AppleCS46L21Device::_endpointEnable(uchar,bool)
AppleCS46L21Device::_gpioCheckInputGated(uint)
AppleCS46L21Device::_gpioReceive(uint,AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_headsetDetectReceive(AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_i2cWriteControlGated(uchar,AppleCSMikeyBusI2CInterface::I2CSpeed)
AppleCS46L21Device::_kickoffTimerGated(void)
AppleCS46L21Device::_lineoutReceive(uint,AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_micReceive(uint,AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_receivePacket(IOMikeyBusBulkPipe *,void const*,ulong long)
AppleCS46L21Device::_rmeterReceive(AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_setI2CStayPowerOn(bool)
AppleCS46L21Device::_sidetoneReceive(AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_uartDisableGated(void)
AppleCS46L21Device::_uartReceive(AppleCS46L21Interface::CmdPacketHeader const*)
AppleCS46L21Device::_uartTransmitDataGated(uchar const*,ulong long)
AppleCS46L21Device::_waitAwake(void)
AppleCS46L21Device::copyL21Device(void)
AppleCS46L21Device::free(void)
AppleCS46L21Device::getHeadsetDetect(void)
AppleCS46L21Device::getUpstreamDock(void)
AppleCS46L21Device::lineoutGetVolumeRange(long long *,long long *,uint *)
AppleCS46L21Device::lineoutSetMute(bool)
AppleCS46L21Device::lineoutSetVolume(uchar)
AppleCS46L21Device::matchPropertyTable(OSDictionary *,int *)
AppleCS46L21Device::micEnable(uint,bool)
AppleCS46L21Device::micGetTrafficChannel(uint)
AppleCS46L21Device::micGetTrafficChannel(uint)
AppleCS46L21Device::micGetVolumeRange(long long *,long long *,uint *)
AppleCS46L21Device::micSetMute(uint,bool)
AppleCS46L21Device::micSetMute(uint,bool)
AppleCS46L21Device::micSetVolume(uint,uchar)
AppleCS46L21Device::resetHeadsetDetect(void)
AppleCS46L21Device::rmeterStart(void)
AppleCS46L21Device::setPowerState(ulong,IOService *)
AppleCS46L21Device::sidetoneGetVolumeRange(long long *,long long *,uint *)
AppleCS46L21Device::sidetoneSetMute(bool)
AppleCS46L21Device::sidetoneSetVolume(uchar)
AppleCS46L21Device::stop(IOService *)
AppleCS46L21Device::uartEnable(uint,bool)
AppleCS46L21Device::uartTransmitData(uchar const*,ulong long)
AppleCS46L21Device::uartTransmitWait(ulong long)
AppleCS46L21Device::willTerminate(IOService *,uint)
AppleCS46L21Device___gpioConfigureOutputGated_unsigned_int__bool
AppleCS46L21Dock30Pin::AppleCS46L21Dock30Pin(void)
AppleCS46L21Dock30Pin::MetaClass::alloc(void)
AppleCS46L21Dock30Pin::_detectAction(IOTimerEventSource *)
AppleCS46L21Dock30Pin::free(void)
AppleCS46L21Dock30Pin::getUpstreamManager(void)
AppleCS46L21Dock30Pin::message(uint,IOService *,void *)
AppleCS46L21Dock30Pin::setAccessoryPower(bool,bool,bool,bool,bool)
AppleCS46L21Dock30Pin::start(IOService *)
AppleCS46L21Dock30Pin::stop(IOService *)
AppleCS46L21Dock30Pin::willTerminate(IOService *,uint)
AppleCS46L21Dock9Pin::MetaClass::alloc(void)
AppleCS46L21Dock9Pin::_handleInterrupt(void)
AppleCS46L21Dock9Pin::_handleUSBHostPortAddedGated(IOService *)
AppleCS46L21Dock9Pin::_handleUSBHostPortMessage(void *,uint,IOService *,void *,ulong)
AppleCS46L21Dock9Pin::_handleUSBHostPortRemoved(void *,IOService *,IONotifier *)
AppleCS46L21Dock9Pin::_handleUSBHostPortRemovedGated(IOService *)
AppleCS46L21Dock9Pin::_lookupUSBPortOrderedSet(IOService *)
AppleCS46L21Dock9Pin::_receiveDockADC(AppleCS46L21Interface::GetDockAdcMessage *)
AppleCS46L21Dock9Pin::free(void)
AppleCS46L21Dock9Pin::getPowerModeCurrentLimit(IOAccessoryPowerMode)
AppleCS46L21Dock9Pin::getPrimaryPortID(void)
AppleCS46L21Dock9Pin::getTransportAvailable(IOAccessoryTransportType)
AppleCS46L21Dock9Pin::getTransportUpstreamPassthrough(IOAccessoryTransportType)
AppleCS46L21Dock9Pin::getUpstreamManager(void)
AppleCS46L21Dock9Pin::messageClients(uint,void *,ulong)
AppleCS46L21Dock9Pin::readBrickID(int *)
AppleCS46L21Dock9Pin::readRegs(uchar,uchar *,ulong long)
AppleCS46L21Dock9Pin::setAccessoryPower(bool,bool,bool,bool,bool)
AppleCS46L21Dock9Pin::setUsbDeviceStack(void)
AppleCS46L21Dock9Pin::stop(IOService *)
AppleCS46L21Dock9Pin::usbCCEnable(bool)
AppleCS46L21Dock9Pin::willTerminate(IOService *,uint)
AppleCS46L21Dock9Pin::writeRegs(uchar,uchar const*,ulong long)
AppleCS46L21Dock9Pin::~AppleCS46L21Dock9Pin()
AppleCS46L21IDBD::_getAdcCodeGated(void)
AppleCS46L21IDBD::_gpioCheckInputGated(uint)
AppleCS46L21IDBD::_gpioConfigureOutputGated(uint,bool)
AppleCS46L21IDBD::_i2cStartTransferGated(ulong long,uchar const*,ulong long)
AppleCS46L21IDBD::getUpstreamDock(void)
AppleCS46L21IDBD::start(IOService *)
AppleCS46L21IDPT::_completeIDBusCommand(void *,int)
AppleCS46L21IDPT::_copyMBDeviceGated(AppleCS46L21Device **)
AppleCS46L21IDPT::_detachFromIDBus(void)
AppleCS46L21IDPT::_enableMBEndpointGated(bool)
AppleCS46L21IDPT::_enableMBGated(bool)
AppleCS46L21IDPT::_endpointEnable(uchar,bool)
AppleCS46L21IDPT::_gpioCheckInputGated(uint)
AppleCS46L21IDPT::_gpioConfigureInputGated(uint,AppleCS46L21Interface::GPIOInterruptType,AppleCS46L21Interface::GPIOPUPDType,bool)
AppleCS46L21IDPT::_gpioConfigureOutputGated(uint,bool)
AppleCS46L21IDPT::_i2cStartTransferGated(ulong long,uchar const*,ulong long)
AppleCS46L21IDPT::_mbSendMessageToClients(void)
AppleCS46L21IDPT::_mbSendMessageToClientsGated(void)
AppleCS46L21IDPT::_registerMBDeviceGated(AppleCS46L21Device *)
AppleCS46L21IDPT::_startTransfer(AppleCS46L21IDPT::IDIO_Cmd_Packet *,ulong long,ulong long)
AppleCS46L21IDPT::_unregisterMBDeviceGated(AppleCS46L21Device *)
AppleCS46L21IDPT::copyL21Device(void)
AppleCS46L21IDPT::enableMikeyBus(bool)
AppleCS46L21IDPT::free(void)
AppleCS46L21IDPT::getUpstreamDock(void)
AppleCS46L21IDPT::init(AppleCS46L21Device *,IOMikeyBusDockPort *)
AppleCS46L21IDPT::mbRegister(AppleCS46L21Device *)
AppleCS46L21IDPT::mbUnregister(AppleCS46L21Device *)
AppleCS46L21IDPT::start(IOService *)
AppleCS46L21IDPT::stop(IOService *)
AppleCS46L21Interface::getAdcCode(void)
AppleCS46L21Interface::gpioCheckInput(uint)
AppleCS46L21Interface::gpioConfigureInput(uint,AppleCS46L21Interface::GPIOInterruptType,AppleCS46L21Interface::GPIOPUPDType,bool)
AppleCS46L21Interface::gpioConfigureOutput(uint,bool)
AppleCS46L21Interface::isHeadsetMicDetected(void)
AppleCS46L21Interface::isMikeyIDValid(void)
AppleCSCodecMikeyBus::AudioDeviceReloadConfig(IOAudio2Device *)
AppleCSCodecMikeyBus::RegisterLineOut(uchar,uchar)
AppleCSCodecMikeyBus::UnregisterLineOut(void)
AppleCSCodecMikeyBus::getActiveAudioDeviceDirection(bool)
AppleCSCodecMikeyBus::getAudioDeviceSupportedSampleRate(AppleCSCodecMikeyBusAudio *,IOMikeyBusSampleRate)
AppleCSCodecMikeyBus::handleStart(IOService *)
AppleCSCodecMikeyBus::init(OSDictionary *,uint,AppleARMIISDevice *)
AppleCSCodecMikeyBus::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleCSCodecMikeyBus::setPowerState(ulong,IOService *)
AppleCSCodecMikeyBus::stop(IOService *)
AppleCSCodecMikeyBusAudio::free(void)
AppleCSCodecMikeyBusAudio::getAudioStreamTerminalType(uint,uint)
AppleCSCodecMikeyBusAudio::getBlockControlBuffer(uint,uint *,IOMemoryDescriptor **)
AppleCSCodecMikeyBusAudio::getDataExchangeBlock(uint,uint *,IOMemoryDescriptor **)
AppleCSCodecMikeyBusAudio::getIsSupportedFormat(uint,uint,IOAudio2StreamRangedDescription const*)
AppleCSCodecMikeyBusAudio::getMikeyBusChannels(uint,uint *)
AppleCSCodecMikeyBusAudio::getSupportedChannelCountList(uint,uint *)
AppleCSCodecMikeyBusAudio::init(void)
AppleCSCodecMikeyBusAudio::moveBlockControlData(uint,uint,uint)
AppleCSCodecMikeyBusAudio::performConfigChange(IOAudio2Notification *)
AppleCSCodecMikeyBusAudio::reloadConfig(void)
AppleCSCodecMikeyBusAudio::setControlValue(uint,uint,uint *)
AppleCSCodecMikeyBusAudio::setDeviceDataFormat(uint,AppleARMDMAAudioDevice::DataFormatType)
AppleCSCodecMikeyBusAudio::setDeviceFormat(uint,uint,uint)
AppleCSCodecMikeyBusAudio::setDeviceSampleRate(long long,uint *,uint *)
AppleCSCodecMikeyBusAudio::setMultiControlValue(uint *,uint *,ulong long,ulong long *)
AppleCSCodecMikeyBusAudio::sizeofZeroFilledBuffer_ms(bool *)
AppleCSCodecMikeyBusAudio::start(IOService *)
AppleCSCodecMikeyBusAudio::startAudio(uint)
AppleCSCodecMikeyBusAudio::startTransportComplete(void)
AppleCSCodecMikeyBusAudio::stop(IOService *)
AppleCSCodecMikeyBusAudio::stopAudio(uint)
AppleCSCodecMikeyBusV11::CreateRootPort(void)
AppleCSCodecMikeyBusV11::DisableController(void)
AppleCSCodecMikeyBusV11::EnableController(void)
AppleCSCodecMikeyBusV11::FlushDownlinkBulkData(void)
AppleCSCodecMikeyBusV11::FlushUplinkBulkData(void)
AppleCSCodecMikeyBusV11::GetDownlinkBulkDataBufferAvailable(ulong long *)
AppleCSCodecMikeyBusV11::GetTrafficChannelRange(uint,uchar *,uchar *)
AppleCSCodecMikeyBusV11::LineOutStart(uint,IOMikeyBusSampleRate)
AppleCSCodecMikeyBusV11::LineOutStop(void)
AppleCSCodecMikeyBusV11::SendDownlinkBulkData(void const*,ulong long *)
AppleCSCodecMikeyBusV11::SetDifferentialAmplitude(diffAmpValue)
AppleCSCodecMikeyBusV11::flushBulkData(bool)
AppleCSCodecMikeyBusV11::getBulkStatus(uchar *,uchar *,uchar *)
AppleCSCodecMikeyBusV11::handleUplinkData(uchar *,uchar *)
AppleCSCodecMikeyBusV11::init(OSDictionary *,uint,AppleARMIISDevice *,AppleARMFunction *)
AppleCSCodecMikeyBusV11::interruptAction(void)
AppleCSCodecMikeyBusV11::setupThresholds(void)
AppleCSCodecMikeyBusV11::transferBroadcastData(bool)
AppleCSHTDCodecMikey::mikeyChangingHPOUTEnabled(bool)
AppleCSI2CController::didTerminate(IOService *,uint,bool *)
AppleCSI2CController::executeIICCommand(AppleARMIICCommand *)
AppleCSI2CController::matchPropertyTable(OSDictionary *,int *)
AppleCSI2CController::setIICControllerActive(bool)
AppleCSI2CController::setPowerState(ulong,IOService *)
AppleCSI2CController::setStayPowerOn(IOService *,bool)
AppleCSI2CController::setStayPowerOnGated(IOService *,bool)
AppleCSI2CController::start(IOService *)
AppleCSI2CController::stop(IOService *)
AppleCSI2CController::willTerminate(IOService *,uint)
AppleCSI2CDevice::start(IOService *)
AppleCSMikeyBusI2CInterface::i2cStartTransfer(ulong long,uchar const*,ulong long)
AppleCSMikeyBusI2CInterface::i2cWriteControl(uchar,AppleCSMikeyBusI2CInterface::I2CSpeed)
AppleCSMikeyBusI2CInterface::start(IOService *)
AppleCSSPIAudio::_maskWriteReg(ushort,uchar,uchar)
AppleCSSPIAudio::_readMultiple(ushort,uchar *,ulong long,bool)
AppleCSSPIAudio::_readReg(ushort)
AppleCSSPIAudio::_writeMultiple(ushort,uchar const*,ulong long,bool)
AppleCSSPIAudio::_writeReg(ushort,uchar)
AppleCSSPIAudio::debugCopyRegisters(bool)
AppleCSSPIAudio::probe(IOService *,int *)
AppleCSSPIv2Audio::_enableControlI2C(bool)
AppleCSSPIv2Audio::_enableControlPLL(bool)
AppleCSSPIv2Audio::_initializeCodecRegisters(void)
AppleCSSPIv2Audio::_maskWriteReg(uint,uint,uint)
AppleCSSPIv2Audio::_maskWriteRegNoIncrement(uint,uint,uint)
AppleCSSPIv2Audio::_readControlReg(uchar,bool)
AppleCSSPIv2Audio::_readDataBlock(ulong long,ulong long,bool,uchar *,bool)
AppleCSSPIv2Audio::_readMultiple(uint,uchar *,ulong long,bool)
AppleCSSPIv2Audio::_readMultipleWord(uint,uchar *,ulong long,bool)
AppleCSSPIv2Audio::_readReg(uint)
AppleCSSPIv2Audio::_readReg(uint,uint &)
AppleCSSPIv2Audio::_readRegNoIncrement(uint)
AppleCSSPIv2Audio::_writeControlReg(uchar,uchar,bool)
AppleCSSPIv2Audio::_writeDataBlock(uint,ulong long,bool,uchar const*,bool)
AppleCSSPIv2Audio::_writeMultiple(uint,uchar const*,ulong long,bool)
AppleCSSPIv2Audio::_writeMultipleWord(uint,uchar const*,ulong long,bool)
AppleCSSPIv2Audio::_writeReg(uint,uint)
AppleCSSPIv2Audio::_writeRegNoIncrement(uint,uint)
AppleCSSPIv2Audio::debugWriteRegister(uint,uint)
AppleCSSPIv2Audio::free(void)
AppleCSSPIv2Audio::init(OSDictionary *,uint const*)
AppleCT711::MetaClass::alloc(void)
AppleCT711::calculateLux(uint *,uchar)
AppleCT711::dumpALSCalData(void)
AppleCT711::getReportInterval(void)
AppleCT711::handleInterrupt(void)
AppleCT711::handleStart(IOService *)
AppleCT711::probe(IOService *,int *)
AppleCT711::rescaleChannels(uint *,uint *,uchar)
AppleCT711::setALSReportInterval(uint)
AppleCT711::setPropertiesGated(OSObject *)
AppleCT711::setSensorEnabled(bool)
AppleCT711::~AppleCT711()
AppleCT819::MetaClass::alloc(void)
AppleCT819::_calculateAmbient(ushort *,ushort *)
AppleCT819::_handleInterrupt(void)
AppleCT819::_reportAmbientLightLevel(uint,uint,uint)
AppleCT819::_setALSReportingInterval(uint)
AppleCT819::_setReportingThresholdPercentage(uint)
AppleCT819::_updateThresholdRegisters(uint,uint)
AppleCT819::dumpALSCalData(void)
AppleCT819::handleStart(IOService *)
AppleCT819::probe(IOService *,int *)
AppleCT819::readSensorData(ushort *,ushort *,uint *)
AppleCT819::setPropertiesGated(OSObject *)
AppleCT819::setSensorEnabled(bool)
AppleCT819::~AppleCT819()
AppleCT821::MetaClass::alloc(void)
AppleCT821::_calculateAmbient(uint *,uint *)
AppleCT821::_handleInterrupt(void)
AppleCT821::_handleTimerExpired(void)
AppleCT821::_pickGain(bool)
AppleCT821::_reportAmbientLightLevel(uint,uint,uint)
AppleCT821::_resetThresholdRegisters(int,int)
AppleCT821::_setALSReportingInterval(uint)
AppleCT821::_setReportingThresholdPercentage(uint)
AppleCT821::_updateDynamicGain(uint,uint)
AppleCT821::_updateThresholdRegisters(uint,uint)
AppleCT821::dumpALSCalData(void)
AppleCT821::getReportInterval(void)
AppleCT821::handleStart(IOService *)
AppleCT821::probe(IOService *,int *)
AppleCT821::readSensorData(ushort *,ushort *,uint *)
AppleCT821::readSensorData32(uint *,uint *,uint *)
AppleCT821::setALSGain(ushort)
AppleCT821::setALSGainWithReg(ushort)
AppleCT821::setPropertiesGated(OSObject *)
AppleCT821::setSensorEnabled(bool)
AppleCT821::~AppleCT821()
AppleCallistoPacket::ack(void)
AppleCallistoPacket::getSerializedSendPacket(ulong long,ulong,uchar *,uint *)
AppleCallistoPacket::nack(void)
AppleCallistoPacket::nackCode(void)
AppleCallistoTelegramStream::MetaClass::alloc(void)
AppleCallistoTelegramStream::completeSendTelegram(AppleC26Packet *)
AppleCallistoTelegramStream::completeSendTelegramGated(AppleC26Packet *)
AppleCallistoTelegramStream::free(void)
AppleCallistoTelegramStream::init(OSObject *,AppleC26Charger *,uchar,ulong)
AppleCallistoTelegramStream::receivePacketFromController(AppleC26Packet *)
AppleCallistoTelegramStream::sendData(void const*,ulong,void *)
AppleCallistoTelegramStream::sendDataGated(void const*,ulong,void *)
AppleCallistoTelegramStream::sendTelegramToController(void const*,ulong,OSData *)
AppleCallistoTelegramStream::telegramFailed(AppleC26Packet *)
AppleCallistoTelegramStream::trySendingTelegramGated(void)
AppleConvergedIPCBBControl::checkDARTAddress(ulong long,ulong long)
AppleConvergedIPCBTAdapter::closeInterface(IOService *,uint)
AppleConvergedIPCBTAdapter::openInterface(IOService *,uint,void *)
AppleConvergedIPCBTIDevice::createSetupInterface(void)
AppleConvergedIPCBTIDevice::errorCallback(void *,acipcErrorType,void *,void *)
AppleConvergedIPCBTIDevice::excludePatchFromMMIOCoredump(void)
AppleConvergedIPCBTIDevice::free(void)
AppleConvergedIPCBTIDevice::getDMATransferPhysicalAddress(IODMACommand *,ulong long *)
AppleConvergedIPCBTIDevice::prepareForMMIOCoredump(void)
AppleConvergedIPCBTIDevice::resetAllowed(void)
AppleConvergedIPCBTIDevice::start(IOService *)
AppleConvergedIPCBTIDevice::start(IOService *)
AppleConvergedIPCBTIDevice::stop(IOService *)
AppleConvergedIPCBTIDevice::stop(IOService *)
AppleConvergedIPCBTIDevice::terminate(uint)
AppleConvergedIPCBTIDevice::terminateInterface(void)
AppleConvergedIPCBTIInterface::attach(IOService *)
AppleConvergedIPCBTIInterface::close(IOService *,uint)
AppleConvergedIPCBTIInterface::closeGated(IOService *,uint)
AppleConvergedIPCBTIInterface::detach(IOService *)
AppleConvergedIPCBTIInterface::errorCallback(void *,acipcErrorType,void *,void *)
AppleConvergedIPCBTIInterface::finishImageCommand(IODMACommand **)
AppleConvergedIPCBTIInterface::prepareImageCommand(IOMemoryDescriptor *,IODMACommand **)
AppleConvergedIPCBTIInterface::prepareImageCommandGated(IOMemoryDescriptor *,IODMACommand **)
AppleConvergedIPCBTIInterface::readRegisterGated(AppleConvergedIPCBTIInterface::rParams *)
AppleConvergedIPCBTIInterface::sendImageCompletionCallback(void *,int,uint,uint)
AppleConvergedIPCBTIInterface::sendImageCompletionFunction(int,uint,uint)
AppleConvergedIPCBTIInterface::sendImageCompletionGated(int,uint,uint)
AppleConvergedIPCBTIInterface::sendImageGated(AppleConvergedIPCBTIInterface::tParams *)
AppleConvergedIPCBTIInterface::start(IOService *)
AppleConvergedIPCBTIInterface::start(IOService *)
AppleConvergedIPCBTIInterface::stop(IOService *)
AppleConvergedIPCBTIInterface::stop(IOService *)
AppleConvergedIPCBTIInterface::synchronousCompletion(void *,void *,int,ulong long,void *)
AppleConvergedIPCBTIInterface::synchronousFunction(void *,int,ulong long,void *)
AppleConvergedIPCBTIInterface::terminate(uint)
AppleConvergedIPCControl::IOMMUMapRange(ulong long *,uint *)
AppleConvergedIPCControl::asyncCallback(void *,void (*)(void *,void *),void *,void *)
AppleConvergedIPCControl::asyncEventHandler(IOInterruptEventSource *,int)
AppleConvergedIPCControl::asyncFunction(void (*)(void *,void *),void *,void *)
AppleConvergedIPCControl::asyncThreadCall(void *,void *)
AppleConvergedIPCControl::asyncThreadCallGated(void)
AppleConvergedIPCControl::bounceImageIn(IOMemoryDescriptor *,IODMACommand *,ulong long)
AppleConvergedIPCControl::clearDMATransfer(IODMACommand **)
AppleConvergedIPCControl::close(IOService *,uint)
AppleConvergedIPCControl::configureReport(IOReportChannelList *,uint,void *,void *)
AppleConvergedIPCControl::configureReportGated(IOReportChannelList *,uint,void *,void *)
AppleConvergedIPCControl::createDeviceCallback(void *,bool,uint)
AppleConvergedIPCControl::createSetupControl(void)
AppleConvergedIPCControl::deviceWakeCallback(void *,bool)
AppleConvergedIPCControl::deviceWakeDeadTimeSample(void)
AppleConvergedIPCControl::deviceWakeDeadTimeWait(void)
AppleConvergedIPCControl::deviceWakeFunction(bool)
AppleConvergedIPCControl::disableLockPort(void)
AppleConvergedIPCControl::disableLockPortGated(void)
AppleConvergedIPCControl::enableUnlockPort(void)
AppleConvergedIPCControl::enableUnlockPortGated(void)
AppleConvergedIPCControl::enqueueAsyncEvent(IOService *,void *)
AppleConvergedIPCControl::errorCallback(void *,acipcErrorType,void *,void *)
AppleConvergedIPCControl::finishImageCommand(IODMACommand **)
AppleConvergedIPCControl::flrRequired(void)
AppleConvergedIPCControl::getDMATransferPhysicalAddress(IODMACommand *,ulong long *)
AppleConvergedIPCControl::getMSIAddress(void)
AppleConvergedIPCControl::getMSIData(void)
AppleConvergedIPCControl::getMapper(void)
AppleConvergedIPCControl::handleAER(IOPCIEventSource *,IOPCIEvent *)
AppleConvergedIPCControl::handlePCIMessage(uint)
AppleConvergedIPCControl::handleQuiesceUnQuiesceGated(bool)
AppleConvergedIPCControl::handleTLPCompletionTimeoutGated(void)
AppleConvergedIPCControl::handleTimeSyncGated(ulong long *)
AppleConvergedIPCControl::handleTimeSyncGated(ulong long *)
AppleConvergedIPCControl::isDeviceAccessibleCallback(void *)
AppleConvergedIPCControl::isDeviceAccessibleFunction(void)
AppleConvergedIPCControl::linkStateUpCallback(void *,ulong long *,ulong long *,uint *,uint *)
AppleConvergedIPCControl::loggerKnob(uint,uint,void *,void *)
AppleConvergedIPCControl::msiFilter0(OSObject *,IOFilterInterruptEventSource *)
AppleConvergedIPCControl::msiInterrupt0(OSObject *,IOInterruptEventSource *,int)
AppleConvergedIPCControl::pciMessage(void *,uint,IOService *,void *,ulong)
AppleConvergedIPCControl::pciMessageThreadCall(void *,void *)
AppleConvergedIPCControl::pciMessageThreadCallGated(void *)
AppleConvergedIPCControl::pciMessageThreadCallGated(void *)
AppleConvergedIPCControl::portChangeCallback(void *,bool,int)
AppleConvergedIPCControl::portChangeFunction(bool,int)
AppleConvergedIPCControl::portManualEnableCallback(void *,bool)
AppleConvergedIPCControl::portManualEnableFunction(bool)
AppleConvergedIPCControl::portQuiesceWaitCallback(void *,bool,void *)
AppleConvergedIPCControl::portQuiesceWaitFunction(bool,void *)
AppleConvergedIPCControl::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleConvergedIPCControl::prepareDMATransfer(IOMemoryDescriptor *,IODMACommand **)
AppleConvergedIPCControl::prepareImageCommand(IOMemoryDescriptor *,AppleConvergedIPCIODirection,IODMACommand **)
AppleConvergedIPCControl::providerMessage(void *,uint,IOService *,void *,ulong)
AppleConvergedIPCControl::queueLogBuffer(IOMemoryDescriptor *,IOACIPCCompletion *,bool)
AppleConvergedIPCControl::quiesceAckCallback(void *,bool)
AppleConvergedIPCControl::quiesceAckFunction(bool)
AppleConvergedIPCControl::releaseProviderService(void)
AppleConvergedIPCControl::serviceNotifier(void *,IOService *,IONotifier *)
AppleConvergedIPCControl::setBootStage(acipcBootStage)
AppleConvergedIPCControl::setPowerState(ulong,IOService *)
AppleConvergedIPCControl::sleepAckCallback(void *)
AppleConvergedIPCControl::sleepAckFunction(void)
AppleConvergedIPCControl::sleepWakeHandler(void *,uint,IOService *,void *,ulong)
AppleConvergedIPCControl::start(IOService *)
AppleConvergedIPCControl::stateDump(void)
AppleConvergedIPCControl::terminateDevice(void)
AppleConvergedIPCControl::timerCallback(void *,void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCControl::timerCompletion(IOTimerEventSource *)
AppleConvergedIPCControl::timerFunction(void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCControl::timesyncCallback(void *,ulong long,uint,int)
AppleConvergedIPCControl::timesyncFunction(ulong long,uint,int)
AppleConvergedIPCControl::timesyncTimerCallback(void *,void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCControl::timesyncTimerCompletion(IOTimerEventSource *)
AppleConvergedIPCControl::timesyncTimerFunction(void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCControl::updateReport(IOReportChannelList *,uint,void *,void *)
AppleConvergedIPCControl::updateReportGated(IOReportChannelList *,uint,void *,void *)
AppleConvergedIPCControl::waitIfLinkUnavailable(void)
AppleConvergedIPCControl::waitIfLinkUnavailableGated(void)
AppleConvergedIPCControlReporter::addReporters(IOService *,OSSet *,IOReportLegend *)
AppleConvergedIPCControlReporter::createReporterAER(IOService *)
AppleConvergedIPCControlReporter::createReporterInterrupt(IOService *)
AppleConvergedIPCControlReporter::createReporterLogging(IOService *)
AppleConvergedIPCControlReporter::createReporterQuiesceActivity(IOService *)
AppleConvergedIPCControlReporter::createReporterState(IOService *)
AppleConvergedIPCControlReporter::createReporterStateCurrent(IOService *)
AppleConvergedIPCControlReporter::free(void)
AppleConvergedIPCControlReporter::init(void)
AppleConvergedIPCControlReporter::reportAER(acipcAERErrorType)
AppleConvergedIPCControlReporter::reportInterfaceEvent(uint,AppleConvergedIPCControlReporter::InterfaceEventCode)
AppleConvergedIPCControlReporter::reportLog(ulong)
AppleConvergedIPCControlReporter::reportLogDrop(ulong)
AppleConvergedIPCControlReporter::reportStateChange(AppleConvergedIPCControlReporter::StateIndex)
AppleConvergedIPCControlReporter::updateReport(IOReportChannelList *,uint,void *,void *)
AppleConvergedIPCControlUserClient::MetaClass::alloc(void)
AppleConvergedIPCControlUserClient::_loggerKnob(AppleConvergedIPCControlUserClient*,void *,IOExternalMethodArguments *)
AppleConvergedIPCControlUserClient::clientClose(void)
AppleConvergedIPCControlUserClient::clientCloseGated(void)
AppleConvergedIPCControlUserClient::close(IOService *,uint)
AppleConvergedIPCControlUserClient::closeGated(IOService *,uint)
AppleConvergedIPCControlUserClient::didTerminate(IOService *,uint,bool *)
AppleConvergedIPCControlUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleConvergedIPCControlUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleConvergedIPCControlUserClient::loggerKnob(uint,uint,void *,void *)
AppleConvergedIPCControlUserClient::open(IOService *,uint,void *)
AppleConvergedIPCControlUserClient::openGated(IOService *,uint,void *)
AppleConvergedIPCControlUserClient::readLogs(ulong long,ulong long,bool,IOACIPCCompletion *)
AppleConvergedIPCControlUserClient::start(IOService *)
AppleConvergedIPCControlUserClient::start(IOService *)
AppleConvergedIPCControlUserClient::stop(IOService *)
AppleConvergedIPCControlUserClient::terminate(uint)
AppleConvergedIPCControlUserClient::willTerminate(IOService *,uint)
AppleConvergedIPCDevice::AppleConvergedIPCDevice(OSMetaClass const*)
AppleConvergedIPCDevice::isSkywalkEnabled(void)
AppleConvergedIPCICEBBControl__fn_0x658
AppleConvergedIPCICEBBControl__fn_0x668
AppleConvergedIPCICEBBControl__fn_0x670
AppleConvergedIPCICEBBControl__fn_0x698
AppleConvergedIPCICEBBControl__fn_0x6c8
AppleConvergedIPCICEBBControl__fn_0x720
AppleConvergedIPCICEBBControl__fn_0x728
AppleConvergedIPCICEBBControl__fn_0x748
AppleConvergedIPCICEBBControl__fn_0x778
AppleConvergedIPCICEBBControl__fn_0x780
AppleConvergedIPCICEBBControl__fn_0x788
AppleConvergedIPCICEBBControl__fn_0x790
AppleConvergedIPCICEBBRTIDevice__fn_0x6a8
AppleConvergedIPCICEBBRTIDevice__fn_0x6c0
AppleConvergedIPCICEBBRTIDevice__fn_0x740
AppleConvergedIPCICEBBRTIDevice__free
AppleConvergedIPCICEBBRTIInterface__timesyncGated_AppleConvergedIPCICEBBRTIInterface__timesyncParams
AppleConvergedIPCIOCommand::MetaClass::alloc(void)
AppleConvergedIPCIOCommand::cancel(void)
AppleConvergedIPCIOCommand::cleanCommandParamters(void)
AppleConvergedIPCIOCommand::complete(void)
AppleConvergedIPCIOCommand::finish(void)
AppleConvergedIPCIOCommand::free(void)
AppleConvergedIPCIOCommand::initWithPool(AppleConvergedIPCIOCommandPool *)
AppleConvergedIPCIOCommand::ioCompletionCallback(void *,int,uint)
AppleConvergedIPCIOCommand::ioCompletionFunction(int,uint)
AppleConvergedIPCIOCommand::ioCompletionFunction(int,uint)
AppleConvergedIPCIOCommand::prepare(AppleConvergedIPCRequest *,AppleConvergedIPCIOCommand*)
AppleConvergedIPCIOCommand::setIO(ulong long,ulong long,ulong long,bool,bool,acipcIOQueue *)
AppleConvergedIPCInterface::MetaClass::alloc(void)
AppleConvergedIPCInterface::compareProp(OSDictionary *,OSSymbol const*)
AppleConvergedIPCInterface::getCommandGate(void)
AppleConvergedIPCInterface::getIOCommand(void)
AppleConvergedIPCInterface::getMaxChunkSize(void)
AppleConvergedIPCInterface::isSkywalkEnabled(void)
AppleConvergedIPCInterface::matchPropertyTable(OSDictionary *,int *)
AppleConvergedIPCLogger::completeHeadLogBuffer(void)
AppleConvergedIPCLogger::completeHeadLogBuffer(void)
AppleConvergedIPCLogger::createLogBufferQueue(void)
AppleConvergedIPCLogger::debugAllowed(void)
AppleConvergedIPCLogger::deregisterUserKnob(uint,uint,OSObject *)
AppleConvergedIPCLogger::flushLogBufferQueue(void)
AppleConvergedIPCLogger::free(void)
AppleConvergedIPCLogger::free(void)
AppleConvergedIPCLogger::freeLogBufferQueue(void)
AppleConvergedIPCLogger::initWithReporter(AppleConvergedIPCControlReporter *)
AppleConvergedIPCLogger::log(ACIPCLogLevel,ACIPCLogLevel,bool,char const*,...)
AppleConvergedIPCLogger::log(ACIPCLogLevel,ACIPCLogLevel,bool,char const*,...)
AppleConvergedIPCLogger::logBinary(ACIPCLogLevel,ACIPCLogLevel,bool,char const*,char const*,void const*,uint,char const*)
AppleConvergedIPCLogger::logDoorbellRing(ushort,uint)
AppleConvergedIPCLogger::logDoorbellTimerFire(void)
AppleConvergedIPCLogger::logDoorbellTimerStart(ulong long)
AppleConvergedIPCLogger::logIPCStateChange(uchar,uchar)
AppleConvergedIPCLogger::logMMIO(bool,void const*,uint,uint)
AppleConvergedIPCLogger::logMSIPrimary(ulong,uint)
AppleConvergedIPCLogger::logQuiesceStateChange(uchar,uchar)
AppleConvergedIPCLogger::logSleepStateChange(uchar,uchar)
AppleConvergedIPCLogger::logToUserBuffer(char const*,char *)
AppleConvergedIPCLogger::logToUserBuffer(char const*,char *)
AppleConvergedIPCLogger::registerDebugObject(ACIPCLog *)
AppleConvergedIPCLogger::start(IOService *)
AppleConvergedIPCLogger::start(IOService *)
AppleConvergedIPCLogger::stateDump(void)
AppleConvergedIPCLogger::stop(IOService *)
AppleConvergedIPCLogger::userKnobAction(uint,uint,void *,void *)
AppleConvergedIPCLogger::~AppleConvergedIPCLogger()
AppleConvergedIPCMediaPDPInterface__fn_0x640
AppleConvergedIPCMediaPDPInterface__fn_0x648
AppleConvergedIPCMediaPDPInterface__fn_0x650
AppleConvergedIPCMediaPDPInterface__fn_0x658
AppleConvergedIPCMediaPDPInterface__fn_0x668
AppleConvergedIPCMediaPDPInterface__fn_0x680
AppleConvergedIPCMediaPDPInterface__fn_0x688
AppleConvergedIPCMediaPDPInterface__fn_0x690
AppleConvergedIPCMediaPDPInterface__fn_0x698
AppleConvergedIPCMemoryCommand::MetaClass::alloc(void)
AppleConvergedIPCMemoryCommand::bounceIn(IOMemoryDescriptor *,ulong long *)
AppleConvergedIPCMemoryCommand::bounceIn(IOMemoryDescriptor *,ulong long *)
AppleConvergedIPCMemoryCommand::bounceOut(IOMemoryDescriptor *)
AppleConvergedIPCMemoryCommand::bounceOut(IOMemoryDescriptor *)
AppleConvergedIPCMemoryCommand::cancel(void)
AppleConvergedIPCMemoryCommand::cleanCommandParamters(void)
AppleConvergedIPCMemoryCommand::complete(void)
AppleConvergedIPCMemoryCommand::finish(void)
AppleConvergedIPCMemoryCommand::free(void)
AppleConvergedIPCMemoryCommand::initWithInfo(AppleConvergedIPCMemoryCommandPool *,AppleConvergedIPCMemoryPolicy *,ulong long,ulong long,ulong long)
AppleConvergedIPCMemoryCommand::isAlive(void)
AppleConvergedIPCMemoryCommand::prepare(IOMemoryDescriptor *,AppleConvergedIPCIODirection,AppleConvergedIPCMemoryCommand*,uint,uint)
AppleConvergedIPCMemoryCommand::prepare(IOMemoryDescriptor *,AppleConvergedIPCIODirection,AppleConvergedIPCMemoryCommand*,uint,uint)
AppleConvergedIPCMemoryCommand::prepareIn(IOMemoryDescriptor *)
AppleConvergedIPCMemoryCommand::prepareIn(void)
AppleConvergedIPCMemoryCommand::prepareOut(IOMemoryDescriptor *)
AppleConvergedIPCMemoryCommand::readData(void *,ulong long)
AppleConvergedIPCMemoryCommand::setNext(AppleConvergedIPCMemoryCommand*)
AppleConvergedIPCMemoryCommand::transferDone(ulong long)
AppleConvergedIPCMemoryCommandPool::allocateReturnCommand(void)
AppleConvergedIPCMemoryCommandPool::free(void)
AppleConvergedIPCMemoryCommandPool::gatedReturnCommand(IOCommand *)
AppleConvergedIPCMemoryCommandPool::initWithInfo(IOWorkLoop *,ulong long,AppleConvergedIPCMemoryPolicyInfo *)
AppleConvergedIPCMemoryPolicy::MetaClass::alloc(void)
AppleConvergedIPCMemoryPolicy::allocatePrepareMemory(void)
AppleConvergedIPCMemoryPolicy::clearDMATransfer(void)
AppleConvergedIPCMemoryPolicy::completeMemory(void)
AppleConvergedIPCMemoryPolicy::free(void)
AppleConvergedIPCMemoryPolicy::free(void)
AppleConvergedIPCMemoryPolicy::getPhysicalAddress(ulong long *)
AppleConvergedIPCMemoryPolicy::getVirtualAddress(ulong long *)
AppleConvergedIPCMemoryPolicy::initWithInfo(AppleConvergedIPCMemoryPolicyInfo *,uint)
AppleConvergedIPCMemoryPolicy::prepareDMATransfer(IOMemoryDescriptor *)
AppleConvergedIPCMemoryPolicy::prepareMemory(IOMemoryDescriptor *,bool)
AppleConvergedIPCMemoryPolicy::updateUse(bool)
AppleConvergedIPCMemoryPolicy::updateUse(bool)
AppleConvergedIPCMemoryPolicyInfo::MetaClass::alloc(void)
AppleConvergedIPCMemoryPolicyInfo::addNode(AppleConvergedIPCMemoryPolicy *,ulong long)
AppleConvergedIPCMemoryPolicyInfo::free(void)
AppleConvergedIPCMemoryPolicyInfo::free(void)
AppleConvergedIPCMemoryPolicyInfo::initWithInfo(ulong long,IOMapper *,uchar)
AppleConvergedIPCMemoryPolicyInfo::moveNode(bool,AppleConvergedIPCMemoryPolicy *)
AppleConvergedIPCMemoryPolicyInfo::removeNode(AppleConvergedIPCMemoryPolicy *,ulong long)
AppleConvergedIPCMemoryPolicyInfo::setMapper(IOMapper *)
AppleConvergedIPCOLYBTControl::MetaClass::alloc(void)
AppleConvergedIPCOLYBTControl::collectSnapshotOrCoredump(IOMemoryDescriptor *,uint,IOACIPCCompletion *,bool)
AppleConvergedIPCOLYBTControl::collectSnapshotOrCoredumpGated(IOMemoryDescriptor *,uint,IOACIPCCompletion *,bool)
AppleConvergedIPCOLYBTControl::createDeviceFunction(bool,uint)
AppleConvergedIPCOLYBTControl::createDeviceFunction(bool,uint)
AppleConvergedIPCOLYBTControl::createSetupControl(void)
AppleConvergedIPCOLYBTControl::excludePatchFromMMIOCoredump(void)
AppleConvergedIPCOLYBTControl::excludePatchFromMMIOCoredumpGated(void)
AppleConvergedIPCOLYBTControl::getBTChipset(char *,ulong)
AppleConvergedIPCOLYBTControl::mmioReadMemoryBar0(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::mmioReadMemoryBar0Gated(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::mmioReadMemoryBar1(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::mmioReadMemoryBar1Gated(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::mmioReadOTP(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::mmioReadOTPGated(uint,uchar *,uint,bool)
AppleConvergedIPCOLYBTControl::prepareForMMIOCoredump(void)
AppleConvergedIPCOLYBTControl::prepareForMMIOCoredumpGated(void)
AppleConvergedIPCOLYBTControl::publishOTPData(void)
AppleConvergedIPCOLYBTControl::start(IOService *)
AppleConvergedIPCOLYBTControl::stop(IOService *)
AppleConvergedIPCOLYBTControl::terminateDevice(void)
AppleConvergedIPCOLYBTControl::trapBlockingCompletion(void *,int,ulong long,void *)
AppleConvergedIPCOLYBTControl::trapBlockingCompletionGated(void *)
AppleConvergedIPCOLYBTControl::trapBlockingWaitGated(void)
AppleConvergedIPCOLYBTControl::triggerTrap(IOACIPCCompletion *)
AppleConvergedIPCOLYBTControl::triggerTrapBlocking(void)
AppleConvergedIPCOLYBTControl::triggerTrapGated(IOACIPCCompletion *)
AppleConvergedIPCOLYBTControlReporter::getCurrentStateIndex(void)
AppleConvergedIPCOLYBTControlReporter::getCurrentStateIndex(void)
AppleConvergedIPCOLYBTControlReporter::reportRTISleepStateChange(acipcRTISleepState)
AppleConvergedIPCOLYBTControlReporter::reportRTIStateChange(acipcRTIState)
AppleConvergedIPCOLYBTControl__fn_0x558
AppleConvergedIPCOLYBTCoreDumpProvider::MetaClass::alloc(void)
AppleConvergedIPCOLYBTCoreDumpProvider::coreDumpCompletion(void *,int,ulong long,void *)
AppleConvergedIPCOLYBTCoreDumpProvider::coreDumpTimeout(IOTimerEventSource *)
AppleConvergedIPCOLYBTCoreDumpProvider::start(IOService *)
AppleConvergedIPCOLYBTCoreDumpProvider::stateDump(void)
AppleConvergedIPCOLYBTCoreDumpProvider::stateDumpGated(OSDictionary **)
AppleConvergedIPCOLYBTCoreDumpProvider::trapCompletion(void *,int,ulong long,void *)
AppleConvergedIPCOLYBTCoreDumpProvider::trapTimeout(IOTimerEventSource *)
AppleConvergedIPCOLYBTCoreDumpProvider::trapTimeout(IOTimerEventSource *)
AppleConvergedIPCOLYBTLogProvider::AppleConvergedIPCOLYBTLogProvider(void)
AppleConvergedIPCOLYBTLogProvider::allocateScratchMem(uint,bool)
AppleConvergedIPCOLYBTLogProvider::close(IOService *,uint)
AppleConvergedIPCOLYBTLogProvider::close(IOService *,uint)
AppleConvergedIPCOLYBTLogProvider::crashCompletion(void *,void *,int,ulong long,void *)
AppleConvergedIPCOLYBTLogProvider::deferredReadCompletion(void *,int,ulong long)
AppleConvergedIPCOLYBTLogProvider::deferredReadCompletion(void *,int,ulong long)
AppleConvergedIPCOLYBTLogProvider::enqueueAsyncEvent(AppleConvergedIPCOLYBTLogProvider::AsyncEventType,int,ulong long,void *)
AppleConvergedIPCOLYBTLogProvider::free(void)
AppleConvergedIPCOLYBTLogProvider::mapCrashInfoMemory(IOMemoryDescriptor *,BTDebugService::CrashInfoMemoryOptions *,BTDebugService::CrashInfoCompletion *)
AppleConvergedIPCOLYBTLogProvider::openGated(IOService *,uint,BTDebugService::OpenParams *)
AppleConvergedIPCOLYBTLogProvider::openGated(IOService *,uint,BTDebugService::OpenParams *)
AppleConvergedIPCOLYBTLogProvider::parseLogBuffer(IOMemoryDescriptor *,ulong long)
AppleConvergedIPCOLYBTLogProvider::parseLogBuffer(IOMemoryDescriptor *,ulong long)
AppleConvergedIPCOLYBTLogProvider::readLogsGated(IOMemoryDescriptor *,BTDebugService::LogCompletion *)
AppleConvergedIPCPDPADAM__MetaClass__fn_0x68
AppleConvergedIPCPDPADAM__close_IOService___unsigned_int
AppleConvergedIPCPDPADAM__fn_0x548
AppleConvergedIPCPDPADAM__fn_0x550
AppleConvergedIPCPDPADAM__fn_0x558
AppleConvergedIPCPDPADAM__fn_0x560
AppleConvergedIPCPDPADAM__fn_0x568
AppleConvergedIPCPDPADAM__fn_0x570
AppleConvergedIPCPDPADAM__fn_0x578
AppleConvergedIPCPDPADAM__fn_0x580
AppleConvergedIPCPDPADAM__fn_0x588
AppleConvergedIPCPDPADAM__fn_0x5a0
AppleConvergedIPCPDPADAM__free
AppleConvergedIPCPDPADAM__handleOpen_IOService___unsigned_int__void
AppleConvergedIPCPDPADAM__open_IOService___unsigned_int__void
AppleConvergedIPCPDPADAM__stop_IOService
AppleConvergedIPCPDPADAM__willTerminate_IOService___unsigned_int
AppleConvergedIPCPDPInterfaceBase__fn_0x540
AppleConvergedIPCPDPInterfaceBase__fn_0x548
AppleConvergedIPCPDPInterfaceBase__fn_0x568
AppleConvergedIPCPDPInterfaceBase__fn_0x590
AppleConvergedIPCPDPInterfaceBase__fn_0x640
AppleConvergedIPCPDPInterfaceBase__fn_0x670
AppleConvergedIPCPDPInterfaceBase__fn_0x6a0
AppleConvergedIPCPDPInterfaceBase__free
AppleConvergedIPCPDPInterface__fn_0x648
AppleConvergedIPCPDPInterface__fn_0x650
AppleConvergedIPCPDPInterface__fn_0x658
AppleConvergedIPCPDPInterface__fn_0x660
AppleConvergedIPCPDPManager::getRxSlotCount(uint)
AppleConvergedIPCPDPManager::getTxSlotCount(uint)
AppleConvergedIPCPDPManager__MetaClass__fn_0x68
AppleConvergedIPCPDPManager__probe_IOService___int
AppleConvergedIPCPDPManager__reportMessage_acipcPDPMessageType__void
AppleConvergedIPCPDPManager__stop_IOService
AppleConvergedIPCPDPReporter::reportDownlinkPackets(uint,uint,uint)
AppleConvergedIPCPool::AppleConvergedIPCPool(OSMetaClass const*)
AppleConvergedIPCPool::free(void)
AppleConvergedIPCPool::gatedReturnCommand(IOCommand *)
AppleConvergedIPCPool::gatedStop(void)
AppleConvergedIPCPool::getCommand(bool)
AppleConvergedIPCPool::initWithWorkLoop(IOWorkLoop *)
AppleConvergedIPCRTIDevice::allocateDeviceMemory(void)
AppleConvergedIPCRTIDevice::allocatePipeMemory(OSArray *,acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::asyncCallCountUpdate(void)
AppleConvergedIPCRTIDevice::attach(IOService *)
AppleConvergedIPCRTIDevice::bootStageChangeCallback(void *,acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::bootStageChangeFunction(acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::bootStageChangeFunction(acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::clearDMATransfer(IODMACommand **)
AppleConvergedIPCRTIDevice::clearDeviceParams(acipcRTIDeviceParams *)
AppleConvergedIPCRTIDevice::collectCoredumpCompletionCallback(void *,int,uint,uint)
AppleConvergedIPCRTIDevice::collectSnapshotCompletionCallback(void *,int,uint,uint)
AppleConvergedIPCRTIDevice::collectSnapshotOrCoredump(IOMemoryDescriptor *,uint,IOACIPCCompletion *,bool)
AppleConvergedIPCRTIDevice::collectSnapshotOrCoredumpCompletionFunctionGated(int,uint,uint,artifactType)
AppleConvergedIPCRTIDevice::computeDeviceMemory(void)
AppleConvergedIPCRTIDevice::computePipeMemory(OSArray *,acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::crashInfoCompletionCallback(void *,int)
AppleConvergedIPCRTIDevice::crashInfoCompletionCallbackGated(int)
AppleConvergedIPCRTIDevice::crashInfoCompletionCallbackGated(int)
AppleConvergedIPCRTIDevice::createPools(void)
AppleConvergedIPCRTIDevice::createSetupDevice(void)
AppleConvergedIPCRTIDevice::createSetupInterface(OSArray *,acipcOLYBTDeviceBootStage,uint)
AppleConvergedIPCRTIDevice::createSetupInterfaces(acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::createSetupInterfaces(acipcOLYBTDeviceBootStage)
AppleConvergedIPCRTIDevice::detach(IOService *)
AppleConvergedIPCRTIDevice::devSleepEnableCallback(void *,bool,acipcRTIMessageCompletionStatus)
AppleConvergedIPCRTIDevice::devSleepEnableFunction(bool,acipcRTIMessageCompletionStatus)
AppleConvergedIPCRTIDevice::didTerminate(IOService *,uint,bool *)
AppleConvergedIPCRTIDevice::errorCallback(void *,acipcErrorType,void *,void *)
AppleConvergedIPCRTIDevice::errorFunction(acipcErrorType,void *,void *)
AppleConvergedIPCRTIDevice::finishImageCommand(IODMACommand **)
AppleConvergedIPCRTIDevice::free(void)
AppleConvergedIPCRTIDevice::freeDeviceMemory(void)
AppleConvergedIPCRTIDevice::freePipeMemory(void)
AppleConvergedIPCRTIDevice::getMapper(void)
AppleConvergedIPCRTIDevice::getMemoryCommand(ulong long,bool)
AppleConvergedIPCRTIDevice::getPipeProperties(uint)
AppleConvergedIPCRTIDevice::initWithInfo(void)
AppleConvergedIPCRTIDevice::isTypeNoCopyMemoryCommand(ulong long)
AppleConvergedIPCRTIDevice::prepareDMATransfer(IOMemoryDescriptor *,IODMACommand **)
AppleConvergedIPCRTIDevice::prepareForMMIOCoredump(void)
AppleConvergedIPCRTIDevice::prepareImageCommand(IOMemoryDescriptor *,AppleConvergedIPCIODirection,IODMACommand **)
AppleConvergedIPCRTIDevice::printDeviceParams(acipcRTIDeviceParams *)
AppleConvergedIPCRTIDevice::sleepStateChangeCallback(void *,acipcRTISleepState)
AppleConvergedIPCRTIDevice::sleepStateChangeFunction(acipcRTISleepState)
AppleConvergedIPCRTIDevice::start(IOService *)
AppleConvergedIPCRTIDevice::start(IOService *)
AppleConvergedIPCRTIDevice::stateChangeCallback(void *,acipcRTIState)
AppleConvergedIPCRTIDevice::stateChangeFunction(acipcRTIState)
AppleConvergedIPCRTIDevice::terminate(uint)
AppleConvergedIPCRTIDevice::terminateInterfaces(void)
AppleConvergedIPCRTIDevice::timerCallback(void *,void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCRTIDevice::timerCompletion(IOTimerEventSource *)
AppleConvergedIPCRTIDevice::timerFunction(void (*)(void *,void *),ulong long,void *,void *)
AppleConvergedIPCRTIDevice::trapCompletionCallback(void *,int)
AppleConvergedIPCRTIDevice::trapCompletionCallbackGated(int)
AppleConvergedIPCRTIDevice::trapCompletionCallbackGated(int)
AppleConvergedIPCRTIDevice::triggerAsync(bool,uint)
AppleConvergedIPCRTIDevice::triggerTrap(IOACIPCCompletion *)
AppleConvergedIPCRTIDevice::willTerminate(IOService *,uint)
AppleConvergedIPCRTIInterface::abortChannelGated(AppleConvergedIPCRTIInterface::tParams *)
AppleConvergedIPCRTIInterface::abortPipes(void)
AppleConvergedIPCRTIInterface::abortPipesSync(void)
AppleConvergedIPCRTIInterface::asyncCallbackIn(void *,void (*)(void *,void *),void *,void *)
AppleConvergedIPCRTIInterface::asyncCallbackOut(void *,void (*)(void *,void *),void *,void *)
AppleConvergedIPCRTIInterface::asyncCompletion(uint)
AppleConvergedIPCRTIInterface::asyncCompletion(uint)
AppleConvergedIPCRTIInterface::asyncFunction(acipcRTIPipeDirection,void (*)(void *,void *),void *,void *)
AppleConvergedIPCRTIInterface::attach(IOService *)
AppleConvergedIPCRTIInterface::channelChangeCallback(void *,void *,int,ulong long,void *)
AppleConvergedIPCRTIInterface::close(IOService *,uint)
AppleConvergedIPCRTIInterface::closeGated(IOService *,uint)
AppleConvergedIPCRTIInterface::createSetupInterface(void)
AppleConvergedIPCRTIInterface::detach(IOService *)
AppleConvergedIPCRTIInterface::didTerminate(IOService *,uint,bool *)
AppleConvergedIPCRTIInterface::disableSkywalkInterface(uint)
AppleConvergedIPCRTIInterface::disableSkywalkInterfaceGated(uint)
AppleConvergedIPCRTIInterface::enableSkywalkInterface(uint)
AppleConvergedIPCRTIInterface::enableSkywalkInterfaceGated(uint)
AppleConvergedIPCRTIInterface::errorCallback(void *,acipcErrorType,void *,void *)
AppleConvergedIPCRTIInterface::finishMemoryCommand(AppleConvergedIPCMemoryCommand **)
AppleConvergedIPCRTIInterface::getIOCommand(void)
AppleConvergedIPCRTIInterface::getMapper(void)
AppleConvergedIPCRTIInterface::getRequest(void)
AppleConvergedIPCRTIInterface::initSkywalkInterface(void)
AppleConvergedIPCRTIInterface::initWithInfo(uint)
AppleConvergedIPCRTIInterface::isSkywalkEnabled(void)
AppleConvergedIPCRTIInterface::mapSharedMemory(IOMemoryDescriptor *,ushort,ACIPCSharedMemoryOptions *,IOACIPCCompletion *)
AppleConvergedIPCRTIInterface::open(IOService *,uint,void *)
AppleConvergedIPCRTIInterface::openGated(IOService *,uint,void *)
AppleConvergedIPCRTIInterface::printPipeParams(acipcRTIPipeParams *)
AppleConvergedIPCRTIInterface::skywalkRead(AppleConvergedIPCSkywalkIO *)
AppleConvergedIPCRTIInterface::skywalkReadGated(AppleConvergedIPCSkywalkIO *)
AppleConvergedIPCRTIInterface::skywalkWrite(AppleConvergedIPCSkywalkIO *)
AppleConvergedIPCRTIInterface::skywalkWriteGated(AppleConvergedIPCSkywalkIO *)
AppleConvergedIPCRTIInterface::start(IOService *)
AppleConvergedIPCRTIInterface::start(IOService *)
AppleConvergedIPCRTIInterface::startChannelGated(AppleConvergedIPCRTIInterface::tParams *)
AppleConvergedIPCRTIInterface::startPipes(void)
AppleConvergedIPCRTIInterface::startPipesSync(void)
AppleConvergedIPCRTIInterface::stop(IOService *)
AppleConvergedIPCRTIInterface::stop(IOService *)
AppleConvergedIPCRTIInterface::synchronousCompletion(void *,void *,int,ulong long,void *)
AppleConvergedIPCRTIInterface::synchronousFunction(void *,int,ulong long,void *)
AppleConvergedIPCRTIInterface::terminate(uint)
AppleConvergedIPCRTIInterface::userLogKnob(void *,void *)
AppleConvergedIPCRTIInterface::validateProperties(void)
AppleConvergedIPCRTIInterface::willTerminate(IOService *,uint)
AppleConvergedIPCReporter::startReporting(IOService *)
AppleConvergedIPCReporter::stopReporting(void)
AppleConvergedIPCRequest::MetaClass::alloc(void)
AppleConvergedIPCRequest::cancel(void)
AppleConvergedIPCRequest::cancelCompletion(void)
AppleConvergedIPCRequest::cleanRequestParamters(void)
AppleConvergedIPCRequest::complete(int,ulong long)
AppleConvergedIPCRequest::completeGatedCallback(AppleConvergedIPCInterface *,AppleConvergedIPCRequest*,void *,void *,void *)
AppleConvergedIPCRequest::completeGatedFunction(void *,void *,void *)
AppleConvergedIPCRequest::free(void)
AppleConvergedIPCRequest::free(void)
AppleConvergedIPCRequest::initWithPool(AppleConvergedIPCRequestPool *)
AppleConvergedIPCRequest::prepare(AppleConvergedIPCInterface *,AppleConvergedIPCMemoryCommand *,IOACIPCCompletion *,bool,bool)
AppleConvergedIPCRequest::prepare(AppleConvergedIPCInterface *,AppleConvergedIPCMemoryCommand *,IOACIPCCompletion *,bool,bool)
AppleConvergedIPCRequest::prepareSkywalkTransfer(AppleConvergedIPCInterface *,AppleConvergedIPCSkywalkIO *,bool,bool)
AppleConvergedIPCRequestPool::allocateReturnCommand(void)
AppleConvergedIPCSkywalkInterface::AppleConvergedIPCSkywalkInterface(void)
AppleConvergedIPCSkywalkInterface::MetaClass::alloc(void)
AppleConvergedIPCSkywalkInterface::dequeueRxPackets(IOSkywalkRxSubmissionQueue *,IOSkywalkPacket * const*,uint,void *)
AppleConvergedIPCSkywalkInterface::dequeueTxPackets(IOSkywalkTxSubmissionQueue *,IOSkywalkPacket * const*,uint,void *)
AppleConvergedIPCSkywalkInterface::disable(uint)
AppleConvergedIPCSkywalkInterface::enable(uint)
AppleConvergedIPCSkywalkInterface::enableGated(uint)
AppleConvergedIPCSkywalkInterface::free(void)
AppleConvergedIPCSkywalkInterface::prepareIO(AppleConvergedIPCSkywalkIO *,IOSkywalkPacket *,acipcDirection)
AppleConvergedIPCSkywalkInterface::rxCompletion(void *,int,ulong long)
AppleConvergedIPCSkywalkInterface::terminate(uint)
AppleConvergedIPCSkywalkInterface::txCompletion(void *,int,ulong long)
AppleConvergedIPCSkywalkMemorySegment::addToPendingList(AppleConvergedIPCSkywalkMemorySegment*)
AppleConvergedIPCSkywalkMemorySegment__MetaClass__fn_0x68
AppleConvergedIPCSkywalkMemorySegment__complete_unsigned_int
AppleConvergedIPCSkywalkMemorySegment__free
AppleConvergedIPCSkywalkMemorySegment__map
AppleConvergedIPCSkywalkMemorySegment__prepare_unsigned_int
AppleConvergedIPCSkywalkMemorySegment__unmap
AppleConvergedIPCSkywalkPacket::getDMAAddress(void)
AppleConvergedIPCSkywalkPacket::readBytes(uint,void *,uint)
AppleConvergedIPCSkywalkPacket::writeBytes(uint,void const*,uint)
AppleConvergedIPCSkywalkPacketBufferPool__MetaClass__fn_0x68
AppleConvergedIPCSkywalkPacketBufferPool__fn_0xe8
AppleConvergedIPCSkywalkPacketBufferPool__free
AppleConvergedIPCSkywalkPacketBufferPool__initWithOptions_IOAppleConvergedIPCLogger___char_const___OSObject___unsigned_int__IOSkywalkPacketBufferPool__PoolOptions_const
AppleConvergedIPCSkywalkPacket__fn_0x78
AppleConvergedIPCSkywalkPacket__fn_0xd0
AppleConvergedIPCUserClient::_registerRead(AppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
AppleConvergedIPCUserClient::abortChannel(acipcDirection,IOACIPCCompletion *)
AppleConvergedIPCUserClient::channelComplete(void *,void *,int,ulong long,void *)
AppleConvergedIPCUserClient::clientClose(void)
AppleConvergedIPCUserClient::close(IOService *,uint)
AppleConvergedIPCUserClient::closeGated(IOService *,uint)
AppleConvergedIPCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleConvergedIPCUserClient::open(IOService *,uint,void *)
AppleConvergedIPCUserClient::registerRead(uint,void *,uint *)
AppleConvergedIPCUserClient::startChannel(acipcDirection,IOACIPCCompletion *)
AppleConvergedPCI::MetaClass::alloc(void)
AppleConvergedPCI::closeService(IOService *)
AppleConvergedPCI::closeServiceGated(IOService *)
AppleConvergedPCI::deregisterAER(void)
AppleConvergedPCI::deregisterMSI(void)
AppleConvergedPCI::deregisterWorkLoop(void)
AppleConvergedPCI::didTerminate(IOService *,uint,bool *)
AppleConvergedPCI::disableRestoreASPM(bool)
AppleConvergedPCI::disableRestoreASPMGated(bool)
AppleConvergedPCI::enableL1SS(void)
AppleConvergedPCI::enableL1SSGated(void)
AppleConvergedPCI::executeFlrWorkarounds(bool)
AppleConvergedPCI::executeFlrWorkarounds(bool)
AppleConvergedPCI::flr(void)
AppleConvergedPCI::flrGated(void)
AppleConvergedPCI::flrHold(bool)
AppleConvergedPCI::flrHoldGated(bool)
AppleConvergedPCI::flrRelease(void)
AppleConvergedPCI::flrReleaseGated(void)
AppleConvergedPCI::free(void)
AppleConvergedPCI::gatherEPConfigRegSpace(void)
AppleConvergedPCI::getChip(ACIPCChip **)
AppleConvergedPCI::getChipGated(ACIPCChip **)
AppleConvergedPCI::getChipGated(ACIPCChip **)
AppleConvergedPCI::getInLowPower(void)
AppleConvergedPCI::getMSIAddress(void)
AppleConvergedPCI::getMSIData(void)
AppleConvergedPCI::getMSIIndex(uchar,int *)
AppleConvergedPCI::initialPowerStateForDomainState(ulong)
AppleConvergedPCI::isDeviceAccessible(void)
AppleConvergedPCI::isDeviceAccessibleGated(void)
AppleConvergedPCI::mapBar(ulong long *,ulong long *,uint *,uint *)
AppleConvergedPCI::mapBarGated(ulong long *,ulong long *,uint *,uint *)
AppleConvergedPCI::notifyClientPower(IOService *,bool)
AppleConvergedPCI::notifyClientPowerGated(IOService *,bool)
AppleConvergedPCI::notifyTerminateAck(IOService *)
AppleConvergedPCI::notifyTerminateAckGated(IOService *)
AppleConvergedPCI::openService(IOService *)
AppleConvergedPCI::openServiceGated(IOService *)
AppleConvergedPCI::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleConvergedPCI::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleConvergedPCI::prepareShutDown(void)
AppleConvergedPCI::prepareShutDownGated(void)
AppleConvergedPCI::registerAER(OSObject *,void (*)(OSObject *,IOPCIEventSource *,IOPCIEvent const*))
AppleConvergedPCI::registerMSI(uchar,OSObject *,void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource *))
AppleConvergedPCI::registerWorkLoop(IOWorkLoop *)
AppleConvergedPCI::registerWorkLoop(IOWorkLoop *)
AppleConvergedPCI::restoreDeviceState(uint)
AppleConvergedPCI::restoreDeviceStateGated(uint)
AppleConvergedPCI::saveDeviceState(uint)
AppleConvergedPCI::saveDeviceStateGated(uint)
AppleConvergedPCI::setPowerState(ulong,IOService *)
AppleConvergedPCI::setPowerStateGated(ulong,IOService *)
AppleConvergedPCI::setupVendorSpecificConfig(void)
AppleConvergedPCI::start(IOService *)
AppleConvergedPCI::stop(IOService *)
AppleConvergedPCI::terminate(uint)
AppleConvergedPCI::unmapBar(void)
AppleConvergedPCI::unmapBarGated(void)
AppleConvergedPCI::willTerminate(IOService *,uint)
AppleConvergedPCI::willTerminateGated(IOService *,uint)
AppleConvergedPCIICEBB__enableEndpointASPM_bool
AppleConvergedPCIICEBB__enableHostMemProtectionGated_unsigned_long_long__unsigned_long_long
AppleConvergedPCIICEBB__enableHostMemProtection_unsigned_long_long__unsigned_long_long
AppleConvergedPCIICEBB__enableTimesyncModeGated_void
AppleConvergedPCIICEBB__enableTimesyncMode_bool
AppleConvergedPCIICEBB__mapBarGated_unsigned_long_long___unsigned_long_long___unsigned_int___unsigned_int
AppleConvergedPCIICEBB__readEndpointASPM_bool
AppleConvergedPCIICEBB__setupVendorSpecificConfigGated
AppleCotaBTM::AppleCotaBTM(OSMetaClass const*)
AppleCotaBTM::AppleCotaBTM(void)
AppleCotaBTM::PMUInterruptHandler(IOInterruptEventSource *,int)
AppleCotaBTM::configSampling(void)
AppleCotaBTM::enableSPMIInterrupt(void)
AppleCotaBTM::forceFullSamplingRate(void)
AppleCotaBTM::forceReducedSamplingRate(void)
AppleCotaBTM::initWithProvider(IOService *)
AppleCotaBTM::initWithProvider(IOService *)
AppleCotaBTM::pmuSampleTimeoutHandler(IOTimerEventSource *)
AppleCotaBTM::readDutyCycles(void)
AppleCotaBTM::readPICtrl(void)
AppleCotaBTM::readSamples(void)
AppleCotaBTM::resetWorstCaseIVTrigger(void)
AppleCotaBTM::startSampling(uint,uint)
AppleCotaBTM::updateOCV(void)
AppleCotaBTM::updateVthresold(uint)
AppleCotaBTM::withParent(AppleBTM *,IOService *)
AppleCotaBTM::withParent(AppleBTM *,IOService *)
AppleCredentialManager::_performCommand(acm_command_t *,ulong,void *,uint *,bool,ACMPerformCommandContext const*,SCRDResponsePayload_v1 *)
AppleCredentialManager::_performKernelControl(acm_command_t const*,ulong,void *,uint *,ACMPerformCommandContext const*)
AppleCredentialManager::_setPropertiesGated(OSObject *)
AppleCredentialManager::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleCredentialManager::cancelDblClickDeferredAck(bool)
AppleCredentialManager::clearSEPBuffer(IOSlaveMemory *,ulong)
AppleCredentialManager::defDblClickAckAction(IOTimerEventSource *)
AppleCredentialManager::defDblClickAckActionGated(void)
AppleCredentialManager::enableSepEndpointAction(IOTimerEventSource *)
AppleCredentialManager::enableSepEndpointActionGated(void)
AppleCredentialManager::free(void)
AppleCredentialManager::getSEPEndpoint(void)
AppleCredentialManager::handleEventGated(AppleCredentialManager::Event *)
AppleCredentialManager::handleEvents(void)
AppleCredentialManager::handleSEPMessage(void *,void *)
AppleCredentialManager::init(OSDictionary *)
AppleCredentialManager::lockItem(uint *,uint)
AppleCredentialManager::lockSEP(void)
AppleCredentialManager::lockSEPForPowerOff(void)
AppleCredentialManager::performCommandEx(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *,ACMPerformCommandContext const*)
AppleCredentialManager::performCommandGated(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *,ACMPerformCommandContext const*)
AppleCredentialManager::performDoubleClickQueryGated(ulong long *)
AppleCredentialManager::performLoggingLevelQueryGated(ulong long *)
AppleCredentialManager::pmuDblClickAckAction(IOTimerEventSource *)
AppleCredentialManager::pmuDblClickAckActionGated(void)
AppleCredentialManager::powerOffAction(IOTimerEventSource *)
AppleCredentialManager::powerOffActionGated(void)
AppleCredentialManager::processSCRDResponsePayload(SCRDResponsePayload_v1 const*)
AppleCredentialManager::readFromSEPBuffer(void *,ulong)
AppleCredentialManager::resetOOLBuffers(void)
AppleCredentialManager::scheduleDblClickDeferredAck(void)
AppleCredentialManager::sendSEPCommand(uchar,int,void *,ulong,void *,uint *,bool,SCRDResponsePayload_v1 *)
AppleCredentialManager::sendSEPMessage(void *,uchar,int,ushort)
AppleCredentialManager::sepManagerMatchedGated(void)
AppleCredentialManager::sepManagerMatchedNotificationHandler(void *,IOService *)
AppleCredentialManager::sepManagerMatchedThreadCallHandler(void)
AppleCredentialManager::setPowerState(ulong,IOService *)
AppleCredentialManager::setPowerStateGated(ulong *)
AppleCredentialManager::setProperties(OSObject *)
AppleCredentialManager::start(IOService *)
AppleCredentialManager::stop(IOService *)
AppleCredentialManager::unlockItem(uint *)
AppleCredentialManager::unlockSEP(void)
AppleCredentialManager::writeToSEPBuffer(void *,ulong)
AppleCredentialManagerShared::_checkRequiredCommandEntitlements(acm_command_t *,ulong,AppleCredentialManagerShared::CheckEntitlementsLambda)
AppleCredentialManagerUserClient::_hasACMEntitlement(task *)
AppleCredentialManagerUserClient::_hasEntitlement(task *,char const*)
AppleCredentialManagerUserClient::clientClose(void)
AppleCredentialManagerUserClient::extDoubleClick(AppleCredentialManager *,void *,IOExternalMethodArguments *)
AppleCredentialManagerUserClient::extPerform(AppleCredentialManager *,void *,IOExternalMethodArguments *)
AppleCredentialManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleCredentialManagerUserClient::free(void)
AppleCredentialManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleCredentialManagerUserClient::setProperties(OSObject *)
AppleCredentialManagerUserClient::start(IOService *)
AppleCredentialManagerUserClient::stop(IOService *)
AppleDAPF::_verifyFilterReg64(uint,uint,ulong long)
AppleDAPF::_verifyReg64(uint,ulong long)
AppleDAPF::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleDAPF::start(IOService *)
AppleDAPF::start(IOService *)
AppleDeviceManagementHIDEventService::AppleDeviceManagementHIDEventService(void)
AppleDeviceManagementHIDEventService::MetaClass::alloc(void)
AppleDeviceManagementHIDEventService::_resumeFromSleepGated(void)
AppleDeviceManagementHIDEventService::didTerminate(IOService *,uint,bool *)
AppleDeviceManagementHIDEventService::free(void)
AppleDeviceManagementHIDEventService::getBatteryState(void)
AppleDeviceManagementHIDEventService::getBluetoothInfo(void)
AppleDeviceManagementHIDEventService::getCriticalError(void)
AppleDeviceManagementHIDEventService::getDeviceColor(void)
AppleDeviceManagementHIDEventService::getDevicePowerState(void)
AppleDeviceManagementHIDEventService::getHardwareId(void)
AppleDeviceManagementHIDEventService::getSTFirmwareVersion(void)
AppleDeviceManagementHIDEventService::getWakeReason(void)
AppleDeviceManagementHIDEventService::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleDeviceManagementHIDEventService::handleStart(IOService *)
AppleDeviceManagementHIDEventService::init(OSDictionary *)
AppleDeviceManagementHIDEventService::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleDeviceManagementHIDEventService::prepareDeviceForIdleSleep(void)
AppleDeviceManagementHIDEventService::prepareDeviceForSystemSleep(void)
AppleDeviceManagementHIDEventService::processBatteryState(uchar *,ulong long)
AppleDeviceManagementHIDEventService::processCriticalError(uchar *,ulong long)
AppleDeviceManagementHIDEventService::resumeFromSleepThreadEnter(OSObject *)
AppleDeviceManagementHIDEventService::scheduleResumeFromSleep(void)
AppleDeviceManagementHIDEventService::setUSBSleepOnSuspend(bool)
AppleDeviceManagementHIDEventService::setWakeReason(uchar)
AppleDeviceManagementHIDEventService::simpleGetReport(uchar,uchar *,uint *,IOHIDReportType)
AppleDeviceManagementHIDEventService::simpleSetReport(uchar,uchar *,uint)
AppleDeviceManagementHIDEventService::start(IOService *)
AppleDeviceManagementHIDEventService::stop(IOService *)
AppleDeviceManagementHIDEventService::systemPowerChangeHandler(void *,uint,IOService *,void *,ulong)
AppleDeviceManagementHIDEventService::~AppleDeviceManagementHIDEventService()
AppleDiagnosticDataAccessReadOnly::_lazyLoadData(uint,bool)
AppleDiagnosticDataAccessReadOnly::_readRegion(uint,uchar *,ulong long,ulong long)
AppleDiagnosticDataAccessReadOnly::getProperty(OSSymbol const*)
AppleDiagnosticDataAccessReadOnly::initialize(void)
AppleDiagnosticDataAccessReadOnly::probe(IOService *,int *)
AppleDiagnosticDataAccessReadOnly::removeProperty(OSSymbol const*)
AppleDiagnosticDataAccessReadOnly::serializeProperties(OSSerialize *)
AppleDiagnosticDataAccessReadOnly::start(IOService *)
AppleDiagnosticDataAccessReadOnly::stop(IOService *)
AppleDialogPMU::_getPMUConfig(IOService *)
AppleDialogPMU::_handlePEHaltRestart(uint)
AppleDialogPMU::_pmuI2CBankSwitch(ushort,uchar)
AppleDialogPMU::_readADCGated(uint,uint,uint *)
AppleDialogPMU::_readRegs(ushort,uchar *,uchar)
AppleDialogPMU::_shutdown(uint)
AppleDialogPMU::_writeRegs(ushort,uchar *,uchar)
AppleDialogPMU::copyProperty(char const*)
AppleDialogPMU::free(void)
AppleDialogPMU::setDebugProperties(OSDictionary const*)
AppleDialogPMU::setPowerState(ulong,IOService *)
AppleDialogPMU::start(IOService *)
AppleDialogPMUUserClient::extHello(OSObject *,void *,IOExternalMethodArguments *)
AppleDialogPMUUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleDialogSPMIPMU::AppleDialogSPMIPMU(void)
AppleDialogSPMIPMU::MetaClass::alloc(void)
AppleDialogSPMIPMU::_disableResetIn2(void)
AppleDialogSPMIPMU::_enterTestMode(void)
AppleDialogSPMIPMU::_exitTestMode(void)
AppleDialogSPMIPMU::_getLpemState(uchar *,uchar *,uchar *)
AppleDialogSPMIPMU::_handlePEHaltRestart(uint)
AppleDialogSPMIPMU::_handlePEHaltRestart(uint)
AppleDialogSPMIPMU::_handleSOCD(void)
AppleDialogSPMIPMU::_handleSpmiError(int,uint)
AppleDialogSPMIPMU::_interruptAction(IOInterruptEventSource *,int)
AppleDialogSPMIPMU::_lockBus(bool)
AppleDialogSPMIPMU::_lpemCtrlDict(uchar,uchar,uchar,uchar,uchar)
AppleDialogSPMIPMU::_readBootKey(uchar,uchar *,uchar)
AppleDialogSPMIPMU::_readConfiguration(IOService *)
AppleDialogSPMIPMU::_readFaultLog(uchar *,uchar,bool)
AppleDialogSPMIPMU::_readRegs(ushort,uchar *,ushort)
AppleDialogSPMIPMU::_resetLpemInRestoreMode(void)
AppleDialogSPMIPMU::_setLpemBluetoothFWOK(uchar)
AppleDialogSPMIPMU::_setLpemState(uchar,uchar,uchar,uchar,uchar)
AppleDialogSPMIPMU::_setPowerStateGated(ulong,IOService *)
AppleDialogSPMIPMU::_shutdown(uint)
AppleDialogSPMIPMU::_shutdownGated(void)
AppleDialogSPMIPMU::_shutdownGated(void)
AppleDialogSPMIPMU::_updateBootProperties(bool)
AppleDialogSPMIPMU::_updateFaultRegisters(bool)
AppleDialogSPMIPMU::_updateLpemLogDataProperties(uchar *)
AppleDialogSPMIPMU::_writeBootKey(uchar,uchar *,uchar)
AppleDialogSPMIPMU::_writeRegs(ushort,uchar *,ushort)
AppleDialogSPMIPMU::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleDialogSPMIPMU::copyDebugProperty(char const*)
AppleDialogSPMIPMU::copyProperty(char const*)
AppleDialogSPMIPMU::free(void)
AppleDialogSPMIPMU::handlePMSettingCallback(OSSymbol const*,OSObject *,ulong)
AppleDialogSPMIPMU::registerPMCallback(void)
AppleDialogSPMIPMU::setDebugProperties(OSDictionary const*)
AppleDialogSPMIPMU::setPowerState(ulong,IOService *)
AppleDialogSPMIPMU::setProperties(OSObject *)
AppleDialogSPMIPMU::start(IOService *)
AppleDialogSPMIPMU::stop(IOService *)
AppleDialogSPMIPMU::updatePMSetting(uchar,uchar)
AppleDialogSPMIPMURTC::MetaClass::alloc(void)
AppleDialogSPMIPMURTC::_handleSMCNotification(void *)
AppleDialogSPMIPMURTC::_readConfiguration(IOService *)
AppleDialogSPMIPMURTC::_readCurrentOffsetTicks(long long *)
AppleDialogSPMIPMURTC::_readRTCUpcountTicks(void)
AppleDialogSPMIPMURTC::_setClockOffsetTicks(long long)
AppleDialogSPMIPMURTC::_smcNotification(OSSymbol const*,OSObject *,ulong)
AppleDialogSPMIPMURTC::_sysctlMicrosecondsHandler(sysctl_oid *,void *,int,sysctl_req *)
AppleDialogSPMIPMURTC::_sysctlNVRAMOffsetHandler(sysctl_oid *,void *,int,sysctl_req *)
AppleDialogSPMIPMURTC::_sysctlOffsetHandler(sysctl_oid *,void *,int,sysctl_req *)
AppleDialogSPMIPMURTC::_sysctlSecondsHandler(sysctl_oid *,void *,int,sysctl_req *)
AppleDialogSPMIPMURTC::_writeClockOffsetToNVRAM(long long)
AppleDialogSPMIPMURTC::_writeCurrentOffsetTicks(long long)
AppleDialogSPMIPMURTC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleDialogSPMIPMURTC::checkRTCWakeEvent(void)
AppleDialogSPMIPMURTC::enableDateTimeAlarm(RTCDateTime const*)
AppleDialogSPMIPMURTC::getCurrentDateTime(RTCDateTime *)
AppleDialogSPMIPMURTC::getUTCTimeOfDay(ulong *,uint *)
AppleDialogSPMIPMURTC::handleStart(IOService *)
AppleDialogSPMIPMURTC::programRTCAlarm(uint)
AppleDialogSPMIPMURTC::readRTCUpcount(void)
AppleDialogSPMIPMURTC::scheduleRTCWakeAlarm(bool)
AppleDialogSPMIPMURTC::setCurrentDateTime(RTCDateTime const*)
AppleDialogSPMIPMURTC::setUTCTimeOfDay(ulong,uint)
AppleDieTempController::FastDieTempPacketLoad(void)
AppleDieTempController::FastDieTempPacketSend(void)
AppleDieTempController::_get_fastDieTargetTemp(int *)
AppleDieTempController::_get_ki(uint,int *)
AppleDieTempController::_set_ki(uint,uint)
AppleDieTempController::applyMitigations(int)
AppleDieTempController::calculateLoopMaxDieTemperatures(void)
AppleDieTempController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleDieTempController::clpcPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleDieTempController::computeControlEffort(int)
AppleDieTempController::configureReport(IOReportChannelList *,uint,void *,void *)
AppleDieTempController::cpuPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleDieTempController::createPropDictionary(char const*,int)
AppleDieTempController::createReporters(void)
AppleDieTempController::dockchanneltotGraphInit(uint)
AppleDieTempController::free(void)
AppleDieTempController::gpuPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleDieTempController::handleBootArgs(void)
AppleDieTempController::handleBootArgs(void)
AppleDieTempController::initLoopConfig(void)
AppleDieTempController::loopTimerHandlerGated(IOTimerEventSource *)
AppleDieTempController::printLoopConfigs(void)
AppleDieTempController::readBootDVDFactor(void)
AppleDieTempController::readDeviceTreeUInt32Value(char const*,uint)
AppleDieTempController::rearmSensors(void)
AppleDieTempController::registerSensorInstance(IOService *,int,uint)
AppleDieTempController::setCPUMaxPerfState(int)
AppleDieTempController::setECPUMaxPerfState(int)
AppleDieTempController::setGPUMaxPerfState(int)
AppleDieTempController::setGPUMaxPower(int)
AppleDieTempController::setPCPUMaxPerfState(int)
AppleDieTempController::setPropertiesGated(OSObject *)
AppleDieTempController::setupLegacyControlLoop(void)
AppleDieTempController::start(IOService *)
AppleDieTempController::start(IOService *)
AppleDieTempController::startLoop(void)
AppleDieTempController::stop(IOService *)
AppleDieTempController::updateReport(IOReportChannelList *,uint,void *,void *)
AppleDieTempControllerUserClient::_getFastDieTargetTemp(OSObject *,void *,IOExternalMethodArguments *)
AppleDieTempControllerUserClient::_getKp(OSObject *,void *,IOExternalMethodArguments *)
AppleDieTempControllerUserClient::_setFastDieTargetTemp(OSObject *,void *,IOExternalMethodArguments *)
AppleDieTempControllerUserClient::_setKp(OSObject *,void *,IOExternalMethodArguments *)
AppleDieTempControllerUserClient::clientClose(void)
AppleDieTempControllerUserClient::initWithTask(task *,void *,uint)
AppleDieTempControllerUserClient::start(IOService *)
AppleDiskImageDevice::AbortAllCommands(void)
AppleDiskImageDevice::AddDeviceCharacteristicsDict(char const*)
AppleDiskImageDevice::AddOwnerCredentials(void)
AppleDiskImageDevice::AddProtocolCharacteristicsDict(kDIInterconnectLocation)
AppleDiskImageDevice::AddStorageFeaturesDict(bool)
AppleDiskImageDevice::AppleDiskImageDevice(void)
AppleDiskImageDevice::ClearDevice(void)
AppleDiskImageDevice::CompleteCommand(uint,int)
AppleDiskImageDevice::CompleteRequest(DIDeviceRequest *,int,bool)
AppleDiskImageDevice::CopyFromSharedBuffers(DIDeviceRequest *)
AppleDiskImageDevice::CreateMapping(IOMemoryDescriptor *,IOMemoryMap **,task *,bool)
AppleDiskImageDevice::DIOThread(void)
AppleDiskImageDevice::EnqueueDIOThread(DIDeviceRequest *)
AppleDiskImageDevice::FreeDIOThread(AppleDiskImageDevice::DIOThread_t *)
AppleDiskImageDevice::GetRequest(ulong,uchar,bool (*)(void *),void *)
AppleDiskImageDevice::HandIOCommandToExecution(DIDeviceRequest *,bool)
AppleDiskImageDevice::HandleDIOUnmappedBuffer(DIDeviceRequest *)
AppleDiskImageDevice::HandleUnmappedDIORequest(DIDeviceRequest *)
AppleDiskImageDevice::InitDIOThread(AppleDiskImageDevice::DIOThread_t *)
AppleDiskImageDevice::InitForIO(DIDeviceIOUserClient *,DIDeviceIOParams *,ushort)
AppleDiskImageDevice::MetaClass::alloc(void)
AppleDiskImageDevice::PrepareIORequest(DIDeviceRequest *,IOMemoryDescriptor *,ulong long,ulong,ulong long,ulong,IOStorageAttributes *,bool)
AppleDiskImageDevice::PrepareMappedBuffersForIO(DIDeviceRequest *)
AppleDiskImageDevice::PrepareRequest(DIDeviceRequest *,kDIIO,bool,IOStorageAttributes *)
AppleDiskImageDevice::PrepareUserSpaceCommand(DIDeviceRequest *,bool,ulong long)
AppleDiskImageDevice::SetDeviceParams(DICreateDeviceParams const*)
AppleDiskImageDevice::SetRequestSeqCounters(DIDeviceRequest *)
AppleDiskImageDevice::SubmitAsyncRequest(DIDeviceRequest *)
AppleDiskImageDevice::WaitForDIODrain(AppleDiskImageDevice::DIOThread_t *)
AppleDiskImageDevice::boostAllPending(uchar)
AppleDiskImageDevice::boostAnyRequest(uchar)
AppleDiskImageDevice::checkCacheBeforeAllocating(void *)
AppleDiskImageDevice::compareWriteSeqCounter(DIDeviceRequest const&,ulong long,ulong)
AppleDiskImageDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
AppleDiskImageDevice::doEjectMedia(void)
AppleDiskImageDevice::doGetFormatCapacities(ulong long *,uint)
AppleDiskImageDevice::doSynchronize(ulong long,ulong long,uint)
AppleDiskImageDevice::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
AppleDiskImageDevice::enqueueBarrierQueue(DIDeviceRequest *)
AppleDiskImageDevice::executeBarrierQueue(void)
AppleDiskImageDevice::executeBarrierQueueElement(DIDeviceRequest *,bool)
AppleDiskImageDevice::free(void)
AppleDiskImageDevice::getSeqCounter(ulong long,bool)
AppleDiskImageDevice::init(OSDictionary *)
AppleDiskImageDevice::initWriteSeqCounters(void)
AppleDiskImageDevice::invalidateCachedExtents(IOBlockStorageDeviceExtent *,uint)
AppleDiskImageDevice::invalidateSeqCounters(DIDeviceRequest const*)
AppleDiskImageDevice::onCreatorClientClose(void)
AppleDiskImageDevice::onIOClientClose(DIDeviceIOUserClient *)
AppleDiskImageDevice::readFromCache(IOMemoryDescriptor *,ulong,ulong long *,ulong *)
AppleDiskImageDevice::sendSynchronousCommand(DIDeviceRequest *,kDIIO)
AppleDiskImageDevice::setCreatorUC(DIDeviceCreatorUserClient *)
AppleDiskImageDevice::setIOProvider(DIDeviceIOUserClient *)
AppleDiskImageDevice::setOptionalStringProperty(char const*,char const*,ulong)
AppleDiskImageDevice::start(IOService *)
AppleDiskImageDevice::stop(IOService *)
AppleDiskImageDevice::terminate(uint)
AppleDiskImageDevice::willTerminate(IOService *,uint)
AppleDiskImageDevice::~AppleDiskImageDevice()
AppleDiskImagesController::CreateDevice(DICreateDeviceParams *,DICreateDeviceReply *,AppleDiskImageDevice **)
AppleDiskImagesController::FindExistingDevice(DICreateDeviceParams *,DICreateDeviceReply *)
AppleDiskImagesController::free(void)
AppleDiskImagesController::start(IOService *)
AppleDisplayPMU::start(IOService *)
AppleDisplayPMUFunctionLDOEnable::callFunction(void *,void *,void *)
AppleDisplayPMUFunctionLDOEnable::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleDockChannel::MetaClass::alloc(void)
AppleDockChannel::_closeDockChannelGated(void *)
AppleDockChannel::_enterTrace(uint,uint)
AppleDockChannel::_interruptAction(IOInterruptEventSource *,int)
AppleDockChannel::_interruptFilter(IOFilterInterruptEventSource *)
AppleDockChannel::_readBytesGated(AppleDockChannel::GatedReadOperation *)
AppleDockChannel::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleDockChannel::flushFifos(uchar)
AppleDockChannel::free(void)
AppleDockChannel::readBytes(uchar *,uint,uint *)
AppleDockChannel::readBytesAsync(uchar *,uint,uint *)
AppleDockChannel::start(IOService *)
AppleDockChannel::writeBytes(uchar const*,uint,uint *,ulong long)
AppleDockChannel::~AppleDockChannel()
AppleDockChannelDevice::dcRead(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint)
AppleDockChannelDevice::dcReadAsync(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint,DockChannelReadCompletion *)
AppleDockChannelDevice::dcWrite(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint,ulong long)
AppleDockChannelDevice::handleClose(IOService *,uint)
AppleDockChannelDevice::handleOpen(IOService *,uint,void *)
AppleDockChannelUserClient::clientClose(void)
AppleDockChannelUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleDockChannelUserClient::initWithTask(task *,void *,uint)
AppleDockChannelUserClient::sFlush(AppleDockChannel *,void *,IOExternalMethodArguments *)
AppleDockChannelUserClient::sReadBytes(AppleDockChannel *,void *,IOExternalMethodArguments *)
AppleDockChannelUserClient::sWriteBytes(AppleDockChannel *,void *,IOExternalMethodArguments *)
AppleDockChannelUserClient::start(IOService *)
AppleEJPEGHal::ajpeg_driver_set_default_regs(bool)
AppleEJPEGHal::ajpeg_drv_set_compressed_dma(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_decode(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_decode_submode(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_dither(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_encode(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_encode_mbcounts(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_encode_submode(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_image_boundary(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_mtrx_mult(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_set_pointers(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_411(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleEJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_422(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleEJPEGHal::ajpeg_drv_setx_decode_CMP_YUV_444(ajpeg_setup_t *,dcdc_cnt_struct_t *)
AppleEJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_400(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_420(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_422(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_setx_encode_CMP_YUV_444(ajpeg_setup_t *)
AppleEJPEGHal::ajpeg_drv_wrcnvset_w_h(ajpeg_setup_t *,int,int,int,int)
AppleEJPEGHal::checkForInterrupt(IOFilterInterruptEventSource *)
AppleEJPEGHal::checkHardwareVersion(bool,bool &,bool &,bool &)
AppleEJPEGHal::check_compressed_dma(uint,ajpeg_setup_t *)
AppleEJPEGHal::decoder_req2setup(JpegRequest *,ajpeg_setup_t *)
AppleEJPEGHal::encoder_req2setup(JpegRequest *,ajpeg_setup_t *)
AppleEJPEGHal::finishDecode_gated(JpegRequest *)
AppleEJPEGHal::finishEncode_gated(JpegRequest *)
AppleEJPEGHal::init(uint,AppleJPEGDriver *,IOService *,IOWorkLoop *,uint,bool,bool)
AppleEJPEGHal::reset_jpeg_block(void)
AppleEJPEGHal::setActive_gated(bool)
AppleEJPEGHal::startDecoderGated(JpegRequest *)
AppleEJPEGHal::startEncoderGated(JpegRequest *)
AppleEJPEGHal::waitForAXI_gated(void)
AppleEffaceableBlockDevice::readBDEV(void *,uint)
AppleEffaceableBlockDevice::readBDEV(void *,uint)
AppleEffaceableBlockDevice::setupDeviceContract(void)
AppleEffaceableBlockDevice::start(IOService *)
AppleEffaceableBlockDevice::writeBDEV(void const*,uint)
AppleEffaceableBlockDevice::writeBDEV(void const*,uint)
AppleEffaceableStorage::allocMemSys(uint)
AppleEffaceableStorage::calcSHA1Sys(void const*,uint,void *)
AppleEffaceableStorage::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEffaceableStorage::efReturn(int)
AppleEffaceableStorage::effaceLocker(uint,bool)
AppleEffaceableStorage::effaceLockerGated(uint,bool)
AppleEffaceableStorage::formatStorage(void)
AppleEffaceableStorage::formatStorageGated(void)
AppleEffaceableStorage::generateNonce(void *)
AppleEffaceableStorage::generateNonceGated(void *)
AppleEffaceableStorage::getBytes(void *,ulong long,ulong long)
AppleEffaceableStorage::getBytesGated(void *,ulong long,ulong long)
AppleEffaceableStorage::getCapacity(void)
AppleEffaceableStorage::getLocker(uint,void *,ulong long *,bool)
AppleEffaceableStorage::getLockerGated(uint,void *,ulong long *,bool)
AppleEffaceableStorage::ioReturn(_EffaceableReturn)
AppleEffaceableStorage::logk(void *,char const*,...)
AppleEffaceableStorage::panicSys(char const*)
AppleEffaceableStorage::registerService(uint)
AppleEffaceableStorage::setBytes(void const*,ulong long,ulong long)
AppleEffaceableStorage::setBytesGated(void *,ulong long,ulong long)
AppleEffaceableStorage::setLocker(uint,void const*,ulong long,bool)
AppleEffaceableStorage::setLockerGated(uint,void const*,ulong long,bool)
AppleEffaceableStorage::setLockerWithID(uint,void const*,ulong long,uint,bool)
AppleEffaceableStorage::setLockerWithIDGated(_setLockerWithID *)
AppleEffaceableStorage::spaceForLocker(uint,ulong long *)
AppleEffaceableStorage::spaceForLockerGated(uint,ulong long *)
AppleEffaceableStorage::start(IOService *)
AppleEffaceableStorage::wipeStorage(void)
AppleEffaceableStorage::wipeStorageGated(void *)
AppleEffaceableStorageUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleEffaceableStorageUserClient::start(IOService *)
AppleEmbeddedAudio::AppleEmbeddedAudio(OSMetaClass const*)
AppleEmbeddedAudio::Reset(bool,bool)
AppleEmbeddedAudio::SetControl(uint,uint,uint *)
AppleEmbeddedAudio::SetControlShared(uint,uint,uint *)
AppleEmbeddedAudio::_changePowerState(void)
AppleEmbeddedAudio::_changePowerState(void)
AppleEmbeddedAudio::_configureClockFunctions(void)
AppleEmbeddedAudio::_copyPropertyInternal(OSSymbol const*,OSObject **)
AppleEmbeddedAudio::_copyPropertyInternalGated(OSSymbol const*,OSObject **)
AppleEmbeddedAudio::_iisActiveNotificationCallback(OSSymbol const*)
AppleEmbeddedAudio::_iisActiveNotificationThread(void *,int)
AppleEmbeddedAudio::_iisNotification(void *,uint,IOService *,void *,ulong)
AppleEmbeddedAudio::_initForPM(IOService *)
AppleEmbeddedAudio::_powerNotification(void *,uint,IOService *,IOPowerStateChangeNotification *,ulong)
AppleEmbeddedAudio::_powerNotificationGated(uint,IOService *,IOPowerStateChangeNotification *)
AppleEmbeddedAudio::_powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleEmbeddedAudio::_powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleEmbeddedAudio::_priorityPowerNotification(void *,uint,IOService *,IOPowerStateChangeNotification *,ulong)
AppleEmbeddedAudio::_setPowerStage(AppleEmbeddedAudio::PowerStage)
AppleEmbeddedAudio::_setPowerStateGated(ulong)
AppleEmbeddedAudio::_waitAwake(bool,bool)
AppleEmbeddedAudio::_waitAwakeGated(bool const*,bool const*)
AppleEmbeddedAudio::_waitPowerState(bool)
AppleEmbeddedAudio::addControlToList(OSArray *,uint,uint,uint,uint,uint)
AppleEmbeddedAudio::audioDeviceControlUpdate(OSDictionary const*)
AppleEmbeddedAudio::calculateLatency(int,int,int,int,long long)
AppleEmbeddedAudio::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEmbeddedAudio::canEnableSecondaryAudio(OSSymbol const*,uint,bool)
AppleEmbeddedAudio::canEnableSecondaryAudioGated(OSSymbol const*,uint,bool)
AppleEmbeddedAudio::changeDisappearingControlState(uint,bool)
AppleEmbeddedAudio::configureReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedAudio::connectMultipleI2CDevices(char const*,uint *,OSArray *)
AppleEmbeddedAudio::copyProperty(OSString const*)
AppleEmbeddedAudio::copyProperty(OSSymbol const*)
AppleEmbeddedAudio::copyProperty(char const*)
AppleEmbeddedAudio::createControlInfo(uint,uint,uint,uint,uint)
AppleEmbeddedAudio::createIOReporters(void)
AppleEmbeddedAudio::dependencyRequirementFulfilledForDevice(OSSymbol const*)
AppleEmbeddedAudio::destroyIOReporters(void)
AppleEmbeddedAudio::enableHWPreWarm(uint,ulong long *)
AppleEmbeddedAudio::enableUpdateTimeStamp(bool)
AppleEmbeddedAudio::externalSampleRateChange(long long)
AppleEmbeddedAudio::free(void)
AppleEmbeddedAudio::getAudioEnabled(uint)
AppleEmbeddedAudio::getChannelCount(uint)
AppleEmbeddedAudio::getControlValue(uint,uint *,OSDictionary **)
AppleEmbeddedAudio::getControlValue(uint,uint)
AppleEmbeddedAudio::getDefaultSampleRate(void)
AppleEmbeddedAudio::getDependencyInformation(OSSymbol const*,OSSymbol const*)
AppleEmbeddedAudio::getDependencyMatchingFlag(OSSymbol const*)
AppleEmbeddedAudio::getDependencyMatchingProperties(OSSymbol const*)
AppleEmbeddedAudio::getDependencyMatchingTimeoutInNS(OSSymbol const*)
AppleEmbeddedAudio::getDesiredSYSCLK(long long)
AppleEmbeddedAudio::getDeviceTreeAudioProperty(char const*,char const*)
AppleEmbeddedAudio::getFirstIISInputChannelNumber(void)
AppleEmbeddedAudio::getFirstIISOutputChannelNumber(void)
AppleEmbeddedAudio::getIISBCLKCount(void)
AppleEmbeddedAudio::getIISBitsPerChannel(void)
AppleEmbeddedAudio::getIISMaster(void)
AppleEmbeddedAudio::getIISMaxChannelCount(uint)
AppleEmbeddedAudio::getIOEngineStatus(void)
AppleEmbeddedAudio::getInputMCLK(void)
AppleEmbeddedAudio::getLevelControlRangeMap(uint,uint,uint *)
AppleEmbeddedAudio::getMultiControlCount(uint)
AppleEmbeddedAudio::getMultiControlValue(uint,uint,uint)
AppleEmbeddedAudio::getPowerState(void)
AppleEmbeddedAudio::getPropertyInt(char const*,uint *)
AppleEmbeddedAudio::getPropertyVoidPtr(char const*,void const**,uint)
AppleEmbeddedAudio::getSampleRateForSecondary(OSSymbol const*,long long *)
AppleEmbeddedAudio::getSecondaryChannelDataSource(OSSymbol const*,uint,uint,bool)
AppleEmbeddedAudio::getSecondaryChannelVolume(OSSymbol const*)
AppleEmbeddedAudio::getSecondaryIISDevice(OSSymbol const*)
AppleEmbeddedAudio::getSecondarySampleRate(OSSymbol const*,long long *)
AppleEmbeddedAudio::getSupportedDeviceSampleRates(void)
AppleEmbeddedAudio::getValueFromArray(OSArray const*,uint)
AppleEmbeddedAudio::getVisibleDisappearingControls(void)
AppleEmbeddedAudio::handleSecondarySetControlValue(OSSymbol const*,uint,uint,uint *)
AppleEmbeddedAudio::iisNubMatchesSecondary(OSSymbol const*)
AppleEmbeddedAudio::init(OSDictionary *)
AppleEmbeddedAudio::initMicDetect(void)
AppleEmbeddedAudio::initSecondaryDevice(OSSymbol const*)
AppleEmbeddedAudio::initUpdateTimeStamps(void)
AppleEmbeddedAudio::matchPropertyTable(OSDictionary *,int *)
AppleEmbeddedAudio::matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleEmbeddedAudio::matchingNotificationHandlerGated(void *,IOService *,IONotifier *)
AppleEmbeddedAudio::messageClients(uint,void *,ulong)
AppleEmbeddedAudio::notifySecondaryAudioEnable(OSSymbol const*,uint,bool)
AppleEmbeddedAudio::notifySecondaryAudioHWPreWarm(OSSymbol const*,uint,ulong long *)
AppleEmbeddedAudio::notifySecondaryDataSourceChange(OSSymbol const*,uint)
AppleEmbeddedAudio::notifySecondaryRouteChange(OSSymbol const*)
AppleEmbeddedAudio::notifySecondaryStreamFormatChange(OSSymbol const*)
AppleEmbeddedAudio::notifySecondaryVolumeChange(OSSymbol const*,uint)
AppleEmbeddedAudio::notifyStartTransportComplete(OSSymbol const*)
AppleEmbeddedAudio::notifyStopTransportComplete(OSSymbol const*)
AppleEmbeddedAudio::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleEmbeddedAudio::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleEmbeddedAudio::preflightMultiControl(uint,OSArray const*,OSArray const*)
AppleEmbeddedAudio::preflightSecondaryMultiControlValueChange(OSSymbol const*,uint,OSArray const*,OSArray const*)
AppleEmbeddedAudio::probe(IOService *,int *)
AppleEmbeddedAudio::readTrimGainV1(void const*,char const*,uint,long long *)
AppleEmbeddedAudio::secondaryExternalSampleRateChange(OSSymbol const*,long long)
AppleEmbeddedAudio::setAttached(bool)
AppleEmbeddedAudio::setClockSource(uint)
AppleEmbeddedAudio::setDependencyInformation(OSSymbol const*,OSSymbol const*,OSObject *)
AppleEmbeddedAudio::setDependencyMatchingFlag(OSSymbol const*,uint)
AppleEmbeddedAudio::setDependencyMatchingProperties(OSSymbol const*,OSDictionary *)
AppleEmbeddedAudio::setDependencyMatchingTimeoutInNS(OSSymbol const*,ulong long)
AppleEmbeddedAudio::setInputMCLKEnabled(bool)
AppleEmbeddedAudio::setPowerState(ulong,IOService *)
AppleEmbeddedAudio::setProperties(OSObject *)
AppleEmbeddedAudio::start(IOService *)
AppleEmbeddedAudio::start(IOService *)
AppleEmbeddedAudio::stateChangeSleep(uint)
AppleEmbeddedAudio::stateChangeSleepUntil(ulong long)
AppleEmbeddedAudio::stateChangeSleepUntil(ulong long)
AppleEmbeddedAudio::stop(IOService *)
AppleEmbeddedAudio::updateControlInfo(uint,OSDictionary const*)
AppleEmbeddedAudio::updateDependencyRequirement(IOService *,OSSymbol const*)
AppleEmbeddedAudio::updateReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedAudio::validateOperation(AppleEmbeddedAudio::AppleEmbeddedAudioOperations,void const*,void const*,void const*)
AppleEmbeddedAudio::waitForDependentService(OSSymbol const*)
AppleEmbeddedAudioButtons::attachAudioController(AppleEmbeddedAudio *)
AppleEmbeddedAudioButtons::attachService(IOService *)
AppleEmbeddedAudioButtons::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEmbeddedAudioButtons::detectFinished(OSDictionary *,OSSymbol const*)
AppleEmbeddedAudioButtons::dispatchReportForUsage(ulong long,uint,uint,uint,uint)
AppleEmbeddedAudioButtons::handleStart(IOService *)
AppleEmbeddedAudioButtons::newReportDescriptor(IOMemoryDescriptor **)
AppleEmbeddedAudioButtons::setButtonState(bool,OSObject *)
AppleEmbeddedAudioButtons::setHSSwitchDebugState(OSObject *)
AppleEmbeddedAudioButtons::startHPDetect(void)
AppleEmbeddedAudioButtons::willTerminate(IOService *,uint)
AppleEmbeddedAudioCalibrationStructures::getPSClVersion(void const*,uint)
AppleEmbeddedAudioDevice::MetaClass::alloc(void)
AppleEmbeddedAudioDevice::_createBlockControls(void)
AppleEmbeddedAudioDevice::_createDataBlocks(void)
AppleEmbeddedAudioDevice::_externalChangeSampleRateGated(long long const*)
AppleEmbeddedAudioDevice::_getBlockControlBuffer(uint,ulong long *,ulong long *)
AppleEmbeddedAudioDevice::_getDataBlock(uint,ulong long *,ulong long *)
AppleEmbeddedAudioDevice::_notifyHPDetectChanged(bool,OSDictionary *)
AppleEmbeddedAudioDevice::_publishSpeakerId(AppleEmbeddedAudio *)
AppleEmbeddedAudioDevice::_setAudioEnabledGated(uint,bool)
AppleEmbeddedAudioDevice::_setControlValueGated(uint,uint,uint *,AppleEmbeddedAudioDevice::SetControlValueType)
AppleEmbeddedAudioDevice::_setMultiControlValueGated(uint,OSArray *,AppleEmbeddedAudioDevice::SetControlValueType,bool *)
AppleEmbeddedAudioDevice::_startStopIOEngineWithFlagsGated(uint *,ulong long *,bool)
AppleEmbeddedAudioDevice::addAdditionalController(AppleEmbeddedAudio *)
AppleEmbeddedAudioDevice::createControlDataSourceSelectorMap(uint const*,uint)
AppleEmbeddedAudioDevice::createIOReporters(OSArray const*)
AppleEmbeddedAudioDevice::exchangeData(uint,uint,uint)
AppleEmbeddedAudioDevice::getBlockControlBuffer(uint,uint *,IOMemoryDescriptor **)
AppleEmbeddedAudioDevice::getClockDomain(void)
AppleEmbeddedAudioDevice::getDataExchangeBlock(uint,uint *,IOMemoryDescriptor **)
AppleEmbeddedAudioDevice::getDebugInfoForProperty(char const*)
AppleEmbeddedAudioDevice::getStreamFormatSupportedSampleRate(long long,uint,uint)
AppleEmbeddedAudioDevice::getSupportedBitsPerSampleList(uint,uint *)
AppleEmbeddedAudioDevice::getSupportedChannelCountList(uint,uint *)
AppleEmbeddedAudioDevice::init(AppleEmbeddedAudio *)
AppleEmbeddedAudioDevice::message(uint,IOService *,void *)
AppleEmbeddedAudioDevice::moveBlockControlData(uint,uint,uint)
AppleEmbeddedAudioDevice::performConfigChange(IOAudio2Notification *)
AppleEmbeddedAudioDevice::setControlValue(uint,uint,uint *)
AppleEmbeddedAudioDevice::setCustomProperties(AppleEmbeddedAudio *)
AppleEmbeddedAudioDevice::setDebugPropertiesRegistry(void)
AppleEmbeddedAudioDevice::setDebugProperty(OSSymbol *,OSObject *)
AppleEmbeddedAudioDevice::setDeviceSampleRate(long long,uint *,uint *)
AppleEmbeddedAudioDevice::setMultiControlValue(uint *,uint *,ulong long,ulong long *)
AppleEmbeddedAudioDevice::setPrivateProperty(uint)
AppleEmbeddedAudioDevice::setProperties(OSObject *)
AppleEmbeddedAudioDevice::start(AppleARMIISDevice *)
AppleEmbeddedAudioDevice::startAudio(uint)
AppleEmbeddedAudioDevice::startIOEngineWithFlags(uint,ulong long *)
AppleEmbeddedAudioDevice::startTransportComplete(void)
AppleEmbeddedAudioDevice::stopAudio(uint)
AppleEmbeddedAudioDevice::stopIOEngineWithFlags(uint,ulong long *)
AppleEmbeddedAudioDevice::stopTransportComplete(void)
AppleEmbeddedAudioDevice::updateControlListProperty(OSDictionary const*)
AppleEmbeddedAudioDevice::updateFixedControl(OSDictionary const*)
AppleEmbeddedAudioDevice::updateTimestamp(ulong long,ulong long)
AppleEmbeddedAudioDevice__createControlsList
AppleEmbeddedAudioGroup::GetClockDomain(void)
AppleEmbeddedAudioGroup::GetInputLatency(void)
AppleEmbeddedAudioGroup::GetOutputLatency(void)
AppleEmbeddedAudioGroup::SetControl(uint,uint,uint *)
AppleEmbeddedAudioGroup::SetMultiControl(uint,OSArray const*)
AppleEmbeddedAudioGroup::UpdateControl(uint,uint)
AppleEmbeddedAudioGroup::_waitAwake(bool,bool)
AppleEmbeddedAudioGroup::addControlToList(OSArray *,uint,uint,uint,uint,uint)
AppleEmbeddedAudioGroup::addCustomControls(OSArray *)
AppleEmbeddedAudioGroup::allPoweredOff(void)
AppleEmbeddedAudioGroup::debugPropertyChangeNotification(OSSymbol *,OSObject *)
AppleEmbeddedAudioGroup::enableAudioInput(bool)
AppleEmbeddedAudioGroup::enableAudioOutput(bool)
AppleEmbeddedAudioGroup::enableHWPreWarm(uint,ulong long *)
AppleEmbeddedAudioGroup::executeTestCase(uint)
AppleEmbeddedAudioGroup::getChannelsPerFrame(uint)
AppleEmbeddedAudioGroup::getControlValue(uint,uint *,OSDictionary **)
AppleEmbeddedAudioGroup::getFirstIISInputChannelNumber(void)
AppleEmbeddedAudioGroup::getIISMaxChannelCount(uint)
AppleEmbeddedAudioGroup::getPrimaryController(void)
AppleEmbeddedAudioGroup::getProperty(OSSymbol const*)
AppleEmbeddedAudioGroup::getStreamFormatSupportedSampleRate(long long,uint,uint)
AppleEmbeddedAudioGroup::getSupportedBitsPerSampleList(uint,uint *)
AppleEmbeddedAudioGroup::getSupportedDeviceSampleRates(void)
AppleEmbeddedAudioGroup::getVisibleDisappearingControls(void)
AppleEmbeddedAudioGroup::isAsynchronousControl(uint)
AppleEmbeddedAudioGroup::preflightControlValue(uint,uint,uint)
AppleEmbeddedAudioGroup::preflightMultiControl(uint,OSArray const*,OSArray const*)
AppleEmbeddedAudioGroup::setSampleRate(long long)
AppleEmbeddedAudioGroup::sizeofZeroFilledBuffer_ms(bool *)
AppleEmbeddedAudioGroup::startTransportComplete(void)
AppleEmbeddedAudioGroup::stopIOEngineBegin(void)
AppleEmbeddedAudioGroup::stopTestCase(uint)
AppleEmbeddedAudioGroup::stopTransportComplete(void)
AppleEmbeddedAudioResourceManager::AppleEmbeddedAudioResourceManager(void)
AppleEmbeddedAudioResourceManager::_externalClientRequestCallGated(OSDictionary *)
AppleEmbeddedAudioResourceManager::_getKernelClientInterfaceGivenResource(OSDictionary *)
AppleEmbeddedAudioResourceManager::_loadProgramSpecificResource(IOService *)
AppleEmbeddedAudioResourceManager::_loadResourceRoutingFromDeviceTreeGated(IOService *)
AppleEmbeddedAudioResourceManager::_registerServiceWhenReady(void)
AppleEmbeddedAudioResourceManager::_resourceRoutingNotification(AudioKernelClientInterface *,IONotifier *)
AppleEmbeddedAudioResourceManager::_resourceRoutingNotificationGated(AudioKernelClientInterface *,IONotifier *)
AppleEmbeddedAudioResourceManager::_routeAssetUpdateRequest(OSDictionary *)
AppleEmbeddedAudioResourceManager::_sendCS35L92Firmware(void)
AppleEmbeddedAudioResourceManager::probe(IOService *,int *)
AppleEmbeddedAudioResourceManager::start(IOService *)
AppleEmbeddedAudioResourceManager::stop(IOService *)
AppleEmbeddedAudio__fn_0x878
AppleEmbeddedButtonController::_detectTimerAction(IOTimerEventSource *)
AppleEmbeddedButtonController::_interruptAction(IOInterruptEventSource *,int)
AppleEmbeddedButtonController::_timeSinceHPInsertMS(void)
AppleEmbeddedButtonController::detectFinished(OSDictionary *,OSSymbol const*)
AppleEmbeddedButtonController::enableHPDetect(bool)
AppleEmbeddedButtonController::forceHPDetect(OSBoolean *)
AppleEmbeddedButtonController::getHPDetect(bool *)
AppleEmbeddedButtonController::handleInterruptAction(void)
AppleEmbeddedButtonController::handlePowerStageChangeOn(bool)
AppleEmbeddedButtonController::initHPDetect(void)
AppleEmbeddedButtonController::setButtonState(bool,OSObject *)
AppleEmbeddedButtonController::setHSSwitchDebugState(OSObject *)
AppleEmbeddedButtonController::stop(IOService *)
AppleEmbeddedButtonController::triggerHPDetect(bool)
AppleEmbeddedButtonController::triggerHPDetectGated(bool)
AppleEmbeddedButtonController::willTerminate(IOService *,uint)
AppleEmbeddedExternalAudioObject::AppleEmbeddedExternalAudioObject(OSMetaClass const*)
AppleEmbeddedExternalAudioObject::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEmbeddedExternalAudioObject::configureReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedExternalAudioObject::disable(void)
AppleEmbeddedExternalAudioObject::enable(void)
AppleEmbeddedExternalAudioObject::ping(void)
AppleEmbeddedExternalAudioObject::setPowerState(ulong,IOService *)
AppleEmbeddedExternalAudioObject::setPowerStateGated(ulong,IOService *)
AppleEmbeddedExternalAudioObject::start(IOService *)
AppleEmbeddedExternalAudioObject::updateReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedExternalAudioObject::withProvider(IOService *,char const*)
AppleEmbeddedGPSControl::_interruptAction(IOInterruptEventSource *,int)
AppleEmbeddedGPSControl::checkHostWakeGated(ulong long *)
AppleEmbeddedGPSControl::clockGPSGated(uchar)
AppleEmbeddedGPSControl::free(void)
AppleEmbeddedGPSControl::getGPSLowPowerLineStatusGated(uchar *)
AppleEmbeddedGPSControl::initialize(IOService *)
AppleEmbeddedGPSControl::resetGPSGated(uchar)
AppleEmbeddedGPSControl::standbyGPSGated(uchar)
AppleEmbeddedGPSControl::start(IOService *)
AppleEmbeddedGPSControl::timemarkGPSGated(uchar)
AppleEmbeddedGPSControl::updateToggleStats(void)
AppleEmbeddedGPSControl::wakeGPSGated(uchar)
AppleEmbeddedGPSControlUserClient::extGPSCheckHostWake(OSObject *,void *,IOExternalMethodArguments *)
AppleEmbeddedGPSControlUserClient::extGPSPulseTimeSync(OSObject *,void *,IOExternalMethodArguments *)
AppleEmbeddedGPSControlUserClient::extGPSReset(OSObject *,void *,IOExternalMethodArguments *)
AppleEmbeddedGPSControlUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleEmbeddedGPSControlUserClient::start(IOService *)
AppleEmbeddedHIDEventService::dispatchAccelerometerEvent(ulong long,int,int,int,uint,uint,uint,uint)
AppleEmbeddedHIDEventService::dispatchAmbientLightSensorEvent(ulong long,uint,uchar,double,double,double,uint)
AppleEmbeddedHIDEventService::dispatchAmbientLightSensorEvent(ulong long,uint,uint,uint,uint,uint,uint)
AppleEmbeddedHIDEventService::dispatchPowerEvent(ulong long,long long,uint,uint,uint)
AppleEmbeddedHIDEventService::dispatchTemperatureEvent(ulong long,int,uint)
AppleEmbeddedHIDEventService::handleStart(IOService *)
AppleEmbeddedI2CGPS::_dev_close(int,int,proc *)
AppleEmbeddedI2CGPS::_dev_open(int,int,proc *)
AppleEmbeddedI2CGPS::_dev_read(uio *,int)
AppleEmbeddedI2CGPS::_dev_select(int *,void *,proc *)
AppleEmbeddedI2CGPS::_dev_write(uio *,int)
AppleEmbeddedI2CGPS::dev_ioctl(int,ulong,char *,int,proc *)
AppleEmbeddedI2CGPS::dev_open(int,int,int,proc *)
AppleEmbeddedI2CGPS::dev_read(int,uio *,int)
AppleEmbeddedI2CGPS::insertData(uint,uchar *)
AppleEmbeddedI2CGPS::removeData(uio *)
AppleEmbeddedI2CGPS::start(IOService *)
AppleEmbeddedI2CLightSensor::_copyEvent(IOHIDEvent *&)
AppleEmbeddedI2CLightSensor::_eventServiceCallbackGated(IOHIDEventService *,void *,IOHIDEvent *)
AppleEmbeddedI2CLightSensor::_interruptAction(IOInterruptEventSource *,int)
AppleEmbeddedI2CLightSensor::_message(uint,IOService *,void *)
AppleEmbeddedI2CLightSensor::_setPowerState(ulong,IOService *)
AppleEmbeddedI2CLightSensor::_setProperties(OSObject *)
AppleEmbeddedI2CLightSensor::_timerExpired(void)
AppleEmbeddedI2CLightSensor::_updatePowerState(void)
AppleEmbeddedI2CLightSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleEmbeddedI2CLightSensor::didTerminate(IOService *,uint,bool *)
AppleEmbeddedI2CLightSensor::enablePowerAndInterrupts(bool)
AppleEmbeddedI2CLightSensor::eventServiceCallback(IOHIDEventService *,void *,IOHIDEvent *,uint)
AppleEmbeddedI2CLightSensor::free(void)
AppleEmbeddedI2CLightSensor::handleClose(IOService *,uint)
AppleEmbeddedI2CLightSensor::handleOpen(IOService *,uint,void *)
AppleEmbeddedI2CLightSensor::handleStart(IOService *)
AppleEmbeddedI2CLightSensor::hidEventPreEmptiveSensorStartupHandler(IOInterruptEventSource *,int)
AppleEmbeddedI2CLightSensor::hidMatchingNotification(void *,IOService *,IONotifier *)
AppleEmbeddedI2CLightSensor::installButtonWakeListener(void)
AppleEmbeddedI2CLightSensor::message(uint,IOService *,void *)
AppleEmbeddedI2CLightSensor::preEmptiveSensorStartup(void)
AppleEmbeddedI2CLightSensor::reportEvent(uint,uint,uint)
AppleEmbeddedI2CLightSensor::setProperties(OSObject *)
AppleEmbeddedI2CLightSensor::setReportingThresholdPercentage(ushort)
AppleEmbeddedKeyboard::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
AppleEmbeddedKeyboard::filterKeyboardUsage(uint *,uint *,bool)
AppleEmbeddedKeyboard::free(void)
AppleEmbeddedKeyboard::handleStart(IOService *)
AppleEmbeddedNVMeController::AddReportingChannels(void)
AppleEmbeddedNVMeController::AllocateLoggerBuffers(void)
AppleEmbeddedNVMeController::AllocateNVMeBuffer(uint,uint,IODMACommand **,ulong long *)
AppleEmbeddedNVMeController::AllocateNVMeQueue(uint,ushort,uchar)
AppleEmbeddedNVMeController::AllocateNodes(bool)
AppleEmbeddedNVMeController::AllocateResources(void)
AppleEmbeddedNVMeController::AllocateScratchBuffer(void)
AppleEmbeddedNVMeController::AllocateScratchBuffer(void)
AppleEmbeddedNVMeController::AreNamespacesPresent(void)
AppleEmbeddedNVMeController::CheckClogVersionMismatch(void)
AppleEmbeddedNVMeController::CheckForOk2Sleep(void)
AppleEmbeddedNVMeController::CheckNVMemuDevice(void)
AppleEmbeddedNVMeController::ConfigDDRScratchRegisters(void)
AppleEmbeddedNVMeController::CopyNANDIDData(AppleNVMeBuffer *,uchar *)
AppleEmbeddedNVMeController::CreateEmbeddedBlockDevice(uchar,uchar)
AppleEmbeddedNVMeController::CreateIOReporter(void)
AppleEmbeddedNVMeController::CreateNamespaces(ulong long,uint)
AppleEmbeddedNVMeController::CreateTemperatureSensor(void)
AppleEmbeddedNVMeController::DeleteTemperatureSensor(void)
AppleEmbeddedNVMeController::DetermineBlankPart(void)
AppleEmbeddedNVMeController::DetermineNamespaces(void)
AppleEmbeddedNVMeController::DoHousekeeping(void)
AppleEmbeddedNVMeController::DoHousekeeping(void)
AppleEmbeddedNVMeController::FirmwareVersionCheck(void *)
AppleEmbeddedNVMeController::FreeLoggerBuffers(void)
AppleEmbeddedNVMeController::GetDefaultInitTimeout(ulong long)
AppleEmbeddedNVMeController::GetDefaultLPSRTimeout(void)
AppleEmbeddedNVMeController::GetDefaultPolledRequestTimeout(void)
AppleEmbeddedNVMeController::GetDefaultRequestTimeout(void)
AppleEmbeddedNVMeController::GetErrorDetail(ushort)
AppleEmbeddedNVMeController::GetIOMappers(void)
AppleEmbeddedNVMeController::GetNamespaceSize(uint)
AppleEmbeddedNVMeController::GetProviderFunctions(void)
AppleEmbeddedNVMeController::GetRequest(uint,uchar)
AppleEmbeddedNVMeController::GetRestoreEnvironment(void)
AppleEmbeddedNVMeController::GetTemperature(int *)
AppleEmbeddedNVMeController::IdentifyNamespaces(void)
AppleEmbeddedNVMeController::InitializeController(void)
AppleEmbeddedNVMeController::InitializeNVMe(bool)
AppleEmbeddedNVMeController::InitializePCI(void)
AppleEmbeddedNVMeController::InitializeWallTime(void)
AppleEmbeddedNVMeController::InitializeWallTime(void)
AppleEmbeddedNVMeController::IsFullInit(void)
AppleEmbeddedNVMeController::IsFullInit(void)
AppleEmbeddedNVMeController::IssueFlush(uint)
AppleEmbeddedNVMeController::MetaClass::alloc(void)
AppleEmbeddedNVMeController::NVMeNotifySEPState(uint)
AppleEmbeddedNVMeController::PreCCEnableHook(void)
AppleEmbeddedNVMeController::ReleaseResources(void)
AppleEmbeddedNVMeController::ReportPowerState(void)
AppleEmbeddedNVMeController::ResetController(bool)
AppleEmbeddedNVMeController::SendTimeToDevice(void)
AppleEmbeddedNVMeController::SetATVMode(void)
AppleEmbeddedNVMeController::SetBDRFactor(void)
AppleEmbeddedNVMeController::SetBFHMode(bool)
AppleEmbeddedNVMeController::SetClockGatingTimeout(uint)
AppleEmbeddedNVMeController::SetDDRScratchProperties(void)
AppleEmbeddedNVMeController::SetDesiredLinkSpeed(uint)
AppleEmbeddedNVMeController::SetLoggerProperties(void)
AppleEmbeddedNVMeController::SetNANDGeomProperties(OSDictionary *)
AppleEmbeddedNVMeController::SetNANDIDProperties(OSDictionary *)
AppleEmbeddedNVMeController::SetNANDProperty(char const*,ulong long,uint,OSDictionary *)
AppleEmbeddedNVMeController::SetNANDPropertyWithArray(char const*,uchar const*,int,OSDictionary *)
AppleEmbeddedNVMeController::SetNANDPropertyWithCString(char const*,char *,OSDictionary *)
AppleEmbeddedNVMeController::SetNANDPropertyWithData(char const*,void *,uint,OSDictionary *)
AppleEmbeddedNVMeController::SetNANDQual(void)
AppleEmbeddedNVMeController::SetNVMeProperties(void)
AppleEmbeddedNVMeController::SetNamespacesStruct(void)
AppleEmbeddedNVMeController::SetNumBurninBlks(long long)
AppleEmbeddedNVMeController::SetPowerGatingTimeout(uint)
AppleEmbeddedNVMeController::SetQoSParameters(void)
AppleEmbeddedNVMeController::SetRuntimeProperties(void)
AppleEmbeddedNVMeController::SetSwapWriteLimit(uint)
AppleEmbeddedNVMeController::SetSystemRequirements(uchar)
AppleEmbeddedNVMeController::SetupLoggerCore(uchar,ulong long,uint)
AppleEmbeddedNVMeController::SetupLoggerCores(void)
AppleEmbeddedNVMeController::StartController(void)
AppleEmbeddedNVMeController::ThreadEntry(void)
AppleEmbeddedNVMeController::ThreadEntry(void)
AppleEmbeddedNVMeController::ValidateNamespaceSize(uchar)
AppleEmbeddedNVMeController::WaitForOk2Sleep(void)
AppleEmbeddedNVMeController::WriteRegister64(uint,ulong long)
AppleEmbeddedNVMeController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEmbeddedNVMeController::disablePCIPort(bool)
AppleEmbeddedNVMeController::disablePCIPort(bool)
AppleEmbeddedNVMeController::enablePCIPort(bool)
AppleEmbeddedNVMeController::enablePCIPort(bool)
AppleEmbeddedNVMeController::free(void)
AppleEmbeddedNVMeController::handleClose(IOService *,uint)
AppleEmbeddedNVMeController::handleIsOpen(IOService const*)
AppleEmbeddedNVMeController::handleOpen(IOService *,uint,void *)
AppleEmbeddedNVMeController::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleEmbeddedNVMeController::setProperties(OSObject *)
AppleEmbeddedNVMeController::start(IOService *)
AppleEmbeddedNVMeController::~AppleEmbeddedNVMeController()
AppleEmbeddedNVMeController__fn_0x788
AppleEmbeddedNVMeDiagnostics::CommitToNAND(uchar)
AppleEmbeddedNVMeDiagnostics::Create(uint,uint,bool)
AppleEmbeddedNVMeDiagnostics::InitializeContents(void)
AppleEmbeddedNVMeDiagnostics::ReadFromNAND(uchar)
AppleEmbeddedNVMeDiagnostics::free(void)
AppleEmbeddedNVMeDiagnostics::readRegion(uint,uchar *,ulong long,ulong long)
AppleEmbeddedNVMeDiagnostics::start(IOService *)
AppleEmbeddedNVMeDiagnostics::writeRegion(uint,uchar const*,ulong long,ulong long)
AppleEmbeddedNVMeNVRAM::GetNVRAMSize(void)
AppleEmbeddedNVMeNVRAM::RestoreShadow(void)
AppleEmbeddedNVMeNVRAM::free(void)
AppleEmbeddedNVMeNVRAM::init(OSDictionary *)
AppleEmbeddedNVMeNVRAM::initWithNamespace(uint)
AppleEmbeddedNVMeNVRAM::message(uint,IOService *,void *)
AppleEmbeddedNVMeNVRAM::read(ulong long,uchar *,ulong long)
AppleEmbeddedNVMeNVRAM::start(IOService *)
AppleEmbeddedNVMeNVRAM::sync(void)
AppleEmbeddedNVMeNVRAM::write(ulong long,uchar *,ulong long)
AppleEmbeddedNVMeTemperatureSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleEmbeddedNVMeTemperatureSensor::init(AppleEmbeddedNVMeController *)
AppleEmbeddedPCIE::_applyTunablesFromData(OSData const*,uint (AppleEmbeddedPCIE::*)(uint),void (AppleEmbeddedPCIE::*)(uint,uint),char const*)
AppleEmbeddedPCIE::_assertDebugGPIO(uint)
AppleEmbeddedPCIE::_buildPortProperties(IOService *)
AppleEmbeddedPCIE::_buildPortProperties(IOService *)
AppleEmbeddedPCIE::_createReporters(void)
AppleEmbeddedPCIE::_destroyReporters(void)
AppleEmbeddedPCIE::_getChannelName(char *,ulong,char const*,uint)
AppleEmbeddedPCIE::_getMapperName(char *,ulong,int,int,int)
AppleEmbeddedPCIE::_handleAEREvent(IOPCIEventSource *,IOPCIEvent const*)
AppleEmbeddedPCIE::_handleAEREvent(IOPCIEventSource *,IOPCIEvent const*)
AppleEmbeddedPCIE::_handleIOReportersTimer(void)
AppleEmbeddedPCIE::_lockConfigSpace(IOPCIAddressSpace)
AppleEmbeddedPCIE::_quiescePorts(void)
AppleEmbeddedPCIE::_readCommonReg(uint)
AppleEmbeddedPCIE::_readPhyReg(uint)
AppleEmbeddedPCIE::_releasePortProperties(void)
AppleEmbeddedPCIE::_resumePorts(void)
AppleEmbeddedPCIE::_tearDown(void)
AppleEmbeddedPCIE::_updateAllPortReports(void)
AppleEmbeddedPCIE::_updatePortReport(uint)
AppleEmbeddedPCIE::_waitForLinkUp(uint,uint,uint)
AppleEmbeddedPCIE::_writeCommonReg(uint,uint)
AppleEmbeddedPCIE::_writePhyReg(uint,uint)
AppleEmbeddedPCIE::attachToChild(IORegistryEntry *,IORegistryPlane const*)
AppleEmbeddedPCIE::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleEmbeddedPCIE::configRead16(IOPCIAddressSpace,uchar)
AppleEmbeddedPCIE::configRead32(IOPCIAddressSpace,uchar)
AppleEmbeddedPCIE::configRead8(IOPCIAddressSpace,uchar)
AppleEmbeddedPCIE::configWrite16(IOPCIAddressSpace,uchar,ushort)
AppleEmbeddedPCIE::configWrite32(IOPCIAddressSpace,uchar,uint)
AppleEmbeddedPCIE::configWrite8(IOPCIAddressSpace,uchar,uchar)
AppleEmbeddedPCIE::configure(IOService *)
AppleEmbeddedPCIE::dtRegMapPortMmuIndex(uint)
AppleEmbeddedPCIE::extendedFindPCICapability(IOPCIAddressSpace,uint,ulong long *)
AppleEmbeddedPCIE::getPort(uint)
AppleEmbeddedPCIE::getPort(uint)
AppleEmbeddedPCIE::setPowerState(ulong,IOService *)
AppleEmbeddedPCIE::setPowerStateGated(ulong,IOService *)
AppleEmbeddedPCIE::start(IOService *)
AppleEmbeddedPCIE::start(IOService *)
AppleEmbeddedPCIE::stop(IOService *)
AppleEmbeddedPCIE::updateReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedPCIEPort::_applyTunablesFromData(OSData const*,uint (AppleEmbeddedPCIEPort::*)(uint),void (AppleEmbeddedPCIEPort::*)(uint,uint),char const*)
AppleEmbeddedPCIEPort::_applyTunablesFromData(OSData const*,uint (AppleEmbeddedPCIEPort::*)(uint),void (AppleEmbeddedPCIEPort::*)(uint,uint),char const*)
AppleEmbeddedPCIEPort::_findDART(void)
AppleEmbeddedPCIEPort::_findDART(void)
AppleEmbeddedPCIEPort::_findDeviceForRID(AppleEmbeddedPCIEPort::rid_t)
AppleEmbeddedPCIEPort::_findDeviceForRID(AppleEmbeddedPCIEPort::rid_t)
AppleEmbeddedPCIEPort::_findSIDForRID(AppleEmbeddedPCIEPort::rid_t,IOPCIDevice *)
AppleEmbeddedPCIEPort::_findSIDForRID(AppleEmbeddedPCIEPort::rid_t,IOPCIDevice *)
AppleEmbeddedPCIEPort::_getProtectionGranularity(uint)
AppleEmbeddedPCIEPort::_linkDownInterrupt(void)
AppleEmbeddedPCIEPort::_mapRIDToSID(IOPCIDevice *)
AppleEmbeddedPCIEPort::_mapRIDToSID(IOPCIDevice *)
AppleEmbeddedPCIEPort::_probePort(void)
AppleEmbeddedPCIEPort::_registerAsInterruptController(void)
AppleEmbeddedPCIEPort::_registerAsInterruptController(void)
AppleEmbeddedPCIEPort::_unmapRIDFromSID(IOPCIDevice *)
AppleEmbeddedPCIEPort::_unmapRIDFromSID(IOPCIDevice *)
AppleEmbeddedPCIEPort::_updateRIDToSIDMappings(uint)
AppleEmbeddedPCIEPort::allocateMSIVectors(uint,ulong long *)
AppleEmbeddedPCIEPort::autoEnable(void)
AppleEmbeddedPCIEPort::deallocateMSIVector(uint)
AppleEmbeddedPCIEPort::decodeLTSSMState(uint)
AppleEmbeddedPCIEPort::disable(bool)
AppleEmbeddedPCIEPort::disableGated(bool *,bool *)
AppleEmbeddedPCIEPort::disableGated(bool *,bool *)
AppleEmbeddedPCIEPort::disableGatedWrapper(bool *,bool *)
AppleEmbeddedPCIEPort::disableNVMeMode(void)
AppleEmbeddedPCIEPort::enable(uint)
AppleEmbeddedPCIEPort::enableGated(uint *)
AppleEmbeddedPCIEPort::enableGated(uint *)
AppleEmbeddedPCIEPort::enableGatedWrapper(uint *)
AppleEmbeddedPCIEPort::enableHardware(void)
AppleEmbeddedPCIEPort::enableHardware(void)
AppleEmbeddedPCIEPort::enableNVMeMode(void)
AppleEmbeddedPCIEPort::exitDeepSleep(void)
AppleEmbeddedPCIEPort::exitDeepSleep(void)
AppleEmbeddedPCIEPort::free(void)
AppleEmbeddedPCIEPort::getLTSSMDebugTracer(void *,uint *)
AppleEmbeddedPCIEPort::getLinkSpeed(void)
AppleEmbeddedPCIEPort::getMMURouterErrorLog(void)
AppleEmbeddedPCIEPort::getMaximumLinkSpeed(void)
AppleEmbeddedPCIEPort::handleCompleterAbortInterrupt(void)
AppleEmbeddedPCIEPort::handleCompletionTimeoutInterrupt(uint)
AppleEmbeddedPCIEPort::handleInterrupt(IOInterruptEventSource *,int)
AppleEmbeddedPCIEPort::handleLinkUp(bool)
AppleEmbeddedPCIEPort::handleTimer(IOTimerEventSource *)
AppleEmbeddedPCIEPort::handleVector(void)
AppleEmbeddedPCIEPort::init(void)
AppleEmbeddedPCIEPort::initWithAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleEmbeddedPCIEPort::initWithAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleEmbeddedPCIEPort::isReservedPortConfigRegister(uint,serializedConfigExcludedRegions_t *)
AppleEmbeddedPCIEPort::lockStateLock(void)
AppleEmbeddedPCIEPort::lockStateLock(void)
AppleEmbeddedPCIEPort::readBridgeConfig32(uint)
AppleEmbeddedPCIEPort::readConfigReg(uint)
AppleEmbeddedPCIEPort::resume(void)
AppleEmbeddedPCIEPort::setDebugFlags(IORegistryEntry *)
AppleEmbeddedPCIEPort::setDesiredLinkSpeed(uint)
AppleEmbeddedPCIEPort::setDesiredLinkSpeed(uint)
AppleEmbeddedPCIEPort::setDeviceInDeepSleep(bool)
AppleEmbeddedPCIEPort::setDeviceInDeepSleepGated(bool *)
AppleEmbeddedPCIEPort::setDeviceInDeepSleepGated(bool *)
AppleEmbeddedPCIEPort::setDeviceWake(bool)
AppleEmbeddedPCIEPort::setDeviceWake(bool)
AppleEmbeddedPCIEPort::setEndpointReset(bool)
AppleEmbeddedPCIEPort::setLinkSpeed(void)
AppleEmbeddedPCIEPort::setLinkSpeed(void)
AppleEmbeddedPCIEPort::setMaximumLinkSpeed(uint)
AppleEmbeddedPCIEPort::setMaximumLinkSpeed(uint)
AppleEmbeddedPCIEPort::setNVMeReset(bool)
AppleEmbeddedPCIEPort::setNub(IOPCIDevice *)
AppleEmbeddedPCIEPort::setNub(IOPCIDevice *)
AppleEmbeddedPCIEPort::setState(AppleEmbeddedPCIEPortState,char const*)
AppleEmbeddedPCIEPort::setStateLocked(AppleEmbeddedPCIEPortState,char const*)
AppleEmbeddedPCIEPort::setStateLocked(AppleEmbeddedPCIEPortState,char const*)
AppleEmbeddedPCIEPort::suspend(void)
AppleEmbeddedPCIEPort::unlockStateLock(void)
AppleEmbeddedPCIEPort::unlockStateLock(void)
AppleEmbeddedPCIEPort::waitForL2Entry(void)
AppleEmbeddedPCIEPort::waitForLinkUp(ulong long)
AppleEmbeddedPCIEPort::waitForLinkUpGated(ulong long *,bool *)
AppleEmbeddedPCIEPort::waitForLinkUpGated(ulong long *,bool *)
AppleEmbeddedPCIEPort::waitForPMETOAck(void)
AppleEmbeddedPCIEPort::writeBridgeConfig32(uint,uint)
AppleEmbeddedPCIEPort::writeConfigReg(uint,uint)
AppleEmbeddedPCIEUserClient::extEnableLink(IOExternalMethodArguments *,bool)
AppleEmbeddedPCIEUserClient::extGetLtssm(IOExternalMethodArguments *)
AppleEmbeddedPCIEUserClient::extGetSpeed(IOExternalMethodArguments *)
AppleEmbeddedPCIEUserClient::extGetStatus(IOExternalMethodArguments *)
AppleEmbeddedPCIEUserClient::extHotPlug(IOExternalMethodArguments *,bool)
AppleEmbeddedPCIEUserClient::extSetSpeed(IOExternalMethodArguments *)
AppleEmbeddedPCIEUserClient::getPortByIndex(uint)
AppleEmbeddedPCIEUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleEmbeddedPCIEUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleEmbeddedTemperatureReporter::AppleEmbeddedTemperatureReporter(void)
AppleEmbeddedTemperatureReporter::_destroyIOReporters(void)
AppleEmbeddedTemperatureReporter::configureReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedTemperatureReporter::copyEvent(uint,IOHIDEvent *,uint)
AppleEmbeddedTemperatureReporter::start(IOService *)
AppleEmbeddedTemperatureReporter::updateReport(IOReportChannelList *,uint,void *,void *)
AppleEmbeddedTouchEEPROMDriverUC::start(IOService *)
AppleEmbeddedUSBArbitrator::enableDeviceClock(OSObject const*,uint)
AppleEmbeddedUSBArbitrator::enableDevicePower(OSObject const*,uint)
AppleEmbeddedUSBArbitrator::free(void)
AppleEmbeddedUSBArbitrator::getCableType(void)
AppleEmbeddedUSBArbitrator::getPublishCriteria(OSSymbol const*)
AppleEmbeddedUSBArbitrator::getPublishCriteriaGated(OSSymbol const*)
AppleEmbeddedUSBArbitrator::handleUSBCableTypeChange(ulong,uint)
AppleEmbeddedUSBArbitrator::handleUSBCableTypeChangeNoLock(uint)
AppleEmbeddedUSBArbitrator::powerStateChangeThreadCall(ulong)
AppleEmbeddedUSBArbitrator::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleEmbeddedUSBArbitrator::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleEmbeddedUSBArbitrator::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleEmbeddedUSBArbitrator::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleEmbeddedUSBArbitrator::registerPhy(AppleUSBPhy *)
AppleEmbeddedUSBArbitrator::setDevicePowerState(AppleARMIODevice::DevicePowerState,uint)
AppleEmbeddedUSBArbitrator::setPowerState(ulong,IOService *)
AppleEmbeddedUSBArbitrator::setPowerStateGated(ulong)
AppleEmbeddedUSBArbitrator::start(IOService *)
AppleEmbeddedUSBArbitrator::stop(IOService *)
AppleEmbeddedUSBArbitrator::systemPowerChange(void *,uint,IOService *,void *,ulong)
AppleEmbeddedUSBArbitrator::systemPowerChangeThreadCall(AppleEmbeddedUSBArbitrator::tSystemPowerNotifyParams *)
AppleEmbeddedUSBArbitrator::systemPowerChangeThreadCallGated(uint)
AppleEmbeddedUSBArbitrator::updateClientArrays(OSObject const*,uint,OSArray **)
AppleEmbeddedUSBArbitrator::updatePublishedNubs(uint)
AppleEmbeddedUSBArbitrator::usbCableTypeInterrupt(IOInterruptEventSource *,int)
AppleEmbeddedUSBArbitrator::waitForTerminatingNubs(void)
AppleEmbeddedUSBDevice::isIAPInterface(IOUSBHostInterface *)
AppleEmbeddedUSBDevice::isSoftRetryAllowed(void)
AppleEmbeddedUSBDevice::matchPropertyTable(OSDictionary *,int *)
AppleEmbeddedUSBDevice::setAuthenticationProperites(void)
AppleEmbeddedUSBDevice::setConfiguration(uchar,bool)
AppleEmbeddedUSBDevice::setInterfaceProperties(OSObject *)
AppleEmbeddedUSBDevice::setProperties(OSObject *)
AppleEmbeddedUSBDevice::startInterfaceMatching(void)
AppleEmbeddedUSBDevice::withOptions(AppleUSBHostController *,uchar,ushort)
AppleEmbeddedUSBDeviceSupport::attemptRecovery(IOUSBHostDevice *)
AppleEmbeddedUSBDeviceSupport::isIAPInterface(IOUSBHostDevice *,StandardUSB::InterfaceDescriptor const*)
AppleEmbeddedUSBDeviceSupport::isNCMInterface(IOUSBHostDevice *,StandardUSB::InterfaceDescriptor const*)
AppleEmbeddedUSBDeviceSupport::probe(IOService *,int *)
AppleEmbeddedUSBNub::enableDeviceClock(OSObject const*,uint)
AppleEmbeddedUSBNub::enableDeviceClock(bool)
AppleEmbeddedUSBNub::enableDevicePower(OSObject const*,uint)
AppleEmbeddedUSBNub::enableDevicePower(bool)
AppleEmbeddedUSBNub::forcePower(AppleEmbeddedUSBNub::tPowerState,bool)
AppleEmbeddedUSBNub::forcePowerGated(AppleEmbeddedUSBNub::tPowerState,bool)
AppleEmbeddedUSBNub::free(void)
AppleEmbeddedUSBNub::initWithProvider(IOService *,IORegistryEntry *)
AppleEmbeddedUSBNub::message(uint,IOService *,void *)
AppleEmbeddedUSBNub::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleEmbeddedUSBNub::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleEmbeddedUSBNub::start(IOService *)
AppleEmbeddedUSBNub::stop(IOService *)
AppleEmbeddedUSBNub::terminate(uint)
AppleEmbeddedUSBNub::withProvider(IOService *,IORegistryEntry *)
AppleEthernetAquantiaAqtionFirmwareInterface::notifyFwUploadCompleted(void)
AppleEventLogHandler::start(IOService *)
AppleExternalPowerManager::MetaClass::alloc(void)
AppleExternalPowerManager::_getExternalPowerProvider(IOService *)
AppleExternalPowerManager::acknowledgeAllPendingPowerOffRequests(void)
AppleExternalPowerManager::addPowerProvider(IOService *)
AppleExternalPowerManager::getNumberOfPoweredOffExternalDevices(void)
AppleExternalPowerManager::handleDevicePowerOffNotification(IOService *,bool)
AppleExternalPowerManager::handleDevicePowerOnNotification(IOService *)
AppleExternalPowerManager::init(IOService *,uint)
AppleExternalPowerManager::isExternalPowerProvider(IOService *)
AppleExternalPowerManager::withCapacity(IOService *,uint)
AppleExternalPowerManager::~AppleExternalPowerManager()
AppleExternalPowerProvider::MetaClass::alloc(void)
AppleExternalPowerProvider::acknowledgePowerOffRequest(void)
AppleExternalPowerProvider::deferPowerOffRequest(void)
AppleExternalPowerProvider::free(void)
AppleExternalPowerProvider::init(IOService *,IOService *)
AppleExternalPowerProvider::matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleExternalPowerProvider::matchingNotificationHandlerGated(void *,IOService *,IONotifier *)
AppleExternalPowerProvider::updatePowerState(bool)
AppleExternalPowerProvider::withExternalPowerProvider(IOService *,IOService *)
AppleExternalSecondaryAudio::MetaClass::alloc(void)
AppleExternalSecondaryAudio::applyMultiControlValue(uint,OSArray const*)
AppleExternalSecondaryAudio::canSetDataSourceSelector(uint,OSArray const*)
AppleExternalSecondaryAudio::preflightMultiControlValue(uint,OSArray const*,OSArray const*)
AppleExternalSecondaryAudio::setDataSourceSelector(uint,OSArray const*)
AppleExternalSecondaryAudio::sizeofZeroFilledBuffer_ms(bool *)
AppleExternalSecondaryAudio::start(IOService *)
AppleExternalSecondaryAudio::~AppleExternalSecondaryAudio()
AppleFAN53740::free(void)
AppleFAN53740::selectOutput(AppleFAN53740VoltageOutputMode,uint,uint)
AppleFAN53740::selectOutputBypassGated(uint,uint)
AppleFAN53740::start(IOService *)
AppleFAN53740::stop(IOService *)
AppleFAN53740::updateOutputModeGated(AppleFAN53740VoltageOutputMode)
AppleFAN53740VoltageFunction::callFunction(void *,void *,void *)
AppleFAN53740VoltageFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleFabricTraceUserClient::MetaClass::alloc(void)
AppleFabricTraceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleFabricTraceUserClient::createMemoryMap(aftDRAMConfig_t *)
AppleFabricTraceUserClient::createMemoryMap(aftDRAMConfig_t *)
AppleFabricTraceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleFabricTraceUserClient::stop(IOService *)
AppleFabricTraceUserClient::~AppleFabricTraceUserClient()
AppleFairplayTextCrypter::decryptPage(void const*,void *,ulong long,TextCrypterSession *)
AppleFairplayTextCrypter::findExistingSession(crypt_file_data *)
AppleFairplayTextCrypter::newCryptSession(void *,bool *)
AppleFairplayTextCrypter::sessionDidEnd(TextCrypterSession *)
AppleFairplayTextCrypter::start(IOService *)
AppleFairplayTextCrypterSession::fairplayClose(void)
AppleFairplayTextCrypterSession::fairplayOpen(bool *)
AppleFairplayTextCrypterSession::free(void)
AppleFairplayTextCrypterSession::newCryptSession(IOTextCrypter *,rp6S0jzg *,crypt_file_data *,bool *)
AppleFermiumBTM::FIFO_FULLHandler(IOInterruptEventSource *,int)
AppleFermiumBTM::FIFO_THRHandler(IOInterruptEventSource *,int)
AppleFermiumBTM::FIFO_UFHandler(IOInterruptEventSource *,int)
AppleFermiumBTM::MetaClass::alloc(void)
AppleFermiumBTM::configSampling(void)
AppleFermiumBTM::free(void)
AppleFermiumBTM::initWithProvider(IOService *)
AppleFermiumBTM::initWithProvider(IOService *)
AppleFermiumBTM::resetSampling(void *,void *)
AppleFermiumBTM::startSampling(uint,uint)
AppleFermiumBTM::stopSampling(void)
AppleFirmwareDecodeImage4(OSData *,uint,AppleFirmwareUpdateKext *)
AppleFirmwareUpdateKext::beginFWDownload(uint)
AppleFirmwareUpdateKext::free(void)
AppleFirmwareUpdateKext::initWithData(OSDictionary *,uint,int (*)(void *,FWValidationStatus,uint,OSData *),void *,bool)
AppleFirmwareUpdateKext::loadFDRData(OSString *,OSData *,FWSignatureType,uint)
AppleFirmwareUpdateKext::loadFirmware(IOMemoryDescriptor *,FWSignatureType,uint)
AppleFirmwareUpdateKext::registerForFDRData(void *,OSArray *,int (*)(void *,FWValidationStatus,uint,OSString *,OSData *))
AppleFirmwareUpdateKext::releaseFirmware(void)
AppleFirmwareUpdateKext::start(IOService *)
AppleFirmwareUpdateKext::stop(IOService *)
AppleFirmwareUpdateKext::updatePropertyForFUDFirmwareDownloadNeeded(bool)
AppleFirmwareUpdateKext::validateFirmware(FWSignatureType)
AppleFirmwareUpdateKext::validateImage4(void)
AppleFirmwareUpdateKext::validationComplete(OSData *,int)
AppleFirmwareUpdateUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleFirmwareUpdateUserClient::initWithTask(task *,void *,uint)
AppleFirmwareUpdateUserClient::loadFDRData(ulong long,ulong long,ulong long,FWSignatureType,uint)
AppleFirmwareUpdateUserClient::loadFW(ulong long,ulong long,FWSignatureType,uint)
AppleGL3590FirmwarePayload::withFirmwareId(uint)
AppleGL3590FirmwareUpdater::MetaClass::alloc(void)
AppleGL3590FirmwareUpdaterUserClient::~AppleGL3590FirmwareUpdaterUserClient()
AppleGPIODevice::getGPIOData(void)
AppleGPIODevice::initWithParams(AppleGPIOICController *,AppleGPIOData const*)
AppleGPIODevice::initWithParams(AppleGPIOICController *,AppleGPIOData const*)
AppleGPIODevice::lockGPIO(void)
AppleGPIODevice::readGPIOState(void)
AppleGPIODevice::setGPIOCFG(uint)
AppleGPIODevice::setGPIOData(uint)
AppleGPIODevice::setGPIODefault(void)
AppleGPIODevice::setGPIODirection(uint)
AppleGPIOICController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleGPIOICController::getGPIODeviceWithName(IOService *,OSString *)
AppleGPIOICController::getGPIODeviceWithName(IOService *,char const*)
AppleGPIOICController::getGPIODeviceWithName(IOService *,char const*)
AppleGPIOICController::getInterruptHandlerAddress(void)
AppleGPIOICController::getInterruptType(IOService *,int,int *)
AppleGPIOICController::matchingDictionaryWithRole(uint)
AppleGPIOICController::start(IOService *)
AppleGPIOICController::start(IOService *)
AppleGasGaugeUpdate::_checkOperationStatus(uchar)
AppleGasGaugeUpdate::_getBatteryIdGated(uint *)
AppleGasGaugeUpdate::_getChallengeDataGated(uchar *)
AppleGasGaugeUpdate::_getInfoGated(AppleGasGaugeUpdateUserClientInfo *)
AppleGasGaugeUpdate::_initUpdateGated(void)
AppleGasGaugeUpdate::_pollUpdaterStatus(ushort *,uint,uint)
AppleGasGaugeUpdate::_sendData(AppleGasGaugeUpdateUserClientIData const*)
AppleGasGaugeUpdate::_smcGgFwUpdNotifierHandler(OSSymbol const*,OSObject *,ulong)
AppleGasGaugeUpdate::_smcGgFwUpdNotifierHandlerThreadGated(OSObject *)
AppleGasGaugeUpdate::_smcReadKey(uint,ulong long,void *)
AppleGasGaugeUpdate::_smcWriteKey(uint,ulong long,void *)
AppleGasGaugeUpdate::_startCryptoGated(uchar)
AppleGasGaugeUpdate::_startImageGated(AppleGasGaugeUpdateUserClientDataType)
AppleGasGaugeUpdate::_startUpdateGated(AppleGasGaugeUpdateUserClientOData *)
AppleGasGaugeUpdate::_writeDataDataGated(uchar const*,ulong,gg_fw_update_op)
AppleGasGaugeUpdate::_writeDataGated(AppleGasGaugeUpdateUserClientIData const*,AppleGasGaugeUpdateOpsArgs const*)
AppleGasGaugeUpdate::_writeDataLengthGated(ushort,gg_fw_update_op,uint,uint,uint,uint)
AppleGasGaugeUpdate::_writeDataSignatureGated(uchar const*,gg_fw_update_op,gg_fw_update_op)
AppleGasGaugeUpdate::_writeDigestDict(AppleGasGaugeUpdateUserClientIData const*)
AppleGasGaugeUpdate::free(void)
AppleGasGaugeUpdate::newUserClient(task *,void *,uint,IOUserClient **)
AppleGasGaugeUpdate::start(IOService *)
AppleGasGaugeUpdate::withSMCFamily(AppleSMCFamily *)
AppleGasGaugeUpdateUserClient::_sendData(AppleGasGaugeUpdateUserClientIData const*,uint,IOMemoryDescriptor *)
AppleGasGaugeUpdateUserClient::clientClose(void)
AppleGasGaugeUpdateUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleGasGaugeUpdateUserClient::initWithTask(task *,void *,uint)
AppleGen0SPMIController::MetaClass::alloc(void)
AppleGen0SPMIController::dumpDebugQueue(char *,ulong)
AppleGen0SPMIController::initRegisterFile(ulong long,ulong long)
AppleGen1SPMIController::dumpDebugQueue(char *,ulong)
AppleGen1SPMIController::initRegisterFile(ulong long,ulong long)
AppleGen1SPMIController::resetQueue(void)
AppleGen2SPMIController::initRegisterFile(ulong long,ulong long)
AppleGen2SPMIController::resetQueue(void)
AppleGenericMultitouchDecider::appendStringToDataProperty(IORegistryEntry *,char const*,char const*)
AppleGenericMultitouchDecider::authCPInterest(void *,uint,IOService *,void *,ulong)
AppleGenericMultitouchDecider::authCPMatched(void *,IOService *,IONotifier *)
AppleGenericMultitouchDecider::authenticityStateDetermined(bool)
AppleGenericMultitouchDecider::createStringForDataProperty(IORegistryEntry *,char const*)
AppleGenericMultitouchDecider::newStateDetermined(void)::$_1::__invoke(IORegistryEntry *,void *)
AppleGenericMultitouchDecider::pollAuthenticityState(IOService *)
AppleGenericMultitouchDecider::publishAuthProperty(char const*,OSObject *)::$_3::__invoke(IORegistryEntry *,void *)
AppleGenericMultitouchDecider::recordTimeInProperty(char const*)
AppleGenericMultitouchDecider::recordUltimateDecision(bool,bool)
AppleGenericMultitouchDecider::setupMatchingCallback(void)
AppleGenericMultitouchDecider::start(IOService *)
AppleGenericMultitouchDecider::stop(IOService *)
AppleGenericMultitouchDecider::trustStateDetermined(bool)
AppleGenericMultitouchHIDDeviceBase::copyPersonality(IOService *)
AppleGenericMultitouchHIDDeviceBase::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
AppleGenericMultitouchHIDDeviceBase::init(OSDictionary *)
AppleGenericMultitouchHIDDeviceBase::setExtraProperties(void)
AppleGenericMultitouchHIDSPI::AGMConfigManagerHIDSPI::challengeSequenceGetItem(uint)
AppleGenericMultitouchHIDSPI::AGMConfigManagerHIDSPI::~AGMConfigManagerHIDSPI()
AppleGenericMultitouchHIDSPI::configureSPI(void)
AppleGenericMultitouchHIDSPI::createConfigManager(IOService *)
AppleGenericMultitouchHIDSPI::createHIDSPI(void)
AppleGenericMultitouchHIDSPI::free(void)
AppleGenericMultitouchHIDSPI::handleHIDRxGated(AGMFemtoHIDSPI::HIDPacket const&)
AppleGenericMultitouchHIDSPI::interrupt(IOInterruptEventSource *,int)
AppleGenericMultitouchHIDSPI::logAck(AGMFemtoHIDSPI::AckPacket const&,AGMFemtoHIDSPI::AckPacket const&)
AppleGenericMultitouchHIDSPI::performChallengeSequence(void)
AppleGenericMultitouchHIDSPI::stop(IOService *)
AppleGenericMultitouchHIDSPI::transferDataDMA(void const*,ulong,void *,ulong,bool)
AppleH10CamIn::AllocateFwMemorySurface(uint,uint)
AppleH10CamIn::AllocateSharedMemoryForEndpoint(H10ISPAOPSharedMemoryParams *)
AppleH10CamIn::AllocateSharedMemorySurface(uint,H10ISPSharedMemorySurfaceParams **,bool,uint,bool,uint)
AppleH10CamIn::AppleH10CamInPowerChangeHandler(void *,void *,uint,IOService *,void *,ulong)
AppleH10CamIn::AppleH10CamInPowerChangeHandler_gated(uint)
AppleH10CamIn::ClientLookup(void *)
AppleH10CamIn::DARTErrorHandler_gated(IODARTErrorInfo const*)
AppleH10CamIn::DecodeFirmwareAllocationUsageField(uint,uint *,uint *)
AppleH10CamIn::DisableCamPMU(void)
AppleH10CamIn::DisableFHSi(void)
AppleH10CamIn::DisableISPClocksAndPower(void)
AppleH10CamIn::DisableSensor0(void)
AppleH10CamIn::DisableSensor1(void)
AppleH10CamIn::DisableSensor2(void)
AppleH10CamIn::DisableSensorRefClockForChannel(uint)
AppleH10CamIn::DisableStrobePower(void)
AppleH10CamIn::EnableCamPMU(void)
AppleH10CamIn::EnableIRCamAvddControl(void)
AppleH10CamIn::EnableISPCPUMotionDataProcessing(void)
AppleH10CamIn::EnableISPClocksAndPower(void)
AppleH10CamIn::EnableISPClocksAndPower(void)
AppleH10CamIn::EnableSensor0(void)
AppleH10CamIn::EnableSensor1(void)
AppleH10CamIn::EnableSensor2(void)
AppleH10CamIn::EnableSensorRefClockForChannel(uint,bool)
AppleH10CamIn::EnableStrobePower(void)
AppleH10CamIn::FirmwareTraceCallback_gated(kd_callback_type)
AppleH10CamIn::FlushFirmwareWorkProcessorSurfaceCache(task *,bool)
AppleH10CamIn::ForceISPDPEIdle(void)
AppleH10CamIn::FreeDeletionPendingAllocations(void)
AppleH10CamIn::FreeSharedMemorySurface(ulong long)
AppleH10CamIn::FreeSharedMemorySurfaceWithParams(H10ISPSharedMemorySurfaceParams *)
AppleH10CamIn::GetISPTimeToSystemTimeSync(ulong long *,ulong long *)
AppleH10CamIn::GetSurfaceForDataFile_gated(uint,uint,IOSurface **)
AppleH10CamIn::HandleFirmwareTimeout(void)
AppleH10CamIn::HandleFirmwareTimeout(void)
AppleH10CamIn::HandleSystemHasPoweredOn_gated(void)
AppleH10CamIn::IPCEndPointTimerHandler(IOTimerEventSource *)
AppleH10CamIn::ISPCoredumpInit(void)
AppleH10CamIn::ISP_AdamsI2CBridgeEnable(uint,uint)
AppleH10CamIn::ISP_AdamsPmuConfig(uint,bool)
AppleH10CamIn::ISP_AdamsPmuJulietLdoON(void)
AppleH10CamIn::ISP_AdamsSavageClockConfig(uint)
AppleH10CamIn::ISP_AnselPmuLdoOFF(void)
AppleH10CamIn::ISP_AnselPmuLdoON(void)
AppleH10CamIn::ISP_CalculateSerialNumberMismatch_gated(uint)
AppleH10CamIn::ISP_CamPmuDeInit(void)
AppleH10CamIn::ISP_CamPmuInit(uint)
AppleH10CamIn::ISP_ChannelSpecificFirmwareInitialization(uint,bool)
AppleH10CamIn::ISP_CompleteFirmwareWorkProcessorItem_gated(ulong long *,void *,uint,task *)
AppleH10CamIn::ISP_ConfigureChargePumpSAC(uint,H10CamInChannelSACParams *)
AppleH10CamIn::ISP_ConfigureJasperClockSAC(H10CamInJasperSACConfig *)
AppleH10CamIn::ISP_ConfigurePixClockSAC(uint,H10CamInChannelSACParams *)
AppleH10CamIn::ISP_ConfigureSAC(uint,uint,H10CamInChannelSACParams *,uint)
AppleH10CamIn::ISP_CopySetfile_gated(void *,uint,task *,uint)
AppleH10CamIn::ISP_CreateClientLoggingSession(uint,AppleH10CamInUserClient *,bool)
AppleH10CamIn::ISP_CreateClientLoggingSession_gated(uint,AppleH10CamInUserClient *,bool)
AppleH10CamIn::ISP_CreateClientLoggingSession_gated(uint,AppleH10CamInUserClient *,bool)
AppleH10CamIn::ISP_CreateMultiCameraSession_gated(void *,H10ISPMultiCameraSessionStruct *)
AppleH10CamIn::ISP_DestroyMultiCameraSession_gated(void *)
AppleH10CamIn::ISP_DetectFaces_gated(H10ISPDetectFacesArgsStruct *)
AppleH10CamIn::ISP_DriverInitiatedManualFocus_gated(uint,uint)
AppleH10CamIn::ISP_EnableFastMemory_gated(bool)
AppleH10CamIn::ISP_EnableFirmwareChannels_gated(uint)
AppleH10CamIn::ISP_EnablePhotometer_gated(bool)
AppleH10CamIn::ISP_EnableSensorPower(uint,bool,bool)
AppleH10CamIn::ISP_EnableSensorPower_gated(uint,bool,bool)
AppleH10CamIn::ISP_FlushInactiveDARTMappings_gated(void)
AppleH10CamIn::ISP_ForgetFirmware_gated(void)
AppleH10CamIn::ISP_GeneralFirmwareInitialization(bool)
AppleH10CamIn::ISP_GeneralProcess_Generic_gated(H10ISPGeneralProcessGenericArgsStruct *,IOUserClient *,ulong long *)
AppleH10CamIn::ISP_GetCameraStatus_gated(H10ISPCameraStatusStruct *)
AppleH10CamIn::ISP_GetCameraTime_gated(H10ISPCameraTimeStruct *)
AppleH10CamIn::ISP_GetCurrentJasperClockBanks_gated(uint,H10ISPJasperBankIndexConfig *)
AppleH10CamIn::ISP_GetFirmwareWorkProcessorItem(ulong long *,void *,uint,task *)
AppleH10CamIn::ISP_GetFirmwareWorkProcessorItem_gated(ulong long *,void *,uint,task *)
AppleH10CamIn::ISP_GetJasperClockNumParams_gated(uint,uint *)
AppleH10CamIn::ISP_GetJasperClockParam_gated(uint,uint,H10ISPJasperSACParams *)
AppleH10CamIn::ISP_GetJasperSACAnalytics_gated(bool,H10ISPJasperSACAnalytics *)
AppleH10CamIn::ISP_GetJasperStatistics_gated(H10ISPJasperStatistics *)
AppleH10CamIn::ISP_GetModuleParams_gated(uint,H10ISPModuleParamsStruct *)
AppleH10CamIn::ISP_GetPearlStatistics_gated(H10ISPPearlStatistics *)
AppleH10CamIn::ISP_GetPlatformFirmwareBufferSize(uint)
AppleH10CamIn::ISP_GetPowerStatistics_gated(H10ISPPowerStatistics *)
AppleH10CamIn::ISP_GetSensorChannel(camera_module_description)
AppleH10CamIn::ISP_GetSensorConfigInfo_gated(uint,uint,sCIspCameraConfig *)
AppleH10CamIn::ISP_GetSetfileSize(uint,uint *)
AppleH10CamIn::ISP_GetSetfileSize_gated(uint,uint *)
AppleH10CamIn::ISP_HasSensorType(camera_module_description)
AppleH10CamIn::ISP_I2CInit(uint)
AppleH10CamIn::ISP_I2CRead(uint,uint,uint,uint,uint *,uint)
AppleH10CamIn::ISP_I2CWrite(uint,uint,uint,uint,uint,uint)
AppleH10CamIn::ISP_Init(void)
AppleH10CamIn::ISP_InstallFakeSensor_gated(uint,uint)
AppleH10CamIn::ISP_IsPearlCamProjectorSafe(void)
AppleH10CamIn::ISP_IsPearlCamProjectorSafe_gated(void)
AppleH10CamIn::ISP_IspAneAFPP(H10ISPLoadDataFileParams *)
AppleH10CamIn::ISP_LoadDataFile(void *,uint,task *,uint,uint)
AppleH10CamIn::ISP_LoadDataFile_gated(H10ISPLoadDataFileParams *)
AppleH10CamIn::ISP_LoadFirmware_gated(void *,uint,uint,task *)
AppleH10CamIn::ISP_LoadOverrideNVM(void *,uint,task *,uint)
AppleH10CamIn::ISP_LoadOverrideNVM_gated(H10ISPLoadOverrideNVMParams *)
AppleH10CamIn::ISP_LoadSetfile(void *,uint,task *,uint)
AppleH10CamIn::ISP_LoadSetfile_gated(void *,uint,task *,uint)
AppleH10CamIn::ISP_MemoryDiagnostics_gated(void)
AppleH10CamIn::ISP_MemoryPressureNotification_gated(uint)
AppleH10CamIn::ISP_OverrideSensorClockFrequency_gated(uint,uint)
AppleH10CamIn::ISP_PPMActivityStopped(uint,uint)
AppleH10CamIn::ISP_PPMActivityStopped_gated(uint,uint)
AppleH10CamIn::ISP_PPMAdmissionCheck(uint,uint,uint *)
AppleH10CamIn::ISP_PPMAdmissionCheck_gated(uint,uint,uint *)
AppleH10CamIn::ISP_PearlCamProjectorSafe_gated(bool,ulong long,bool)
AppleH10CamIn::ISP_PowerOffCamera_gated(void *)
AppleH10CamIn::ISP_PowerOnCamera(void *,uint)
AppleH10CamIn::ISP_PowerOnCamera_gated(void *,uint)
AppleH10CamIn::ISP_ProcessRawImageGo_gated(uint)
AppleH10CamIn::ISP_ProcessRawImagePrepare_gated(H10ISPProcessRawArgsStruct *)
AppleH10CamIn::ISP_RegisterFirmwareWorkProcessor_gated(H10ISPFirmwareWorkProcessorRegistrationArgsStruct *,ulong long *,AppleH10CamInUserClient *)
AppleH10CamIn::ISP_ReleaseChannel_gated(void *,uint)
AppleH10CamIn::ISP_ReserveChannel(void *,uint,H10ISPChannelReserveArgs *)
AppleH10CamIn::ISP_ReserveChannel_gated(void *,uint,H10ISPChannelReserveArgs *)
AppleH10CamIn::ISP_ResumeFirmware(void)
AppleH10CamIn::ISP_RetainDaemon(void)
AppleH10CamIn::ISP_RetainDaemon_gated(void)
AppleH10CamIn::ISP_RunAlgoChooseJasperPriPairIndices(uint,uint *,uint,task *)
AppleH10CamIn::ISP_RunAlgoChooseJasperPriPairIndices_gated(uint,uint *,uint,task *)
AppleH10CamIn::ISP_SavageClockConfig(uint)
AppleH10CamIn::ISP_SavageFusing(void *,uint,uint,task *)
AppleH10CamIn::ISP_SavageFusing_gated(void *,uint,uint,task *)
AppleH10CamIn::ISP_SavagePreFusing_gated(uint)
AppleH10CamIn::ISP_SavagePrePersonalize(uint)
AppleH10CamIn::ISP_SavagePrePersonalize_gated(uint)
AppleH10CamIn::ISP_ScheduleWork_gated(AppleH10CamInFirmwareWorkProcessorRPCRequest *)
AppleH10CamIn::ISP_SelectBestChargePumpFrequencyIndex_gated(uint,uint *)
AppleH10CamIn::ISP_SelectBestMIPIFrequencyIndex_gated(uint,uint *)
AppleH10CamIn::ISP_SelectBestPixClockFrequencyIndex_gated(uint,uint *)
AppleH10CamIn::ISP_SendBuffers(H10ISPSendBufferArgsStruct *,uint,IOUserClient *,ulong long *)
AppleH10CamIn::ISP_SendBuffers_gated(H10ISPSendBufferArgsStruct *,uint,IOUserClient *,ulong long *)
AppleH10CamIn::ISP_SendCommand(uchar *,uint,uint,uint,task *,uint)
AppleH10CamIn::ISP_SendCommand_gated(H10ISPUserFWCommandParams *)
AppleH10CamIn::ISP_SendFirmwareBestChargePumpFrequencyIndex_gated(uint)
AppleH10CamIn::ISP_SendFirmwareBestMIPIFrequencyIndex_gated(uint)
AppleH10CamIn::ISP_SendFirmwareJasperClockParams_gated(uint)
AppleH10CamIn::ISP_SetBestChargePumpFrequencyIndex_gated(uint,uint)
AppleH10CamIn::ISP_SetBestMIPIFrequencyIndex_gated(uint,uint)
AppleH10CamIn::ISP_SetBestPixClockFrequencyIndex_gated(uint,uint)
AppleH10CamIn::ISP_SetCalibration(uint,void *,H10ISPCalibrationType,task *)
AppleH10CamIn::ISP_SetCalibration_gated(H10ISPCalibrationParams *)
AppleH10CamIn::ISP_SetCurrentJasperClockBanks_gated(uint,H10ISPJasperBankIndexConfig *)
AppleH10CamIn::ISP_SetDARTCacheTTL_gated(uint)
AppleH10CamIn::ISP_SetDriverProperty_gated(uint,uint)
AppleH10CamIn::ISP_SetFullStatsMode_gated(uint)
AppleH10CamIn::ISP_SetTimeOfFlightProjectorMode_gated(uint)
AppleH10CamIn::ISP_ShowSharedMemoryAllocations(ulong long)
AppleH10CamIn::ISP_ShowSharedMemoryAllocations_gated(bool,ulong long)
AppleH10CamIn::ISP_SpmiDeInit(uint,uint)
AppleH10CamIn::ISP_SpmiDeviceRead(uint,uint,ushort,uchar *,ulong)
AppleH10CamIn::ISP_SpmiDeviceWrite(uint,uint,ushort,uchar const*,ulong)
AppleH10CamIn::ISP_SpmiI2CRead(uint,uint,uint,uchar,ushort,uchar,uchar *,uchar)
AppleH10CamIn::ISP_SpmiI2CWrite(uint,uint,uint,uchar,ushort,uchar,uchar const*,uchar)
AppleH10CamIn::ISP_SpmiInit(uint,uint)
AppleH10CamIn::ISP_StartCamera_gated(uint)
AppleH10CamIn::ISP_StartFirmware(void)
AppleH10CamIn::ISP_StopCamera_gated(uint)
AppleH10CamIn::ISP_Suspend(bool)
AppleH10CamIn::ISP_Suspend(bool)
AppleH10CamIn::ISP_TerminateClientLoggingSession_gated(uint,AppleH10CamInUserClient *)
AppleH10CamIn::ISP_UnregisterFirmwareWorkProcessor_gated(ulong long *,AppleH10CamInUserClient *)
AppleH10CamIn::ISP_UpdateMinion(void const*,uint,uint,task *)
AppleH10CamIn::ISP_UpdateMinion_gated(H10ISPMinionUpdateParams const*)
AppleH10CamIn::ISP_UserClientClose_gated(void *,bool)
AppleH10CamIn::ISP_UserClientOpen(void *,bool)
AppleH10CamIn::ISP_UserClientOpen_gated(void *,bool)
AppleH10CamIn::ISP_YonkersClockConfig(uint,uint)
AppleH10CamIn::ISP_YonkersFusing_gated(void *,uint,uint,task *)
AppleH10CamIn::ISP_YonkersPreFusing_gated(uint)
AppleH10CamIn::ISP_YonkersPrePersonalize_gated(uint)
AppleH10CamIn::ISP_deInit(void)
AppleH10CamIn::InitializeAOPMotionDataParams(void)
AppleH10CamIn::LDOControl(bool)
AppleH10CamIn::LoadMultiCameraCalibrationDataFromIOReg(void)
AppleH10CamIn::LoadSavageFirmwareFiles(void *,uint,uint,task *)
AppleH10CamIn::LoadYonkersFirmwareFiles(void *,uint,uint,uint,task *)
AppleH10CamIn::MemoryPressureMonitorThread(void *)
AppleH10CamIn::MetaClass::alloc(void)
AppleH10CamIn::MinionEnterBootloader(void)
AppleH10CamIn::MinionReset(void)
AppleH10CamIn::MinionSendUpdate(uint const*,uint,uint)
AppleH10CamIn::MinionWaitForPROM(void)
AppleH10CamIn::MotionDataDisable(void)
AppleH10CamIn::MotionDataEnable(void)
AppleH10CamIn::NotifyPearlCamOfSleepWakeStateChange_gated(uint)
AppleH10CamIn::PerformPowerGatingDisabledReset(void)
AppleH10CamIn::PowerOffMinion(void)
AppleH10CamIn::PowerOnMinion(void)
AppleH10CamIn::PrintFwDebugInfo(void)
AppleH10CamIn::PrintGPRegisters(void)
AppleH10CamIn::ReadAndPublishSavageInfoToIOReg(uint)
AppleH10CamIn::ReadAndPublishYonkersInfoToIOReg(uint)
AppleH10CamIn::ReleaseFirmwareWorkProcessor(ipc_port *)
AppleH10CamIn::ReleaseFirmwareWorkProcessorMappedSurface(task *,uint)
AppleH10CamIn::ReleaseFwHeapMemorySurface(void)
AppleH10CamIn::ReleaseSharedMemorySurface(ulong long)
AppleH10CamIn::RetainFirmwareWorkProcessorMappedSurface(task *,uint)
AppleH10CamIn::RetainSharedMemorySurface(ulong long)
AppleH10CamIn::RunDeferredEarlyFW(void)
AppleH10CamIn::SendBCARDataToFirmware(uint)
AppleH10CamIn::SendBCTRDataToFirmware(uint)
AppleH10CamIn::SendEarlyBootDatafilesToFirmware(void)
AppleH10CamIn::SendLPDPRxPhyEfuseDataToFirmware(uint)
AppleH10CamIn::SendSphereExtendedStrokeRangeToFirmware(uint)
AppleH10CamIn::SendStrobeCalDataToFirmware(uint)
AppleH10CamIn::SharedMemorySurfaceTargetPhysicalAddressToHostVirtualAddress(ulong long,H10ISPSharedMemorySurfaceParams **,uint *)
AppleH10CamIn::SharedMemorySurfaceTargetPhysicalAddressToHostVirtualAddress(ulong long,H10ISPSharedMemorySurfaceParams **,uint *)
AppleH10CamIn::SpmiLoadSavageFirmwareFiles(void *,uint,uint,task *)
AppleH10CamIn::SpmiReadAndPublishSavageInfo(uint)
AppleH10CamIn::UpdateSensorStateInIORegForChannel(uint,bool)
AppleH10CamIn::_ppmArrivalNotificationHandler(void *,IOService *,IONotifier *)
AppleH10CamIn::_spmiRunPolledMode(uint)
AppleH10CamIn::_spmiWaitForI2CReadResponse(uint,uint)
AppleH10CamIn::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleH10CamIn::channelNameToIndex(char *,uint *)
AppleH10CamIn::createReporters(void)
AppleH10CamIn::dartMapMemoryDescriptor(IOMemoryDescriptor *,IODMACommand **,ulong long *)
AppleH10CamIn::destroyReporters(void)
AppleH10CamIn::doorBellRing0(void *)
AppleH10CamIn::doorBellRing1(void *)
AppleH10CamIn::doorBellRing2(void *)
AppleH10CamIn::doorBellRing3(void *)
AppleH10CamIn::drainIOProcessorChannelMessageQueues(void)
AppleH10CamIn::executeSPMICommand(H12SPMICommand *)
AppleH10CamIn::ispAddressToHostAddress(uint)
AppleH10CamIn::ispCmdSend(void *,uint,uint *,uint,bool,ulong long,uint,bool,bool)
AppleH10CamIn::ispInterruptHandler(IOInterruptEventSource *,int)
AppleH10CamIn::ispInterruptHandler(IOInterruptEventSource *,int)
AppleH10CamIn::l2cLsuFedMmuErrorReporting(void)
AppleH10CamIn::makeWorkloopNonRealTimeThread(void)
AppleH10CamIn::makeWorkloopRealTimeThread(void)
AppleH10CamIn::mapFwCTRRRegion(void)
AppleH10CamIn::newUserClient(task *,void *,uint,IOUserClient **)
AppleH10CamIn::powerStateDidChangeTo_gated(ulong,ulong,IOService *)
AppleH10CamIn::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleH10CamIn::powerStateWillChangeTo_gated(ulong,ulong,IOService *)
AppleH10CamIn::power_off_hardware(void)
AppleH10CamIn::power_off_savage(uint)
AppleH10CamIn::power_off_yonkers(uint)
AppleH10CamIn::power_on_hardware(void)
AppleH10CamIn::power_on_savage(uint)
AppleH10CamIn::power_on_yonkers(uint)
AppleH10CamIn::processCommandResponse(uint,uint,uint)
AppleH10CamIn::processDebugLoggingRequest(uint,uint,uint)
AppleH10CamIn::processSharedMallocRequest(uint,uint,uint)
AppleH10CamIn::processTargetToHostBufferNotification(uint,uint,uint)
AppleH10CamIn::processTargetToHostIOCommand(uint,uint,uint)
AppleH10CamIn::resetSensors(bool)
AppleH10CamIn::sacActionChannel0_FreqArray0(uint)
AppleH10CamIn::sacActionChannel0_FreqArray1(uint)
AppleH10CamIn::sacActionChannel0_FreqArray2(uint)
AppleH10CamIn::sacActionChannel0_PixClock(uint)
AppleH10CamIn::sacActionChannel1_FreqArray0(uint)
AppleH10CamIn::sacActionChannel1_FreqArray1(uint)
AppleH10CamIn::sacActionChannel1_FreqArray2(uint)
AppleH10CamIn::sacActionChannel2_ChargePump(uint)
AppleH10CamIn::sacActionChannel2_FreqArray0(uint)
AppleH10CamIn::sacActionChannel2_FreqArray1(uint)
AppleH10CamIn::sacActionChannel2_FreqArray2(uint)
AppleH10CamIn::sacActionChannel3_ChargePump(uint)
AppleH10CamIn::sacActionChannel3_FreqArray0(uint)
AppleH10CamIn::sacActionChannel4_FreqArray0(uint)
AppleH10CamIn::sacActionChannel4_FreqArray1(uint)
AppleH10CamIn::sacActionChannel4_FreqArray2(uint)
AppleH10CamIn::sacActionChannel5_JasperClock(uint,uint const*)
AppleH10CamIn::setPowerState(ulong,IOService *)
AppleH10CamIn::setPowerStateGated(ulong,IOService *)
AppleH10CamIn::setSensorClockDividers(void)
AppleH10CamIn::start(IOService *)
AppleH10CamIn::start(IOService *)
AppleH10CamIn::stop(IOService *)
AppleH10CamIn::timeOut(IOTimerEventSource *)
AppleH10CamIn::updateReport(IOReportChannelList *,uint,void *,void *)
AppleH10CamIn::validatePSReg(uint,uint,uint)
AppleH10CamIn::~AppleH10CamIn()
AppleH10CamInFrameMetadata::AppleH10CamInFrameMetadata(IOSurface *)
AppleH10CamInFrameMetadata::~AppleH10CamInFrameMetadata()
AppleH10CamInFrameReceiver::ConfigureChannel(void)
AppleH10CamInFrameReceiver::DisableFaceDetect(uint)
AppleH10CamInFrameReceiver::EnableFaceDetect(uint)
AppleH10CamInFrameReceiver::ReFillFirmwareBufferPools(bool)
AppleH10CamInFrameReceiver::SetBufferRecyclingMode(uint)
AppleH10CamInFrameReceiver::StartReceive(void)
AppleH10CamInFrameReceiver::StopReceive(void)
AppleH10CamInFrameReceiver::create(AppleH10CamIn *,int (*)(void *,uint,uint,ulong long *),void *,uint,uint,uint,uint,uint,H10ISPFrameFormat,uint,uint,uint,uint,bool,uint,uint,uint,uint,uint,uint,ushort,ushort,eCIspFIDFlowType,uint,uint,OSArray *)
AppleH10CamInFrameReceiver::free(void)
AppleH10CamInFrameReceiverBuffer::ClearBufferContents(void)
AppleH10CamInFrameReceiverBuffer::CompleteMemoryDescriptor(void)
AppleH10CamInFrameReceiverBuffer::PrepareMemoryDescriptor(void)
AppleH10CamInFrameReceiverBuffer::allocateSurface(void)
AppleH10CamInFrameReceiverBuffer::create(IOSurfaceRoot *,uint,uint,H10ISPFrameFormat,uint,uint,kern_allocation_name *,uint)
AppleH10CamInFrameReceiverBuffer::free(void)
AppleH10CamInFrameReceiverBufferPool::AddBuffers(uint)
AppleH10CamInFrameReceiverBufferPool::GetBuffer(void)
AppleH10CamInFrameReceiverBufferPool::GetInfo(uint *,uint *)
AppleH10CamInFrameReceiverBufferPool::GetSurfaceByID(uint)
AppleH10CamInFrameReceiverBufferPool::ReturnBufferBySurfaceID(uint)
AppleH10CamInFrameReceiverBufferPool::ShowBuffers(void)
AppleH10CamInFrameReceiverBufferPool::create(IOSurfaceRoot *,AppleH10CamInFrameReceiverBufferPoolType,uint,uint,uint,uint,uint,H10ISPFrameFormat,bool,uint,uint,uint,uint,uint,uint,kern_allocation_name *,uint)
AppleH10CamInFrameReceiverBufferPool::free(void)
AppleH10CamInFrameReceiver__init_AppleH10CamIn___int_____void___unsigned_int__unsigned_int__unsigned_long_long____void___unsigned_int__unsigned_int__unsigned_int__unsigned_int__unsigned_int__H10ISPFrameFormat__unsigned_int__unsigned_int__unsigned_int__unsigned_int__bool__unsigned_int__unsigned_int__unsigned_int__unsigned_int__unsigned_int__unsigned_int__unsigned_short__unsigned_short__eCIspFIDFlowType__unsigned_int__unsigned_int__OSArray
AppleH10CamInUserClient::_ISP_CreateClientLoggingSession(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_DeviceClose(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_EnableFastISPClock(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_EnableSensorPower(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_GetFirmwareWorkProcessorItem(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_LoadDataFile(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_LoadSetfile(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_PearlCamProjectorSafe(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_PowerOnCamera(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_ReserveChannel(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SavageFusing(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SendBuffers(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SendCommand(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SetCalibration(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SpmiDeviceRead(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SpmiDeviceWrite(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SpmiRegRead(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::_ISP_SpmiRegWrite(AppleH10CamInUserClient*,void *,IOExternalMethodArguments *)
AppleH10CamInUserClient::clientClose(void)
AppleH10CamInUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleH10CamInUserClient::free(void)
AppleH10CamInUserClient::init(task *,OSDictionary *)
AppleH10CamInUserClient::start(IOService *)
AppleH10CamInUserClient::stop(IOService *)
AppleH10CamInWorkLoop::closeGate(void)
AppleH10CamInWorkLoop::openGate(void)
AppleH10PearlCam::AllocateReleaseStreamingBuffers(bool)
AppleH10PearlCam::AllocateStreamingBuffers_gated(void)
AppleH10PearlCam::AllocateSurface(uint,IOSurface **)
AppleH10PearlCam::CreatePearlSURDictionary(void)
AppleH10PearlCam::CreateSendBuffersInfoDict(PearlCamSendBuffersType,PearlCamSequenceType,uint,uint,uint,uint,uint,uint,uint,uint,bool,int,PearlCamProjectorMode,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,bool,int,int,int,PearlCamFaceOrientationInfo,uint,int,int,int,int)
AppleH10PearlCam::DeferredPowerDownTimeOut(IOTimerEventSource *)
AppleH10PearlCam::FrameReceivedProc(void *,uint,uint,ulong long *)
AppleH10PearlCam::FrameReceivedTimeOut(IOTimerEventSource *)
AppleH10PearlCam::FreeSurface(IOSurface *)
AppleH10PearlCam::GetChannelInfo(uint,sCIspCmdChInfoGet *)
AppleH10PearlCam::GetPoolID(uint,eCIspImageFlowDynamicPoolType,uint *)
AppleH10PearlCam::HandleSystemWillPowerOnMessage(void)
AppleH10PearlCam::HandleSystemWillSleepMessage(void)
AppleH10PearlCam::HandleSystemWillSleepMessage_gated(void)
AppleH10PearlCam::MetaClass::alloc(void)
AppleH10PearlCam::ParseDoBioOptionsDict(OSDictionary *)
AppleH10PearlCam::PearlCamMessageHandler_Abort(PearlCamAbortMessage *)
AppleH10PearlCam::PearlCamMessageHandler_DoBioCapture(PearlCamDoBioCaptureMessage *)
AppleH10PearlCam::PearlCamMessageHandler_DoRetry(PearlCamDoRetryMessage *)
AppleH10PearlCam::PearlCamMessageHandler_DoSecretPattern(PearlCamDoSecretPatternMessage *)
AppleH10PearlCam::PearlCamMessageHandler_FaceDetectStatus(PearlCamFaceDetectStatusMessage *)
AppleH10PearlCam::PearlCamMessageHandler_PowerOff(PearlCamPowerOffMessage *)
AppleH10PearlCam::PearlCamMessageHandler_PowerOn(PearlCamPowerOnMessage *)
AppleH10PearlCam::PearlCamMessageHandler_ReportError(PearlCamReportErrorMessage *)
AppleH10PearlCam::PearlCamMessageHandler_SendBuffers(PearlCamSendBuffersMessage *)
AppleH10PearlCam::PearlCamMessageHandler_Start(PearlCamStartMessage *)
AppleH10PearlCam::PearlCamMessageHandler_Stop(PearlCamStopMessage *)
AppleH10PearlCam::PearlCamMessageHandler_TimerTimeout(PearlCamTimerTimeoutMessage *)
AppleH10PearlCam::PearlCamPowerOffCamera(void)
AppleH10PearlCam::PearlCamStateEntryProc_BIO_CHECK(void)
AppleH10PearlCam::PearlCamStateEntryProc_BIO_DONE(void)
AppleH10PearlCam::PearlCamStateEntryProc_IDLE(void)
AppleH10PearlCam::PearlCamStateEntryProc_SECRET_DONE(void)
AppleH10PearlCam::PearlCamStateEntryProc_SECRET_PATTERN(void)
AppleH10PearlCam::PearlCam_CopyProbeDBData(void)
AppleH10PearlCam::PearlCam_GetBufferBufferUseStatistics(uint *,uint *,uint *,uint *,uint *)
AppleH10PearlCam::PearlCam_GetInfo_gated(bool)
AppleH10PearlCam::PearlCam_QueuePearlCamMessage(PearlCamMessage *)
AppleH10PearlCam::PearlCam_ShowSharedMemoryAllocations_gated(void)
AppleH10PearlCam::RecordFrames(OSDictionary *,PearlCamSendBuffersType,PearlCamSequenceType,uint,uint)
AppleH10PearlCam::ReleaseChannelProc(void *,uint)
AppleH10PearlCam::ReleaseChannels(void)
AppleH10PearlCam::ReleaseStreamingBuffers_gated(void)
AppleH10PearlCam::ReplayCommand(char const*,uint,uint)
AppleH10PearlCam::ReplayNextFaceFrame(void)
AppleH10PearlCam::ReserveChannels(uint)
AppleH10PearlCam::SendFaceDetectStatusMessageToClient(bool,OSDictionary *)
AppleH10PearlCam::SendNotificationMessageToClient(PearlCamNotificationType,OSObject *)
AppleH10PearlCam::SendReportErrorMessageToClient(PearlCamErrorCode,PearlCamMessageType)
AppleH10PearlCam::SendSendBuffersMessageToClient(OSDictionary *,PearlCamSendBuffersType,PearlCamSequenceType,uint,uint,uint,uint,uint,uint,uint,uint,bool,int,PearlCamProjectorMode,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,bool,int,int,int,PearlCamFaceOrientationInfo,uint,int,int,int,int)
AppleH10PearlCam::SetAttentionNetworkParameters(uint,bool,uchar *,uint)
AppleH10PearlCam::StartDeferredPowerDownTimer(uint)
AppleH10PearlCam::StartFrameReceivedTimer(uint)
AppleH10PearlCam::StartFrameReceiver(void)
AppleH10PearlCam::StartStateTimer(uint)
AppleH10PearlCam::StateTimeOut(IOTimerEventSource *)
AppleH10PearlCam::StopDeferredPowerDownTimer(void)
AppleH10PearlCam::StopFrameReceiver(void)
AppleH10PearlCam::SwitchState(PearlCamState)
AppleH10PearlCam::WorkProcessorDoneProc(void *,void *)
AppleH10PearlCam::checkForWork(void)
AppleH10PearlCam::newUserClient(task *,void *,uint,IOUserClient **)
AppleH10PearlCam::probe(IOService *,int *)
AppleH10PearlCam::start(IOService *)
AppleH10PearlCam::stop(IOService *)
AppleH10PearlCamUserClient::clientClose(void)
AppleH10PearlCamUserClient::clientDied(void)
AppleH10PearlCamUserClient::free(void)
AppleH10PearlCamUserClient::init(task *,OSDictionary *)
AppleH10PearlCamUserClient::start(IOService *)
AppleH10PearlCamUserClient::stop(IOService *)
AppleH13CamInFrameReceiverBuffer::init(IOSurfaceRoot *,uint,uint,H13ISPFrameFormat,uint,uint,kern_allocation_name *,uint)
AppleH13CamInFrameReceiverBufferPool::init(IOSurfaceRoot *,AppleH13CamInFrameReceiverBufferPoolType,uint,uint,uint,uint,uint,H13ISPFrameFormat,bool,uint,uint,uint,uint,uint,uint,kern_allocation_name *,uint)
AppleH13PearlCam::CreateStatisticsDictionary(PearlCamStatisticsStruct *,char const*)
AppleH13PearlCam::PearlCamMessageHandler_Notification(PearlCamNotificationMessage *)
AppleH13PearlCam::PearlCam_SetProperty(H13ISPPearlCamProperties,ulong long)
AppleH13PearlCam::PearlCam_SetProperty_gated(H13ISPPearlCamProperties,ulong long)
AppleH13PearlCam::PearlCam_TestMessage_gated(PearlCamMessageType)
AppleH13PearlCam::initWithCameraInterface(AppleH13CamIn *)
AppleH1xANEMsgQue::ANE_enQueueMsg(H1xANEMessage *)
AppleHIDKeyboardDeviceManagement::AppleHIDKeyboardDeviceManagement(void)
AppleHIDKeyboardDeviceManagement::MetaClass::alloc(void)
AppleHIDKeyboardDeviceManagement::free(void)
AppleHIDKeyboardDeviceManagement::message(uint,IOService *,void *)
AppleHIDKeyboardDeviceManagement::removeSleepWakeNotifier(void)
AppleHIDKeyboardDeviceManagement::setFeatureReport(uchar,uchar *,uint)
AppleHIDKeyboardDeviceManagement::setFeatureReportWL(uchar,uchar *,uint)
AppleHIDKeyboardDeviceManagement::start(IOService *)
AppleHIDKeyboardDeviceManagement::stop(IOService *)
AppleHIDKeyboardDeviceManagement::terminate(uint)
AppleHIDKeyboardDeviceManagement::~AppleHIDKeyboardDeviceManagement()
AppleHIDKeyboardDeviceManagementRemoveNotifier(void *,void *)
AppleHIDKeyboardDeviceManagementSystemPowerChangeHandler(void *,void *,uint,IOService *,void *,ulong)
AppleHIDKeyboardEventDriver::MetaClass::alloc(void)
AppleHIDKeyboardEventDriver::handleStart(IOService *)
AppleHIDKeyboardEventDriver::turnOffCapsLockDelay(void)
AppleHIDKeyboardEventDriver::~AppleHIDKeyboardEventDriver()
AppleHIDKeyboardEventDriverV2::MetaClass::alloc(void)
AppleHIDKeyboardEventDriverV2::createCapsLockLanguageSwitch(uchar *,uint)
AppleHIDKeyboardEventDriverV2::createFKeyMapping(uchar *,uint)
AppleHIDKeyboardEventDriverV2::createKeyboardLanguage(KBLanguages)
AppleHIDKeyboardEventDriverV2::createStandardType(KeyboardFormatInfo *)
AppleHIDKeyboardEventDriverV2::getFeatureReport(uchar,uchar *,uint *)
AppleHIDKeyboardEventDriverV2::getFeatureReportWL(uchar,uchar *,uint *)
AppleHIDKeyboardEventDriverV2::getGlyphKeyMapping(KBGlyphKeys)
AppleHIDKeyboardEventDriverV2::getHallEffectSensorState(void)
AppleHIDKeyboardEventDriverV2::getUsageMapping(KBMappings)
AppleHIDKeyboardEventDriverV2::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleHIDKeyboardEventDriverV2::init(OSDictionary *)
AppleHIDKeyboardEventDriverV2::initKeyboardBacklight(void)
AppleHIDKeyboardEventDriverV2::initKeyboardBacklightGated(void)
AppleHIDKeyboardEventDriverV2::initKeyboardConfiguration(void)
AppleHIDKeyboardEventDriverV2::initKeyboardConfigurationGated(void)
AppleHIDKeyboardEventDriverV2::overrideKeyboardProperties(void)
AppleHIDKeyboardEventDriverV2::parseKeyboardConfiguration(IOBufferMemoryDescriptor *,int)
AppleHIDKeyboardEventDriverV2::populateKeyboardProperties(uchar)
AppleHIDKeyboardEventDriverV2::registerService(uint)
AppleHIDKeyboardEventDriverV2::sendKeyboardBrightnessEvent(ushort,ushort,ushort)
AppleHIDKeyboardEventDriverV2::setKeyboardEnabledProperty(uchar)
AppleHIDKeyboardEventDriverV2::setProperties(OSObject *)
AppleHIDKeyboardEventDriverV2::setPropertiesGated(OSObject *)
AppleHIDKeyboardEventDriverV2::start(IOService *)
AppleHIDKeyboardEventDriverV2::stop(IOService *)
AppleHIDKeyboardEventDriverV2::~AppleHIDKeyboardEventDriverV2()
AppleHIDTransportBootloader::cacheConfig(void)
AppleHIDTransportBootloader::clearMemoryDumps(void)
AppleHIDTransportBootloader::clearMemoryDumpsGated(void)
AppleHIDTransportBootloader::configBool(OSDictionary *,bool *,char const*)
AppleHIDTransportBootloader::configUint32(OSDictionary *,uint *,char const*)
AppleHIDTransportBootloader::continueOnFailure(void)
AppleHIDTransportBootloader::copyAndCheckPropertyOrReference(OSString *,OSDictionary *,OSDictionary *,OSData **,OSString **)
AppleHIDTransportBootloader::copyCachedMemoryDumps(OSArray **)
AppleHIDTransportBootloader::copyCachedMemoryDumpsGated(OSArray **)
AppleHIDTransportBootloader::copyImagePayload(OSDictionary *,OSData **)
AppleHIDTransportBootloader::copyMasterBootloader(void)
AppleHIDTransportBootloader::createImageArrayForPersonality(OSString *,OSDictionary *)
AppleHIDTransportBootloader::downloadAction(void)
AppleHIDTransportBootloader::free(void)
AppleHIDTransportBootloader::getValueFromObject(OSData *,OSObject *,uint *)
AppleHIDTransportBootloader::init(OSDictionary *)
AppleHIDTransportBootloader::loadFirmwareFinished(bool)
AppleHIDTransportBootloader::publishPropertySource(OSString *,OSString *)
AppleHIDTransportBootloader::readMemoryDumps(void)
AppleHIDTransportBootloader::readProperty(OSString *,OSData **)
AppleHIDTransportBootloader::registerUserClient(AppleHIDTransportBootloaderUserClient *)
AppleHIDTransportBootloader::resetDevice(void)
AppleHIDTransportBootloader::setProperties(OSObject *)
AppleHIDTransportBootloader::start(AppleHIDTransportBootloadableService *,AIDImageDownloader *)
AppleHIDTransportBootloader::stop(IOService *)
AppleHIDTransportBootloader::unregisterUserClient(AppleHIDTransportBootloaderUserClient *)
AppleHIDTransportBootloader::updateProperty(OSString *,OSData *,uint)
AppleHIDTransportBootloaderCBOR::clearEncodedFirmware(void)
AppleHIDTransportBootloaderCBOR::getReservedMemoryDumpSize(void)
AppleHIDTransportBootloaderHBPP::OTP::OTP(uint,uint,AppleHIDTransportBootloaderHBPP*)
AppleHIDTransportBootloaderHBPP::OTP::controlWrite(uint,AppleHIDTransportBootloaderHBPP::OTP::Command)
AppleHIDTransportBootloaderHBPP::OTP::enableLDO(void)
AppleHIDTransportBootloaderHBPP::OTP::init(void)
AppleHIDTransportBootloaderHBPP::OTP::read(uint,uint,uint *)
AppleHIDTransportBootloaderHBPP::OTP::readModifyWrite(uint,uint,uint)
AppleHIDTransportBootloaderHBPP::OTP::readWord(uint,uint *)
AppleHIDTransportBootloaderHBPP::OTP::waitForRegisterMask(AppleHIDTransportBootloaderHBPP::OTP::Register,uint)
AppleHIDTransportBootloaderHBPP::OTP::waitUntilCommandDone(void)
AppleHIDTransportBootloaderHBPP::bootSequence(void)
AppleHIDTransportBootloaderHBPP::buildPreconstructed(OSData *,uint)
AppleHIDTransportBootloaderHBPP::cacheProviderConfig(IORegistryEntry *)
AppleHIDTransportBootloaderHBPP::cleanConfig(void)
AppleHIDTransportBootloaderHBPP::completeMemoryDump(uint,uint)
AppleHIDTransportBootloaderHBPP::didWatchdogResetOccur(void)
AppleHIDTransportBootloaderHBPP::free(void)
AppleHIDTransportBootloaderHBPP::getAddressMaskValue(OSDictionary *,uint *,uint *,uint *)
AppleHIDTransportBootloaderHBPP::handleStart(IOService *)
AppleHIDTransportBootloaderHBPP::handleStop(IOService *)
AppleHIDTransportBootloaderHBPP::init(OSDictionary *)
AppleHIDTransportBootloaderHBPP::isBootloaderReady(void)
AppleHIDTransportBootloaderHBPP::newHBPPProtocol(void)
AppleHIDTransportBootloaderHBPP::transferData(uchar *,uchar *,uint,bool)
AppleHIDTransportBootloaderHIDDevice::cacheProviderConfig(IORegistryEntry *)
AppleHIDTransportBootloaderHIDDevice::checkNewImage(OSDictionary *,uint)
AppleHIDTransportBootloaderHIDDevice::formChunkWriteDescriptor(AppleHIDTransportBootloaderHIDDevice::ChunkWriteDescriptor &,OSDictionary *)
AppleHIDTransportBootloaderHIDDevice::free(void)
AppleHIDTransportBootloaderHIDDevice::handleLoadImage(uint)
AppleHIDTransportBootloaderHIDDevice::handleStart(IOService *)
AppleHIDTransportBootloaderHIDDevice::handleStop(IOService *)
AppleHIDTransportBootloaderHIDDevice::notifyDeviceEventGated(AppleHIDTransportBootloaderHIDDevice::DeviceEvent *)
AppleHIDTransportBootloaderHIDDevice::parseCalibrationDescriptor(OSArray *,OSData *,OSDictionary *)
AppleHIDTransportBootloaderHIDDevice::validateCalibrationDescriptor(OSArray *)
AppleHIDTransportBootloaderHIDDevice::validateChunkSizeDescriptor(OSDictionary *)
AppleHIDTransportBootloaderPassive::cacheProviderConfig(IORegistryEntry *)
AppleHIDTransportBootloaderPassive::handleLoadImage(uint)
AppleHIDTransportBootloaderRTBuddy::cacheBootloaderConfig(OSDictionary *)
AppleHIDTransportBootloaderRTBuddy::cacheProviderConfig(IORegistryEntry *)
AppleHIDTransportBootloaderRTBuddy::checkNewImage(OSDictionary *,uint)
AppleHIDTransportBootloaderRTBuddy::cleanConfig(void)
AppleHIDTransportBootloaderRTBuddy::configString(OSDictionary *,OSString **,char const*)
AppleHIDTransportBootloaderRTBuddy::handleStart(IOService *)
AppleHIDTransportBootloaderRTBuddy::handleStop(IOService *)
AppleHIDTransportBootloaderRTBuddy::init(IOService *,OSDictionary *)
AppleHIDTransportBootloaderRTBuddy::providerString(IORegistryEntry *,OSSymbol const**,char const*)
AppleHIDTransportBootloaderRTBuddy::waitForAppleDAPF(OSData *)
AppleHIDTransportBootloaderUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleHIDTransportBootloaderUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleHIDTransportBootloaderUserClient::notify(uint)
AppleHIDTransportBootloaderUserClient::readCurrentProperty(uchar *,ulong long,OSData **)
AppleHIDTransportBootloaderUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleHIDTransportBootloaderUserClient::sClearMemoryDumps(AppleHIDTransportBootloaderUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportBootloaderUserClient::sGetMemoryDumps(AppleHIDTransportBootloaderUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportBootloaderUserClient::sGetProperty(AppleHIDTransportBootloaderUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportBootloaderUserClient::sLoadProperty(AppleHIDTransportBootloaderUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportBootloaderUserClient::setProperties(OSObject *)
AppleHIDTransportBootloaderUserClient::start(IOService *)
AppleHIDTransportBootloaderUserClient::stop(IOService *)
AppleHIDTransportBootloaderUserClient::writeOutCurrentProperty(OSData *,ulong long,uint,task *)
AppleHIDTransportDevice::AppleHIDTransportDevice(OSMetaClass const*)
AppleHIDTransportDevice::acquireAccessGated(void)
AppleHIDTransportDevice::blockAccessGated(void)
AppleHIDTransportDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleHIDTransportDevice::configureReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportDevice::createProtocol(OSString *,bool)
AppleHIDTransportDevice::disableAccessGated(bool)
AppleHIDTransportDevice::doomclockTimeoutAction(OSObject *,IOTimerEventSource *)
AppleHIDTransportDevice::getBootloadableMaster(void)
AppleHIDTransportDevice::getBootloadableSlave(void)
AppleHIDTransportDevice::getConfigProvider(void)
AppleHIDTransportDevice::getImageDownloader(IORegistryEntry *)
AppleHIDTransportDevice::handleDeferredBootload(void)
AppleHIDTransportDevice::handlePrioritySystemPowerStateChange(void *,uint,IOService *,void *,ulong)
AppleHIDTransportDevice::init(OSDictionary *)
AppleHIDTransportDevice::killDevice(void)
AppleHIDTransportDevice::newLoggerUserClientGated(task *,void *,OSDictionary *,IOUserClient **)
AppleHIDTransportDevice::newSerialNumberString(void)
AppleHIDTransportDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleHIDTransportDevice::performMemoryDump(void)
AppleHIDTransportDevice::powerHasChanged(AHTPowerState)
AppleHIDTransportDevice::powerWillChange(AHTPowerState)
AppleHIDTransportDevice::releaseAccessGated(void)
AppleHIDTransportDevice::resumeAccessGated(void)
AppleHIDTransportDevice::sendNotification(uint)
AppleHIDTransportDevice::setCurrentPersonality(OSString *)
AppleHIDTransportDevice::setPowerState(ulong,IOService *)
AppleHIDTransportDevice::smcNotificationHandler(AppleHIDTransportSMCNotifier::NotificationType)
AppleHIDTransportDevice::smcNotificationHandlerGated(AppleHIDTransportSMCNotifier::NotificationType *)
AppleHIDTransportDevice::start(IOService *)
AppleHIDTransportDevice::stop(IOService *)
AppleHIDTransportDevice::systemWillShutdown(uint)
AppleHIDTransportDevice::updateReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportDeviceDummy::MetaClass::alloc(void)
AppleHIDTransportDeviceFIFO::MetaClass::alloc(void)
AppleHIDTransportDeviceFIFO::cacheDeviceConfig(OSDictionary *)
AppleHIDTransportDeviceFIFO::configUint8(OSDictionary *,uchar *,char const*)
AppleHIDTransportDeviceFIFO::createSharedMemoryBlock(uint)
AppleHIDTransportDeviceFIFO::getMemoryFifoSize(int)
AppleHIDTransportDeviceFIFO::getMemoryFifoSlaveAddress(int)
AppleHIDTransportDeviceFIFO::handleStop(IOService *)
AppleHIDTransportDeviceFIFO::init(OSDictionary *)
AppleHIDTransportDeviceFIFO::newBootloader(void)
AppleHIDTransportDeviceFIFO::read(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint)
AppleHIDTransportDeviceFIFO::readMemoryFifo(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint,int)
AppleHIDTransportDeviceFIFO::registerReadCompletionAction(IOService *,void (*)(OSObject *,...))
AppleHIDTransportDeviceFIFO::unregisterReadCompletionAction(void)
AppleHIDTransportDeviceFIFO::write(IOMemoryDescriptor *,ulong long,ulong long *,ulong long,uint,ulong long)
AppleHIDTransportDeviceSPI::MetaClass::alloc(void)
AppleHIDTransportDeviceSPI::bootChip(void)
AppleHIDTransportDeviceSPI::bootTimeoutAction(OSObject *,IOTimerEventSource *)
AppleHIDTransportDeviceSPI::cacheDeviceConfig(OSDictionary *)
AppleHIDTransportDeviceSPI::cleanConfig(void)
AppleHIDTransportDeviceSPI::configBool(OSDictionary *,bool *,char const*)
AppleHIDTransportDeviceSPI::configSequence(OSDictionary *,char const*,AHTFunctionSequence **)
AppleHIDTransportDeviceSPI::configString(OSDictionary *,OSString const**,char const*)
AppleHIDTransportDeviceSPI::configUint32(OSDictionary *,uint *,char const*,bool *)
AppleHIDTransportDeviceSPI::configUint8(OSDictionary *,uchar *,char const*)
AppleHIDTransportDeviceSPI::configureReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportDeviceSPI::disableInterrupt(void)
AppleHIDTransportDeviceSPI::enableInterrupt(void)
AppleHIDTransportDeviceSPI::filterAction(OSObject *,IOFilterInterruptEventSource *)
AppleHIDTransportDeviceSPI::forceInterrupt(void)
AppleHIDTransportDeviceSPI::free(void)
AppleHIDTransportDeviceSPI::getWorkLoop(void)
AppleHIDTransportDeviceSPI::handleClose(IOService *,uint)
AppleHIDTransportDeviceSPI::handleStop(IOService *)
AppleHIDTransportDeviceSPI::init(OSDictionary *)
AppleHIDTransportDeviceSPI::killDeviceGated(void)
AppleHIDTransportDeviceSPI::newBootloader(void)
AppleHIDTransportDeviceSPI::newStaticConfig(void)
AppleHIDTransportDeviceSPI::ping(void)
AppleHIDTransportDeviceSPI::prepareMemoryDump(void)
AppleHIDTransportDeviceSPI::requestMasterReset(void)
AppleHIDTransportDeviceSPI::requestMasterReset(void)::$_0::__invoke(void *,void *)
AppleHIDTransportDeviceSPI::resetDevice(void)
AppleHIDTransportDeviceSPI::resetFromSlave(void)
AppleHIDTransportDeviceSPI::setPower(AHTPowerState)
AppleHIDTransportDeviceSPI::setPowerGated(AHTPowerState *,uint *)
AppleHIDTransportDeviceSPI::setPowerTemporarily(AHTPowerState,uint)
AppleHIDTransportDeviceSPI::setResetAsserted(bool)
AppleHIDTransportDeviceSPI::softReset(void)
AppleHIDTransportDeviceSPI::systemWillShutdownGated(uint *)
AppleHIDTransportDeviceSPI::updateReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleHIDTransportDeviceUserClient::getPower(void)
AppleHIDTransportDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleHIDTransportDeviceUserClient::reset(void)
AppleHIDTransportDeviceUserClient::sGetPower(AppleHIDTransportDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportDeviceUserClient::setPower(AHTPowerState)
AppleHIDTransportDeviceUserClient::stop(IOService *)
AppleHIDTransportHIDDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleHIDTransportHIDDevice::getReportGated(IOMemoryDescriptor *,IOHIDReportType *,uchar *)
AppleHIDTransportHIDDevice::init(OSDictionary *)
AppleHIDTransportHIDDevice::newCountryCodeNumber(void)
AppleHIDTransportHIDDevice::newLocationIDNumber(void)
AppleHIDTransportHIDDevice::newManufacturerString(void)
AppleHIDTransportHIDDevice::newProductIDNumber(void)
AppleHIDTransportHIDDevice::newProductString(void)
AppleHIDTransportHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
AppleHIDTransportHIDDevice::newSerialNumberString(void)
AppleHIDTransportHIDDevice::newTransportString(void)
AppleHIDTransportHIDDevice::newVendorIDNumber(void)
AppleHIDTransportHIDDevice::newVersionNumber(void)
AppleHIDTransportHIDDevice::publishProperties(IOService *)
AppleHIDTransportHIDDevice::reportAction(IOMemoryDescriptor *)
AppleHIDTransportHIDDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleHIDTransportHIDDevice::setReportGated(IOMemoryDescriptor *,IOHIDReportType *,uchar *)
AppleHIDTransportHIDDevice::stop(IOService *)
AppleHIDTransportHIDDevice::willTerminate(IOService *,uint)
AppleHIDTransportInterface::AppleHIDTransportInterface(OSMetaClass const*)
AppleHIDTransportInterface::AppleHIDTransportInterface(void)
AppleHIDTransportInterface::cleanConfig(void)
AppleHIDTransportInterface::configBool(OSDictionary *,bool *,char const*)
AppleHIDTransportInterface::configSequence(OSDictionary *,char const*,AHTFunctionSequence **)
AppleHIDTransportInterface::configureReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportInterface::free(void)
AppleHIDTransportInterface::getPowerGated(AHTPowerState *)
AppleHIDTransportInterface::getReporterInterface(uchar)
AppleHIDTransportInterface::handleClose(IOService *,uint)
AppleHIDTransportInterface::handleMemoryDump(OSData *)
AppleHIDTransportInterface::handleOpen(IOService *,uint,void *)
AppleHIDTransportInterface::handlePrioritySystemPowerStateChange(uint)
AppleHIDTransportInterface::handleReport(IOMemoryDescriptor *)
AppleHIDTransportInterface::hidTransportInterface(OSDictionary *,IORegistryEntry *,char const*)
AppleHIDTransportInterface::init(OSDictionary *,IORegistryEntry *)
AppleHIDTransportInterface::newCountryCodeNumber(void)
AppleHIDTransportInterface::newInterfaceNumber(void)
AppleHIDTransportInterface::newLocationIDNumber(void)
AppleHIDTransportInterface::newManufacturerString(void)
AppleHIDTransportInterface::newProductIDNumber(void)
AppleHIDTransportInterface::newProductString(void)
AppleHIDTransportInterface::newReportDescriptor(IOMemoryDescriptor **)
AppleHIDTransportInterface::newSerialNumberString(void)
AppleHIDTransportInterface::newTransportString(void)
AppleHIDTransportInterface::newVendorIDNumber(void)
AppleHIDTransportInterface::newVersionNumber(void)
AppleHIDTransportInterface::performMasterSetReport(AppleHIDTransportDevice *,uchar,IOMemoryDescriptor *,IOHIDReportType)
AppleHIDTransportInterface::performMasterSetReport(AppleHIDTransportDevice *,uchar,IOMemoryDescriptor *,IOHIDReportType)::$_0::__invoke(void *,void *)
AppleHIDTransportInterface::resetDeviceGated(void)
AppleHIDTransportInterface::sendNotification(uint)
AppleHIDTransportInterface::setNotifyHandler(OSObject *,void (*)(OSObject *,OSNumber *))
AppleHIDTransportInterface::setPower(AIDPowerState)
AppleHIDTransportInterface::setPowerGated(AHTPowerState *)
AppleHIDTransportInterface::setProperties(OSObject *)
AppleHIDTransportInterface::start(IOService *,AIDImageDownloader *)
AppleHIDTransportInterface::stop(IOService *)
AppleHIDTransportInterface::updateReport(IOReportChannelList *,uint,void *,void *)
AppleHIDTransportInterface::updateReportGated(IOReportChannelList *,uint *,void *,void *)
AppleHIDTransportInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleHIDTransportInterfaceUserClient::getPower(AHTPowerState *)
AppleHIDTransportInterfaceUserClient::getReport(uchar,IOMemoryDescriptor *)
AppleHIDTransportInterfaceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleHIDTransportInterfaceUserClient::sGetPower(AppleHIDTransportInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportInterfaceUserClient::sGetReport(AppleHIDTransportInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportInterfaceUserClient::sReset(AppleHIDTransportInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportInterfaceUserClient::sSetPower(AppleHIDTransportInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportInterfaceUserClient::sSetReport(AppleHIDTransportInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleHIDTransportInterfaceUserClient::setReport(uchar,IOMemoryDescriptor *)
AppleHIDTransportManagement::AppleHIDTransportManagement(void)
AppleHIDTransportManagement::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleHIDTransportManagement::clearWakeInterface(void)
AppleHIDTransportManagement::externalResourceAction(AppleHIDTransportInterface *,char const*,uint)
AppleHIDTransportManagement::getConfigKey(ushort)
AppleHIDTransportManagement::getDescriptor(uchar)
AppleHIDTransportManagement::getahtFunctions(AppleHIDTransportInterface *,bool)
AppleHIDTransportManagement::handleDescriptor(IOMemoryDescriptor *)
AppleHIDTransportManagement::handleReport(IOMemoryDescriptor *)
AppleHIDTransportManagement::init(OSDictionary *,IORegistryEntry *)
AppleHIDTransportManagement::parseAvailableInterfaces(OSDictionary *,uchar const*,uint)
AppleHIDTransportManagement::processDescriptor(AppleHIDTransportInterface *,OSDictionary *)
AppleHIDTransportManagement::queueActionGated(OSDictionary *)
AppleHIDTransportManagement::start(IOService *)
AppleHIDTransportManagement::stop(IOService *)
AppleHIDTransportProtocol::cacheConfig(OSDictionary *)
AppleHIDTransportProtocol::copyDeviceTreeEntry(OSString const*)
AppleHIDTransportProtocol::destroyInterface(AppleHIDTransportInterface *)
AppleHIDTransportProtocol::disableAccessGated(bool)
AppleHIDTransportProtocol::free(void)
AppleHIDTransportProtocol::generateLocationId(OSDictionary *)
AppleHIDTransportProtocol::getInterface(uchar)
AppleHIDTransportProtocol::getInterfacePower(AppleHIDTransportInterface const*,AHTPowerState *)
AppleHIDTransportProtocol::getMasterDevice(void)
AppleHIDTransportProtocol::killDevice(void)
AppleHIDTransportProtocol::newManufacturerString(void)
AppleHIDTransportProtocol::newSerialNumberString(AppleHIDTransportInterface const*)
AppleHIDTransportProtocol::relayTeardown(void)
AppleHIDTransportProtocol::releaseAccessGated(void)
AppleHIDTransportProtocol::resetDevice(AppleHIDTransportInterface *)
AppleHIDTransportProtocol::resumeAccessGated(void)
AppleHIDTransportProtocol::setInterfacePower(AppleHIDTransportInterface *,AHTPowerState)
AppleHIDTransportProtocol::smcNotificationHandlerGated(AppleHIDTransportSMCNotifier::NotificationType *)
AppleHIDTransportProtocol::start(IOService *)
AppleHIDTransportProtocol::stop(IOService *)
AppleHIDTransportProtocolHIDSPI::AppleHIDTransportProtocolHIDSPI(void)
AppleHIDTransportProtocolHIDSPI::DeviceInterface::handleMessage(HSParserDeviceInput::Message,HSParserDeviceInput::Submessage)
AppleHIDTransportProtocolHIDSPI::TestCallback::asyncEvent(HSMTest *,void (*)(HSMTest *))
AppleHIDTransportProtocolHIDSPI::TestCallback::asyncEvent(HSMTest *,void (*)(HSMTest *))::$_0::__invoke(void *,void *)
AppleHIDTransportProtocolHIDSPI::addData(OSDictionary *,char const*,void const*,uint)
AppleHIDTransportProtocolHIDSPI::addNumber(OSDictionary *,char const*,ulong long,uint)
AppleHIDTransportProtocolHIDSPI::addString(OSDictionary *,char const*,char const*)
AppleHIDTransportProtocolHIDSPI::configBool(OSDictionary *,bool *,char const*)
AppleHIDTransportProtocolHIDSPI::configUint32(OSDictionary *,uint *,char const*)
AppleHIDTransportProtocolHIDSPI::configUintPtr(OSDictionary *,ulong *,char const*)
AppleHIDTransportProtocolHIDSPI::deviceDetached(void)
AppleHIDTransportProtocolHIDSPI::doTeardown(void)
AppleHIDTransportProtocolHIDSPI::forceInterrupt(void)
AppleHIDTransportProtocolHIDSPI::getInterfacePower(AppleHIDTransportInterface const*,AHTPowerState *)
AppleHIDTransportProtocolHIDSPI::handleDetach(void)
AppleHIDTransportProtocolHIDSPI::handleStart(IOService *)
AppleHIDTransportProtocolHIDSPI::handleStop(IOService *)
AppleHIDTransportProtocolHIDSPI::idleTimerAction(void)
AppleHIDTransportProtocolHIDSPI::initReporters(void)
AppleHIDTransportProtocolHIDSPI::parseDeviceDescriptor(HSDeviceDescriptor *,uchar *)
AppleHIDTransportProtocolHIDSPI::parseInterfaceDescriptor(OSDictionary *,HSInterfaceDescriptor *)
AppleHIDTransportProtocolHIDSPI::powerWillChange(AHTPowerState)
AppleHIDTransportProtocolHIDSPI::resetDevice(AppleHIDTransportInterface *)
AppleHIDTransportProtocolHIDSPI::setInterfacePower(AppleHIDTransportInterface *,AHTPowerState)
AppleHIDTransportProtocolHIDSPI::shouldResume(void)
AppleHIDTransportProtocolHIDSPI::transferData(HSBuffer *,ulong,ulong,HSBuffer *,ulong,ulong,bool)
AppleHIDTransportProtocolHIDSPI::transferData(void *,ulong,void *,ulong,bool)
AppleHIDTransportProtocolHIDSPI::updateReportGated(IOReportChannelList *,uint *,void *,void *)
AppleHIDTransportProtocolSCMFIFO::MetaClass::alloc(void)
AppleHIDTransportProtocolSCMFIFO::addReadMessage(void)
AppleHIDTransportProtocolSCMFIFO::checkControlComplete(void *)
AppleHIDTransportProtocolSCMFIFO::checkControlComplete(void *)
AppleHIDTransportProtocolSCMFIFO::copyDataToSlaveBuffer(OSData const*,IOSlaveMemoryBuffer *)
AppleHIDTransportProtocolSCMFIFO::createManagement(OSDictionary *)
AppleHIDTransportProtocolSCMFIFO::generateFifoProperty(ulong long,uint)
AppleHIDTransportProtocolSCMFIFO::getInterfaceData(uchar,AppleHIDTransportProtocolSCMFIFO::InterfaceData **,bool)
AppleHIDTransportProtocolSCMFIFO::getReport(AppleHIDTransportInterface *,uchar,IOMemoryDescriptor *,IOHIDReportType)
AppleHIDTransportProtocolSCMFIFO::getReportWithInterface(AppleHIDTransportInterface *,uchar,void *,ulong)
AppleHIDTransportProtocolSCMFIFO::handleBootload(AppleHIDTransportInterface *)
AppleHIDTransportProtocolSCMFIFO::handleInputReport(AHTSCMMessage *)
AppleHIDTransportProtocolSCMFIFO::handleStart(IOService *)
AppleHIDTransportProtocolSCMFIFO::handleStop(IOService *)
AppleHIDTransportProtocolSCMFIFO::handshake(thread_call *)
AppleHIDTransportProtocolSCMFIFO::interfaceLocked(AppleHIDTransportInterface *,bool)
AppleHIDTransportProtocolSCMFIFO::lockInterfaceGated(uchar *)
AppleHIDTransportProtocolSCMFIFO::readNext(void)
AppleHIDTransportProtocolSCMFIFO::readNext(void)
AppleHIDTransportProtocolSCMFIFO::setReport(AppleHIDTransportInterface *,uchar,IOMemoryDescriptor *,IOHIDReportType)
AppleHIDTransportProtocolSCMFIFO::setReportGated(uchar *,uchar *,IOMemoryDescriptor *)
AppleHIDTransportProtocolSCMFIFO::unlockInterfaceGated(uchar *)
AppleHIDTransportProtocolSCMFIFO::validateInterface(AppleHIDTransportInterface *)
AppleHIDTransportProtocolZ2::checkChecksum(uchar *,uint)
AppleHIDTransportProtocolZ2::cleanCachedReportInfo(void)
AppleHIDTransportProtocolZ2::configReport(OSDictionary *,IOBufferMemoryDescriptor **,char const*)
AppleHIDTransportProtocolZ2::createInterfaces(void)
AppleHIDTransportProtocolZ2::getReportInfo(uchar,AppleHIDTransportProtocolZ2::ReportInfo *)
AppleHIDTransportProtocolZ2::handleFrame(uchar const*,uint)
AppleHIDTransportProtocolZ2::handleStart(IOService *)
AppleHIDTransportProtocolZ2::handleStop(IOService *)
AppleHIDTransportProtocolZ2::init(OSDictionary *)
AppleHIDTransportProtocolZ2::isResetRequest(uchar const*,uint)
AppleHIDTransportProtocolZ2::powerHasChanged(AHTPowerState)
AppleHIDTransportProtocolZ2::updateStatus(AppleHIDTransportProtocolZ2::ReportStruct *,AppleHIDTransportProtocolZ2::CommandStatus *,bool)
AppleHIDTransportSMCNotifier::free(void)
AppleHIDTransportSMCNotifier::notificationThreadFunc(AppleHIDTransportSMCNotifier::NotifyThreadParam *)
AppleHSAIDSerial::attemptTransmit(HSAIDSerialNotification *)
AppleHSAIDSerial::cancelPacket(void)
AppleHSAIDSerial::configureUART(void)
AppleHSAIDSerial::enqueuePacket(uchar const*,uint,HSAIDSerialNotification *)
AppleHSAIDSerial::free(void)
AppleHSAIDSerial::handleNotification(HSAIDSerialNotification,uchar *,uint)
AppleHSAIDSerial::handlePartialResponseTimerNotification(HSAIDSerialResponseTimerNotification)
AppleHSAIDSerial::partialResponseTimeout(IOTimerEventSource *)
AppleHSAIDSerial::processRead(uchar *,uint)
AppleHSAIDSerial::processReadEvent(uint,uint)
AppleHSAIDSerial::receiveThread(void)
AppleHSAIDSerial::registerNotificationAction(OSObject *,void (*)(OSObject *,HSAIDSerialNotification,uchar *,uint))
AppleHSAIDSerial::sendBreak(void)
AppleHSAIDSerial::setActive(bool)
AppleHSAIDSerial::setPowerState(ulong,IOService *)
AppleHSAIDSerial::start(IOService *)
AppleHSAIDSerial::stop(IOService *)
AppleHSAIDSerialUserClient::extCancelPacket(AppleHSAIDSerial *,void *,IOExternalMethodArguments *)
AppleHSAIDSerialUserClient::extEnqueuePacket(AppleHSAIDSerial *,void *,IOExternalMethodArguments *)
AppleHSAIDSerialUserClient::extSetActive(AppleHSAIDSerial *,void *,IOExternalMethodArguments *)
AppleHSAIDSerialUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleHSAIDSerialUserClient::start(IOService *)
AppleHSAIDStateManager::AppleHSAIDStateManager(void)
AppleHSAIDStateManager::getReceivedPacket(uchar *&,uint &)
AppleHSAIDStateManager::handleSerialDataCRCState(uchar *&,uint &,HSAIDSerialNotification &,HSAIDSerialResponseTimerNotification &)
AppleHSAIDStateManager::handleSerialDataCollisionDetectState(uchar *&,uint &,HSAIDSerialNotification &,HSAIDSerialResponseTimerNotification &)
AppleHSAIDStateManager::handleSerialDataCopyDataState(uchar *&,uint &,HSAIDSerialNotification &,HSAIDSerialResponseTimerNotification &)
AppleHSAIDStateManager::handleSerialDataDropState(uchar *&,uint &,HSAIDSerialNotification &,HSAIDSerialResponseTimerNotification &)
AppleHSAIDStateManager::handleSerialDataFlagsState(uchar *&,uint &,HSAIDSerialNotification &,HSAIDSerialResponseTimerNotification &)
AppleHSAIDStateManager::receivedDataMatchesTransmittedPacket(uchar *&,uint &)
AppleHSAIDStateManager::setActive(bool)
AppleHapticsExternalSecondaryAudio::AppleHapticsExternalSecondaryAudio(void)
AppleHapticsExternalSecondaryAudio::MetaClass::alloc(void)
AppleHapticsExternalSecondaryAudio::_notifyHapticsSessionStartStop(bool)
AppleHapticsExternalSecondaryAudio::_setupPeakPowerBudgetConfig(IOService *)
AppleHapticsExternalSecondaryAudio::_setupPeakPowerRangeFunction(IOService *)
AppleHapticsExternalSecondaryAudio::_setupPowerBudgetManagement(IOService *)
AppleHapticsExternalSecondaryAudio::applySetControlValue(uint,uint,uint *)
AppleHapticsExternalSecondaryAudio::free(void)
AppleHapticsExternalSecondaryAudio::start(IOService *)
AppleHapticsExternalSecondaryAudio::stopIOEngine(void)
AppleHapticsExternalSecondaryAudio::stopIOEngineBegin(void)
AppleHapticsExternalSecondaryAudio::~AppleHapticsExternalSecondaryAudio()
AppleHapticsExternalSecondaryAudio__updatePropertyControls_OSArray
AppleHapticsSupport::_readMetaDataFillSymbolInfo(OSDictionary &,OSSymbol const&,OSSharedPtr<OSNumber> (*)(OSObject const&,OSSymbol const&,OSDictionary const&),OSSharedPtr<OSNumber> (*)(OSObject const&,OSSymbol const&,OSDictionary const&))
AppleHapticsSupport::_readSymbols(OSArray const&,ulong long,void (*)(OSObject const&,OSString const&,OSData &),OSSharedPtr<OSNumber> (*)(OSObject const&,OSSymbol const&,OSDictionary const&),OSSharedPtr<OSNumber> (*)(OSObject const&,OSSymbol const&,OSDictionary const&))
AppleHapticsSupport::_writeSymbolsImpl(OSDictionary const*,ulong long,AudioKernelClientInterface::SendRequestOptions,AHS::Util::IsRequired,OSSharedPtr<OSNumber> (*)(OSObject const&,OSSymbol const&,OSDictionary const&))
AppleHapticsSupport::afuFWDownloadCallback(FWValidationStatus,uint,OSData *)
AppleHapticsSupport::akciAudioResourceManagerFoundHandler(AudioKernelClientInterface *,IONotifier *)
AppleHapticsSupport::akciAudioResourceManagerFoundHandler(AudioKernelClientInterface *,IONotifier *)::$_16::__invoke(OSObject *,void *,void *,void *,void *)
AppleHapticsSupport::akciFWUpdateFoundHandler(AudioKernelClientInterface *,IONotifier *)
AppleHapticsSupport::akciFWUpdateFoundHandler(AudioKernelClientInterface *,IONotifier *)::$_13::__invoke(OSObject *,void *,void *,void *,void *)
AppleHapticsSupport::createAndAttachFWUpdateNub(uint,int (*)(void *,FWValidationStatus,uint,OSData *))
AppleHapticsSupport::createReporters(void)
AppleHapticsSupport::defaultAddressPolicy(OSObject const&,OSSymbol const&,OSDictionary const&)
AppleHapticsSupport::findMatchingCoeffBin(OSArray *,AHSCal const*)
AppleHapticsSupport::getProviderCoefficientsVersion(void)
AppleHapticsSupport::hapticAssetsDownloadCallback(FWValidationStatus,uint,OSData *)::$_15::__invoke(OSObject *,void *,void *,void *,void *)
AppleHapticsSupport::initEventSources(void)
AppleHapticsSupport::logEventCollection(OSSharedPtr<AHSEventCollection>)
AppleHapticsSupport::maybeSendAKCIRequest(OSArray &,AudioKernelClientInterface::SendRequestOptions)
AppleHapticsSupport::maybeSendAKCIRequest(OSArray *,AudioKernelClientInterface::SendRequestOptions)
AppleHapticsSupport::notifyWatchdogOccurred(void)
AppleHapticsSupport::notifyWatchdogOccurred(void)::$_19::__invoke(OSObject *,void *,void *,void *,void *)
AppleHapticsSupport::parseFWDict(OSDictionary const*,OSDictionary*&,OSDictionary*&)
AppleHapticsSupport::publishCalProperties(void)
AppleHapticsSupport::setAveragePowerBudget(uint,uint *)
AppleHapticsSupport::setLatestAnalyticsSymbols(OSDictionary const*)
AppleHapticsSupport::setPeakPowerBudget(uint,uint *)
AppleHapticsSupport::setupIOReporterStatChannel(IOSimpleReporter *,IOReporterChannelInfo const*)
AppleHapticsSupport::stop(IOService *)
AppleHapticsSupport::symbolTableContainsSymbol(OSSymbol const*)
AppleHapticsSupport::updateCountRateChannel(IOReporterChannelInfo const*,uint)
AppleHapticsSupport::updateStatsChannel(IOReporterChannelInfo const*,AHSStatsAggregator *)
AppleHapticsSupport::updateTimeStampedProperty(char const*)
AppleHapticsSupport::~AppleHapticsSupport()
AppleHapticsSupportLEAP::AppleHapticsSupportLEAP(void)
AppleHapticsSupportLEAP::_maybeWriteLiveSymbols(OSDictionary const*)
AppleHapticsSupportLEAP::_readLiveSymbols(OSArray const&)
AppleHapticsSupportLEAP::_writeAssetSymbols(OSDictionary const*)
AppleHapticsSupportLEAP::_writeLiveSymbols(OSDictionary const*)
AppleHapticsSupportLEAP::createFileAddress(OSObject const&,OSSymbol const&,OSDictionary const&)
AppleHapticsSupportLEAP::createFileStride(OSObject const&,OSSymbol const&,OSDictionary const&)
AppleHapticsSupportLEAP::getCal(void)
AppleHapticsSupportLEAP::notifyHapticsSessionChange(bool,OSSharedPtr<AHSEventCollection>)
AppleHapticsSupportLEAP::readSymbols(OSArray const&,AHS::UserClient::AccessOption)
AppleHapticsSupportLEAP::setAveragePowerBudget(AHS::Util::From<AppleHapticsSupport>,uint,uint *)
AppleHapticsSupportLEAP::setPeakPowerBudget(AHS::Util::From<AppleHapticsSupport>,uint,uint *)
AppleHapticsSupportLEAP::setupFWSpecificHandlingPolicies(OSDictionary *)
AppleHapticsSupportLEAP::setupIOReporterChannels(IOSimpleReporter *)
AppleHapticsSupportLEAP::temperaturePollingTimerExpired(void)
AppleHapticsSupportLEAP::updateReport(IOReportChannelList *,uint,void *,void *)
AppleHapticsSupportLEAP::writeSymbols(OSDictionary const*,AHS::UserClient::AccessOption)
AppleHapticsSupportLEAP::~AppleHapticsSupportLEAP()
AppleHapticsSupportUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleHydraBuiltIn::messageClients(uint,void *,ulong)
AppleI2CAudio::createRegisterPatchOp(void)
AppleI2CMultipleAudio::_maskWrite32Reg(uint,uint,uint,uint,bool)
AppleI2CMultipleAudio::_maskWrite32RegAll(uint,uint,uint,bool)
AppleI2CMultipleAudio::_maskWriteReg(uint,uint,uchar,uchar)
AppleI2CMultipleAudio::_maskWriteRegAll(uint,uchar,uchar)
AppleI2CMultipleAudio::_read32Reg(uint,uint,uint &)
AppleI2CMultipleAudio::_readMultiple(uint,uint,uchar *,ulong long)
AppleI2CMultipleAudio::_readReg(uint,uint)
AppleI2CMultipleAudio::_readReg(uint,uint,uchar &)
AppleI2CMultipleAudio::_transferData(uint,uint,ulong long,uint,ulong long,uchar *)
AppleI2CMultipleAudio::_write32Reg(uint,uint,uint)
AppleI2CMultipleAudio::_write32RegAll(uint,uint)
AppleI2CMultipleAudio::_writeMultiple(uint,uint,uchar const*,ulong long)
AppleI2CMultipleAudio::_writeMultipleAll(uint,uchar const*,ulong long)
AppleI2CMultipleAudio::_writeReg(uint,uint,uchar,bool)
AppleI2CMultipleAudio::_writeRegAll(uint,uchar)
AppleI2CMultipleAudio::debugCopyRegisters(bool)
AppleI2CMultipleAudio::debugWriteRegister(uint,uint)
AppleI2CMultipleAudio::free(void)
AppleI2CMultipleAudio::init(OSDictionary *,uchar,uint,uint,uint,uint,uint)
AppleI2CMultipleAudio::probe(IOService *,int *,OSArray *)
AppleICA60::_initForPM(IOService *)
AppleICA60::_powerNotification(void *,uint,IOService *,IOPowerStateChangeNotification *,ulong)
AppleICA60::_priorityPowerNotification(void *,uint,IOService *,IOPowerStateChangeNotification *,ulong)
AppleICA60::acquireMicBiaswithRetry(AppleICA60::AppleTempSensorState,uchar)
AppleICA60::calculateTemperature(int)
AppleICA60::convertReadingToRaw(uchar *)
AppleICA60::debugAddPrivateValues(OSDictionary *)
AppleICA60::handleStart(IOService *)
AppleICA60::handleStop(IOService *)
AppleICA60::identifySensor(uchar,uchar)
AppleICA60::micBiasARMFunc(AppleICA60::AppleTempSensorState)
AppleICA60::probe(IOService *,int *)
AppleICA60::resetStateMachine(void)
AppleICA60::updateAACGTKCoefficients(void)
AppleICA60::updateCoefficients(void)
AppleICA60::~AppleICA60()
AppleIDAMInterface::AppendBytesToInterfaceDescriptor(IOBufferMemoryDescriptor *,void *,ushort)
AppleIDAMInterface::CreateMIDIStreamingInterfaceDescriptor(void)
AppleIDAMInterface::addCSMSInterfaceDescriptor(IOBufferMemoryDescriptor *)
AppleIDAMInterface::addClassSpecificDescriptorsAsMIDI(void)
AppleIDAMInterface::addEPDescriptors(uchar,uchar)
AppleIDAMInterface::addJackDescriptor(IOBufferMemoryDescriptor *,uchar,uchar,uchar,uchar)
AppleIDAMInterface::start(IOService *)
AppleIDAMInterface::stop(IOService *)
AppleIDV::aIDV_GenerateNonceOnWatch(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *)
AppleIDV::aIDV_PersistACLBlob(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *)
AppleIDV::lockItem(uint *,uint)
AppleIDV::sendSEPMessage(void *,uchar,int,ushort)
AppleIDV::unlockItem(uint *)
AppleIDV::unlockSEP(void)
AppleIISAudioLinkDelegate::free(void)
AppleIISAudioLinkDelegate::getChannelCount(void)
AppleIISAudioLinkDelegate::getDataLatency(IOAVAudioLinkData const*)
AppleIISAudioLinkDelegate::getDataSafetyOffset(IOAVAudioLinkData const*)
AppleIISAudioLinkDelegate::getPhysicalChannel(uint,uint *)
AppleIISAudioLinkDelegate::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleIISAudioLinkDelegate::powerStateDidChangeToGated(ulong *,ulong *,IOService *)
AppleIISAudioLinkDelegate::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleIISAudioLinkDelegate::powerStateWillChangeToGated(ulong *,ulong *,IOService *)
AppleIISAudioLinkDelegate::prepareLink(IOAVController *,IOAVDevice *,IOAVAudioLinkData *)
AppleIISAudioLinkDelegate::setController(IOAVController *)
AppleIISAudioLinkDelegate::start(IOService *)
AppleIISAudioLinkDelegate::startDMACommand(IOAVDMACommand *)
AppleIISAudioLinkDelegate::startDMACommandGated(IOAVDMACommand *)
AppleIISAudioLinkDelegate::stop(IOService *)
AppleIISAudioLinkDelegate::stopDMACommand(void)
AppleIISAudioLinkDelegate::validateLink(IOAVController *,IOAVDevice *,IOAVAudioLinkData *)
AppleIOP::AppleIOP(OSMetaClass const*)
AppleIOP::_lockInbox(void)
AppleIOP::_lockOutbox(void)
AppleIOP::_unlockInbox(void)
AppleIOP::_unlockOutbox(void)
AppleIOP::~AppleIOP()
AppleIOPBufferWriter::write(char const*,...)
AppleIOPBufferWriter::write(char const*,...)
AppleIOPMailboxLog::formatLog(AppleIOPBufferWriter &)
AppleIOPMailboxLog::getLog(uint *,uint *)
AppleIOPMailboxLog::init(uint,char const*,uint)
AppleIOPMailboxLog::logMsg(void *,uint,ulong long,uint)
AppleIOPMailboxLog::logTimeout(ulong long)
AppleIOReporterFactory::CreateAudioInputStreamStateReporter(IOService *)
AppleIOReporterFactory::CreateAudioOutputStreamStateReporter(IOService *)
AppleIOReporterFactory::CreateAudioPowerStateReporter(IOService *)
AppleIOReporterFactory::CreateAudioSimpleReporter(IOService *,ReporterInfo &)
AppleIPAppender::AppleIPAppender(void)
AppleIPAppender::MetaClass::alloc(void)
AppleIPAppender::activateLowPowerPDPThrottleGated(bool)
AppleIPAppender::addFlowGated(AppleIPAppenderTrafficClass,uint)
AppleIPAppender::blockPDPTrafficGated(uint,bool)
AppleIPAppender::blockPDPTrafficGated(uint,bool)
AppleIPAppender::copyWakeData(uchar *,ulong,ulong *,ulong long *)
AppleIPAppender::copyWakeDataGated(uchar *,ulong,ulong *,ulong long *)
AppleIPAppender::disableIONetworkInterface(IONetworkInterface *)
AppleIPAppender::disableSkywalkInterface(IOSkywalkNetworkInterface *)
AppleIPAppender::dormancyTimeoutStatic(void *)
AppleIPAppender::enableIONetworkInterface(IONetworkInterface *)
AppleIPAppender::enableLowPowerPDPThrottleFeatureGated(bool)
AppleIPAppender::enableMetadataTrailerGated(uint,uint *)
AppleIPAppender::enableSkywalkInterface(IOSkywalkNetworkInterface *)
AppleIPAppender::getFlowGated(AppleIPAppenderTrafficClass,uint *)
AppleIPAppender::getNumLowPowerPDPThrottleStatsGated(AppleIPAppenderPDPThrottleStats_t *)
AppleIPAppender::getOpenPortsExt(uint,uint,uint,uchar *,ulong *)
AppleIPAppender::getOpenPortsGatedExt(AppleIPAppenderPortInfo_t *,uchar *,ulong *)
AppleIPAppender::getStatusGated(AppleIPAppenderStatus_t *)
AppleIPAppender::getTimeUpdateGated(mach_timespec *)
AppleIPAppender::inMbufGated(IONetworkInterface *,__mbuf *)
AppleIPAppender::inPacketGated(IOSkywalkNetworkInterface *,IOSkywalkNetworkPacket *)
AppleIPAppender::init(OSDictionary *)
AppleIPAppender::mapMbufTrafficClass(mbuf_svc_class_t)
AppleIPAppender::outMbufGated(IONetworkInterface *,__mbuf **)
AppleIPAppender::outPacketGated(IOSkywalkNetworkInterface *,IOSkywalkNetworkPacket *)
AppleIPAppender::packetGetDataLength(IOSkywalkNetworkPacket *)
AppleIPAppender::packetGetDataOffset(IOSkywalkNetworkPacket *)
AppleIPAppender::packetGetMemoryDescriptor(IOSkywalkNetworkPacket *)
AppleIPAppender::packetSetDataLength(IOSkywalkNetworkPacket *,uint)
AppleIPAppender::registerSkywalk(AppleIPAppender::SkywalkRegistrationInfo *)
AppleIPAppender::removeFlowGated(AppleIPAppenderTrafficClass)
AppleIPAppender::reportLinkSpeed(AppleIPAppenderThroughput_t const*)
AppleIPAppender::reportLinkSpeedGated(AppleIPAppenderThroughput_t const*)
AppleIPAppender::setIONetworkInterfaceGated(IONetworkInterface *,bool)
AppleIPAppender::setLinkQualityMetric(int)
AppleIPAppender::setLinkQualityMetricGated(int)
AppleIPAppender::setPowerState(ulong,IOService *)
AppleIPAppender::setSkywalkInterfaceGated(IOSkywalkNetworkInterface *,bool)
AppleIPAppender::shouldBlockOutgoingTrafficGated(uint)
AppleIPAppender::start(IOService *)
AppleIPAppender::stop(IOService *)
AppleIPAppender::throttlePDPTraffic(bool)
AppleIPAppender::wasWokenByBaseband(void)
AppleIPAppender::~AppleIPAppender()
AppleIPAppenderUserClient::clientClose(void)
AppleIPAppenderUserClient::extAddFlow(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extBlockPDPTraffic(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetDormancyTime(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetFlow(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetLowPowerPDPThrottleStats(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetOpenPortsExt(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetStatus(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetTimeUpdate(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extGetWakeBuffer(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extLowPowerPDPThrottleActivate(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extLowPowerPDPThrottleEnable(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extMetadataTrailerEnable(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extQosFlowHeaderEnable(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extRemoveFlow(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extReportLinkSpeed(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extRestartDormancyTimer(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extSetDormancy(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::extSetLinkQualityMetric(AppleIPAppender *,void *,IOExternalMethodArguments *)
AppleIPAppenderUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleIPAppenderUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleIPCAudioController::_getControlValue(uint,uint &)
AppleIPCAudioController::_ipcStateChangeEvent(void)
AppleIPCAudioController::_publishBelow(IORegistryEntry *)
AppleIPCAudioController::_setControlValue(uint,uint)
AppleIPCAudioController::_setPowerState(ulong)
AppleIPCAudioController::getStatusReport(OSDictionary *)
AppleIPCAudioController::handleStart(IOService *)
AppleIPCAudioController::publishBelow(IORegistryEntry *)
AppleIPCAudioController::start(IOService *)
AppleIPCAudioController::teardown(void)
AppleIPCAudioDeviceProxy::handleClose(IOService *,uint)
AppleIPCAudioDeviceUserClient::clientClose(void)
AppleIPCAudioDeviceUserClient::clientDied(void)
AppleIPCAudioDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleIPCAudioDeviceUserClient::methodClose(OSObject *,void *,IOExternalMethodArguments *)
AppleIPCAudioDeviceUserClient::methodOpen(OSObject *,void *,IOExternalMethodArguments *)
AppleIPCAudioDeviceUserClient::methodSetDevicePowerState(OSObject *,void *,IOExternalMethodArguments *)
AppleIPCAudioDeviceUserClient::start(IOService *)
AppleIPCAudioDeviceUserClient::stop(IOService *)
AppleIPCAudioService::Destroy(AppleIPCAudioService*&)
AppleIPCAudioService::_blockingCommand(uint,ulong long,void const*,ulong,void *,ulong *)
AppleIPCAudioService::_blockingCommandGated(AppleIPCAudioService::_ipcCommandContext *)
AppleIPCAudioService::getDeviceCount(uint &)
AppleIPCAudioService::getIdentity(uint &)
AppleIPCAudioService::getProperty(uint,void *,ulong *)
AppleIPCAudioService::getStatusReport(OSDictionary *)
AppleIPCAudioService::initWithProvider(IOService *,IOCommandGate *)
AppleIPCAudioService::matchAFKEndpoint(IOService *)
AppleIPCAudioService::matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleIPCAudioService::matchingNotificationHandlerGated(void *,IOService *,IONotifier *)
AppleIPCAudioService::mockPerformCommand(AppleAOPAudioFirmware::ControllerCommand::Type,void const*,ulong,void *,ulong *)
AppleIPCAudioService::performCommand(AppleAOPAudioFirmware::ControllerCommand::Type,void const*,ulong,void *,ulong *)
AppleIPCAudioService::processCommandResponse(IOService *,AFKEndpointInterface *,void *,int,ulong long,void const*,ulong)
AppleIPCAudioService::setProperty(uint,void const*,ulong)
AppleIPCAudioService::teardown(void)
AppleIPDormancyHandler::addTimeDifference(mach_timespec *,mach_timespec *,mach_timespec *)
AppleIPDormancyHandler::dormancyTimeout(void)
AppleIPDormancyHandler::free(void)
AppleIPDormancyHandler::getDormancyTimeGated(uint *)
AppleIPDormancyHandler::init(IOWorkLoop *)
AppleIPDormancyHandler::setDormancyGated(uint,uint)
AppleIPDormancyHandler::updateDormancyDataActive(uint)
AppleIPOpenPortsList::copyBitFieldBuffer(uchar *,uint)
AppleIPOpenPortsList::getPortListsRaw(__ifnet *,uint,uchar *,uint)
AppleIPOpenPortsList::~AppleIPOpenPortsList()
AppleISL29023::_handleTimerExpired(void)
AppleISL29023::_setALSReportingInterval(uint)
AppleISL29023::_writeReg8(uchar,uchar)
AppleISL29023::convertSensorDataToLux(ushort)
AppleISL29023::handleStart(IOService *)
AppleISL29023::probe(IOService *,int *)
AppleISL29023::readSensorData(ushort *,ushort *,uint *)
AppleISL29023::setSensorEnabled(bool)
AppleImage4::_copy_nonce_gated(_img4_nonce_domain const*,_img4_nonce *)
AppleImage4::_derive_accelerator_timeout(IOService *)
AppleImage4::_roll_nonce_gated(_img4_nonce_domain const*)
AppleImage4::_wake_n_gate(char const*,int (*)(OSObject *,void *,void *,void *,void *),_img4_nonce_domain const*,_img4_nonce *)
AppleImage4::_wake_n_gate(char const*,int (*)(OSObject *,void *,void *,void *,void *),_img4_nonce_domain const*,_img4_nonce *)
AppleImage4::_work_n_wait(char const*,_img4_nonce_thread_call *,void (*)(void *,int))
AppleImage4::meta_init(void)
AppleImage4::start(IOService *)
AppleImage4::start(IOService *)
AppleImage4::terminate(uint)
AppleImage4UserClient::_check_entitlement_bool(char const*)
AppleImage4UserClient::clientClose(void)
AppleImage4UserClient::copy_nonce(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient::copy_object(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient::execute_object(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient::preroll_nonce(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient::roll_nonce(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient::version(OSObject *,void *,IOExternalMethodArguments *)
AppleImage4UserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleImage4UserClient__initWithTask_task___void___unsigned_int__OSDictionary
AppleImage4__stop_IOService
AppleInterruptController::_queueRemove(queue_entry *,uint)
AppleInterruptController::_setupCoalesceInterrupts(void)
AppleInterruptController::_setupCoalesceInterrupts(void)
AppleInterruptController::_writeReg32(uint,uint)
AppleInterruptController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleInterruptController::cancelDeferredIPI(uint)
AppleInterruptController::disableVectorHard(int,IOInterruptVector *)
AppleInterruptController::enableVector(int,IOInterruptVector *)
AppleInterruptController::getInterruptType(IOService *,int,int *)
AppleInterruptController::getWorkLoop(void)
AppleInterruptController::initVector(int,IOInterruptVector *)
AppleInterruptController::sendIPI(uint,bool)
AppleInterruptController::start(IOService *)
AppleInterruptController::startInterruptTimestamping(uint)
AppleInterruptController::stopInterruptTimestamping(uint)
AppleJPEGDriver::IODARTErrorHandler(void *,IODARTErrorInfo const*)
AppleJPEGDriver::begin_io_gated(bool)
AppleJPEGDriver::checkAndSetIOMemoryDescriptorCacheAttribute(uint,IOSurface *,IOMemoryDescriptor *,char const*)
AppleJPEGDriver::clientClosed(AppleJPEGDriverUserClient *)
AppleJPEGDriver::clientClosedGated(AppleJPEGDriverUserClient *)
AppleJPEGDriver::doRestOfBufferSetupForDecode_gated(JpegRequest *)
AppleJPEGDriver::doRestOfBufferSetupForEncode_gated(JpegRequest *)
AppleJPEGDriver::finish_io_gated(JpegRequest *,int,uint,bool)
AppleJPEGDriver::flushAllMemory_gated(void)
AppleJPEGDriver::free(void)
AppleJPEGDriver::getCPUType(void)
AppleJPEGDriver::getCommandFromPoolOrAllocOneIfPoolEmpty(uint,IODMACommand **)
AppleJPEGDriver::getMCUInfo(AppleJPEGSubsampling,uint,uint,uint &,uint &)
AppleJPEGDriver::init(OSDictionary *)
AppleJPEGDriver::initForPM(IOService *)
AppleJPEGDriver::interruptOccurred_gated(JpegRequest *,uint)
AppleJPEGDriver::jpegProfile(JpegRequest *)
AppleJPEGDriver::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleJPEGDriver::probe(IOService *,int *)
AppleJPEGDriver::queue_io_gated(JpegRequest *)
AppleJPEGDriver::registerIOProperties(void)
AppleJPEGDriver::releaseBuffersAfterCoding_gated(JpegRequest *,bool)
AppleJPEGDriver::reportClockCounts(uint,uint,uint)
AppleJPEGDriver::setPowerState(ulong,IOService *)
AppleJPEGDriver::setPowerState_gated(ulong,IOService *)
AppleJPEGDriver::setupBuffersForCoding_gated(JpegRequest *)
AppleJPEGDriver::start(IOService *)
AppleJPEGDriver::startDecoder(_AppleJPEGDriverIOStruct *,_AppleJPEGDriverIOStruct *,ipc_port *,IOUserClient *,task *)
AppleJPEGDriver::startDecoderExt(_AppleJPEGDriverIOStructExt *,_AppleJPEGDriverIOStructExt *,ipc_port *,IOUserClient *,task *)
AppleJPEGDriver::startEncoder(_AppleJPEGDriverIOStruct *,_AppleJPEGDriverIOStruct *,ipc_port *,IOUserClient *,task *)
AppleJPEGDriver::startEncoderExt(_AppleJPEGDriverIOStructExt *,_AppleJPEGDriverIOStructExt *,ipc_port *,IOUserClient *,task *)
AppleJPEGDriver::stop(IOService *)
AppleJPEGDriver::turnOnJPEGHWForTunables(AppleJPEGDriverUserClient *)
AppleJPEGDriver::turnOnJPEGHW_gated(AppleJPEGDriverUserClient *)
AppleJPEGDriver::zeroBufferPaddingFor420(JpegRequest *)
AppleJPEGDriverUserClient::MetaClass::alloc(void)
AppleJPEGDriverUserClient::cleanup(void)
AppleJPEGDriverUserClient::clientClose(void)
AppleJPEGDriverUserClient::getTargetAndMethodForIndex(IOService **,uint)
AppleJPEGDriverUserClient::initWithDriver(AppleJPEGDriver *,task *,void *,uint,OSDictionary *)
AppleJPEGDriverUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleJPEGDriverUserClient::startDecoder(_AppleJPEGDriverIOStruct *,_AppleJPEGDriverIOStruct *)
AppleJPEGDriverUserClient::turnOnJPEGHWForTunables(_AppleJPEGDriverIOStruct *,_AppleJPEGDriverIOStruct *)
AppleJPEGDriverUserClient::withDriver(AppleJPEGDriver *,task *,void *,uint,OSDictionary *)
AppleJPEGHal::AppleJPEGHal(void)
AppleJPEGHal::MetaClass::alloc(void)
AppleJPEGHal::checkForInterrupt(IOFilterInterruptEventSource *)
AppleJPEGHal::checkHardwareVersion(bool,bool &,bool &,bool &)
AppleJPEGHal::chooseClock_gated(void)
AppleJPEGHal::createInterruptEventSource(IOWorkLoop *)
AppleJPEGHal::destroyInterruptEventSource(IOWorkLoop *)
AppleJPEGHal::doDecoderChecks(JpegRequest *,uint,uint,uint,uint,uint,uint)
AppleJPEGHal::doEncoderChecks(JpegRequest *,uint,uint)
AppleJPEGHal::finishDecode_gated(JpegRequest *)
AppleJPEGHal::finishEncode_gated(JpegRequest *)
AppleJPEGHal::init(uint,AppleJPEGDriver *,IOService *,IOWorkLoop *,uint,bool,bool)
AppleJPEGHal::initializeDecoderInternal(void)
AppleJPEGHal::interruptOccurred_gated(IOInterruptEventSource *,int)
AppleJPEGHal::jpeg_write_tables(uint,bool,JpegRequest *)
AppleJPEGHal::reset_jpeg_block(void)
AppleJPEGHal::setActive_gated(bool)
AppleJPEGHal::startDecoderGated(JpegRequest *)
AppleJPEGHal::startEncoderGated(JpegRequest *)
AppleJPEGHal::stop(IOWorkLoop *)
AppleKeyStore::MetaClass::alloc(void)
AppleKeyStore::_sanity_check_pfk_params(ulong long,int,pfk_params_public_s *)
AppleKeyStore::_volume_handle(uchar const*,int *,pfk_params_public_s *)
AppleKeyStore::absinthe_collection(ulong long,uint,OSData *,OSData *,void **,uint *)
AppleKeyStore::absinthe_generate(ulong long,uint,OSData *,OSData *,void **,uint *)
AppleKeyStore::add_class_f_entropy_to_kernel_prng(void)
AppleKeyStore::add_class_f_entropy_to_kernel_prng(void)
AppleKeyStore::add_entropy_to_kernel_prng(void *,uint)
AppleKeyStore::add_entropy_to_kernel_prng(void *,uint)
AppleKeyStore::authentication_token_create(ulong long,int,uint,OSData *,OSData **)
AppleKeyStore::authentication_token_verify(ulong long,int,uint,OSData *,uint *)
AppleKeyStore::backup_bag_uuid_for_volume(ulong long,OSData *,OSData **)
AppleKeyStore::backup_data(ulong long,int,uint,aks_fs_context_s *,void const*,uint,void *,uint *)
AppleKeyStore::backup_data_for_volume(ulong long,OSData *,uint,aks_fs_context_s *,void const*,uint,void *,uint *)
AppleKeyStore::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleKeyStore::callingProcHasEntitlement(char const*,int *)
AppleKeyStore::change_lock_state(ulong long,int,int,int *,void const*,uint)
AppleKeyStore::change_password(ulong long,int,uchar const*,uint,uchar const*,uint,uchar const*,uint,uchar const*,uint,uchar,generation_option,int *)
AppleKeyStore::change_secret_epilogue(ulong long,int,void const*,uint)
AppleKeyStore::check_devicesleep_duration(void)
AppleKeyStore::check_sep_initialized(void)
AppleKeyStore::client_terminate(ulong long)
AppleKeyStore::compressed_uuid_duplicates_present(int,uchar)
AppleKeyStore::consume_global_lockassertion(ulong long,int)
AppleKeyStore::delete_effaceable_locker(uint)
AppleKeyStore::device_state_transition(ulong long,int,uint,ulong long,void *,uint)
AppleKeyStore::disable_backup_for_volume(ulong long,OSData *)
AppleKeyStore::drain_backup_keys(int,void **,uint *,bool)
AppleKeyStore::drop_device_lockassertion(ulong long,uint,int)
AppleKeyStore::effaceable_init(bool)
AppleKeyStore::effaceable_init(bool)
AppleKeyStore::effaceable_sync(IOTimerEventSource *)
AppleKeyStore::enable_backup_for_volume(ulong long,OSData *,OSData *,OSData **)
AppleKeyStore::event_enqueue(void *)
AppleKeyStore::expect_sep_firmware_to_be_loaded(void)
AppleKeyStore::free(void)
AppleKeyStore::fs_backup_key(aks_cred_s *,aks_wrapped_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_invalidate_key(aks_cred_s *)
AppleKeyStore::fs_migrate_media_key_to_class(aks_cred_s *,uint,aks_wrapped_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_new_ek(aks_cred_s *,aks_ephemeral_key_s *,aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_new_ekwk_ek(aks_cred_s *,uint,aks_ephemeral_key_s *,aks_wrapped_key_s *,aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_new_key(aks_cred_s *,uint,aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_new_media_key(aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_new_media_key_wrapped_to_class(aks_cred_s *,uint,aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_rewrap_ek(aks_cred_s *,aks_ephemeral_key_s *,aks_ephemeral_key_s *,aks_wrapped_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_rewrap_ekwk(aks_cred_s *,uint,aks_wrapped_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_rewrap_key(aks_cred_s *,uint,aks_wrapped_key_s *,aks_wrapped_key_s *)
AppleKeyStore::fs_unwrap_ek(aks_cred_s *,aks_ephemeral_key_s *,aks_wrapped_key_s *,aks_raw_key_s *)
AppleKeyStore::fs_unwrap_ekwk(aks_cred_s *,aks_wrapped_key_s *,aks_wrapped_key_s *,aks_ephemeral_key_s *,aks_raw_key_s *)
AppleKeyStore::fs_unwrap_key(aks_cred_s *,aks_wrapped_key_s *,aks_raw_key_s *)
AppleKeyStore::fs_unwrap_media_key_from_class(aks_cred_s *,aks_wrapped_key_s *,aks_raw_key_s *)
AppleKeyStore::fs_unwrap_media_key_from_uid(aks_wrapped_key_s *,aks_raw_key_s *)
AppleKeyStore::generation(ulong long,int,generation_option,uint *)
AppleKeyStore::getARMIODriver(void)
AppleKeyStore::getDeviceInfo(uint *,uint *,bool *)
AppleKeyStore::get_calling_rate(uchar *)
AppleKeyStore::get_device_state(ulong long,int,uint,void **,uint *)
AppleKeyStore::get_device_state_gated(_get_lock_state_args *)
AppleKeyStore::get_internal_stats(ulong long,int,void **,uint *)
AppleKeyStore::global_assertion_timer_fired(IOTimerEventSource *)
AppleKeyStore::handleClose(IOService *,uint)
AppleKeyStore::handleIsOpen(IOService const*)
AppleKeyStore::handleOpen(IOService *,uint,void *)
AppleKeyStore::handle_device_state_return(int,ulong long,ulong long)
AppleKeyStore::handle_events(void)
AppleKeyStore::handle_events_gated(void *)
AppleKeyStore::hold_device_lockassertion(ulong long,uint,int)
AppleKeyStore::init_d_key(bool)
AppleKeyStore::init_d_key(bool)
AppleKeyStore::init_s_key(bool)
AppleKeyStore::init_s_key(bool)
AppleKeyStore::init_sep_endpoint(void)
AppleKeyStore::internal_state(void)
AppleKeyStore::kext_msg_cache_device_state(uchar const*,uint)
AppleKeyStore::kext_msg_get_cached_device_state(uint,void **,uint *)
AppleKeyStore::kext_msg_get_cached_device_state(uint,void **,uint *)
AppleKeyStore::keybag_persona_create(ulong long,int,OSData *,OSData *)
AppleKeyStore::keybag_persona_delete(ulong long,int,OSData *)
AppleKeyStore::keybag_persona_list(ulong long,int,OSData **)
AppleKeyStore::late_init(void)
AppleKeyStore::lock_timer_fired(IOTimerEventSource *)
AppleKeyStore::log_file_creation(uint,ulong long)
AppleKeyStore::lower_iteration_counts(ulong long)
AppleKeyStore::new_key(ulong long,key_request_t,int,void const*,uint,aks_fs_context_s *,uint,void const*,uint,void *,uint *,uint *,void *,uint *,void *,uint *,void *,uint *,void *,uint *,uint *,ipc_callback_ctx_t *)
AppleKeyStore::new_media_key(int,uint,aks_raw_key_s *,aks_wrapped_key_s *)
AppleKeyStore::notify_change_device_state(int,uchar,uchar,uchar)
AppleKeyStore::notify_keys_available(int,uchar)
AppleKeyStore::notify_se_recovery(int,uint)
AppleKeyStore::notify_volume(int,uchar *,int)
AppleKeyStore::notify_volumes(int,int,uchar)
AppleKeyStore::perform_operatation_gated(_ref_key_operation_args *)
AppleKeyStore::perform_operation(ulong long,int,uint,void const*,uint,void **,uint *)
AppleKeyStore::pmu(void)
AppleKeyStore::pmu_timer_fired(IOTimerEventSource *)
AppleKeyStore::pmu_timer_start(void)
AppleKeyStore::prewarm_sps(ulong long)
AppleKeyStore::promote_device_lockassertion(ulong long,int)
AppleKeyStore::recover_with_escrow_bag(ulong long,int,OSData *,OSData *,OSData *)
AppleKeyStore::remote_peer_get_state(ulong long,int,void const*,uint,void **,uint *)
AppleKeyStore::remote_session(ulong long,int,uint,void const*,uint,void const*,uint,void const*,uint,int *)
AppleKeyStore::remote_session_operate(ulong long,int,uint,void const*,uint,void **,uint *)
AppleKeyStore::remove_timer(IOTimerEventSource **)
AppleKeyStore::requestOverclock(bool)
AppleKeyStore::rewrap_data_with_opts(ulong long,uint,void const*,uint,int,int,aks_fs_context_s *,uint,uint,void const*,uint,void *,uint *,uint *,void const*,uint,void const*,uint,ipc_callback_ctx_t *)
AppleKeyStore::schedule_effaceable_sync(void)
AppleKeyStore::se_delete_reset_token(ulong long,int)
AppleKeyStore::se_drop_secret(ulong long,int)
AppleKeyStore::se_get_reset_pub(ulong long,int,void **,uint *)
AppleKeyStore::se_get_reset_sig(ulong long,int,void **,uint *)
AppleKeyStore::se_get_reset_token(ulong long,int,void **,uint *)
AppleKeyStore::se_indicate_rm_support(ulong long,int,bool)
AppleKeyStore::se_op(ulong long,int,aks_generic_operation)
AppleKeyStore::se_recover(ulong long,int,void const*,uint)
AppleKeyStore::se_rm_support_is_set(ulong long,int,bool *)
AppleKeyStore::se_set_nonce(ulong long,int,void const*,uint)
AppleKeyStore::se_set_secret(ulong long,int,void const*,uint)
AppleKeyStore::se_stage_stash(ulong long,int)
AppleKeyStore::sealed_hashes_set(ulong long,void const*,uint)
AppleKeyStore::secureRoot(void)
AppleKeyStore::sep(void)
AppleKeyStore::sep_action(void *,void *)
AppleKeyStore::sep_deliver_msg(ipc_callback_ctx_t *,uint,void *)
AppleKeyStore::sep_deliver_msg_gated(ipc_callback_ctx_t *,void *,void *)
AppleKeyStore::sep_deliver_msg_gated(ipc_callback_ctx_t *,void *,void *)
AppleKeyStore::sep_endpoint(void)
AppleKeyStore::sep_endpoint(void)
AppleKeyStore::sepinit_gated(void)
AppleKeyStore::sepinit_gated(void)
AppleKeyStore::setPowerState(ulong,IOService *)
AppleKeyStore::setPowerStateGated(ulong *)
AppleKeyStore::set_backup_keybag(ulong long,int,int,bool,bool,OSData *,void **,uint *)
AppleKeyStore::set_configuration(ulong long,int,int,void const*,uint)
AppleKeyStore::set_device_keybag(ulong long,int,int,OSData *)
AppleKeyStore::set_env(bool)
AppleKeyStore::set_env(bool)
AppleKeyStore::set_options(bool,aks_kext_options_t,ulong long,ulong long *)
AppleKeyStore::set_volume_keybag(ulong long,int,uint,OSData *,OSData *,OSData *)
AppleKeyStore::start(IOService *)
AppleKeyStore::stash_commit(ulong long,int)
AppleKeyStore::stash_create(ulong long,int,aks_stash_mode,aks_stash_create_flags_t,void const*,uint,aks_fv_data_s *)
AppleKeyStore::stash_destroy(ulong long)
AppleKeyStore::stash_escrow(ulong long,int,bool,OSData *,OSData *,void **,uint *)
AppleKeyStore::stash_load(ulong long,int,bool,bool *)
AppleKeyStore::stash_persist(ulong long,int)
AppleKeyStore::stash_timer_fired(IOTimerEventSource *)
AppleKeyStore::stash_timer_set(uint)
AppleKeyStore::stop(IOService *)
AppleKeyStore::systemWillShutdown(uint)
AppleKeyStore::tickle_backup_notify_port(int)
AppleKeyStore::tickle_system_keybag_update_port(int,uint)
AppleKeyStore::unload_keybag(ulong long,int)
AppleKeyStore::unload_session_keybags(ulong long,int)
AppleKeyStore::unlock_the_device(ulong long,int,OSData *,uint)
AppleKeyStore::unlock_with_sync_bag(ulong long,int,OSData *,OSData *)
AppleKeyStore::unwrap_data(ulong long,key_request_t,int,void const*,uint,uint,void const*,uint,void const*,uint,void const*,uint,void *,uint *,uint *,void *,uint *,void *,uint *,ipc_callback_ctx_t *)
AppleKeyStore::unwrap_media_key(wrap_operation_options,int,aks_wrapped_key_s *,aks_raw_key_s *)
AppleKeyStore::verify_password(ulong long,int,OSData *,OSData *)
AppleKeyStore::vfs_notification(void *,void *)
AppleKeyStore::xart_delete(ulong long,uint,OSData *)
AppleKeyStoreHelper::copyPackedItem(OSData *,int)
AppleKeyStoreHelper::dataFromInput(IOExternalMethodArguments *)
AppleKeyStoreHelper::dataToOutput(OSData *,IOExternalMethodArguments *)
AppleKeyStoreHelper::getVerifiedItemCount(OSData *)
AppleKeyStoreHelper::get_dt_entry(char const*,char const*,uint *)
AppleKeyStoreHelper::get_dt_entry(char const*,char const*,uint *)
AppleKeyStoreHelper::secretFromInput(ulong long,ulong long)
AppleKeyStoreUserClient::check_lock_assert_deadline(void)
AppleKeyStoreUserClient::clientClose(void)
AppleKeyStoreUserClient::effective_bag_handle(int,int *)
AppleKeyStoreUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleKeyStoreUserClient::handleLockAssertion(uint,IOExternalMethodArguments *)
AppleKeyStoreUserClient::handleUserClientCommandGated(void *,void *)
AppleKeyStoreUserClient::handle_timer_gated(bool)
AppleKeyStoreUserClient::initWithTask(task *,void *,uint)
AppleKeyStoreUserClient::lock_assert_timer_fired(IOTimerEventSource *)
AppleKeyStoreUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleKeyStoreUserClient::start(IOService *)
AppleKeyStoreUserClient::stop(IOService *)
AppleKeyStoreUserClient::userClientClose(void)
AppleKrakenBuiltIn::MetaClass::alloc(void)
AppleKrakenBuiltIn::readRegs(uchar,uchar *,ulong long)
AppleKrakenBuiltIn::start(IOService *)
AppleKrakenBuiltIn::writeRegs(uchar,uchar const*,ulong long)
AppleKrakenBuiltIn::~AppleKrakenBuiltIn()
AppleLEAPAudioStreamFormatter::AppleLEAPAudioStreamFormatter(void const*,ulong)
AppleLEAPAudioStreamFormatter::getSupportedBitsPerSampleList(uint,uint *)
AppleLEAPAudioStreamFormatter::overrideAudioStreamFormatDescription(IOAudio2StreamBasicDescription &)
AppleLEAPAudioStreamFormatter::~AppleLEAPAudioStreamFormatter()
AppleLEAPController::abortIISCommand(uint)
AppleLEAPController::completeIISCommand(AppleARMIISCommand *)
AppleLEAPController::deferredStartGated(void)
AppleLEAPController::executeIISCommand(AppleARMIISCommand *)
AppleLEAPController::getDMABurstSize(AppleARMIISConfig const*,uint)
AppleLEAPController::getDMABurstSize(AppleARMIISConfig const*,uint)
AppleLEAPController::getDefaultIISConfig(AppleARMIISDevice *,AppleARMIISConfig const**,int *)
AppleLEAPController::initDMA(void)
AppleLEAPController::initForPM(IOService *)
AppleLEAPController::interruptCallbackSubr(uint,void *,ulong long)
AppleLEAPController::isIISDMACoherent(AppleARMIISConfig *)
AppleLEAPController::setDMAConfig(AppleARMIISConfig *)
AppleLEAPController::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *)
AppleLEAPController::setIISControllerActive_Forced(bool)
AppleLEAPController::setPowerStateGated(ulong,IOService *)
AppleLEAPController::start(IOService *)
AppleLEAPController::startIISCommand(uint)
AppleLEAPController::stopIISCommand(uint)
AppleLEAPController::validDMAConfig(AppleARMIISConfig *,int *)
AppleLEAPController::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *)
AppleLIFSUserClient::clientClose(void)
AppleLIFSUserClient::clientDied(void)
AppleLIFSUserClient::didTerminate(IOService *,uint,bool *)
AppleLIFSUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleLIFSUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleLIFSUserClient::methodCreateMapping(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodCreateReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodGenericReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodGetFsAttrReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodGetattrlistbulkReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodLookupReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodPathconfReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodReadReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodReaddirReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodReadlinkReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodRenameReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodRmdirReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodSetClientDomain(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodSetFsAttrReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodStatfsReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodWriteReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::methodXattrReply(AppleLIFSUserClient*,void *,IOExternalMethodArguments *)
AppleLIFSUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleLIFSUserClient::start(IOService *)
AppleLIFSUserClient::stop(IOService *)
AppleLVBOOST::_lvBoost(uint)
AppleLVBOOST::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleLVBOOST::serializedCount(void *,OSSerialize *)
AppleLVBOOST::start(IOService *)
AppleLVBOOST::stop(IOService *)
AppleM2ScalerCSCDriver::MetaClass::alloc(void)
AppleM2ScalerCSCDriver::activateForMapping(bool,M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCDriver::activateForMapping_gated(bool *,M2ScalerCSCRequest *,bool *)
AppleM2ScalerCSCDriver::activateForMapping_gated(bool *,M2ScalerCSCRequest *,bool *)
AppleM2ScalerCSCDriver::addToRequestAge_gatedContext(M2ScalerCSCRequest *,M2ScalerCSCRequestHead *)
AppleM2ScalerCSCDriver::ageRequests_gatedContext(void)
AppleM2ScalerCSCDriver::applyOffsetAndDimensionComputations(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::checkAberrantSizes(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::checkAcknowledgePowerState(void)
AppleM2ScalerCSCDriver::checkCustomFilterBin(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::checkForWork_gatedContext(AppleM2ScalerCSCHal *,uint,bool)
AppleM2ScalerCSCDriver::clientClosed_gated(IOSurfaceAcceleratorClient *)
AppleM2ScalerCSCDriver::completeBufferDS_gatedContext(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::completeRequest_gatedContext(AppleM2ScalerCSCHal *,M2ScalerCSCRequest *,uint,bool)
AppleM2ScalerCSCDriver::configure_performance_stats(uint)
AppleM2ScalerCSCDriver::createTimers(uint,AppleM2ScalerCSCHal *)
AppleM2ScalerCSCDriver::debugDumpTransform(M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCDriver::dequeueAndExecuteRequests(void)
AppleM2ScalerCSCDriver::dequeueAndExecuteRequests_gatedContext(void)
AppleM2ScalerCSCDriver::driverLevelInterruptOccurred_gatedContext(AppleM2ScalerCSCHal *,M2ScalerCSCRequest *,uint,bool)
AppleM2ScalerCSCDriver::dumpScalerRegisters(M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCDriver::dumpSrcOrDstTransform(DestinationOrSource,M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCDriver::executeTransforms_gated(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::executeTransforms_gatedMaybe(bool,M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::exportErrorPathStateAndID(void)
AppleM2ScalerCSCDriver::exportPropertiesAndExtents(void)
AppleM2ScalerCSCDriver::finishAndReleaseRequest_gated(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::free(void)
AppleM2ScalerCSCDriver::gatherOptions(M2ScalerCSCRequest *,ulong long)
AppleM2ScalerCSCDriver::getDartPowerByEDTValue(IOService *)
AppleM2ScalerCSCDriver::getDmaCommand(uint,IOMapper *,IODMACommand **)
AppleM2ScalerCSCDriver::getDmaCommand(uint,IOMapper *,M2ScalerDMACommand **)
AppleM2ScalerCSCDriver::getHalByEDTValue(IOService *)
AppleM2ScalerCSCDriver::getIOSurfaceFromID(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::getPerfStateClockByWorkload(ulong long,SCALER_PROPERTIES_EXTENTS const*)
AppleM2ScalerCSCDriver::getPerfStatesByEDTValue(IOService *)
AppleM2ScalerCSCDriver::getPreparedMemoryDescriptor(DestinationOrSource,M2ScalerCSCRequest *,IOMemoryDescriptor **)
AppleM2ScalerCSCDriver::getWorkloadPriority(void)
AppleM2ScalerCSCDriver::getWorkloadPriorityByEDTValue(IOService *)
AppleM2ScalerCSCDriver::get_histogram_gated(IOSurfaceAcceleratorClient *,IOMemoryDescriptor *)
AppleM2ScalerCSCDriver::get_profiler_database(IOMemoryDescriptor *)
AppleM2ScalerCSCDriver::init(OSDictionary *)
AppleM2ScalerCSCDriver::initForPM(IOService *)
AppleM2ScalerCSCDriver::initPowerAndClock(IOService *)
AppleM2ScalerCSCDriver::k2kTests(IOSAKernelTestsArguments *)
AppleM2ScalerCSCDriver::kernelDebugCallBack(kd_callback_type,void *)
AppleM2ScalerCSCDriver::kernelTests(IOSAKernelTestsArguments *)
AppleM2ScalerCSCDriver::lateGateExecuteRequest(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleM2ScalerCSCDriver::nullDriverReturn_gated(NullDriverReturnParms *)
AppleM2ScalerCSCDriver::nullDriverReturn_gated(NullDriverReturnParms *)
AppleM2ScalerCSCDriver::perfControllerWorkBegin(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::perfControllerWorkEnd(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::perfControllerWorkSubmit(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::prepareAndMapBuffers(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::prepareTransform(TransformSurfaceData *,ulong long,IOSurfaceAcceleratorClient *)
AppleM2ScalerCSCDriver::probe(IOService *,int *)
AppleM2ScalerCSCDriver::queueAndExecuteRequest_gated(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::queueRequest_gated(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::readPropertyAndSetRuntimeProperty(OSDictionary const*,ScalerRuntimeProperty,bool *)
AppleM2ScalerCSCDriver::readPropertyAndSetRuntimeProperty(OSDictionary const*,ScalerRuntimeProperty,bool *)
AppleM2ScalerCSCDriver::registerRuntimeProperties(void)
AppleM2ScalerCSCDriver::registerRuntimeProperties(void)
AppleM2ScalerCSCDriver::reportNumberOfScalers(void)
AppleM2ScalerCSCDriver::reportScalerUsage(void)
AppleM2ScalerCSCDriver::returnDMACommand(IODMACommand *,uint)
AppleM2ScalerCSCDriver::selectBestScaler_gated(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::selectScaler_gatedContext(M2ScalerCSCRequest *,uint *,uint,bool *)
AppleM2ScalerCSCDriver::serializePerformanceStats(void *,void *,OSSerialize *)
AppleM2ScalerCSCDriver::setBootArgs(void)
AppleM2ScalerCSCDriver::setPowerState(ulong,IOService *)
AppleM2ScalerCSCDriver::setPowerState_gated(ulong,IOService *)
AppleM2ScalerCSCDriver::setPowerState_gated(ulong,IOService *)
AppleM2ScalerCSCDriver::setPreparedMemoryDescriptor(DestinationOrSource,M2ScalerCSCRequest *,IOMemoryDescriptor *,ulong *)
AppleM2ScalerCSCDriver::setProperties(OSObject *)
AppleM2ScalerCSCDriver::setVersionInfo(void)
AppleM2ScalerCSCDriver::signalFence_gated(M2ScalerCSCRequest *,IOSurface *)
AppleM2ScalerCSCDriver::signalFence_gated(M2ScalerCSCRequest *,IOSurface *)
AppleM2ScalerCSCDriver::start(IOService *)
AppleM2ScalerCSCDriver::startTimer(kTimerIndex,uint,uint)
AppleM2ScalerCSCDriver::timerInterruptHeartbeat_gatedContext(OSObject *,IOTimerEventSource *)
AppleM2ScalerCSCDriver::transformGeneral(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::transformGeneral(M2ScalerCSCRequest *)
AppleM2ScalerCSCDriver::transform_surface(TransformSurfaceData *,ulong long,IOSurfaceAcceleratorClient *)
AppleM2ScalerCSCDriver::zeroFill(transformData *,IOMemoryDescriptor *)
AppleM2ScalerCSCDriver::~AppleM2ScalerCSCDriver()
AppleM2ScalerCSCDriverFilters::AppleM2ScalerCSCDriverFilters(AppleM2ScalerCSCDriver const*)
AppleM2ScalerCSCDriverFilters::AppleM2ScalerCSCDriverFilters(void)
AppleM2ScalerCSCDriverFilters::allocateCoefficientsIfNecessary(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
AppleM2ScalerCSCDriverFilters::allocateCoefficientsIfNecessary(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
AppleM2ScalerCSCDriverFilters::clean(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
AppleM2ScalerCSCDriverFilters::clean(void)
AppleM2ScalerCSCDriverFilters::getCoefficients(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
AppleM2ScalerCSCDriverFilters::init(uint,uint,uint,uint,uint,uint,uint,SCALER_PROPERTIES_EXTENTS const*)
AppleM2ScalerCSCDriverFilters::init(uint,uint,uint,uint,uint,uint,uint,SCALER_PROPERTIES_EXTENTS const*)
AppleM2ScalerCSCDriverFilters::setCoefficient(uint,VerticalOrHorizontal,ChromaLumaOrAlpha,uint,uint,uint)
AppleM2ScalerCSCDriverFilters::updateWithAllCoefficients(uint,uint,uint *,bool)
AppleM2ScalerCSCDriverFilters::updateWithCoefficients(uint,VerticalOrHorizontal,ChromaLumaOrAlpha,uint *,uint *,bool)
AppleM2ScalerCSCDriverFilters::~AppleM2ScalerCSCDriverFilters()
AppleM2ScalerCSCHal::AppleM2ScalerCSCHal(OSMetaClass const*)
AppleM2ScalerCSCHal::MetaClass::alloc(void)
AppleM2ScalerCSCHal::adaptDDAinitToRotation(M2ScalerCSCRequest *,VerticalOrHorizontal)
AppleM2ScalerCSCHal::addApiodmaEventSource(IOFilterInterruptEventSource *)
AppleM2ScalerCSCHal::apiodmaFree_gatedContext(void)
AppleM2ScalerCSCHal::collectHistogram_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::computeChromaDDAinit(M2ScalerCSCRequest *,VerticalOrHorizontal)
AppleM2ScalerCSCHal::computeChromaOffsets(DestinationOrSource,VerticalOrHorizontal,M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::computeHardwareRotationMode(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::createHalObjects(void)
AppleM2ScalerCSCHal::createHalObjects(void)
AppleM2ScalerCSCHal::createInterruptEventSource(IOService *,IOWorkLoop *)
AppleM2ScalerCSCHal::disableInterruptEventSource_gatedContext(void)
AppleM2ScalerCSCHal::enableInterruptEventSource_gatedContext(void)
AppleM2ScalerCSCHal::executePipeInitializations(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::executePipeValidations(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::executeTransform_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::flushDARTCache_gatedContext(IOMapper *)
AppleM2ScalerCSCHal::generalRegIO(IOMemoryDescriptor **,IOMemoryMap **,ulong long *,ulong long,bool *,bool,bool,bool,uint *)
AppleM2ScalerCSCHal::getMaxSourceDestWidthHeight(M2ScalerCSCRequest *,uint *,uint *,uint *,uint *)
AppleM2ScalerCSCHal::init(uint,socVersion,IOService *,IOService *,IOWorkLoop *,SCALER_RUNTIME_PROPERTIES const*)
AppleM2ScalerCSCHal::initHalObjects(void)
AppleM2ScalerCSCHal::initHalObjects(void)
AppleM2ScalerCSCHal::initPipeForTransform(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::initScalerPropertiesAndExtents(void)
AppleM2ScalerCSCHal::initializeDmaPipeUnits(M2ScalerCSCRequest *,pipeUnitExchange *)
AppleM2ScalerCSCHal::initializeDmaPipeUnits(M2ScalerCSCRequest *,pipeUnitExchange *)
AppleM2ScalerCSCHal::mapDescriptorMemory(DestinationOrSource,M2ScalerCSCRequest *,IOMemoryDescriptor *,ulong)
AppleM2ScalerCSCHal::mapRegisterMemory(IOService *)
AppleM2ScalerCSCHal::newDmaCommand(IOMapper *,M2ScalerDMACommand **)
AppleM2ScalerCSCHal::powerDownMsrIfFree(void)
AppleM2ScalerCSCHal::prepareNullKickoffInterrupt_gatedContext(void)
AppleM2ScalerCSCHal::printRegsRange(uint volatile*,uint,uint)
AppleM2ScalerCSCHal::printRegsRangeAstris(ulong long,uint volatile*,uint,uint,uint **)
AppleM2ScalerCSCHal::removeApiodmaEventSource(IOFilterInterruptEventSource *)
AppleM2ScalerCSCHal::reserveScaler_gatedContext(void)
AppleM2ScalerCSCHal::setBufferPhysicalAddresses(M2ScalerCSCRequest *,DestinationOrSource,ulong long)
AppleM2ScalerCSCHal::setLogicalFlipRotate(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::setMapperCacheAttributes_gatedContext(IOMapper *,IOSurface *,IOMemoryDescriptor *)
AppleM2ScalerCSCHal::setTransformFormat(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::stop(IOWorkLoop *)
AppleM2ScalerCSCHal::timerInterruptNullKickoff_gatedContext(void)
AppleM2ScalerCSCHal::timerInterruptWatchdog_gatedContext(void)
AppleM2ScalerCSCHal::translateRetrogradeFlipRotate(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::unReserveScaler_gatedContext(void)
AppleM2ScalerCSCHal::validateAlphaOverride(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::validateBorderFill(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::validateDimensions(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::validateHistogram(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::validateScalingRatios(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::validateSourceToDestRelationship(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::workaroundNullIntegerButNotNullFractionalOffset(M2ScalerCSCRequest *)
AppleM2ScalerCSCHal::writePropertiesAndExtentsToIORegistry(OSDictionary *)
AppleM2ScalerCSCHal::~AppleM2ScalerCSCHal()
AppleM2ScalerCSCHalMSR10::allocateSpillBuffer(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10::configureSpillBuffer_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10::contextSwitchHandler(void)
AppleM2ScalerCSCHalMSR10::freeSpillBuffer(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10::getRegisterCount(registerGroup_t,uint,uint *,uint *)
AppleM2ScalerCSCHalMSR10::getRegisterFifoAvailability_gatedContext(void)
AppleM2ScalerCSCHalMSR10::hangRecovery_gatedContext(void)
AppleM2ScalerCSCHalMSR10::hangRecovery_gatedContext(void)
AppleM2ScalerCSCHalMSR10::interruptFilter_interruptContext(OSObject *,IOFilterInterruptEventSource *)
AppleM2ScalerCSCHalMSR10::printRegs(bool)
AppleM2ScalerCSCHalMSR10::resumeTransform_gatedContext(int)
AppleM2ScalerCSCHalMSR10::scalerErrorInterruptStatus(uint,bool *)
AppleM2ScalerCSCHalMSR10::setBufferPhysicalAddresses(M2ScalerCSCRequest *,DestinationOrSource,ulong long)
AppleM2ScalerCSCHalMSR10::validateAddressingFormat(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10::validateMacroblockSize(transformData *,uint)
AppleM2ScalerCSCHalMSR10::validateXAlignment(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10::validateXYOffsets(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10j::configureSpillBuffer_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR10j::newDmaCommand(IOMapper *,M2ScalerDMACommand **)
AppleM2ScalerCSCHalMSR10j::printRegs(bool)
AppleM2ScalerCSCHalMSR11::getRegisterCount(registerGroup_t,uint,uint *,uint *)
AppleM2ScalerCSCHalMSR11::printRegs(bool)
AppleM2ScalerCSCHalMSR11::validateAddressingFormat(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR2::printRegs(bool)
AppleM2ScalerCSCHalMSR4::perfChecksumStatsInit(void)
AppleM2ScalerCSCHalMSR4::printRegs(bool)
AppleM2ScalerCSCHalMSR4::scalerErrorInterruptStatus(uint,bool *)
AppleM2ScalerCSCHalMSR4::validateXAlignment(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR6::printRegs(bool)
AppleM2ScalerCSCHalMSR7::configureTiledCompression_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR7::getRegisterFifoAvailability_gatedContext(void)
AppleM2ScalerCSCHalMSR7::perfChecksumStatsInit(void)
AppleM2ScalerCSCHalMSR7::printRegs(bool)
AppleM2ScalerCSCHalMSR7::scalerErrorInterruptStatus(uint,bool *)
AppleM2ScalerCSCHalMSR7::setBufferPhysicalAddresses(M2ScalerCSCRequest *,DestinationOrSource,ulong long)
AppleM2ScalerCSCHalMSR7::setTiledCompressedMemAddresses(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR7::shallActivateCSC(M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCHalMSR8::configureTiledCompression_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR8::getRegisterCount(registerGroup_t,uint,uint *,uint *)
AppleM2ScalerCSCHalMSR8::getTlimit(void)
AppleM2ScalerCSCHalMSR8::hangRecovery_gatedContext(void)
AppleM2ScalerCSCHalMSR8::pipeCheckSrcDstIssues(M2ScalerCSCRequest *,pipeUnitExchange *)
AppleM2ScalerCSCHalMSR8::pipeCheckXYOffsets(DestinationOrSource,M2ScalerCSCRequest *,pipeUnitExchange *)
AppleM2ScalerCSCHalMSR8::printRegs(bool)
AppleM2ScalerCSCHalMSR8::resetScaler_gatedContext(uint,bool,bool)
AppleM2ScalerCSCHalMSR8::saveTiledBufferUsage_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR8::scalerErrorInterruptStatus(uint,bool *)
AppleM2ScalerCSCHalMSR8::setBufferPhysicalAddresses(M2ScalerCSCRequest *,DestinationOrSource,ulong long)
AppleM2ScalerCSCHalMSR8::setTlimit(uint)
AppleM2ScalerCSCHalMSR8::stopPollTlimit(void)
AppleM2ScalerCSCHalMSR8::validateCompressionFormat(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR8::validateWdmaCfg(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR8::validateXYOffsets(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR9::configureStart_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR9::perfChecksumStatsInit(void)
AppleM2ScalerCSCHalMSR9::printRegs(bool)
AppleM2ScalerCSCHalMSR::activateDART_gatedContext(bool)
AppleM2ScalerCSCHalMSR::activateMSR_gatedContext(M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCHalMSR::checkScalerAvailabilityStatus_gatedContext(void)
AppleM2ScalerCSCHalMSR::completeRequest_gatedContext(M2ScalerCSCRequest *,AppleM2ScalerCSCDriver *,int)
AppleM2ScalerCSCHalMSR::configureStart_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::dequeueRequestForCompletion_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::detectHardwareVersion(void)
AppleM2ScalerCSCHalMSR::dumpRegistersIfStable_gatedContext(void)
AppleM2ScalerCSCHalMSR::executePostMappingWorkarounds(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::getMsrFree(void)
AppleM2ScalerCSCHalMSR::getRegisterFifoAvailability_gatedContext(void)
AppleM2ScalerCSCHalMSR::init(uint,socVersion,IOService *,IOService *,IOWorkLoop *,SCALER_RUNTIME_PROPERTIES const*)
AppleM2ScalerCSCHalMSR::initStandardFlipRotates(void)
AppleM2ScalerCSCHalMSR::interruptFilter_interruptContext(OSObject *,IOFilterInterruptEventSource *)
AppleM2ScalerCSCHalMSR::interruptOccurred_gatedContext(IOInterruptEventSource *,int)
AppleM2ScalerCSCHalMSR::interruptOccurred_gatedContext(IOInterruptEventSource *,int)
AppleM2ScalerCSCHalMSR::isScalerRunning(void)
AppleM2ScalerCSCHalMSR::isTiledAddressMisaligned(DestinationOrSource,transformData *)
AppleM2ScalerCSCHalMSR::isTiledSpanMisaligned(transformData *)
AppleM2ScalerCSCHalMSR::iterateOnFrames_gatedContext(AppleM2ScalerCSCDriver *,bool,int,bool)
AppleM2ScalerCSCHalMSR::iterateOnFrames_gatedContext(AppleM2ScalerCSCDriver *,bool,int,bool)
AppleM2ScalerCSCHalMSR::mapBufferGeneral(IOMapper *,IOBufferMemoryDescriptor *,IOMemoryMap **,void **,ulong long *,uint)
AppleM2ScalerCSCHalMSR::miscDimensionAdjustments(DestinationOrSource,VerticalOrHorizontal,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::perfChecksumStatsInit(void)
AppleM2ScalerCSCHalMSR::prepareNullKickoffInterrupt_gatedContext(void)
AppleM2ScalerCSCHalMSR::printRegs(bool)
AppleM2ScalerCSCHalMSR::queueRequestForCompletion_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::resetHousekeeping_gatedContext(void)
AppleM2ScalerCSCHalMSR::resetScaler_gatedContext(uint,bool,bool)
AppleM2ScalerCSCHalMSR::scalerErrorInterruptStatus(uint,bool *)
AppleM2ScalerCSCHalMSR::setActive_gatedContext(bool,M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCHalMSR::setClockByWorkload_gatedContext(M2ScalerCSCRequest *,AppleM2ScalerCSCDriver *,SCALER_PROPERTIES_EXTENTS const*)
AppleM2ScalerCSCHalMSR::setTransformFormat(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::shallActivateCSC(M2ScalerCSCRequest *,bool)
AppleM2ScalerCSCHalMSR::startScaler_gatedContext(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::unmapBufferGeneral(IOBufferMemoryDescriptor *,IOMemoryMap *,void *,uint)
AppleM2ScalerCSCHalMSR::validateAndAdjustTransformFormat(DestinationOrSource,M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::validateSourceToDestRelationship(M2ScalerCSCRequest *)
AppleM2ScalerCSCHalMSR::validateXYOffsets(DestinationOrSource,M2ScalerCSCRequest *)
AppleM3WrapV2::_enableInboxFilter(void)
AppleM3WrapV2::_enableOutbox(bool)
AppleM3WrapV2::_getInboxEmpty(void)
AppleM3WrapV2::_getInboxFull(void)
AppleM3WrapV2::_getKICInboxEnabled(void)
AppleM3WrapV2::_getOutboxEmpty(void)
AppleM3WrapV2::_outboxHandler(IOInterruptEventSource *)
AppleM3WrapV2::_pendingMessages(uint)
AppleM3WrapV2::getMailboxBulk(void *,uint *)
AppleM3WrapV2::getMailboxBulk(void *,uint *)
AppleM3WrapV2::renderMailboxDebugStatus(char *,ulong)
AppleM3WrapV2ACIO::MetaClass::alloc(void)
AppleM3WrapV2ACIO::_runCPU(bool)
AppleM3WrapV2ACIO::initialize(void)
AppleM3WrapV2ACIO::~AppleM3WrapV2ACIO()
AppleM68Buttons::AppleM68Buttons(void)
AppleM68Buttons::MetaClass::alloc(void)
AppleM68Buttons::_backlightServicePublished(void *,IOService *,IONotifier *)
AppleM68Buttons::_debounceAction(IOTimerEventSource *)
AppleM68Buttons::_diagnosticMaskFallingEdge(void)
AppleM68Buttons::_dispatchButtonEvent(ulong long,int,bool,bool)
AppleM68Buttons::_dispatchKeyboardEvent(ulong long,uint,uint,bool,bool)
AppleM68Buttons::_filterAction(IOFilterInterruptEventSource *)
AppleM68Buttons::_findIndexForButton(char const*)
AppleM68Buttons::_flushDefferedButtons(void)
AppleM68Buttons::_forcedShutdownDebugInit(void)
AppleM68Buttons::_getButtonNameForEvent(uint,uint)
AppleM68Buttons::_handleDarkBoot(uint,uint,bool,bool)
AppleM68Buttons::_handle_acm_ping_call(void *)
AppleM68Buttons::_handle_dark_boot_call(void *)
AppleM68Buttons::_handle_nvram_sync_call(void *)
AppleM68Buttons::_initForPM(IOService *)
AppleM68Buttons::_interruptAction(IOInterruptEventSource *,int)
AppleM68Buttons::_lcdServicePublished(void *,IOService *,IONotifier *)
AppleM68Buttons::_poolGetButton(void)
AppleM68Buttons::_processDebouncedButton(OSData *)
AppleM68Buttons::_processDefferedButton(OSData *)
AppleM68Buttons::_reportButton(int,ulong long,uint *)
AppleM68Buttons::_reportButtons(ulong long)
AppleM68Buttons::_serializeDebugState(void *,OSSerialize *)
AppleM68Buttons::_setDiagnosticMask(IOService *,char const*,uint *)
AppleM68Buttons::_shutdownDebugTimerAction(IOTimerEventSource *)
AppleM68Buttons::_shutdownNVRAMSyncTimerAction(IOTimerEventSource *)
AppleM68Buttons::_startShutdownTimers(void)
AppleM68Buttons::_timerAction(IOTimerEventSource *)
AppleM68Buttons::_triggerDiagnostic(uint,bool)
AppleM68Buttons::_updateProperties(OSObject *)
AppleM68Buttons::_updateTrumpMap(void)
AppleM68Buttons::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleM68Buttons::copyEvent(uint,IOHIDEvent *,uint)
AppleM68Buttons::dispatchEventExt(IOHIDEvent *)
AppleM68Buttons::free(void)
AppleM68Buttons::handleOpen(IOService *,uint,void *)
AppleM68Buttons::handleStart(IOService *)
AppleM68Buttons::handleStart(IOService *)
AppleM68Buttons::setPowerState(ulong,IOService *)
AppleM68Buttons::setProperties(OSObject *)
AppleM68Buttons::~AppleM68Buttons()
AppleMCA2Cluster::AppleMCA2Cluster(OSMetaClass const*)
AppleMCA2Cluster::AppleMCA2Cluster(void)
AppleMCA2Cluster::MetaClass::alloc(void)
AppleMCA2Cluster::initInterrupt(void)
AppleMCA2Cluster::initInterrupt(void)
AppleMCA2Cluster::interruptAction(IOInterruptEventSource *,int)
AppleMCA2Cluster::interruptClear(uint)
AppleMCA2Cluster::interruptClearGated(uint)
AppleMCA2Cluster::interruptDebug(AppleMCA2Controller *,uint,char *,ulong *)
AppleMCA2Cluster::interruptDisable(uint)
AppleMCA2Cluster::interruptDisableGated(uint)
AppleMCA2Cluster::interruptEnable(uint)
AppleMCA2Cluster::interruptEnable(uint)
AppleMCA2Cluster::interruptEnableGated(uint)
AppleMCA2Cluster::interruptEnableGated(uint)
AppleMCA2Cluster::interruptFilter(IOFilterInterruptEventSource *)
AppleMCA2Cluster::publishBelow(IORegistryEntry *)
AppleMCA2Cluster::start(IOService *)
AppleMCA2Cluster_T8030::MetaClass::alloc(void)
AppleMCA2Cluster_T8030::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMCA2Cluster_T8030::filterCaptureClusterContext(uint)
AppleMCA2Cluster_T8030::initClusterPreflightGated(void)
AppleMCA2Cluster_T8030::~AppleMCA2Cluster_T8030()
AppleMCA2Controller::abortIISCommand(uint)
AppleMCA2Controller::calculateFramePeriod(AppleARMIISConfig *)
AppleMCA2Controller::checkChannelSwap(uint,uint,uint)
AppleMCA2Controller::checkChannelSwap(uint,uint,uint)
AppleMCA2Controller::checkDMATxFIFOReserve(AppleARMIISConfig *,ulong long,char const*)
AppleMCA2Controller::completeIISCommand(AppleARMIISCommand *)
AppleMCA2Controller::createReporters(void)
AppleMCA2Controller::createReporters(void)
AppleMCA2Controller::deferredStartGated(void)
AppleMCA2Controller::enableDeviceClock(bool,uint)
AppleMCA2Controller::executeIISCommand(AppleARMIISCommand *)
AppleMCA2Controller::frameDelay(uint,uint)
AppleMCA2Controller::getDMABurstSize(AppleARMIISConfig const*,uint)
AppleMCA2Controller::getLatency(AppleARMIISConfig const*,uint,IODMAEventSource *,uint,bool)
AppleMCA2Controller::initDMA(void)
AppleMCA2Controller::initForPMInternal(IOService *)
AppleMCA2Controller::initFunctions(IOService *)
AppleMCA2Controller::initMCLKConfig(void)
AppleMCA2Controller::initMCLKConfig(void)
AppleMCA2Controller::initNCOConfig(void)
AppleMCA2Controller::initNCOConfig(void)
AppleMCA2Controller::initRegs(void)
AppleMCA2Controller::initSyncGenConfig(void)
AppleMCA2Controller::initSyncGenConfig(void)
AppleMCA2Controller::initVersion(void)
AppleMCA2Controller::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleMCA2Controller::interruptSubr(uint)
AppleMCA2Controller::publishBelow(IORegistryEntry *)
AppleMCA2Controller::setDMAFIFODepth(IODMAEventSource *,ulong long,AppleARMIISConfig *,uint)
AppleMCA2Controller::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *)
AppleMCA2Controller::setMCLKClkConfig(AppleARMIISConfig *,AppleMCATiming *)
AppleMCA2Controller::setMCLKClkEnabled(AppleARMIISConfig *,bool)
AppleMCA2Controller::setMCLKClkFrequency(uint)
AppleMCA2Controller::setPowerStateGated(ulong,IOService *)
AppleMCA2Controller::start(IOService *)
AppleMCA2Controller::startIISCommand(uint)
AppleMCA2Controller::stopIISCommand(uint)
AppleMCA2Controller::validDMAConfig(IODMAEventSource *,uint,AppleARMIISConfig *,uint)
AppleMCA2Controller::validDMAConfigTx(IODMAEventSource *,uint,AppleARMIISConfig *)
AppleMCA2Controller::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *)
AppleMCA2Controller::validMCLKClkConfig(AppleARMIISConfig *,AppleMCATiming *)
AppleMCA2Controller::withRegistryEntry(IORegistryEntry *,IOService *)
AppleMCA2Controller_T8030::MetaClass::alloc(void)
AppleMCA2Controller_T8030::completeIISCommand(AppleARMIISCommand *)
AppleMCA2Controller_T8030::setRouteFunctions(void)
AppleMCA2Controller_T8030::startIISCommand(uint)
AppleMCA2Controller_T8030::stopDMACommand(uint)
AppleMCA2Controller_T8030::stopIISCommand(uint)
AppleMCA2Controller_T8030::withRegistryEntry(IORegistryEntry *,IOService *)
AppleMCA2Controller_T8030::~AppleMCA2Controller_T8030()
AppleMCA2Controller_T8030__fn_0x548
AppleMCA2Controller__getDMABurstSize_AppleARMIISConfig_const___unsigned_int__const
AppleMCA2DeviceClock::enable(bool,uint,uint,bool *)
AppleMCA2DeviceClock::initWith(AppleMCA2Switch *,AppleARMIODevice *,uint)
AppleMCA2DeviceClock::isEnabled(void)
AppleMCA2DeviceClock::isEnabledClient(uint)
AppleMCA2DeviceClock::with(AppleMCA2Switch *,AppleARMIODevice *,uint)
AppleMCA2Fifo::initWithController(AppleMCA2Controller *,uint)
AppleMCA2Fifo::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *)
AppleMCA2Fifo::withController(AppleMCA2Controller *,uint)
AppleMCA2Fifo__setIISConfig_AppleARMIISDevice___AppleARMIISConfig___AppleMCATiming
AppleMCA2Identity::identify(uint,uint)
AppleMCA2Identity::initWithID(uint)
AppleMCA2Identity::initWithRegistryEntry(IORegistryEntry *,char const*)
AppleMCA2MCLK::enable(bool,uint,bool *)
AppleMCA2MCLK::initWith(AppleMCA2Switch *,uint)
AppleMCA2MCLK::isEnabled(void)
AppleMCA2MCLK::isEnabledClient(uint)
AppleMCA2MCLK::mclkConfigWrite(uint)
AppleMCA2MCLK::setMCLKConfig(uint)
AppleMCA2MCLK::validMCLKConfig(uint)
AppleMCA2MCLK::with(AppleMCA2Switch *,uint)
AppleMCA2MCLKPin::_enableI2SOutputEnableMclk(bool)
AppleMCA2MCLKPin::_updateReferenceCountForClient(bool,uint)
AppleMCA2MCLKPin::enable(bool,uint,uint)
AppleMCA2MCLKPin::initWith(AppleMCA2Switch *,uint)
AppleMCA2MCLKPin::isEnabled(void)
AppleMCA2MCLKPin::isEnabledClient(uint)
AppleMCA2NCO::enable(uint,uint,bool *)
AppleMCA2NCO::initWith(AppleMCA2Switch *,AppleMCA2Controller *,char const*,uint)
AppleMCA2NCO::isEnabled(void)
AppleMCA2NCO::setFrequency(uint)
AppleMCA2NCO::with(AppleMCA2Switch *,AppleMCA2Controller *,char const*,uint)
AppleMCA2Regs::initWithProvider(IOService *,uint,uint)
AppleMCA2Regs::initWithProvider(IOService *,uint,uint)
AppleMCA2Regs::read32(uint)
AppleMCA2Regs::withProvider(IOService *,uint,uint)
AppleMCA2Regs::write16(uint,ushort)
AppleMCA2Regs::write32(uint,uint)
AppleMCA2Rx::initWithController(AppleMCA2Controller *,uint)
AppleMCA2Rx::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleMCA2SerDes::initWithController(AppleMCA2Controller *,uint)
AppleMCA2SerDes::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleMCA2SerDes::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *)
AppleMCA2Switch::MetaClass::alloc(void)
AppleMCA2Switch::applyConnectionOverrides(AppleMCA2Switch::getMaskForConnectionArgs *)
AppleMCA2Switch::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMCA2Switch::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMCA2Switch::cluster_props_init(void)
AppleMCA2Switch::copyObjectDescription(uint)
AppleMCA2Switch::createMCA2ConfigARMFunction(void)
AppleMCA2Switch::defaultRegisterState(uint *)
AppleMCA2Switch::deferredStart(void)
AppleMCA2Switch::deferredStart(void)
AppleMCA2Switch::deferredStartGated(void)
AppleMCA2Switch::deferredStartGated(void)
AppleMCA2Switch::deferredStartStatic(void *,void *)
AppleMCA2Switch::device_clocks_enable_all(bool)
AppleMCA2Switch::device_clocks_enable_all(bool)
AppleMCA2Switch::device_clocks_init(void)
AppleMCA2Switch::device_clocks_init(void)
AppleMCA2Switch::enableDeviceClock(bool,uint,uint,uint)
AppleMCA2Switch::enableDeviceClockGated(bool,uint,uint,uint)
AppleMCA2Switch::getClockDomain(uint)
AppleMCA2Switch::getClockDomain(uint)
AppleMCA2Switch::getClockSourceForObject(uint,uint)
AppleMCA2Switch::getClockSourceForRx(uint,uint,uint *)
AppleMCA2Switch::getClockSourceForSyn(uint,uint *)
AppleMCA2Switch::getClockSourceForTx(uint,uint,uint *)
AppleMCA2Switch::getMaskForConnection(AppleARMIISSwitch::ConnectionType,uint,uint,uint,uint *,uint *)
AppleMCA2Switch::getMaskForConnectionGated(AppleMCA2Switch::getMaskForConnectionArgs *)
AppleMCA2Switch::initForPM(IOService *)
AppleMCA2Switch::initForPMGated(IOService *)
AppleMCA2Switch::interruptService(uint *,uint)
AppleMCA2Switch::mclkOutPins_init(void)
AppleMCA2Switch::mclkOutPins_init(void)
AppleMCA2Switch::mclks_init(void)
AppleMCA2Switch::mclks_init(void)
AppleMCA2Switch::probe(IOService *,int *)
AppleMCA2Switch::pwrDisabled(uint)
AppleMCA2Switch::pwrWantEnable(uint)
AppleMCA2Switch::selectRxResetClock(AppleMCA2Switch_RxCtl *,uint,bool)
AppleMCA2Switch::selectRxResetTypeBclk(AppleMCA2Switch_RxCtl *,uint,bool)
AppleMCA2Switch::selectTxResetClock(AppleMCA2Switch_TxCtl *,uint,bool)
AppleMCA2Switch::selectTxResetTypeBclk(AppleMCA2Switch_TxCtl *,uint,bool)
AppleMCA2Switch::selectTxResetTypeBclk(AppleMCA2Switch_TxCtl *,uint,bool)
AppleMCA2Switch::selectors_free(void)
AppleMCA2Switch::selectors_init(void)
AppleMCA2Switch::serDesResetClock_init(void)
AppleMCA2Switch::setPowerState(ulong,IOService *)
AppleMCA2Switch::setPowerStateGated(ulong,IOService *)
AppleMCA2Switch::start(IOService *)
AppleMCA2Switch::start(IOService *)
AppleMCA2Switch::writeRegisters(uint const*)
AppleMCA2Switch::writeRegistersGated(uint const*)
AppleMCA2Switch::writeRegistersWithMask(uint const*,uint *,uint const*)
AppleMCA2Switch::writeRegistersWithMask(uint const*,uint *,uint const*)
AppleMCA2Switch::~AppleMCA2Switch()
AppleMCA2SwitchRegs::initWith(AppleMCA2Switch *,AppleARMIODevice *,uint)
AppleMCA2SwitchRegs::read32(uint,uint)
AppleMCA2SwitchRegs::read32(uint,uint)
AppleMCA2SwitchRegs::with(AppleMCA2Switch *,AppleARMIODevice *,uint)
AppleMCA2SwitchRegs::write32(uint,uint,uint)
AppleMCA2SwitchRegs::write32(uint,uint,uint)
AppleMCA2SwitchRegs::write32_ov_critical(AppleMCA2SwitchRegs::ov_t *,uint)
AppleMCA2Switch_ClockGenCfg::AppleMCA2Switch_ClockGenCfg(void)
AppleMCA2Switch_ClockGenCfg::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,uint *,uint *)
AppleMCA2Switch_ClockGenCfg::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *)
AppleMCA2Switch_ClockGenCfg::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_ClockGenCtl::AppleMCA2Switch_ClockGenCtl(void)
AppleMCA2Switch_ClockGenCtl::enable(AppleMCA2Switch *,bool,uint)
AppleMCA2Switch_ClockGenCtl::reset(AppleMCA2Switch *)
AppleMCA2Switch_ClockGenCtl::reset(AppleMCA2Switch *)
AppleMCA2Switch_ClockGenCtl::resetCheckSAC(AppleMCA2Switch *)
AppleMCA2Switch_ClockGenCtl::resetCheckSAC(AppleMCA2Switch *)
AppleMCA2Switch_ClockGenCtl::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_ClockGenSel::MetaClass::alloc(void)
AppleMCA2Switch_ClockGenSel::select_mclk(uint,uint,uint *,uint *)
AppleMCA2Switch_ClockGenSel::withSwitch(AppleMCA2Switch *)
AppleMCA2Switch_Configurator::configure(uint *,uint *,uint,uint,uint,uint)
AppleMCA2Switch_Configurator::initWithIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_Configurator::initWithIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_Configurator::initWithIdentity(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_Configurator::initWithIdentity(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_Control::assertDisabled(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_Control::enable(bool,uint)
AppleMCA2Switch_Control::initWithIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_Control::initWithIdentity(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_MCAConfig::MetaClass::alloc(void)
AppleMCA2Switch_MCAConfig::configurators_init(void)
AppleMCA2Switch_MCAConfig::configurators_init(void)
AppleMCA2Switch_MCAConfig::controls_init(void)
AppleMCA2Switch_MCAConfig::controls_init(void)
AppleMCA2Switch_MCAConfig::initWithSwitch(AppleMCA2Switch *)
AppleMCA2Switch_MCAConfig::withSwitch(AppleMCA2Switch *)
AppleMCA2Switch_MCAConfig::~AppleMCA2Switch_MCAConfig()
AppleMCA2Switch_Object::object_index(AppleMCA2Switch const*,uint)
AppleMCA2Switch_Object::object_type(AppleMCA2Switch const*,uint,uint *)
AppleMCA2Switch_Object::object_valid(AppleMCA2Switch const*,uint,AppleMCA2Switch_Object::Type *,uint *)
AppleMCA2Switch_RxCfg::setSyncGenSelectOverride(uint,uint,bool)
AppleMCA2Switch_RxCfg::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_RxCfg__setIISConfig_AppleARMIISDevice___AppleARMIISConfig___AppleMCATiming___AppleMCA2__SyncGenConfig___unsigned_int___unsigned_int
AppleMCA2Switch_RxCfg__validIISConfig_AppleARMIISDevice___AppleARMIISConfig___AppleMCATiming___AppleMCA2__SyncGenConfig
AppleMCA2Switch_RxCtl::disable(AppleMCA2Switch *)
AppleMCA2Switch_RxCtl::enable(AppleMCA2Switch *,bool,uint,uint)
AppleMCA2Switch_RxCtl::enablePrepare(AppleMCA2Switch *,uint,AppleMCA2SwitchRegs::ov_t *,uint)
AppleMCA2Switch_RxCtl::reset(AppleMCA2Switch *,uint)
AppleMCA2Switch_RxCtl::reset(AppleMCA2Switch *,uint)
AppleMCA2Switch_RxSel::AppleMCA2Switch_RxSel(void)
AppleMCA2Switch_RxSel::MetaClass::alloc(void)
AppleMCA2Switch_RxSel::select_clk(uint,uint,uint *,uint *)
AppleMCA2Switch_RxSel::select_din(uint,uint,uint *,uint *)
AppleMCA2Switch_RxSel::withSwitch(AppleMCA2Switch *)
AppleMCA2Switch_Selector::select_bool(uint,uint *,uint *,bool,uint,uint,uint)
AppleMCA2Switch_Selector::select_excl(uint,uint,uint *,uint *,uint,bool,uint,uint,uint)
AppleMCA2Switch_Selector::select_share(uint,uint,uint *,uint *,bool,uint,uint,uint)
AppleMCA2Switch_SerDesCfg::initWithIdentity(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_SyncGenCfg::AppleMCA2Switch_SyncGenCfg(void)
AppleMCA2Switch_SyncGenCfg::initWithIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_SyncGenCfg::setBclkSelectOverride(uint,uint,bool)
AppleMCA2Switch_SyncGenCfg::setConfig(uint,uint,uint)
AppleMCA2Switch_SyncGenCfg::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *,uint *,uint *)
AppleMCA2Switch_SyncGenCfg::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleMCA2Switch_SyncGenCfg::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_SyncGenCtl::enable(AppleMCA2Switch *,bool,uint)
AppleMCA2Switch_SyncGenCtl::enablePrepare(AppleMCA2Switch *,uint,AppleMCA2SwitchRegs::ov_t *)
AppleMCA2Switch_SyncGenCtl::reset(AppleMCA2Switch *)
AppleMCA2Switch_SyncGenCtl::reset(AppleMCA2Switch *)
AppleMCA2Switch_SyncGenCtl::resetCheckSAC(AppleMCA2Switch *)
AppleMCA2Switch_SyncGenCtl::resetCheckSAC(AppleMCA2Switch *)
AppleMCA2Switch_SyncGenSel::MetaClass::alloc(void)
AppleMCA2Switch_SyncGenSel::select_clk(uint,uint,uint *,uint *)
AppleMCA2Switch_SyncGenSel::withSwitch(AppleMCA2Switch *)
AppleMCA2Switch_TxCfg::setSyncGenSelectOverride(uint,uint,bool)
AppleMCA2Switch_TxCfg::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_TxCfg__setIISConfig_AppleARMIISDevice___AppleARMIISConfig___AppleMCATiming___AppleMCA2__SyncGenConfig___unsigned_int___unsigned_int
AppleMCA2Switch_TxCfg__validIISConfig_AppleARMIISDevice___AppleARMIISConfig___AppleMCATiming___AppleMCA2__SyncGenConfig
AppleMCA2Switch_TxCtl::AppleMCA2Switch_TxCtl(void)
AppleMCA2Switch_TxCtl::clockReSelect(AppleMCA2Switch *,uint)
AppleMCA2Switch_TxCtl::disable(AppleMCA2Switch *)
AppleMCA2Switch_TxCtl::enable(AppleMCA2Switch *,bool,uint,uint)
AppleMCA2Switch_TxCtl::enablePrepare(AppleMCA2Switch *,uint,AppleMCA2SwitchRegs::ov_t *,uint)
AppleMCA2Switch_TxCtl::reset(AppleMCA2Switch *,uint)
AppleMCA2Switch_TxCtl::reset(AppleMCA2Switch *,uint)
AppleMCA2Switch_TxCtl::withIdentity(AppleMCA2Switch *,uint,uint,uint)
AppleMCA2Switch_TxSel::AppleMCA2Switch_TxSel(void)
AppleMCA2Switch_TxSel::MetaClass::alloc(void)
AppleMCA2Switch_TxSel::withSwitch(AppleMCA2Switch *)
AppleMCA2Switch_i2sCfg::AppleMCA2Switch_i2sCfg(void)
AppleMCA2Switch_i2sCfg::withIdentity(AppleMCA2Switch *,uint,uint)
AppleMCA2Switch_i2sSel::AppleMCA2Switch_i2sSel(void)
AppleMCA2Switch_i2sSel::MetaClass::alloc(void)
AppleMCA2Switch_i2sSel::select_clk(uint,uint,uint *,uint *)
AppleMCA2Switch_i2sSel::select_dout(uint,uint,uint *,uint *)
AppleMCA2Switch_i2sSel::select_output_enable_bclk(uint,uint,uint *,uint *)
AppleMCA2Switch_i2sSel::select_output_enable_dout(uint,uint,uint *,uint *)
AppleMCA2Switch_i2sSel::select_output_enable_lrck(uint,uint,uint *,uint *)
AppleMCA2Switch_i2sSel::withSwitch(AppleMCA2Switch *)
AppleMCA2Tx::initWithController(AppleMCA2Controller *,uint)
AppleMCA2Tx::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *,AppleMCA2::SyncGenConfig *)
AppleMCA2Tx::withController(AppleMCA2Controller *,uint)
AppleMCA::abortIISCommand(uint)
AppleMCA::deferredStart(void *)
AppleMCA::dmaCompleteAction(OSObject *,IODMAEventSource *,IODMACommand *,int,ulong long,ulong long)
AppleMCA::executeIISCommand(AppleARMIISCommand *)
AppleMCA::getClockDomain(AppleARMIISConfig *)
AppleMCA::getFIFODepth(AppleARMIISConfig const*,uint)
AppleMCA::getLatency(AppleARMIISConfig *,uint)
AppleMCA::getLatency(AppleARMIISConfig *,uint,IODMAEventSource *)
AppleMCA::getLatency(AppleARMIISConfig const*,uint,IODMAEventSource *,uint,bool)
AppleMCA::getSafetyOffset(AppleARMIISConfig *,uint)
AppleMCA::getSafetyOffset(AppleARMIISConfig *,uint,IODMAEventSource *)
AppleMCA::getSupportedChannelCounts(AppleARMIISConfig *,uint)
AppleMCA::initDeferredStart(void)
AppleMCA::initExternalPower(IOService *)
AppleMCA::initExternalPowerGated(IOService *)
AppleMCA::initFunctions(IOService *)
AppleMCA::matchingNotificationHandler(void *,IOService *,IONotifier *)
AppleMCA::matchingNotificationHandlerGated(void *,IOService *,IONotifier *)
AppleMCA::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleMCA::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleMCA::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleMCA::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleMCA::publishBelow(IORegistryEntry *)
AppleMCA::setDMAFIFODepth(IODMAEventSource *,ulong long,AppleARMIISConfig *,uint)
AppleMCA::setIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *)
AppleMCA::setIISControllerActive(bool)
AppleMCA::setIISControllerActive_Forced(bool)
AppleMCA::setIISControllerActive_Forced(bool)
AppleMCA::setMCLKEnabled(AppleARMIISConfig *,bool)
AppleMCA::setPowerStateGated(ulong,IOService *)
AppleMCA::setRouteFunctions(void)
AppleMCA::start(IOService *)
AppleMCA::startIISCommand(uint)
AppleMCA::stopIISCommand(uint)
AppleMCA::validDMAConfig(IODMAEventSource *,uint,AppleARMIISConfig *,uint)
AppleMCA::validIISConfig(AppleARMIISDevice *,AppleARMIISConfig *,AppleMCATiming *)
AppleMCCUserClient::MetaClass::alloc(void)
AppleMCCUserClient::clientClose(void)
AppleMCCUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleMCCUserClient::dumpDataStream(MCDataStreamId,dataStreamInfo *)
AppleMCCUserClient::dumpDataStreams(dataStreamInfo *,uint *)
AppleMCCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleMCCUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleMCCUserClient::~AppleMCCUserClient()
AppleMCKAudio::MetaClass::alloc(void)
AppleMCKAudio::_initForPM(IOService *)
AppleMCKAudio::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMCKAudio::start(IOService *)
AppleMCKAudio::stop(IOService *)
AppleMCKAudioFunction::callFunction(void *,void *,void *)
AppleMCKAudioFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleMMIOSerial::initForPM(IOService *)
AppleMMIOSerial::isConsoleDevice(IOService *)
AppleMMIOSerial::probe(IOService *,int *)
AppleMMIOSerial::setPowerState(ulong,IOService *)
AppleMMIOSerial::start(IOService *)
AppleMTRDecompress::DecompressFuse(int,int,ulong long const*,double *,double const**,AppleMTRDecompress::Params *)
AppleMTRDecompress::GetRot0v0t1v1(int,int,int &,int &,int &,double const**,double const**)
AppleMTRDecompress::GetVoltages(int,int,int &,double const**)
AppleMaverickBTM::overrideInitialConfig(void)
AppleMaverickBTM::withParent(AppleBTM *,IOService *)
AppleMemCacheController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMemCacheController::clientNotifyThread(void *)
AppleMemCacheController::clientNotifyThread(void *)
AppleMemCacheController::configurePeriodicTracer(uint,uint)
AppleMemCacheController::configureReport(IOReportChannelList *,uint,void *,void *)
AppleMemCacheController::copyDSIDs(MCPersistence,uint *,uint)
AppleMemCacheController::copyDataStreamInfo(MCDataStreamId,dataStreamInfo *)
AppleMemCacheController::dataCollector(void)
AppleMemCacheController::disableAllDataStreams(void)
AppleMemCacheController::disableDataStream(MCDataStream *)
AppleMemCacheController::enableDataCollection(uint,uint)
AppleMemCacheController::enableDataStream(MCDataStreamInfoObject *,MCDataStream **)
AppleMemCacheController::getDSIDCount(MCPersistence)
AppleMemCacheController::getDataCollectionMemDescriptor(void)
AppleMemCacheController::getMCPolicyMgrFactory(void)
AppleMemCacheController::notifyClients(void *,MCDataStreamId,uint)
AppleMemCacheController::notifyClients(void *,MCDataStreamId,uint)
AppleMemCacheController::periodicTracer(void)
AppleMemCacheController::periodicTracer(void)
AppleMemCacheController::registerClient(MCClientInfo *,MCClient **)
AppleMemCacheController::sendCommandToPMP(MCCommand *,MCCommandQueue *)
AppleMemCacheController::sendCommandToPMP(MCCommand *,MCCommandQueue *)
AppleMemCacheController::setWayClampCount(sysctl_oid *,void *,int,sysctl_req *)
AppleMemCacheController::start(IOService *)
AppleMemCacheController::start(IOService *)
AppleMemCacheController::testMode(bool)
AppleMemCacheController::updateCacheSize(uint,bool)
AppleMemCacheController::updateCacheSize(uint,bool)
AppleMemCacheController::updateReport(IOReportChannelList *,uint,void *,void *)
AppleMemCacheDataSetsFunction::callFunction(void *,void *,void *)
AppleMemCacheEvent::create(MCClient *,MCDataStreamId,uint)
AppleMemCacheEvent::create(MCClient *,MCDataStreamId,uint)
AppleMikeyBusCSMikey::codecEnableMikeyInterrupt(bool)
AppleMikeyBusCSMikey::codecReadReg(CirrusHTDRegister)
AppleMikeyBusCSMikey::codecSetWakeOutput(bool,bool)
AppleMikeyBusCSMikey::codecWriteReg(CirrusHTDRegister,uchar)
AppleMikeyBusCSMikey::handleAttach(void)
AppleMikeyBusCSMikey::handleOpen(IOService *,uint,void *)
AppleMikeyBusCSMikey::handlePowerStageChangeOn(bool)
AppleMikeyBusCSMikey::stop(IOService *)
AppleMikeyReceiver::_configureMikey(void)
AppleMikeyReceiver::_setHeadsetType(OSSymbol const*)
AppleMikeyReceiver::continueMicDetect(void)
AppleMikeyReceiver::disableMicDetect(bool,bool)
AppleMikeyReceiver::getButtonDetect(void)
AppleMikeyReceiver::handleAttach(void)
AppleMikeyReceiver::handleDetachInterrupt(void)
AppleMikeyReceiver::headsetHasButton(void)
AppleMikeyReceiver::mikeyConfigureHeadsetSwitch(uint)
AppleMikeyReceiver::mikeyGetHeadsetSwitchDetectStatus(void)
AppleMikeyReceiver::mikeyGetHeadsetSwitchSlowRampDelay(void)
AppleMikeyReceiver::powerOff(void)
AppleMikeyReceiver::setPowerState(ulong,IOService *)
AppleMikeyReceiver::startMicDetect(void)
AppleMikeyReceiver::stop(IOService *)
AppleMikeyReceiver::systemWillShutdown(uint)
AppleMobileApNonce::_clearNonce(void)
AppleMobileApNonce::_clearNonce(void)
AppleMobileApNonce::_clearNonceFromNVRAM(void)
AppleMobileApNonce::_clearNonceGated(void)
AppleMobileApNonce::_generateNonce(void *,ulong *)
AppleMobileApNonce::_generateNonceHash(ulong long,uchar *)
AppleMobileApNonce::_generateNonceHash(ulong long,uchar *)
AppleMobileApNonce::_readNonce(OSString **)
AppleMobileApNonce::_readNonce(OSString **)
AppleMobileApNonce::_readNonceFromNVRAM(OSString **)
AppleMobileApNonce::_retrieveNonce(ulong long *)
AppleMobileApNonce::_saveNonce(char const*)
AppleMobileApNonce::_saveNonce(char const*)
AppleMobileApNonce::_saveNonceGated(char const*)
AppleMobileApNonce::_saveNonceInNVRAM(char const*)
AppleMobileApNonce::_waitForNVRAMReadable(void)
AppleMobileApNonce::_waitForNVRAMReadable(void)
AppleMobileApNonce::_waitForNVRAMWritable(void)
AppleMobileApNonce::free(void)
AppleMobileApNonce::generateNonce(void *,ulong *)
AppleMobileApNonce::registerService(uint)
AppleMobileApNonce::retrieveNonce(void *,ulong *)
AppleMobileApNonce::start(IOService *)
AppleMobileApNonce::start(IOService *)
AppleMobileApNonceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleMobileApNonceUserClient::start(IOService *)
AppleMobileApNonce__callPlatformFunction_OSSymbol_const___bool__void___void___void___void
AppleMobileFileIntegrity::AMFIEntitlementGetBool(OSEntitlements *,char const*,bool *)
AppleMobileFileIntegrity::AMFIEntitlementGetBool(proc *,char const*,bool *)
AppleMobileFileIntegrity::AMFIEntitlementGetBool(ucred *,char const*,bool *)
AppleMobileFileIntegrity::copyEntitlement(proc *,char const*)
AppleMobileFileIntegrity::copyEntitlement(ucred *,char const*)
AppleMobileFileIntegrity::copyEntitlements(proc *)
AppleMobileFileIntegrity::copySigningIdentifier(ucred *)
AppleMobileFileIntegrity::getEntitlements(ucred *)
AppleMobileFileIntegrity::isCdhashInTrustCache(uchar *,bool)
AppleMobileFileIntegrity::purgeCachedValidationResults(void)
AppleMobileFileIntegrity::start(IOService *)
AppleMobileFileIntegrity::start(IOService *)
AppleMobileFileIntegrity::stop(IOService *)
AppleMobileFileIntegrity::validateSignature(char const*,uchar const*,ulong,int,uint *,uint *,bool,bool,int,uint,char **,ulong *)
AppleMobileFileIntegrityUserClient::clientClose(void)
AppleMobileFileIntegrityUserClient::copyTrustCacheAndManifestFromInputArgument(IOExternalMethodArguments *,void **,ulong long *,void **,ulong long *,void **,ulong long *)
AppleMobileFileIntegrityUserClient::copyTrustCacheFromInputArguments(IOExternalMethodArguments *,void **,ulong long *)
AppleMobileFileIntegrityUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleMobileFileIntegrityUserClient::flushAllValidations(OSObject *,void *,IOExternalMethodArguments *)
AppleMobileFileIntegrityUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleMobileFileIntegrityUserClient::isCdhashInTrustCache(OSObject *,void *,IOExternalMethodArguments *)
AppleMobileFileIntegrityUserClient::loadCompilationServiceCodeDirectoryHash(OSObject *,void *,IOExternalMethodArguments *)
AppleMobileFileIntegrityUserClient::loadTrustCache(OSObject *,void *,IOExternalMethodArguments *)
AppleMobileFileIntegrityUserClient::setDenylist(OSObject *,void *,IOExternalMethodArguments *)
AppleMobileFileIntegrityUserClient::start(IOService *)
AppleMobileFileIntegrityUserClient::validateSignature(OSObject *,void *,IOExternalMethodArguments *)
AppleMobsiTmpSADC::copyEvent(uint,IOHIDEvent *,uint)
AppleMobsiTmpSADC::dispatchToHID(int)
AppleMobsiTmpSADC::free(void)
AppleMobsiTmpSADC::initWithTempSensor(OSString *,uint,uint)
AppleMobsiTmpSADC::withTempSensor(IOService *,OSString *,uint,uint)
AppleMultiFunctionManager::AppleMultiFunctionManager(void)
AppleMultiFunctionManager::close(IOService *,uint)
AppleMultiFunctionManager::close(IOService *,uint)
AppleMultiFunctionManager::collectFaultData(void *,ulong)
AppleMultiFunctionManager::enqueueCommand(uint,ulong long,ulong long,bool)
AppleMultiFunctionManager::flushCommandQueueLocked(uint)
AppleMultiFunctionManager::free(void)
AppleMultiFunctionManager::getWorkLoop(void)
AppleMultiFunctionManager::handleIsOpen(IOService const*)
AppleMultiFunctionManager::handleOpen(IOService *,uint,void *)
AppleMultiFunctionManager::open(IOService *,uint,void *)
AppleMultiFunctionManager::open(IOService *,uint,void *)
AppleMultiFunctionManager::powerOff(void)
AppleMultiFunctionManager::powerOn(void)
AppleMultiFunctionManager::requestPowerOff(void)
AppleMultiFunctionManager::requestPowerOn(void)
AppleMultiFunctionManager::setPowerStateGated(ulong,IOService *)
AppleMultiFunctionManager::stop(IOService *)
AppleMultiFunctionManager::wakeReasonPublished(IOService *)
AppleMultiFunctionManager::~AppleMultiFunctionManager()
AppleMultiFunctionManagerLogger::AppleMultiFunctionManagerLogger(void)
AppleMultiFunctionManagerLogger::collectImmediateFaultData(CCFaultReport *)
AppleMultiFunctionManagerLogger::free(void)
AppleMultiFunctionManagerLogger::induceFault(int,char const*)
AppleMultiFunctionManagerLogger::log(uint,char const*,...)
AppleMultiFunctionManagerLogger::prepareFaultReport(CCFaultReport const*)
AppleMultiFunctionManagerLogger::setConsoleLevel(uint)
AppleMultiFunctionManagerLogger::triggerFaultReport(kAMFMLogCaptureReasons,char const*)
AppleMultiFunctionManagerLogger::triggerFaultReportGated(kAMFMLogCaptureReasons,char const*)
AppleMultiFunctionManagerLogger::~AppleMultiFunctionManagerLogger()
AppleMultiFunctionManager__fn_0x548
AppleMultiFunctionManager__fn_0x560
AppleMultiFunctionManager__fn_0x590
AppleMultiFunctionManager__fn_0x598
AppleMultiFunctionManager__fn_0x5a0
AppleMultiFunctionManager__setPowerState_unsigned_long__IOService
AppleMultiFunctionPlatform::init(IOService *,AppleMultiFunctionManagerLogger *,amfmPCIeErrorCallback *)
AppleMultiFunctionPlatformEmbedded::MetaClass::alloc(void)
AppleMultiFunctionPlatformEmbedded::setDeviceInDeepSleep(bool)
AppleMultiFunctionPlatformEmbedded::setPortEnable(bool)
AppleMultiFunctionPlatformEmbedded::setPowerEnable(bool)
AppleMultiFunctionPlatformEmbedded::~AppleMultiFunctionPlatformEmbedded()
AppleMultitouchCriticalErrorsReporter::fromService(IOService *)
AppleMultitouchCriticalErrorsReporter::report(uint)
AppleMultitouchCriticalErrorsReporter::~AppleMultitouchCriticalErrorsReporter()
AppleMultitouchDevice::_addFramesClient(void)
AppleMultitouchDevice::_cacheDeviceProperties(void)
AppleMultitouchDevice::_deviceGetReportWithLookUp(AMDDeviceReportStruct *,uchar)
AppleMultitouchDevice::_deviceSetReportWithLookUp(AMDDeviceReportStruct *,uchar)
AppleMultitouchDevice::_getFeatureReportInfo(uchar,uchar *,ushort *,uchar)
AppleMultitouchDevice::_handleCriticalErrorsFrame(uchar *,uint)
AppleMultitouchDevice::_handleTouchFrame(uchar *,uint *,AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::_initializeCachedReportInfo(void)
AppleMultitouchDevice::_registerUserClient(AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::_removeFramesClient(void)
AppleMultitouchDevice::_sendLogToUserClients(uchar *,uint)
AppleMultitouchDevice::_setMaxInjectionSize(uint *)
AppleMultitouchDevice::_stop(IOService *)
AppleMultitouchDevice::_unregisterUserClient(AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::addFramesClient(void)
AppleMultitouchDevice::cacheDeviceProperties(void)
AppleMultitouchDevice::checkBridgeStatusMessage(uchar *,uint)
AppleMultitouchDevice::configureReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchDevice::decodeDeviceProperty(uchar,uchar *,uint)
AppleMultitouchDevice::doesClientWantFrames(void)
AppleMultitouchDevice::driverLogString(OSObject *,char const*,...)
AppleMultitouchDevice::driverLogTransaction(OSObject *,uchar *,ushort,uchar *,ushort)
AppleMultitouchDevice::filteredClientsAvailable(void)
AppleMultitouchDevice::free(void)
AppleMultitouchDevice::getPowerState(uchar *)
AppleMultitouchDevice::getReport(AMDDeviceReportStruct *,uchar)
AppleMultitouchDevice::getWorkLoop(void)
AppleMultitouchDevice::handleOffTableEventFromDevice(uint)
AppleMultitouchDevice::handlePointerEventFromDevice(int,int,uint,uint)
AppleMultitouchDevice::handleTouchFrame(uchar *,uint)
AppleMultitouchDevice::hidEventDriverPublished(IOService *)
AppleMultitouchDevice::hidEventDriverTerminated(IOService *)
AppleMultitouchDevice::init(OSDictionary *)
AppleMultitouchDevice::initializeCachedReportInfo(void)
AppleMultitouchDevice::injectFrame(uchar *,uint,AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::maxFrameSize(void)
AppleMultitouchDevice::maxInjectionSize(void)
AppleMultitouchDevice::powerControlSupported(void)
AppleMultitouchDevice::publishHIDProperties(IOService *)
AppleMultitouchDevice::registerUserClient(AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::removeFramesClient(void)
AppleMultitouchDevice::resetDevice(void)
AppleMultitouchDevice::sendLogToUserClients(uchar *,uint)
AppleMultitouchDevice::sendNotificationToUserClients(uint,uint)
AppleMultitouchDevice::serviceNotificationEntry(void *,void *,IOService *,IONotifier *)
AppleMultitouchDevice::setDisablerPresent(bool)
AppleMultitouchDevice::setGetPowerStateHandler(int (*)(uchar *,void *),void *)
AppleMultitouchDevice::setHIDEventDriver(AppleMultitouchEventDriverWrapper *)
AppleMultitouchDevice::setMaxInjectionSize(uint)
AppleMultitouchDevice::setPowerState(uchar)
AppleMultitouchDevice::setPreferences(OSDictionary *)
AppleMultitouchDevice::setProperties(OSObject *)
AppleMultitouchDevice::setReport(AMDDeviceReportStruct *,uchar)
AppleMultitouchDevice::setSetPowerStateHandler(int (*)(uchar,void *),void *)
AppleMultitouchDevice::start(IOService *)
AppleMultitouchDevice::stop(IOService *)
AppleMultitouchDevice::unregisterUserClient(AppleMultitouchDeviceUserClient *)
AppleMultitouchDevice::updateReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchDevice::waitForWorkLoop(void)
AppleMultitouchDevice::willTerminate(IOService *,uint)
AppleMultitouchDeviceUserClient::clientClose(void)
AppleMultitouchDeviceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleMultitouchDeviceUserClient::createLogQueue(void)
AppleMultitouchDeviceUserClient::enqueueData(uchar *,uint)
AppleMultitouchDeviceUserClient::free(void)
AppleMultitouchDeviceUserClient::getReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleMultitouchDeviceUserClient::getTargetAndMethodForIndex(IOService **,uint)
AppleMultitouchDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleMultitouchDeviceUserClient::injectFrame(int)
AppleMultitouchDeviceUserClient::issueDriverRequest(MTDriverRequestStruct *,MTDriverRequestResultStruct *,ulong long,ulong long *)
AppleMultitouchDeviceUserClient::recacheProperties(void)
AppleMultitouchDeviceUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleMultitouchDeviceUserClient::sendNotification(MultitouchDriverNotification,uint)
AppleMultitouchDeviceUserClient::setReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleMultitouchDeviceUserClient::setSendsFrames(bool)
AppleMultitouchDeviceUserClient::setSendsLogs(bool)
AppleMultitouchDeviceUserClient::start(IOService *)
AppleMultitouchDeviceUserClient::stop(IOService *)
AppleMultitouchEventDriverV2Wrapper::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
AppleMultitouchEventDriverV2Wrapper::dispatchRelativePointerEvent(ulong long,int,int,uint,uint)
AppleMultitouchEventDriverV2Wrapper::dispatchScrollWheelEvent(ulong long,int,int,int,uint)
AppleMultitouchEventDriverV2Wrapper::free(void)
AppleMultitouchEventDriverV2Wrapper::setSystemProperties(OSDictionary *)
AppleMultitouchEventDriverV2Wrapper::withEventDriverV2(AppleMultitouchHIDEventDriverV2 *)
AppleMultitouchEventDriverWrapper::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
AppleMultitouchEventDriverWrapper::dispatchRelativePointerEvent(ulong long,int,int,uint,uint)
AppleMultitouchEventDriverWrapper::dispatchScrollWheelEvent(ulong long,int,int,int,uint)
AppleMultitouchEventDriverWrapper::free(void)
AppleMultitouchEventDriverWrapper::withEventDriver(AppleMultitouchHIDEventDriver *)
AppleMultitouchHIDEventDriver::setSystemProperties(OSDictionary *)
AppleMultitouchHIDEventDriver::start(IOService *)
AppleMultitouchHIDEventDriverV2::AppleMultitouchHIDEventDriverV2(OSMetaClass const*)
AppleMultitouchHIDEventDriverV2::MetaClass::alloc(void)
AppleMultitouchHIDEventDriverV2::asyncTaskAction(void)
AppleMultitouchHIDEventDriverV2::buildMTDevice(void)
AppleMultitouchHIDEventDriverV2::checkMTDeviceAvailable(uchar *,uint)
AppleMultitouchHIDEventDriverV2::didTerminate(IOService *,uint,bool *)
AppleMultitouchHIDEventDriverV2::enableMultitouchEvents(bool)
AppleMultitouchHIDEventDriverV2::free(void)
AppleMultitouchHIDEventDriverV2::getMultitouchReport(uchar,uchar *,uint *,uchar)
AppleMultitouchHIDEventDriverV2::getMultitouchReportInfo(uchar,uchar *,uint *,int)
AppleMultitouchHIDEventDriverV2::getWorkLoop(void)
AppleMultitouchHIDEventDriverV2::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleMultitouchHIDEventDriverV2::handleStart(IOService *)
AppleMultitouchHIDEventDriverV2::init(OSDictionary *)
AppleMultitouchHIDEventDriverV2::newMultitouchProperties(void)
AppleMultitouchHIDEventDriverV2::setMTDeviceLeashedState(uchar)
AppleMultitouchHIDEventDriverV2::setMultitouchReport(uchar,uchar *,uint,uchar)
AppleMultitouchHIDEventDriverV2::simpleGetReport(uchar,IOBufferMemoryDescriptor *,uint *)
AppleMultitouchHIDEventDriverV2::simpleSetReport(uchar,IOBufferMemoryDescriptor *,uint)
AppleMultitouchHIDEventDriverV2::start(IOService *)
AppleMultitouchHIDEventDriverV2::terminateMTDevice(void)
AppleMultitouchHIDService::_systemPowerChangeHandler(uint,IOService *,void *,ulong)
AppleMultitouchHIDService::didTerminate(IOService *,uint,bool *)
AppleMultitouchHIDService::enableMultitouchEvents(bool)
AppleMultitouchHIDService::findTransportInterface(void)
AppleMultitouchHIDService::free(void)
AppleMultitouchHIDService::getMultitouchReport(uchar,uchar *,uint *,uchar)
AppleMultitouchHIDService::getMultitouchReportInfo(uchar,uchar *,uint *,int)
AppleMultitouchHIDService::handleBridgeMessage(uchar *,uint)
AppleMultitouchHIDService::handleGetPowerState(uchar *)
AppleMultitouchHIDService::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleMultitouchHIDService::handleResetDevice(void)
AppleMultitouchHIDService::handleSetPowerState(uchar)
AppleMultitouchHIDService::init(OSDictionary *)
AppleMultitouchHIDService::noiseAvoidanceChangeNotification(void *,void *,uint,IOService *,void *,ulong)
AppleMultitouchHIDService::notifyClients(OSNumber *)
AppleMultitouchHIDService::notifyClientsAction(OSNumber *)
AppleMultitouchHIDService::setMultitouchReport(uchar,uchar *,uint,uchar)
AppleMultitouchHIDService::simpleGetReport(uchar,IOBufferMemoryDescriptor *,uint *)
AppleMultitouchHIDService::simpleSetReport(uchar,IOBufferMemoryDescriptor *,uint)
AppleMultitouchHIDService::start(IOService *)
AppleMultitouchHIDService::stop(IOService *)
AppleMultitouchHIDService::systemPowerChangeHandler(void *,void *,uint,IOService *,void *,ulong)
AppleMultitouchHIDService::updateNoiseAvoidanceAsync(void)
AppleMultitouchHIDService::updateNoiseAvoidanceGated(void)
AppleMultitouchHIDService::updateNoiseAvoidanceThread(thread_call *)
AppleMultitouchInputHIDEventDriver::AppleMultitouchInputHIDEventDriver(OSMetaClass const*)
AppleMultitouchInputHIDEventDriver::AppleMultitouchInputHIDEventDriver(void)
AppleMultitouchInputHIDEventDriver::MetaClass::alloc(void)
AppleMultitouchInputHIDEventDriver::clearButtonStateForUnleash(void)
AppleMultitouchInputHIDEventDriver::enableMultitouchEvents(bool)
AppleMultitouchInputHIDEventDriver::enableMultitouchEventsGated(bool)
AppleMultitouchInputHIDEventDriver::free(void)
AppleMultitouchInputHIDEventDriver::handleStart(IOService *)
AppleMultitouchInputHIDEventDriver::init(OSDictionary *)
AppleMultitouchInputHIDEventDriver::multitouchDeviceDidStart(void)
AppleMultitouchInputHIDEventDriver::scheduleUnleash(void)
AppleMultitouchInputHIDEventDriver::setMultitouchPreferences(OSDictionary *)
AppleMultitouchInputHIDEventDriver::setProperties(OSObject *)
AppleMultitouchInputHIDEventDriver::stop(IOService *)
AppleMultitouchInputHIDEventDriver::systemPowerChangeHandler(void *,uint,IOService *,void *,ulong)
AppleMultitouchInputHIDEventDriver::unleashDeviceGated(void)
AppleMultitouchInputHIDEventDriver::unleashThreadEnter(void)
AppleMultitouchInputHIDEventDriver::~AppleMultitouchInputHIDEventDriver()
AppleMultitouchMouseHIDEventDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleMultitouchMouseHIDEventDriver::init(OSDictionary *)
AppleMultitouchMouseHIDEventDriver::setMousePreferences(OSDictionary *)
AppleMultitouchMouseHIDEventDriver::setMultitouchPreferences(OSDictionary *)
AppleMultitouchMouseHIDEventDriver::setSystemProperties(OSDictionary *)
AppleMultitouchMouseHIDEventDriver::start(IOService *)
AppleMultitouchMouseHIDEventDriver::syncMousePreferences(void)
AppleMultitouchMouseHIDEventDriver::syncMousePreferencesGated(void)
AppleMultitouchN1SPI::MetaClass::alloc(void)
AppleMultitouchN1SPI::perform_REQ_WAKEUP(void)
AppleMultitouchN1SPI::perform_SPI_WAKE_COMMAND(void)
AppleMultitouchN1SPI::start(IOService *)
AppleMultitouchN1SPI::~AppleMultitouchN1SPI()
AppleMultitouchPowerStats::_parseDescriptor(void)
AppleMultitouchPowerStats::_readDescriptor(void)
AppleMultitouchPowerStats::fromDevice(AppleMultitouchDevice *)
AppleMultitouchPowerStats::updateReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchPowerStats::updateReport(void)
AppleMultitouchPowerStats::~AppleMultitouchPowerStats()
AppleMultitouchSPI::CacheAllDeviceProperties(void)
AppleMultitouchSPI::MetaClass::alloc(void)
AppleMultitouchSPI::_cacheButtonCount(void)
AppleMultitouchSPI::_cacheDeviceBasicInfo(void)
AppleMultitouchSPI::_cacheFamilyID(void)
AppleMultitouchSPI::_cacheInterfaceVersion(void)
AppleMultitouchSPI::_cacheMultitouchID(void)
AppleMultitouchSPI::_cacheSensorRegionDescriptor(void)
AppleMultitouchSPI::_cacheSensorRegionParams(void)
AppleMultitouchSPI::_cacheSensorSurfaceDimensions(void)
AppleMultitouchSPI::_cacheSerialNumber(void)
AppleMultitouchSPI::bootloadDevice(void)
AppleMultitouchSPI::bootloadDeviceGated(void)
AppleMultitouchSPI::bootloadTimerFiredHandler(OSObject *,IOTimerEventSource *)
AppleMultitouchSPI::cacheCalibrationConfig(OSArray *)
AppleMultitouchSPI::callPowerFunction(uint)
AppleMultitouchSPI::clearInterruptWithResultRead(void)
AppleMultitouchSPI::configureReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchSPI::configureSPIInterface(void)
AppleMultitouchSPI::copyOrbStats(void)
AppleMultitouchSPI::copyReportData(uchar,AppleMultitouchSPI::FeatureReportOptions const*,OSData **)
AppleMultitouchSPI::createPowerStats(void)
AppleMultitouchSPI::deviceGetReport(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchSPI::deviceGetReportGated(MTDeviceReportStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchSPI::deviceGetReportInfo(uchar,MTReportInfoStruct *,uchar,bool)
AppleMultitouchSPI::deviceGetReportInfoGated(uchar,MTReportInfoStruct *,uchar,bool)
AppleMultitouchSPI::deviceGetResultLength(ushort *,uchar)
AppleMultitouchSPI::deviceGetResultLengthGated(ushort *,uchar)
AppleMultitouchSPI::deviceIsInBootloader(uchar)
AppleMultitouchSPI::deviceIsInBootloaderGated(uchar)
AppleMultitouchSPI::deviceIsPoweredAndReady(void)
AppleMultitouchSPI::deviceIsResponsive(void)
AppleMultitouchSPI::deviceReadResultData(ushort,uchar)
AppleMultitouchSPI::deviceReadResultDataGated(ushort,uchar)
AppleMultitouchSPI::deviceSetReport(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchSPI::deviceSetReportGated(MTDeviceReportStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchSPI::doomTimerFiredHandler(OSObject *,IOTimerEventSource *)
AppleMultitouchSPI::driverLogString(uchar,uchar,uchar,char const*,...)
AppleMultitouchSPI::driverLogTransaction(uchar,uchar,uchar,uchar *,ushort,uchar *,ushort)
AppleMultitouchSPI::finishStarting(void)
AppleMultitouchSPI::free(void)
AppleMultitouchSPI::generateHashForSPINubProperty(OSString *)
AppleMultitouchSPI::getBootloader(void)
AppleMultitouchSPI::getSPIInterByteDelay(uint *)
AppleMultitouchSPI::getSPIPeriod(uint *)
AppleMultitouchSPI::getWorkLoop(void)
AppleMultitouchSPI::handleCriticalErrorsFrame(uchar *,uint)
AppleMultitouchSPI::handleExternalMessage(uchar *,uint)
AppleMultitouchSPI::handleFrame(uchar *,uint)
AppleMultitouchSPI::initializeCachedReportInfo(void)
AppleMultitouchSPI::initializeTransactionBuffers(void)
AppleMultitouchSPI::initializeUserClientRegistrations(void)
AppleMultitouchSPI::interruptOccurred(OSObject *,IOInterruptEventSource *,int)
AppleMultitouchSPI::killDevice(MTRequestErrorStatsStruct *,char const*,...)
AppleMultitouchSPI::messagePowerChildren(uint)
AppleMultitouchSPI::messagePowerChildrenGated(uint)
AppleMultitouchSPI::popSPIConfig(void)
AppleMultitouchSPI::powerControlSupported(void)
AppleMultitouchSPI::powerWasDisabled(void)
AppleMultitouchSPI::powerWasEnabled(void)
AppleMultitouchSPI::powerWillDisable(void)
AppleMultitouchSPI::publishIOReportProxBaseline(IOReportChannelList *,uint,void *,void *)
AppleMultitouchSPI::pushSPIConfig(void)
AppleMultitouchSPI::readOneFrameOfData(MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchSPI::readOneFrameOfDataGated(bool,uchar)
AppleMultitouchSPI::registerForInterrupts(void)
AppleMultitouchSPI::registerForPowerChildNotifications(void)
AppleMultitouchSPI::registerPowerChild(IOService *)
AppleMultitouchSPI::registerPowerChildGated(IOService *)
AppleMultitouchSPI::registerUserClientForModes(AppleMultitouchSPIUserClient *,MTUCRegistrationModes)
AppleMultitouchSPI::removeDynamicCalEntry(OSDictionary *,OSDictionary *,OSString *)
AppleMultitouchSPI::removeInvalidDynamicCal(OSDictionary *,OSDictionary *)
AppleMultitouchSPI::resetDevice(bool)
AppleMultitouchSPI::resetDeviceGated(bool)
AppleMultitouchSPI::scheduleBootloading(uint)
AppleMultitouchSPI::scheduleBootloadingGated(uint)
AppleMultitouchSPI::scheduleDoomClock(void)
AppleMultitouchSPI::sendFrameToRegisteredUserClients(uchar *,uint)
AppleMultitouchSPI::sendLogToRegisteredLoggingUserClients(uchar *,uint)
AppleMultitouchSPI::sendNotificationToRegisteredUserClients(MultitouchDriverNotification,uint)
AppleMultitouchSPI::setDefaultReports(void)
AppleMultitouchSPI::setDeviceIsBootloaded(bool)
AppleMultitouchSPI::setInterruptsEnabled(bool)
AppleMultitouchSPI::setPowerEnabled(bool,bool)
AppleMultitouchSPI::setPowerEnabledGated(bool,bool)
AppleMultitouchSPI::setPropertyForDynamicCalEntry(OSString *,OSString *,OSString *,OSData *,OSString *,OSData *)
AppleMultitouchSPI::setSPIInterByteDelay(uint)
AppleMultitouchSPI::setSPIPeriod(uint)
AppleMultitouchSPI::start(IOService *)
AppleMultitouchSPI::stop(IOService *)
AppleMultitouchSPI::unregisterForInterrupts(void)
AppleMultitouchSPI::unregisterForPowerChildNotifications(void)
AppleMultitouchSPI::unregisterPowerChild(IOService *)
AppleMultitouchSPI::unregisterPowerChildGated(IOService *)
AppleMultitouchSPI::unregisterUserClientForModes(AppleMultitouchSPIUserClient *,MTUCRegistrationModes)
AppleMultitouchSPI::unschedulePendingBootloading(void)
AppleMultitouchSPI::unschedulePendingDoomClock(void)
AppleMultitouchSPI::updateAndPublishIOReportPowerStats(IOReportChannelList *,uint *,void *,void *)
AppleMultitouchSPI::updateDevicePowerTimes(bool,bool)
AppleMultitouchSPI::updateDynamicCalData(OSDictionary *,OSDictionary *)
AppleMultitouchSPI::updateIOReportPowerStats(void)
AppleMultitouchSPI::updatePowerStatistics(void)
AppleMultitouchSPI::updateProxBaseline(void)
AppleMultitouchSPI::updateReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchSPI::~AppleMultitouchSPI()
AppleMultitouchSPIPowerStats::AppleMultitouchSPIPowerStats(IOService *,OSData *)
AppleMultitouchSPIPowerStats::_createReporters(void)
AppleMultitouchSPIPowerStats::_parseDescriptor(void)
AppleMultitouchSPIPowerStats::fromService(IOService *,OSData *)
AppleMultitouchSPIPowerStats::updateWithPowerStatsData(OSData *)
AppleMultitouchSPIPowerStats::~AppleMultitouchSPIPowerStats()
AppleMultitouchSPIUserClient::clientClose(void)
AppleMultitouchSPIUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleMultitouchSPIUserClient::createLogQueue(void)
AppleMultitouchSPIUserClient::enqueueData(uchar *,uint)
AppleMultitouchSPIUserClient::enqueueLog(uchar *,uint)
AppleMultitouchSPIUserClient::getReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleMultitouchSPIUserClient::getTargetAndMethodForIndex(IOService **,uint)
AppleMultitouchSPIUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleMultitouchSPIUserClient::issueDriverRequest(MTDriverRequestStruct *,MTDriverRequestResultStruct *,ulong long,ulong long *)
AppleMultitouchSPIUserClient::registerNotificationPort(ipc_port *,uint,uint)
AppleMultitouchSPIUserClient::sendNotification(MultitouchDriverNotification,uint)
AppleMultitouchSPIUserClient::setProperties(OSObject *)
AppleMultitouchSPIUserClient::setPropertiesGated(OSObject *)
AppleMultitouchSPIUserClient::setReport(MTDeviceReportStruct *,MTDeviceReportStruct *,ulong long,ulong long *)
AppleMultitouchSPIUserClient::setSendsFrames(bool)
AppleMultitouchSPIUserClient::setSendsLogs(bool)
AppleMultitouchSPIUserClient::start(IOService *)
AppleMultitouchSPIUserClient::stop(IOService *)
AppleMultitouchTimestampSync::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleMultitouchTimestampSync::free(void)
AppleMultitouchTimestampSync::getLastSync(ulong long *,ushort *)
AppleMultitouchTimestampSync::init(OSDictionary *)
AppleMultitouchTimestampSync::lock(void)
AppleMultitouchTimestampSync::resetGated(uint *,uint *,uint *)
AppleMultitouchTimestampSync::setConfig(OSDictionary *)
AppleMultitouchTimestampSync::setPowerState(ulong,IOService *)
AppleMultitouchTimestampSync::setPowerStateGated(ulong *)
AppleMultitouchTimestampSync::start(IOService *)
AppleMultitouchTimestampSync::stop(IOService *)
AppleMultitouchTimestampSync::timerAction(void)
AppleMultitouchTimestampSync::unlock(void)
AppleMultitouchTimestampSyncLock::callFunction(void *,void *,void *)
AppleMultitouchTimestampSyncLock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleMultitouchTimestampSyncUC::initWithTask(task *,void *,uint,OSDictionary *)
AppleMultitouchTimestampSyncUC::setProperties(OSObject *)
AppleMultitouchTimestampSyncUC::start(IOService *)
AppleMultitouchTimestampSyncUC::stop(IOService *)
AppleMultitouchTrackpadHIDEventDriver::CheckOtherMouseEntry(OSObject *,void *,IOService *,IONotifier *)
AppleMultitouchTrackpadHIDEventDriver::MetaClass::alloc(void)
AppleMultitouchTrackpadHIDEventDriver::checkOtherMouse(void)
AppleMultitouchTrackpadHIDEventDriver::free(void)
AppleMultitouchTrackpadHIDEventDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleMultitouchTrackpadHIDEventDriver::init(OSDictionary *)
AppleMultitouchTrackpadHIDEventDriver::isValidPointingDevice(IOHIDDevice *)
AppleMultitouchTrackpadHIDEventDriver::multitouchDeviceDidStart(void)
AppleMultitouchTrackpadHIDEventDriver::setBuiltinTrackpadDisablingMouseAttached(bool)
AppleMultitouchTrackpadHIDEventDriver::setBuiltinTrackpadDisablingMouseKeysEnabled(bool)
AppleMultitouchTrackpadHIDEventDriver::setSystemProperties(OSDictionary *)
AppleMultitouchTrackpadHIDEventDriver::start(IOService *)
AppleMultitouchTrackpadHIDEventDriver::stop(IOService *)
AppleMultitouchTrackpadHIDEventDriver::~AppleMultitouchTrackpadHIDEventDriver()
AppleMultitouchZ2SPI::CacheAllDeviceProperties(void)
AppleMultitouchZ2SPI::MetaClass::alloc(void)
AppleMultitouchZ2SPI::_cacheInterfaceVersion(void)
AppleMultitouchZ2SPI::_handlePowerStateChange(ulong)
AppleMultitouchZ2SPI::_initForPM(IOService *)
AppleMultitouchZ2SPI::bootloadDevice(void)
AppleMultitouchZ2SPI::bootloadSchedulingDelayAfterReset(void)
AppleMultitouchZ2SPI::callPowerFunction(uint)
AppleMultitouchZ2SPI::callResetFunction(bool)
AppleMultitouchZ2SPI::clockSetEnabled(bool)
AppleMultitouchZ2SPI::configureReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchZ2SPI::configureSPIInterface(void)
AppleMultitouchZ2SPI::csSetEnabled(bool)
AppleMultitouchZ2SPI::deviceGetReport(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchZ2SPI::deviceGetReportInfo(uchar,MTReportInfoStruct *,uchar,bool)
AppleMultitouchZ2SPI::deviceGetReportLong(ushort,MTDeviceReportStruct *,MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchZ2SPI::deviceGetReportShort(ushort,MTDeviceReportStruct *,MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchZ2SPI::deviceGetResultLength(ushort *,uchar)
AppleMultitouchZ2SPI::deviceIsInHBPP(void)
AppleMultitouchZ2SPI::deviceIsPoweredAndReady(void)
AppleMultitouchZ2SPI::deviceReadResultData(ushort,uchar)
AppleMultitouchZ2SPI::deviceSetReport(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,AppleMultitouchSPI::FeatureReportOptions const*,uchar)
AppleMultitouchZ2SPI::deviceSetReportLong(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchZ2SPI::deviceSetReportShort(MTDeviceReportStruct *,MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchZ2SPI::displaySyncSetEnabled(bool)
AppleMultitouchZ2SPI::downloadModeSetEnabled(bool)
AppleMultitouchZ2SPI::finishStarting(void)
AppleMultitouchZ2SPI::getCMDStatus(AppleMultitouchZ2SPI::CommandStatus *)
AppleMultitouchZ2SPI::handlePowerStateChangeGated(ulong)
AppleMultitouchZ2SPI::initializeTransactionBuffers(void)
AppleMultitouchZ2SPI::issueDummyTransfer(void)
AppleMultitouchZ2SPI::minResetInterval(void)
AppleMultitouchZ2SPI::perform_HBPP_ATN_ACK(ushort *)
AppleMultitouchZ2SPI::perform_HBPP_ATN_ACK_MemRead(uint *)
AppleMultitouchZ2SPI::powerWasEnabled(void)
AppleMultitouchZ2SPI::powerWillDisable(void)
AppleMultitouchZ2SPI::readOneFrameOfData(MTRequestErrorStatsStruct *,bool,uchar)
AppleMultitouchZ2SPI::registerReadValue(uint)
AppleMultitouchZ2SPI::registerWriteValue(uint,uint,uint)
AppleMultitouchZ2SPI::resetDevice(bool)
AppleMultitouchZ2SPI::resetLineSetAsserted(bool)
AppleMultitouchZ2SPI::setPowerState(ulong,IOService *)
AppleMultitouchZ2SPI::start(IOService *)
AppleMultitouchZ2SPI::stop(IOService *)
AppleMultitouchZ2SPI::systemWillShutdown(uint)
AppleMultitouchZ2SPI::updateReport(IOReportChannelList *,uint,void *,void *)
AppleMultitouchZ2SPI::updateStatus(MTDeviceReportStruct *,AppleMultitouchZ2SPI::CommandStatus *,bool)
AppleMultitouchZ2SPI::~AppleMultitouchZ2SPI()
AppleMxWrap::_enableOutbox(bool)
AppleMxWrap::_getInboxEmpty(void)
AppleMxWrap::_getInboxFull(void)
AppleMxWrap::_getKICInboxEnabled(void)
AppleMxWrap::_getOutboxEmpty(void)
AppleMxWrap::_outboxHandler(IOInterruptEventSource *)
AppleMxWrap::getMailboxBulk(void *,uint *)
AppleMxWrap::getMailboxBulk(void *,uint *)
AppleMxWrap::renderMailboxDebugStatus(char *,ulong)
AppleNVMeBuffer::CheckForIOMMU(void)
AppleNVMeBuffer::Create(uint,uint,IOMapper *)
AppleNVMeBuffer::GetVirtualAddress(void)
AppleNVMeBuffer::Init(uint,uint,IOMapper *)
AppleNVMeBuffer::free(void)
AppleNVMeController::AddReportingChannels(void)
AppleNVMeController::AllocateLoggerBuffers(void)
AppleNVMeController::AllocateResources(void)
AppleNVMeController::AllocateTunnelBuffer(uint)
AppleNVMeController::ClampLowPowerState(void)
AppleNVMeController::CreateHousekeepingTimerEventSource(void)
AppleNVMeController::CreateHousekeepingTimerEventSource(void)
AppleNVMeController::CreateLowPowerTimerEventSource(void)
AppleNVMeController::CreateLowPowerTimerEventSource(void)
AppleNVMeController::DestroyHousekeepingTimerEventSource(void)
AppleNVMeController::DisableHousekeepingServices(void)
AppleNVMeController::EnableDeepIdleSupport(void)
AppleNVMeController::EnableLPSRSupportDuringS3S4(void)
AppleNVMeController::EnterSelfRefresh(bool)
AppleNVMeController::ExitLowPowerMode(void)
AppleNVMeController::ExitSelfRefresh(bool)
AppleNVMeController::ForceAssert(uint)
AppleNVMeController::GetNANDFragmentationInfo(uint *)
AppleNVMeController::GetNANDInfo(ulong long *)
AppleNVMeController::HandleControllerPowerOff(void)
AppleNVMeController::HandleControllerPowerOff(void)
AppleNVMeController::HousekeepingTimerEvent(void)
AppleNVMeController::HousekeepingTimerEvent(void)
AppleNVMeController::InitializeController(void)
AppleNVMeController::InitializeNVMe(bool)
AppleNVMeController::InitializePowerManagement(void)
AppleNVMeController::IsBFHRequired(void)
AppleNVMeController::LowPowerTimerEvent(void)
AppleNVMeController::MetaClass::alloc(void)
AppleNVMeController::PerformBFH(void *,uint)
AppleNVMeController::ProcessIdentifyData(NVMeIdentifyControllerStruct *)
AppleNVMeController::ProcessTunnelCommand(AppleNVMeRequest *,AppleNVMeBuffer *,AppleNVMeBuffer *)
AppleNVMeController::ReleaseResources(void)
AppleNVMeController::ReportPowerState(void)
AppleNVMeController::RetrieveLPSRCounter(void)
AppleNVMeController::SendShutdownNotification(bool)
AppleNVMeController::SetFatalErrorString(char *,uint)
AppleNVMeController::SetLPSRCount(uint)
AppleNVMeController::SetLPSRTimeout(void)
AppleNVMeController::SetLoggerProperties(void)
AppleNVMeController::SetModeselRegister(uint)
AppleNVMeController::SetNANDIOLog(void)
AppleNVMeController::SetNVMeProperties(void)
AppleNVMeController::SetupLoggerCore(uchar,ulong long,uint)
AppleNVMeController::SetupLoggerCores(void)
AppleNVMeController::ShouldDoLowPowerTransitionInSx(void)
AppleNVMeController::StartHousekeepingTimer(void)
AppleNVMeController::StartHousekeepingTimer(void)
AppleNVMeController::ThreadEntry(void)
AppleNVMeController::ThreadEntry(void)
AppleNVMeController::UpdateMspBfhParams(void *,uint)
AppleNVMeController::UpdateTime(ulong *)
AppleNVMeController::free(void)
AppleNVMeController::performNVMeShutdownTasks(void)
AppleNVMeController::performNVMeShutdownTasks(void)
AppleNVMeController::setAggressiveness(ulong,ulong)
AppleNVMeController::setProperties(OSObject *)
AppleNVMeController::~AppleNVMeController()
AppleNVMeEAN::Create(uint,uint)
AppleNVMeEAN::StartDevice(IOService *)
AppleNVMeEAN::addImage(uint,IOMemoryDescriptor *,uint,uint)
AppleNVMeEAN::eanErase(uint)
AppleNVMeEAN::eanFormat(void)
AppleNVMeEAN::eanGetSize(uint)
AppleNVMeEAN::eanGetUpdateCount(uint)
AppleNVMeEAN::eanRead(uint,IOMemoryDescriptor *,uint)
AppleNVMeEAN::eanSwap(uint,uint)
AppleNVMeEAN::eanWrite(uint,IOMemoryDescriptor *,uint)
AppleNVMeEAN::eraseImage(uint)
AppleNVMeEAN::eraseImage(uint)
AppleNVMeEAN::free(void)
AppleNVMeEAN::initWithOptions(uint,uint)
AppleNVMeEAN::isEanFormatted(void)
AppleNVMeEAN::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleNVMeEAN::printHeader(uchar *)
AppleNVMeEAN::readHeader(void)
AppleNVMeEAN::updateHeaderFields(void)
AppleNVMeEAN::updateImage(uint,uint,IOMemoryDescriptor *,uint)
AppleNVMeEAN::verifyHeaderCRC(void)
AppleNVMeEAN::verifyImages(uchar *,uint,uint,uint)
AppleNVMeEAN::writeHeader(void)
AppleNVMeEANUC::CreateRequestBuffer(ulong long,ulong long,uint)
AppleNVMeEANUC::HandleTerminate(IOService *)
AppleNVMeEANUC::clientClose(void)
AppleNVMeEANUC::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleNVMeEANUC::initWithTask(task *,void *,uint,OSDictionary *)
AppleNVMeEANUC::start(IOService *)
AppleNVMeNamespaceDevice::Create(uint,uint)
AppleNVMeNamespaceDevice::GetDeviceProperties(void)
AppleNVMeNamespaceDevice::SetNVMeProperties(void)
AppleNVMeNamespaceDevice::StartDevice(IOService *)
AppleNVMeNamespaceDevice::free(void)
AppleNVMeNamespaceDevice::getBlockCount(ulong long *)
AppleNVMeNamespaceDevice::getBlockSize(ulong long *)
AppleNVMeNamespaceDevice::handleClose(IOService *,uint)
AppleNVMeNamespaceDevice::handleIsOpen(IOService const*)
AppleNVMeNamespaceDevice::handleOpen(IOService *,uint,void *)
AppleNVMeNamespaceDevice::initWithOptions(uint,uint)
AppleNVMeNamespaceDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleNVMeNamespaceDevice::read(IOMemoryDescriptor *,ulong long,ulong long)
AppleNVMeNamespaceDevice::readBlocks(ulong long,IOMemoryDescriptor *,ulong long)
AppleNVMeNamespaceDevice::start(IOService *)
AppleNVMeNamespaceDevice::unmap(ulong long,ulong long)
AppleNVMeNamespaceDevice::unmapBlocks(ulong long,ulong long)
AppleNVMeNamespaceDevice::write(IOMemoryDescriptor *,ulong long,ulong long)
AppleNVMeNamespaceDevice::writeBlocks(ulong long,IOMemoryDescriptor *,ulong long)
AppleNVMeNamespaceUC::CreateRequestBuffer(ulong long,ulong long,uint)
AppleNVMeNamespaceUC::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleNVMeNamespaceUC::initWithTask(task *,void *,uint,OSDictionary *)
AppleNVMeNamespaceUC::start(IOService *)
AppleNVMeRequest::AllocatePRPBuffer(uint,uint,NVMeBufferAllocator *,IOMapper *)
AppleNVMeRequest::BuildCommandAsyncEventRequest(void)
AppleNVMeRequest::BuildCommandBFHImageDownload(uint,uint,void *)
AppleNVMeRequest::BuildCommandCreateCQ(ulong long,ushort,ushort,ushort)
AppleNVMeRequest::BuildCommandCreateNamespaces(uint)
AppleNVMeRequest::BuildCommandCreateSQ(ulong long,ushort,ushort,ushort,uchar)
AppleNVMeRequest::BuildCommandDeallocate(uint,uchar)
AppleNVMeRequest::BuildCommandDebugServiceRead(uint)
AppleNVMeRequest::BuildCommandDebugServiceWrite(uint,uint)
AppleNVMeRequest::BuildCommandDeleteCQ(ushort)
AppleNVMeRequest::BuildCommandDeleteSQ(ushort)
AppleNVMeRequest::BuildCommandFirmwareActivate(uchar,uchar)
AppleNVMeRequest::BuildCommandFirmwareImageDownload(uint,uint)
AppleNVMeRequest::BuildCommandFlush(uint,uint)
AppleNVMeRequest::BuildCommandGetFeatures(uchar)
AppleNVMeRequest::BuildCommandGetLogPage(uchar,ushort)
AppleNVMeRequest::BuildCommandIdentify(bool,uint)
AppleNVMeRequest::BuildCommandIdentifyStorageDevice(uint)
AppleNVMeRequest::BuildCommandLoggerConfigStart(uchar,bool,ulong long,uint)
AppleNVMeRequest::BuildCommandRead(uint,ulong long,ulong long,uchar,uchar,uchar)
AppleNVMeRequest::BuildCommandReadDebugLog(ushort,bool,ushort,uint,uint)
AppleNVMeRequest::BuildCommandReadDebugLogV2(ushort,bool,ushort,uint,uint)
AppleNVMeRequest::BuildCommandReadStruct(NVMeRWCommand *)
AppleNVMeRequest::BuildCommandReprioritize(uint,ulong long,uint,uint)
AppleNVMeRequest::BuildCommandScheduleBGTask(void)
AppleNVMeRequest::BuildCommandSetHostFWSize(uint)
AppleNVMeRequest::BuildCommandSetNumQueues(ushort,ushort)
AppleNVMeRequest::BuildCommandSetPowerBudgetIndex(uint)
AppleNVMeRequest::BuildCommandSetVolatileWriteCache(bool)
AppleNVMeRequest::BuildCommandTunnel(uchar,ulong long,ulong long,uint)
AppleNVMeRequest::BuildCommandUpdateBFHParams(uint)
AppleNVMeRequest::BuildCommandWrite(uint,ulong long,ulong long,uchar,uchar,uchar,uchar)
AppleNVMeRequest::BuildCommandWriteStruct(NVMeRWCommand *)
AppleNVMeRequest::BuildSegmentsFast(IODMACommand::Segment64 *)
AppleNVMeRequest::BuildSegmentsLinearPRP(IODMACommand::Segment64 *)
AppleNVMeRequest::BuildSegmentsSlow(IODMACommand::Segment64 *)
AppleNVMeRequest::Create(uint,ushort,ushort,void *,ulong long,bool,NVMeBufferAllocator *,bool,bool,IOMapper *)
AppleNVMeRequest::GenerateIOVMSegments(ulong long,ulong long)
AppleNVMeRequest::GenerateIOVMSegmentsInternal(void)
AppleNVMeRequest::Init(void *,ulong long,uint,ushort,ushort,bool,NVMeBufferAllocator *,bool,bool,IOMapper *)
AppleNVMeRequest::MetaClass::alloc(void)
AppleNVMeRequest::OutputSegment(IODMACommand *,IODMACommand::Segment64,void *,uint)
AppleNVMeRequest::PrintRequest(void)
AppleNVMeRequest::ResetForNewRequest(void)
AppleNVMeRequest::ResetRequest(void)
AppleNVMeRequest::SetMapper(IOMapper *,bool)
AppleNVMeRequest::free(void)
AppleNVMeRequest::~AppleNVMeRequest()
AppleNVMeRequestPool::AddRequestToPoolInit(AppleNVMeRequest *)
AppleNVMeRequestPool::AddRequestToPoolInit(AppleNVMeRequest *)
AppleNVMeRequestPool::AllocateNVMeRequests(uchar,uint,bool,bool,bool,IOMapper *)
AppleNVMeRequestPool::AllocateNVMeResources(uchar,uint,bool,bool,IOMapper *)
AppleNVMeRequestPool::Create(AppleNVMeWorkLoop *,uchar,ushort,uint,bool,NVMeBufferAllocator *,lck_mtx_t *,bool,IOMapper *)
AppleNVMeRequestPool::GetRequestFromPool(bool,uchar)
AppleNVMeRequestPool::GetRequestSingleQ(IOCommand **,bool,uchar)
AppleNVMeRequestPool::InitNVMeRequestPool(AppleNVMeWorkLoop *,uchar,ushort,uint,bool,NVMeBufferAllocator *,lck_mtx_t *,bool,IOMapper *)
AppleNVMeRequestPool::InitializeDMASpecification(AppleNVMeRequest *,uchar,IOMapper *)
AppleNVMeRequestPool::Rebuild(uchar,uint,bool,bool,IOMapper *)
AppleNVMeRequestPool::ReleaseNVMeRequests(void)
AppleNVMeRequestPool::ReturnRequestToPool(AppleNVMeRequest *,uchar)
AppleNVMeRequestPoolPreTagReserve::Create(AppleNVMeWorkLoop *,uchar,ushort,uint,bool,NVMeBufferAllocator *,lck_mtx_t *,bool,IOMapper *)
AppleNVMeRequestPoolTagReserve::Create(AppleNVMeWorkLoop *,uchar,ushort,uint,bool,NVMeBufferAllocator *,lck_mtx_t *,bool,IOMapper *)
AppleNVMeRequestPoolTagReserve::GetRequestFromPool(bool,uchar)
AppleNVMeRequestPoolTagReserve::GetRequestTagReserve(IOCommand **,bool,uchar)
AppleNVMeRequestPoolTagReserve::Rebuild(uchar,uint,bool,bool,IOMapper *)
AppleNVMeRequestPoolTagReserve::ReturnRequestToPool(AppleNVMeRequest *,uchar)
AppleNVMeRequestPoolTagReserve::SetupTagReserveDefaults(uint)
AppleNVMeRequestTimer::CreateTimerEventSource(OSObject *,void (*)(OSObject *,IOTimerEventSource *),uint)
AppleNVMeRequestTimer::DisableRequestTimer(void)
AppleNVMeRequestTimer::EnableRequestTimer(bool)
AppleNVMeRequestTimer::EnableRequestTimer(bool)
AppleNVMeRequestTimer::SetRequestDeadline(AppleNVMeRequest *)
AppleNVMeSMARTUserClient::CreateRequestBuffer(ulong long,ulong long)
AppleNVMeSMARTUserClient::HandleTerminate(IOService *)
AppleNVMeSMARTUserClient::IsTunnelPermitted(AppleNVMeSMARTUserClient*,uint)
AppleNVMeSMARTUserClient::ProductionTunnel(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeSMARTUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleNVMeSMARTUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleNVMeSMARTUserClient::message(uint,IOService *,void *)
AppleNVMeSMARTUserClient::start(IOService *)
AppleNVMeUpdateUC::CreateRequestBuffer(AppleNVMeRequest *,ulong long,ulong long,uint)
AppleNVMeUpdateUC::ExecuteRequest(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *)
AppleNVMeUpdateUC::FirmwareActivate(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::FirmwareActivate(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::FirmwareDownload(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::FirmwareVersionCheck(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::GetClogMismatch(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::GetMSPType(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::GetNANDInfo(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::IdentifyController(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::IsBFHMode(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::IsTunnelPermitted(AppleNVMeUpdateUC*,uint)
AppleNVMeUpdateUC::PerformBFH(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::ProductionTunnel(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::ReleaseRequestBuffer(AppleNVMeRequest *)
AppleNVMeUpdateUC::SetBFHMode(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::SetNVMeState(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::SetOutputArgs(AppleNVMeRequest *,int,IOExternalMethodArguments *)
AppleNVMeUpdateUC::SetPCIPortState(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::TunableTableDownload(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::UpdateMspBfhParams(OSObject *,void *,IOExternalMethodArguments *)
AppleNVMeUpdateUC::didTerminate(IOService *,uint,bool *)
AppleNVMeUpdateUC::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleNVMeUpdateUC::initWithTask(task *,void *,uint,OSDictionary *)
AppleNVMeUpdateUC::start(IOService *)
AppleNVMeUpdateUC::stop(IOService *)
AppleNVMeUpdateUC::terminate(uint)
AppleNVMeWorkLoop::Create(char const*)
AppleNVMeWorkLoop::InitWithLockGroupName(char const*)
AppleNVMeWorkLoop::Lock(void)
AppleNVMeWorkLoop::SleepGate(void *,int)
AppleNVMeWorkLoop::Unlock(void)
AppleNVMeWorkLoop::WakeupGate(void *,bool)
AppleNVMeWorkLoop::free(void)
AppleNVMeWorkLoop::threadMain(void)
AppleNotificationQueue::MetaClass::alloc(void)
AppleNotificationQueue::_dequeueNotification(int *)
AppleNotificationQueue::_handleNotifications(void)
AppleNotificationQueue::disableNotifications(bool)
AppleNotificationQueue::dropAllNotifications(void)
AppleNotificationQueue::enableNotifications(void)
AppleNotificationQueue::enqueueAndProcessNotifications(int)
AppleNotificationQueue::enqueueNotification(int)
AppleNotificationQueue::free(void)
AppleNotificationQueue::init(void)
AppleNotificationQueue::initWithHandler(void (*)(void *,void *,int,AppleNotificationQueue*),void *,void *)
AppleNotificationQueue::processNotifications(void)
AppleNotificationQueue::setCompletionHandler(void ( {block_pointer})(AppleNotificationQueue*))
AppleNotificationQueue::setCompletionHandler(void (*)(void *,void *,AppleNotificationQueue*),void *,void *)
AppleNotificationQueue::withHandler(void (*)(void *,void *,int,AppleNotificationQueue*),void *,void *)
AppleNotificationQueue::~AppleNotificationQueue()
AppleNubSynopsysOTG3Device::message(uint,IOService *,void *)
AppleNubSynopsysOTG3Device::messageGated(uint,IOService *,void *)
AppleNubSynopsysOTG3Device::start(IOService *)
AppleNubSynopsysOTGDevice::MetaClass::alloc(void)
AppleNubSynopsysOTGDevice::connectedToUSBHost(void)
AppleNubSynopsysOTGDevice::connectedWithAccessoryCable(void)
AppleNubSynopsysOTGDevice::free(void)
AppleNubSynopsysOTGDevice::message(uint,IOService *,void *)
AppleNubSynopsysOTGDevice::messageGated(uint,IOService *,void *)
AppleNubSynopsysOTGDevice::otgSetPower(bool)
AppleNubSynopsysOTGDevice::phyGoOnBus(bool)
AppleNubSynopsysOTGDevice::phyGoOnBus(bool)
AppleNubSynopsysOTGDevice::phySetConnectionSpeed(AppleUSBPhy::tDeviceModeConnectionSpeed)
AppleNubSynopsysOTGDevice::phySetPower(bool)
AppleNubSynopsysOTGDevice::setCurrentLimit(uint)
AppleNubSynopsysOTGDevice::setCurrentLimitThread(void *,void *)
AppleNubSynopsysOTGDevice::start(IOService *)
AppleNubSynopsysOTGDevice::start(IOService *)
AppleNubSynopsysOTGDevice::~AppleNubSynopsysOTGDevice()
AppleNubT8027USBXDCI::MetaClass::alloc(void)
AppleNubT8027USBXDCI::addDevCapabilityDescriptors(void)
AppleNubT8027USBXDCI::controllerReset(void)
AppleNubT8027USBXDCI::free(void)
AppleNubT8027USBXDCI::handleUSBConnectionDone(void)
AppleNubT8027USBXDCI::powerOn(void)
AppleNubT8027USBXDCI::start(IOService *)
AppleNubT8027USBXDCI::stopDeviceController(void)
AppleNubT8027USBXDCI::~AppleNubT8027USBXDCI()
AppleNullTextCrypter::decryptPage(void const*,void *,ulong long,TextCrypterSession *)
AppleNullTextCrypter::start(IOService *)
AppleOLYHAL::Dispatch(IORPC)
AppleOLYHAL::createPlatFuncEventTimestampInterface(char const*)
AppleOLYHAL::createPlatformFunctionInterface(void)
AppleOLYHAL::createPlatformFunctionInterfaceDK_Impl(AppleOLYHALPlatformFunction **)
AppleOLYHAL::createPortInterfacePCIe(char const*)
AppleOLYHAL::createPortInterfacePCIeDK_Impl(char const*,AppleOLYHALPortInterfacePCIe **)
AppleOLYHAL::free(void)
AppleOLYHAL::parseEDTDefaultOptions(void)
AppleOLYHAL::parseWLANPowerOnBootArgs(void)
AppleOLYHAL::probe(IOService *,int *)
AppleOLYHAL::setPowerStateGated(ulong,IOService *)
AppleOLYHAL::start(IOService *)
AppleOLYHAL::stop(IOService *)
AppleOLYHALPlatformFunction::copyRWCVDK_Impl(OSData **)
AppleOLYHALPlatformFunction::flrHold(void)
AppleOLYHALPlatformFunction::flrHoldDK_Impl(void)
AppleOLYHALPlatformFunction::flrRelease(void)
AppleOLYHALPlatformFunction::flrReleaseDK_Impl(void)
AppleOLYHALPlatformFunction::flrReleaseLocked(void)
AppleOLYHALPlatformFunction::free(void)
AppleOLYHALPlatformFunction::getHibernateModeDK_Impl(kPlatformHibernateSupportModes *)
AppleOLYHALPlatformFunction::getLastChipsetPowerOffDK_Impl(ulong long *)
AppleOLYHALPlatformFunction::getLastChipsetPowerOnDK_Impl(ulong long *)
AppleOLYHALPlatformFunction::getLowPowerDetectedDK_Impl(void)
AppleOLYHALPlatformFunction::isSystemHibernatingDK_Impl(uint *)
AppleOLYHALPlatformFunction::isSystemWokenByWiFiDK_Impl(char *,char const*,ulong)
AppleOLYHALPlatformFunction::notifyPCIeAttached(void *,IOService *,IONotifier *)
AppleOLYHALPlatformFunction::notifyPCIeDetached(void *,IOService *,IONotifier *)
AppleOLYHALPlatformFunction::setLowPowerDetectedDK_Impl(bool)
AppleOLYHALPlatformFunction::setPowerEnableDK_Impl(bool)
AppleOLYHALPlatformFunction::withProvider(IOService *,CCLogStream *)
AppleOLYHALPlatformFunctionEmbedded::init(IOService *,CCLogStream *)
AppleOLYHALPlatformFunctionEmbedded::isSystemHibernating(uint &)
AppleOLYHALPlatformFunctionEmbeddedAMFM::init(IOService *,CCLogStream *)
AppleOLYHALPlatformFunctionEventTimestamp::disable(void)
AppleOLYHALPlatformFunctionEventTimestamp::disableDK_Impl(void)
AppleOLYHALPlatformFunctionEventTimestamp::enable(void)
AppleOLYHALPlatformFunctionEventTimestamp::enableDK_Impl(void)
AppleOLYHALPlatformFunctionEventTimestamp::getTimestamp(void)
AppleOLYHALPlatformFunctionEventTimestamp::getTimestampDK_Impl(ulong long *)
AppleOLYHALPlatformFunctionEventTimestamp::initWithProvider(IORegistryEntry *,char const*)
AppleOLYHALPortInterfacePCIe::_ConfigSendMessagesToDK_Impl(void)
AppleOLYHALPortInterfacePCIe::callFunction(void *,void *,void *)
AppleOLYHALPortInterfacePCIe::deviceTurnedOnDK_Impl(void)
AppleOLYHALPortInterfacePCIe::deviceWakeGPIOAvailable(IOService *)
AppleOLYHALPortInterfacePCIe::enable(bool,AppleOLYHALPortInterfacePowerActionType)
AppleOLYHALPortInterfacePCIe::enableDK_Impl(bool,AppleOLYHALPortInterfacePowerActionType)
AppleOLYHALPortInterfacePCIe::enableHardware(void)
AppleOLYHALPortInterfacePCIe::enableHardwareDK_Impl(void)
AppleOLYHALPortInterfacePCIe::free(void)
AppleOLYHALPortInterfacePCIe::initWithProvider(IOService *,char const*,CCLogStream *)
AppleOLYHALPortInterfacePCIe::isPortControlAMFMManagedDK_Impl(void)
AppleOLYHALPortInterfacePCIe::nvmeEnable(bool)
AppleOLYHALPortInterfacePCIe::nvmeEnableDK_Impl(bool)
AppleOLYHALPortInterfacePCIe::registerErrorHandler(int (*)(void *,AppleOLYHALPortInterfacePCIeErrorHandlerEvent,OSData *),void *)
AppleOLYHALPortInterfacePCIe::resetEndpoint(bool)
AppleOLYHALPortInterfacePCIe::resetEndpointDK_Impl(bool)
AppleOLYHALPortInterfacePCIe::sendActionMessageToDK(OSObject *,AppleOLYHALPortInterfaceActionType,void *)
AppleOLYHALPortInterfacePCIe::setDesiredLinkSpeed(uint)
AppleOLYHALPortInterfacePCIe::setDesiredLinkSpeedDK_Impl(uint)
AppleOLYHALPortInterfacePCIe::setDeviceInDeepSleep(bool)
AppleOLYHALPortInterfacePCIe::setDeviceInDeepSleepDK_Impl(bool)
AppleOLYHALPortInterfacePCIe::setDeviceWake(bool)
AppleOLYHALPortInterfacePCIe::setDeviceWakeDK_Impl(bool)
AppleOLYHALPortInterfacePCIeAMFM::bridgePTMPropertyEnabled(IOService *)
AppleOLYHALPortInterfacePCIeAMFM::deviceTurnedOn(void)
AppleOLYHALPortInterfacePCIeAMFM::enable(bool,AppleOLYHALPortInterfacePowerActionType)
AppleOLYHALPortInterfacePCIeAMFM::enableGated(bool,AppleOLYHALPortInterfacePowerActionType)
AppleOLYHALPortInterfacePCIeAMFM::free(void)
AppleOLYHALPortInterfacePCIeAMFM::initWithProvider(IOService *,char const*,CCLogStream *)
AppleOLYHALPortInterfacePCIeAMFM::processAMFMMessage(void *,uint,IOService *,void *,ulong)
AppleOLYHALPortInterfacePCIeAMFM::processAMFMMessageGated(uint,void *,ulong)
AppleOLYHALPortInterfacePCIeAMFM::registerActionHandler(OSObject *,int (*)(OSObject *,AppleOLYHALPortInterfaceActionType,void *))
AppleOLYHALPortInterfacePCIeAMFM::registerActionHandler(OSObject *,int (*)(OSObject *,AppleOLYHALPortInterfaceActionType,void *))
AppleOLYHALPortInterfacePCIeAMFM::resetCall(void *,void *)
AppleOLYHALPortInterfacePCIeAMFM::setDeviceInDeepSleep(bool)
AppleOnboardSerialBSDClient::ctl_connect(void *,sockaddr_ctl *)
AppleOnboardSerialBSDClient::ctl_connect(void *,sockaddr_ctl *,void **)
AppleOnboardSerialBSDClient::ctl_connect_sk(void *,sockaddr_ctl *)
AppleOnboardSerialBSDClient::ctl_connect_sk(void *,sockaddr_ctl *,void **)
AppleOnboardSerialBSDClient::ctl_data_callback(AppleOnboardSerialSync *,__mbuf **)
AppleOnboardSerialBSDClient::ctl_disconnect_sk(void *)
AppleOnboardSerialBSDClient::ctl_event_callback(AppleOnboardSerialSync *,uint,uint)
AppleOnboardSerialBSDClient::ctl_getopt(void *,uint,void *,int,void *,ulong *)
AppleOnboardSerialBSDClient::ctl_getopt_sk(void *,int,void *,ulong *)
AppleOnboardSerialBSDClient::ctl_send(void *,__mbuf *,int)
AppleOnboardSerialBSDClient::ctl_setopt(void *,uint,void *,int,void *,ulong)
AppleOnboardSerialBSDClient::ctl_setopt_sk(void *,int,void *,ulong)
AppleOnboardSerialBSDClient::dev_close(int,int,proc *)
AppleOnboardSerialBSDClient::dev_ioctl(int,ulong,char *,int,proc *)
AppleOnboardSerialBSDClient::dev_open(int,int,int,proc *)
AppleOnboardSerialBSDClient::dev_open(int,int,proc *)
AppleOnboardSerialBSDClient::dev_read(int,uio *,int)
AppleOnboardSerialBSDClient::dev_read(uio *,int)
AppleOnboardSerialBSDClient::dev_write(uio *,int)
AppleOnboardSerialBSDClient::event_internal(uint,uint)
AppleOnboardSerialBSDClient::ioctl_internal_sk(ulong,void *,ulong *,uint)
AppleOnboardSerialBSDClient::sk_attach_interface(void)
AppleOnboardSerialBSDClient::sk_attach_nexus(AppleOnboardSerialSkywalkInterface *,uchar (*)[16])
AppleOnboardSerialBSDClient::sk_disable(void)
AppleOnboardSerialBSDClient::sk_disable_common(void)
AppleOnboardSerialBSDClient::sk_enable(void)
AppleOnboardSerialBSDClient::sk_set_channel_spec(AppleOnboardSerialSkywalkChannelSpec const*)
AppleOnboardSerialBSDClient::sk_transmit(IOMemoryDescriptor *,uint,void *)
AppleOnboardSerialBSDClient::start(IOService *)
AppleOnboardSerialBSDClient::start_sk(IOService *)
AppleOnboardSerialBSDClient::watchDogTimer(IOTimerEventSource *)
AppleOnboardSerialBSDClient::watchDogTimer(IOTimerEventSource *)
AppleOnboardSerialBusInterface::free(void)
AppleOnboardSerialBusInterface::start(IOService *)
AppleOnboardSerialBusInterface::startUART(void)
AppleOnboardSerialDebugDevice::_HACK_debugDevClose(int,int,int,proc *)
AppleOnboardSerialDebugDevice::_HACK_debugDevOpen(int,int,int,proc *)
AppleOnboardSerialDebugDevice::_HACK_debugDevRead(int,uio *,int)
AppleOnboardSerialDebugDevice::_HACK_debugDevWrite(int,uio *,int)
AppleOnboardSerialDebugDevice::_debugDumpV(uchar const*,uint,char const*,char *)
AppleOnboardSerialDebugDevice::_debugLogV(char const*,char *)
AppleOnboardSerialDebugDevice::_logwrite(uchar *,uint)
AppleOnboardSerialDebugDevice::configDebugDevice(char const*,uint,uint)
AppleOnboardSerialDebugDevice::debugDump(int,IOMemoryDescriptor *,uint,uint,char const*,...)
AppleOnboardSerialDebugDevice::debugDump(int,uchar const*,uint,char const*,...)
AppleOnboardSerialDebugDevice::debugLog(int,char const*,...)
AppleOnboardSerialDebugDevice::debugSpeedTrap(uint)
AppleOnboardSerialDebugDevice::forUART(char const*,AppleOnboardSerialSync *)
AppleOnboardSerialPool::gatedGetCommandWait(IOCommand **)
AppleOnboardSerialPool::getCommand(bool)
AppleOnboardSerialPool::withWorkLoop(IOWorkLoop *)
AppleOnboardSerialSkywalkInterface::dequeueRxPackets(IOSkywalkRxSubmissionQueue *,IOSkywalkPacket * const*,uint,void *)
AppleOnboardSerialSkywalkInterface::dequeueTxPackets(IOSkywalkTxSubmissionQueue *,IOSkywalkPacket * const*,uint,void *)
AppleOnboardSerialSkywalkInterface::disable(uint)
AppleOnboardSerialSkywalkInterface::enable(uint)
AppleOnboardSerialSkywalkInterface::enqueueRxPackets(IOSkywalkRxCompletionQueue *,IOSkywalkPacket **,uint,void *)
AppleOnboardSerialSkywalkInterface::free(void)
AppleOnboardSerialSkywalkInterface::rxCompletion(AppleOnboardSerialSync *,__mbuf **)
AppleOnboardSerialSkywalkInterface::rxGetFreePacket(void)
AppleOnboardSerialSkywalkInterface::start(IOService *,AppleOnboardSerialSkywalkChannelSpec const*)
AppleOnboardSerialSkywalkInterface::txCompletion(void *)
AppleOnboardSerialSkywalkPacketPool::newPacket(IOSkywalkPacketDescriptor *,IOSkywalkPacket **)
AppleOnboardSerialSkywalkPacketPool::withName(char const*,OSObject *,uint,IOSkywalkPacketBufferPool::PoolOptions const*)
AppleOnboardSerialSync::getSerialParentSymbol(OSData const*)
AppleOrionBellatrix::_initIC(void)
AppleOrionBellatrix::clearConnectionEvent(uchar *)
AppleOrionBellatrix::clearEvents(void)
AppleOrionBellatrix::enableDeglitchCounter(bool)
AppleOrionBellatrix::free(void)
AppleOrionBellatrix::getChipRevision(void)
AppleOrionBellatrix::getVBUSVoltage(int *,bool)
AppleOrionBellatrix::initIC(void)
AppleOrionBellatrix::interruptAction(IOInterruptEventSource *,int)
AppleOrionBellatrix::interruptVbusAction(IOInterruptEventSource *,int)
AppleOrionBellatrix::setHighSpeedMode(bool)
AppleOrionBellatrix::start(IOService *)
AppleOrionBellatrix::stop(IOService *)
AppleOrionBellatrix::systemWillShutdown(uint)
AppleOrionChargerFunction::attachCharger(IOService *)
AppleOrionChargerFunction::copyDetectStatus(bool)
AppleOrionChargerFunction::enableUSBDetectEvent(bool)
AppleOrionChargerFunction::isPreferredInput(void)
AppleOrionChargerFunction::measureVBUSVoltage(int *)
AppleOrionHSAIDBus::disable(void)
AppleOrionHSAIDBus::enable(ushort,uchar,ushort)
AppleOrionHSAIDBus::start(IOService *)
AppleOrionHSAIDBus::startTransmit(void const*,uint,IOAccessoryHSAIDBusTransport::HSAIDFrameType)
AppleOrionIC::attachChargerFunction(AppleOrionChargerFunction *,IOService *)
AppleOrionIC::free(void)
AppleOrionIC::handleAccessoryConnect(void)
AppleOrionIC::handleDigitalID(void)
AppleOrionIC::handleHSMode(void)
AppleOrionIC::handleUpstreamChargerEvent(AppleARMFunctionCharger *,uint)
AppleOrionIC::measureVBUS(AppleARMPMUSensor *,uchar,long long *)
AppleOrionIC::readRegs(uchar,uchar *,ulong long)
AppleOrionIC::readSystemID(ushort *)
AppleOrionIC::setPowerProviderSuspend(bool)
AppleOrionIC::stop(IOService *)
AppleOrionIC::systemWillShutdown(uint)
AppleOrionIC::writeRegs(uchar,uchar const*,ulong long)
AppleOrionIC__start_IOService
AppleOrionMCU::clearEvents(void)
AppleOrionMCU::getVBUSVoltage(int *,bool)
AppleOrionMCU::isSignedUpdateSupported(void)
AppleOrionMCU::resetIC(void)
AppleOrionMCU::setToFullPowerSuspend(void)
AppleOrionMCU::start(IOService *)
AppleOrionMCU::updateFirmware(void const*,ulong)
AppleOrionMCU::waitForReadyState(fwuStatus_t *,int)
AppleOrionMCU::waitForUpdateToFinish(void)
AppleOrionMCUUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleOrionManager::MetaClass::alloc(void)
AppleOrionManager::free(void)
AppleOrionManager::getBootID(uchar *)
AppleOrionManager::getHighSpeedSupported(void)
AppleOrionManager::getPowerModeCurrentLimit(IOAccessoryPowerMode)
AppleOrionManager::getPrimaryPortID(void)
AppleOrionManager::getSystemID(ushort *)
AppleOrionManager::handleDetectChange(uint)
AppleOrionManager::setAccessoryPower(bool,bool,bool,bool,bool)
AppleOrionManager::setAccessoryPowerReady(bool)
AppleOrionManager::setHighSpeedMode(bool)
AppleOrionManager::start(IOService *)
AppleOrionManager::startRoleSwapGated(uint)
AppleOrionManager::~AppleOrionManager()
ApplePCIEMSIController::addDeviceInterruptProperties(IORegistryEntry *,uint,uint,int *)
ApplePCIEMSIController::allocateInterruptVectors(IOService *,uint,ulong long *)
ApplePCIEMSIController::allocateInterruptVectors(IOService *,uint,ulong long *)
ApplePCIEMSIController::deallocateInterrupt(uint)
ApplePCIEMSIController::disableInterrupt(IOService *,int)
ApplePCIEMSIController::disableVectorHard(int,IOInterruptVector *)
ApplePCIEMSIController::enableInterrupt(IOService *,int)
ApplePCIEMSIController::enableVector(int,IOInterruptVector *)
ApplePCIEMSIController::getDeviceMSILimit(IOPCIDevice *,uint)
ApplePCIEMSIController::getInterruptType(IOService *,int,int *)
ApplePCIEMSIController::handleInterrupt(void *,IOService *,int)
ApplePCIEMSIController::init(uint,int,IOInterruptController *,char const*,uint)
ApplePCIEMSIController::initVector(int,IOInterruptVector *)
ApplePCIEMSIController::registerInterrupt(IOService *,int,void *,void (*)(void *,void *,void *,int),void *)
ApplePCIEMSIController::unregisterInterrupt(IOService *,int)
ApplePMGR::ApplePMGR(OSMetaClass const*)
ApplePMGR::_acquireDeviceLocks(ApplePMGR::DeviceData *,uint)
ApplePMGR::_addDpeNodeEnergyChannels(void)
ApplePMGR::_adjustDVDCredits(ApplePMGR::CPUComplex *,ulong long)
ApplePMGR::_applyParam(ApplePMGR::Param,bool)
ApplePMGR::_applyValidParamDVDFactors(void)
ApplePMGR::_checkNotifyPMP(ushort)
ApplePMGR::_clearPSLevelIndicator(uchar,uchar,uchar)
ApplePMGR::_clusterHysteresisTimeoutHandler(IOTimerEventSource *)
ApplePMGR::_clusterHysteresisTimeoutHandler(IOTimerEventSource *)
ApplePMGR::_clusterHysteresisTimeoutHandlerGated(ulong)
ApplePMGR::_completeSOCPerfStateChange(ApplePMGR::PerfDomain *)
ApplePMGR::_configureBridge(uchar,uint)
ApplePMGR::_configureBridge(uchar,uint)
ApplePMGR::_convertToDieNaming(char *,ulong,uint,char const*)
ApplePMGR::_cpuComplexInit(ApplePMGR::CPUComplex *)
ApplePMGR::_cpuComplexInit(ApplePMGR::CPUComplex *)
ApplePMGR::_cpuIdle(ApplePMGR::CPUCore *,bool,ulong long *)
ApplePMGR::_cpuIdleInit(ml_processor_info *)
ApplePMGR::_cpuIdleInit(ml_processor_info *)
ApplePMGR::_cpuIdleTimer(ApplePMGR::CPUCore *,ulong long *)
ApplePMGR::_cpuIdleTimer(ApplePMGR::CPUCore *,ulong long *)
ApplePMGR::_cpuIdleTimerTickle(ApplePMGR::CPUComplex *)
ApplePMGR::_cpuIdleTimerTickleXCall(void *)
ApplePMGR::_dashBoardOps(ulong,ulong *)
ApplePMGR::_dashBoardOpsGated(ApplePMGR::PTDCommand,ulong *)
ApplePMGR::_debugEnabled(uchar,uchar,ApplePMGR::DebugEnabled)
ApplePMGR::_debugEnabled(ushort,ApplePMGR::DebugEnabled)
ApplePMGR::_deviceIDToDeviceData(ushort)
ApplePMGR::_deviceIDToDeviceData(ushort)
ApplePMGR::_deviceIDToPerfDomain(ushort,uint)
ApplePMGR::_deviceIDToPerfDomain(ushort,uint)
ApplePMGR::_deviceIDToPowerDomainData(ushort)
ApplePMGR::_deviceIDToPowerDomainData(ushort)
ApplePMGR::_deviceIdCheck(ushort)
ApplePMGR::_deviceIdCheck(ushort)
ApplePMGR::_enableAONPerfCounters(void)
ApplePMGR::_enableBridgeByteCounters(uchar,bool,bool,uint)
ApplePMGR::_enableBridgeByteCounters(uchar,bool,bool,uint)
ApplePMGR::_enableBridgeEventCounters(uchar,bool,bool,uint)
ApplePMGR::_enableBridgeEventCounters(uchar,bool,bool,uint)
ApplePMGR::_enableDevice(ulong,ulong,ulong,ulong)
ApplePMGR::_enableDevice(ulong,ulong,ulong,ulong)
ApplePMGR::_enableDeviceGated(ulong,ulong,ulong,ulong)
ApplePMGR::_enableDeviceGated(ulong,ulong,ulong,ulong)
ApplePMGR::_enableFeature(ApplePMGR::Feature,bool)
ApplePMGR::_enableIdleHandshakeGated(ulong,ulong)
ApplePMGR::_enablePSForceNoAccess(uchar,uchar,bool)
ApplePMGR::_enablePSForceNoAccess(uchar,uchar,bool)
ApplePMGR::_enablePSNoWakeup(uchar,uchar,bool)
ApplePMGR::_enablePSNoWakeup(uchar,uchar,bool)
ApplePMGR::_enablePerfCounters(bool)
ApplePMGR::_enableSOCPerfCounter(uchar,uchar,bool,bool,uint)
ApplePMGR::_enableSOCPerfCounter(uchar,uchar,bool,bool,uint)
ApplePMGR::_enableSOCPerfCounter(uchar,uchar,uchar,bool,uint)
ApplePMGR::_enableSOCPerfCounter(uchar,uchar,uchar,bool,uint)
ApplePMGR::_enableSOCPerfCounters(uchar,bool,uint)
ApplePMGR::_eventIDToEventData(uchar)
ApplePMGR::_eventIDToEventData(uchar)
ApplePMGR::_findNub(char const*)
ApplePMGR::_findRegMap(uint,uint *)
ApplePMGR::_getBWRReqMemory(uint,void *)
ApplePMGR::_getBWRReqMemory(uint,void *)
ApplePMGR::_getBit(uint,uint *)
ApplePMGR::_getBit(uint,uint *)
ApplePMGR::_getCPUComplexCPMPowerGateCount(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexCPMPowerGateCount(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexIdleExitCount(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexIdleExitCount(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexIdleTime(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexIdleTime(ApplePMGR::CPUComplex *)
ApplePMGR::_getCPUComplexPerfStateEntryCount(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexPerfStateEntryCount(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexPerfStateTime(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexPerfStateTime(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexVoltageStateEntryCount(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexVoltageStateEntryCount(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexVoltageStateTime(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUComplexVoltageStateTime(ApplePMGR::CPUComplex *,uchar)
ApplePMGR::_getCPUCoreIdleExitCount(ApplePMGR::CPUCore *)
ApplePMGR::_getCPUCoreIdleExitCount(ApplePMGR::CPUCore *)
ApplePMGR::_getCPUCoreIdleTime(ApplePMGR::CPUCore *)
ApplePMGR::_getCPUCoreIdleTime(ApplePMGR::CPUCore *)
ApplePMGR::_getCPUCorePerfLevelEntryCount(ApplePMGR::CPUComplex *,uint)
ApplePMGR::_getCPUCorePerfLevelEntryCount(ApplePMGR::CPUComplex *,uint)
ApplePMGR::_getCPUCorePerfLevelTime(ApplePMGR::CPUComplex *,uint)
ApplePMGR::_getCPUCorePerfLevelTime(ApplePMGR::CPUComplex *,uint)
ApplePMGR::_getCPUCorePerfStateEnergy(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateEnergy(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateEnergyAccumulator(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateEnergyAccumulator(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateEntryCount(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateEntryCount(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateTime(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePerfStateTime(ApplePMGR::CPUCore *,uchar)
ApplePMGR::_getCPUCorePowerGateCount(ApplePMGR::CPUCore *)
ApplePMGR::_getCPUCorePowerGateCount(ApplePMGR::CPUCore *)
ApplePMGR::_getClockReqMemory(uint,void *)
ApplePMGR::_getClockReqMemory(uint,void *)
ApplePMGR::_getDVFSHandle(OSSymbol *,uint *)
ApplePMGR::_getDeviceClusterIDs(ApplePMGR::DeviceData *,uchar *,uint *)
ApplePMGR::_getDeviceClusterIDs(ApplePMGR::DeviceData *,uchar *,uint *)
ApplePMGR::_getDeviceEnergy(ushort,uint)
ApplePMGR::_getDeviceStatus(ushort,uint)
ApplePMGR::_getDeviceStatus(ushort,uint)
ApplePMGR::_getDpeNodeEnergy(uint)
ApplePMGR::_getDpeNodeEnergy(uint)
ApplePMGR::_getEnergyCounter(uchar,uint)
ApplePMGR::_getEnergyCounter(uchar,uint)
ApplePMGR::_getEnergyNodeCounter(ApplePMGR::EnergyNode *,bool)
ApplePMGR::_getEventActiveTime(uchar,uint)
ApplePMGR::_getEventCount(uchar,uint)
ApplePMGR::_getPMPDevHandle(OSSymbol *,uint *)
ApplePMGR::_getPMPExtSWGenSetRegOffset(uint)
ApplePMGR::_getPMPPerfStateCount(OSSymbol *,uint *)
ApplePMGR::_getPSActualLevel(uchar,uchar)
ApplePMGR::_getPSActualLevel(uchar,uchar)
ApplePMGR::_getPSLevel(uchar,uchar,uint)
ApplePMGR::_getPSLevel(uchar,uchar,uint)
ApplePMGR::_getPSLevelIndicator(uchar,uchar,uchar)
ApplePMGR::_getPSName(uchar,uchar)
ApplePMGR::_getPTDRangeInfo(uint,ApplePMGRNub::PTDRangeInfo *,uint *)
ApplePMGR::_getPTDRangeInfo(uint,ApplePMGRNub::PTDRangeInfo *,uint *)
ApplePMGR::_getSOCPerfCounter(uchar,uchar,uint)
ApplePMGR::_getSOCPerfCounter(uchar,uchar,uint)
ApplePMGR::_handleCPUPerfRequest(ApplePMGR::CPUComplex *,uint,bool,uint,ApplePMGRNub::PerfLimitingReason)
ApplePMGR::_handleCPUPerfRequest(ApplePMGR::CPUComplex *,uint,bool,uint,ApplePMGRNub::PerfLimitingReason)
ApplePMGR::_handleCPUPerfStateRequest(ApplePMGR::CPUComplex *,uint,bool)
ApplePMGR::_handleCPUPerfStateRequest(ApplePMGR::CPUComplex *,uint,bool)
ApplePMGR::_handleInterruptAll(IOInterruptEventSource *,int)
ApplePMGR::_handleInterruptAll(IOInterruptEventSource *,int)
ApplePMGR::_handleSOCPerfStateRequest(ApplePMGR::PerfDomain *,uchar,bool)
ApplePMGR::_handleSOCPerfStateRequest(ApplePMGR::PerfDomain *,uchar,bool)
ApplePMGR::_havePMPControlFunction(void)
ApplePMGR::_initDeviceBridges(ApplePMGR::DeviceData *,uint)
ApplePMGR::_initPMPv2(void)
ApplePMGR::_initPMPv2(void)
ApplePMGR::_initPerfDomainInfo(void)
ApplePMGR::_notifyPMPInitialDeviceStatusGated(void)
ApplePMGR::_perfStateToID(ApplePMGR::PerfDomain *,uchar)
ApplePMGR::_perfStateToID(ApplePMGR::PerfDomain *,uchar)
ApplePMGR::_pmPerformanceBoost(uint)
ApplePMGR::_pmPerformanceBoost(uint)
ApplePMGR::_pmpReadyAction(void)
ApplePMGR::_pmpReadyActionGated(void)
ApplePMGR::_pmpWriteDashBoard(ApplePMGR::PMPCommand,ulong *,uint)
ApplePMGR::_pmpWriteDashBoard(ApplePMGR::PMPCommand,ulong *,uint)
ApplePMGR::_pmpWriteDashBoardSetDeviceConstraint(uint,uint,ulong long,uint)
ApplePMGR::_pmpWriteDashBoardSetDeviceState(ushort,uint,uint)
ApplePMGR::_pmpWriteDashBoardSetDeviceState(ushort,uint,uint)
ApplePMGR::_pmpWriteDashBoardSetVirtualDeviceState(ushort,uint,uint)
ApplePMGR::_powerDomainIDToPowerDomainData(uchar)
ApplePMGR::_powerDomainIDToPowerDomainData(uchar)
ApplePMGR::_powerStateDidChangeToGated(ulong,ulong,IOService *)
ApplePMGR::_printBridges(void)
ApplePMGR::_printClocks(void)
ApplePMGR::_printClusters(void)
ApplePMGR::_printDevicePerfStateRequirements(ApplePMGR::PerfDomain *,char const**,int,bool)
ApplePMGR::_printDevices(void)
ApplePMGR::_printEnergyCounters(void)
ApplePMGR::_printEvents(void)
ApplePMGR::_printFeatures(void)
ApplePMGR::_printPSRegGroups(void)
ApplePMGR::_printParams(void)
ApplePMGR::_printPerfDomainInfo(void)
ApplePMGR::_printPerfDomains(void)
ApplePMGR::_printPerfRegGroups(void)
ApplePMGR::_printPowerDomains(void)
ApplePMGR::_printPwrGateRegGroups(void)
ApplePMGR::_printRegGroups(void)
ApplePMGR::_printRegMaps(void)
ApplePMGR::_processAPWakeSources(void)
ApplePMGR::_publishNubs(IORegistryEntry *)
ApplePMGR::_publishNubs(IORegistryEntry *)
ApplePMGR::_publishTraceProperties(void)
ApplePMGR::_publishTraceProperties(void)
ApplePMGR::_quiescePerfStateChanges(void)
ApplePMGR::_readBridgeByteCounters(uchar,ulong long *,ulong long *,uint)
ApplePMGR::_readBridgeByteCounters(uchar,ulong long *,ulong long *,uint)
ApplePMGR::_releaseDeviceLocks(ApplePMGR::DeviceData *,uint,int)
ApplePMGR::_resetDVD(ApplePMGR::CPUComplex *)
ApplePMGR::_resetDVD(ApplePMGR::CPUComplex *)
ApplePMGR::_resetDeviceGated(ulong,ulong)
ApplePMGR::_resetDeviceGated(ulong,ulong)
ApplePMGR::_restoreCPUEnergyAccumulators(ApplePMGR::CPUComplex *)
ApplePMGR::_restorePerfCounters(void)
ApplePMGR::_restoreSOCDPECounters(void)
ApplePMGR::_returnPerfDomainInfo(uchar,uint)
ApplePMGR::_ringPMPDoorbell(ApplePMGR::PMPDoorBell,uint,uint *)
ApplePMGR::_ringPMPDoorbell(ApplePMGR::PMPDoorBell,uint,uint *)
ApplePMGR::_roscDataReadGated(ulong,ulong,ulong)
ApplePMGR::_roscDataReadGated(ulong,ulong,ulong)
ApplePMGR::_runEnergyModel(void)
ApplePMGR::_saveActiveBridgeCountersGated(void)
ApplePMGR::_saveBridgeByteCounters(uchar,uint)
ApplePMGR::_saveBridgeByteCounters(uchar,uint)
ApplePMGR::_saveBridgeEventCounters(uchar,uint)
ApplePMGR::_saveBridgeEventCounters(uchar,uint)
ApplePMGR::_scheduleSOCPerfStateChangeThread(ApplePMGR::PerfDomain *,uint)
ApplePMGR::_setBit(uint,uint *,bool)
ApplePMGR::_setBit(uint,uint *,bool)
ApplePMGR::_setFixedFreq(uint,ApplePMGR::PerfDomain *)
ApplePMGR::_setPDMClockBypassGated(ulong)
ApplePMGR::_setPLLOffModeGated(ulong,ulong,ulong)
ApplePMGR::_setPMPControlFunctionGated(void *)
ApplePMGR::_setPSAutoMinLevel(uchar,uchar,uchar,uint)
ApplePMGR::_setPSAutoMinLevel(uchar,uchar,uchar,uint)
ApplePMGR::_setPSLevel(uchar,uchar,uchar,bool,uint)
ApplePMGR::_setPSLevel(uchar,uchar,uchar,bool,uint)
ApplePMGR::_setPSReset(uchar,uchar,uint,bool)
ApplePMGR::_setPSRunMaxAll(bool)
ApplePMGR::_setPerfState(uint,uchar,uint)
ApplePMGR::_setPerfState(uint,uchar,uint)
ApplePMGR::_setPwrGateSleepDepth(uchar,uchar,uchar)
ApplePMGR::_setPwrGateSleepDepth(uchar,uchar,uchar)
ApplePMGR::_setSOCPerfCounter(uchar,uchar,ulong long,uint)
ApplePMGR::_setSOCPerfCounter(uchar,uchar,ulong long,uint)
ApplePMGR::_setSOCSleepState(ulong)
ApplePMGR::_snapshotCPUEnergyAccumulators(ApplePMGR::CPUComplex *)
ApplePMGR::_snapshotCPUStats(ApplePMGR::CPUComplex *,bool)
ApplePMGR::_snapshotClockPerfCounter(ApplePMGR::ClockData *,uint)
ApplePMGR::_snapshotClockPerfCounter(ApplePMGR::ClockData *,uint)
ApplePMGR::_snapshotDevicePerfCounter(ApplePMGR::DeviceData *,uint)
ApplePMGR::_snapshotDevicePerfCounter(ApplePMGR::DeviceData *,uint)
ApplePMGR::_snapshotEventPerfCounter(ApplePMGR::EventData *,uint)
ApplePMGR::_snapshotPerfCounters(bool)
ApplePMGR::_snapshotPerfCounters(bool)
ApplePMGR::_snapshotPowerDomainPerfCounter(ApplePMGR::PowerDomainData *,uint)
ApplePMGR::_snapshotRosc(IOReportChannelList *)
ApplePMGR::_snapshotRosc(IOReportChannelList *)
ApplePMGR::_snapshotSOCDPECounters(void)
ApplePMGR::_socPerfStateChangeThreadCallout(ApplePMGR::PerfDomain *)
ApplePMGR::_syncDevicePerfDomainRequirement(ApplePMGR::DeviceStatusChangeData *,uint)
ApplePMGR::_syncDeviceStatus(void)
ApplePMGR::_tearDownDeviceBridges(ApplePMGR::DeviceData *,uint)
ApplePMGR::_traceCPUIdleEnd(ApplePMGR::CPUCore *,bool)
ApplePMGR::_traceCPUIdleStart(ApplePMGR::CPUCore *,bool)
ApplePMGR::_traceDeviceEnableEnd(ushort,bool)
ApplePMGR::_traceDeviceEnableStart(ushort,bool)
ApplePMGR::_tracePerfStateChange(uint,uchar)
ApplePMGR::_traceThermalUPOPerfLimiting(ApplePMGR::CPUComplex *,uchar,uchar,uchar)
ApplePMGR::_updateCPUComplexPerfState(ApplePMGR::CPUComplex *,uchar,bool,uchar)
ApplePMGR::_updateCPUComplexPerfState(ApplePMGR::CPUComplex *,uchar,bool,uchar)
ApplePMGR::_updateCPUComplexPerfStateStats(ApplePMGR::CPUComplex *,uchar,uchar,ulong long)
ApplePMGR::_updateCPUHistogram(ApplePMGR::CPUComplex *)
ApplePMGR::_updateDeviceStatus(ushort,uchar,uchar,ApplePMGR::DeviceStatusChangeData *,uint *,uint)
ApplePMGR::_updateSingleHistogram(ulong long *,IOHistogramReporter *)
ApplePMGR::_waitForClusterPowerUp(ApplePMGR::DeviceData *,uint)
ApplePMGR::_waitForPMPControlFunction(void)
ApplePMGR::_waitForPMPControlFunctionGated(void)
ApplePMGR::_waitForPMPReadyAction(void)
ApplePMGR::_waitForPMPReadyActionGated(void)
ApplePMGR::_waitForPMPReadyActionGatedv2(void)
ApplePMGR::_wasDeviceDisabledGated(ulong,ulong *)
ApplePMGR::_writeDockFIFO(void *,void *,ulong)
ApplePMGR::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
ApplePMGR::checkCpuEnergy(uint,ulong long)
ApplePMGR::checkEnergy(ApplePMGR::EnergyNode *,ulong long)
ApplePMGR::checkEnergy(ApplePMGR::EnergyNode *,ulong long)
ApplePMGR::clearClusterInterruptStatus(uchar,uint)
ApplePMGR::clearClusterInterruptStatus(uchar,uint)
ApplePMGR::configISPRefClock(uint,uint,uint)
ApplePMGR::configISPRefClock(uint,uint,uint)
ApplePMGR::configMiscCores(uint,bool)
ApplePMGR::configMiscCores(uint,bool)
ApplePMGR::disableCPUCluster(uint)
ApplePMGR::disableCPUCore(uint)
ApplePMGR::dumpRegs32(ApplePMGR::RegMap,uint,uint,uint,ulong long,ApplePMGR::Regs32 *)
ApplePMGR::enableACG(bool)
ApplePMGR::enableACG(bool)
ApplePMGR::enableAFRErrorHandler(bool)
ApplePMGR::enableCPUCluster(uint)
ApplePMGR::enableCPUComplex(uint,bool)
ApplePMGR::enableCPUCore(uint)
ApplePMGR::enableCPUCores(uint,bool)
ApplePMGR::enableCPUFixedFreqRelock(uchar,bool)
ApplePMGR::enableCPUFixedFreqRelock(uchar,bool)
ApplePMGR::enableCluster(uchar,bool,bool,uint)
ApplePMGR::enableCluster(uchar,bool,bool,uint)
ApplePMGR::enableDVMR(uchar,bool)
ApplePMGR::enableDVMR(uchar,bool)
ApplePMGR::enableFANE(bool)
ApplePMGR::enableFANE(bool)
ApplePMGR::enableSingingCapWidget(uchar,bool)
ApplePMGR::enableSingingCapWidget(uchar,bool)
ApplePMGR::enableTVM(uchar,bool,bool,uint)
ApplePMGR::enableThrottler(ApplePMGR::Throttler,bool)
ApplePMGR::enableTouchClock(bool,uint,uint)
ApplePMGR::enableTouchClock(bool,uint,uint)
ApplePMGR::enterCPUIdle(ulong long *)
ApplePMGR::exitCPUIdle(ulong long *)
ApplePMGR::findVideoClockFrequency(uint,uint,ApplePMGR::VideoClockConfig const**)
ApplePMGR::frequencyMHzToPerfState(uchar,uint,uint)
ApplePMGR::getBootArg(char const*,uint *)
ApplePMGR::getCPUComplexCoreCount(uchar,uint)
ApplePMGR::getCPUComplexCoreCount(uchar,uint)
ApplePMGR::getCPUPerfCounter(uint,uint,bool,uint)
ApplePMGR::getCPUPerfCounter(uint,uint,bool,uint)
ApplePMGR::getClusterPowerState(uchar,uint)
ApplePMGR::getClusterPowerState(uchar,uint)
ApplePMGR::getCurrentCPU(void)
ApplePMGR::getCurrentCPUCoreEnergyAccumulator(void)
ApplePMGR::getCurrentCPUCoreSramEnergyAccumulator(void)
ApplePMGR::getCurrentCoreComplex(uint *,uint *)
ApplePMGR::getDTProperty(char const*,uint *)
ApplePMGR::getDTProperty(char const*,ulong long *)
ApplePMGR::getDevicePSRegOffset(uint)
ApplePMGR::getFeatureValue(ApplePMGR::Feature)
ApplePMGR::getFeatureValue(ApplePMGR::Feature)
ApplePMGR::getPerfCycleCount(uchar,uint,uint)
ApplePMGR::getPhysicalClusterID(uchar)
ApplePMGR::getPhysicalClusterID(uchar)
ApplePMGR::getReMapSize(ApplePMGR::RegMap)
ApplePMGR::getRegGroupOffset(ApplePMGR::RegGroup)
ApplePMGR::getRegGroupOffset(ApplePMGR::RegGroup)
ApplePMGR::getRegMap(ApplePMGR::RegMap,uint)
ApplePMGR::getRegMap(ApplePMGR::RegMap,uint)
ApplePMGR::getThermalUPOPerfLimiting(ApplePMGR::CPUComplex *,uchar,uchar,uint *,uint *)
ApplePMGR::haltRestartHW(void)
ApplePMGR::initAON(void)
ApplePMGR::initDockFIFO(void)
ApplePMGR::initDriver(IOService *)
ApplePMGR::initFixedFreq(void)
ApplePMGR::initPMP(void)
ApplePMGR::initPMP(void)
ApplePMGR::initRegGroup(ApplePMGR::RegGroup,ApplePMGR::RegMap,uint)
ApplePMGR::initRegMap(ApplePMGR::RegMap,uint,uint,bool)
ApplePMGR::initRegMap(ApplePMGR::RegMap,uint,uint,bool)
ApplePMGR::lateRestoreHW(void)
ApplePMGR::panicHW(void)
ApplePMGR::perfStateToFrequencyMHz(uchar,uchar,uint)
ApplePMGR::perfStateToFrequencyMHz(uchar,uchar,uint)
ApplePMGR::perfStateToVoltage(uchar,uchar,bool,uint)
ApplePMGR::perfStateToVoltage(uchar,uchar,bool,uint)
ApplePMGR::powerStateDidChangeTo(ulong,ulong,IOService *)
ApplePMGR::prepareSEPForSleep(uint,bool)
ApplePMGR::printDockFIFO(char const*,...)
ApplePMGR::quiesceHW(void)
ApplePMGR::quiesceHW(void)
ApplePMGR::readMiniPMGRReg(uint)
ApplePMGR::readPMGRReg(uint,uint)
ApplePMGR::readPMGRReg(uint,uint)
ApplePMGR::readReg32(ApplePMGR::RegMap,uint,uint)
ApplePMGR::readReg32(ApplePMGR::RegMap,uint,uint)
ApplePMGR::readReg64(ApplePMGR::RegMap,uint,uint)
ApplePMGR::readReg64(ApplePMGR::RegMap,uint,uint)
ApplePMGR::restoreHW(void)
ApplePMGR::roscDataRead(uchar,RoscTypeID,ApplePMGR::RoscReadPhase,uint)
ApplePMGR::roscDataRead(uchar,RoscTypeID,ApplePMGR::RoscReadPhase,uint)
ApplePMGR::roscDataUpdate(uchar,RoscData const*,bool,uint)
ApplePMGR::roscDataUpdate(uchar,RoscData const*,bool,uint)
ApplePMGR::roscPolynomPublish(uchar,uint,uint,uint *)
ApplePMGR::roscPolynomPublish(uchar,uint,uint,uint *)
ApplePMGR::setCPUPerfCounter(uint,uint,bool,ulong long,uint)
ApplePMGR::setCPUPerfCounter(uint,uint,bool,ulong long,uint)
ApplePMGR::setL2CFlushTimeout(uint)
ApplePMGR::setPLLOffMode(ApplePMGR::RegMap,uint,uint,uint)
ApplePMGR::setPLLOffMode(ApplePMGR::RegMap,uint,uint,uint)
ApplePMGR::setProperties(OSObject *)
ApplePMGR::setProperties(OSObject *)
ApplePMGR::setTouchClockSource(uint)
ApplePMGR::setTouchClockSource(uint)
ApplePMGR::setWakeTimeFromSleep(void)
ApplePMGR::start(IOService *)
ApplePMGR::start(IOService *)
ApplePMGR::translateCPUPerfToState(uchar,uint,uint)
ApplePMGR::translateCPUStateToPerf(uchar,uchar,uint)
ApplePMGR::updateCPUIdle(ulong long *)
ApplePMGR::updateReport(IOReportChannelList *,uint,void *,void *)
ApplePMGR::validFeature(ApplePMGR::Feature)
ApplePMGR::validFeature(ApplePMGR::Feature)
ApplePMGR::validParam(ApplePMGR::Param)
ApplePMGR::validParam(ApplePMGR::Param)
ApplePMGR::waitForActualPS(uint,uint,uint,int *)
ApplePMGR::waitPMGRReg(uint,uint,uint,uint,uint)
ApplePMGR::waitPMGRReg(uint,uint,uint,uint,uint)
ApplePMGR::waitReg32(ApplePMGR::RegMap,uint,uint,uint,uint,uint)
ApplePMGR::waitReg32(ApplePMGR::RegMap,uint,uint,uint,uint,uint)
ApplePMGR::writeMiniPMGRReg(uint,uint)
ApplePMGR::writePMGRReg(uint,uint,uint)
ApplePMGR::writePMGRReg(uint,uint,uint)
ApplePMGR::writeReg32(ApplePMGR::RegMap,uint,uint,uint)
ApplePMGR::writeReg32(ApplePMGR::RegMap,uint,uint,uint)
ApplePMGR::writeReg64(ApplePMGR::RegMap,uint,ulong long,uint)
ApplePMGR::writeReg64(ApplePMGR::RegMap,uint,ulong long,uint)
ApplePMGRFunctionAssertReset::assertReset(bool)
ApplePMGRFunctionAssertReset::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionCLPCEnabled::callFunction(void *,void *,void *)
ApplePMGRFunctionCPUIdle::callFunction(void *,void *,void *)
ApplePMGRFunctionCPUIdle::callFunction(void *,void *,void *)
ApplePMGRFunctionClockGate::callFunction(void *,void *,void *)
ApplePMGRFunctionClockGate::callFunction(void *,void *,void *)
ApplePMGRFunctionEnableCPUCore::callFunction(void *,void *,void *)
ApplePMGRFunctionEnableTouchClock::callFunction(void *,void *,void *)
ApplePMGRFunctionEnableTouchClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionEnableTouchClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionISPRefClock::callFunction(void *,void *,void *)
ApplePMGRFunctionISPRefClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionISPRefClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPDMClockBypass::callFunction(void *,void *,void *)
ApplePMGRFunctionPLLOffMode::callFunction(void *,void *,void *)
ApplePMGRFunctionPLLOffMode::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPLLOffMode::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPMPInterrupt::_callFunctionPMP(void *,void *,void *)
ApplePMGRFunctionPMPInterrupt::_callFunctionPMP(void *,void *,void *)
ApplePMGRFunctionPMPInterrupt::_callFunctionPMPv2(void *,void *,void *)
ApplePMGRFunctionPMPInterrupt::_callFunctionPMPv2(void *,void *,void *)
ApplePMGRFunctionPMPInterrupt::callFunction(void *,void *,void *)
ApplePMGRFunctionPMPInterrupt::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPMPInterrupt::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPerfCycleCount::callFunction(void *,void *,void *)
ApplePMGRFunctionPerfCycleCount::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionPowerGate::callFunction(void *,void *,void *)
ApplePMGRFunctionROSC::callFunction(void *,void *,void *)
ApplePMGRFunctionROSC::callFunction(void *,void *,void *)
ApplePMGRFunctionROSC::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionROSC::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionROSC::startRoscMeasurement(void)
ApplePMGRFunctionROSC::startRoscMeasurement(void)
ApplePMGRFunctionSEPSleepPrep::callFunction(void *,void *,void *)
ApplePMGRFunctionSetTouchClockSource::callFunction(void *,void *,void *)
ApplePMGRFunctionStartS2RTimer::callFunction(void *,void *,void *)
ApplePMGRFunctionUSBClock::callFunction(void *,void *,void *)
ApplePMGRFunctionUSBClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionUSBClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionVideoClock::callFunction(void *,void *,void *)
ApplePMGRFunctionVideoClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionVideoClock::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionWaitForDeviceEvent::callFunction(void *,void *,void *)
ApplePMGRFunctionWaitForDeviceEvent::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRFunctionWaitForDeviceEvent::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePMGRMTRSensor::ApplePMGRMTRSensor(ApplePMGR *,ApplePMGR::RegMap,uint,uint,uchar,uint)
ApplePMGRMTRSensor::_convertRegAddress(uint)
ApplePMGRMTRSensor::_readFuse(ApplePMGR::RegMap,uint,uint,uint)
ApplePMGRMTRSensor::roscDataInit(RoscData *,uint *)
ApplePMGRMTRSensor::roscDataInit(RoscData *,uint *)
ApplePMGRMTRSensor::temperaturePolynomApplyAll(void)
ApplePMGRMTRSensor::temperaturePolynomBinaryReorder(uint *,uint,bool)
ApplePMGRMTRSensor::temperaturePolynomBinaryReorder(uint *,uint,bool)
ApplePMGRMTRSensor::temperaturePolynomFromProperty(char const*,ApplePMGR::RegMap,uint)
ApplePMGRMTRSensor::temperaturePolynomFromProperty(char const*,ApplePMGR::RegMap,uint)
ApplePMGRMTRSensor::temperaturePolynomGetFromDouble(double const*,uint,uint *,int *)
ApplePMGRMTRSensor::temperaturePolynomGetFromDouble(double const*,uint,uint *,int *)
ApplePMGRMTRSensor::temperaturePolynomPublishAll(void)
ApplePMGRMTRSensor::temperaturePolynomSet(uint,uint,uint const*,uint)
ApplePMGRMTRSensor::temperaturePolynomSet(uint,uint,uint const*,uint)
ApplePMGRNub::MetaClass::alloc(void)
ApplePMGRNub::_enableDeviceStatusChangeNotifications(void)
ApplePMGRNub::_handleInterruptAll(IOInterruptEventSource *,int)
ApplePMGRNub::_notifyDeviceStatusChange(bool,void *,uint)
ApplePMGRNub::configBatteryReporting(OSObject *,void (*)(OSObject *,ulong long,uint *,uint),uint)
ApplePMGRNub::disablePTDEntryInterrupt(uint,uint)
ApplePMGRNub::disablePTDEntryInterrupt(uint,uint)
ApplePMGRNub::enableEnergyNodes(ulong long)
ApplePMGRNub::enableGpuSyncWin(uint)
ApplePMGRNub::enableLltLimit(bool,uint)
ApplePMGRNub::enableMtpClockSlowdown(bool)
ApplePMGRNub::enablePTDEntryInterrupt(uint,uint)
ApplePMGRNub::enablePTDEntryInterrupt(uint,uint)
ApplePMGRNub::getCPUPerfStateInfo(uint,uint,uint *,uint *,double *)
ApplePMGRNub::getDeviceHandle(OSSymbol const*,uint *)
ApplePMGRNub::getEnergyNodeCounter(uchar)
ApplePMGRNub::getEnergyNodeHandle(ApplePMGRNub::EnergyNode,uint,uint)
ApplePMGRNub::getEnergyNodeRefreshIntervalUS(uchar)
ApplePMGRNub::getEnergyNodeRegWidth(uchar)
ApplePMGRNub::getEnergyNodeScaleFactor(uchar)
ApplePMGRNub::getEventCount(uint)
ApplePMGRNub::getNumPTDRanges(uint &)
ApplePMGRNub::getPTDRangeInfo(uint,ApplePMGRNub::PTDRangeInfo &)
ApplePMGRNub::getPTDRangeInfo(uint,ApplePMGRNub::PTDRangeInfo &)
ApplePMGRNub::getPerfDomainHandle(OSSymbol const*,uint *)
ApplePMGRNub::getPerfDomainInfo(ApplePMGRNub::PerfDomain,uint)
ApplePMGRNub::getRawCPMEnergy(uint)
ApplePMGRNub::getRawCPUEnergy(uint)
ApplePMGRNub::getRawCurrentCPUEnergy(void)
ApplePMGRNub::initWithRegistryEntry(IORegistryEntry *,IOService *)
ApplePMGRNub::initWithRegistryEntry(IORegistryEntry *,IOService *)
ApplePMGRNub::message(uint,IOService *,void *)
ApplePMGRNub::readPTDEntry(uint,uint,ApplePMGRNub::PTDEntry &)
ApplePMGRNub::readPTDEntry(uint,uint,ApplePMGRNub::PTDEntry &)
ApplePMGRNub::requestCPUPerfState(uint,uint)
ApplePMGRNub::requestCPUPerfState(uint,uint)
ApplePMGRNub::requestCPUPerformance(uint,uint,uint,ApplePMGRNub::PerfLimitingReason)
ApplePMGRNub::restoreANEDPE(void)
ApplePMGRNub::setDeviceConstraint(uint,uint,uint)
ApplePMGRNub::startBatteryReporting(void)
ApplePMGRNub::stopBatteryReporting(void)
ApplePMGRNub::withRegistryEntry(IORegistryEntry *,IOService *)
ApplePMGRNub::writePTDEntry(uint,uint,ulong long)
ApplePMGRNub::writePTDEntry(uint,uint,ulong long)
ApplePMGRNub::~ApplePMGRNub()
ApplePMGRTempSensor::_setPowerStateGated(ulong,IOService *)
ApplePMGRTempSensor::_timeoutOccurredGated(OSObject *,IOTimerEventSource *)
ApplePMGRTempSensor::createTimerEvent(uint)
ApplePMGRTempSensor::disableAlarmInt(void)
ApplePMGRTempSensor::enableAlarmInt(uint)
ApplePMGRTempSensor::free(void)
ApplePMGRTempSensor::handleInterrupt(void *,IOService *,int)
ApplePMGRTempSensor::readInstantenousValue(void)
ApplePMGRTempSensor::rearm(uint)
ApplePMGRTempSensor::start(IOService *)
ApplePMGRTempSensor::tempLatest(void)
ApplePMGRToolsKernelException::_lockLock(void)
ApplePMGRToolsKernelException::tryEnd(void)
ApplePMP::MetaClass::alloc(void)
ApplePMP::_allocateEHubTimeSeriesBuffer(uint *,IOMemoryDescriptor **)
ApplePMP::_applyFastDieMitigationsGated(void)
ApplePMP::_configBatteryReport(OSObject *,void (*)(OSObject *,ulong long,uint *,uint),uint)
ApplePMP::_configSamplerCustomRegGated(void *,void *)
ApplePMP::_controlGated(uint *,ulong *)
ApplePMP::_createDVFSWatchdogTimer(void)
ApplePMP::_createDVFSWatchdogTimer(void)
ApplePMP::_disableBatteryReportGated(void)
ApplePMP::_disableFastDieControllerGated(void)
ApplePMP::_disablePMUTelemetryGated(void *)
ApplePMP::_disableSamplerGated(void *)
ApplePMP::_enableBatteryReport(void)
ApplePMP::_enableBatteryReportGated(void)
ApplePMP::_enableFastDieControllerGated(void)
ApplePMP::_enablePMUTelemetry(uint *,ulong long *,ulong long *)
ApplePMP::_enablePMUTelemetryGated(void *,void *,void *)
ApplePMP::_enableSamplerGated(void *,void *,void *)
ApplePMP::_fastDieMessageHandler(ulong long)
ApplePMP::_freeEHubTimeSeriesBuffer(IOMemoryDescriptor *)
ApplePMP::_getDVFSDomainName(ulong long)
ApplePMP::_getDVFSStateName(ulong long,ulong long)
ApplePMP::_getEHubTimeSeriesBufferIndex(IOMemoryDescriptor *,uint *)
ApplePMP::_getNumDVFSDomains(void)
ApplePMP::_getNumDVFSStates(ulong long,ulong long *,ulong long *,ulong long *)
ApplePMP::_initMemoryAckHandler(ulong long)
ApplePMP::_initMemoryAckHandler(ulong long)
ApplePMP::_messageHandler(void *,void *)
ApplePMP::_messageHandler(void *,void *)
ApplePMP::_pBattMessageHandler(ulong long)
ApplePMP::_pBattMessageHandler(ulong long)
ApplePMP::_pingGated(void *)
ApplePMP::_pmonMessageHandler(ulong long)
ApplePMP::_pmonMessageHandler(ulong long)
ApplePMP::_powerStateHandler(ulong,ulong)
ApplePMP::_powerStateHandlerGated(void *,void *,void *)
ApplePMP::_powerStateHandlerGated(void *,void *,void *)
ApplePMP::_readyMessageHandler(ulong long)
ApplePMP::_readyMessageHandler(ulong long)
ApplePMP::_sendEHubNodeCommand(uint,ulong long)
ApplePMP::_sendEHubNodeCommand(uint,ulong long)
ApplePMP::_sendEHubTimeSeriesCommand(uint,uint,IOMemoryDescriptor *,uint *)
ApplePMP::_sendEHubTimeSeriesCommand(uint,uint,IOMemoryDescriptor *,uint *)
ApplePMP::_sendPMCommand(uint *,ulong long *)
ApplePMP::_sendPMCommand(uint,ulong long,ulong long,ulong long,ulong long)
ApplePMP::_sendPMCommand(uint,ulong long,ulong long,ulong long,ulong long)
ApplePMP::_setDVFSStates(ulong long,ulong long,ulong long,ulong long,ulong long)
ApplePMP::_setDVFSStates(ulong long,ulong long,ulong long,ulong long,ulong long)
ApplePMP::_setFastDieLifeTimeServoTempTarget(int *)
ApplePMP::_setFastDieLifeTimeServoTempTargetGated(void *)
ApplePMP::_setPropertyGated(void *,void *,void *)
ApplePMP::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
ApplePMP::clpcPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
ApplePMP::setProperties(OSObject *)
ApplePMP::setProperties(OSObject *)
ApplePMP::start(IOService *)
ApplePMP::start(IOService *)
ApplePMPControlFunction::callFunction(void *,void *,void *)
ApplePMPEvent::MetaClass::alloc(void)
ApplePMPEvent::copyEvent(uint,IOHIDEvent *,uint)
ApplePMPEvent::dispatchEvent(ulong long,uint)
ApplePMPEvent::initWithProvider(IOService *,ApplePMPEvent::Event)
ApplePMPEvent::setProperty(OSSymbol const*,OSObject *)
ApplePMPEvent::withProvider(IOService *,ApplePMPEvent::Event)
ApplePMPFirmware::patchFirmware(RTBuddyFirmware *)
ApplePMPFirmware::start(IOService *)
ApplePMPFirmware::start(IOService *)
ApplePMPThermal::_get_rpmGated(void *)
ApplePMPThermal::_messageHandler(void *,void *)
ApplePMPThermal::_set_rpmGated(void *)
ApplePMPThermal::start(IOService *)
ApplePMPThermalUserClient::_getRPM(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPThermalUserClient::_setRPM(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPThermalUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
ApplePMPUserClient::_checkEntitlement(void)
ApplePMPUserClient::_fastDieControllerEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_fastDieControllerSetLifeTimeServoTempTarget(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getDVFSDomainName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getDVFSDomainName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getDVFSStateName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getDVFSStateName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getNumDVFSDomains(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getNumDVFSDomains(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getNumDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_getNumDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pBattDisable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pBattDisable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pBattEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pBattEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_ping(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_ping(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pmSendCommand(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pmuTelemetryDisable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pmuTelemetryDisable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pmuTelemetryEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_pmuTelemetryEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_samplerConfigCustomReg(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_samplerConfigCustomReg(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_samplerDisable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_samplerEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_samplerEnable(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_setDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_setDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_setProperty(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::_setProperty(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
ApplePMPUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
ApplePMPUserClient::start(IOService *)
ApplePMPUserClient::start(IOService *)
ApplePMPv2::ApplePMPv2(void)
ApplePMPv2::MetaClass::alloc(void)
ApplePMPv2::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
ApplePMPv2::findSlaveMemory(ulong long)
ApplePMPv2::getDVFSDomainName(ulong long)
ApplePMPv2::getDVFSStateName(ulong long,ulong long)
ApplePMPv2::getNumDVFSDomains(void)
ApplePMPv2::getNumDVFSStates(ulong long,ulong long *,ulong long *,ulong long *)
ApplePMPv2::handleMemAllocReq(ulong long)
ApplePMPv2::handleMemFreeReq(ulong long)
ApplePMPv2::handleMemInitReq(ulong long)
ApplePMPv2::handleMemMessage(ulong long)
ApplePMPv2::handlePMMessage(ulong long)
ApplePMPv2::handleRegistryAddEntryReq(ulong long)
ApplePMPv2::handleRegistryInitReq(ulong long)
ApplePMPv2::handleRegistrySetEntryReq(ulong long)
ApplePMPv2::messageHandler(void *,void *)
ApplePMPv2::messageHandler(void *,void *)
ApplePMPv2::pingGated(void *)
ApplePMPv2::probe(IOService *,int *)
ApplePMPv2::readConfigMemory(void)
ApplePMPv2::setDVFSStates(ulong long,ulong long,ulong long,ulong long,ulong long)
ApplePMPv2::setProperties(OSObject *)
ApplePMPv2::setRegistryEntry(OSSymbol const*,OSData const*)
ApplePMPv2::start(IOService *)
ApplePMPv2::writeDashboard(uint,ulong long)
ApplePMPv2::~ApplePMPv2()
ApplePMPv2RegistryEntry::ApplePMPv2RegistryEntry(OSMetaClass const*)
ApplePMPv2RegistryEntry::ApplePMPv2RegistryEntry(void)
ApplePMPv2RegistryEntry::MetaClass::alloc(void)
ApplePMPv2RegistryEntry::~ApplePMPv2RegistryEntry()
ApplePMPv2UserClient::checkEntitlement(void)
ApplePMPv2UserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
ApplePMPv2UserClient::getDVFSDomainName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::getDVFSStateName(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::getNumDVFSDomains(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::getNumDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::ping(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::setDVFSStates(OSObject *,void *,IOExternalMethodArguments *)
ApplePMPv2UserClient::start(IOService *)
ApplePMPv2UserClient::writeDashboard(OSObject *,void *,IOExternalMethodArguments *)
ApplePPM::ApplePPM(OSMetaClass const*)
ApplePPM::addDeviceTreeClientProperties(OSData *,OSData *,OSData *)
ApplePPM::addKernelClient(ApplePPMKernelClient *)
ApplePPM::addNewEntity(ApplePPMEntity *)
ApplePPM::addNewEntity(ApplePPMEntity *)
ApplePPM::addUserClient(ApplePPMUserClient *,UniqueClientID_t)
ApplePPM::admissionCheckOfValue(ApplePPMEntity *,uint,uint *)
ApplePPM::admissionCheckOfValue(UniqueClientID_t,uint,uint *)
ApplePPM::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
ApplePPM::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
ApplePPM::configureClientReport(IOReportChannelList *,uint,void *,void *)
ApplePPM::configureReport(IOReportChannelList *,uint,void *,void *)
ApplePPM::createAndAddEntity(ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPM::createAndAddEntity(ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPM::createEntity(ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPM::getClientPropertiesArrayIndex(UniqueClientID_t)
ApplePPM::getClientPropertiesArrayIndex(char const*,uint)
ApplePPM::getDTPropertyArray(char const*,uint **,uint *)
ApplePPM::getEntityFromClientId(UniqueClientID_t)
ApplePPM::getObjectIndexFromEntityArray(ApplePPMEntity *)
ApplePPM::getObjectIndexFromEntityArray(ApplePPMEntity *)
ApplePPM::getTGraphClientData(ApplePPMTGraphClientData **)
ApplePPM::gettGraphClientIndex(UniqueClientID_t)
ApplePPM::informLogger(ulong long)
ApplePPM::informPowerlogOfAdmissionCheck(void)
ApplePPM::initLocal(IOService *)
ApplePPM::initLocal(IOService *)
ApplePPM::mapClientAndEntity(OSObject *,bool)
ApplePPM::mapClientAndEntity(OSObject *,bool)
ApplePPM::policyInputUpdateInterruptHandler(IOInterruptEventSource *,int)
ApplePPM::pushTelemetry(OSDictionary *,UniqueClientID_t)
ApplePPM::pushTelemetry(OSDictionary *,UniqueClientID_t)
ApplePPM::removeEntity(ApplePPMEntity *)
ApplePPM::removeEntity(ApplePPMEntity *)
ApplePPM::removePPMUserClientByClientId(UniqueClientID_t)
ApplePPM::runPolicyAndUpdateClients(ApplePPMEntity *,bool,bool)
ApplePPM::sendTGraphPacket(void)
ApplePPM::setBattModelParams(ParamRC const*)
ApplePPM::setBatteryModelSystemCapability(PowerLevelProfile *)
ApplePPM::setBudget(ApplePPMEntity *,uint)
ApplePPM::setBudget(ApplePPMEntity *,uint)
ApplePPM::setBudget(UniqueClientID_t,uint)
ApplePPM::setEnableAutoControl(bool)
ApplePPM::setPropertiesGated(OSObject *)
ApplePPM::signalPolicyInputChange(void)
ApplePPM::start(IOService *)
ApplePPM::start(IOService *)
ApplePPM::startActivity(ApplePPMEntity *,uint)
ApplePPM::startActivity(ApplePPMEntity *,uint)
ApplePPM::startActivity(UniqueClientID_t,uint)
ApplePPM::stop(IOService *)
ApplePPM::stopActivity(ApplePPMEntity *)
ApplePPM::stopActivity(ApplePPMEntity *)
ApplePPM::stopActivity(UniqueClientID_t)
ApplePPM::tGraphSyncTimeoutHandler(IOTimerEventSource *)
ApplePPM::updateActiveEntityList(ApplePPMEntity *)
ApplePPM::updateActiveEntityList(ApplePPMEntity *)
ApplePPM::updateClientReport(IOReportChannelList *,uint,void *,void *)
ApplePPM::updateControlEfforts(float,float)
ApplePPM::updateDebuggingProperties(void)
ApplePPM::updateReport(IOReportChannelList *,uint,void *,void *)
ApplePPMARMFunction::callFunction(void *,void *,void *)
ApplePPMARMFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePPMBatteryModel::getBatteryAgingEnableFlag(void)
ApplePPMBatteryModel::isFallbackRequired(void)
ApplePPMBatteryModel::lockRCRWLockForWrite(void)
ApplePPMBatteryPowerMeasurement::getMaxPowerInSubWindow(void)
ApplePPMBatteryPowerMeasurement::getMovingAveragePower(void)
ApplePPMBatteryPowerMeasurement::initWithParent(ApplePPM *)
ApplePPMBatteryPowerMeasurement::setLatestPower(uint,int)
ApplePPMBatteryPowerMeasurement::setSubWindowSize(uint)
ApplePPMCPMS::AppleBTMArrivalHandler(void *,IOService *,IONotifier *)
ApplePPMCPMS::AppleDieTempControllerArrivalHandler(void *,IOService *,IONotifier *)
ApplePPMCPMS::MetaClass::alloc(void)
ApplePPMCPMS::_smcInterfaceArrivalHandler(void *,IOService *,IONotifier *)
ApplePPMCPMS::batteryCallbackEventHandler(IOInterruptEventSource *,int)
ApplePPMCPMS::cacheCurrentStateSnapshotRing(CPMSPPMControlStateSnapshotReason)
ApplePPMCPMS::configPowerConsumptionSampling(void)
ApplePPMCPMS::configureClientReport(IOReportChannelList *,uint,void *,void *)
ApplePPMCPMS::createEntity(ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPMCPMS::droopNotificationEventHandler(IOInterruptEventSource *,int)
ApplePPMCPMS::droopNotificationFunction(bool)
ApplePPMCPMS::getCPMSControlState(CPMSPPMControlState *,uint *)
ApplePPMCPMS::getClientState(UniqueClientID_t,CPMSPPMClientState *)
ApplePPMCPMS::getOverrideFlags(void)
ApplePPMCPMS::getPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMCPMS::getPreThrottleTableCount(void)
ApplePPMCPMS::handleLowerLayerUpdate(DetailedThermalBudgets *,float *)
ApplePPMCPMS::handlePMUBatteryPowerConsumptionData(uint *)
ApplePPMCPMS::handlePMUControlEffortData(uint *)
ApplePPMCPMS::initLocal(IOService *)
ApplePPMCPMS::initialBatteryPowerConsumptionSetup(IOInterruptEventSource *,int)
ApplePPMCPMS::policyInputUpdateInterruptHandler(IOInterruptEventSource *,int)
ApplePPMCPMS::powerReport(uint *)
ApplePPMCPMS::powerReportCallback(OSObject *,ulong long,uint *,uint)
ApplePPMCPMS::removePPMUserClientByClientId(UniqueClientID_t)
ApplePPMCPMS::requestPowerBudget(CPMSPPMPowerBudget *,CPMSPPMPowerBudget *)
ApplePPMCPMS::requestPowerBudgetGated(CPMSPPMPowerBudget *,CPMSPPMPowerBudget *)
ApplePPMCPMS::sendBudgetUpdateToSMC(uint)
ApplePPMCPMS::setDetailedThermalBudgets(DetailedThermalBudgets *)
ApplePPMCPMS::setDetailedThermalPowerBudgetsGated(DetailedThermalBudgets *)
ApplePPMCPMS::setPowerBudget(CPMSPPMPowerBudget *)
ApplePPMCPMS::setPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMCPMS::smcTargetsUpdateEventHandler(IOInterruptEventSource *,int)
ApplePPMCPMS::triggerLogging(ulong long)
ApplePPMCPMS::triggerLoggingCallback(OSObject *,ulong long)
ApplePPMCPMS::updateClientReport(IOReportChannelList *,uint,void *,void *)
ApplePPMCPMS::updateKernelClientLegacyPPMAdapter(CPMSPPMPowerBudget *,DetailedThermalBudgetsForClient *)
ApplePPMCPMS::updatePMUVoltageThreshold(uint)
ApplePPMCPMS::~ApplePPMCPMS()
ApplePPMCPMSDecisionTree::getCurveForClient(UniqueClientID_t,ApplePPMCPMSDecisionTreeCurve *)
ApplePPMCPMSDecisionTree::normalizedOutput(UniqueClientID_t,float)
ApplePPMCPMSDecisionTree::withParams(ApplePPMCPMSDecisionTreeCurve *,int)
ApplePPMCPMSMeasuredPowerHelper::updatePowerSample1sWindow(uint)
ApplePPMCPMSMeasuredPowerHelper::~ApplePPMCPMSMeasuredPowerHelper()
ApplePPMCPMSPeakPressureManager::initWithParams(ApplePPMPowerServo *,float *,float *,IOService *,void (*)(OSObject *,ulong long))
ApplePPMCPMSPeakPressureManager::initWithParams(ApplePPMPowerServo *,float *,float *,IOService *,void (*)(OSObject *,ulong long))
ApplePPMCPMSPeakPressureManager::withParams(ApplePPMPowerServo *,float *,float *,IOService *,void (*)(OSObject *,ulong long))
ApplePPMCPMSSystemCapabilityMonitor::ApplePPMCPMSSystemCapabilityMonitor(void)
ApplePPMCPMSSystemCapabilityMonitor::MetaClass::alloc(void)
ApplePPMCPMSSystemCapabilityMonitor::_asbArrivalHandler(void *,IOService *,IONotifier *)
ApplePPMCPMSSystemCapabilityMonitor::batterySamplingTimeoutHandler(IOTimerEventSource *)
ApplePPMCPMSSystemCapabilityMonitor::initFallbackTables(ApplePPM *)
ApplePPMCPMSSystemCapabilityMonitor::initWithParent(ApplePPM *)
ApplePPMCPMSSystemCapabilityMonitor::readBatteryInputFromASB(void)
ApplePPMCPMSSystemCapabilityMonitor::setCutoffVoltageAdjustments(float,float)
ApplePPMCPMSSystemCapabilityMonitor::signalBatteryModelInputChange(void)
ApplePPMCPMSSystemCapabilityMonitor::withParent(ApplePPM *)
ApplePPMCPMSTableDrivenBatteryModelFallBack::getValueForTemperatureAndSOC(int,uint)
ApplePPMCPMSTableDrivenBatteryModelFallBack::~ApplePPMCPMSTableDrivenBatteryModelFallBack()
ApplePPMDroopController::ApplePPMDroopController(void)
ApplePPMDroopController::droopControllerTrigger(bool)
ApplePPMDroopController::free(void)
ApplePPMDroopController::initWithParent(ApplePPM *)
ApplePPMDroopController::initWithParent(ApplePPM *)
ApplePPMDroopController::setControlParameter(uint,uint)
ApplePPMDroopController::startController(void)
ApplePPMDroopController::withParent(ApplePPM *)
ApplePPMDroopController::withParent(ApplePPM *)
ApplePPMEntity::budgetIndexForCarrots(float)
ApplePPMEntity::checkpointBudget(void)
ApplePPMEntity::copyClientProperties(void)
ApplePPMEntity::copyClientProperties(void)
ApplePPMEntity::dropClientEventTracepoint(uint,ulong,ulong,ulong,ulong)
ApplePPMEntity::getCurrentBudget(void)
ApplePPMEntity::getCurrentBudget(void)
ApplePPMEntity::getCurrentPowerLevel(void)
ApplePPMEntity::getCurrentPowerLevel(void)
ApplePPMEntity::getPowerLevelForBudget(uint)
ApplePPMEntity::getRequestedBudget(void)
ApplePPMEntity::getRequestedBudget(void)
ApplePPMEntity::handleAdmissionCheck(uint)
ApplePPMEntity::informClient(void)
ApplePPMEntity::init(ApplePPM *,ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPMEntity::initBudgetReporter(void)
ApplePPMEntity::isActive(void)
ApplePPMEntity::logCurrentPowerLevel(void)
ApplePPMEntity::lowestPowerBudgetValue(void)
ApplePPMEntity::populateTGraphClientData(ApplePPMTGraphClientData *)
ApplePPMEntity::pushTelemetry(OSDictionary *)
ApplePPMEntity::pushTelemetry(OSDictionary *)
ApplePPMEntity::releaseBudget(void)
ApplePPMEntity::revertToCheckpointedBudget(void)
ApplePPMEntity::updateEntityBudget(uint)
ApplePPMEntity::wouldBeActiveAtBudgetIndex(int)
ApplePPMEntity::wouldBeActiveAtBudgetIndex(int)
ApplePPMEntityBaseband::ApplePPMEntityBaseband(OSMetaClass const*)
ApplePPMEntityBaseband__init_ApplePPM___ApplePPMClientProperties
ApplePPMEntityCLPC::ApplePPMEntityCLPC(void)
ApplePPMEntityCLPC::MetaClass::alloc(void)
ApplePPMEntityCLPC::budgetToIndex(uint)
ApplePPMEntityCLPC::handleAdmissionCheck(uint)
ApplePPMEntityCLPC::informClient(void)
ApplePPMEntityCLPC::init(ApplePPM *,ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPMEntityCLPC::setBudgetIndex(int)
ApplePPMEntityCLPC::updateEntityBudget(uint)
ApplePPMEntityCLPC::withParentAndClientProperties(ApplePPM *,ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPMEntityCLPC::withParentAndClientProperties(ApplePPM *,ApplePPMClientProperties *,ApplePPMKernelClient *)
ApplePPMKernelClient::activityStartedWithValue(uint,uint)
ApplePPMKernelClient::activityStopped(uint)
ApplePPMKernelClient::activityStoppedWithValue(uint,uint)
ApplePPMKernelClient::admissionCheckWithValue(uint,uint,uint *)
ApplePPMKernelClient::endInteraction(void)
ApplePPMKernelClient::getEntityForClientId(uchar)
ApplePPMKernelClient::getEntityForClientId(uchar)
ApplePPMKernelClient::getEntityForSubclientIndex(int)
ApplePPMKernelClient::getEntityForSubclientIndex(int)
ApplePPMKernelClient::pushTelemetry(uint,OSDictionary *)
ApplePPMKernelClient::setBudgetWithValue(uint,uint,uint)
ApplePPMKernelClient::withParentAndClient(ApplePPM *,IOService *,ApplePPMKernelClient::ClientInfoData *)
ApplePPMNormalizedResidencyReporter::initWith(IOService *,int,ulong long *,char const*)
ApplePPMNormalizedResidencyReporter::setState(float)
ApplePPMNormalizedResidencyReporter::with(IOService *,ulong long,char const*)
ApplePPMPTDManager::ApplePPMPTDManager(void)
ApplePPMPTDManager::MetaClass::alloc(void)
ApplePPMPTDManager::flowControlTimeoutHandler(IOTimerEventSource *)
ApplePPMPTDManager::updateClientPowerConsumption(UniqueClientID_t,uint)
ApplePPMPTDManager::withParams(ApplePMGRNub *,IOService *,void (*)(OSObject *,DetailedThermalBudgets *,float *),void (*)(OSObject *,ulong long))
ApplePPMPolicy::ApplePPMPolicy(void)
ApplePPMPolicy::MetaClass::alloc(void)
ApplePPMPolicy::initWithParams(void)
ApplePPMPolicy::initWithParams(void)
ApplePPMPolicy::releaseClients(OSSet *,ApplePPMEntity *,PowerLevelProfile *)
ApplePPMPolicy::setControlParameter(uint,uint)
ApplePPMPolicy::throttleClients(OSSet *,ApplePPMEntity *,PowerLevelProfile *)
ApplePPMPolicy::updateEntityBudgets(OSSet *,ApplePPMEntity *,PowerLevelProfile *)
ApplePPMPolicy::updateEntityBudgets(OSSet *,ApplePPMEntity *,PowerLevelProfile *)
ApplePPMPolicy::withParams(void)
ApplePPMPolicy::~ApplePPMPolicy()
ApplePPMPolicyCPMS::ApplePPMPolicyCPMS(OSMetaClass const*)
ApplePPMPolicyCPMS::ackClientBudget(CPMSPPMPowerBudgetAck *)
ApplePPMPolicyCPMS::checkDeadlineAndUpdateMostRecentTs(UniqueClientID_t,CPMSPPMTimeScale)
ApplePPMPolicyCPMS::configureReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMS::configureReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMS::constructLanes(ApplePPMCPMSLaneEDT *,int,ApplePPMCPMSDecisionTreeCurveEDT *,int)
ApplePPMPolicyCPMS::deregisterCPMSClient(UniqueClientID_t)
ApplePPMPolicyCPMS::getClientBudgetForGeneralControlEfforts(UniqueClientID_t,int *,float *)
ApplePPMPolicyCPMS::getClientGrantedBudget(UniqueClientID_t,CPMSPPMPowerBudget *)
ApplePPMPolicyCPMS::getClientGrantedBudget(UniqueClientID_t,CPMSPPMPowerBudget *)
ApplePPMPolicyCPMS::getClientRequestedBudget(UniqueClientID_t,CPMSPPMPowerBudget *)
ApplePPMPolicyCPMS::getClientRequestedBudget(UniqueClientID_t,CPMSPPMPowerBudget *)
ApplePPMPolicyCPMS::getClientResolvedBudget(UniqueClientID_t,uint *)
ApplePPMPolicyCPMS::getClientThermalBudget(UniqueClientID_t)
ApplePPMPolicyCPMS::initWithParams(ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMS::initWithParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMS::initWithParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMS::registerCPMSClient(CPMSPPMClientDescription *)
ApplePPMPolicyCPMS::reportLaneEngagementState(void)
ApplePPMPolicyCPMS::requestPowerBudget(CPMSPPMPowerBudget *)
ApplePPMPolicyCPMS::resetClientUpdateTimestamps(UniqueClientID_t)
ApplePPMPolicyCPMS::runPolicy(void)
ApplePPMPolicyCPMS::setControlParameter(uint,OSArray *)
ApplePPMPolicyCPMS::setControlParameter(uint,uint)
ApplePPMPolicyCPMS::setDetailedThermalPowerBudget(DetailedThermalBudget *)
ApplePPMPolicyCPMS::setDetailedThermalPowerBudgets(DetailedThermalBudgets *)
ApplePPMPolicyCPMS::setDetailedThermalPowerBudgets(DetailedThermalBudgets *)
ApplePPMPolicyCPMS::setSystemCapability(int *,int)
ApplePPMPolicyCPMS::updateReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMSPowerServo::ApplePPMPolicyCPMSPowerServo(OSMetaClass const*)
ApplePPMPolicyCPMSPowerServo::ApplePPMPolicyCPMSPowerServo(void)
ApplePPMPolicyCPMSPowerServo::MetaClass::alloc(void)
ApplePPMPolicyCPMSPowerServo::advanceServos(uint *)
ApplePPMPolicyCPMSPowerServo::configureReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMSPowerServo::controlEffortForLane(int)
ApplePPMPolicyCPMSPowerServo::copyFusionGains(void)
ApplePPMPolicyCPMSPowerServo::copyPowerServoControlEfforts(void)
ApplePPMPolicyCPMSPowerServo::copyPowerServoGains(void)
ApplePPMPolicyCPMSPowerServo::copyPowerServoIntegratorMinimums(void)
ApplePPMPolicyCPMSPowerServo::createPowerServo(CPMSPPMLaneInput,float,float)
ApplePPMPolicyCPMSPowerServo::createPowerServo(CPMSPPMLaneInput,float,float)
ApplePPMPolicyCPMSPowerServo::getClientBudget(UniqueClientID_t,int *)
ApplePPMPolicyCPMSPowerServo::getPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMPolicyCPMSPowerServo::getPreThrottleTableSize(int)
ApplePPMPolicyCPMSPowerServo::getUnDroopControlEffort(void)
ApplePPMPolicyCPMSPowerServo::getUnDroopIntegratorState(void)
ApplePPMPolicyCPMSPowerServo::initWithParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long),void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSPowerServo::runPolicy(void)
ApplePPMPolicyCPMSPowerServo::setControlParameter(uint,uint)
ApplePPMPolicyCPMSPowerServo::setPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMPolicyCPMSPowerServo::setupPowerServoIntegratorMinimums(OSData *)
ApplePPMPolicyCPMSPowerServo::updateReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMSPowerServo::withParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long),void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSPowerServo::~ApplePPMPolicyCPMSPowerServo()
ApplePPMPolicyCPMSPowerServoLowerLayerCEs::MetaClass::alloc(void)
ApplePPMPolicyCPMSPowerServoLowerLayerCEs::createPowerServo(CPMSPPMLaneInput,float,float)
ApplePPMPolicyCPMSPowerServoLowerLayerCEs::initWithParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long),void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSPowerServoLowerLayerCEs::updateLowerLayerControlEfforts(float *)
ApplePPMPolicyCPMSZeroSum::MetaClass::alloc(void)
ApplePPMPolicyCPMSZeroSum::configureReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMSZeroSum::getAllowPolicyRun(void)
ApplePPMPolicyCPMSZeroSum::getClientBudgetForControlEffort(UniqueClientID_t,int *,float)
ApplePPMPolicyCPMSZeroSum::getZeroSumControlEffort(void)
ApplePPMPolicyCPMSZeroSum::initWithParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSZeroSum::setControlParameter(uint,OSArray *)
ApplePPMPolicyCPMSZeroSum::setControlParameter(uint,OSArray *)
ApplePPMPolicyCPMSZeroSum::setControlParameter(uint,uint)
ApplePPMPolicyCPMSZeroSum::updateReport(IOReportChannelList *,uint,void *,void *)
ApplePPMPolicyCPMSZeroSum::withParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSZeroSum::withParams(IOService *,ApplePPMEDTData *,void (*)(OSObject *,ulong long))
ApplePPMPolicyCPMSZeroSum::~ApplePPMPolicyCPMSZeroSum()
ApplePPMPowerServo::getGains(float *,float *,float *)
ApplePPMPowerServo::getGains(float *,float *,float *)
ApplePPMPowerServo::initWithParams(int,BatteryPowerConsumptionFilterTau,float,float,int)
ApplePPMPowerServo::initWithParams(int,BatteryPowerConsumptionFilterTau,float,float,int)
ApplePPMPowerServo::withParams(int,BatteryPowerConsumptionFilterTau,float,float,int)
ApplePPMPrethrottleTable::getTable(CPMSPreThrottleTable *)
ApplePPMPrethrottleTable::setTable(CPMSPreThrottleTable const*)
ApplePPMSystemCapabilityMonitor::ApplePPMSystemCapabilityMonitor(OSMetaClass const*)
ApplePPMSystemCapabilityMonitor::_asbArrivalHandler(void *,IOService *,IONotifier *)
ApplePPMSystemCapabilityMonitor::batterySamplingTimeoutHandler(IOTimerEventSource *)
ApplePPMSystemCapabilityMonitor::fastBatteryInterruptHandler(IOInterruptEventSource *,int)
ApplePPMSystemCapabilityMonitor::getTemperatureFromBatteryDict(OSDictionary *,float *)
ApplePPMSystemCapabilityMonitor::getUseOverrideBatteryInputs(void)
ApplePPMSystemCapabilityMonitor::handleBatteryUpdateCallback(void *,uint,IOService *,void *,ulong)
ApplePPMSystemCapabilityMonitor::initWithParent(ApplePPM *)
ApplePPMSystemCapabilityMonitor::reset(void)
ApplePPMSystemCapabilityMonitor::setBatteryModelParams(ParamRC const*)
ApplePPMSystemCapabilityMonitor::setOverrideBatteryParameterArray(uint,OSArray *)
ApplePPMSystemCapabilityMonitor::setOverrideBatteryParameterScalar(uint,int)
ApplePPMSystemCapabilityMonitor::startSystemCapabilityMonitor(void)
ApplePPMUserClient::MetaClass::alloc(void)
ApplePPMUserClient::ackClientBudget(CPMSPPMPowerBudgetAck *)
ApplePPMUserClient::admissionCheckOfValue(UniqueClientID_t,uint,uint *)
ApplePPMUserClient::associateClientId(UniqueClientID_t)
ApplePPMUserClient::associateClientId(UniqueClientID_t)
ApplePPMUserClient::cleanUpPPMUserClient(void)
ApplePPMUserClient::clientClose(void)
ApplePPMUserClient::dissociateClientId(UniqueClientID_t)
ApplePPMUserClient::dissociateClientId(UniqueClientID_t)
ApplePPMUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
ApplePPMUserClient::getAssociatedClientId(void)
ApplePPMUserClient::getCPMSBatteryPmaxState(CPMSPPMBatteryPmaxData *)
ApplePPMUserClient::getCPMSControlState(CPMSPPMControlState *,uint *)
ApplePPMUserClient::getClientCurrentPowerConsumption(UniqueClientID_t,ulong long *)
ApplePPMUserClient::getClientState(UniqueClientID_t,CPMSPPMClientState *)
ApplePPMUserClient::getPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMUserClient::initWithTask(task *,void *,uint,OSDictionary *)
ApplePPMUserClient::initWithTask(task *,void *,uint,OSDictionary *)
ApplePPMUserClient::isCPMSPPMPowerBudgetWellFormed(CPMSPPMPowerBudget *)
ApplePPMUserClient::openUserClient(UniqueClientID_t)
ApplePPMUserClient::pushTelemetry(UserClientTelemetryDict *)
ApplePPMUserClient::registerClient(CPMSPPMClientDescription *)
ApplePPMUserClient::requestPowerBudget(CPMSPPMPowerBudget *,CPMSPPMPowerBudget *)
ApplePPMUserClient::sAckClientBudget(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sAdmissionCheckOfValue(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sCloseUserClient(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sGetCPMSBatteryPmaxState(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sGetClientCurrentPowerConsumption(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sGetClientState(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sGetPreThrottleTable(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sOpenUserClient(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sPushTelemetry(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sRegisterClient(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sRequestPowerBudget(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetBattModelParams(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetBudget(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetClientCurrentPowerConsumption(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetDebugFlag(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetDetailedThermalBudgets(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetEnableAutoControl(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetPowerBudget(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sSetPreThrottleTable(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sStartActivity(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::sStopActivity(OSObject *,void *,IOExternalMethodArguments *)
ApplePPMUserClient::setBattModelParams(ParamRC *)
ApplePPMUserClient::setBudget(UniqueClientID_t,uint)
ApplePPMUserClient::setClientCurrentPowerConsumption(CPMSPPMPowerBudget *)
ApplePPMUserClient::setDebugFlag(uint)
ApplePPMUserClient::setDetailedThermalBudgets(DetailedThermalBudgets *)
ApplePPMUserClient::setEnableAutoControl(bool)
ApplePPMUserClient::setPowerBudget(CPMSPPMPowerBudget *)
ApplePPMUserClient::setPreThrottleTable(int,CPMSPreThrottleTable *)
ApplePPMUserClient::start(IOService *)
ApplePPMUserClient::startActivity(UniqueClientID_t,uint)
ApplePPMUserClient::stop(IOService *)
ApplePPMUserClient::stopActivity(UniqueClientID_t)
ApplePTD::_disableIrq(void *,uint)
ApplePTD::_disableIrq(void *,uint)
ApplePTD::_enableIrq(void *,uint)
ApplePTD::_enableIrq(void *,uint)
ApplePTD::_irqStatus(void *)
ApplePTD::_irqStatus(void *)
ApplePTD::_readPTD(void *,uint,ApplePTD::Entry *)
ApplePTD::_readPTD(void *,uint,ApplePTD::Entry *)
ApplePTD::_setIrq(void *,uint,uint)
ApplePTD::_setIrq(void *,uint,uint)
ApplePTD::_writePTD(void *,uint,ulong long)
ApplePTD::_writePTD(void *,uint,ulong long)
AppleParadeDP825::~AppleParadeDP825()
ApplePearlCamQMsgFunction::callFunction(void *,void *,void *)
ApplePearlCamQMsgFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
ApplePearlSEPDriver::analyticsRequestTemplateInfo(void)
ApplePearlSEPDriver::aopDriverMatchingNotificationHandler(void *,IOService *)
ApplePearlSEPDriver::checkCameraState(uint)
ApplePearlSEPDriver::enrollmentTimeoutHandler(IOTimerEventSource *)
ApplePearlSEPDriver::enumPearlCamErrorCodeToString(PearlCamErrorCode)
ApplePearlSEPDriver::free(void)
ApplePearlSEPDriver::getCamIORegPropertyWithTimeout(char const*)
ApplePearlSEPDriver::handleCommandModeSwitch(command_mode_t)
ApplePearlSEPDriver::isCombinedSequenceInternalAutoEnabled(void)
ApplePearlSEPDriver::loggingFramesDisable(void)
ApplePearlSEPDriver::loggingIsInternal(void)
ApplePearlSEPDriver::passcodeValidated(lock_state_data_v1_t)
ApplePearlSEPDriver::releaseCamera(void)
ApplePearlSEPDriver::sendFaceDetectResultToClients(void)
ApplePearlSEPDriver::sendLockStateToClients(lock_state_data_v1_t)
ApplePearlSEPDriver::switchCameraState(camera_state_t)
ApplePearlUserClient::clientClose(void)
ApplePearlUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
ApplePearlUserClient::extPerform(ApplePearlSEPDriver *,void *,IOExternalMethodArguments *)
ApplePearlUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
ApplePearlUserClient::initWithTask(task *,void *,uint,OSDictionary *)
ApplePearlUserClient::start(IOService *)
ApplePhotonDetector::getGain(uchar *,uchar *)
AppleProResHW::MetaClass::alloc(void)
AppleProResHW::~AppleProResHW()
AppleProxAnalyticsReporter::handleDailyAnalyticsPacket(DopplerDailyAnalyticsPacket_t const*)
AppleProxAnalyticsReporter::reportDailyActiveModeEvent(DopplerDailyAnalyticsPacket_t const*)
AppleProxAnalyticsReporter::reportDailyResidencyEvents(DopplerDailyAnalyticsPacket_t const*)
AppleProxAnalyticsReporter::reportOnHeadEvent(DopplerAnalyticsOnHeadPacket_t const*)
AppleProxAnalyticsReporter::reportPocketModeClientEvents(DopplerDailyAnalyticsPacket_t const*)
AppleProxAnalyticsReporter__free
AppleProxHIDEventDriver::free(void)
AppleProxHIDEventDriver::getReport(DopplerFeatureReport *,ulong *,IOHIDReportType,uint)
AppleProxHIDEventDriver::getReportGated(uchar *,ulong *,IOHIDReportType,uint)
AppleProxHIDEventDriver::init(OSDictionary *)
AppleProxHIDEventDriver::loadCalibration(void)
AppleProxHIDEventDriver::printPacket(char const*,uchar *,ulong)
AppleProxHIDEventDriver::setReport(DopplerFeatureReport *,ulong,IOHIDReportType,uint)
AppleProxHIDEventDriver::setReportGated(uchar *,ulong,IOHIDReportType,uint)
AppleProxHIDEventDriver::start(IOService *)
AppleProxHIDEventDriver::stop(IOService *)
AppleR5IOPT8006::AppleR5IOPT8006(void)
AppleR5IOPT8006::MetaClass::alloc(void)
AppleR5IOPT8006::_disablePower(void)
AppleR5IOPT8006::_enableInboxInterrupt(bool)
AppleR5IOPT8006::_enableOutboxInterrupt(bool)
AppleR5IOPT8006::_getInboxEmpty(void)
AppleR5IOPT8006::_getOutboxEmpty(void)
AppleR5IOPT8006::enablePower(void)
AppleR5IOPT8006::getMailboxBulk(void *,uint *)
AppleR5IOPT8006::getMailboxBulk(void *,uint *)
AppleR5IOPT8006::initialize(void)
AppleR5IOPT8006::initialize(void)
AppleR5IOPT8006::~AppleR5IOPT8006()
AppleS5L8920XFPWM::_stopPWM(uint,bool)
AppleS5L8920XFPWM::getPWMFrequency(void const*)
AppleS5L8920XFPWM::start(IOService *)
AppleS5L8920XFPWM::startPWM(void const*,ulong long,ulong long,bool)
AppleS5L8920XFPWM::stopPWM(void const*)
AppleS5L8920XPWM::_pulseInterruptOccurred(IOInterruptEventSource *,int)
AppleS5L8920XPWM::_stopPWM(uint,bool)
AppleS5L8920XPWM::configureReport(IOReportChannelList *,uint,void *,void *)
AppleS5L8920XPWM::getPWMCaptureTimestamp(void const*)
AppleS5L8920XPWM::getPWMFrequency(void const*)
AppleS5L8920XPWM::initPWMInputPulseSampler(void const*,void const*,char const*,IOHistogramSegmentConfig *)
AppleS5L8920XPWM::start(IOService *)
AppleS5L8920XPWM::startPWM(void const*,ulong long,ulong long,bool)
AppleS5L8920XPWM::startPWMCapture(void const*)
AppleS5L8920XPWM::startPWMInputPulseSampler(void const*)
AppleS5L8920XPWM::startPWMOutputPulseGenerator(void const*,ulong long,ulong long,bool)
AppleS5L8920XPWM::stopPWM(void const*)
AppleS5L8920XPWM::stopPWMCapture(void const*)
AppleS5L8920XPWM::stopPWMInputPulseSampler(void const*)
AppleS5L8920XPWM::stopPWMOutputPulseGenerator(void const*)
AppleS5L8920XPWM::updateReport(IOReportChannelList *,uint,void *,void *)
AppleS5L8940XI2CController::MetaClass::alloc(void)
AppleS5L8940XI2CController::_checkBusStatus(void)
AppleS5L8940XI2CController::_checkInterrupts(void)
AppleS5L8940XI2CController::_croak(char const*,char const*,bool)
AppleS5L8940XI2CController::_drainRxFifo(void)
AppleS5L8940XI2CController::_getTunable(char const*,I2cTunable *)
AppleS5L8940XI2CController::_initRegs(void)
AppleS5L8940XI2CController::_interruptAction(IOInterruptEventSource *,int)
AppleS5L8940XI2CController::_interruptFilter(IOFilterInterruptEventSource *)
AppleS5L8940XI2CController::_runInterruptMode(void)
AppleS5L8940XI2CController::_runPolledMode(void)
AppleS5L8940XI2CController::_runPolledModeProcessing(void)
AppleS5L8940XI2CController::_unjamBus(void)
AppleS5L8940XI2CController::_waitBusClockCycle(void)
AppleS5L8940XI2CController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleS5L8940XI2CController::executeIICCommand(AppleARMIICCommand *)
AppleS5L8940XI2CController::free(void)
AppleS5L8940XI2CController::setIICConfig(AppleARMIICConfig *)
AppleS5L8940XI2CController::setIICControllerActive(bool)
AppleS5L8940XI2CController::start(IOService *)
AppleS5L8960XGPIOIC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleS5L8960XGPIOIC::handleInterrupt(void *,IOService *,int)
AppleS5L8960XGPIOIC::initPinsAndGroups(uint,uint)
AppleS5L8960XGPIOIC::initVector(int,IOInterruptVector *)
AppleS5L8960XNCO::_setNCOFrequency(uint,uint,bool,bool)
AppleS5L8960XNCO::_writeNCOReg(uint,uint,uint)
AppleS5L8960XNCO::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleS5L8960XNCO::start(IOService *)
AppleS5L8960XNCOFrequencyFunction::callFunction(void *,void *,void *)
AppleS5L8960XUSBArbitrator::MetaClass::alloc(void)
AppleS5L8960XUSBArbitrator::free(void)
AppleS5L8960XUSBArbitrator::getPublishCriteriaGated(OSSymbol const*)
AppleS5L8960XUSBArbitrator::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleS5L8960XUSBArbitrator::start(IOService *)
AppleS5L8960XUSBPhy::enableDeviceMode(bool)
AppleS5L8960XUSBPhy::enableHostMode(bool)
AppleS5L8960XUSBPhy::free(void)
AppleS5L8960XUSBPhy::performJitterImprovemetSequence(void)
AppleS5L8960XUSBPhy::setOTGConnectionSpeed(AppleUSBPhy::tDeviceModeConnectionSpeed)
AppleS5L8960XUSBPhy::setPower(AppleUSBPhy::tPowerLevel)
AppleS5L8960XUSBPhy::start(IOService *)
AppleS8000AESAccelerator::MetaClass::alloc(void)
AppleS8000AESAccelerator::_completeAES(void)
AppleS8000AESAccelerator::_completeAES(void)
AppleS8000AESAccelerator::_configureAES(IOAESAcceleratorCommand *,uint)
AppleS8000AESAccelerator::_configureAES(IOAESAcceleratorCommand *,uint)
AppleS8000AESAccelerator::_enableAES(bool)
AppleS8000AESAccelerator::_interruptOccurred(IOInterruptEventSource *,int)
AppleS8000AESAccelerator::_keySelectionForHandle(uint)
AppleS8000AESAccelerator::_prepareTransfer(uint,uint,IODMACommand *,IODMACommand *,ulong long,ulong long,ulong long)
AppleS8000AESAccelerator::_push_command(void *,uint)
AppleS8000AESAccelerator::_push_command(void *,uint)
AppleS8000AESAccelerator::_push_command_dsb(uchar *,uchar *)
AppleS8000AESAccelerator::_push_command_key(uint,uint,uchar *,uchar *,bool)
AppleS8000AESAccelerator::_push_command_key(uint,uint,uchar *,uchar *,bool)
AppleS8000AESAccelerator::_space_available(uint)
AppleS8000AESAccelerator::disableHardwareKey(uint)
AppleS8000AESAccelerator::free(void)
AppleS8000AESAccelerator::performAESQuantum(IOAESAcceleratorCommand *)
AppleS8000AESAccelerator::performAESQuantum(IOAESAcceleratorCommand *)
AppleS8000AESAccelerator::start(IOService *)
AppleS8000AESAccelerator::start(IOService *)
AppleS8000AESAccelerator::stop(IOService *)
AppleS8000AESAccelerator::~AppleS8000AESAccelerator()
AppleS8000DWI::_waitTransaction(uint)
AppleS8000DWI::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleS8000DWI::sendVBUCK(uint,uint,uint,uint *)
AppleS8000DWIBacklightFunction::callFunction(void *,void *,void *)
AppleS8000DWIVoltageFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleS8000LPDPTXPHY::MetaClass::alloc(void)
AppleSARTMarconi::_makeRegion(ulong long,bool)
AppleSARTMarconi::_makeRegionBase(ulong long)
AppleSARTMarconi::_makeRegionBase(ulong long)
AppleSARTMarconi::start(IOService *)
AppleSCCTempSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleSCCTempSensor::free(void)
AppleSCCTempSensor::handleStart(IOService *)
AppleSEPARTRequests::_initForDeviceService(AppleSEPDeviceService *)
AppleSEPARTRequests::_msgAction(void *,void *)
AppleSEPARTRequests::_msgAction(void *,void *)
AppleSEPARTRequests::_msgSend(AppleSEPARTStorage::Opcode,uint *,AppleSEPMessage *)
AppleSEPARTRequests::_msgSend(AppleSEPARTStorage::Opcode,uint *,AppleSEPMessage *)
AppleSEPARTRequests::_msgSendInternal(AppleSEPARTStorage::Opcode *,uint *,AppleSEPMessage *)
AppleSEPARTRequests::_msgSendInternal(AppleSEPARTStorage::Opcode *,uint *,AppleSEPMessage *)
AppleSEPARTRequests::configure_in_buffer(void)
AppleSEPARTRequests::configure_out_buffer(void)
AppleSEPARTRequests::configure_out_buffer(void)
AppleSEPARTRequests::handle_first_connected(void)
AppleSEPARTRequestsService::start(IOService *)
AppleSEPARTRequestsService::start(IOService *)
AppleSEPARTService::_ensure_nvram_readable(void)
AppleSEPARTService::_ensure_nvram_readable(void)
AppleSEPARTService::_ensure_nvram_writable(void)
AppleSEPARTService::_ensure_nvram_writable(void)
AppleSEPARTService::clearART(void)
AppleSEPARTService::clearART(void)
AppleSEPARTService::getART(void)
AppleSEPARTService::getART(void)
AppleSEPARTService::setART(OSData const*)
AppleSEPARTService::setART(OSData const*)
AppleSEPARTService::start(IOService *)
AppleSEPARTService::start(IOService *)
AppleSEPARTStorage::_clearARTLocked(void)
AppleSEPARTStorage::_getCurrentARTLocked(OSData **)
AppleSEPARTStorage::_initForDeviceService(AppleSEPDeviceService *)
AppleSEPARTStorage::_msgAction(void *,void *)
AppleSEPARTStorage::_msgAction(void *,void *)
AppleSEPARTStorage::_msgSend(AppleSEPARTStorage::Opcode,uint *)
AppleSEPARTStorage::_msgSend(AppleSEPARTStorage::Opcode,uint *)
AppleSEPARTStorage::_msgSendInternal(AppleSEPARTStorage::Opcode *,uint *)
AppleSEPARTStorage::_msgSendInternal(AppleSEPARTStorage::Opcode *,uint *)
AppleSEPARTStorage::_setARTLocked(uchar const*,uchar const*)
AppleSEPARTStorage::captureSleepART(void)
AppleSEPARTStorage::captureSleepART(void)
AppleSEPARTStorage::clearART(void)
AppleSEPARTStorage::clearART(void)
AppleSEPARTStorage::commitHash(void)
AppleSEPARTStorage::commitHash(void)
AppleSEPARTStorage::configure_in_buffer(void)
AppleSEPARTStorage::configure_in_buffer(void)
AppleSEPARTStorage::configure_out_buffer(void)
AppleSEPARTStorage::configure_out_buffer(void)
AppleSEPARTStorage::counterSelfTest(ushort *,ushort *)
AppleSEPARTStorage::counterSelfTest(ushort *,ushort *)
AppleSEPARTStorage::fetch_persisted_art(void)
AppleSEPARTStorage::fetch_persisted_art(void)
AppleSEPARTStorage::find_firmware_manifest(AppleSEPFirmware *,void **,ulong *)
AppleSEPARTStorage::getCurrentART(OSData **)
AppleSEPARTStorage::getCurrentART(OSData **)
AppleSEPARTStorage::getCurrentNonce(OSData **)
AppleSEPARTStorage::getNewNonce(OSData **)
AppleSEPARTStorage::getNewNonce(OSData **)
AppleSEPARTStorage::handle_first_connected(void)
AppleSEPARTStorage::handle_first_connected(void)
AppleSEPARTStorage::invalidateNonce(void)
AppleSEPARTStorage::invalidateNonce(void)
AppleSEPARTStorage::persist_art(uchar const*,uchar const*,OSData **)
AppleSEPARTStorage::purgeSystemToken(void)
AppleSEPARTStorage::purgeSystemToken(void)
AppleSEPARTStorage::readNonce(void)
AppleSEPARTStorage::save_incoming_art(uchar const*,uchar const*)
AppleSEPARTStorage::save_incoming_art(uchar const*,uchar const*)
AppleSEPARTStorage::sepARTStorage(AppleSEPDeviceService *)
AppleSEPARTStorage::setART(uchar const*,uchar const*)
AppleSEPARTStorage::setART(uchar const*,uchar const*)
AppleSEPARTStorageService::start(IOService *)
AppleSEPARTStorageService::start(IOService *)
AppleSEPBooter::AppleSEPBooter(void)
AppleSEPBooter::MetaClass::alloc(void)
AppleSEPBooter::_bootAction(void *,void *)
AppleSEPBooter::_captureiBICKCV(void)
AppleSEPBooter::_timebaseUpdate(void)
AppleSEPBooter::_timebaseUpdate(void)
AppleSEPBooter::_waitForReply(uint)
AppleSEPBooter::bootSEP(AppleSEPFirmware *,bool,AppleSEPSharedMemoryBuffer *,bool)
AppleSEPBooter::bootSEP(AppleSEPFirmware *,bool,AppleSEPSharedMemoryBuffer *,bool)
AppleSEPBooter::generateROMNonce(uchar *,uint *)
AppleSEPBooter::generateROMNonce(uchar *,uint *)
AppleSEPBooter::getBootTimeout(void)
AppleSEPBooter::get_iBIC_KCV(uchar *,ulong)
AppleSEPBooter::get_iBIC_KCV(uchar *,ulong)
AppleSEPBooter::initForSEP(AppleSEPManager *)
AppleSEPBooter::queuePanicLogMessage(AppleSEPMessage const&)
AppleSEPBooter::romCommand(ulong long *)
AppleSEPBooter::romCommand(ulong long *)
AppleSEPBooter::sepBooter(AppleSEPManager *)
AppleSEPBooter::triggerRecoveryMode(void)
AppleSEPBooter::wakeSEPFast(void)
AppleSEPBooter::wakeSEPFast(void)
AppleSEPCommand::withOptions(AppleSEPCommandPool *)
AppleSEPCommandPool::_assignID(AppleSEPCommand *)
AppleSEPCommandPool::_initWithOptions(IOWorkLoop *,uint)
AppleSEPCommandPool::commandForID(uint)
AppleSEPCommandPool::commandForTag(uchar)
AppleSEPCommandPool::getCommand(AppleSEPCommand **,bool)
AppleSEPCommandPool::returnCommand(AppleSEPCommand *)
AppleSEPCommandPool::returnCommand(AppleSEPCommand *)
AppleSEPControl::_cmsgAction(void *,void *)
AppleSEPControl::_cmsgSET_DMA_CMD(uint *)
AppleSEPControl::_cmsgSET_DMA_CMD(uint *)
AppleSEPControl::_cmsgSend(AppleSEPMessage *,uint *,bool *)
AppleSEPControl::_cmsgSend(AppleSEPMessage *,uint *,bool *)
AppleSEPControl::_notifyActiveAsync(void *,void *)
AppleSEPControl::cmsgERASE_INSTALL(uint)
AppleSEPControl::cmsgL4_PANIC(uint,bool)
AppleSEPControl::cmsgNAP(void)
AppleSEPControl::cmsgNOP(uint)
AppleSEPControl::cmsgSECMODE_REQUEST(ulong long *,uint)
AppleSEPControl::cmsgSELF_TEST(ushort *,ushort *,uint)
AppleSEPControl::cmsgSEPOS_PANIC(uint,bool)
AppleSEPControl::cmsgSET_DMA_IN(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_DMA_IN(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_DMA_OUT(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_DMA_OUT(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_OOL_IN(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_OOL_IN(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSET_OOL_OUT(uchar,IOSlaveMemory *,uint)
AppleSEPControl::cmsgSLEEP(AppleSEPControl::SleepType,uint)
AppleSEPControl::cmsgTTYIN(char,uint)
AppleSEPControl::initForSEP(AppleSEPManager *)
AppleSEPControl::sepControl(AppleSEPManager *)
AppleSEPCoreBuffer::AppleSEPCoreBuffer(AppleSEPSharedMemoryBuffer *,bool)
AppleSEPCoreBuffer::_send_request(AppleSEPCoreBuffer::CoreInterfaceCommand)
AppleSEPCoreBuffer::attachOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPCoreBuffer::attachOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPCoreBuffer::coredump_init(void *)
AppleSEPCoreBuffer::coredump_init(void *)
AppleSEPCoreBuffer::coredump_save_segment_data(int (*)(void *,ulong long,void *),void *)
AppleSEPCoreBuffer::coredump_save_segment_data(int (*)(void *,ulong long,void *),void *)
AppleSEPCoreBuffer::coredump_save_segment_descriptions(int (*)(ulong long,ulong long,void *),void *)
AppleSEPCoreBuffer::coredump_save_summary(int (*)(ulong long,ulong long,ulong long,ulong long,ulong long,void *),void *)
AppleSEPCoreBuffer::coredump_save_summary(int (*)(ulong long,ulong long,ulong long,ulong long,ulong long,void *),void *)
AppleSEPDebug::_initBuffers(void)
AppleSEPDebug::_initBuffers(void)
AppleSEPDebug::_ioAction(void *,void *)
AppleSEPDebug::_msgSend(AppleSEPDebug::MsgDebugReq *,AppleSEPDebug::MsgDebugConfig *)
AppleSEPDebug::copyFromObject(uint,uint,uint &,void *)
AppleSEPDebug::copyToObject(uint,uint,uint &,void const*)
AppleSEPDebug::createObject(uint,uint,void const*)
AppleSEPDebug::dump_cov(uint)
AppleSEPDebug::procInfo(uint *,void *)
AppleSEPDebug::rng_dump_data(uint &,void *)
AppleSEPDebug::sepDebug(AppleSEPDeviceService *)
AppleSEPDebug::shareObject(uint,uint,void const*)
AppleSEPDebugArgs::_getDisableDramChecks(void)
AppleSEPDebugArgs::_getIbootTruthy(OSObject const*)
AppleSEPDebugArgs::_updateBuffer(void)
AppleSEPDebugArgs::_updateBuffer(void)
AppleSEPDebugArgs::initWithOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPDebugArgs::initWithOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPDebugArgs::testIbootTruthy(void)
AppleSEPDebugArgs::withOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPDebugService::start(IOService *)
AppleSEPDebugService::start(IOService *)
AppleSEPDeviceService::_init(discovery_endpoint_info_t const*,AppleSEPManager *)
AppleSEPDeviceService::_publish(void)
AppleSEPDeviceService::_publish(void)
AppleSEPDeviceService::allocateVisibleMemory(uint,ulong long,ulong long)
AppleSEPDeviceService::getEndpoint(OSObject *,void (*)(OSObject *,void *,void *),void *)
AppleSEPDeviceService::getEndpoint(OSObject *,void (*)(OSObject *,void *,void *),void *)
AppleSEPDeviceService::getPropertyForEpName(char *,ulong,uint)
AppleSEPDeviceService::getPropertyForEpName(char *,ulong,uint)
AppleSEPDeviceService::withInfo(discovery_endpoint_info_t const*,AppleSEPManager *)
AppleSEPDiscovery::_exposeNub(discovery_endpoint_info_t const*)
AppleSEPDiscovery::_exposeNub(discovery_endpoint_info_t const*)
AppleSEPDiscovery::_getEndpointInfoGated(void *,uint *)
AppleSEPDiscovery::_init(AppleSEPManager *)
AppleSEPDiscovery::_msgReceived(void *,void *)
AppleSEPDiscovery::_msgReceived(void *,void *)
AppleSEPDiscovery::getEndpointInfo(void *,uint *)
AppleSEPDiscovery::sepDiscovery(AppleSEPManager *)
AppleSEPEndpoint::MetaClass::alloc(void)
AppleSEPEndpoint::_clearOOL(IOSlaveMemory *,bool)
AppleSEPEndpoint::_initWithName(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint,uint)
AppleSEPEndpoint::allocateCommandPool(uint)
AppleSEPEndpoint::checkForWork(void)
AppleSEPEndpoint::enable(void)
AppleSEPEndpoint::enable(void)
AppleSEPEndpoint::endpointWithIndex(uint)
AppleSEPEndpoint::getCommandGate(void)
AppleSEPEndpoint::getCommandGate(void)
AppleSEPEndpoint::initWithOptions(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint)
AppleSEPEndpoint::initWithOptions(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint)
AppleSEPEndpoint::queueReceivedMessage(AppleSEPMessage &)
AppleSEPEndpoint::receiveMessage(void **,bool)
AppleSEPEndpoint::sendMessage(void *,void *,bool)
AppleSEPEndpoint::sendMessage(void *,void *,bool)
AppleSEPEndpoint::setReceiveOOLBuffer(IOSlaveMemory *)
AppleSEPEndpoint::setReceiveOOLBuffer(IOSlaveMemory *)
AppleSEPEndpoint::setSendOOLBuffer(IOSlaveMemory *)
AppleSEPEndpoint::setSendOOLBuffer(IOSlaveMemory *)
AppleSEPEndpoint::withOptions(AppleSEPManager *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint)
AppleSEPFirmware::AppleSEPFirmware(void)
AppleSEPFirmware::_copyInFirmware(IOMemoryDescriptor *)
AppleSEPFirmware::_copyInFirmware(IOMemoryDescriptor *)
AppleSEPFirmware::_initFromMemory(IOMemoryDescriptor *)
AppleSEPFirmware::_initFromPreload(void)
AppleSEPFirmware::_mapMemoryToSEP(void)
AppleSEPFirmware::_mapMemoryToSEP(void)
AppleSEPFirmware::_setupMemoryRegion(void)
AppleSEPFirmware::_setupMemoryRegion(void)
AppleSEPFirmware::fromMemory(IOMemoryDescriptor *,IOMapper *,AppleSEPFirmwarePayloadType)
AppleSEPFirmware::fromMemory(IOMemoryDescriptor *,IOMapper *,AppleSEPFirmwarePayloadType)
AppleSEPFirmware::fromPreload(IOMapper *,AppleSEPFirmwarePayloadType)
AppleSEPFirmware::mapFirmware(void)
AppleSEPFirmware::releaseFirmware(void)
AppleSEPFirmware::releaseFirmware(void)
AppleSEPGenericTransfer::disable(void)
AppleSEPGenericTransfer::enable(void)
AppleSEPGenericTransfer::enableEndpointContinuation(OSObject *,int)
AppleSEPGenericTransfer::getEndpoint(void)
AppleSEPHilo::_accumulateGated(void const**,hilo_bis_bpsp_t,hilo_opcode *)
AppleSEPHilo::_accumulateGated(void const**,hilo_bis_bpsp_t,hilo_opcode *)
AppleSEPHilo::_accumulateTestPatternGated(hilo_bis_bpsp_t)
AppleSEPHilo::_accumulateTestPatternGated(hilo_bis_bpsp_t)
AppleSEPHilo::_advanceGainRestrictionPhaseGated(void)
AppleSEPHilo::_allocateMappedBounceBuffer(AppleSEPManager *)
AppleSEPHilo::_allocateMappedBounceBuffer(AppleSEPManager *)
AppleSEPHilo::_calculateGainsAlphasAndBimsGated(AppleSEPHilo::hilo_gains_alphas_and_bims_args_t *)
AppleSEPHilo::_calculateGainsAlphasAndBimsGated(AppleSEPHilo::hilo_gains_alphas_and_bims_args_t *)
AppleSEPHilo::_checkGainTestPatternGated(hilo_gain_param_set_t)
AppleSEPHilo::_checkGainTestPatternGated(hilo_gain_param_set_t)
AppleSEPHilo::_cleanflushBounceBuffer(void)
AppleSEPHilo::_cleanflushBounceBuffer(void)
AppleSEPHilo::_getBounceBuffer(AppleSEPManager *)
AppleSEPHilo::_getBounceBuffer(AppleSEPManager *)
AppleSEPHilo::_getBounceBufferFromDeviceTree(void)
AppleSEPHilo::_getBounceBufferFromDeviceTree(void)
AppleSEPHilo::_getDisasterRecoveryLthBackupGated(void *,hilo_opcode *)
AppleSEPHilo::_getDisasterRecoveryLthBackupGated(void *,hilo_opcode *)
AppleSEPHilo::_getLthBackupGated(void *,hilo_opcode *)
AppleSEPHilo::_getLthBackupGated(void *,hilo_opcode *)
AppleSEPHilo::_getLthBackupIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_getLthBackupIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_getLthRawGated(void **,hilo_opcode *)
AppleSEPHilo::_getLthRawGated(void **,hilo_opcode *)
AppleSEPHilo::_getLthRawIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_getLthRawIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_getLthTransferAttestationGated(hilo_lth_transfer_key_attestation_v1_t *,hilo_opcode *)
AppleSEPHilo::_getLthTransferAttestationGated(hilo_lth_transfer_key_attestation_v1_t *,hilo_opcode *)
AppleSEPHilo::_getLthTransferMessageGated(AppleSEPHilo::hilo_get_lth_transfer_message_args_t *)
AppleSEPHilo::_getLthTransferMessageGated(AppleSEPHilo::hilo_get_lth_transfer_message_args_t *)
AppleSEPHilo::_getNumValidTiledBimTilesGated(uint *)
AppleSEPHilo::_getNumValidTiledBimTilesGated(uint *)
AppleSEPHilo::_getParamsFromSepGated(void)
AppleSEPHilo::_getParamsFromSepGated(void)
AppleSEPHilo::_getParamsGated(hilo_display_params_msg_t *)
AppleSEPHilo::_getParamsGated(hilo_display_params_msg_t *)
AppleSEPHilo::_hiloDisableAsync(void)
AppleSEPHilo::_hiloDisableAsyncGated(void)
AppleSEPHilo::_hiloEnableAsync(void)
AppleSEPHilo::_hiloEnableAsync(void)
AppleSEPHilo::_hiloEnableAsyncGated(void)
AppleSEPHilo::_hiloEnableAsyncGated(void)
AppleSEPHilo::_init(AppleSEPDeviceService *)
AppleSEPHilo::_init(AppleSEPDeviceService *)
AppleSEPHilo::_loadDisasterRecoveryLthBackupGated(void const*,hilo_opcode *)
AppleSEPHilo::_loadDisasterRecoveryLthBackupGated(void const*,hilo_opcode *)
AppleSEPHilo::_loadLthBackupGated(void const*,hilo_opcode *)
AppleSEPHilo::_loadLthBackupGated(void const*,hilo_opcode *)
AppleSEPHilo::_loadLthBackupIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_loadLthBackupIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_loadLthRawGated(void const**,hilo_opcode *)
AppleSEPHilo::_loadLthRawGated(void const**,hilo_opcode *)
AppleSEPHilo::_loadLthRawIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_loadLthRawIomdGated(IOMemoryDescriptor *)
AppleSEPHilo::_mapBounceBufferGated(ulong long,hilo_opcode *)
AppleSEPHilo::_mapBounceBufferGated(ulong long,hilo_opcode *)
AppleSEPHilo::_mapMemoryDescriptor(IOMemoryDescriptor *,ulong,bool,IOMemoryMap **,void **)
AppleSEPHilo::_mapMemoryDescriptor(IOMemoryDescriptor *,ulong,bool,IOMemoryMap **,void **)
AppleSEPHilo::_msgReceived(void *,void *)
AppleSEPHilo::_msgReceived(void *,void *)
AppleSEPHilo::_packMessageContent(ulong long,AppleSEPHilo::HiloMessage *)
AppleSEPHilo::_packMessageContent(ulong long,AppleSEPHilo::HiloMessage *)
AppleSEPHilo::_receiveData(void *,ulong,hilo_opcode,hilo_opcode*)
AppleSEPHilo::_receiveData(void *,ulong,hilo_opcode,hilo_opcode*)
AppleSEPHilo::_sendData(void const*,ulong,hilo_opcode,hilo_opcode*)
AppleSEPHilo::_sendData(void const*,ulong,hilo_opcode,hilo_opcode*)
AppleSEPHilo::_sendMessageGated(AppleSEPHilo::HiloMessage const*,hilo_opcode *)
AppleSEPHilo::_sendMessageGated(AppleSEPHilo::HiloMessage const*,hilo_opcode *)
AppleSEPHilo::_setGainParamSetGated(hilo_gain_param_set_t,hilo_opcode *)
AppleSEPHilo::_setGainParamSetGated(hilo_gain_param_set_t,hilo_opcode *)
AppleSEPHilo::_setupGainRestrictions(void)
AppleSEPHilo::_startOperationGated(bool)
AppleSEPHilo::_startOperationGated(bool)
AppleSEPHilo::_supportsDisasterRecoveryLthGated(bool *)
AppleSEPHilo::_supportsDisasterRecoveryLthGated(bool *)
AppleSEPHilo::_testLthTransferAttestationGated(uchar const*,hilo_opcode *)
AppleSEPHilo::_testLthTransferAttestationGated(uchar const*,hilo_opcode *)
AppleSEPHilo::_tryComputeGain(void)
AppleSEPHilo::_tryComputeGain(void)
AppleSEPHilo::_updateElapsedTimeGated(hilo_opcode *)
AppleSEPHilo::_updateElapsedTimeGated(hilo_opcode *)
AppleSEPHilo::accumulate(void const**,hilo_bis_bpsp_t)
AppleSEPHilo::accumulate(void const**,hilo_bis_bpsp_t)
AppleSEPHilo::accumulateTestPattern(hilo_bis_bpsp_t)
AppleSEPHilo::advanceGainRestrictionPhase(void)
AppleSEPHilo::calculateGainsAlphasAndBims(ushort **,double *,hilo_bim_v1_t *,hilo_tiled_bim_v1_t *)
AppleSEPHilo::disable(void)
AppleSEPHilo::enable(void)
AppleSEPHilo::getDisasterRecoveryLthBackup(void *)
AppleSEPHilo::getDisasterRecoveryLthBackupIomd(IOMemoryDescriptor *)
AppleSEPHilo::getLthBackup(void *)
AppleSEPHilo::getLthBackup(void *)
AppleSEPHilo::getLthBackupIomd(IOMemoryDescriptor *)
AppleSEPHilo::getLthTransferAttestation(hilo_lth_transfer_key_attestation_v1_t *)
AppleSEPHilo::getLthTransferMessage(uchar *,uchar const*,ulong,uchar const*,ulong)
AppleSEPHilo::getLthTransferMessage(uchar *,uchar const*,ulong,uchar const*,ulong)
AppleSEPHilo::getLthTransferMessageIomd(IOMemoryDescriptor *,IOMemoryDescriptor *,IOMemoryDescriptor *)
AppleSEPHilo::getNumValidTiledBimTiles(void)
AppleSEPHilo::getParams(hilo_display_params_msg_t *)
AppleSEPHilo::getParams(hilo_display_params_msg_t *)
AppleSEPHilo::loadDisasterRecoveryLthBackup(void const*)
AppleSEPHilo::loadDisasterRecoveryLthBackupIomd(IOMemoryDescriptor *)
AppleSEPHilo::loadLthBackup(void const*)
AppleSEPHilo::loadLthTransferMessage(uchar const*,ulong)
AppleSEPHilo::loadLthTransferMessage(uchar const*,ulong)
AppleSEPHilo::loadLthTransferMessageIomd(IOMemoryDescriptor *)
AppleSEPHilo::sepHilo(AppleSEPDeviceService *)
AppleSEPHilo::setGainParamSet(hilo_gain_param_set_t)
AppleSEPHilo::setGainParamSet(hilo_gain_param_set_t)
AppleSEPHilo::setGainRestriction(bool)
AppleSEPHilo::supportsDisasterRecoveryLth(void)
AppleSEPHilo::supportsDisasterRecoveryLth(void)
AppleSEPHilo::testLthTransferAttestation(uchar const*)
AppleSEPHilo::testLthTransferAttestation(uchar const*)
AppleSEPHilo::updateElapsedTime(void)
AppleSEPHilo::updateElapsedTime(void)
AppleSEPHiloService::start(IOService *)
AppleSEPHiloService::start(IOService *)
AppleSEPLogger::_logAction(void *,void *)
AppleSEPLogger::receiveMessage(void **,bool)
AppleSEPLogger::receiveMessage(void **,bool)
AppleSEPLogger::sepLogger(AppleSEPDeviceService *)
AppleSEPLoggerService::start(IOService *)
AppleSEPLoggerService::start(IOService *)
AppleSEPManager::AppleSEPManager(void)
AppleSEPManager::MetaClass::alloc(void)
AppleSEPManager::_allocateRelayMemory(uint,ulong long,ulong long)
AppleSEPManager::_allocateRelayMemory(uint,ulong long,ulong long)
AppleSEPManager::_allocateShm(bool)
AppleSEPManager::_allocateShm(bool)
AppleSEPManager::_allocateSlaveMemory(uint,ulong long,ulong long,IOMapper *,uchar)
AppleSEPManager::_bootSEP(bool,bool)
AppleSEPManager::_didTimeout(IOTimerEventSource *)
AppleSEPManager::_didTimeout(IOTimerEventSource *)
AppleSEPManager::_doorbellAction(void *,uint)
AppleSEPManager::_doorbellAction(void *,uint)
AppleSEPManager::_getEndpointFromEndpointService(uint,uint)
AppleSEPManager::_getPanicDiagnostics(void)
AppleSEPManager::_getRsepfirmwareInfo(uint *)
AppleSEPManager::_getRsepfirmwareInfo(uint *)
AppleSEPManager::_getServiceFromEndpointName(uint,uint)
AppleSEPManager::_getServiceFromEndpointName(uint,uint)
AppleSEPManager::_getSleepMode(void)
AppleSEPManager::_getSleepMode(void)
AppleSEPManager::_getTzInfo(uint,bool *,uint *)
AppleSEPManager::_getTzInfo(uint,bool *,uint *)
AppleSEPManager::_initPMControl(void)
AppleSEPManager::_initTimeoutMultiplier(IOService *)
AppleSEPManager::_loadChannelObjectData(void)
AppleSEPManager::_loadChannelObjectData(void)
AppleSEPManager::_loadChannelObjectEntries(AppleSEPSharedMemoryBuffer::ChannelEntry *,uint)
AppleSEPManager::_loadChannelObjectEntries(AppleSEPSharedMemoryBuffer::ChannelEntry *,uint)
AppleSEPManager::_nonPowerManagedEpEnable(void)
AppleSEPManager::_nonPowerManagedEpEnable(void)
AppleSEPManager::_notifyOSActiveGated(void)
AppleSEPManager::_powerChangeNotificationHandler(void *,uint,IOService *,void *,ulong)
AppleSEPManager::_powerChangeNotificationHandler(void *,uint,IOService *,void *,ulong)
AppleSEPManager::_propToUint32(OSObject const*,uint *)
AppleSEPManager::_propToUint32(OSObject const*,uint *)
AppleSEPManager::_requestPanicGated(char const*,char const*)
AppleSEPManager::_sendMessageGated(uint *,void *,void *,int *)
AppleSEPManager::_sendMessageGated(uint *,void *,void *,int *)
AppleSEPManager::_sepIdleTimeout(IOTimerEventSource *)
AppleSEPManager::_sepIdleTimeout(IOTimerEventSource *)
AppleSEPManager::_sepMailboxDebugEntries(void)
AppleSEPManager::_sepMailboxDebugStatus(void)
AppleSEPManager::_sepPanicCheck(IOTimerEventSource *)
AppleSEPManager::_setGigalockerAvailable(char const*)
AppleSEPManager::_setGigalockerAvailable(char const*)
AppleSEPManager::_setPowerState(ulong *)
AppleSEPManager::_setPowerState(ulong *)
AppleSEPManager::_setupEpPower(uint,uint)
AppleSEPManager::_setupEpPower(uint,uint)
AppleSEPManager::_sleepSEPAsync(void)
AppleSEPManager::_sleepSEPAsync(void)
AppleSEPManager::_updateDeviceTree(void)
AppleSEPManager::_updateDeviceTreeThread(void *)
AppleSEPManager::_waitOSActive(uint)
AppleSEPManager::_waitOSActiveGated(uint *)
AppleSEPManager::_waitOSActiveGated(uint *)
AppleSEPManager::_waitUntilCanSendMessage(void)
AppleSEPManager::_waitUntilCanSendMessage(void)
AppleSEPManager::_wakeSEPFromNap(void)
AppleSEPManager::addVisibleMemory(IOMemoryDescriptor *,IODMACommand **,ulong long *)
AppleSEPManager::addVisibleMemory(IOMemoryDescriptor *,IODMACommand **,ulong long *)
AppleSEPManager::allocateSlaveMappedMemory(ulong long,ulong long,uchar)
AppleSEPManager::allocateSlaveMappedMemory(ulong long,ulong long,uchar)
AppleSEPManager::allocateVisibleMemory(uint,ulong long,ulong long)
AppleSEPManager::artRequestsEP(uint)
AppleSEPManager::artStorageEP(uint)
AppleSEPManager::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSEPManager::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSEPManager::checkInMaster(AppleSEPXART *)
AppleSEPManager::checkInMaster(AppleSEPXART *)
AppleSEPManager::controlEP(void)
AppleSEPManager::debugEP(uint)
AppleSEPManager::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
AppleSEPManager::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
AppleSEPManager::endpointsEnabled(bool)
AppleSEPManager::getAdjustedTimeout(uint)
AppleSEPManager::getMemoryForDeviceTreeKey(IORegistryEntry const*,char const*)
AppleSEPManager::getMemoryMapDeviceTreeEntry(void)
AppleSEPManager::getRawMsgLog(uint *,uint *)
AppleSEPManager::getRawMsgLog(uint *,uint *)
AppleSEPManager::getReadableNvram(void)
AppleSEPManager::getReadableNvram(void)
AppleSEPManager::hasService(char const*)
AppleSEPManager::hiloEP(uint)
AppleSEPManager::mapExistingAllocation(IOMemoryDescriptor *)
AppleSEPManager::notifyEndpointEnabled(uint,bool)
AppleSEPManager::notifyEndpointEnabled(uint,bool)
AppleSEPManager::notifyOSActive(void)
AppleSEPManager::notifyOSActive(void)
AppleSEPManager::notifyWrappingActive(void)
AppleSEPManager::pairingEP(uint)
AppleSEPManager::receiveMessage(uint,void **,bool)
AppleSEPManager::removeVisibleMemory(IODMACommand *)
AppleSEPManager::removeVisibleMemory(IODMACommand *)
AppleSEPManager::requestPanic(char const*,char const*)
AppleSEPManager::sendMessage(uint,void *,void *,bool)
AppleSEPManager::sendRawMessage(uint,void *,bool)
AppleSEPManager::sepPanicCheck(void)
AppleSEPManager::sepPanicCheck(void)
AppleSEPManager::setFirmwareBytes(IOMemoryDescriptor *,bool,bool)
AppleSEPManager::setFirmwareBytes(IOMemoryDescriptor *,bool,bool)
AppleSEPManager::setPowerState(ulong,IOService *)
AppleSEPManager::setPowerState(ulong,IOService *)
AppleSEPManager::setSendRelayBuffer(uchar,uint,ulong long,ulong long,IOSlaveMemory **)
AppleSEPManager::signalTimeout(uint)
AppleSEPManager::signalTimeout(uint)
AppleSEPManager::start(IOService *)
AppleSEPManager::start(IOService *)
AppleSEPManager::systemWillShutdown(uint)
AppleSEPManager::testingEP(uint)
AppleSEPManager::xartSEPMasterEP(uint)
AppleSEPManager::xartSEPSlaveEP(uint)
AppleSEPManager::~AppleSEPManager()
AppleSEPPairing::_clearOOLBuffers(uchar *,uchar *)
AppleSEPPairing::_pmsgSend(AppleSEPPairing::PairingMessage *,AppleSEPPairing::pairing_buffer_config *,int)
AppleSEPPairing::_pmsgSendLocked(void *,void *,void *)
AppleSEPPairing::_pmsgSendLocked(void *,void *,void *)
AppleSEPPairing::_pmsgSendProvLocked(void *,void *,void *)
AppleSEPPairing::_pmsgSendProvLocked(void *,void *,void *)
AppleSEPPairing::_prepareOOLBuffers(void)
AppleSEPPairing::_prepareOOLBuffers(void)
AppleSEPPairing::_sepMessageReceived(void *,void *)
AppleSEPPairing::free(void)
AppleSEPPairing::getLYNXPairingInfo(void *,uint *)
AppleSEPPairing::getPSKI(void *,uint *)
AppleSEPPairing::getSAMPPairingInfo(void *,uint *)
AppleSEPPairing::getSTCKPairingInfo(void const*,ulong,void *,uint *)
AppleSEPPairing::getSTCKPairingInfo(void const*,ulong,void *,uint *)
AppleSEPPairing::getSignKey(void *,uint *)
AppleSEPPairing::send_4cc_message(uint,void const*,ulong,void *,uint *)
AppleSEPPairing::send_4cc_message(uint,void const*,ulong,void *,uint *)
AppleSEPPairing::start(IOService *)
AppleSEPPairing::start(IOService *)
AppleSEPPanicBuffer::_updateBuffer(void)
AppleSEPPanicBuffer::getBootStage(void)
AppleSEPPanicBuffer::initWithOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPPanicBuffer::isPanicked(void)
AppleSEPPanicBuffer::withOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPSharedMemoryBuffer::clean(ulong long,ulong long)
AppleSEPSharedMemoryBuffer::cleanEntryAt(int,bool)
AppleSEPSharedMemoryBuffer::cleanflush(ulong long,ulong long)
AppleSEPSharedMemoryBuffer::createWithOwnerChannelsAndMapper(AppleSEPManager *,AppleSEPSharedMemoryBuffer::ChannelEntry *,int,IOMapper *)
AppleSEPSharedMemoryBuffer::findIndexForName(uint,int *)
AppleSEPSharedMemoryBuffer::getBuffer(void)
AppleSEPSharedMemoryBuffer::getBuffer(void)
AppleSEPSharedMemoryBuffer::getEntryBaseAt(int)
AppleSEPSharedMemoryBuffer::getEntryPhysBase(int)
AppleSEPSharedMemoryBuffer::getEntrySizeAt(int)
AppleSEPSharedMemoryBuffer::getSlaveAddress(void)
AppleSEPSharedMemoryBuffer::initWithOptionsAligned(uint,ulong long,ulong long,IOMapper *,uchar)
AppleSEPSharedMemoryBuffer::initWithOptionsAligned(uint,ulong long,ulong long,IOMapper *,uchar)
AppleSEPSharedMemoryChannel::_updateBuffer(void)
AppleSEPSharedMemoryChannel::attachOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPSharedMemoryChannel::initWithOwnerAndName(AppleSEPSharedMemoryBuffer *,uint)
AppleSEPTesting::_check_msg(AppleSEPTesting::TestingMessage *)
AppleSEPTesting::_check_msg(AppleSEPTesting::TestingMessage *)
AppleSEPTesting::_initForDeviceService(AppleSEPDeviceService *)
AppleSEPTesting::_initOOLs(void)
AppleSEPTesting::_initOOLs(void)
AppleSEPTesting::_initRecvOOLBuffer(ulong long)
AppleSEPTesting::_initSendOOLBuffer(ulong long)
AppleSEPTesting::_initSendOOLBuffer(ulong long)
AppleSEPTesting::_sendTestMsg(AppleSEPTesting::TestingMessage *,uint *)
AppleSEPTesting::_sendTestMsg(AppleSEPTesting::TestingMessage *,uint *)
AppleSEPTesting::_testAction(void *,void *)
AppleSEPTesting::data_get(uchar *,uint *,uint)
AppleSEPTesting::data_get(uchar *,uint *,uint)
AppleSEPTesting::data_set(uchar const*,uint,uint,uint)
AppleSEPTesting::data_set(uchar const*,uint,uint,uint)
AppleSEPTesting::get_debug_var(uint,uchar const*,uint,ulong long *,uint *,uchar *)
AppleSEPTesting::get_error(uint *,uint *,uint *)
AppleSEPTesting::get_result(uint)
AppleSEPTesting::list_debug_var(uint)
AppleSEPTesting::list_debug_var(uint)
AppleSEPTesting::query_tests(uint *,uint)
AppleSEPTesting::run_all(uint *,uint)
AppleSEPTesting::run_cat(uint,uint)
AppleSEPTesting::run_test(uint *,uint,uint,uint)
AppleSEPTesting::sepTestingFromDeviceService(AppleSEPDeviceService *)
AppleSEPTesting::set_debug_var(uint,uchar const*,uint,ulong long)
AppleSEPTestingService::start(IOService *)
AppleSEPTestingService::start(IOService *)
AppleSEPTraceBuffer::AppleSEPTraceBuffer(void)
AppleSEPTraceBuffer::MetaClass::alloc(void)
AppleSEPTraceBuffer::_changePollPostBoot(IOTimerEventSource *)
AppleSEPTraceBuffer::_getNextEntry(void)
AppleSEPTraceBuffer::_periodicConsume(IOTimerEventSource *)
AppleSEPTraceBuffer::_traceCallback(kd_callback_type,void *)
AppleSEPTraceBuffer::_traceCallbackGated(void *,void *)
AppleSEPTraceBuffer::_traceConsumeGated(void)
AppleSEPTraceBuffer::_updateBuffer(void)
AppleSEPTraceBuffer::_updateBuffer(void)
AppleSEPTraceBuffer::initWithOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPTraceBuffer::initWithOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPTraceBuffer::withOwner(AppleSEPSharedMemoryBuffer *)
AppleSEPUserClient::DispatchDiscoveryGetEndpointInfo(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchDiscoveryGetEndpointInfo(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchGetDebugVar(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloAccumulateTestPattern(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloAccumulateTestPattern(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloAdvanceGainRestrictionPhase(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloAdvanceGainRestrictionPhase(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloCheckGainTestPattern(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloCheckGainTestPattern(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetDisasterRecoveryLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetDisplayParams(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetDisplayParams(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthRaw(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthTransferAttestation(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthTransferAttestation(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthTransferMessage(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloGetLthTransferMessage(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloLoadDisasterRecoveryLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloLoadLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloLoadLthBackup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloLoadLthRaw(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloLoadLthTransferMessage(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloSetGainParamSet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloSetGainParamSet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloTestGainRestriction(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloTestGainRestriction(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloTestLthTransferAttestation(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloTestLthTransferAttestation(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloUpdateTimer(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchHiloUpdateTimer(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchSetDebugVar(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchTestIbootTruthy(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientClearART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientClearART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientCommitHash(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientCommitHash(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientCounterSelfTest(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientCounterSelfTest(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientDumpCoverage(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientEraseAllContentAndSettings(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientEraseAllContentAndSettings(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGenerateROMNonce(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGetART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGetART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGetLog(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGetLogSize(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGigalockerSetup(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGigalockerShutdown(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGigalockerShutdown(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGigalockerStressTest(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientGigalockerStressTest(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientInvalidateNonce(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientInvalidateNonce(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientL4Panic(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLcrtVerify(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLcrtVerify(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLoadFirmware(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLoadRestoreFirmware(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLoadRestoreFirmwareWithART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLynxGetCPSN(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLynxGetCPSN(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLynxGetPubKey(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientLynxGetPubKey(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientNap(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientObjCreate(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientObjRead(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientObjWrite(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientPairKey(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientPairKey(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientPing(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientProcInfo(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientPurgeSystemToken(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientPurgeSystemToken(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientROMCmd(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientRngDump(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientSecurityMode(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientSetART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientSetART(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientSleep(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTTYIn(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestDataGet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestDataGet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestDataSet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestDataSet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestErrorDetails(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestGetResult(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestQueryTests(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestRequestPanic(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestRunCat(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestRunTest(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientTestSetTimeout(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::DispatchUserClientiBICGet(AppleSEPUserClient*,void *,IOExternalMethodArguments *)
AppleSEPUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSEPUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSEPUserClient::getOrGenerateNonce(IOExternalMethodArguments *,bool)
AppleSEPUserClient::initWithTask(task *,void *,uint)
AppleSEPUserClient::start(IOService *)
AppleSEPUserClient::start(IOService *)
AppleSEPXART::MetaClass::alloc(void)
AppleSEPXART::_handle_sep_driven_msg(AppleSEPXART::XARTMessage *)
AppleSEPXART::_initForDeviceService(AppleSEPDeviceService *,bool)
AppleSEPXART::_initForDeviceService(AppleSEPDeviceService *,bool)
AppleSEPXART::_initInternals(bool)
AppleSEPXART::_initOOLBuffers(void)
AppleSEPXART::_initOOLBuffers(void)
AppleSEPXART::_initOOLBuffersAsync(void)
AppleSEPXART::_initOOLBuffersAsync(void)
AppleSEPXART::_nonce_action(void *,uint *,uchar)
AppleSEPXART::_xmsgReceived(void *,void *)
AppleSEPXART::_xmsgReceived(void *,void *)
AppleSEPXART::_xmsgSend(AppleSEPXART::XARTMessage *,AppleSEPXART::xart_buffer_config *)
AppleSEPXART::_xmsgSend(AppleSEPXART::XARTMessage *,AppleSEPXART::xart_buffer_config *)
AppleSEPXART::_xmsgSendLocked(AppleSEPXART::XARTMessage *,AppleSEPXART::xart_buffer_config *)
AppleSEPXART::_xmsgSendLocked(AppleSEPXART::XARTMessage *,AppleSEPXART::xart_buffer_config *)
AppleSEPXART::enable(void)
AppleSEPXART::flush_cached_xart(bool)
AppleSEPXART::gl_eacs(void)
AppleSEPXART::gl_initialize(char const*)
AppleSEPXART::gl_initialize(char const*)
AppleSEPXART::gl_shutdown(void)
AppleSEPXART::lynx_authenticate(void const*,ulong)
AppleSEPXART::sepXARTFromDeviceService(AppleSEPDeviceService *,bool)
AppleSEPXARTService::start(IOService *)
AppleSEPXARTService::start(IOService *)
AppleSMC::MetaClass::alloc(void)
AppleSMC::_getHibernateState(void)
AppleSMC::_getKeyFromIndexGated(void *,void *)
AppleSMC::_getKeyInfoGated(void *,void *,void *)
AppleSMC::_getSMCPanicDoneWaitSettings(void)
AppleSMC::_getSRAMAddressGated(void)
AppleSMC::_getSRAMAddressGated(void)
AppleSMC::_keyEndpointHandler(void *,void *)
AppleSMC::_keyEndpointHandler(void *,void *)
AppleSMC::_msgLogAdd(uchar,ulong long)
AppleSMC::_msgLogPrint(void)
AppleSMC::_pollForKeyFinished(ApcKeyMsg *)
AppleSMC::_powerStateActionGated(ulong,void *)
AppleSMC::_probeSOCD(AppleSMC*,int)
AppleSMC::_processUpstreamNotification(ulong long *)
AppleSMC::_processUpstreamNotificationCallout(void *,void *)
AppleSMC::_readKeyGated(void *,void *,void *)
AppleSMC::_readKeyPolled(void *,void *)
AppleSMC::_readMsg(ApcKeyMsg *,void *)
AppleSMC::_readPKeyGated(void *,void *,void *)
AppleSMC::_sendKeyMsgAndPollForResponse(ApcKeyMsg *)
AppleSMC::_sendKeyMsgAndPollForResponse(ApcKeyMsg *)
AppleSMC::_sendKeyMsgAndWaitForResponse(ApcKeyMsg *)
AppleSMC::_sendKeyMsgAndWaitForResponse(ApcKeyMsg *)
AppleSMC::_sendNotify(uchar,uchar,uchar,uchar)
AppleSMC::_sendNotifyDirect(uchar,uchar,uchar,uchar)
AppleSMC::_sensorADCRCallback(AppleARMPMUSensor *,uint,long long *)
AppleSMC::_sensorCallback(AppleARMPMUSensor *,uint,long long *)
AppleSMC::_smcInitNotifications(void)
AppleSMC::_smcRegisterNotificationControllerGated(void *,void *,void *)
AppleSMC::_sysCtlNotifyHandler(uchar,uchar,uchar)
AppleSMC::_sysCtlNotifyHandler(uchar,uchar,uchar)
AppleSMC::_sysStateNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMC::_sysStateNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMC::_waitForIdle(void)
AppleSMC::_writeKeyGated(void *,void *,void *)
AppleSMC::_writeKeyPolled(void *,void *)
AppleSMC::_writeMsg(ApcKeyMsg *,void *)
AppleSMC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSMC::changePowerState(ulong,void *)
AppleSMC::init(OSDictionary *)
AppleSMC::sensorHubDirectWriteSensorExchangeKey(uint,SMCSensorEx_Jumbo *)
AppleSMC::setPowerState(ulong,IOService *)
AppleSMC::setProperties(OSObject *)
AppleSMC::setProperty(char const*,void *,uint)
AppleSMC::setProperty(char const*,void *,uint)
AppleSMC::smcACMPing(void)
AppleSMC::smcGetKeyFromIndex(uint,uint *)
AppleSMC::smcGetKeyInfo(uint,SMCKeyInfoData *)
AppleSMC::smcHandleACMPingCall(void *)
AppleSMC::smcHandleYPCEvent(SMCParamStruct *,SMCParamStruct *,uint,ulong long *)
AppleSMC::smcHandleYPCEventAction(OSObject *,SMCParamStruct *,SMCParamStruct *,void *)
AppleSMC::smcNotificationPublishedHandler(void *,void *,IOService *,IONotifier *)
AppleSMC::smcPMSettingCb(OSSymbol const*,OSObject *,ulong)
AppleSMC::smcReadKeyWithSMC(uint,uchar,ulong long,void *)
AppleSMC::smcReadPKeyWithSMC(uint,uchar,ulong long,void *,ulong long,void *)
AppleSMC::smcRegisterNotificationController(OSSymbol const*,int (*)(OSObject *,OSSymbol const*,OSObject *,ulong),OSObject *,ulong,OSObject **)
AppleSMC::smcRegisterNotifications(void)
AppleSMC::smcSetTimeCallback(OSObject *)
AppleSMC::smcSilentRunningCb(OSObject *)
AppleSMC::smcUnregisterNotificationController(OSObject *)
AppleSMC::smcWriteKeyWithSMC(uint,uchar,ulong long,void *)
AppleSMC::start(IOService *)
AppleSMC::start(IOService *)
AppleSMC::stop(IOService *)
AppleSMC::~AppleSMC()
AppleSMCCharger::_checkConnection(bool *,uint)
AppleSMCCharger::_platformWakeActionGated(void)
AppleSMCCharger::_smcNotifyChargerCallout(void *,void *)
AppleSMCCharger::_smcNotifyChargerCalloutGated(OSArray *)
AppleSMCCharger::_smcNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMCCharger::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSMCCharger::start(IOService *)
AppleSMCChargerFunction::attachCharger(IOService *)
AppleSMCChargerFunction::copyDetectStatus(bool)
AppleSMCChargerFunction::getChargeCurrentConfiguration(void)
AppleSMCChargerFunction::getChargeVoltageConfiguration(void)
AppleSMCChargerFunction::getChargerState(bool *,bool *,bool *,char const**)
AppleSMCChargerFunction::getUSBInputCurrentLimitTargetInfo(uint,uint *,uint *)
AppleSMCChargerFunction::measureBatteryTemperature(int *)
AppleSMCChargerFunction::measureBatteryVoltage(int *)
AppleSMCChargerFunction::measureSystemVoltage(int *)
AppleSMCChargerFunction::measureVBUSVoltage(int *)
AppleSMCChargerFunction::setUSBInputCurrentLimit(uint,bool *)
AppleSMCChargerFunction::setUSBInputHighVoltage(bool,uint)
AppleSMCChargerPS::AppleSMCChargerPS(void)
AppleSMCChargerPS::MetaClass::alloc(void)
AppleSMCChargerPS::_debounceTimerCallback(IOTimerEventSource *)
AppleSMCChargerPS::_smcWriteKey(uint,ulong,void *)
AppleSMCChargerPS::causePowerStatus(bool)
AppleSMCChargerPS::forcePowerStatus(bool)
AppleSMCChargerPS::getKeyAttributes(uint)
AppleSMCChargerPS::getWorkLoop(void)
AppleSMCChargerPS::handlePowerSourceDetect(IOAccessoryPowerSourceBehavior const*)
AppleSMCChargerPS::initWithCharger(AppleSMCCharger *,uint)
AppleSMCChargerPS::start(IOService *)
AppleSMCChargerUtil::free(void)
AppleSMCChargerUtil::handleMatchingNotificationAuth(void *,IOService *,IONotifier *)
AppleSMCChargerUtil::handleNotificationAuth(void *,uint,IOService *,void *,ulong)
AppleSMCChargerUtil::publishAuthInfo(void)
AppleSMCChargerUtil::readAuthStateGated(void)
AppleSMCChargerUtil::start(IOService *)
AppleSMCChargerUtil::stop(IOService *)
AppleSMCClient::clientClose(void)
AppleSMCClient::close(void)
AppleSMCClient::getTargetAndMethodForIndex(IOService **,uint)
AppleSMCClient::initWithTask(task *,void *,uint)
AppleSMCClient::open(void)
AppleSMCClient::smcYPCEventCheck(SMCParamStruct *,SMCParamStruct *,uint,ulong long *)
AppleSMCClient::start(IOService *)
AppleSMCClient::stop(IOService *)
AppleSMCDockUSB_UFP::MetaClass::alloc(void)
AppleSMCDockUSB_UFP::free(void)
AppleSMCDockUSB_UFP::handleSmcStateNotification(void *)
AppleSMCDockUSB_UFP::smcNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMCDockUSB_UFP::start(IOService *)
AppleSMCDockUSB_UFP::stop(IOService *)
AppleSMCDockUSB_UFP::~AppleSMCDockUSB_UFP()
AppleSMCEmbeddedFunction::MetaClass::alloc(void)
AppleSMCEmbeddedFunction::callFunction(void *,void *,void *)
AppleSMCEmbeddedFunction::smcFunctionFactory(OSData *,void *)
AppleSMCFamily::AppleSMCFamily(OSMetaClass const*)
AppleSMCFamily::copyProperty(char const*)
AppleSMCFamily::handleClose(IOService *,uint)
AppleSMCFamily::handleIsOpen(IOService const*)
AppleSMCFamily::handleOpen(IOService *,uint,void *)
AppleSMCFamily::handleSMCResult(char const*,uint,uint,uchar)
AppleSMCFamily::init(OSDictionary *)
AppleSMCFamily::iterateNotificationCallbacks(OSSymbol const*,void ( {block_pointer})(int,int (*)(OSObject *,OSSymbol const*,OSObject *,ulong),OSObject *,ulong))
AppleSMCFamily::printIOReturn(int)
AppleSMCFamily::printSMCResult(uchar)
AppleSMCFamily::registerNotificationCallback(OSSymbol const*,int (*)(OSObject *,OSSymbol const*,OSObject *,ulong),OSObject *,ulong,OSObject **)
AppleSMCFamily::setProperties(OSObject *)
AppleSMCFamily::smcGetKeyCount(uint *)
AppleSMCFamily::smcGetVers(SMCVersion *)
AppleSMCFamily::smcGetVersWithSMC(uchar,SMCVersion *)
AppleSMCFamily::smcHandleYPCEvent(SMCParamStruct *,SMCParamStruct *,uint,ulong long *)
AppleSMCFamily::smcHandleYPCEventStatic(OSObject *,void *,void *,void *,void *)
AppleSMCFamily::smcPublishGeneration(void)
AppleSMCFamily::smcPublishVersion(void)
AppleSMCFamily::smcReadKey(uint,ulong long,void *)
AppleSMCFamily::smcReadKeyHostEndian(uint,ulong long,void *)
AppleSMCFamily::smcReadPKey(uint,ulong long,void *,ulong long,void *)
AppleSMCFamily::smcStringFromSMCKey(uint,char *)
AppleSMCFamily::smcWriteKey(uint,ulong long,void *)
AppleSMCFamily::smcWriteKeyHostEndian(uint,ulong long,void *)
AppleSMCFamily::start(IOService *)
AppleSMCFamily::stop(IOService *)
AppleSMCFamily::unregisterNotificationCallback(OSObject *)
AppleSMCHighVoltageCharger::MetaClass::alloc(void)
AppleSMCHighVoltageCharger::Reset(bool)
AppleSMCHighVoltageCharger::_activateMicroGated(void)
AppleSMCHighVoltageCharger::_deactivateMicroGated(void)
AppleSMCHighVoltageCharger::_handlePowerSourceChanged(void)
AppleSMCHighVoltageCharger::_interruptAction(uchar,uchar)
AppleSMCHighVoltageCharger::_readDeviceInfo(void)
AppleSMCHighVoltageCharger::_smcNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMCHighVoltageCharger::activateMicro(void)
AppleSMCHighVoltageCharger::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSMCHighVoltageCharger::deactivateMicro(void)
AppleSMCHighVoltageCharger::free(void)
AppleSMCHighVoltageCharger::handleSMCEvent(uchar,uchar)
AppleSMCHighVoltageCharger::handleSMCEventStart(OSData *,int)
AppleSMCHighVoltageCharger::handleSMCEventStartGated(AppleSMCHighVoltageCharger::smcEventArgs const*)
AppleSMCHighVoltageCharger::probe(IOService *,int *)
AppleSMCHighVoltageCharger::readAdapterCapabilities(void)
AppleSMCHighVoltageCharger::readAdapterCapabilities(void)
AppleSMCHighVoltageCharger::readAdapterInfo(void)
AppleSMCHighVoltageCharger::receiveNotification(void *,uint,IOService *,void *,ulong)
AppleSMCHighVoltageCharger::start(IOService *)
AppleSMCHighVoltageCharger::stop(IOService *)
AppleSMCHighVoltageCharger::~AppleSMCHighVoltageCharger()
AppleSMCHighVoltageChargingData::initWithIndex(AppleSMCHighVoltageCharger *,IOAccessoryPowerSource *,uchar)
AppleSMCHighVoltageChargingData::isEqualTo(OSMetaClassBase const*)
AppleSMCHighVoltageChargingData::requestReady(void)
AppleSMCInterface::MetaClass::alloc(void)
AppleSMCInterface::_initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleSMCInterface::changePowerState(ulong,void *)
AppleSMCInterface::smcReadKey(uint,ulong long,void *)
AppleSMCInterface::smcReadPKey(uint,ulong long,void *,ulong long,void *)
AppleSMCInterface::smcWriteKey(uint,ulong long,void *)
AppleSMCInterface::startInterfaces(AppleSMCFamily *,int)
AppleSMCInterface::startInterfaces(AppleSMCFamily *,int)
AppleSMCInterface::withRegistryEntry(IORegistryEntry *,IOService *)
AppleSMCPMU::_claimSystemBootEvents(void)
AppleSMCPMU::_sendCurrentLidStateToRootDomainGated(void)
AppleSMCPMU::_sendLidStateToRootDomainGated(void *)
AppleSMCPMU::_setupForButtons(AppleSMCPMU*,int)
AppleSMCPMU::_smcNotifyCallout(OSArray *)
AppleSMCPMU::_smcNotifyCallout(void *,void *)
AppleSMCPMU::_smcNotifyHandler(OSSymbol const*,OSObject *,ulong)
AppleSMCPMU::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSMCPMU::disableVectorHard(int,IOInterruptVector *)
AppleSMCPMU::enableInterrupt(IOService *,int)
AppleSMCPMU::enableVector(int,IOInterruptVector *)
AppleSMCPMU::getVectorType(int,IOInterruptVector *)
AppleSMCPMU::handleSystemPowerStateChange(void *,void *,uint,IOService *,void *,ulong)
AppleSMCPMU::initVector(int,IOInterruptVector *)
AppleSMCPMU::start(IOService *)
AppleSMCPMU::stop(IOService *)
AppleSMCPMU::vectorCanBeShared(int,IOInterruptVector *)
AppleSMCSensorDispatcher::MetaClass::alloc(void)
AppleSMCSensorDispatcher::_timeoutOccurredGated(OSObject *,IOTimerEventSource *)
AppleSMCSensorDispatcher::createTimerEvent(uint)
AppleSMCSensorDispatcher::getDTPropertyArray(char const*,uint **,uint *)
AppleSMCSensorDispatcher::getMagnetKey(ulong long *)
AppleSMCSensorDispatcher::getNfcStateKey(ulong long *)
AppleSMCSensorDispatcher::getPowerPauseKey(ulong long *)
AppleSMCSensorDispatcher::getTemperature4CCGated(sensorTemperature4CC *)
AppleSMCSensorDispatcher::getTemperatureDataGated(sensorTemperatureData *)
AppleSMCSensorDispatcher::gpuPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleSMCSensorDispatcher::readGPUAverageDieTemp(float *)
AppleSMCSensorDispatcher::readTemperatureKeysFromSMC(void)
AppleSMCSensorDispatcher::setSMCKeyDataGated(smcKeyWrites *)
AppleSMCSensorDispatcher::setTemperatureDataGated(sensorTemperatureData *)
AppleSMCSensorDispatcher::start(IOService *)
AppleSMCSensorDispatcher::writeIOUserClientKeysToSMC(smcKeyWrites *)
AppleSMCSensorDispatcher::writeSensorKeyToSMC(uint,float)
AppleSMCSensorDispatcher::~AppleSMCSensorDispatcher()
AppleSMCSensorDispatcherUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSMCSensorDispatcherUserClient::initWithTask(task *,void *,uint)
AppleSMCSensorDispatcherUserClient::sGetMagnetKey(OSObject *,void *,IOExternalMethodArguments *)
AppleSMCSensorDispatcherUserClient::sGetSMCSensor4CC(OSObject *,void *,IOExternalMethodArguments *)
AppleSMCSensorDispatcherUserClient::sGetSMCSensorCount(OSObject *,void *,IOExternalMethodArguments *)
AppleSMCSensorDispatcherUserClient::sSetSMCSensorData(OSObject *,void *,IOExternalMethodArguments *)
AppleSMCWirelessCharger::bcm59365_check_otp_status_read(void)
AppleSMCWirelessCharger::bcm59365_check_otp_status_write(void)
AppleSMCWirelessCharger::bcm59365_idle_check_status(void)
AppleSMCWirelessCharger::bcm59365_read_row(uint,uint *,uint *)
AppleSMCWirelessCharger::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSMCWirelessCharger::getIntParam(char const*,uint *)
AppleSMCWirelessCharger::measureVRECT(int *,int *)
AppleSMCWirelessCharger::newDataStream(void)
AppleSMCWirelessCharger::newTelegramStream(void)
AppleSMCWirelessCharger::readMultipleExtended(uint,uchar *,ulong)
AppleSMCWirelessCharger::registerForPDMControllerNotification(void)
AppleSMCWirelessCharger::st_poll_dotara_nvm_busy(bool *)
AppleSMCWirelessCharger::txSetBoost(ushort,ushort)
AppleSMCWirelessCharger::updateThermalProfile(uint)
AppleSMCWirelessChargerUserClient::start(IOService *)
AppleSOCD::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleSOCD::start(IOService *)
AppleSOCDInterface::getPushSectionSize(void)
AppleSOCDInterface::initPushSection(OSNumber *)
AppleSOCDInterface::initWithNameAndDeviceMemoryArray(char const*,OSArray *)
AppleSOCDInterface::stop(IOService *)
AppleSOCDInterface::writePushSection(ulong,void const*,ulong long)
AppleSOCTuner::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSOCTuner::cleanMCCDisplayDataSet(void)
AppleSOCTuner::enableMCCPowerGating(bool)
AppleSOCTuner::getDTProperty(char const*,uint *)
AppleSOCTuner::hintFBCaching(bool)
AppleSOCTuner::message(uint,IOService *,void *)
AppleSOCTuner::setMCCConfig(uint)
AppleSOCTuner::start(IOService *)
AppleSOCTuner::start(IOService *)
AppleSPMIBacklightUpdateFunction::callFunction(void *,void *,void *)
AppleSPMIController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPMIController::checkFaultCounters(void)
AppleSPMIController::disableVectorHard(int,IOInterruptVector *)
AppleSPMIController::dumpFaultQueue(char *,ulong)
AppleSPMIController::dumpResponseQueue(void)
AppleSPMIController::enableVector(int,IOInterruptVector *)
AppleSPMIController::executeSPMICommand(AppleARMSPMICommand *)
AppleSPMIController::extendedReadWriteCommand(AppleARMSPMICommand *)
AppleSPMIController::fifoQueuesEmpty(void)
AppleSPMIController::free(void)
AppleSPMIController::getHeaderMatch(uint,uint,int,uchar const*,ulong long)
AppleSPMIController::getIntParam(char const*,uchar,uint *)
AppleSPMIController::handleFaultInterrupt(IOInterruptEventSource *,int)
AppleSPMIController::handleFaultInterruptPrimary(void *,IOService *,int)
AppleSPMIController::handleInterrupt(void *,IOService *,int)
AppleSPMIController::handleRespInterrupt(IOInterruptEventSource *,int)
AppleSPMIController::panicCleanup(uint,uint)
AppleSPMIController::publishWakeReason(uint)
AppleSPMIController::queuePop(ulong long,uint,uint *)
AppleSPMIController::registerReadWriteCommand(AppleARMSPMICommand *)
AppleSPMIController::registerWrite0Command(AppleARMSPMICommand *)
AppleSPMIController::resetQueue(void)
AppleSPMIController::runInterruptMode(ulong long)
AppleSPMIController::runPolledMode(ulong long)
AppleSPMIController::setSPMIConfig(AppleARMSPMIConfig *)
AppleSPMIController::spmiPanic(char const*,...)
AppleSPMIController::start(IOService *)
AppleSPMIController::verifySPMIHeaderMatch(uint,uint,int)
AppleSPMIController::waitForResponse(bool,ulong long)
AppleSPMIController__executeSPMICommandMultiple_AppleARMSPMICommand
AppleSPU::AppleSPU(void)
AppleSPU::MetaClass::alloc(void)
AppleSPU::_acquireHistoricalGated(void)
AppleSPU::_asyncMessage(void *,void *)
AppleSPU::_clearHistoricalGated(void)
AppleSPU::_getNubFromInterfaceID(uint)
AppleSPU::_handleHistoricalQueueGated(void *,void *)
AppleSPU::_handleReadyReport(uint,_ReadyReportData const*,ulong)
AppleSPU::_handleTxQueue(void)
AppleSPU::_handleTxQueueMessage(uint,uchar *,ulong)
AppleSPU::_handleTxQueueStale(void)
AppleSPU::_historicalQueueDefaultHandler(uint,uchar *,ulong,uint)
AppleSPU::_historicalTimerHandler(IOTimerEventSource *)
AppleSPU::_releaseHistoricalGated(void)
AppleSPU::_sendMessageGated(AppleSPUInterface *,SPU_iovec const*,uint,uint)
AppleSPU::_startQueue(void)
AppleSPU::_startQueueInternal(void)
AppleSPU::_stopQueue(void)
AppleSPU::acquireHistorical(void)
AppleSPU::asyncMessage(void *,void *)
AppleSPU::copyHistoricalBufferDescriptor(void)
AppleSPU::createReporters(void)
AppleSPU::free(void)
AppleSPU::getHibernateState(void)
AppleSPU::getWakeReasonReportingChannelID(uint)
AppleSPU::handleHistoricalQueue(void (*)(void *,uint,uchar *,ulong,uint),void *)
AppleSPU::joinPM(IOService *,IOService *,bool)
AppleSPU::registerHistoricalQueueOwner(void *,bool)
AppleSPU::registerHistoricalQueueOwner(void *,bool)
AppleSPU::releaseHistorical(void)
AppleSPU::sendMessage(AppleSPUInterface *,SPU_iovec const*,uint,uint)
AppleSPU::setPowerStateGated(ulong,IOService *)
AppleSPU::start(IOService *)
AppleSPU::stop(IOService *)
AppleSPU::systemWillShutdown(uint)
AppleSPU::systemWillShutdownGated(uint)
AppleSPU::updateReport(IOReportChannelList *,uint,void *,void *)
AppleSPU::~AppleSPU()
AppleSPUALSColorDriver::ALSSetProperty(OSDictionary *)
AppleSPUALSColorDriver::MetaClass::alloc(void)
AppleSPUALSColorDriver::copyEvent(uint,IOHIDEvent *,uint)
AppleSPUALSColorDriver::handleStart(IOService *)
AppleSPUALSColorDriver::loadCalibrationData(OSData *)
AppleSPUALSColorDriver::reportEvent(ulong long,ColorSensorVendorEventData,uint)
AppleSPUALSColorDriver::setCurrentLuxProperty(int)
AppleSPUALSColorDriver::setPropertiesGated(OSDictionary *)
AppleSPUALSColorDriver::~AppleSPUALSColorDriver()
AppleSPUALSDriver::ALSSetProperty(OSDictionary *)
AppleSPUALSDriver::MetaClass::alloc(void)
AppleSPUALSDriver::eventServiceCallback(IOHIDEventService *,void *,IOHIDEvent *,uint)
AppleSPUALSDriver::free(void)
AppleSPUALSDriver::handleStart(IOService *)
AppleSPUALSDriver::handleStop(IOService *)
AppleSPUALSDriver::installHomeButtonListener(void)
AppleSPUALSDriver::loadCalibrationData(void)
AppleSPUALSDriver::setIntegrationMode(uint)
AppleSPUALSDriver::~AppleSPUALSDriver()
AppleSPUALSLuxDriver::ALSSetProperty(OSDictionary *)
AppleSPUALSLuxDriver::eventServiceCallback(IOHIDEventService *,void *,IOHIDEvent *,uint)
AppleSPUALSLuxDriver::handleStart(IOService *)
AppleSPUALSLuxDriver::installHomeButtonListener(void)
AppleSPUALSLuxDriver::setPropertiesGated(OSDictionary *)
AppleSPUALSSealionAccessoryDriver::ALSSetProperty(OSDictionary *)
AppleSPUALSSealionAccessoryDriver::MetaClass::alloc(void)
AppleSPUALSSealionAccessoryDriver::free(void)
AppleSPUALSSealionAccessoryDriver::handleStart(IOService *)
AppleSPUALSSealionAccessoryDriver::handleStop(IOService *)
AppleSPUALSSealionAccessoryDriver::loadCalibrationData(void)
AppleSPUALSSealionAccessoryDriver::~AppleSPUALSSealionAccessoryDriver()
AppleSPUALSSealionDriver::ALSSetProperty(OSDictionary *)
AppleSPUALSSealionDriver::MetaClass::alloc(void)
AppleSPUALSSealionDriver::_slowModeTimerHandler(IOTimerEventSource *)
AppleSPUALSSealionDriver::calcCompensation(uint *)
AppleSPUALSSealionDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUALSSealionDriver::free(void)
AppleSPUALSSealionDriver::handleFrameBufferMsg(IOAOPALSMessage *,IOAOPALSFrame *)
AppleSPUALSSealionDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUALSSealionDriver::handleStart(IOService *)
AppleSPUALSSealionDriver::handleStop(IOService *)
AppleSPUALSSealionDriver::loadCalibrationData(void)
AppleSPUALSSealionDriver::probe(IOService *,int *)
AppleSPUALSSealionDriver::setPropertiesGated(OSDictionary *)
AppleSPUALSSealionDriver::start(IOService *)
AppleSPUALSSealionDriver::~AppleSPUALSSealionDriver()
AppleSPUALSSunfishDriver::MetaClass::alloc(void)
AppleSPUALSSunfishDriver::handleStart(IOService *)
AppleSPUALSSunfishDriver::loadCalibrationData(void)
AppleSPUALSSunfishDriver::~AppleSPUALSSunfishDriver()
AppleSPUAccelCalibration::hasValidCalibrationSet(void)
AppleSPUAppDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUAppDriver::enableMClk(bool *)
AppleSPUAppDriver::enableMClkGated(bool *)
AppleSPUAppDriver::enableMaggieGated(bool *)
AppleSPUAppDriver::free(void)
AppleSPUAppDriver::freeReplay(void)
AppleSPUAppDriver::handlePMUPWMClientNotification(void *,uint,IOService *,void *,ulong)
AppleSPUAppDriver::mapReplayEventsTableGated(SpuReplayHeader const*,ulong)
AppleSPUAppDriver::panicSpu(uint)
AppleSPUAppDriver::registerForPMUPWMClientNotification(OSData *)
AppleSPUAppDriver::scheduleWake(uint)
AppleSPUAppDriver::setPowerState(ulong,IOService *)
AppleSPUAppDriver::setPowerStateGated(ulong,IOService *)
AppleSPUAppDriver::setSpkAmpState(OSString *,uchar *)
AppleSPUAppDriver::setSpkAmpStateGated(OSString *,uchar *)
AppleSPUAppDriver::start(IOService *)
AppleSPUAppDriver::stop(IOService *)
AppleSPUAppDriver::unmapReplayEventsTableGated(uint)
AppleSPUAppDriverUserClient::extMapReplayEventsTable(AppleSPUAppDriver *,void *,IOExternalMethodArguments *)
AppleSPUAppDriverUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUAppInterface::MetaClass::alloc(void)
AppleSPUAppInterface::spuAppInterface(IORegistryEntry *,IOService *,OSSymbol const*,uint,uint)
AppleSPUBasebandDriver::cleanup(void)
AppleSPUBasebandDriver::free(void)
AppleSPUBasebandDriver::handleBasebandNotification(void *,uint,IOService *,void *,ulong)
AppleSPUBasebandDriver::handleBasebandPowerEvent(IOTimerEventSource *)
AppleSPUBasebandDriver::pollBBPowerUp(IOTimerEventSource *)
AppleSPUBasebandDriver::registerForBasebandNotification(void)
AppleSPUBasebandDriver::start(IOService *)
AppleSPUBattChannelDriver::_stopRawStreamGated(IOSharedDataQueue *)
AppleSPUBattChannelDriver::start(IOService *)
AppleSPUBattChannelUserClient::clientClose(void)
AppleSPUBattChannelUserClient::extStartRawMethod(AppleSPUBattChannelDriver *,void *,IOExternalMethodArguments *)
AppleSPUBattChannelUserClient::extStopRawMethod(AppleSPUBattChannelDriver *,void *,IOExternalMethodArguments *)
AppleSPUBattChannelUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUBattChannelUserClient::start(IOService *)
AppleSPUButtonDriver::MetaClass::alloc(void)
AppleSPUButtonDriver::_matchingNotification(void *,IOService *,IONotifier *)
AppleSPUButtonDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUButtonDriver::copyEvent(uint,IOHIDEvent *,uint)
AppleSPUButtonDriver::dispatchBiometricEvent(ulong long,int,uint,uint)
AppleSPUButtonDriver::dispatchForceEvent(ulong long,int,int,uint)
AppleSPUButtonDriver::dispatchKeyboardEvent(ulong long,uint,uint,uint,uchar,uchar,uchar,uint)
AppleSPUButtonDriver::free(void)
AppleSPUButtonDriver::handleFingerDownReport(ulong long,uint,uint)
AppleSPUButtonDriver::handleForceReport(ulong long,uint)
AppleSPUButtonDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUButtonDriver::handleKeyboardReport(ulong long,uint,uint)
AppleSPUButtonDriver::handleStart(IOService *)
AppleSPUButtonDriver::handleStop(IOService *)
AppleSPUButtonDriver::parseElements(OSArray *)
AppleSPUButtonDriver::setProperties(OSObject *)
AppleSPUButtonDriver::setPropertiesGated(OSObject *)
AppleSPUButtonDriver::~AppleSPUButtonDriver()
AppleSPUCBLite::MetaClass::alloc(void)
AppleSPUCBLite::_copyEvent(IOHIDEvent *&)
AppleSPUCBLite::copyEvent(uint,IOHIDEvent *,uint)
AppleSPUCBLite::durationFromPerceptualDelta(float)
AppleSPUCBLite::free(void)
AppleSPUCBLite::getUpdateFrequency(float)
AppleSPUCBLite::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCBLite::handleStart(IOService *)
AppleSPUCBLite::handleStop(IOService *)
AppleSPUCBLite::overrideDelayTimerCallback(IOTimerEventSource *)
AppleSPUCBLite::probe(IOService *,int *)
AppleSPUCBLite::rampTimerCallback(IOTimerEventSource *)
AppleSPUCBLite::sendReport(float)
AppleSPUCBLite::setPowerStateGated(ulong,IOService *)
AppleSPUCBLite::setPropertiesGated(OSDictionary *)
AppleSPUCBLite::startBrightnessFade(float,float,bool)
AppleSPUCBLite::timeConstantForRamp(void)
AppleSPUCBLite::~AppleSPUCBLite()
AppleSPUCT709::dumpALSCalData(void)
AppleSPUCT709::handleStart(IOService *)
AppleSPUCT720::MetaClass::alloc(void)
AppleSPUCT720::dumpALSCalData(void)
AppleSPUCT720::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCT720::handleStart(IOService *)
AppleSPUCT720::loadCalibrationData(OSData *)
AppleSPUCT720::~AppleSPUCT720()
AppleSPUCT721::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCT721::handleStart(IOService *)
AppleSPUCT721::loadCalibrationData(OSData *)
AppleSPUCT721::probe(IOService *,int *)
AppleSPUCT724::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCT724::handleStart(IOService *)
AppleSPUCT724::loadCalibrationData(OSData *)
AppleSPUCT724::probe(IOService *,int *)
AppleSPUCT725::MetaClass::alloc(void)
AppleSPUCT725::dumpALSCalData(void)
AppleSPUCT725::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCT725::handleStart(IOService *)
AppleSPUCT725::loadCalibrationData(OSData *)
AppleSPUCT725::probe(IOService *,int *)
AppleSPUCT836::_copyEvent(IOHIDEvent *&)
AppleSPUCT836::calculateTrueLux(ushort,ulong long)
AppleSPUCT836::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUCT836::copyEvent(uint,IOHIDEvent *,uint)
AppleSPUCT836::exportToRegistry(void)
AppleSPUCT836::free(void)
AppleSPUCT836::handleFrameBufferMsg(IOAOPALSMessage *,IOAOPALSFrame *)
AppleSPUCT836::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUCT836::handleStart(IOService *)
AppleSPUCT836::handleStop(IOService *)
AppleSPUCT836::loadCalibrationData(void)
AppleSPUCT836::setPropertiesGated(OSDictionary *)
AppleSPUCT836::start(IOService *)
AppleSPUCalibration::AppleSPUCalibration(AppleSPUCalibration::calibration_key_t *,uint)
AppleSPUCalibration::getCalibrationIsSet(char const*)
AppleSPUCalibration::getKey(char const*)
AppleSPUCalibration::getMultiCalibrationHeaderVersion(OSData *)
AppleSPUCalibration::getSingleCalibrationPacketForLocation(OSData *,uint)
AppleSPUCalibration::getSingleCalibrationPacketForLocationV1(OSData *,uint)
AppleSPUCalibration::setAllCalibration(AppleSPUHIDDriver *,AppleSPUInterface *)
AppleSPUCalibration::setCalibrationKey(AppleSPUCalibration::calibration_key_t *,uint,AppleSPUInterface *)
AppleSPUCalibration::setSingleCalibrationKey(OSData *,SpuProperty,AppleSPUInterface *)
AppleSPUCalibration::setSkipCalibration(char const*)
AppleSPUCompassCalibration::hasValidCalibrationSet(void)
AppleSPUCompassCalibration::setCalibrationKey(AppleSPUCalibration::calibration_key_t *,uint,AppleSPUInterface *)
AppleSPUComponentProfiler::configure(_SpuProfileComponentConfig const*)
AppleSPUComponentProfiler::construct(AppleSPUProfileDriver *,uint,uint)
AppleSPUComponentProfiler::get_config(_SpuProfileComponentConfig *,uint &)
AppleSPUComponentProfiler::should_capture_offline(uint,uint)
AppleSPUControl::TryLockShared(void)
AppleSPUControl::TryToggleReset(void)
AppleSPUControl::_CS(uint)
AppleSPUControl::_toggleReset(void)
AppleSPUControl::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUControl::serializedResetToggleEnabled(void *,OSSerialize *)
AppleSPUControl::serializedStatistics(void *,OSSerialize *)
AppleSPUControl::setProperties(OSObject *)
AppleSPUControl::start(IOService *)
AppleSPUControl::stop(IOService *)
AppleSPUDCPDriver::sendEndpointBufferConfiguration(IOPhysicalRange)
AppleSPUDCPDriver::start(IOService *)
AppleSPUDispADCDriver::MetaClass::alloc(void)
AppleSPUDispADCDriver::_convertTimeSPUtoContinous(disp_ADC_samples_t *)
AppleSPUDispADCDriver::_startRawParamsStreamGated(IOSharedDataQueue *,ulong long,ulong long)
AppleSPUDispADCDriver::_startRawStreamGated(IOSharedDataQueue *)
AppleSPUDispADCDriver::_stopRawStreamGated(IOSharedDataQueue *)
AppleSPUDispADCDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUDispADCDriver::free(void)
AppleSPUDispADCDriver::handleReportPacket(uint,ulong long,uchar const*,ulong,uint)
AppleSPUDispADCDriver::start(IOService *)
AppleSPUDispADCDriver::startMeasurement(void)
AppleSPUDispADCDriver::startRawParamsStream(IOSharedDataQueue *,ulong long,ulong long)
AppleSPUDispADCDriver::startRawStream(IOSharedDataQueue *)
AppleSPUDispADCDriver::stop(IOService *)
AppleSPUDispADCDriver::stopMeasurement(OSData **)
AppleSPUDispADCUserClient::clientClose(void)
AppleSPUDispADCUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleSPUDispADCUserClient::extStartMeasurementMethod(AppleSPUDispADCDriver *,void *,IOExternalMethodArguments *)
AppleSPUDispADCUserClient::extStartRawMethod(AppleSPUDispADCDriver *,void *,IOExternalMethodArguments *)
AppleSPUDispADCUserClient::extStartRawParamsMethod(AppleSPUDispADCDriver *,void *,IOExternalMethodArguments *)
AppleSPUDispADCUserClient::extStopMeasurementMethod(AppleSPUDispADCDriver *,void *,IOExternalMethodArguments *)
AppleSPUDispADCUserClient::extStopRawMethod(AppleSPUDispADCDriver *,void *,IOExternalMethodArguments *)
AppleSPUDispADCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUDispADCUserClient::free(void)
AppleSPUDispADCUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
AppleSPUDispADCUserClient::start(IOService *)
AppleSPUFirmwareService::addExternalSegment(uint,void const*,uint,uint)
AppleSPUFirmwareService::chooseFirmwareFromBundleInternal(RTBuddyFirmwareBundle *)
AppleSPUFirmwareService::chooseFirmwareFromBundleInternal(RTBuddyFirmwareBundle *)
AppleSPUFirmwareService::configExternalSegments(RTBuddyFirmware *)
AppleSPUFirmwareService::configExternalSegmentsForPreloadedFirmware(RTBuddyFirmware *)
AppleSPUFirmwareService::createFirmware(void)
AppleSPUFirmwareService::createFirmwareFromFUD(void)
AppleSPUFirmwareService::free(void)
AppleSPUFirmwareService::fudDownloadCallback(FWValidationStatus,uint,OSData *)
AppleSPUFirmwareService::fudDownloadCallbackGated(FWValidationStatus,uint,OSData *)
AppleSPUFirmwareService::fudDownloadCallbackGated(FWValidationStatus,uint,OSData *)
AppleSPUFirmwareService::fudESAction(IOTimerEventSource *)
AppleSPUFirmwareService::fudWaitForFirmwareReadyGated(void)
AppleSPUFirmwareService::getChipRole(void)
AppleSPUFirmwareService::patchFirmware(RTBuddyFirmware *)
AppleSPUFirmwareService::start(IOService *)
AppleSPUFirmwareService::stop(IOService *)
AppleSPUFirmwareService::updatePatchbayVariables(RTBuddyFirmware *)
AppleSPUFirmwareService::updatePatchbayVariables(RTBuddyFirmware *)
AppleSPUFirmwareService::waitForDAPFReady(void)
AppleSPUGpioUnplugDriver::handleReportPacket(uint,ulong long,uchar const*,ulong,uint)
AppleSPUGpioUnplugDriver::handleUnplugReport(uchar const*)
AppleSPUGpioUnplugDriver::start(IOService *)
AppleSPUGyroCalibration::hasValidCalibrationSet(void)
AppleSPUHIDDevice::BeginCopyEventMultiple(void)
AppleSPUHIDDevice::CheckPendingReset(void)
AppleSPUHIDDevice::EndCopyEventMultiple(void)
AppleSPUHIDDevice::ExternalReset(void)
AppleSPUHIDDevice::GrapeCS(uint)
AppleSPUHIDDevice::LVBoost(uint)
AppleSPUHIDDevice::MetaClass::alloc(void)
AppleSPUHIDDevice::Reset(void)
AppleSPUHIDDevice::ResetInternal(void)
AppleSPUHIDDevice::_handleReportPacket(uint,ulong long,uchar const*,ulong,uint,bool)
AppleSPUHIDDevice::_setDeviceProperties(void)
AppleSPUHIDDevice::destroyUserClients(void)
AppleSPUHIDDevice::didTerminate(IOService *,uint,bool *)
AppleSPUHIDDevice::dispatchToRegisteredUC(ulong long,IOMemoryDescriptor *,bool)
AppleSPUHIDDevice::free(void)
AppleSPUHIDDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleSPUHIDDevice::getReportInternal(IOMemoryDescriptor *,uint *)
AppleSPUHIDDevice::handleAggregateDictionaryPacket(ulong long,uchar const*,ulong)
AppleSPUHIDDevice::handleDeviceStateReport(ulong long,uchar const*,ulong)
AppleSPUHIDDevice::handleHIDReportPacket(ulong long,uchar const*,ulong,bool)
AppleSPUHIDDevice::handleSPIRawReportPacket(ulong long,uchar const*,ulong)
AppleSPUHIDDevice::handleStart(IOService *)
AppleSPUHIDDevice::handleStop(IOService *)
AppleSPUHIDDevice::init(OSDictionary *)
AppleSPUHIDDevice::newLocationIDNumber(void)
AppleSPUHIDDevice::newProductIDNumber(void)
AppleSPUHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
AppleSPUHIDDevice::newSerialNumberString(void)
AppleSPUHIDDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
AppleSPUHIDDevice::newVendorIDNumber(void)
AppleSPUHIDDevice::publishProperties(IOService *)
AppleSPUHIDDevice::registerUserClientGated(AppleSPUHIDDeviceUserClient *,ulong)
AppleSPUHIDDevice::setHistoricalBufferDefersQueueStart(bool)
AppleSPUHIDDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleSPUHIDDevice::setReportInternal(IOMemoryDescriptor *)
AppleSPUHIDDevice::start(IOService *)
AppleSPUHIDDevice::unregisterUserClientGated(AppleSPUHIDDeviceUserClient *,ulong)
AppleSPUHIDDevice::~AppleSPUHIDDevice()
AppleSPUHIDDeviceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleSPUHIDDeviceUserClient::enqueueAggregateDictionaryData(AggD const*,ulong)
AppleSPUHIDDeviceUserClient::enqueueData(uchar *,uint)
AppleSPUHIDDeviceUserClient::extCloseMethod(AppleSPUHIDDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHIDDeviceUserClient::extOpenMethod(AppleSPUHIDDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHIDDeviceUserClient::extResetMethod(AppleSPUHIDDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHIDDeviceUserClient::extSendCommandMethod(AppleSPUHIDDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHIDDeviceUserClient::extSetSPIReportModeMethod(AppleSPUHIDDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHIDDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUHIDDeviceUserClient::free(void)
AppleSPUHIDDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSPUHIDDeviceUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
AppleSPUHIDDeviceUserClient::start(IOService *)
AppleSPUHIDDeviceUserClient::stop(IOService *)
AppleSPUHIDDriver::AppleSPUHIDDriver(OSMetaClass const*)
AppleSPUHIDDriver::AppleSPUHIDDriver(void)
AppleSPUHIDDriver::BeginCopyEventMultiple(void)
AppleSPUHIDDriver::EndCopyEventMultiple(void)
AppleSPUHIDDriver::MetaClass::alloc(void)
AppleSPUHIDDriver::_debugSerializerCallback(OSSerialize *)
AppleSPUHIDDriver::_forcePWM(bool)
AppleSPUHIDDriver::_handleCompassUpdate(void *)
AppleSPUHIDDriver::_handleTimesync(void *)
AppleSPUHIDDriver::_handleTimesyncGated(void)
AppleSPUHIDDriver::_serializedTemperatureCallback(OSSerialize *)
AppleSPUHIDDriver::_setCoexPropertyGated(bool,AppleSPUHIDDriver::coex_params_t *)
AppleSPUHIDDriver::_updateCompassDisplayCompensation(int,double)
AppleSPUHIDDriver::addEventExtensions(ulong long,IOHIDEvent *,void *,ulong,ulong)
AppleSPUHIDDriver::calcFirstSampleStats(void)
AppleSPUHIDDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUHIDDriver::clearHistoricalQueue(void)
AppleSPUHIDDriver::closeForClient(IOService *,void *,uint)
AppleSPUHIDDriver::copyEventForAonBufferClient(OSObject *,uint,void *)
AppleSPUHIDDriver::copyEventForClient(OSObject *,uint,void *)
AppleSPUHIDDriver::copyEventForRTClient(OSObject *,uint,void *)
AppleSPUHIDDriver::copyPropertyForClient(char const*,void *)
AppleSPUHIDDriver::didTerminate(IOService *,uint,bool *)
AppleSPUHIDDriver::enableCompassCompensation(uchar,bool)
AppleSPUHIDDriver::free(void)
AppleSPUHIDDriver::freeCompassCompensationData(void)
AppleSPUHIDDriver::getLocationID(void)
AppleSPUHIDDriver::getOrientation(void)
AppleSPUHIDDriver::getPlacement(void)
AppleSPUHIDDriver::handleBasebandNotification(void *,uint,IOService *,void *,ulong)
AppleSPUHIDDriver::handleChargerNotification(IOTimerEventSource *)
AppleSPUHIDDriver::handleCoexNotification(void *,uint,IOService *,void *,ulong)
AppleSPUHIDDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUHIDDriver::handleMotionReport(ulong long,IOMemoryDescriptor *,uint)
AppleSPUHIDDriver::handleStart(IOService *)
AppleSPUHIDDriver::handleStop(IOService *)
AppleSPUHIDDriver::handleTimesyncNotification(void *,uint,IOService *,void *,ulong)
AppleSPUHIDDriver::handleVendorSpecificReport(ulong long,IOMemoryDescriptor *,uint)
AppleSPUHIDDriver::isSupportedUsagePair(void)
AppleSPUHIDDriver::loadCalibrationData(void)
AppleSPUHIDDriver::openForClient(IOService *,uint,OSDictionary *,void **)
AppleSPUHIDDriver::registerForBasebandNotification(void)
AppleSPUHIDDriver::registerForChargerNotification(void)
AppleSPUHIDDriver::registerForCoexNotification(OSString *,AppleSPUHIDDriver::coex_params_t *)
AppleSPUHIDDriver::sensorStartdogHandler(IOTimerEventSource *)
AppleSPUHIDDriver::sensorWatchdogHandler(IOTimerEventSource *)
AppleSPUHIDDriver::serializedTemperatureCallback(void *,OSSerialize *)
AppleSPUHIDDriver::setPowerState(ulong,IOService *)
AppleSPUHIDDriver::setPowerStateGated(ulong,IOService *)
AppleSPUHIDDriver::setProperties(OSObject *)
AppleSPUHIDDriver::setPropertiesForClient(OSObject *,void *)
AppleSPUHIDDriver::setPropertiesGated(OSDictionary *)
AppleSPUHIDDriver::setSensorProperties(void)
AppleSPUHIDDriver::signalChargerNotification(void)
AppleSPUHIDDriver::spuCopyProperty(uint,OSString **,bool)
AppleSPUHIDDriver::spuSetProperty(uint,OSData *,bool)
AppleSPUHIDDriver::spuUpdateAmperage(uint)
AppleSPUHIDDriver::startSensorWatchdog(void)
AppleSPUHIDDriver::stopSensorWatchdog(void)
AppleSPUHIDDriver::~AppleSPUHIDDriver()
AppleSPUHIDDriverUserClient::clientClose(void)
AppleSPUHIDDriverUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleSPUHIDDriverUserClient::extAssertErrorMethod(AppleSPUHIDDriver *,void *,IOExternalMethodArguments *)
AppleSPUHIDDriverUserClient::extSendCommandMethod(AppleSPUHIDDriver *,void *,IOExternalMethodArguments *)
AppleSPUHIDDriverUserClient::start(IOService *)
AppleSPUHIDInterface::spuHIDInterface(IORegistryEntry *,IOService *,OSSymbol const*,uint,uint)
AppleSPUHapticsAudioDriver::MetaClass::alloc(void)
AppleSPUHapticsAudioDriver::handleClickStateConfig(OSArray *)
AppleSPUHapticsAudioDriver::handleClickStateGlobalConfig(OSDictionary *)
AppleSPUHapticsAudioDriver::playAsset(SpuSSHBClickSpeed,SpuSSHBClickState,uint)
AppleSPUHapticsAudioDriver::setHapticsAudioStateAssertion(AppleSPUHapticsAudioSelect,AppleSPUHapticsAudioState,uint)
AppleSPUHapticsAudioDriver::setPropertiesGated(OSObject *)
AppleSPUHapticsAudioDriver::start(IOService *)
AppleSPUHapticsAudioDriver::~AppleSPUHapticsAudioDriver()
AppleSPUHapticsAudioUC::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUHapticsManagerDriver::latencyCheck(HapticsManagerPlayAssetRequest *)
AppleSPUHapticsManagerDriver::playAssetGated(HapticsManagerPlayAssetRequest *)
AppleSPUHapticsManagerDriver::start(IOService *)
AppleSPUHapticsManagerUserClient::extPlayAsset(AppleSPUHapticsManagerUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHapticsManagerUserClient::extSetMapping(AppleSPUHapticsManagerUserClient*,void *,IOExternalMethodArguments *)
AppleSPUHapticsManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUHapticsManagerUserClient::free(void)
AppleSPUHapticsManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSPUHapticsManagerUserClient::start(IOService *)
AppleSPUInterface::CompareProperty(IOService *,OSDictionary *,char const*,int *,int)
AppleSPUInterface::PerformCommand(uint,void const*,ulong,void *,ulong *,bool)
AppleSPUInterface::SetNamedProperty(char const*,void const*,ulong,ulong long,bool)
AppleSPUInterface::SetProperty(uint,void const*,ulong,bool)
AppleSPUInterface::_debugSerializerCallback(OSSerialize *)
AppleSPUInterface::_handleHistoricalPacket(uchar *,ulong)
AppleSPUInterface::_handleMessageReport(_SpuMessageData const*,ulong)
AppleSPUInterface::_handlePacket(uchar *,ulong)
AppleSPUInterface::_handleReport(_AOPSubPacket *,bool)
AppleSPUInterface::_handleReportPacket(_AOPSubPacket *)
AppleSPUInterface::_handleResponsePacket(_AOPSubPacket *)
AppleSPUInterface::_handleSubPacket(_AOPSubPacket *)
AppleSPUInterface::_handleTxHistoricalQueueLocal(uint,uchar *,ulong,uint)
AppleSPUInterface::_messageGated(uint,IOService *,void *)
AppleSPUInterface::_prepareOOLBuffer(IOSlaveMemory **,uchar const*,ulong)
AppleSPUInterface::_reportPacketStatistics(_AOPSubPacket *,ulong long,bool)
AppleSPUInterface::_sendCommandGated(_AOPSubPacket *,uchar *,ulong,bool)
AppleSPUInterface::_setPowerStateGated(ulong,IOService *)
AppleSPUInterface::_setPropertiesGated(OSDictionary *)
AppleSPUInterface::_spuGetNamedPropertyGated(AppleSPUInterface::_GetNamedPropertyParams *)
AppleSPUInterface::_spuGetPropertyGated(SpuProperty,void *,ulong *,bool)
AppleSPUInterface::_spuPerformCommandGated(SpuPacketType,uchar const*,ulong,AppleSPUInterface::_command_Params *)
AppleSPUInterface::_spuPerformCommandInternalGated(SpuPacketType,bool,uchar const*,ulong,uchar *,ulong *,uint,bool)
AppleSPUInterface::_spuSetNamedPropertyGated(AppleSPUInterface::_SetNamedPropertyParams *)
AppleSPUInterface::_spuSetPropertyGated(SpuProperty,void const*,ulong,bool)
AppleSPUInterface::_systemWillShutdownGated(uint)
AppleSPUInterface::allocateVisibleMemory(uint,ulong long,ulong long)
AppleSPUInterface::allocateVisibleMemory(ulong long)
AppleSPUInterface::applyToHistorical(void (*)(OSObject *,uint,ulong long,uchar const*,ulong,uint),OSObject *)
AppleSPUInterface::applyToHistoricalNEWGated(void *,OSObject *)
AppleSPUInterface::createReporters(void)
AppleSPUInterface::debugSerializerCallback(void *,OSSerialize *)
AppleSPUInterface::free(void)
AppleSPUInterface::initWithRegistryEntry(IORegistryEntry *,IOService *)
AppleSPUInterface::matchPropertyTable(OSDictionary *,int *)
AppleSPUInterface::message(uint,IOService *,void *)
AppleSPUInterface::setAOTAware(void)
AppleSPUInterface::setAOTAware(void)
AppleSPUInterface::setPowerState(ulong,IOService *)
AppleSPUInterface::setProperties(OSObject *)
AppleSPUInterface::start(IOService *)
AppleSPUInterface::stop(IOService *)
AppleSPUInterface::systemWillShutdown(uint)
AppleSPUInterface::updateReport(IOReportChannelList *,uint,void *,void *)
AppleSPUMarconiControl::AppleSPUMarconiControl(void)
AppleSPUMarconiControl::MetaClass::alloc(void)
AppleSPUMarconiControl::_setPowerStateGated(ulong,IOService *)
AppleSPUMarconiControl::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUMarconiControl::free(void)
AppleSPUMarconiControl::notifyMarconiPowerEnableGated(bool)
AppleSPUMarconiControl::setPowerState(ulong,IOService *)
AppleSPUMarconiControl::start(IOService *)
AppleSPUMarconiControl::stop(IOService *)
AppleSPUMarconiFunction::callFunction(void *,void *,void *)
AppleSPUMarconiFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleSPUMesaDriver::MetaClass::alloc(void)
AppleSPUMesaDriver::ResetHW(void)
AppleSPUMesaDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUMesaDriver::handleMesaResetNotify(bool *)
AppleSPUMesaDriver::handleStart(IOService *)
AppleSPUMesaDriver::~AppleSPUMesaDriver()
AppleSPUPDMCLKDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUPDMCLKDriver::start(IOService *)
AppleSPUPressureCalibration::hasValidCalibrationSet(void)
AppleSPUProfileDriver::AppleSPUProfileDriver(void)
AppleSPUProfileDriver::MetaClass::alloc(void)
AppleSPUProfileDriver::absolutetime_to_sputime(ulong long)
AppleSPUProfileDriver::acquireProfiler(void)
AppleSPUProfileDriver::acquireSubProfiler(uint)
AppleSPUProfileDriver::allocateErrdump(void)
AppleSPUProfileDriver::allocateQueue(void)
AppleSPUProfileDriver::configureProfile(_SpuProfileComponentConfig const*,uint)
AppleSPUProfileDriver::configureProfileGated(_SpuProfileComponentConfig const*,uint)
AppleSPUProfileDriver::copyBuffer(void)
AppleSPUProfileDriver::dispatchReports(_SpuProfileReport const*,uint,uint)
AppleSPUProfileDriver::enableProfile(bool)
AppleSPUProfileDriver::enableProfileGated(bool)
AppleSPUProfileDriver::free(void)
AppleSPUProfileDriver::getErrDump(uchar *,ulong *)
AppleSPUProfileDriver::getErrDumpGated(uchar *,ulong *)
AppleSPUProfileDriver::getProfileConfig(_SpuProfileComponentConfig *,uint *,uint)
AppleSPUProfileDriver::getProfileConfigGated(_SpuProfileComponentConfig *,uint *,uint)
AppleSPUProfileDriver::getRawDataGated(uchar *,ulong *)
AppleSPUProfileDriver::handleDataPacket(OSSymbol const*,_AOPSubPacket *,ulong long,bool)
AppleSPUProfileDriver::handleErrdumpCapture(void)
AppleSPUProfileDriver::handleErrdumpCaptureGated(void)
AppleSPUProfileDriver::handleSleepWake(OSSymbol const*,uint)
AppleSPUProfileDriver::releaseErrdump(void)
AppleSPUProfileDriver::releaseQueue(void)
AppleSPUProfileDriver::setFirmwareProfilerGated(AppleSPUProfileFirmwareDriver *)
AppleSPUProfileDriver::setNotificationPort(ipc_port *)
AppleSPUProfileDriver::signalBreakGated(void)
AppleSPUProfileDriver::signalErrdumpGated(uint)
AppleSPUProfileDriver::start(IOService *)
AppleSPUProfileDriver::stop(IOService *)
AppleSPUProfileDriver::stopGated(IOService *)
AppleSPUProfileDriver::~AppleSPUProfileDriver()
AppleSPUProfileDriverUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleSPUProfileDriverUserClient::extConfigureMethod(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extGetConfigMethod(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extGetEnabledMethod(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extGetErrDump(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extReportSensorAnnotation(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extReportTrace(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::extSignalErrDump(AppleSPUProfileDriver *,void *,IOExternalMethodArguments *)
AppleSPUProfileDriverUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUProfileFirmwareDriver::AppleSPUProfileFirmwareDriver(void)
AppleSPUProfileFirmwareDriver::MetaClass::alloc(void)
AppleSPUProfileFirmwareDriver::allocateQueue(void)
AppleSPUProfileFirmwareDriver::attachToProfiler(bool)
AppleSPUProfileFirmwareDriver::free(void)
AppleSPUProfileFirmwareDriver::handleBootArgsGated(void)
AppleSPUProfileFirmwareDriver::handleControlEvent(_SpuProfileReport *)
AppleSPUProfileFirmwareDriver::handleErrdumpCaptureGated(void)
AppleSPUProfileFirmwareDriver::handleProfileEnable(void)
AppleSPUProfileFirmwareDriver::handleProfileEnableGated(void)
AppleSPUProfileFirmwareDriver::handleProfilePacket(uint,uchar const*,ulong,uint)
AppleSPUProfileFirmwareDriver::releaseQueue(void)
AppleSPUProfileFirmwareDriver::signalEnable(bool)
AppleSPUProfileFirmwareDriver::signalEnableGated(bool)
AppleSPUProfileFirmwareDriver::signalErrdumpGated(void)
AppleSPUProfileFirmwareDriver::start(IOService *)
AppleSPUProfileFirmwareDriver::stop(IOService *)
AppleSPUProfileFirmwareDriver::stopGated(IOService *)
AppleSPUProfileReport::build_event_ap(uint,uint,ulong long,uint,char *)
AppleSPUProfileReport::build_event_v(uint,uint,ulong long,uint,...)
AppleSPUProfileReport::build_long_data(uint,uint,ulong long,uint,void const*,ulong,void (*)(void *,_SpuProfileReport const*),void *)
AppleSPURemoteCrashdump::AppleSPURemoteCrashdump(void)
AppleSPURemoteCrashdump::MetaClass::alloc(void)
AppleSPURemoteCrashdump::clear(void)
AppleSPURemoteCrashdump::free(void)
AppleSPURoseDriver::MetaClass::alloc(void)
AppleSPURoseDriver::_crashSessionTimeoutHandler(void)
AppleSPURoseDriver::_dumpPacket(void const*,uint,char const*)
AppleSPURoseDriver::_flushCrashlog(uchar *,ulong,uchar)
AppleSPURoseDriver::_handleCoredump(RoseCoredump **,uchar const*,ulong)
AppleSPURoseDriver::_handleCrash(uchar const*,ulong)
AppleSPURoseDriver::_handleCrashlog(RoseCrashlog **,uchar const*,ulong)
AppleSPURoseDriver::_handleFirmwarelog(uchar const*,ulong)
AppleSPURoseDriver::_handleRKOSEvent(uchar const*,ulong)
AppleSPURoseDriver::_handleResponsePacketGated(uchar const*,ulong)
AppleSPURoseDriver::_handleRxPacket(uint,ulong long,uchar const*,ulong,uint)
AppleSPURoseDriver::_notifyUserClientState(bool)
AppleSPURoseDriver::_processCrashlogPacket(uchar const*,ulong)
AppleSPURoseDriver::_publishTime(RoseTimeDescriptor *)
AppleSPURoseDriver::_publishUIDs(void)
AppleSPURoseDriver::_queueDriverErrorPacket(uchar,uchar const*,ulong)
AppleSPURoseDriver::_queueRxPacket(uchar const*,ulong,uchar)
AppleSPURoseDriver::_releaseCrashSessionData(void)
AppleSPURoseDriver::_resetHwGated(void)
AppleSPURoseDriver::_setFirmwareState(_roseFirmwareState)
AppleSPURoseDriver::_setPowerStateGated(ulong,IOService *)
AppleSPURoseDriver::_startCrashSession(uchar)
AppleSPURoseDriver::_stopCrashSession(void)
AppleSPURoseDriver::_systemWillShutdownGated(uint)
AppleSPURoseDriver::allocateQueue(uint)
AppleSPURoseDriver::allocateQueues(void)
AppleSPURoseDriver::copyBuffer(uint)
AppleSPURoseDriver::enqueue(uint,void *,uint,bool)
AppleSPURoseDriver::enterCommandMode(void)
AppleSPURoseDriver::free(void)
AppleSPURoseDriver::getRosePowerState(uint *)
AppleSPURoseDriver::handleClose(IOService *,uint)
AppleSPURoseDriver::handleOpen(IOService *,uint,void *)
AppleSPURoseDriver::loadFirmware(IOMemoryDescriptor *,IOMemoryDescriptor *,IOMemoryDescriptor *)
AppleSPURoseDriver::performCommand(void const*,ulong,void *,ulong *,uchar,ushort)
AppleSPURoseDriver::ping(void)
AppleSPURoseDriver::releaseQueue(uint)
AppleSPURoseDriver::releaseQueueNoLock(uint)
AppleSPURoseDriver::releaseQueues(void)
AppleSPURoseDriver::releaseQueues(void)
AppleSPURoseDriver::setNotificationPort(ipc_port *,uint)
AppleSPURoseDriver::setPowerState(ulong,IOService *)
AppleSPURoseDriver::start(IOService *)
AppleSPURoseDriver::stop(IOService *)
AppleSPURoseDriver::systemWillShutdown(uint)
AppleSPURoseDriver::timeSync(RoseTimeDescriptor *)
AppleSPURoseDriver::triggerClient(bool)
AppleSPURoseDriverUserClient::MetaClass::alloc(void)
AppleSPURoseDriverUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
AppleSPURoseDriverUserClient::extRoseCacheFirmwareLogs(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseConfigureFirmwareLogCache(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseCoredumpInfo(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseDequeueCoredump(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseDequeueFirmwareLogs(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseGetProperty(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseGetSyncedTime(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseLoadFirmware(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRosePerformInternalCommand(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRosePowerOn(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseReadPowerState(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseSetProperty(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseTimeSync(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::extRoseTx(AppleSPURoseDriver *,void *,IOExternalMethodArguments *)
AppleSPURoseDriverUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPURoseDriverUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSPURoseDriverUserClient::start(IOService *)
AppleSPURoseDriverUserClient::stop(IOService *)
AppleSPUSensorProfiler::_dispatchEvent(uint,ulong long,uint,uint,uint,uint,uint)
AppleSPUSensorProfiler::_reportAPClientInfo(uint,char const*,uint,uint,bool,uint)
AppleSPUSensorProfiler::_watchdogTimeout(uint,uint)
AppleSPUSensorProfiler::annotate(uint,ulong long,ulong long,ulong long,uint,uint)
AppleSPUSensorProfiler::buildDataEvent(AppleSPUProfileReport &,uint,ulong long,uint,uint,uint,uint,uint)
AppleSPUSensorProfiler::cache_long_data_callback(void *,_SpuProfileReport const*)
AppleSPUSensorProfiler::configure_component(uint,uint,_SpuProfileComponentConfig const*)
AppleSPUSensorProfiler::dispatchEvent(uint,ulong long,_SpuAxisData *)
AppleSPUSensorProfiler::dispatchEvent(uint,ulong long,uint,uint,uint,uint,uint)
AppleSPUSensorProfiler::findSPUInterface(char const*,char const*)
AppleSPUSensorProfiler::free(void)
AppleSPUSensorProfiler::handleSleepWake(OSSymbol const*,uint)
AppleSPUSensorProfiler::init(AppleSPUProfileDriver *)
AppleSPUSensorProfiler::reportAPClientInfo(uint,char const*,uint,uint,bool,uint)
AppleSPUSensorProfiler::reportFirstLatency(uint,uint,uint)
AppleSPUSensorProfiler::saveErrdump(bool)
AppleSPUSensorProfiler::saveQueueToErrdump(fifo_ext<_SpuProfileReport> &)
AppleSPUSensorProfiler::watchdogTimeout(uint,uint)
AppleSPUServicesProfiler::configure_component(uint,uint,_SpuProfileComponentConfig const*)
AppleSPUServicesProfiler::construct(AppleSPUProfileDriver *,uint,uint)
AppleSPUServicesProfiler::service_id(char const*)
AppleSPUServicesProfiler::should_capture_service(uint,uint,uint)
AppleSPUSimpleAsyncEventSource::checkForWork(void)
AppleSPUSimpleAsyncEventSource::simpleAsyncEventSource(OSObject *,void (*)(OSObject *,...))
AppleSPUSingleShotReporter::free(void)
AppleSPUSingleShotReporter::getProperty(OSSymbol const*)
AppleSPUSingleShotReporter::initWithReport(OSDictionary *)
AppleSPUSmartCoverDriver::MetaClass::alloc(void)
AppleSPUSmartCoverDriver::copyEvent(uint,IOHIDEvent *,uint)
AppleSPUSmartCoverDriver::debugPrintReport(void)
AppleSPUSmartCoverDriver::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
AppleSPUSmartCoverDriver::free(void)
AppleSPUSmartCoverDriver::getAttachState(bool *)
AppleSPUSmartCoverDriver::getCoverState(bool *)
AppleSPUSmartCoverDriver::getUnknownState(bool *)
AppleSPUSmartCoverDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUSmartCoverDriver::handleKeyboardReport(ulong long,uint)
AppleSPUSmartCoverDriver::handleStart(IOService *)
AppleSPUSmartCoverDriver::handleStop(IOService *)
AppleSPUSmartCoverDriver::parseElements(OSArray *)
AppleSPUSmartCoverDriver::setProperties(OSObject *)
AppleSPUSmartCoverDriver::setPropertiesGated(OSObject *)
AppleSPUSphereDriver::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSPUSphereDriver::free(void)
AppleSPUSphereDriver::getData(OSString *,void *,void *)
AppleSPUSphereDriver::getDataGated(OSString *,void *,void *)
AppleSPUSphereDriver::setData(OSString *,void *,void *)
AppleSPUSphereDriver::setDataGated(OSString *,void *,void *)
AppleSPUSphereDriver::setEnable(bool,void *)
AppleSPUSphereDriver::setEnableGated(bool,void *)
AppleSPUSphereDriver::setMotionState(uint,void *)
AppleSPUSphereDriver::setMotionStateGated(uint,void *)
AppleSPUSphereDriver::setPowerState(ulong,IOService *)
AppleSPUSphereDriver::setPowerStateGated(ulong,IOService *)
AppleSPUSphereDriver::start(IOService *)
AppleSPUSphereDriver::stop(IOService *)
AppleSPUSphereDriver::systemWillShutdown(uint)
AppleSPUSphereFunction::callFunction(void *,void *,void *)
AppleSPUSpkAmpStateFunction::callFunction(void *,void *,void *)
AppleSPUSpkAmpStateFunction::free(void)
AppleSPUSpkAmpStateFunction::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleSPUSshbProfiler::handleDataPacket(OSSymbol const*,_AOPSubPacket *,ulong long,bool)
AppleSPUSshbProfiler::init(AppleSPUProfileDriver *)
AppleSPUSshbProfiler::reportEvent(uint,uint,uint,uint,uint,uint)
AppleSPUTimesync::_absolutetime_to_sputime(ulong long *,ulong long *)
AppleSPUTimesync::_initializePowerManagement(IOService *)
AppleSPUTimesync::_notifyClients(void)
AppleSPUTimesync::_sputime_to_absolutetime(ulong long *,ulong long *)
AppleSPUTimesync::_sputime_to_continuoustime(ulong long *,ulong long *)
AppleSPUTimesync::_syncIOPTimebase(void)
AppleSPUTimesync::_syncTimerHandler(IOTimerEventSource *)
AppleSPUTimesync::free(void)
AppleSPUTimesync::serializedTimesync(void *,OSSerialize *)
AppleSPUTimesync::setPowerState(ulong,IOService *)
AppleSPUTimesync::sputime_to_continuoustime(ulong long)
AppleSPUTimesync::start(IOService *)
AppleSPUTimesync::stop(IOService *)
AppleSPUTimesyncV1::_mapRegisters(IOService *)
AppleSPUTimesyncV2::_mapRegisters(IOService *)
AppleSPUTraceProfiler::_report(OSSymbol const*,uint,uint,uint,uint,uint,uint)
AppleSPUTraceProfiler::free(void)
AppleSPUTraceProfiler::handleSleepWake(OSSymbol const*,uint)
AppleSPUTraceProfiler::init(AppleSPUProfileDriver *)
AppleSPUTraceProfiler::report(OSSymbol const*,uint,uint,uint,uint,uint,uint)
AppleSPUTraceProfiler::saveErrdump(bool)
AppleSPUUserClient::extGetNamedPropertyMethod(AppleSPUInterface *,void *,IOExternalMethodArguments *)
AppleSPUUserClient::extGetPropertyMethod(AppleSPUInterface *,void *,IOExternalMethodArguments *)
AppleSPUUserClient::extPerformCommandMethod(AppleSPUInterface *,void *,IOExternalMethodArguments *)
AppleSPUUserClient::extSetNamedPropertyMethod(AppleSPUInterface *,void *,IOExternalMethodArguments *)
AppleSPUUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSPUUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSPUVD6286::MetaClass::alloc(void)
AppleSPUVD6286::handleStart(IOService *)
AppleSPUVD6286::loadCalibrationData(OSData *)
AppleSPUVD6286::probe(IOService *,int *)
AppleSPUVD6287::dumpALSCalData(void)
AppleSPUVD6287::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
AppleSPUVD6287::handleStart(IOService *)
AppleSPUVD6287::loadCalibrationData(OSData *)
AppleSPUVD6287::probe(IOService *,int *)
AppleSPUVisibleMemory::initWithMemoryCapacity(IOMapper *,ulong)
AppleSPUWakeProfiler::handleEvent(OSSymbol const*,uint,void *,uint)
AppleSPUWakeProfiler::init(AppleSPUProfileDriver *)
AppleSSE::MetaClass::alloc(void)
AppleSSE::confirmSigKey(void *,ulong)
AppleSSE::generateSigKey(void *,ulong,void *,uint *)
AppleSSE::getBAACertificateExpirationDate(ulong long *)
AppleSSE::getCertificateExpDateTest(void *,ulong,void *,uint *)
AppleSSE::getCertificateExpirationDate(certificate_type_t,ulong long *)
AppleSSE::getCertificateExpirationDateGated(certificate_type_t,ulong long *)
AppleSSE::getOSArrayOfOSDataFromBuff(uint,uchar *,uchar *,OSArray **,uint *)
AppleSSE::getOSDataFromBuff(uint,uchar *,uchar *,OSData **)
AppleSSE::getSEPEndpoint(void)
AppleSSE::getSignedSepScores(uchar,OSData *,OSData *,OSData *,OSData *,OSData *,OSData *,OSData **,OSData **,OSArray **)
AppleSSE::getSignedSepScores(uchar,OSData *,OSData *,OSData *,OSData *,OSData *,OSData *,OSData **,OSData **,OSData **)
AppleSSE::getSignedSepScores(uint,uchar,OSData *,OSData *,OSData *,OSData *,OSData *,OSData *,OSData **,OSData **,OSArray **)
AppleSSE::getSignedSepScores(uint,uchar,OSData *,OSData *,OSData *,OSData *,OSData *,OSData *,OSData **,OSData **,OSData **)
AppleSSE::getSignedSepScoresGated(AppleSSE::get_signed_sep_scores_params_t *)
AppleSSE::getSignedSepScoresTest(void *,ulong,void *,uint *)
AppleSSE::handleSEPMessage(void *,void *)
AppleSSE::issueNewBAACertificate(void)
AppleSSE::issueNewCertificateGated(certificate_type_t)
AppleSSE::issueNewCertificateTest(void *,ulong)
AppleSSE::lockItem(uint *,uint)
AppleSSE::performCommandGated(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *)
AppleSSE::powerOffCompletionHandler(IOTimerEventSource *)
AppleSSE::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleSSE::prepareBAACertificate(void)
AppleSSE::prepareGetSignedSepScoresV2(AppleSSE::get_signed_sep_scores_params_t *,uchar *,uint,uint *)
AppleSSE::prepareGetSignedSepScoresV3V4V5(AppleSSE::get_signed_sep_scores_params_t *,uchar *,uint,uint *)
AppleSSE::readFromSEPBuffer(void *,ulong)
AppleSSE::sendSEPCommand(uchar,int,void *,ulong,void *,uint *,bool)
AppleSSE::sendSEPMessage(void *,uchar,int,ushort)
AppleSSE::sendSetBlessedUserCommand(void *,ulong)
AppleSSE::setPowerState(ulong,IOService *)
AppleSSE::setPowerStateGated(ulong *)
AppleSSE::start(IOService *)
AppleSSE::stop(IOService *)
AppleSSE::systemWillShutdown(uint)
AppleSSE::unlockItem(uint *)
AppleSSE::wakeFromHibernateHandler(IOTimerEventSource *)
AppleSSE::writeToSEPBuffer(void *,ulong)
AppleSSE::~AppleSSE()
AppleSSEUserClient::clientClose(void)
AppleSSEUserClient::extPerform(AppleSSE *,void *,IOExternalMethodArguments *)
AppleSSEUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSSEUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSSEUserClient::start(IOService *)
AppleSamsungSPIController::MetaClass::alloc(void)
AppleSamsungSPIController::_dmaAbort(AppleARMSPICommand *,int,char const*,char const*)
AppleSamsungSPIController::_dmaEventAction(IODMAEventSource *,IODMACommand *,int,ulong long)
AppleSamsungSPIController::_dmaStop(IODMAEventSource *,uint *,char const*)
AppleSamsungSPIController::_dmaWait(AppleARMSPICommand *,uint *,ulong long,char const*)
AppleSamsungSPIController::_execSetController(void)
AppleSamsungSPIController::_executeSPICommandDMA(AppleARMSPICommand *)
AppleSamsungSPIController::_executeSPICommandNULL(AppleARMSPICommand *)
AppleSamsungSPIController::_executeSPICommandPIO(AppleARMSPICommand *)
AppleSamsungSPIController::_executeSPICommandPIO(AppleARMSPICommand *)
AppleSamsungSPIController::_getRxFIFOSpace(uint)
AppleSamsungSPIController::_getTxFIFOSpace(uint)
AppleSamsungSPIController::_iesControl(void)
AppleSamsungSPIController::_iesInit(void)
AppleSamsungSPIController::_interruptAction(IOInterruptEventSource *,int)
AppleSamsungSPIController::_interruptActionDone(bool,uint *)
AppleSamsungSPIController::_interruptActionSubr(void)
AppleSamsungSPIController::_logEntry(void *,uint,ushort,ushort)
AppleSamsungSPIController::_setCS(bool)
AppleSamsungSPIController::_setInternalCS(bool)
AppleSamsungSPIController::executeSPICommand(AppleARMSPICommand *)
AppleSamsungSPIController::setSPIConfig(AppleARMSPIConfig *)
AppleSamsungSPIController::setSPIControllerActive(bool)
AppleSamsungSPIController::start(IOService *)
AppleSamsungSPIController::validSPIConfig(AppleARMSPIConfig *)
AppleSamsungSPIController::~AppleSamsungSPIController()
AppleSamsungSPIControllerStats::MetaClass::alloc(void)
AppleSamsungSPIControllerStats::create(AppleARMIODevice *)
AppleSamsungSPIControllerStats::init(void)
AppleSamsungSPIControllerStats::serialize(OSSerialize *)
AppleSamsungSPIControllerStats::spiXferDone(AppleARMSPICommand *)
AppleSamsungSPIControllerStats::spiXferStart(AppleARMSPICommand *)
AppleSamsungSPIControllerStats::~AppleSamsungSPIControllerStats()
AppleSamsungSerial::completeDMA(IODMAEventSource *,AppleSimpleUARTCommand *,int,ulong long)
AppleSamsungSerial::free(void)
AppleSamsungSerial::hwEnableInterrupts(bool,bool,bool,bool)
AppleSamsungSerial::hwEnableLine(bool)
AppleSamsungSerial::hwEnableUART(bool)
AppleSamsungSerial::hwEnqueueDMA(AppleSimpleUARTCommand *)
AppleSamsungSerial::hwGetDMAStatus(uint,AppleSimpleUARTCommand **,ulong long *)
AppleSamsungSerial::hwGetDMASupport(void)
AppleSamsungSerial::hwGetModemStatus(bool *,bool *,bool *,bool *)
AppleSamsungSerial::hwGetRxFIFOLevel(void)
AppleSamsungSerial::hwGetTxFIFOLevel(void)
AppleSamsungSerial::hwProgramAFC(bool,bool)
AppleSamsungSerial::hwProgramBaudRate(uint,uint)
AppleSamsungSerial::hwProgramUART(uint,uint,uint,uint,uint)
AppleSamsungSerial::hwResetRxFIFO(void)
AppleSamsungSerial::hwResetUART(void)
AppleSamsungSerial::hwSendBreak(bool)
AppleSamsungSerial::hwSetDMAMode(uint)
AppleSamsungSerial::hwStartAutoBaud(void)
AppleSamsungSerial::hwStopDMA(uint,bool)
AppleSamsungSerial::interruptAction(void)
AppleSamsungSerial::programRTS(void)
AppleSamsungSerial::resetRxTimeout(void)
AppleSamsungSerial::start(IOService *)
AppleSecondaryAudio::MetaClass::alloc(void)
AppleSecondaryAudio::applyMultiControlValue(uint,OSArray const*)
AppleSecondaryAudio::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSecondaryAudio::canPrimaryFunctionEnableAudio(int,uint,bool)
AppleSecondaryAudio::checkCurrentSampleRate(void)
AppleSecondaryAudio::createIOReporters(OSArray const*)
AppleSecondaryAudio::externalSampleRateChange(long long)
AppleSecondaryAudio::externalSampleRateChangeGated(long long *)
AppleSecondaryAudio::forwardSetControlValueToPrimary(uint,uint,uint,uint *)
AppleSecondaryAudio::getClockDomain(void)
AppleSecondaryAudio::getPrimaryLatency(int,uint)
AppleSecondaryAudio::getPrimaryWorkLoop(int)
AppleSecondaryAudio::getSupportedBitsPerSampleList(uint,uint *)
AppleSecondaryAudio::getSupportedChannelCountList(uint,uint *)
AppleSecondaryAudio::getWorkLoop(void)
AppleSecondaryAudio::init(OSDictionary *)
AppleSecondaryAudio::message(uint,IOService *,void *)
AppleSecondaryAudio::notifyDataSourcePrimaryFunctionsDataSourceChange(int,uint)
AppleSecondaryAudio::notifyDataSourcePrimaryFunctionsRouteChange(int,long long *)
AppleSecondaryAudio::notifyDataSourcePrimaryFunctionsStreamFormatChange(int)
AppleSecondaryAudio::notifyDataSourcePrimaryFunctionsVolumeChange(int,uint)
AppleSecondaryAudio::notifyPrimaryFunctionsAudioEnable(int,uint,bool)
AppleSecondaryAudio::notifyPrimaryFunctionsHWPreWarm(int,uint,ulong long *)
AppleSecondaryAudio::notifyStartTransportCompleteGated(int)
AppleSecondaryAudio::notifyStopTransportCompleteGated(int)
AppleSecondaryAudio::performConfigChange(IOAudio2Notification *)
AppleSecondaryAudio::preflightPrimaryFunctionMultiControlValueChange(int,uint,OSArray const*,OSArray const*)
AppleSecondaryAudio::setClockSourceRouteFunction(int,bool)
AppleSecondaryAudio::setControlValue(uint,uint,uint *)
AppleSecondaryAudio::setDataDestinationRouteFunction(int,bool)
AppleSecondaryAudio::setDataSourceRouteFunction(int,bool)
AppleSecondaryAudio::setDeviceFormat(uint,uint,uint)
AppleSecondaryAudio::setDeviceSampleRate(long long,uint *,uint *)
AppleSecondaryAudio::setMultiControlValue(uint *,uint *,ulong long,ulong long *)
AppleSecondaryAudio::sizeofZeroFilledBuffer_ms(bool *)
AppleSecondaryAudio::start(IOService *)
AppleSecondaryAudio::startIOEngine(void)
AppleSecondaryAudio::startIOEngineWithFlags(uint,ulong long *)
AppleSecondaryAudio::startStopIOEngineWithFlags(uint,ulong long *,bool)
AppleSecondaryAudio::startTransportComplete(void)
AppleSecondaryAudio::stopIOEngine(void)
AppleSecondaryAudio::stopIOEngineWithFlags(uint,ulong long *)
AppleSecondaryAudio::stopTransportComplete(void)
AppleSecondaryAudio::updateControlListProperty(uint,uint)
AppleSecondaryAudio::updateDataSourceChannelSelectors(OSArray *)
AppleSecondaryAudio::updatePropertyControls(OSArray *)
AppleSecondaryAudio::updateVolumeControls(OSArray *)
AppleSecondaryAudio::~AppleSecondaryAudio()
AppleSecondaryAudioFunction::GetPrimaryWorkLoop(void)
AppleSecondaryAudioFunction::attachPrimaryDevice(AppleEmbeddedAudio *,OSSymbol const*)
AppleSecondaryAudioFunction::externalSampleRateChange(long long)
AppleSecondaryAudioFunction::getChannelDataSource(uint,uint,uint *,bool)
AppleSecondaryAudioFunction::getCurrentSampleRate(long long *)
AppleSecondaryAudioFunction::getRouteEnabled(void)
AppleSecondaryAudioFunction::getVolume(uint *)
AppleSecondaryAudioFunction::withProvider(IOService *,char const*,AppleEmbeddedAudio *,OSSymbol const*)
AppleSeraBTM::AppleSeraBTM(OSMetaClass const*)
AppleSeraBTM::MetaClass::alloc(void)
AppleSeraBTM::PMUInterruptHandler(IOInterruptEventSource *,int)
AppleSeraBTM::enableSPMIInterrupt(void)
AppleSeraBTM::initWithProvider(IOService *)
AppleSeraBTM::initWithProvider(IOService *)
AppleSeraBTM::pmuSampleTimeoutHandler(IOTimerEventSource *)
AppleSeraBTM::readPICtrl(void)
AppleSeraBTM::readSamples(void)
AppleSeraBTM::readSamples(void)
AppleSeraBTM::startSampling(uint,uint)
AppleSeraBTMiPad::MetaClass::alloc(void)
AppleSeraBTMiPad::forceFullSamplingRate(void)
AppleSeraBTMiPad::forceReducedSamplingRate(void)
AppleSeraBTMiPad::readSamples(void)
AppleSeraBTMiPad::startSampling(uint,uint)
AppleSeraBTMiPad::stopSampling(void)
AppleSerialShim::_interruptAction(IOInterruptEventSource *,int)
AppleSerialShim::_interruptFilter(IOFilterInterruptEventSource *)
AppleSerialShim::start(IOService *)
AppleSetDroopUtilizationControlEffortFunction::callFunction(void *,void *,void *)
AppleSimpleUARTCommand::resetMbuf(__mbuf *)
AppleSimpleUARTSync::MetaClass::alloc(void)
AppleSimpleUARTSync::_initCommandPool(IOWorkLoop *,uint)
AppleSimpleUARTSync::_newCommand(uint,ulong long,ulong long,ulong long,IOMemoryDescriptor *)
AppleSimpleUARTSync::_newCommandWait(uint,ulong long,ulong long)
AppleSimpleUARTSync::_newMbufCommand(uint)
AppleSimpleUARTSync::_txStopDMA(void)
AppleSimpleUARTSync::acquirePort(bool)
AppleSimpleUARTSync::acquirePort(bool,bool)
AppleSimpleUARTSync::acquirePort(bool,bool)::$_0::__invoke(AppleSimpleUARTSync&,bool,bool)
AppleSimpleUARTSync::calculateFIFOLevel(void)
AppleSimpleUARTSync::dequeueData(uchar *,uint,uint *,uint)
AppleSimpleUARTSync::dequeueData(uio *,uint)
AppleSimpleUARTSync::dequeueEvent(uint *,uint *,bool)
AppleSimpleUARTSync::dequeueEventGated(uint *,uint *,bool,bool)
AppleSimpleUARTSync::dmaCompleteCommand(AppleSimpleUARTCommand *)
AppleSimpleUARTSync::dmaCompleteCommand(AppleSimpleUARTCommand *)
AppleSimpleUARTSync::dmaCompleteCommand(AppleSimpleUARTCommand *)::$_12::__invoke(AppleSimpleUARTSync&,AppleSimpleUARTCommand&)
AppleSimpleUARTSync::dmaNotifyCommand(AppleSimpleUARTCommand *,int,ulong long,ulong long)
AppleSimpleUARTSync::enqueueData(IOMemoryDescriptor *,uint,uint,AppleOnboardSerialSync::Completion *)
AppleSimpleUARTSync::enqueueData(IOMemoryDescriptor *,uint,uint,AppleOnboardSerialSync::Completion *)::$_9::__invoke(AppleSimpleUARTSync&,AppleSimpleUARTCommand &)
AppleSimpleUARTSync::enqueueData(__mbuf *)
AppleSimpleUARTSync::enqueueData(__mbuf *)::$_10::__invoke(AppleSimpleUARTSync&,IOSimpleMbufMemoryDescriptor **,__mbuf *)
AppleSimpleUARTSync::enqueueData(__mbuf *)::$_11::__invoke(AppleSimpleUARTSync&,IOSimpleMbufMemoryDescriptor *,int,ulong long)
AppleSimpleUARTSync::enqueueData(uchar *,uint,uint *,bool)
AppleSimpleUARTSync::enqueueData(uio *)
AppleSimpleUARTSync::enqueueEvent(uint,uint,bool)
AppleSimpleUARTSync::executeEvent(uint,uint)
AppleSimpleUARTSync::executeEvent(uint,uint)::$_5::__invoke(AppleSimpleUARTSync&,uint,uint)
AppleSimpleUARTSync::executeEventFiltered(uint,uint)
AppleSimpleUARTSync::free(void)
AppleSimpleUARTSync::getState(void)
AppleSimpleUARTSync::getState(void)::$_3::__invoke(AppleSimpleUARTSync&,uint &)
AppleSimpleUARTSync::hwEnqueueDMA(AppleSimpleUARTCommand &)
AppleSimpleUARTSync::nextEvent(void)
AppleSimpleUARTSync::programInterrupts(uint)
AppleSimpleUARTSync::programRTS(bool)
AppleSimpleUARTSync::programUART(void)
AppleSimpleUARTSync::registerEventFilter(OSObject *,bool (*)(OSObject *,AppleOnboardSerialSync *,uint,uint))
AppleSimpleUARTSync::registerEventFilter(OSObject *,bool (*)(OSObject *,AppleOnboardSerialSync *,uint,uint))::$_7::__invoke(AppleSimpleUARTSync&,OSObject *,void *)
AppleSimpleUARTSync::registerMbufCallback(OSObject *,int (*)(OSObject *,AppleOnboardSerialSync *,__mbuf **),int (*)(OSObject *,AppleOnboardSerialSync *,uint,uint))
AppleSimpleUARTSync::registerMbufCallback(OSObject *,int (*)(OSObject *,AppleOnboardSerialSync *,__mbuf **),int (*)(OSObject *,AppleOnboardSerialSync *,uint,uint))::$_8::__invoke(AppleSimpleUARTSync&,OSObject *,void *,void *)
AppleSimpleUARTSync::releasePort(void)
AppleSimpleUARTSync::releasePort(void)::$_1::__invoke(AppleSimpleUARTSync&)
AppleSimpleUARTSync::requestEvent(uint,uint *)
AppleSimpleUARTSync::requestEvent(uint,uint *)::$_6::__invoke(AppleSimpleUARTSync&,uint,uint *)
AppleSimpleUARTSync::resetUART(void)
AppleSimpleUARTSync::restoreUART(void)
AppleSimpleUARTSync::restoreUART(void)::$_13::__invoke(AppleSimpleUARTSync&)
AppleSimpleUARTSync::rxAllocMbuf(AppleSimpleUARTSync*,ulong)
AppleSimpleUARTSync::rxAutobaudInterrupt(uint)
AppleSimpleUARTSync::rxCompleteCommandGated(AppleSimpleUARTCommand &)
AppleSimpleUARTSync::rxCompleteCommandGated(AppleSimpleUARTCommand &)
AppleSimpleUARTSync::rxDataGated(uchar *,uint,uint *,uint)
AppleSimpleUARTSync::rxDataInterrupt(bool)
AppleSimpleUARTSync::rxErrorInterrupt(bool,bool,bool,bool)
AppleSimpleUARTSync::rxFreeMbufCluster(char *,uint,char *)
AppleSimpleUARTSync::rxGetStatusEvent(uint *,uint *,bool)
AppleSimpleUARTSync::rxMbufDataCallback(void)
AppleSimpleUARTSync::rxMbufInterruptEventGated(IOInterruptEventSource *,int)
AppleSimpleUARTSync::rxQueueState(void)
AppleSimpleUARTSync::rxResizeQueue(ulong long)
AppleSimpleUARTSync::rxStartDMA(void)
AppleSimpleUARTSync::rxStopDMA(bool)
AppleSimpleUARTSync::rxUpdateDMA(void)
AppleSimpleUARTSync::rxUpdateDMAQueueState(ulong long)
AppleSimpleUARTSync::rxUpdateQueueState(void)
AppleSimpleUARTSync::saveUART(void)::$_14::__invoke(AppleSimpleUARTSync&)
AppleSimpleUARTSync::setState(uint,uint)
AppleSimpleUARTSync::setState(uint,uint)::$_2::__invoke(AppleSimpleUARTSync&,uint,uint)
AppleSimpleUARTSync::setStateInternal(uint,uint,bool)
AppleSimpleUARTSync::start(IOService *)
AppleSimpleUARTSync::txDataGated(uchar const*,uint,uint *)
AppleSimpleUARTSync::txProcess(void)
AppleSimpleUARTSync::waitAwake(void)
AppleSimpleUARTSync::watchState(uint *,uint)
AppleSimpleUARTSync::watchState(uint *,uint)::$_4::__invoke(AppleSimpleUARTSync&,uint &,uint)
AppleSimpleUARTSync::watchStateInternal(uint,uint,uint)
AppleSmartBattery::MetaClass::alloc(void)
AppleSmartBattery::_smcKeyInfo(uint,int *,bool *)
AppleSmartBattery::_smcReadKey(uint,ulong long,void *)
AppleSmartBattery::_smcWriteKey(uint,ulong long,void *)
AppleSmartBattery::acknowledgeSystemSleepWakeGated(void)
AppleSmartBattery::checkBatteryId(void)
AppleSmartBattery::checkBatteryIdNotification(void *,IOService *,IONotifier *)
AppleSmartBattery::clearBatteryStateGated(bool)
AppleSmartBattery::configureReport(IOReportChannelList *,uint,void *,void *)
AppleSmartBattery::copyFedInfo(uchar)
AppleSmartBattery::copyProperty(char const*)
AppleSmartBattery::copySMCAdapterInfo(uchar)
AppleSmartBattery::createReporters(void)
AppleSmartBattery::externalConnectedTimeout(void)
AppleSmartBattery::getAverageIBUS(int *)
AppleSmartBattery::handleLpemPropsGated(OSDictionary *)
AppleSmartBattery::handleLpemPropsGated(OSDictionary *)
AppleSmartBattery::handleMaskDockGated(OSArray *)
AppleSmartBattery::handleMaskDockGated(OSArray *)
AppleSmartBattery::handleObcPropsGated(OSDictionary *)
AppleSmartBattery::handleObcPropsGated(OSDictionary *)
AppleSmartBattery::handlePollingFinished(bool)
AppleSmartBattery::handlePollingFinishedGated(bool,ushort)
AppleSmartBattery::handleSetItAndForgetIt(int,int,uchar const*,ulong long)
AppleSmartBattery::handleSetOverrideCapacity(ushort,bool)
AppleSmartBattery::handleSetOverrideCapacityGated(ushort,bool)
AppleSmartBattery::handleSwitchToTrueCapacity(void)
AppleSmartBattery::handleSwitchToTrueCapacityGated(void)
AppleSmartBattery::handleSystemSleepWake(IOService *,bool)
AppleSmartBattery::handleSystemSleepWakeGated(IOService *,bool)
AppleSmartBattery::incompleteReadTimeOut(void)
AppleSmartBattery::init(void)
AppleSmartBattery::initializeCommands(void)
AppleSmartBattery::initiateNextTransaction(uint)
AppleSmartBattery::initiateTransaction(CommandStruct *)
AppleSmartBattery::initiateTransactionGated(CommandStruct *)
AppleSmartBattery::messageSMC(OSSymbol const*,OSObject *,ulong)
AppleSmartBattery::modifyChargeState(bool,uchar)
AppleSmartBattery::modifyChargeState(bool,uchar)
AppleSmartBattery::modifyConnectedState(bool,uchar)
AppleSmartBattery::modifyConnectedState(bool,uchar)
AppleSmartBattery::pmpDiffAmp(bool)
AppleSmartBattery::pollBatteryState(int)
AppleSmartBattery::readAccessoryInfo(void)
AppleSmartBattery::readAdapterInfo(void)
AppleSmartBattery::readFedInfo(void)
AppleSmartBattery::readGgDfUpdateData(void)
AppleSmartBattery::readPowerOutInfo(void)
AppleSmartBattery::readPowerTelemetryInfo(void)
AppleSmartBattery::readShutdownData(void)
AppleSmartBattery::setChargeLimitDisplay(bool)
AppleSmartBattery::setChargeLimitDisplay(bool)
AppleSmartBattery::setChargeRateLimit(OSObject *)
AppleSmartBattery::setChargeRateLimit(OSObject *)
AppleSmartBattery::setProperties(OSObject *)
AppleSmartBattery::setPropertiesGated(OSObject *,OSDictionary *)
AppleSmartBattery::setWirelessCloak(bool)
AppleSmartBattery::setWirelessCloak(bool)
AppleSmartBattery::smartBattery(void)
AppleSmartBattery::smcNotifierHandler(void *,IOService *,IONotifier *)
AppleSmartBattery::smcReadKeyCompletion(CommandStruct *,uchar,uchar *)
AppleSmartBattery::smcReadKeyThreadCall(void *)
AppleSmartBattery::smcReadKeyThreadCallGated(CommandStruct *)
AppleSmartBattery::start(IOService *)
AppleSmartBattery::transactionCompletion(void *,int,ulong long,uchar *)
AppleSmartBattery::transactionCompletionGated(transactionCompletionGatedArgs *)
AppleSmartBattery::updateBatteryDataGated(void)
AppleSmartBattery::updateChannelValue(IOSimpleReporter *,ulong long,OSObject *)
AppleSmartBattery::updateDictionaryInIOReg(OSSymbol const*,smcToRegistry *)
AppleSmartBattery::updateReport(IOReportChannelList *,uint,void *,void *)
AppleSmartBattery::~AppleSmartBattery()
AppleSmartBatteryManager::handleFullDischarge(void)
AppleSmartBatteryManager::inhibitCharging(int)
AppleSmartBatteryManager::init(void)
AppleSmartBatteryManager::setOverrideCapacity(ushort)
AppleSmartBatteryManager::setPowerState(ulong,IOService *)
AppleSmartBatteryManager::start(IOService *)
AppleSmartBatteryManager::switchToTrueCapacity(void)
AppleSmartBatteryManagerUserClient::clientClose(void)
AppleSmartBatteryManagerUserClient::clientCloseGated(void)
AppleSmartBatteryManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleSmartBatteryManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleSmartBatteryManagerUserClient::secureInflowDisable(int,int *)
AppleSmartBatteryManagerUserClient::start(IOService *)
AppleSmartIO::MetaClass::alloc(void)
AppleSmartIO::_incomingMsgAction(ulong long)
AppleSmartIO::_messageHandler(void *,void *)
AppleSmartIO::_message_unwrap(ulong long,MessageWrapper *)
AppleSmartIO::_message_unwrap(ulong long,MessageWrapper *)
AppleSmartIO::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSmartIO::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSmartIO::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
AppleSmartIO::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
AppleSmartIO::getControl(void)
AppleSmartIO::getPerf(void)
AppleSmartIO::getService(void)
AppleSmartIO::nameForEndpoint(uint)
AppleSmartIO::sendMessage(uint,void *,void *,bool)
AppleSmartIO::start(IOService *)
AppleSmartIO::start(IOService *)
AppleSmartIO::~AppleSmartIO()
AppleSmartIOCommand::withOptions(AppleSmartIOCommandPool *)
AppleSmartIOCommandPool::_assignID(AppleSmartIOCommand *)
AppleSmartIOCommandPool::_initWithOptions(IOWorkLoop *,uint)
AppleSmartIOCommandPool::commandForID(uint)
AppleSmartIOCommandPool::commandForTag(uchar)
AppleSmartIOCommandPool::free(void)
AppleSmartIOCommandPool::gatedReturnCommand(IOCommand *)
AppleSmartIOCommandPool::returnCommand(AppleSmartIOCommand *)
AppleSmartIOCommandPool::withOptions(IOWorkLoop *,uint)
AppleSmartIOControl::MetaClass::alloc(void)
AppleSmartIOControl::_asyncMessage(void *,void *)
AppleSmartIOControl::_getDARTMapping(ulong long,ulong long,IODMACommand *&)
AppleSmartIOControl::_getDARTMapping(ulong long,ulong long,IODMACommand *&)
AppleSmartIOControl::_initForSIO(AppleSmartIO *)
AppleSmartIOControl::controlEndpoint(AppleSmartIO *)
AppleSmartIOControl::sendPSRegisters(void)
AppleSmartIOControl::sendPSRegisters(void)
AppleSmartIOControl::sendTunables(void)
AppleSmartIOControl::sendTunables(void)
AppleSmartIOControl::setupDevices(void)
AppleSmartIOControl::setupDevices(void)
AppleSmartIOControl::setupMapRanges(void)
AppleSmartIOControl::setupMapRanges(void)
AppleSmartIOControl::setupPanicBuffer(void)
AppleSmartIOControl::setupPanicBuffer(void)
AppleSmartIOControl::setupShims(void)
AppleSmartIOControl::setupShims(void)
AppleSmartIOControl::~AppleSmartIOControl()
AppleSmartIODMA::MetaClass::alloc(void)
AppleSmartIODMA::_asyncMessage(void *,void *)
AppleSmartIODMA::_asyncMessage(void *,void *)
AppleSmartIODMA::_completeCommand(AppleSmartIOCommand *)
AppleSmartIODMA::_completeCommand(AppleSmartIOCommand *)
AppleSmartIODMA::_configureDMA(void)
AppleSmartIODMA::_configureDMA(void)
AppleSmartIODMA::_initWithOptions(AppleSmartIO *,AppleSmartIODMAController *,IODMAEventSource *,uint)
AppleSmartIODMA::_initWithOptions(AppleSmartIO *,AppleSmartIODMAController *,IODMAEventSource *,uint)
AppleSmartIODMA::_notifyCommand(AppleSmartIOCommand *)
AppleSmartIODMA::_notifyCommand(AppleSmartIOCommand *)
AppleSmartIODMA::_queryDMA(IODMACommand **,ulong long *,bool *)
AppleSmartIODMA::_queryDMA(IODMACommand **,ulong long *,bool *)
AppleSmartIODMA::_segmentFunction(IODMACommand *,IODMACommand::Segment64,void *,uint)
AppleSmartIODMA::_setConfiguration(AppleSmartIODMAConfig *)
AppleSmartIODMA::_setConfiguration(AppleSmartIODMAConfig *)
AppleSmartIODMA::_setFIFODepth(ulong long *)
AppleSmartIODMA::_setFIFODepth(ulong long *)
AppleSmartIODMA::_startDMACommand(IODMACommand *,ulong long *,ulong long *)
AppleSmartIODMA::_startDMACommand(IODMACommand *,ulong long *,ulong long *)
AppleSmartIODMA::_stopDMA(bool *,void *)
AppleSmartIODMA::_stopDMA(bool *,void *)
AppleSmartIODMA::deliverMessage(void *)
AppleSmartIODMA::deliverMessage(void *)
AppleSmartIODMA::getFIFODepth(uint)
AppleSmartIODMA::setFIFODepth(ulong long)
AppleSmartIODMA::startDMACommand(IODMACommand *,uint,ulong long,ulong long)
AppleSmartIODMA::stopDMA(bool,ulong long)
AppleSmartIODMA::validFIFODepth(ulong long,uint)
AppleSmartIODMA::validFIFODepth(ulong long,uint)
AppleSmartIODMA::withOptions(AppleSmartIO *,AppleSmartIODMAController *,IODMAEventSource *,uint)
AppleSmartIODMA::~AppleSmartIODMA()
AppleSmartIODMAController::MetaClass::alloc(void)
AppleSmartIODMAController::_enter_channel(uint,AppleSmartIODMA *,uint *)
AppleSmartIODMAController::_getConfiguration(IOService *,uint)
AppleSmartIODMAController::_getConfiguration(IOService *,uint)
AppleSmartIODMAController::_initDMAChannelGated(AppleSmartIODMAConfig const*,IODMAEventSource *,uint *)
AppleSmartIODMAController::bufferForHandle(uint)
AppleSmartIODMAController::bufferForHandle(uint)
AppleSmartIODMAController::getBuffer(uint,uint *,bool)
AppleSmartIODMAController::getFIFODepth(uint,uint)
AppleSmartIODMAController::getFIFODepth(uint,uint)
AppleSmartIODMAController::initDMAChannel(IOService *,IODMAEventSource *,uint *,uint)
AppleSmartIODMAController::queryDMACommand(uint,IODMACommand **,ulong long *,bool)
AppleSmartIODMAController::responseForEndpointAndTag(uint,uint)
AppleSmartIODMAController::responseForEndpointAndTag(uint,uint)
AppleSmartIODMAController::returnBuffer(uint,uint)
AppleSmartIODMAController::returnBuffer(uint,uint)
AppleSmartIODMAController::segmentForHandle(uint)
AppleSmartIODMAController::setDMAConfig(uint,IOService *,uint)
AppleSmartIODMAController::setFIFODepth(uint,ulong long)
AppleSmartIODMAController::setFIFODepth(uint,ulong long)
AppleSmartIODMAController::setFrameSize(uint,uchar)
AppleSmartIODMAController::setFrameSize(uint,uchar)
AppleSmartIODMAController::start(IOService *)
AppleSmartIODMAController::start(IOService *)
AppleSmartIODMAController::startDMACommand(uint,IODMACommand *,uint,ulong long,ulong long)
AppleSmartIODMAController::stopDMACommand(uint,bool,ulong long)
AppleSmartIODMAController::stopDMACommand(uint,bool,ulong long)
AppleSmartIODMAController::validDMAConfig(uint,IOService *,uint)
AppleSmartIODMAController::validFIFODepth(uint,ulong long,uint)
AppleSmartIODMAController::validFIFODepth(uint,ulong long,uint)
AppleSmartIODMAController::~AppleSmartIODMAController()
AppleSmartIODMANub::initWithRegistryEntry(AppleSmartIO *,IORegistryEntry *)
AppleSmartIODMANub::withRegistryEntry(AppleSmartIO *,IORegistryEntry *)
AppleSmartIOEndpoint::MetaClass::alloc(void)
AppleSmartIOEndpoint::allocateCommandPool(IOWorkLoop *,uint)
AppleSmartIOEndpoint::allocateCommandPool(IOWorkLoop *,uint)
AppleSmartIOEndpoint::deliverMessage(void *)
AppleSmartIOEndpoint::ep_disable(void)
AppleSmartIOEndpoint::ep_disable(void)
AppleSmartIOEndpoint::ep_enable(void)
AppleSmartIOEndpoint::ep_enable(void)
AppleSmartIOEndpoint::getCommandGate(void)
AppleSmartIOEndpoint::getCommandGate(void)
AppleSmartIOEndpoint::getParam(SmartIOParameter,uint *)
AppleSmartIOEndpoint::getParam(SmartIOParameter,uint *)
AppleSmartIOEndpoint::getWorkLoop(void)
AppleSmartIOEndpoint::getWorkLoop(void)
AppleSmartIOEndpoint::initWithOptions(AppleSmartIO *,OSObject *,uint)
AppleSmartIOEndpoint::initWithOptions(AppleSmartIO *,OSObject *,uint)
AppleSmartIOEndpoint::sendMessage(void *,void *,bool)
AppleSmartIOEndpoint::sendMessage(void *,void *,bool)
AppleSmartIOEndpoint::send_command(uchar)
AppleSmartIOEndpoint::send_command(uchar)
AppleSmartIOEndpoint::setParam(SmartIOParameter,uint)
AppleSmartIOEndpoint::setParam(SmartIOParameter,uint)
AppleSmartIOEndpoint::synchronousMessage(AppleSmartIOCommand *,void *)
AppleSmartIOEndpoint::synchronousMessage(AppleSmartIOCommand *,void *)
AppleSmartIOEndpoint::~AppleSmartIOEndpoint()
AppleSmartIOPerf::MetaClass::alloc(void)
AppleSmartIOPerf::_asyncMessage(void *,void *)
AppleSmartIOPerf::_initForSIO(AppleSmartIO *)
AppleSmartIOPerf::perfEndpoint(AppleSmartIO *)
AppleSmartIOPerf::setupPerfBuffer(void)
AppleSmartIOPerf::~AppleSmartIOPerf()
AppleSmartIOUserClient::clientClose(void)
AppleSmartIOUserClient::initWithTask(task *,void *,uint)
AppleSmartIOUserClient::start(IOService *)
AppleSocHot::_externalSOCHOT0ExitHandler(IOInterruptEventSource *,int)
AppleSocHot::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSocHot::clpcPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleSocHot::configureReport(IOReportChannelList *,uint,void *,void *)
AppleSocHot::free(void)
AppleSocHot::setupRegisterState(void)
AppleSocHot::start(IOService *)
AppleSocHot::stop(IOService *)
AppleSocHot::updateReport(IOReportChannelList *,uint,void *,void *)
AppleSpeakerArrayCalibration::addCalibrationProperties(IOService *,IOService *,uint *,OSString **)
AppleSpeakerArrayCalibration::updateCalibrationProperties(IOService *,IOService *,OSArray *)
AppleSpeakerCalibration::addCalibrationProperties(AppleEmbeddedAudio *,IOService *,uint *,OSString **,uint *,OSString **)
AppleSpeakerCalibration::init(OSData *)
AppleSpeakerCalibration::updateCalibrationProperties(AppleEmbeddedAudio *,IOService *,OSArray *)
AppleStockholmControl::_initForPM(IOService *)
AppleStockholmControl::_matchProperty(char const*,char const*)
AppleStockholmControl::_requiresGPIO(char const*)
AppleStockholmControl::_serviceMatchedHandler(void *,void *,IOService *,IONotifier *)
AppleStockholmControl::_startForMesaSEP(IOService *)
AppleStockholmControl::_stopForMesaSEP(IOService *)
AppleStockholmControl::configureHammerfestSPMI(void)
AppleStockholmControl::setDownloadRequest(bool)
AppleStockholmControl::setEnable(bool)
AppleStockholmControl::setIcefallDownloadRequest(bool)
AppleStockholmControl::setPMUStandbyPowerEnable(bool)
AppleStockholmControl::setPowerState(ulong,IOService *)
AppleStockholmControl::setStandbyEnable(bool)
AppleStockholmControl::setVBATEnable(bool)
AppleStockholmControl::start(IOService *)
AppleStockholmControl::stop(IOService *)
AppleStockholmControl::validateSPMIConfig(void)
AppleStockholmControlUserClient::extPMUStandbyPowerEnable(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::extSetDeviceWake(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::extSetDownloadRequest(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::extSetEnable(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::extSetIcefallDownloadRequest(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::extSetVBATEnable(AppleStockholmControl *,void *,IOExternalMethodArguments *)
AppleStockholmControlUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleStockholmDebugDevice::_debugDevRead(int,uio *,int)
AppleStockholmDebugDevice::_debugDevWrite(int,uio *,int)
AppleStockholmDebugDevice::_logwrite(uchar *,uint)
AppleStockholmRingBuffer::bufferDataLength(void)
AppleStockholmRingBuffer::free(void)
AppleStockholmRingBuffer::removeData(uio *)
AppleStockholmRingBuffer::resetBuffer(void)
AppleStockholmSPMI::_allocMbuf(AppleStockholmSPMI*,ulong)
AppleStockholmSPMI::_configureHammerfestSPMIGated(void)
AppleStockholmSPMI::_dataReadMbuf(void)
AppleStockholmSPMI::_freeMbufCluster(char *,uint,char *)
AppleStockholmSPMI::_matchProperty(char const*,char const*)
AppleStockholmSPMI::_requiresFunction(char const*)
AppleStockholmSPMI::_rxInterruptHandler(IOInterruptEventSource *,int)
AppleStockholmSPMI::_rxMbufInterruptHandler(IOInterruptEventSource *,int)
AppleStockholmSPMI::_rxSPMIData(uchar *,ulong)
AppleStockholmSPMI::_setDownloadRequestGated(bool)
AppleStockholmSPMI::_txSPMIData(uchar const*,ulong)
AppleStockholmSPMI::_validateSPMIConfigGated(void)
AppleStockholmSPMI::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleStockholmSPMI::ctl_connect(void *,sockaddr_ctl *,void **)
AppleStockholmSPMI::ctl_connectGated(void *,sockaddr_ctl *)
AppleStockholmSPMI::ctl_data_callback(void)
AppleStockholmSPMI::ctl_disconnect(void *,uint,void *)
AppleStockholmSPMI::ctl_disconnectGated(void *,uint)
AppleStockholmSPMI::ctl_getoptGated(void *,int,void *,ulong *)
AppleStockholmSPMI::ctl_send(void *,uint,void *,__mbuf *,int)
AppleStockholmSPMI::ctl_sendGated(void *,__mbuf *,int)
AppleStockholmSPMI::ctl_setopt(void *,uint,void *,int,void *,ulong)
AppleStockholmSPMI::ctl_setoptGated(void *,int,void *,ulong)
AppleStockholmSPMI::disable(void)
AppleStockholmSPMI::enable(void)
AppleStockholmSPMI::initForPM(IOService *)
AppleStockholmSPMI::ioctl(ulong,void *,ulong *,uint)
AppleStockholmSPMI::publishBelow(IORegistryEntry *)
AppleStockholmSPMI::setPowerEnabled(bool)
AppleStockholmSPMI::setStandbyEnable(bool)
AppleStockholmSPMI::sleepWakeNotification(void *,uint,IOService *,void *,ulong)
AppleStockholmSPMI::sleepWakeNotificationGated(uint)
AppleStockholmSPMI::stop(IOService *)
AppleStonehengeBPIC::BP_ORFUNCT1_TEMP_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BP_PMAX_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BP_PROT_ACTV_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BP_VCELL_DUTY_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BST_BPIC_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BST_ERR_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BST_UV_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::BST_WIRE_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::CHOKE_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::DMT_OVFL_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::GLOBAL_RDY_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::GLOBAL_STBY_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::ICELL_ERR_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::ICELL_WARN_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::MetaClass::alloc(void)
AppleStonehengeBPIC::SNS_HP_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::SNS_LP_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::TEMP_WARN_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::VCELL_ERR_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::VCELL_WARN_INT_Handler(IOInterruptEventSource *,int)
AppleStonehengeBPIC::bpicSampleTimeoutHandler(IOTimerEventSource *)
AppleStonehengeBPIC::configBPIC(void)
AppleStonehengeBPIC::configBPICRev(uint)
AppleStonehengeBPIC::disableInterrupt(uchar)
AppleStonehengeBPIC::free(void)
AppleStonehengeBPIC::initWithProvider(IOService *)
AppleStonehengeBPIC::initWithProvider(IOService *)
AppleStonehengeBPIC::readBPICRegisters(void)
AppleStonehengeBPIC::startSampling(void)
AppleStonehengeBPIC::withParent(AppleBPIC *,IOService *)
AppleSummitLCD__fn_0x558
AppleSummitLCD__fn_0x560
AppleSummitLCD__fn_0x570
AppleSynopsysDRDUSBXHCI::MetaClass::alloc(void)
AppleSynopsysDRDUSBXHCI::createInternalDevice(uint,ulong long *)
AppleSynopsysDRDUSBXHCI::free(void)
AppleSynopsysDRDUSBXHCI::lowerOnePowerStateTo(ulong)
AppleSynopsysDRDUSBXHCI::printPeriodicSchedule(void)
AppleSynopsysDRDUSBXHCI::probe(IOService *,int *)
AppleSynopsysDRDUSBXHCI::regReadSram32(uint)
AppleSynopsysDRDUSBXHCI::regWriteSram32(uint,uint)
AppleSynopsysDRDUSBXHCI::regWriteSram64(uint,ulong long)
AppleSynopsysDRDUSBXHCI::reset(void)
AppleSynopsysDRDUSBXHCI::start(IOService *)
AppleSynopsysDRDUSBXHCI::~AppleSynopsysDRDUSBXHCI()
AppleSynopsysDRDUSBXHCICommandRing::waitForCommand(StandardUSBXHCI::StandardUSBXHCITRB *,uint)
AppleSynopsysMIPIDSIController::MetaClass::alloc(void)
AppleSynopsysMIPIDSIController::_calculateRegisterValues(uint *,uint *,display_timing_t *,mipi_lpm_t *)
AppleSynopsysMIPIDSIController::_calculateRegisterValues(uint *,uint *,display_timing_t *,mipi_lpm_t *)
AppleSynopsysMIPIDSIController::_changeModeCfg(uint)
AppleSynopsysMIPIDSIController::_dsimGPIOPulse(void)
AppleSynopsysMIPIDSIController::_dsimGPIOToggle(void)
AppleSynopsysMIPIDSIController::_enableDSIM(bool)
AppleSynopsysMIPIDSIController::_enableDSIM(bool)
AppleSynopsysMIPIDSIController::_enableSWMPRGated(bool)
AppleSynopsysMIPIDSIController::_enableSWMPRGated(bool)
AppleSynopsysMIPIDSIController::_enterTrace(uint,uint)
AppleSynopsysMIPIDSIController::_initSWMPR(void)
AppleSynopsysMIPIDSIController::_isCommitDoneGated(void)
AppleSynopsysMIPIDSIController::_isDMMExitedGated(void)
AppleSynopsysMIPIDSIController::_isDMMExitedGated(void)
AppleSynopsysMIPIDSIController::_isFrameDoneGated(bool)
AppleSynopsysMIPIDSIController::_isReadDoneGated(void)
AppleSynopsysMIPIDSIController::_leaveAPIFunction(void)
AppleSynopsysMIPIDSIController::_phyTestReset(bool)
AppleSynopsysMIPIDSIController::_phyToggleShutdownz(void)
AppleSynopsysMIPIDSIController::_phyWrite(uint,uchar *,uint)
AppleSynopsysMIPIDSIController::_phy_read_mod_write(uint,uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::_phy_read_mod_write_v2(uint,uchar,uchar)
AppleSynopsysMIPIDSIController::_pollReg(uint,uint,uint,bool)
AppleSynopsysMIPIDSIController::_programFrameGated(uint *)
AppleSynopsysMIPIDSIController::_program_phy_test_codes(void)
AppleSynopsysMIPIDSIController::_resetHSClockGated(void)
AppleSynopsysMIPIDSIController::_resetHSClockGated(void)
AppleSynopsysMIPIDSIController::_sacAction(uint)
AppleSynopsysMIPIDSIController::_sacCalculateMinMaxFrequencies(dsimSACAggressor_t *)
AppleSynopsysMIPIDSIController::_sacChangePLLGated(dsimSACAggressorIndex_t,uint)
AppleSynopsysMIPIDSIController::_sacConvertFrequencyList(uint *,dsimSACAggressor_t *)
AppleSynopsysMIPIDSIController::_sacConvertFrequencyList(uint *,dsimSACAggressor_t *)
AppleSynopsysMIPIDSIController::_sacEnablePLLGated(bool)
AppleSynopsysMIPIDSIController::_sacEnablePLLGatedClockStop(bool)
AppleSynopsysMIPIDSIController::_sacEnablePLLGatedWithMIPIPLL(bool)
AppleSynopsysMIPIDSIController::_sacEnablePLLGatedWithMIPIPLLSimple(bool)
AppleSynopsysMIPIDSIController::_sacGenerateFrequencyList(void)
AppleSynopsysMIPIDSIController::_sacGenerateFrequencyList(void)
AppleSynopsysMIPIDSIController::_sacGetFrequencyList(uint *,sac_pll_t **,char const*,char const*)
AppleSynopsysMIPIDSIController::_sacLPMAction(uint)
AppleSynopsysMIPIDSIController::_sacSadExtremeFreqSwitch(IOTimerEventSource *)
AppleSynopsysMIPIDSIController::_sacSadRoundRobinFreqSwitch(IOTimerEventSource *)
AppleSynopsysMIPIDSIController::_sacSadTimeout(IOTimerEventSource *)
AppleSynopsysMIPIDSIController::_sacThread(void)
AppleSynopsysMIPIDSIController::_sacWaitPLLRequest(dsimSACAggressorIndex_t *,uint *)
AppleSynopsysMIPIDSIController::_unlockMIPITransaction(void)
AppleSynopsysMIPIDSIController::_unlockMIPITransaction(void)
AppleSynopsysMIPIDSIController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleSynopsysMIPIDSIController::enableHighSpeedMode(bool)
AppleSynopsysMIPIDSIController::enableHighSpeedModeGated(bool)
AppleSynopsysMIPIDSIController::enableHighSpeedModeGated(bool)
AppleSynopsysMIPIDSIController::enableInterface(bool)
AppleSynopsysMIPIDSIController::enableInterfaceGated(bool)
AppleSynopsysMIPIDSIController::enableInterfaceGated(bool)
AppleSynopsysMIPIDSIController::enableSWMPR(bool)
AppleSynopsysMIPIDSIController::enableVideo(bool)
AppleSynopsysMIPIDSIController::enableVideoGated(bool)
AppleSynopsysMIPIDSIController::enableVideoGated(bool)
AppleSynopsysMIPIDSIController::getDisplayTiming(bool,display_timing_t *)
AppleSynopsysMIPIDSIController::mipiHandlerGated(OSObject *,IOInterruptEventSource *,int)
AppleSynopsysMIPIDSIController::receiveLongCommand(uchar,uchar *,ulong long *)
AppleSynopsysMIPIDSIController::receiveLongCommandGated(uchar,uchar *,ulong long *)
AppleSynopsysMIPIDSIController::receiveLongCommandGated(uchar,uchar *,ulong long *)
AppleSynopsysMIPIDSIController::receiveShortCommand(uchar,uchar *)
AppleSynopsysMIPIDSIController::receiveShortCommandGated(uchar,uchar *)
AppleSynopsysMIPIDSIController::receiveShortCommandGated(uchar,uchar *)
AppleSynopsysMIPIDSIController::sendLongCommand(uchar,uchar const*,ulong long)
AppleSynopsysMIPIDSIController::sendLongCommandGated(uchar,uchar const*,ulong long)
AppleSynopsysMIPIDSIController::sendLongCommandGated(uchar,uchar const*,ulong long)
AppleSynopsysMIPIDSIController::sendSWMPRLongCommandGated(uchar,uchar const*,ulong long)
AppleSynopsysMIPIDSIController::sendSWMPRLongCommandGated(uchar,uchar const*,ulong long)
AppleSynopsysMIPIDSIController::sendSWMPRShortCommandGated(uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::sendSWMPRShortCommandGated(uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::sendShortCommand(uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::sendShortCommandGated(uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::sendShortCommandGated(uchar,uchar,uchar)
AppleSynopsysMIPIDSIController::setLPMEnable(bool)
AppleSynopsysMIPIDSIController::setLPMEnableGated(bool)
AppleSynopsysMIPIDSIController::setLPMEnableGated(bool)
AppleSynopsysMIPIDSIController::setProperties(OSObject *)
AppleSynopsysMIPIDSIController::start(IOService *)
AppleSynopsysMIPIDSIController::start(IOService *)
AppleSynopsysMIPIDSIController::~AppleSynopsysMIPIDSIController()
AppleSynopsysMIPIDSIFrameDoneFunction::callFunction(void *,void *,void *)
AppleSynopsysMIPIDSIProgramPartialFrameFunction::callFunction(void *,void *,void *)
AppleSynopsysMIPIDSIResetClockFunction::callFunction(void *,void *,void *)
AppleSynopsysOTG3Device::activateEndpoint(int,int,int,int,tIOUSBDeviceInterfacePipeProperty)
AppleSynopsysOTG3Device::createIOBuffer(uint,ulong long)
AppleSynopsysOTG3Device::deactivateEndpoint(int)
AppleSynopsysOTG3Device::doCompleteEndpointIO(_IOUSBDeviceIORequestTag *)
AppleSynopsysOTG3Device::doStopEndpointIn(int)
AppleSynopsysOTG3Device::doStopEndpointOut(int)
AppleSynopsysOTG3Device::endpointInIntOccurred(int)
AppleSynopsysOTG3Device::endpointOutIntOccurred(int)
AppleSynopsysOTG3Device::ep0OutIntOccurred(void)
AppleSynopsysOTG3Device::isocEndpointIntOccurred(int,bool *)
AppleSynopsysOTG3Device::scheduleNextIsocRequest(EndpointInstanceSG *)
AppleSynopsysOTG3Device::setDMAMode(void)
AppleSynopsysOTG3Device::start(IOService *)
AppleSynopsysOTG3Device::startEndpointIn(int)
AppleSynopsysOTG3Device::startEndpointOut(int)
AppleSynopsysOTG3Device::startEp0Out(bool)
AppleSynopsysOTG3Device::startIsocEndpointIn(EndpointInstanceSG *)
AppleSynopsysOTG3Device::startIsocEndpointOut(EndpointInstanceSG *)
AppleSynopsysOTG3Device::stuckEpDetectFunction(IOTimerEventSource *)
AppleSynopsysOTG3Device::usbResetOccurred(void)
AppleSynopsysOTG3Device__fn_0x6f8
AppleSynopsysOTGDevice::activateEndpoint(int,int,int,int,tIOUSBDeviceInterfacePipeProperty)
AppleSynopsysOTGDevice::activateEndpoint(int,int,int,int,tIOUSBDeviceInterfacePipeProperty)
AppleSynopsysOTGDevice::allocateHBIsocTxFifo(uint,uint,uint *)
AppleSynopsysOTGDevice::calculateGlitchTimeout(void)
AppleSynopsysOTGDevice::chargerDetectTimerExpired(IOTimerEventSource *)
AppleSynopsysOTGDevice::checkDPlusMinusStatus(void)
AppleSynopsysOTGDevice::coreSoftReset(uint)
AppleSynopsysOTGDevice::createIOBuffer(uint,ulong long)
AppleSynopsysOTGDevice::deactivateEndpoint(int)
AppleSynopsysOTGDevice::disableEndpointInterrupt(int,int)
AppleSynopsysOTGDevice::doAbortIsocEndpoint(int)
AppleSynopsysOTGDevice::doCancelEndpoint(int,int)
AppleSynopsysOTGDevice::doCompleteEndpointIO(_IOUSBDeviceIORequestTag *)
AppleSynopsysOTGDevice::doCompleteFinishedIsocRequests(int)
AppleSynopsysOTGDevice::doCoreInit(void)
AppleSynopsysOTGDevice::doFlushTxFifo(int)
AppleSynopsysOTGDevice::doInit(bool)
AppleSynopsysOTGDevice::doIsocParityDetection(int,bool)
AppleSynopsysOTGDevice::doRemoteWakeGated(void)
AppleSynopsysOTGDevice::doStopEndpointIn(int)
AppleSynopsysOTGDevice::doStopEndpointOut(int)
AppleSynopsysOTGDevice::doStopNonIsocEndpoint(int)
AppleSynopsysOTGDevice::doUSBRegistersDump(void)
AppleSynopsysOTGDevice::doUSBRegistersDumpIOLog(void)
AppleSynopsysOTGDevice::dumpEndpointRegistersIOLog(int)
AppleSynopsysOTGDevice::enableEndpointInterrupt(int,int)
AppleSynopsysOTGDevice::enableIsocGlitchDetect(bool)
AppleSynopsysOTGDevice::endpointIOTimerExpired(IOTimerEventSource *)
AppleSynopsysOTGDevice::endpointInIntOccurred(int)
AppleSynopsysOTGDevice::endpointInSecIntHandler(int)
AppleSynopsysOTGDevice::endpointInSecIntHandler(int)
AppleSynopsysOTGDevice::endpointOutIntOccurred(int)
AppleSynopsysOTGDevice::endpointOutSecIntHandler(int)
AppleSynopsysOTGDevice::endpointOutSecIntHandler(int)
AppleSynopsysOTGDevice::enqueueFinishedRequest(EndpointInstance *,_IOUSBDeviceIORequestTag *)
AppleSynopsysOTGDevice::enumDoneOccurred(void)
AppleSynopsysOTGDevice::ep0OutIntOccurred(void)
AppleSynopsysOTGDevice::filterOccurred(IOFilterInterruptEventSource *)
AppleSynopsysOTGDevice::findMaxEndpoints(void)
AppleSynopsysOTGDevice::forceReEnumeration(void)
AppleSynopsysOTGDevice::free(void)
AppleSynopsysOTGDevice::freeHBIsocTxFifo(uint)
AppleSynopsysOTGDevice::getConnectionSpeed(void)
AppleSynopsysOTGDevice::getTimeInUsecs(void)
AppleSynopsysOTGDevice::glitchDetect(IOTimerEventSource *)
AppleSynopsysOTGDevice::goOnBus(bool)
AppleSynopsysOTGDevice::goOnBus(bool)
AppleSynopsysOTGDevice::handleAbortEndpoint(int)
AppleSynopsysOTGDevice::handleSetAddressPreStatusPhase(int)
AppleSynopsysOTGDevice::handleStallEndpoint(int,bool)
AppleSynopsysOTGDevice::handleTestMode(uchar)
AppleSynopsysOTGDevice::handleUSBReset(void)
AppleSynopsysOTGDevice::handleUSBResume(void)
AppleSynopsysOTGDevice::handleUSBSuspend(void)
AppleSynopsysOTGDevice::handleUserlandCommand(OSString *,OSObject *)
AppleSynopsysOTGDevice::init(OSDictionary *)
AppleSynopsysOTGDevice::interruptOccurred(IOInterruptEventSource *,int)
AppleSynopsysOTGDevice::ioGated(_IOUSBDeviceIORequestTag *)
AppleSynopsysOTGDevice::isEndpointStalled(int)
AppleSynopsysOTGDevice::isocEndpointIntOccurred(int,bool *)
AppleSynopsysOTGDevice::prepareConfiguration(OSArray *)
AppleSynopsysOTGDevice::provideEndpointIDsForConfiguration(OSArray *,uchar *)
AppleSynopsysOTGDevice::resetEndpointDataToggle(int)
AppleSynopsysOTGDevice::setGlobalInNak(void)
AppleSynopsysOTGDevice::setGlobalOutNak(void)
AppleSynopsysOTGDevice::softDisconnect(void)
AppleSynopsysOTGDevice::softReconnect(IOTimerEventSource *)
AppleSynopsysOTGDevice::start(IOService *)
AppleSynopsysOTGDevice::start(IOService *)
AppleSynopsysOTGDevice::startEndpointIn(int)
AppleSynopsysOTGDevice::startEndpointOut(int)
AppleSynopsysOTGDevice::startEp0Out(bool)
AppleSynopsysOTGDevice::startIsocEndpointIn(EndpointInstance *)
AppleSynopsysOTGDevice::startIsocEndpointOut(EndpointInstance *)
AppleSynopsysOTGDevice::stop(IOService *)
AppleSynopsysOTGDevice::stuckEpDetectFunction(IOTimerEventSource *)
AppleSynopsysOTGDevice::usbResetOccurred(void)
AppleSynopsysOTGDevice::usecsHaveElapsed(ulong long,uint)
AppleSynopsysOTGDevice::willTerminate(IOService *,uint)
AppleSynopsysOTGDevice__fn_0x6a0
AppleT7000DPTXController::~AppleT7000DPTXController()
AppleT700XTempSensor::MetaClass::alloc(void)
AppleT700XTempSensor::_setPowerStateGated(ulong,IOService *)
AppleT700XTempSensor::_timeoutOccurredGated(OSObject *,IOTimerEventSource *)
AppleT700XTempSensor::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT700XTempSensor::createSyntheticSensor(char const*,OSString *,int,uint)
AppleT700XTempSensor::disableAlarmInt(void)
AppleT700XTempSensor::disableTempSensor(void)
AppleT700XTempSensor::disableTempStats(void)
AppleT700XTempSensor::enableAlarmInt(uint)
AppleT700XTempSensor::enableTempSensor(void)
AppleT700XTempSensor::enableTempStats(void)
AppleT700XTempSensor::readInstantenousValue(void)
AppleT700XTempSensor::restoreCTLRegisters(void)
AppleT700XTempSensor::saveCTLRegisters(void)
AppleT700XTempSensor::setPowerState(ulong,IOService *)
AppleT700XTempSensor::start(IOService *)
AppleT700XTempSensor::tempFormatFixup(short)
AppleT700XTempSensor::~AppleT700XTempSensor()
AppleT700XTempSensorDisableSensorFunction::callFunction(void *,void *,void *)
AppleT700XTempSensorUserClient::clientClose(void)
AppleT700XTempSensorUserClient::getTemp(int *)
AppleT700XTempSensorUserClient::getTempGated(int *)
AppleT700XTempSensorUserClient::start(IOService *)
AppleT8006GPIOIC::_decodeVectorInfo(uint)
AppleT8006GPIOIC::_safeReconfigure(uint,uint)
AppleT8006GPIOIC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8006GPIOIC::claimWakeEvents(void)
AppleT8006GPIOIC::claimWakeEvents(void)
AppleT8006GPIOIC::disableVectorHard(int,IOInterruptVector *)
AppleT8006GPIOIC::disableWakeOnly(uint,uchar)
AppleT8006GPIOIC::enableVector(int,IOInterruptVector *)
AppleT8006GPIOIC::enableWakeOnly(uint,uchar,uchar)
AppleT8006GPIOIC::getGPIOData(uint)
AppleT8006GPIOIC::handleInterrupt(void *,IOService *,int)
AppleT8006GPIOIC::initPinsAndGroups(uint,uint)
AppleT8006GPIOIC::initVector(int,IOInterruptVector *)
AppleT8006GPIOIC::setGPIOCFG(uint,uint)
AppleT8006GPIOIC::setGPIOData(uint,uint)
AppleT8006GPIOIC::setPowerState(ulong,IOService *)
AppleT8006GPIOIC::startDone(IOService *)
AppleT8006GPIOIC::startDone(IOService *)
AppleT8011USBArbitrator::enableDevicePower(OSObject const*,uint)
AppleT8011USBPhy::applyUSB3PhySettings(void)
AppleT8011USBPhy::enableDeviceMode(bool)
AppleT8011USBPhy::enableHostMode(bool)
AppleT8011USBPhy::free(void)
AppleT8011USBPhy::setPower(AppleUSBPhy::tPowerLevel)
AppleT8011USBPhy::start(IOService *)
AppleT8011USBXDCI::MetaClass::alloc(void)
AppleT8011USBXDCI::addDevCapabilityDescriptors(void)
AppleT8011USBXDCI::connectedToUSBHost(void)
AppleT8011USBXDCI::connectedWithAccessoryCable(void)
AppleT8011USBXDCI::free(void)
AppleT8011USBXDCI::getMaxSpeedCapability(void)
AppleT8011USBXDCI::handleUSBConnectionDone(void)
AppleT8011USBXDCI::handleUSBReset(void)
AppleT8011USBXDCI::hardwareException(int,char const*)
AppleT8011USBXDCI::message(uint,IOService *,void *)
AppleT8011USBXDCI::messageGated(uint,IOService *,void *)
AppleT8011USBXDCI::powerOff(void)
AppleT8011USBXDCI::powerOn(void)
AppleT8011USBXDCI::powerOn(void)
AppleT8011USBXDCI::sendEndpointCommand(int,uint,ushort,bool,bool,uint,uint,uint)
AppleT8011USBXDCI::setCurrentLimit(uint)
AppleT8011USBXDCI::setCurrentLimitThreadCall(void *,void *)
AppleT8011USBXDCI::start(IOService *)
AppleT8011USBXDCI::~AppleT8011USBXDCI()
AppleT8015TempSensor::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8015TempSensor::enableAlarmInt(uint)
AppleT8015TempSensor::handleInterrupt(void *,IOService *,int)
AppleT8015TempSensor::start(IOService *)
AppleT8015TempSensor::tempLatest(void)
AppleT8020AFTrace::getSRAMData(uchar *,ulong *)
AppleT8020DART::MetaClass::alloc(void)
AppleT8020DART::_DART_TTBR(uint,uint,uint)
AppleT8020DART::_apfCaptureRegs(uint)
AppleT8020DART::_apfSetupInstance(uint,uint,t8020dart_init_data &)
AppleT8020DART::_captureHardwareState(void)
AppleT8020DART::_captureRegs(void)
AppleT8020DART::_dartAssignDynamicSID(uint *)
AppleT8020DART::_dartCaptureHardwareState(uint)
AppleT8020DART::_dartCaptureRegs(uint)
AppleT8020DART::_dartInitializeStateCapture(uint)
AppleT8020DART::_dartIsValidPage(uint,uint,uint,dartPageType_t)
AppleT8020DART::_dartPrepareForPowerDown(uint,bool)
AppleT8020DART::_dartReleaseDynamicSID(uint)
AppleT8020DART::_dartSetup(t8020dart_init_data &)
AppleT8020DART::_dartSetupInstance(uint,uint,AppleT8020DART::instance_t const*,t8020dart_init_data &)
AppleT8020DART::_dartValidateConfig(uint)
AppleT8020DART::_fatalException(IODART::interruptState_t const*,bool,bool)
AppleT8020DART::_forceAvailable(bool)
AppleT8020DART::_forceAvailable(bool)
AppleT8020DART::_handleError(IODART::interruptState_t const*,bool)
AppleT8020DART::_handleFatalException(uint,bool)
AppleT8020DART::_interruptAction(IOInterruptEventSource *,int)
AppleT8020DART::_interruptAction(IOInterruptEventSource *,int)
AppleT8020DART::_interruptDisable(void)
AppleT8020DART::_interruptEnable(void)
AppleT8020DART::_interruptHandler(IOInterruptEventSource *)
AppleT8020DART::_powerDown(bool)
AppleT8020DART::_powerUp(void)
AppleT8020DART::_prepareForPowerDown(bool)
AppleT8020DART::_recoverFromPowerDown(bool)
AppleT8020DART::_setMapperEnabled(uint,bool)
AppleT8020DART::_setup(t8020dart_init_data &)
AppleT8020DART::_setup(t8020dart_init_data &)
AppleT8020DART::_smmuCaptureHardwareState(uint)
AppleT8020DART::_smmuCaptureRegs(uint)
AppleT8020DART::_smmuInitializeStateCapture(uint)
AppleT8020DART::_smmuPrepareForPowerDown(uint,bool)
AppleT8020DART::_smmuSetup(t8020dart_init_data &)
AppleT8020DART::_smmuSetupInstance(uint,uint,AppleT8020DART::instance_t const*,t8020dart_init_data &)
AppleT8020DART::_transformExceptionMask(uint)
AppleT8020DART::_updateAvailability(bool)
AppleT8020DART::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8020DART::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8020DART::enableTranslation(uint,bool)
AppleT8020DART::getDARTCapability(void)
AppleT8020DART::getPagetableMemory(uint,uint,uint,uint *,dartPageType_t)
AppleT8020DART::getTranslation(IODARTVMSpace *,uint,void *,uint,uint *,bool *)
AppleT8020DART::initHardware(uint,bool,bool,bool)
AppleT8020DART::interruptPending(void)
AppleT8020DART::isBypassedSID(uint)
AppleT8020DART::isValidSID(uint)
AppleT8020DART::registerMapper(IODARTMapper *,uint)
AppleT8020DART::reloadConfiguration(void)
AppleT8020DART::setTranslation(IODARTVMSpace *,uint,void *,uint,uint,uint,uint)
AppleT8020DART::setTranslation(IODARTVMSpace *,uint,void *,uint,uint,uint,uint,uint,uint)
AppleT8020DART::setTranslation(uint,ppl_iommu_seg const*,ulong,uint)
AppleT8020DART::setTranslation(uint,uint,uint,uint)
AppleT8020DART::start(IOService *)
AppleT8020DART::start(IOService *)
AppleT8020DART::unregisterMapper(IODARTMapper *,uint)
AppleT8020DART::~AppleT8020DART()
AppleT8020MTRTempSensor::MetaClass::alloc(void)
AppleT8020MTRTempSensor::_timeoutOccurredGated(OSObject *,IOTimerEventSource *)
AppleT8020MTRTempSensor::gpuPerfControllerArrivalHandler(void *,IOService *,IONotifier *)
AppleT8020MTRTempSensor::start(IOService *)
AppleT8020MTRTempSensor::timeoutOccurred(OSObject *,IOTimerEventSource *)
AppleT8020MTRTempSensor::~AppleT8020MTRTempSensor()
AppleT8027TypeCPhy::applyTunablesUSB2(OSData const*)
AppleT8027TypeCPhy::configureUSB2(AppleTypeCPhyPowerLevel,uint)
AppleT8027TypeCPhy::exitResetUSB2(void)
AppleT8027TypeCPhy::free(void)
AppleT8027TypeCPhy::start(IOService *)
AppleT8027TypeCPhy__fn_0x578
AppleT8027USB3Phy::applySDBTunables(ulong long,AppleUSBPhy::tSDBTunable const*,ulong)
AppleT8027USB3Phy::disableLowLeakageMode(void)
AppleT8027USB3Phy::free(void)
AppleT8027USB3Phy::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleT8027USB3Phy::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleT8027USB3Phy::start(IOService *)
AppleT8027USB3Phy::stop(IOService *)
AppleT8027USB3Phy::systemWillShutdown(uint)
AppleT8027USB3Phy__configureMode_unsigned_int__AppleTypeCPhyUSBMode
AppleT8027USB3Phy__configurePowerLevel_unsigned_int__AppleTypeCPhyPowerLevel
AppleT8027USBArbitrator::systemPowerChangeThreadCallGated(uint)
AppleT8027USBPhy::applyTunables(OSData const*)
AppleT8027USBPhy::applyUSB3PhySettings(void)
AppleT8027USBPhy::enableDeviceMode(bool)
AppleT8027USBPhy::enableHostMode(bool)
AppleT8027USBPhy::enableLowLeakageMode(bool)
AppleT8027USBPhy::free(void)
AppleT8027USBPhy::performJitterImprovemetSequence(void)
AppleT8027USBPhy::start(IOService *)
AppleT8027USBPhy::stop(IOService *)
AppleT8027USBPhy::systemPowerChange(void *,uint,IOService *,void *,ulong)
AppleT8027USBPhy::systemPowerChangeThreadCall(void *,void *)
AppleT8027USBPhy__setPower_AppleUSBPhy__tPowerLevel
AppleT8027USBXDCI::MetaClass::alloc(void)
AppleT8027USBXDCI::controllerReset(void)
AppleT8027USBXDCI::free(void)
AppleT8027USBXDCI::handleUSBConnectionDone(void)
AppleT8027USBXDCI::powerOff(void)
AppleT8027USBXDCI::powerOn(void)
AppleT8027USBXDCI::start(IOService *)
AppleT8027USBXDCI::~AppleT8027USBXDCI()
AppleT8027USBXHCI::MetaClass::alloc(void)
AppleT8027USBXHCI::adjustPipeGated(IOUSBHostPipe *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleT8027USBXHCI::maxCapabilityForDomainState(ulong)
AppleT8027USBXHCI::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleT8027USBXHCI::registerService(uint)
AppleT8027USBXHCI::setPowerStateGated(ulong,IOService *)
AppleT8027USBXHCI::start(IOService *)
AppleT8027USBXHCI::systemPowerStateWillChangeToGated(ulong,ulong,IOService *)
AppleT8027USBXHCI::~AppleT8027USBXHCI()
AppleT8027USBXHCICommandRing::addEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8027USBXHCICommandRing::addEndpointWithDummy(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8027USBXHCICommandRing::dropEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8027USBXHCICommandRing::free(void)
AppleT8027USBXHCICommandRing::initWithParameters(AppleT8027USBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleT8027USBXHCICommandRing::updateEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8027USBXHCICommandRing::withParameters(AppleT8027USBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleT8030AMCPerfFunction::callFunction(void *,void *,void *)
AppleT8030MemCacheController::AppleT8030MemCacheController(void)
AppleT8030MemCacheController::MetaClass::alloc(void)
AppleT8030MemCacheController::_dcsWriteQueueFlush(void)
AppleT8030MemCacheController::_enablePerfCtrl(uint,bool)
AppleT8030MemCacheController::_mccDramAccessDisable(void)
AppleT8030MemCacheController::_mccEnableBroadcast(bool)
AppleT8030MemCacheController::_mccFlush(void)
AppleT8030MemCacheController::_mccInitPerfCounters(void)
AppleT8030MemCacheController::_mccMaskedRMWReg32(ulong long,uint,uint)
AppleT8030MemCacheController::_mccPanic(void)
AppleT8030MemCacheController::_mccReadReg32(ulong long)
AppleT8030MemCacheController::_mccReadReg64(ulong long)
AppleT8030MemCacheController::_mccRestoreAMCPerfCounterConfig(void)
AppleT8030MemCacheController::_mccSampleAllPerfCounters(bool)
AppleT8030MemCacheController::_mccSamplePerfCounter(uint,ulong long *)
AppleT8030MemCacheController::_mccSelectDynamicDRAMCFGMode(uint)
AppleT8030MemCacheController::_mccSelectDynamicPowerGateMode(uint)
AppleT8030MemCacheController::_mccWaitForWaysPwrOn(uint)
AppleT8030MemCacheController::_mccWriteReg32(ulong long,uint)
AppleT8030MemCacheController::_mccWriteReg64(ulong long,ulong long)
AppleT8030MemCacheController::_readPerfValue(uint)
AppleT8030MemCacheController::_writePerfCtrl(uint,uint)
AppleT8030MemCacheController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8030MemCacheController::configureReport(IOReportChannelList *,uint,void *,void *)
AppleT8030MemCacheController::copyDCCounterValues(ulong long *,ulong long *,uint)
AppleT8030MemCacheController::deprioritizeDSID(uint)
AppleT8030MemCacheController::getDataCollectionHeader(char *,uint *)
AppleT8030MemCacheController::getDataCollectionHeaderSize(void)
AppleT8030MemCacheController::getDataStreamCacheUsage(MCDataStream *,ulong long *)
AppleT8030MemCacheController::mccEnableCacheMode(bool)
AppleT8030MemCacheController::mccEnableCacheMode(bool)
AppleT8030MemCacheController::postDataStreamEvaluateAction(MCDataStream *)
AppleT8030MemCacheController::setDSIDGroupQuota(uint,ulong long)
AppleT8030MemCacheController::setPersistenceLevel(uint,uint,MCPersistence)
AppleT8030MemCacheController::start(IOService *)
AppleT8030MemCacheController::start(IOService *)
AppleT8030MemCacheController::updateDataStreamQuota(MCDataStream *,uint,bool)
AppleT8030MemCacheController::updateReport(IOReportChannelList *,uint,void *,void *)
AppleT8030MemCacheController::~AppleT8030MemCacheController()
AppleT8030MemCacheFlushFunction::callFunction(void *,void *,void *)
AppleT8030MemCacheModeFunction__callFunction_void___void___void
AppleT8030MemCachePanicFunction::callFunction(void *,void *,void *)
AppleT8030PCIe::MetaClass::alloc(void)
AppleT8030PCIePort::MetaClass::alloc(void)
AppleT8030PCIePort::withAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleT8030PMGR::AppleT8030PMGR(void)
AppleT8030PMGR::MetaClass::alloc(void)
AppleT8030PMGR::_enableWaitSEPPG(bool)
AppleT8030PMGR::_forceANEDTEUpdate(void)
AppleT8030PMGR::_getAccMapping(AppleT8030PMGR::accMapping const*,uint,uint)
AppleT8030PMGR::_getPerfStateVoltage(uint,uint,bool)
AppleT8030PMGR::_getPerfStateVoltage(uint,uint,bool)
AppleT8030PMGR::_getSOCDPEToRegGroupMap(AppleT8030PMGR::SocDpe)
AppleT8030PMGR::_getSOCDPEToRegGroupMap(AppleT8030PMGR::SocDpe)
AppleT8030PMGR::_getVoltageRailIDS85C(uchar)
AppleT8030PMGR::_initANEDPE(void)
AppleT8030PMGR::_initAPSC(uint)
AppleT8030PMGR::_initAPSC(uint)
AppleT8030PMGR::_initSOCDEEVoltTable(AppleT8030PMGR::SocDpe,double,double,double)
AppleT8030PMGR::_initSOCDPE(void)
AppleT8030PMGR::_readSOCDPEDEEReg(AppleT8030PMGR::SocDpe,uint)
AppleT8030PMGR::_readSOCDPELEEReg(AppleT8030PMGR::SocDpe,uint)
AppleT8030PMGR::_readSOCDPETEAReg(AppleT8030PMGR::SocDpe,uint)
AppleT8030PMGR::_setVideoClock(uint,uint,uint,bool)
AppleT8030PMGR::_waitAPSCPending(uchar)
AppleT8030PMGR::_waitAPSCPending(uchar)
AppleT8030PMGR::_writeSOCDPEDEEReg(AppleT8030PMGR::SocDpe,uint,uint)
AppleT8030PMGR::_writeSOCDPELEEReg(AppleT8030PMGR::SocDpe,uint,uint)
AppleT8030PMGR::_writeSOCDPETEAReg(AppleT8030PMGR::SocDpe,uint,uint)
AppleT8030PMGR::applyCPUEnergyAccumulatorsTuning(uint)
AppleT8030PMGR::commonSramCheck(void)
AppleT8030PMGR::commonSramCheck(void)
AppleT8030PMGR::configCPUComplexPowerState(uint,bool)
AppleT8030PMGR::configVideoClock(uint,uint,uint)
AppleT8030PMGR::configVideoClock(uint,uint,uint)
AppleT8030PMGR::cpuComplexIdleEnter(void)
AppleT8030PMGR::enableAPSC(uchar,bool)
AppleT8030PMGR::enableCPMPowerDomainGating(bool)
AppleT8030PMGR::enableCPUEnergyAccumulators(uint,bool)
AppleT8030PMGR::enableCPUEnergyAccumulators(uint,bool)
AppleT8030PMGR::enableCPUPerfCounters(uint,bool)
AppleT8030PMGR::enableDVMR(uchar,bool)
AppleT8030PMGR::enableDVMR(uchar,bool)
AppleT8030PMGR::enableTVM(uchar,bool,bool,uint)
AppleT8030PMGR::enableThrottler(ApplePMGR::Throttler,bool)
AppleT8030PMGR::enableVoltageChanges(bool)
AppleT8030PMGR::energyAccumulatorToNanojoules(ulong long)
AppleT8030PMGR::getAPWakeupSources(uint *)
AppleT8030PMGR::getCPMEnergyAccumulator(uint)
AppleT8030PMGR::getCPMEnergyAccumulator(uint)
AppleT8030PMGR::getCPUCoreEnergyAccumulator(uint)
AppleT8030PMGR::getCPUCoreEnergyAccumulator(uint)
AppleT8030PMGR::getCPUPerfCounter(uint,uint,bool,uint)
AppleT8030PMGR::getCPUPerfCounter(uint,uint,bool,uint)
AppleT8030PMGR::getCPUVoltageRailIDS(uint)
AppleT8030PMGR::getComplexToVoltageRail(uint)
AppleT8030PMGR::getComplexToVoltageRail(uint)
AppleT8030PMGR::getDVMRMaxWeight(uint,uchar)
AppleT8030PMGR::getDVMRMaxWeight(uint,uchar)
AppleT8030PMGR::getFANEIndex(uint,uchar,uchar)
AppleT8030PMGR::getISPRefClockFrequency(uint,uint,uint)
AppleT8030PMGR::getLeakageScaleFactor(double,double,double)
AppleT8030PMGR::getLeakageScaleFactor(double,double,double,double,double,double,double)
AppleT8030PMGR::getPerfDomainIDToComplex(uchar)
AppleT8030PMGR::getPerfDomainIDToComplex(uchar)
AppleT8030PMGR::getPerfDomainIDToVoltageRail(uchar)
AppleT8030PMGR::getPerfDomainIDToVoltageRail(uchar)
AppleT8030PMGR::getPerfStateTableIndex(uchar,uchar)
AppleT8030PMGR::getTunedDVMRWeightType(uint,uchar)
AppleT8030PMGR::getVoltageRailIDS(uchar)
AppleT8030PMGR::getVoltageRailIDS(uchar)
AppleT8030PMGR::getVoltageRailToComplex(uchar)
AppleT8030PMGR::getVoltageRailToComplex(uchar)
AppleT8030PMGR::initACCDPE(void)
AppleT8030PMGR::initDriver(IOService *)
AppleT8030PMGR::initDriver(IOService *)
AppleT8030PMGR::initRegGroups(void)
AppleT8030PMGR::initRegMaps(void)
AppleT8030PMGR::panicOnDvcDoneErr(void)
AppleT8030PMGR::panicOnDvcDoneErr(void)
AppleT8030PMGR::perfStateChangePending(uchar,uint)
AppleT8030PMGR::quiesceHW(void)
AppleT8030PMGR::quiesceHW(void)
AppleT8030PMGR::readACCReg(uint,uint)
AppleT8030PMGR::readACCReg32(uint,uint)
AppleT8030PMGR::readAOPGlobalReg(uint)
AppleT8030PMGR::readAOPGlobalReg(uint)
AppleT8030PMGR::restoreANEDPE(uint,uint)
AppleT8030PMGR::restoreClockConfig(void)
AppleT8030PMGR::restoreHW(void)
AppleT8030PMGR::roscDataInit(uchar,RoscData *,uint *)
AppleT8030PMGR::roscDataInit(uchar,RoscData *,uint *)
AppleT8030PMGR::roscDataRead(uchar,RoscTypeID,ApplePMGR::RoscReadPhase,uint)
AppleT8030PMGR::roscDataRead(uchar,RoscTypeID,ApplePMGR::RoscReadPhase,uint)
AppleT8030PMGR::roscDataUpdate(uchar,RoscData const*,bool,uint)
AppleT8030PMGR::setAPWakeupSources(uint *)
AppleT8030PMGR::setAPWakeupSources(uint *)
AppleT8030PMGR::setCLLTAgentConfig(ApplePMGR::CLLTAgent,uint)
AppleT8030PMGR::setCPMEnergyAccumulator(uint,ulong long)
AppleT8030PMGR::setCPUCoreEnergyAccumulator(uint,ulong long)
AppleT8030PMGR::setCPUPerfCounter(uint,uint,bool,ulong long,uint)
AppleT8030PMGR::setCPUPerfCounter(uint,uint,bool,ulong long,uint)
AppleT8030PMGR::setPerfState(uchar,uchar,bool,uint)
AppleT8030PMGR::startS2RTimer(void)
AppleT8030PMGR::waitForActualPS(uint,uint,uint,int *)
AppleT8030PMGR::writeACCReg(uint,uint,ulong long)
AppleT8030PMGR::writeACCReg32(uint,uint,uint)
AppleT8030PMGR::writeAOPGlobalReg(uint,uint)
AppleT8030PMGR::writeAOPGlobalReg(uint,uint)
AppleT8030PMGR::~AppleT8030PMGR()
AppleT8030PMGR__fn_0x710
AppleT8030PPMEntityBaseband__updateCurrentPowerLevel
AppleT8030PPM__MetaClass__fn_0x68
AppleT8030PPM__start_IOService
AppleT8030PlatformErrorHandler::MetaClass::alloc(void)
AppleT8030PlatformErrorHandler::_amccDecodeACTT(uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeDataPipeMBE(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeDataPipeSBE(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeDuptagAFCmd(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeDuptagMultiHit(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeDuptagParity(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeGCTTR(uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeGCTTW(uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeSCTT(uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeTagPipeAFError(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeTagPipeAFError(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_amccDecodeTagPipeParity(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_dcsDecodeMCUError(uint,uint &,uint,char const*)
AppleT8030PlatformErrorHandler::_fabricCommand(uint)
AppleT8030PlatformErrorHandler::_handleAMCCErrors(void)
AppleT8030PlatformErrorHandler::_handleAMCCErrors(void)
AppleT8030PlatformErrorHandler::_handleDCSErrors(void)
AppleT8030PlatformErrorHandler::_handleDCSErrors(void)
AppleT8030PlatformErrorHandler::_handleDSIDTimeout(OSObject *,IOFilterInterruptEventSource *)
AppleT8030PlatformErrorHandler::_handleDSIDTimeout(OSObject *,IOFilterInterruptEventSource *)
AppleT8030PlatformErrorHandler::_handleSEPErrors(void)
AppleT8030PlatformErrorHandler::_handleSEPMPMInterrupt(OSObject *,void *,IOService *,int)
AppleT8030PlatformErrorHandler::_mccStarted(void *,IOService *,IONotifier *)
AppleT8030PlatformErrorHandler::_mccStarted(void *,IOService *,IONotifier *)
AppleT8030PlatformErrorHandler::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8030PlatformErrorHandler::start(IOService *)
AppleT8030PlatformErrorHandler::start(IOService *)
AppleT8030PlatformErrorHandler::~AppleT8030PlatformErrorHandler()
AppleT8030SOCTuner::AppleT8030SOCTuner(void)
AppleT8030SOCTuner::handleDeviceStatusChange(uint *)
AppleT8030SOCTuner::initTuner(void)
AppleT8030USBXHCI::MetaClass::alloc(void)
AppleT8030USBXHCI::adjustPipeGated(IOUSBHostPipe *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleT8030USBXHCI::closePipeGated(IOUSBHostPipe *)
AppleT8030USBXHCI::createPipeGated(IOUSBHostPipe::StandardUSBDescriptors &,IOUSBHostDevice *,IOUSBHostInterface *,IOUSBHostPipe*&)
AppleT8030USBXHCI::~AppleT8030USBXHCI()
AppleT8030USBXHCICommandRing::addEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8030USBXHCICommandRing::dropEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8030USBXHCICommandRing::initWithParameters(AppleT8030USBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleT8030USBXHCICommandRing::updateEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleT8030USBXHCICommandRing::withParameters(AppleT8030USBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleT803xIO::MetaClass::alloc(void)
AppleT803xIO::_waitGate(AppleARMFunction **,AppleARMFunction **)
AppleT803xIO::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT803xIO::enableDeviceClock(uint,uint)
AppleT803xIO::enableDevicePower(uint,uint,uint *)
AppleT803xIO::start(IOService *)
AppleT803xIO::start(IOService *)
AppleT803xPCIe::_enableClocks(void)
AppleT803xPCIe::_enableRootComplex(bool)
AppleT803xPCIe::_initializePhy(void)
AppleT803xPCIe::_readAxi2AfReg(uint)
AppleT803xPCIe::_readFuseReg(uint)
AppleT803xPCIe::_readFuseReg(uint)
AppleT803xPCIe::_readPhyIPReg(uint)
AppleT803xPCIe::_readPhyIPReg(uint)
AppleT803xPCIe::_waitForRefclkGood(void)
AppleT803xPCIe::_writeAxi2AfReg(uint,uint)
AppleT803xPCIe::_writeAxi2AfReg(uint,uint)
AppleT803xPCIe::_writePhyIPReg(uint,uint)
AppleT803xPCIe::_writePhyIPReg(uint,uint)
AppleT803xPCIe::configure(IOService *)
AppleT803xPCIe::dtRegMapApcieAxi2AfIndex(void)
AppleT803xPCIe::dtRegMapApcieCommonIndex(void)
AppleT803xPCIe::dtRegMapPMGRFuseIndex(void)
AppleT803xPCIe::dtRegMapPhyIndex(uint)
AppleT803xPCIe::dtRegMapPortConfigIndex(uint)
AppleT803xPCIe::dtRegMapPortConfigLTSSMDebugIndex(uint)
AppleT803xPCIe::dtRegMapPortPhyGlueIndex(uint)
AppleT803xPCIe::dtRegMapPortPhyIPIndex(uint)
AppleT803xPCIe::start(IOService *)
AppleT803xPCIe::start(IOService *)
AppleT803xPCIePort::_captureCounters(void)
AppleT803xPCIePort::_captureLTSSMDebugTracer(void)
AppleT803xPCIePort::_captureRASCounters(void)
AppleT803xPCIePort::_enableCounters(void)
AppleT803xPCIePort::_enableLTSSMDebugTracer(void)
AppleT803xPCIePort::_enableRASCounters(void)
AppleT803xPCIePort::_initializeRefclkBuffer(void)
AppleT803xPCIePort::_initializeRootComplex(void)
AppleT803xPCIePort::_initializeRootComplex(void)
AppleT803xPCIePort::_readEntriesCounter(uint)
AppleT803xPCIePort::_readLTSSMDbgReg(uint)
AppleT803xPCIePort::_readPhyGlueLaneReg(uint)
AppleT803xPCIePort::_readPhyIPLaneReg(uint)
AppleT803xPCIePort::_readTimeCounter(uint)
AppleT803xPCIePort::_resetPortHardware(void)
AppleT803xPCIePort::_setAppclkAutoDis(bool)
AppleT803xPCIePort::_setRefclkEnable(bool)
AppleT803xPCIePort::_setRootPortPerst(bool)
AppleT803xPCIePort::_updateRIDToSIDMappings(uint)
AppleT803xPCIePort::_updateRIDToSIDMappings(uint)
AppleT803xPCIePort::_writeLTSSMDbgReg(uint,uint)
AppleT803xPCIePort::_writePhyGlueLaneReg(uint,uint)
AppleT803xPCIePort::_writePhyIPLaneReg(uint,uint)
AppleT803xPCIePort::allocateConfigSpaceBuffer(void)
AppleT803xPCIePort::clearLinkUpInterrupt(void)
AppleT803xPCIePort::clearPortInterrupts(uint)
AppleT803xPCIePort::disableAERInterrupts(void)
AppleT803xPCIePort::disablePortHardware(void)
AppleT803xPCIePort::disableVectorHard(int,IOInterruptVector *)
AppleT803xPCIePort::enableInterrupts(void)
AppleT803xPCIePort::enablePortHardware(void)
AppleT803xPCIePort::enablePortRefclkGating(bool)
AppleT803xPCIePort::enableVector(int,IOInterruptVector *)
AppleT803xPCIePort::free(void)
AppleT803xPCIePort::getLTSSMDebugTracer(void *,uint *)
AppleT803xPCIePort::getLinkUp(void)
AppleT803xPCIePort::getPortInterrupts(void)
AppleT803xPCIePort::hotResetLinkPartner(void)
AppleT803xPCIePort::initWithAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleT803xPCIePort::initWithAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleT803xPCIePort::isAERInterrupt(uint)
AppleT803xPCIePort::isBadRequestInterrupt(uint,char const**)
AppleT803xPCIePort::isLinkInL2(uint *)
AppleT803xPCIePort::isPortErrorInterrupt(uint,uint *,uint *)
AppleT803xPCIePort::logLinkState(char const*,char const*,bool,char const*)
AppleT803xPCIePort::portEnterDeepSleep(void)
AppleT803xPCIePort::portExitDeepSleep(void)
AppleT803xPCIePort::readAndClearLinkCdmSts(void)
AppleT803xPCIePort::receivedPMEToAck(uint *)
AppleT803xPCIePort::requestPMEToBroadcast(void)
AppleT803xPCIePort::serializedConfigRegSpace(void)
AppleT803xPCIePort::serializedConfigRegSpace(void)
AppleT803xPCIePort::setLtssmEnable(bool)
AppleT803xPCIePort::setPortEnable(bool)
AppleT803xPCIePort::~AppleT803xPCIePort()
AppleT8101GPIOIC::_safeReconfigure(uint,uint)
AppleT8101GPIOIC::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleT8101GPIOIC::disableVectorHard(int,IOInterruptVector *)
AppleT8101GPIOIC::disableWakeOnly(uint,uchar)
AppleT8101GPIOIC::enableVector(int,IOInterruptVector *)
AppleT8101GPIOIC::enableWakeOnly(uint,uchar,uchar)
AppleT8101GPIOIC::handleInterrupt(void *,IOService *,int)
AppleT8101GPIOIC::initPinsAndGroups(uint,uint)
AppleT8101GPIOIC::initVector(int,IOInterruptVector *)
AppleT8101GPIOIC::isInterruptLevelType(uint)
AppleT8101GPIOIC::lockGPIO(uint)
AppleT8101GPIOIC::start(IOService *)
AppleT8101TypeCPhy::applyPhyTunables(uint)
AppleT8101USB20XHCILightningPort::copyPhandleDriverFromProvider(IOService *,char const*,char const*)
AppleT8101USB20XHCILightningPort::free(void)
AppleT8101USB20XHCILightningPort::isParrotSoftResetWorkaroundNeeded(void)
AppleT8101USB20XHCILightningPort::parrotSoftResetWorkaroundInit(IOService *)
AppleT8101USB20XHCILightningPort::powerOn(void)
AppleT8101USB20XHCILightningPort::reset(uint,AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleT8101USB20XHCILightningPort::start(IOService *)
AppleT8101USBXHCI::MetaClass::alloc(void)
AppleT8101USBXHCI::getCompanionControllerGated(uint,uchar,AppleUSBHostController *&)
AppleT8101USBXHCI::getCompanionPort(AppleUSBHostPort *,uint)
AppleT8101USBXHCI::ioGated(AppleUSBHostRequest *)
AppleT8101USBXHCI::maxCapabilityForDomainState(ulong)
AppleT8101USBXHCI::reset(void)
AppleT8101USBXHCI::setPowerStateGated(ulong,IOService *)
AppleT8101USBXHCI::start(IOService *)
AppleT8101USBXHCI::stopThreadCallGated(void)
AppleT8101USBXHCI::systemPowerStateWillChangeToGated(ulong,ulong,IOService *)
AppleT8101USBXHCI::~AppleT8101USBXHCI()
AppleT8101USBXHCIDevice::createPipe(IOUSBHostPipe::StandardUSBDescriptors &,IOUSBHostDevice *,IOUSBHostInterface *)
AppleT8101USBXHCIEndpoint::initWithParameters(AppleUSBXHCI *,AppleUSBXHCIDevice *,AppleUSBXHCICommandRing *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleT8101USBXHCIEndpoint::transferEvent(StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleT8103USBXDCI::MetaClass::alloc(void)
AppleT8103USBXDCI::applyPlatformTunables(void)
AppleT8103USBXDCI::controllerReset(void)
AppleT8103USBXDCI::enumDoneTimerExpired(IOTimerEventSource *)
AppleT8103USBXDCI::free(void)
AppleT8103USBXDCI::powerOff(void)
AppleT8103USBXDCI::powerOn(void)
AppleT8103USBXDCI::start(IOService *)
AppleT8103USBXDCI::start(IOService *)
AppleT8103USBXDCI::~AppleT8103USBXDCI()
AppleT8110PMGR::_getVideoClockPllOffset(uint)
AppleT8110PMGR::_initTunables(void)
AppleT8110PMGR::configCPUComplexPowerState(uint,bool)
AppleT8110PMGR::enableGpuSyncWin(uint)
AppleT8110PMGR::getTunedDVMRWeightType(uint,uchar)
AppleT8110PMGR::getVoltageRailIDS(uchar)
AppleT8110PMGR::initDriver(IOService *)
AppleT8110PMGR::setAPWakeupSources(uint *)
AppleT8110PMGR::setPerfState(uchar,uchar,bool,uint)
AppleT8110PlatformErrorHandler::start(IOService *)
AppleT8112MemCacheController::start(IOService *)
AppleT8112PlatformErrorHandler::_handleAMCCErrors(void)
AppleT811xIO::start(IOService *)
AppleT811xPCIe::_readFuseReg(uint)
AppleT811xPCIe::_writeAxi2AfReg(uint,uint)
AppleT811xPCIe::configure(IOService *)
AppleT811xPCIePort::initWithAPCIeAndRegistryEntry(AppleEmbeddedPCIE *,IORegistryEntry *)
AppleTCS3490::MetaClass::alloc(void)
AppleTCS3490::_handleTimerExpired(void)
AppleTCS3490::dumpALSCalData(void)
AppleTCS3490::figureOutCorrectScaleFactor(float,int)
AppleTCS3490::getReportInterval(void)
AppleTCS3490::handleInterrupt(void)
AppleTCS3490::handleStart(IOService *)
AppleTCS3490::luxCalculation(ushort *,float *,uchar)
AppleTCS3490::probe(IOService *,int *)
AppleTCS3490::setALSReportInterval(uint)
AppleTCS3490::setPropertiesGated(OSObject *)
AppleTCS3490::setSensorEnabled(bool)
AppleTCS3490::updateDynamicGainThresholds(void)
AppleTCS3490::updateDynamicIntegrationParameters(ushort *,bool)
AppleTCS3490::updateGain(void)
AppleTCS3490::updateIntegrationTime(void)
AppleTHS7383::sendBusResetGated(void)
AppleTMP103::debugAddPrivateValues(OSDictionary *)
AppleTMP103::measureTemperature(ulong long *,int *)
AppleTMP468::debugAddPrivateValues(OSDictionary *)
AppleTMP468::getUpdatedReportInterval(void)
AppleTMP468::probe(IOService *,int *)
AppleTMP468::readBurst(uchar,uchar *,uint,ulong long *)
AppleTMP468::readReg16(uchar,ushort *)
AppleTMP468::readSensorData(void)
AppleTMP468::setConfigOneShot(void)
AppleTMP468::start(IOService *)
AppleTMP468::writeReg16(uchar,ushort)
AppleTSL2561::MetaClass::alloc(void)
AppleTSL2561::_calculateAmbient(ushort,ushort)
AppleTSL2561::_handleInterrupt(void)
AppleTSL2561::_handleTimerExpired(void)
AppleTSL2561::_resetThresholdRegisters(int,int)
AppleTSL2561::_setALSReportingInterval(uint)
AppleTSL2561::_setReportingThresholdPercentage(uint)
AppleTSL2561::_updateThresholdRegisters(uint,uint)
AppleTSL2561::getReportInterval(void)
AppleTSL2561::handleStart(IOService *)
AppleTSL2561::probe(IOService *,int *)
AppleTSL2561::readSensorData(ushort *,ushort *,uint *)
AppleTSL2561::setPropertiesGated(OSObject *)
AppleTSL2561::setSensorEnabled(bool)
AppleTSL2561::~AppleTSL2561()
AppleTSL2581::MetaClass::alloc(void)
AppleTSL2581::_calculateAmbient(ushort *,ushort *)
AppleTSL2581::_handleInterrupt(void)
AppleTSL2581::_handleTimerExpired(void)
AppleTSL2581::_reportAmbientLightLevel(uint,uint,uint)
AppleTSL2581::_resetThresholdRegisters(int,int)
AppleTSL2581::_setALSReportingInterval(uint)
AppleTSL2581::_setReportingThresholdPercentage(uint)
AppleTSL2581::_updateThresholdRegisters(uint,uint)
AppleTSL2581::dumpALSCalData(void)
AppleTSL2581::getReportInterval(void)
AppleTSL2581::handleStart(IOService *)
AppleTSL2581::probe(IOService *,int *)
AppleTSL2581::readSensorData(ushort *,ushort *,uint *)
AppleTSL2581::setALSGain(ushort)
AppleTSL2581::setPropertiesGated(OSObject *)
AppleTSL2581::setSensorEnabled(bool)
AppleTSL2581::~AppleTSL2581()
AppleTempSensorUserClient::free(void)
AppleTempSensorUserClient::initWithTask(task *,void *,uint,OSDictionary *)
AppleTempSensorUserClient::sGetTemp(OSObject *,void *,IOExternalMethodArguments *)
AppleTempSensorUserClient::start(IOService *)
AppleTempSensorUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
AppleTemperatureChildSensor::_debugSerializerCallback(OSSerialize *)
AppleTemperatureChildSensor::_setProperties(OSObject *)
AppleTemperatureChildSensor::copyEvent(uint,IOHIDEvent *,uint)
AppleTemperatureChildSensor::dispatchTemperatureEvent(ulong long,int,int)
AppleTemperatureChildSensor::free(void)
AppleTemperatureChildSensor::getReportInterval(void)
AppleTemperatureChildSensor::handleClose(IOService *,uint)
AppleTemperatureChildSensor::handleStart(IOService *)
AppleTemperatureChildSensor::initWithTempSensor(uint,uint)
AppleTemperatureChildSensor::setProperty(OSSymbol const*,OSObject *)
AppleTemperatureChildSensor::updateReportInterval(void)
AppleTemperatureSensor::AppleTemperatureSensor(OSMetaClass const*)
AppleTemperatureSensor::_debugSerializerCallback(OSSerialize *)
AppleTemperatureSensor::_handleClose(void)
AppleTemperatureSensor::_handleSetPropertiesAsync(IOInterruptEventSource *,int)
AppleTemperatureSensor::_setProperties(OSObject *)
AppleTemperatureSensor::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
AppleTemperatureSensor::debugAddValue(OSDictionary *,char const*,uint)
AppleTemperatureSensor::debugSerializerCallback(void *,OSSerialize *)
AppleTemperatureSensor::dispatchEvent(IOHIDEvent *,uint)
AppleTemperatureSensor::free(void)
AppleTemperatureSensor::getReportInterval(void)
AppleTemperatureSensor::getTemperatureGated(ulong long *,int *)
AppleTemperatureSensor::handleClose(IOService *,uint)
AppleTemperatureSensor::handleStart(IOService *)
AppleTemperatureSensor::handleStop(IOService *)
AppleTemperatureSensor::publishReportInterval(uint)
AppleTemperatureSensor::readBurst(uchar,uchar *,uint,ulong long *)
AppleTemperatureSensor::readReg16(uchar,ushort *)
AppleTemperatureSensor::readReg8(uchar,uchar *)
AppleTemperatureSensor::registerAction(OSObject *,void (*)(OSObject *,int))
AppleTemperatureSensor::setKernelPollingInterval(uint)
AppleTemperatureSensor::setPollingInterval(uint)
AppleTemperatureSensor::setPowerState(ulong,IOService *)
AppleTemperatureSensor::setProperties(OSObject *)
AppleTemperatureSensor::setProperty(OSSymbol const*,OSObject *)
AppleTemperatureSensor::timerExpired(IOTimerEventSource *)
AppleTemperatureSensor::writeBurst(uchar,uchar *,uint)
AppleTemperatureSensor::writeReg16(uchar,ushort)
AppleTemperatureSensor::writeReg8(uchar,uchar)
AppleTemperatureService::AppleTemperatureService(OSMetaClass const*)
AppleTemperatureService::_debugSerializerCallback(OSSerialize *)
AppleTemperatureService::debugSerializerCallback(void *,OSSerialize *)
AppleTemperatureService::handleReadSensor(void)
AppleTemperatureService::readBurst(uchar,uchar *,uint,ulong long *)
AppleTemperatureService::readReg16(uchar,ushort *)
AppleTemperatureService::readReg8(uchar,uchar *)
AppleTemperatureService::start(IOService *)
AppleTemperatureService::stop(IOService *)
AppleTemperatureService::updateReportInterval(void)
AppleTemperatureService::writeBurst(uchar,uchar *,uint)
AppleTemperatureService::writeReg16(uchar,ushort)
AppleTemperatureService::writeReg8(uchar,uchar)
AppleTemperatureStatistics::configureReport(IOReportChannelList *,uint,void *,void *)
AppleTemperatureStatistics::createReporters(char const*)
AppleTemperatureStatistics::probe(IOService *,int *)
AppleTemperatureStatistics::start(IOService *)
AppleTemperatureStatistics::stop(IOService *)
AppleTemperatureStatistics::updateReport(IOReportChannelList *,uint,void *,void *)
AppleTemperatureStatistics::updateTemperature(int)
AppleTimerQueueEventSource::cancelTimeout(void *)
AppleTimerQueueEventSource::free(void)
AppleTimerQueueEventSource::getExpiredEvent(void)
AppleTimerQueueEventSource::init(OSObject *,void (*)(OSObject *,IOTimerEventSource *))
AppleTimerQueueEventSource::removeEvent(void)
AppleTimerQueueEventSource::setTimeout(uint,uint,void *)
AppleTimerQueueEventSource::timerQueueEventSource(OSObject *,void (*)(OSObject *,IOTimerEventSource *),uint)
AppleTimerQueueEventSource::updateTimeout(uint,uint,void *,void **,bool (*)(void *,void *))
AppleTriStarBuiltIn::allowSystemIDFailure(void)
AppleTriStarBuiltIn::calculateAccessoryPowerSleepCurrentLimit(IOAccessoryPowerMode)
AppleTriStarBuiltIn::configureAccessoryPowerLowVoltageSelectGated(uint,uint)
AppleTriStarBuiltIn::configureReport(IOReportChannelList *,uint,void *,void *)
AppleTriStarBuiltIn::free(void)
AppleTriStarBuiltIn::getFreePinMaskGated(uint *)
AppleTriStarBuiltIn::getHighCurrentBM3PowerSupported(void)
AppleTriStarBuiltIn::getLowVoltagePowerSupported(void)
AppleTriStarBuiltIn::getPowerModeCurrentLimit(IOAccessoryPowerMode)
AppleTriStarBuiltIn::getPrimaryPortID(void)
AppleTriStarBuiltIn::getSleepPowerSupported(void)
AppleTriStarBuiltIn::getVBUSDetect(void)
AppleTriStarBuiltIn::getVBUSDownstream(void)
AppleTriStarBuiltIn::getVBUSIgnored(void)
AppleTriStarBuiltIn::handleAccessoryPowerDidChange(IOAccessoryPowerMode)
AppleTriStarBuiltIn::handleDetectChange(bool)
AppleTriStarBuiltIn::handleP_INInterrupt(void)
AppleTriStarBuiltIn::isUsbHSSupported(void)
AppleTriStarBuiltIn::readAuxADC(int *)
AppleTriStarBuiltIn::readBrickID(int *)
AppleTriStarBuiltIn::readRegs(uchar,uchar *,ulong long)
AppleTriStarBuiltIn::releasePinsForType(IOAccPinsReserve_t)
AppleTriStarBuiltIn::reservePinsForType(IOAccPinsReserve_t)
AppleTriStarBuiltIn::selectEisPinGated(bool,IOAccPinID,uint *)
AppleTriStarBuiltIn::setAccessoryPowerLowVoltage(bool,uint)
AppleTriStarBuiltIn::setAccessoryVoltage(uint)
AppleTriStarBuiltIn::updateReport(IOReportChannelList *,uint,void *,void *)
AppleTriStarBuiltIn::usbCCEnable(bool)
AppleTriStarBuiltIn::writeRegs(uchar,uchar const*,ulong long)
AppleTriStarCompanionUSBDataMonitor::chargerDetect(AppleARMFunctionUSBDataMonitor::DetectType,bool *)
AppleTriStarCompanionUSBDataMonitor::initWithTargetDataAndSymbol(IOService *,OSData const*,OSSymbol const*)
AppleTriStarDock::_conDetDebounce(IOTimerEventSource *)
AppleTriStarDock::_idCommandCompletion(int)
AppleTriStarDock::causeICInterrupt(void)
AppleTriStarDock::challengeCryptoGated(int,uchar const*,uchar *)
AppleTriStarDock::checkPinVoltageGated(IOAccPinID,IOAccMeasID,uint *)
AppleTriStarDock::free(void)
AppleTriStarDock::getBootID(uchar *)
AppleTriStarDock::getOrientationDetect(void)
AppleTriStarDock::getSystemID(ushort *)
AppleTriStarDock::getVBUSDetect(void)
AppleTriStarDock::getVBUSSink(bool *)
AppleTriStarDock::handleAccessoryPowerDidChange(IOAccessoryPowerMode)
AppleTriStarDock::handleAccessoryPowerWillChange(IOAccessoryPowerMode)
AppleTriStarDock::readAccessoryConnect(bool *)
AppleTriStarDock::serializeStatistics(void *,OSSerialize *)
AppleTriStarDock::setACCxConfig(IOAccessoryDock9Pin::ACCxConfig,IOAccessoryDock9Pin::ACCxConfig)
AppleTriStarDock::setConDetMode(IOAccDockConDetMode)
AppleTriStarDock::setDPDNConfig(IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig)
AppleTriStarDock::setDPDNTermination(bool)
AppleTriStarDock::setVBUSSink(bool)
AppleTriStarDock::stop(IOService *)
AppleTriStarDock::usbDataConnect(uint,bool)
AppleTriStarDock::usbDataMonitor(uint,int *)
AppleTriStarIC::remapPinType(IOAccPinID,AppleTriStarIC::PinType &)
AppleTriStarUSBDataMonitor::chargerDetect(AppleARMFunctionUSBDataMonitor::DetectType,bool *)
AppleTriStarUSBDataMonitor::monitorData(AppleARMFunctionUSBDataMonitor::MonitorType,int *)
AppleTypeCPhy::assignLaneClient(void)
AppleTypeCPhy::assignUSB2Client(void)
AppleTypeCPhy::close(AppleTypeCPhyInterface *)
AppleTypeCPhy::closeTunnel(AppleTypeCPhyTransportType,AppleTypeCPhyTunnel &)
AppleTypeCPhy::free(void)
AppleTypeCPhy::getLaneConfigurationFromDock(AppleTypeCPhyLane,bool *)
AppleTypeCPhy::isInterfaceOpen(AppleTypeCPhyInterface *)
AppleTypeCPhy::open(AppleTypeCPhyInterface *,AppleTypeCPhyPowerLevel,uint,uint)
AppleTypeCPhy::openTunnel(AppleTypeCPhyInterface *,AppleTypeCPhyTransportType,AppleTypeCPhyTunnel &,AppleTypeCPhyTunnelOption)
AppleTypeCPhy::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleTypeCPhy::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleTypeCPhy::setPowerState(ulong,IOService *)
AppleTypeCPhy::start(IOService *)
AppleTypeCPhy::stop(IOService *)
AppleTypeCPhy::stop(IOService *)
AppleTypeCPhyCIOInterface::initWithTypeCPhy(AppleTypeCPhy *,IOService *,uint)
AppleTypeCPhyCIOInterface::withTypeCPhy(AppleTypeCPhy *,IOService *,uint)
AppleTypeCPhyDisplayPortInterface::closeTunnel(void)
AppleTypeCPhyDisplayPortInterface::free(void)
AppleTypeCPhyDisplayPortInterface::getAvailableLaneCount(void)
AppleTypeCPhyDisplayPortInterface::getDriveSettings(IODPDriveSettings *,uint)
AppleTypeCPhyDisplayPortInterface::getLinkRate(uchar *,uint *)
AppleTypeCPhyDisplayPortInterface::initWithTypeCPhy(AppleTypeCPhy *,IOService *,uint)
AppleTypeCPhyDisplayPortInterface::openTunnel(AppleTypeCPhyTunnelOption)
AppleTypeCPhyDisplayPortInterface::setDriveSettings(IODPDriveSettings *,uint)
AppleTypeCPhyDisplayPortInterface::setLinkRate(uchar,uint)
AppleTypeCPhyDisplayPortInterface::withTypeCPhy(AppleTypeCPhy *,IOService *,uint)
AppleTypeCPhyInterface::close(void)
AppleTypeCPhyInterface::copyPhyService(void)
AppleTypeCPhyInterface::free(void)
AppleTypeCPhyInterface::getAvailableLaneCount(void)
AppleTypeCPhyInterface::isOpen(void)
AppleTypeCPhyInterface::open(AppleTypeCPhyPowerLevel,uint,uint)
AppleTypeCPhyInterface::setPowerLevel(AppleTypeCPhyPowerLevel)
AppleTypeCPhyInterface__fn_0xb8
AppleTypeCPhyUSBInterface::initWithTypeCPhy(AppleTypeCPhy *,AppleTypeCPhyTransportType,IOService *,uint)
AppleTypeCPhyUSBInterface::overrideControllerSignals(bool)
AppleTypeCPhyUSBInterface::usb2PhyPortReset(void)
AppleTypeCPhyUSBInterface::withTypeCPhy(AppleTypeCPhy *,AppleTypeCPhyTransportType,IOService *,uint)
AppleUSB20AccessoryHubPort::createDevice(uint)
AppleUSB20CameraKitHub::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSB20CameraKitHub::start(IOService *)
AppleUSB20CameraKitHub::updateBusCurrentProperty(void)
AppleUSB20CameraKitHub::updateCompanionHubDesiredBusCurrent(uint,uint)
AppleUSB20CameraKitHub::updateCompanionHubDesiredBusCurrentGated(uint,uint)
AppleUSB20Hub::clearPortFeatureGated(uint,ushort)
AppleUSB20Hub::clearTT(uint,IOUSBHostPipe *)
AppleUSB20Hub::createPorts(void)
AppleUSB20Hub::firstMatchNotificationThreadCallGated(void)
AppleUSB20Hub::probe(IOService *,int *)
AppleUSB20Hub::registerHub(void)
AppleUSB20Hub::resetTT(uint)
AppleUSB20Hub::start(IOService *)
AppleUSB20HubExpressCardPort::MetaClass::alloc(void)
AppleUSB20HubExpressCardPort::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleUSB20HubExpressCardPort::resetAndCreateDevice(uint)
AppleUSB20HubExpressCardPort::start(IOService *)
AppleUSB20HubExpressCardPort::stop(IOService *)
AppleUSB20HubExpressCardPort::suspend(void)
AppleUSB20HubExpressCardPort::withOptions(uint,uint,AppleUSBHostController *)
AppleUSB20HubExpressCardPort::~AppleUSB20HubExpressCardPort()
AppleUSB20HubPort::MetaClass::alloc(void)
AppleUSB20HubPort::clearPipeStall(IOUSBHostPipe *)
AppleUSB20HubPort::clearPipeStallGated(IOUSBHostPipe *)
AppleUSB20HubPort::clearPipeStallGated(IOUSBHostPipe *)
AppleUSB20HubPort::disconnect(AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSB20HubPort::free(void)
AppleUSB20HubPort::getCompanionPort(uint)
AppleUSB20HubPort::getPortStatusGated(uint &)
AppleUSB20HubPort::initBusCurrent(void)
AppleUSB20HubPort::interruptOccurred(IOInterruptEventSource *,int)
AppleUSB20HubPort::powerOn(void)
AppleUSB20HubPort::resetAndCreateDevice(uint)
AppleUSB20HubPort::resume(void)
AppleUSB20HubPort::start(IOService *)
AppleUSB20HubPort::suspend(void)
AppleUSB20HubPort::withOptions(tUSBHostPortType,uint,uint,AppleUSBHostController *)
AppleUSB20HubPort::~AppleUSB20HubPort()
AppleUSB20InternalHub::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSB20InternalHub::createPort(tUSBHostPortType,uint,uint,AppleUSBHostController *)
AppleUSB20InternalHub::createPorts(void)
AppleUSB20InternalHub::matchPropertyTable(OSDictionary *,int *)
AppleUSB20InternalHub::probe(IOService *,int *)
AppleUSB20InternalHub::start(IOService *)
AppleUSB20InternalIntelHub::clientInterest(void *,uint,IOService *,void *,ulong)
AppleUSB20InternalIntelHub::clientTerminationThreadCall(AppleUSB20InternalIntelHub::tClientTerminationParameters *,thread_call *)
AppleUSB20InternalIntelHub::notifyConnection(IOService *,AppleUSB20InternalIntelHub::tNotifyConnectChange)
AppleUSB20InternalIntelHub::notifyConnectionGated(IOService *,AppleUSB20InternalIntelHub::tNotifyConnectChange)
AppleUSB20InternalIntelHub::setPortFeatureGated(ushort,ushort)
AppleUSB20InternalIntelHub::start(IOService *)
AppleUSB20InternalIntelHub::stop(IOService *)
AppleUSB20InternalIntelHubClient::free(void)
AppleUSB20InternalIntelHubPort::MetaClass::alloc(void)
AppleUSB20InternalIntelHubPort::resetAndCreateDevice(uint)
AppleUSB20InternalIntelHubPort::start(IOService *)
AppleUSB20InternalIntelHubPort::stop(IOService *)
AppleUSB20InternalIntelHubPort::withOptions(tUSBHostPortType,uint,uint,AppleUSBHostController *)
AppleUSB20InternalSMSCHub::createPorts(void)
AppleUSB20KeyboardHub::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSB20XHCILightningPort::MetaClass::alloc(void)
AppleUSB20XHCILightningPort::cableChangeOccurred(IOTimerEventSource *)
AppleUSB20XHCILightningPort::cableNotification(void *,uint,IOService *,void *,ulong)
AppleUSB20XHCILightningPort::createDevice(uint)
AppleUSB20XHCILightningPort::free(void)
AppleUSB20XHCILightningPort::getPortStatusGated(uint &)
AppleUSB20XHCILightningPort::idlePowerState(void)
AppleUSB20XHCILightningPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB20XHCILightningPort::ioamTypeCStart(IOService *)
AppleUSB20XHCILightningPort::portsCreatedMessageGated(void)
AppleUSB20XHCILightningPort::start(IOService *)
AppleUSB20XHCILightningPort::stop(IOService *)
AppleUSB20XHCILightningPort::withDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB20XHCIPort::MetaClass::alloc(void)
AppleUSB20XHCIPort::enterTestMode(StandardUSBXHCI::tXHCITestMode)
AppleUSB20XHCIPort::getLPMExitLatencyGated(tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSB20XHCIPort::initBusCurrent(void)
AppleUSB20XHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB20XHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSB20XHCIPort::portsCreatedMessageGated(void)
AppleUSB20XHCIPort::resetAndCreateDevice(uint)
AppleUSB20XHCIPort::resume(void)
AppleUSB20XHCIPort::setProperties(OSObject *)
AppleUSB20XHCIPort::stop(IOService *)
AppleUSB20XHCIPort::suspend(void)
AppleUSB20XHCIPort::testMode(StandardUSBXHCI::tXHCITestMode)
AppleUSB20XHCIPort::testModeThreadCall(void *,void *)
AppleUSB20XHCIPort::updateLPMPolicyGated(tUSBLinkState,AppleUSBHostPort::tPortLPMPolicy,uint)
AppleUSB20XHCIPort::withDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB20XHCIPort::withDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSB20XHCIPort::~AppleUSB20XHCIPort()
AppleUSB20XHCITypeCPort::cableChangeOccurred(IOTimerEventSource *)
AppleUSB20XHCITypeCPort::idlePowerState(void)
AppleUSB20XHCITypeCPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB20XHCITypeCPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSB20XHCITypeCPort::portsCreatedMessageGated(void)
AppleUSB20XHCITypeCPort::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSB20XHCITypeCPort::registerTransportNotifications(void)
AppleUSB20XHCITypeCPort::setPowerStateGated(ulong,IOService *)
AppleUSB20XHCITypeCPort::start(IOService *)
AppleUSB20XHCITypeCPort::stop(IOService *)
AppleUSB20XHCITypeCPort::transportCreated(void *,IOService *,IONotifier *)
AppleUSB20XHCITypeCPort::transportMessage(void *,uint,IOService *,void *,ulong)
AppleUSB20XHCITypeCPort::updatePortState(void)
AppleUSB20XHCITypeCPort::withDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB30CameraKitHub::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSB30CameraKitHub::start(IOService *)
AppleUSB30CameraKitHub::stop(IOService *)
AppleUSB30GLHub::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSB30GLHub::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSB30GLHub::start(IOService *)
AppleUSB30GLHub::stop(IOService *)
AppleUSB30GLHub::warmPortReset(ushort)
AppleUSB30Hub::createPorts(void)
AppleUSB30Hub::firstMatchNotificationThreadCallGated(void)
AppleUSB30Hub::getLPMExitLatency(tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSB30Hub::getPortStatus(uint,ulong long &,StandardUSB30::tHubPortStatusCode)
AppleUSB30Hub::message(uint,IOService *,void *)
AppleUSB30Hub::probe(IOService *,int *)
AppleUSB30Hub::registerHub(void)
AppleUSB30Hub::setPortFeatureGated(ushort,ushort)
AppleUSB30Hub::start(IOService *)
AppleUSB30HubPort::clearPipeStall(IOUSBHostPipe *)
AppleUSB30HubPort::clearPipeStallGated(IOUSBHostPipe *)
AppleUSB30HubPort::getLPMExitLatencyGated(tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSB30HubPort::getPortStatusGated(uint &)
AppleUSB30HubPort::initBusCurrent(void)
AppleUSB30HubPort::interruptOccurred(IOInterruptEventSource *,int)
AppleUSB30HubPort::message(uint,IOService *,void *)
AppleUSB30HubPort::powerOn(void)
AppleUSB30HubPort::resetAndCreateDevice(uint)
AppleUSB30HubPort::resume(void)
AppleUSB30HubPort::start(IOService *)
AppleUSB30HubPort::suspend(void)
AppleUSB30HubPort::updateLPMPolicyGated(tUSBLinkState,AppleUSBHostPort::tPortLPMPolicy,uint)
AppleUSB30HubPort::warmReset(void)
AppleUSB30HubPort::withOptions(tUSBHostPortType,uint,uint,AppleUSBHostController *)
AppleUSB30XHCILightningPort::cableChangeOccurred(IOTimerEventSource *)
AppleUSB30XHCILightningPort::cableNotification(void *,uint,IOService *,void *,ulong)
AppleUSB30XHCILightningPort::idlePowerState(void)
AppleUSB30XHCILightningPort::ioamTypeCStart(IOService *)
AppleUSB30XHCILightningPort::portsCreatedMessageGated(void)
AppleUSB30XHCILightningPort::start(IOService *)
AppleUSB30XHCILightningPort::stop(IOService *)
AppleUSB30XHCIPort::enableComplianceGated(void)
AppleUSB30XHCIPort::fullDisconnect(AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSB30XHCIPort::getLPMExitLatencyGated(tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSB30XHCIPort::initBusCurrent(void)
AppleUSB30XHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB30XHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSB30XHCIPort::message(uint,IOService *,void *)
AppleUSB30XHCIPort::powerOn(void)
AppleUSB30XHCIPort::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSB30XHCIPort::resetAndCreateDevice(uint)
AppleUSB30XHCIPort::resume(void)
AppleUSB30XHCIPort::serializePortLink(void *,OSSerialize *)
AppleUSB30XHCIPort::setMaximumLinkSpeed(tInternalUSBHostConnectionSpeed)
AppleUSB30XHCIPort::setProperties(OSObject *)
AppleUSB30XHCIPort::start(IOService *)
AppleUSB30XHCIPort::warmReset(void)
AppleUSB30XHCIPort__fn_0x730
AppleUSB30XHCITypeCPort::cableChangeOccurred(IOTimerEventSource *)
AppleUSB30XHCITypeCPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSB30XHCITypeCPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSB30XHCITypeCPort::portsCreatedMessageGated(void)
AppleUSB30XHCITypeCPort::registerTransportNotifications(void)
AppleUSB30XHCITypeCPort::start(IOService *)
AppleUSB30XHCITypeCPort::transportCreated(void *,IOService *,IONotifier *)
AppleUSB30XHCITypeCPort::transportMessage(void *,uint,IOService *,void *,ulong)
AppleUSB30XHCITypeCPort::updatePortState(void)
AppleUSBACMData::waitForMatchingControlDriver(void)
AppleUSBADC2AudioDevice::GetInterfaceProtocolForStreamInterface(IOService *)
AppleUSBADC2AudioDevice::closeControlInterface(IOService *)
AppleUSBADC2AudioDevice::message(uint,IOService *,void *)
AppleUSBADC2AudioDevice::openControlInterface(IOService *)
AppleUSBADC2AudioDevice::protectedInitHardware(IOService *)
AppleUSBADC2AudioDevice::releaseControlInterface(AppleUSBAudioControlInterface *)
AppleUSBAudioComposite::probe(IOService *,int *)
AppleUSBAudioControlInterface::AbortPipe(OSObject *)
AppleUSBAudioControlInterface::AcknowledgeDeviceInterruptDataMessage(InterruptDataMessageFormat *)
AppleUSBAudioControlInterface::ClearPipeStall(OSObject *,bool)
AppleUSBAudioControlInterface::CreateIOBuffer(uint,ulong,ulong)
AppleUSBAudioControlInterface::DetectSplitTransactions(void)
AppleUSBAudioControlInterface::DeviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *)
AppleUSBAudioControlInterface::DeviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &)
AppleUSBAudioControlInterface::DeviceRequest(StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *)
AppleUSBAudioControlInterface::FindPipeForInterface(IOService *,uchar,uchar,uchar)
AppleUSBAudioControlInterface::GetAlternateSettingForStreamInterface(IOService *)
AppleUSBAudioControlInterface::GetAudioDescriptors(void)
AppleUSBAudioControlInterface::GetEntityControlSetting(uchar,uchar,uchar,uchar,void *,ushort)
AppleUSBAudioControlInterface::GetGlobalUniqueID(OSArray *)
AppleUSBAudioControlInterface::GetInterfaceNumberForStreamInterface(IOService *)
AppleUSBAudioControlInterface::GetLocationID(void)
AppleUSBAudioControlInterface::GetManufacturerStringIndex(void)
AppleUSBAudioControlInterface::GetMemoryRequest(IOMemoryDescriptor *,ushort &,ushort)
AppleUSBAudioControlInterface::GetMemoryRequest(void *,ushort &,ushort)
AppleUSBAudioControlInterface::GetProductStringIndex(void)
AppleUSBAudioControlInterface::GetSerialNumberStringIndex(void)
AppleUSBAudioControlInterface::GetStringDescriptor(uchar,char *,ulong,ushort)
AppleUSBAudioControlInterface::GetUSBControllerClockID(void)
AppleUSBAudioControlInterface::GetUSBFrameNumber(void)
AppleUSBAudioControlInterface::GetUSBStreamInterfaceWithNumber(uchar)
AppleUSBAudioControlInterface::ReadForPipe(OSObject *,IOBufferMemoryDescriptor *,void *)
AppleUSBAudioControlInterface::ReadForPipe(OSObject *,IOMemoryDescriptor *,ulong long,uint,AppleUSBAudioIsocFrameList *,uint,void *)
AppleUSBAudioControlInterface::SendActiveAlternateSettingInterrupt(IOService *)
AppleUSBAudioControlInterface::SendClockValidityChangeInterrupt(IOService *)
AppleUSBAudioControlInterface::SetAlternateInterfaceForStreamInterface(IOService *,ushort)
AppleUSBAudioControlInterface::SetIdlePolicy(OSObject *,uint)
AppleUSBAudioControlInterface::SetMemoryRequest(IOMemoryDescriptor *,ushort)
AppleUSBAudioControlInterface::SetMemoryRequest(void const*,ushort,ushort)
AppleUSBAudioControlInterface::SetPipePolicy(OSObject *,ushort,uchar)
AppleUSBAudioControlInterface::WriteForPipe(OSObject *,IOMemoryDescriptor *,ulong long,uint,AppleUSBAudioIsocFrameList *,uint,void *)
AppleUSBAudioControlInterface::withProvider(IOService *)
AppleUSBAudioDevice::BuildConnectionGraph(uchar)
AppleUSBAudioDevice::BuildPaths(uchar,uchar,OSArray *,OSArray *,int)
AppleUSBAudioDevice::ClockTypeString(uchar)
AppleUSBAudioDevice::ControlsStreamNumber(uchar)
AppleUSBAudioDevice::DisableL06EQ(void)
AppleUSBAudioDevice::GetDefaultL06EUMode(bool *)
AppleUSBAudioDevice::GetFrameNumber(ulong long *)
AppleUSBAudioDevice::GetInterfaceNumberForStreamInterface(IOService *)
AppleUSBAudioDevice::GetInterfaceProtocolForStreamInterface(IOService *)
AppleUSBAudioDevice::GetMikeyBusIDOfDongle(ushort *)
AppleUSBAudioDevice::IsCS46L06Based(void)
AppleUSBAudioDevice::MetaClass::alloc(void)
AppleUSBAudioDevice::SetAlternateInterfaceForStreamInterface(IOService *,ushort)
AppleUSBAudioDevice::SetL06EUMode(bool)
AppleUSBAudioDevice::StartUpdateTimer(void)
AppleUSBAudioDevice::StopUpdateTimer(void)
AppleUSBAudioDevice::TerminalTypeString(ushort)
AppleUSBAudioDevice::UnlockCS46L06(void)
AppleUSBAudioDevice::UpdateTimer(IOTimerEventSource *)
AppleUSBAudioDevice::WakeFromSleep(void)
AppleUSBAudioDevice::acquireControlInterface(void)
AppleUSBAudioDevice::activateAudioEngines(void)
AppleUSBAudioDevice::addMuteControl(AppleUSBAudioEngine *,uchar,uchar,uchar,uchar,uint)
AppleUSBAudioDevice::addSampleRatesFromClockPath(OSArray *)
AppleUSBAudioDevice::addSampleRatesFromClockSpace(void)
AppleUSBAudioDevice::addSelectorSourcesToSelectorControl(Audio2SelectorControl *,OSArray *,uint,uint,uchar)
AppleUSBAudioDevice::addVolumeControls(AppleUSBAudioEngine *,uchar,uchar,uchar,uchar,uint)
AppleUSBAudioDevice::allocateBufferDescriptor(uint,ulong,ulong)
AppleUSBAudioDevice::attemptDeviceRecovery(AppleUSBAudioDevice*)
AppleUSBAudioDevice::buildClockGraph(uchar)
AppleUSBAudioDevice::buildClockPath(uchar,uchar,OSArray *,OSArray *)
AppleUSBAudioDevice::cacheClockSourceRangeData(uchar)
AppleUSBAudioDevice::calculateErrataBits(ushort,ushort,ushort)
AppleUSBAudioDevice::canSetSampleRateForClockPath(AppleUSBAudioEngine *,uchar,uchar,uint,uint *,bool *)
AppleUSBAudioDevice::checkForStatusInterruptEndpoint(void)
AppleUSBAudioDevice::checkForTapStreams(AppleUSBAudioEngine *,uchar,uchar)
AppleUSBAudioDevice::clearAllSampleRates(void)
AppleUSBAudioDevice::clockPathCrossed(OSArray *,OSArray *)
AppleUSBAudioDevice::closeControlInterface(IOService *)
AppleUSBAudioDevice::compareSampleRates(OSArray *,OSArray *)
AppleUSBAudioDevice::controlChangedHandler(OSObject *,Audio2Control *,int,int)
AppleUSBAudioDevice::controlHasChangedOnDevice(uchar,OSSet *)
AppleUSBAudioDevice::copySampleRatesFromStreamInterface(OSNumber *)
AppleUSBAudioDevice::createAudioEngine(OSArray *)
AppleUSBAudioDevice::createAudioEngines(void)
AppleUSBAudioDevice::createControlsForInterface(Audio2Engine *,uchar,uchar)
AppleUSBAudioDevice::deduceSidetoneControlsFromPlaythruControls(AppleUSBAudioEngine *,uchar,uchar)
AppleUSBAudioDevice::detectSplitTransactions(void)
AppleUSBAudioDevice::determineClockPathUnitUsage(AppleUSBAudioEngine *,OSArray *)
AppleUSBAudioDevice::didTerminate(IOService *,uint,bool *)
AppleUSBAudioDevice::doControlStuff(Audio2Engine *,uchar,uchar)
AppleUSBAudioDevice::doInputSelectorChange(uint,uint,int)
AppleUSBAudioDevice::doNotResetEngine(AppleUSBAudioEngine *)
AppleUSBAudioDevice::doOutputSelectorChange(uint,uint,int)
AppleUSBAudioDevice::doPassThruSelectorChange(uint,uint,int)
AppleUSBAudioDevice::doPlaythroughSetup(AppleUSBAudioEngine *,OSArray *,uchar,uchar,uchar)
AppleUSBAudioDevice::doSelectorControlChange(Audio2Control *,int,int)
AppleUSBAudioDevice::doToggleControlChange(Audio2Control *,int,int)
AppleUSBAudioDevice::doVolumeControlChange(Audio2Control *,int,int)
AppleUSBAudioDevice::findStreamsWithCommonClocks(OSArray *)
AppleUSBAudioDevice::findStreamsWithCommonSampleRates(OSArray *)
AppleUSBAudioDevice::findStreamsWithCompatibleEndpoints(OSArray *)
AppleUSBAudioDevice::findStreamsWithDirectionAndSyncType(OSArray *,uchar,uchar)
AppleUSBAudioDevice::formatChangeController(Audio2Engine *,Audio2Stream *,_IOAudioStreamFormat const*,_IOAudioSampleRate const*)
AppleUSBAudioDevice::free(void)
AppleUSBAudioDevice::getADC3ClassSpecificDescriptor(USBADC3::tClassSpecificRequest,USBADC3::ExtendedDescriptor *,uchar,uchar)
AppleUSBAudioDevice::getActiveAlternateSetting(uchar *,uchar)
AppleUSBAudioDevice::getAllClockSourceSamplingFrequencySubRanges(uchar,Layout3ParameterBlock *,uint)
AppleUSBAudioDevice::getBestFeatureUnitInPath(OSArray *,uint,uchar,uchar,uint)
AppleUSBAudioDevice::getBothEngines(AppleUSBAudioEngine **,AppleUSBAudioEngine **)
AppleUSBAudioDevice::getClockPathCurSampleRate(uint *,bool *,bool *,OSArray *,uchar *)
AppleUSBAudioDevice::getClockPathGroup(uchar)
AppleUSBAudioDevice::getClockPathGroup(uchar,uchar,uchar *)
AppleUSBAudioDevice::getClockSelectorIDAndPathIndex(uchar *,uchar *,OSArray *)
AppleUSBAudioDevice::getClockSourceSampleRates(OSArray **,uchar)
AppleUSBAudioDevice::getConnectorControlStatus(uchar,AudioClusterDescriptor *)
AppleUSBAudioDevice::getCurClockMultiplier(uchar,ushort *,ushort *)
AppleUSBAudioDevice::getCurClockSelector(uchar,uchar *)
AppleUSBAudioDevice::getCurClockSourceSamplingFrequency(uchar,uint *,bool *)
AppleUSBAudioDevice::getCurMute(uchar,uchar,bool *)
AppleUSBAudioDevice::getCurVolume(uchar,uchar,short *)
AppleUSBAudioDevice::getDefaultInputTerminalID(uchar)
AppleUSBAudioDevice::getDefaultOutputTerminalID(uchar)
AppleUSBAudioDevice::getDeviceSpeed(void)
AppleUSBAudioDevice::getEngineInfoIndex(AppleUSBAudioEngine *)
AppleUSBAudioDevice::getEngineToReset(void)
AppleUSBAudioDevice::getFeatureUnitRange(uchar,uchar,uchar,uchar,SubRange16Signed *)
AppleUSBAudioDevice::getFeatureUnitSetting(uchar,uchar,uchar,uchar,void *)
AppleUSBAudioDevice::getIndexedSampleRatesForClockPath(SubRange32 *,OSArray *,uint)
AppleUSBAudioDevice::getLatencyForStream(ulong long &,uchar,uchar)
AppleUSBAudioDevice::getManufacturerStringIndex(void)
AppleUSBAudioDevice::getMaxVolume(uchar,uchar,short *)
AppleUSBAudioDevice::getMinVolume(uchar,uchar,short *)
AppleUSBAudioDevice::getNameForMixerPath(OSArray *,uint *,uchar)
AppleUSBAudioDevice::getNameForPath(OSArray *,uint *,uchar)
AppleUSBAudioDevice::getNameForTerminal(uchar,uchar)
AppleUSBAudioDevice::getNumClockSourceSamplingFrequencySubRanges(uchar,ushort *)
AppleUSBAudioDevice::getNumConnectedOutputTerminals(uchar)
AppleUSBAudioDevice::getNumSampleRatesForClockPath(uchar *,OSArray *)
AppleUSBAudioDevice::getOptimalClockPath(AppleUSBAudioEngine *,uchar,uchar,uint,bool *,uchar *)
AppleUSBAudioDevice::getPathIndexForSelectorSetting(OSArray *,uint,uint,uchar,uchar)
AppleUSBAudioDevice::getPlaythroughPaths(uchar)
AppleUSBAudioDevice::getProductID(void)
AppleUSBAudioDevice::getProductStringIndex(void)
AppleUSBAudioDevice::getSelectorSetting(uchar)
AppleUSBAudioDevice::getSerialNumberStringIndex(void)
AppleUSBAudioDevice::getStreamInfoIndex(uchar)
AppleUSBAudioDevice::getStringDescriptor(uchar,char *,ulong,ushort)
AppleUSBAudioDevice::getUSBTransferAlignment(uchar)
AppleUSBAudioDevice::getValidAlternateSettings(uint *,uchar)
AppleUSBAudioDevice::getVendorID(void)
AppleUSBAudioDevice::getVolumeResolution(uchar,uchar,ushort *)
AppleUSBAudioDevice::getbcdUSB(void)
AppleUSBAudioDevice::handleStatusInterrupt(void)
AppleUSBAudioDevice::initHardware(IOService *)
AppleUSBAudioDevice::initHardwareThread(AppleUSBAudioDevice*,void *)
AppleUSBAudioDevice::interfaceContainsSupportedFormat(uchar,bool *)
AppleUSBAudioDevice::interfaceHasValidAlternateSettingsControl(uchar,uchar)
AppleUSBAudioDevice::isClockCommonWithAllStreamsInList(OSNumber *,OSArray *)
AppleUSBAudioDevice::isClockCommonWithAtLeastOneStreamsInList(OSNumber *,OSArray *)
AppleUSBAudioDevice::isClockPathCrossed(OSNumber *,OSArray *,uint)
AppleUSBAudioDevice::isSampleRateCommonWithAllStreamsInList(OSNumber *,OSArray *)
AppleUSBAudioDevice::isSampleRateCommonWithAtLeastOneStreamsInList(OSNumber *,OSArray *)
AppleUSBAudioDevice::matchPropertyTable(OSDictionary *,int *)
AppleUSBAudioDevice::mergeSampleRates(OSArray *,OSArray *)
AppleUSBAudioDevice::openControlInterface(IOService *)
AppleUSBAudioDevice::otherEngine(AppleUSBAudioEngine *)
AppleUSBAudioDevice::pathsContaining(uchar)
AppleUSBAudioDevice::pathsContainingFeatureUnitButNotMixerUnit(uchar,uchar)
AppleUSBAudioDevice::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBAudioDevice::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSBAudioDevice::probe(IOService *,int *)
AppleUSBAudioDevice::processStatusInterrupt(void *)
AppleUSBAudioDevice::protectedControlChangedHandler(Audio2Control *,int,int)
AppleUSBAudioDevice::protectedInitHardware(IOService *)
AppleUSBAudioDevice::registerEngineInfo(AppleUSBAudioEngine *)
AppleUSBAudioDevice::registerStreamInfo(uchar,uchar)
AppleUSBAudioDevice::setClockPathCurSampleRate(uint,OSArray *,bool)
AppleUSBAudioDevice::setClockSetting(uchar,uchar,uchar,void *,ushort)
AppleUSBAudioDevice::setConfigurationApp(char const*)
AppleUSBAudioDevice::setCurClockSelector(uchar,uchar)
AppleUSBAudioDevice::setCurClockSourceSamplingFrequency(uchar,uint)
AppleUSBAudioDevice::setCurMute(uchar,uchar,bool)
AppleUSBAudioDevice::setCurVolume(uchar,uchar,short)
AppleUSBAudioDevice::setEnableTapStream(uchar,uchar,bool)
AppleUSBAudioDevice::setEndpointPitchControl(uchar,uint)
AppleUSBAudioDevice::setFeatureUnitSetting(uchar,uchar,uchar,uchar,ushort,ushort)
AppleUSBAudioDevice::setSelectorSetting(uchar,uchar)
AppleUSBAudioDevice::shouldResetEngine(AppleUSBAudioEngine *)
AppleUSBAudioDevice::start(IOService *)
AppleUSBAudioDevice::statusInterruptHandler(void *,void *,int,uint)
AppleUSBAudioDevice::stop(IOService *)
AppleUSBAudioDevice::streamEndpointsHaveSpecifiedDirectionAndSyncType(OSNumber *,uchar,uchar)
AppleUSBAudioDevice::streamsHaveCommonClocks(OSNumber *,OSNumber *)
AppleUSBAudioDevice::streamsHaveCommonSampleRates(OSNumber *,OSNumber *)
AppleUSBAudioDevice::supportSampleRateInClockPath(OSArray *,uint)
AppleUSBAudioDevice::willTerminate(IOService *,uint)
AppleUSBAudioDictionary::getDictionaryArray(char const*)
AppleUSBAudioDictionary::getDictionaryValue(char const*,bool *)
AppleUSBAudioDictionary::getDictionaryValue(char const*,uchar *)
AppleUSBAudioDictionary::getDictionaryValue(char const*,uint *)
AppleUSBAudioDictionary::getDictionaryValue(char const*,ushort *)
AppleUSBAudioDictionary::logDescriptor(StandardUSB::Descriptor const*)
AppleUSBAudioDictionary::setDictionaryObjectAndRelease(char const*,OSObject *)
AppleUSBAudioDictionary::setDictionaryValue(char const*,bool)
AppleUSBAudioDictionary::setDictionaryValue(char const*,uchar)
AppleUSBAudioDictionary::setDictionaryValue(char const*,uint)
AppleUSBAudioDictionary::setDictionaryValue(char const*,ulong long)
AppleUSBAudioDictionary::setDictionaryValue(char const*,ushort)
AppleUSBAudioDictionary::withType(tAppleUSBAudioDictionaryType)
AppleUSBAudioEngine::ADC2ResetDelayTimeout(IOTimerEventSource *)
AppleUSBAudioEngine::ChannelConfigString(uchar)
AppleUSBAudioEngine::DeviceModeEngineStartTimeout(IOTimerEventSource *)
AppleUSBAudioEngine::GetControllingClockEntityID(uchar &)
AppleUSBAudioEngine::GetDefaultSampleRate(_IOAudioSampleRate *)
AppleUSBAudioEngine::IsActiveClockEntityID(uchar)
AppleUSBAudioEngine::MetaClass::alloc(void)
AppleUSBAudioEngine::ResetADC2Engine(void)
AppleUSBAudioEngine::applyOffsetAmountToFilter(void)
AppleUSBAudioEngine::calculateOffset(void)
AppleUSBAudioEngine::canSetSampleRate(uchar,uchar,uint *,bool)
AppleUSBAudioEngine::combinedPerformConfigChange(tAppleUSBAudio_ConfigChange,uint,ulong long,ulong long)
AppleUSBAudioEngine::configChangeEnableTapStream(int,bool)
AppleUSBAudioEngine::configChangeFormatChange(uint,ulong long,ulong long)
AppleUSBAudioEngine::configChangeRepublishFormats(bool)
AppleUSBAudioEngine::configChangeResetEngine(void)
AppleUSBAudioEngine::configChangeSampleRate(ulong long)
AppleUSBAudioEngine::configChangeSelectorChange(uint,uint,int)
AppleUSBAudioEngine::controlChangedHandler(OSObject *,Audio2Control *,int,int)
AppleUSBAudioEngine::controlledFormatChange(Audio2Stream *,_IOAudioStreamFormat const*,_IOAudioSampleRate const*)
AppleUSBAudioEngine::convertInputSamples(void const*,void *,uint,uint,_IOAudioStreamFormat const*,Audio2Stream *)
AppleUSBAudioEngine::determineMacSyncMode(uchar)
AppleUSBAudioEngine::didTakeFirstTimeStamp(void)
AppleUSBAudioEngine::doClockSelectorChange(uchar)
AppleUSBAudioEngine::doClockSelectorSetup(void)
AppleUSBAudioEngine::doesMainInputStreamProvideImplicitFeedback(void)
AppleUSBAudioEngine::exportHeadsetInfo(ushort)
AppleUSBAudioEngine::findClockSelectorSelectionWithClockPathIndex(uchar)
AppleUSBAudioEngine::free(void)
AppleUSBAudioEngine::getAnchorFrameAndTimeStamp(ulong long *,ulong long *)
AppleUSBAudioEngine::getChannelNameString(uchar,uchar)
AppleUSBAudioEngine::getCurrentClockPathSampleRate(void)
AppleUSBAudioEngine::getCurrentSampleFrame(void)
AppleUSBAudioEngine::getGlobalUniqueID(void)
AppleUSBAudioEngine::getInitialMaxTimestampJitter(void)
AppleUSBAudioEngine::getTimeForFrameNumber(ulong long)
AppleUSBAudioEngine::getUSBWrapFrameFromOtherStream(AppleUSBAudioStream *)
AppleUSBAudioEngine::init(OSArray *)
AppleUSBAudioEngine::initHardware(IOService *)
AppleUSBAudioEngine::initRunningAverage(void)
AppleUSBAudioEngine::lastAnchorFrame(void)
AppleUSBAudioEngine::matchPropertyTable(OSDictionary *,int *)
AppleUSBAudioEngine::message(uint,IOService *,void *)
AppleUSBAudioEngine::performAudioEngineStart(void)
AppleUSBAudioEngine::performAudioEngineStop(bool)
AppleUSBAudioEngine::performAudioEngineStop(void)
AppleUSBAudioEngine::performConfigChange(IOAudio2Notification *)
AppleUSBAudioEngine::performFormatChange(Audio2Stream *,_IOAudioStreamFormat const*,_IOAudioSampleRate const*)
AppleUSBAudioEngine::protectedControlChangedHandler(Audio2Control *,int,int)
AppleUSBAudioEngine::registerService(uint)
AppleUSBAudioEngine::republishAvailableFormats(_IOAudioSampleRate &,bool,bool)
AppleUSBAudioEngine::resetFirstTimeStampCounter(void)
AppleUSBAudioEngine::resetRateTimer(void)
AppleUSBAudioEngine::runPolledTask(void)
AppleUSBAudioEngine::start(IOService *,Audio2Device *)
AppleUSBAudioEngine::stop(IOService *)
AppleUSBAudioEngine::storePacketSize(ushort)
AppleUSBAudioEngine::takeTimeStamp(bool,ulong long *)
AppleUSBAudioEngine::trackConfidence(ushort)
AppleUSBAudioEngine::updateChannelNames(OSArray *,uchar,uchar)
AppleUSBAudioEngine::updateClockSelector(uchar)
AppleUSBAudioEngine::updateClockStatus(uchar,uchar,uchar)
AppleUSBAudioEngine::updateMaxTimestampJitter(void)
AppleUSBAudioEngine::updateUSBCycleTime(ulong long,ulong long)
AppleUSBAudioEngine::willTerminate(IOService *,uint)
AppleUSBAudioEngine::~AppleUSBAudioEngine()
AppleUSBAudioInterruptPipe::Abort(void)
AppleUSBAudioInterruptPipe::ClearPipeStall(bool)
AppleUSBAudioInterruptPipe::Read(IOBufferMemoryDescriptor *,IOUSBHostCompletion *)
AppleUSBAudioInterruptPipe::SetIdlePolicy(uint)
AppleUSBAudioInterruptPipe::forDeviceOnInterfaceWithProperties(AppleUSBAudioDevice *,IOService *,ushort,uchar)
AppleUSBAudioInterruptPipe::free(void)
AppleUSBAudioIsocFrameList::ContainsPtr(void *)
AppleUSBAudioIsocFrameList::FrameListPtr(uint)
AppleUSBAudioIsocFrameList::GetfrActCount(uint)
AppleUSBAudioIsocFrameList::GetfrReqCount(uint)
AppleUSBAudioIsocFrameList::GetfrStatus(uint)
AppleUSBAudioIsocFrameList::GetfrTimeStamp(uint)
AppleUSBAudioIsocFrameList::IndexForFrameListPtr(void *)
AppleUSBAudioIsocFrameList::InitializeFrameList(void)
AppleUSBAudioIsocFrameList::SetfrActCount(uint,ushort)
AppleUSBAudioIsocFrameList::SetfrReqCount(uint,ushort)
AppleUSBAudioIsocFrameList::SetfrStatus(uint,int)
AppleUSBAudioIsocFrameList::SetfrTimeStamp(uint,ulong long)
AppleUSBAudioIsocFrameList::forServiceWithNumElements(IOService *,uint)
AppleUSBAudioIsocPipe::Abort(void)
AppleUSBAudioIsocPipe::NewAlternateInterface(uchar)
AppleUSBAudioIsocPipe::Read(IOMemoryDescriptor *,ulong long,uint,AppleUSBAudioIsocFrameList *,uint,void *)
AppleUSBAudioIsocPipe::SetPipePolicy(ushort,uchar)
AppleUSBAudioIsocPipe::Write(IOMemoryDescriptor *,ulong long,uint,AppleUSBAudioIsocFrameList *,uint,void *)
AppleUSBAudioIsocPipe::forDeviceOnInterfaceWithProperties(AppleUSBAudioDevice *,IOService *,uchar,ushort,uchar,uchar)
AppleUSBAudioIsocPipe::free(void)
AppleUSBAudioStream::CheckOtherStreamWrapFrame(void)
AppleUSBAudioStream::CoalesceInputSamples(uint,uint,uint *)
AppleUSBAudioStream::ConfigureNewAlternateInterface(uchar)
AppleUSBAudioStream::GetDefaultSettings(uchar *,_IOAudioSampleRate *)
AppleUSBAudioStream::HostSideIsActive(void)
AppleUSBAudioStream::IsTapStream(uint &)
AppleUSBAudioStream::PrepareAndReadFrameLists(uchar,uchar,uint)
AppleUSBAudioStream::PrepareAndReadFrameListsForAlignedTransfers(uchar,uchar,uint)
AppleUSBAudioStream::PrepareWriteFrameList(uint)
AppleUSBAudioStream::PrepareWriteFrameListForAlignedTransfers(uint)
AppleUSBAudioStream::RearmWatchdog(bool)
AppleUSBAudioStream::ResyncAudio(void)
AppleUSBAudioStream::SetCurrentFormat(void)
AppleUSBAudioStream::SetStreamCanBeTapped(uint)
AppleUSBAudioStream::StartUpdateTimer(void)
AppleUSBAudioStream::StopUpdateTimer(void)
AppleUSBAudioStream::WatchdogTimer(IOTimerEventSource *)
AppleUSBAudioStream::WatchdogTimer(IOTimerEventSource *)
AppleUSBAudioStream::addAvailableFormats(AUAConfigurationDictionary *)
AppleUSBAudioStream::checkForFeedbackEndpoint(AUAConfigurationDictionary *)
AppleUSBAudioStream::closeInterface(AppleUSBAudioStream*,IOService *)
AppleUSBAudioStream::collectTimeStamps(uint)
AppleUSBAudioStream::configureAudioStream(_IOAudioSampleRate)
AppleUSBAudioStream::controlInterruptReceived(uchar)
AppleUSBAudioStream::controlledFormatChange(_IOAudioStreamFormat const*,_IOAudioSampleRate const*)
AppleUSBAudioStream::copyAnchor(ulong long,ulong long *,ulong long *)
AppleUSBAudioStream::copyOutputSamples(uint,uint)
AppleUSBAudioStream::doStartUSBStream(ulong long,uint)
AppleUSBAudioStream::eraseOutputSamples(uint,uint)
AppleUSBAudioStream::findClosestFormatForSampleRate(_IOAudioSampleRate const*,_IOAudioStreamFormat *)
AppleUSBAudioStream::free(void)
AppleUSBAudioStream::generateTimeStamp(uint,uint,uint,uint)
AppleUSBAudioStream::getCurrentSampleFrame(void)
AppleUSBAudioStream::getLockDelayFrames(void)
AppleUSBAudioStream::getPacketSizeHistory(void)
AppleUSBAudioStream::getPreferredBufferMappingOptions(bool)
AppleUSBAudioStream::getRateFromSamplesPerPacket(_IOAudioSamplesPerFrame)
AppleUSBAudioStream::getSyncType(void)
AppleUSBAudioStream::initPacketSizeHistoryArray(uint,uint,uint)
AppleUSBAudioStream::initWithAudioEngine(AppleUSBAudioDevice *,AppleUSBAudioEngine *,IOService *,_IOAudioSampleRate,char const*,OSDictionary *)
AppleUSBAudioStream::jitterFilter(ulong long,uint)
AppleUSBAudioStream::matchPropertyTable(OSDictionary *,int *)
AppleUSBAudioStream::message(uint,IOService *,void *)
AppleUSBAudioStream::prepareFrameList(uint)
AppleUSBAudioStream::prepareUSBStream(void)
AppleUSBAudioStream::primeInputPipe(AppleUSBAudioIsocPipe *,uint,uint)
AppleUSBAudioStream::primeInputPipeHandler(void *,void *,int,void *)
AppleUSBAudioStream::processRead(ulong long,int,uint)
AppleUSBAudioStream::processWrite(AppleUSBAudioTransferInfo *,int,uint)
AppleUSBAudioStream::protectedCloseInterface(IOService *,IOService **)
AppleUSBAudioStream::queueInputFrames(void)
AppleUSBAudioStream::queueReads(void)
AppleUSBAudioStream::queueWrites(void)
AppleUSBAudioStream::readFrameList(uint)
AppleUSBAudioStream::readHandler(void *,void *,int,void *)
AppleUSBAudioStream::requestTerminate(IOService *,uint)
AppleUSBAudioStream::sampleRateHandler(void *,void *,int,IOUSBHostIsochronousFrame *)
AppleUSBAudioStream::setFormat(_IOAudioStreamFormat const*,_IOAudioStreamFormatExtension const*,OSDictionary *,bool)
AppleUSBAudioStream::setPacketSizeHistory(ushort)
AppleUSBAudioStream::startUSBStream(ulong long,uint)
AppleUSBAudioStream::stop(IOService *)
AppleUSBAudioStream::stopUSBStream(void)
AppleUSBAudioStream::takeTimeStamp(bool,ulong long *)
AppleUSBAudioStream::updateSampleOffsetAndLatency(void)
AppleUSBAudioStream::updateUSBFrameListInfo(AUAConfigurationDictionary *)
AppleUSBAudioStream::validateFormatChangeRequest(_IOAudioStreamFormat const*,_IOAudioSampleRate const*)
AppleUSBAudioStream::willTerminate(IOService *,uint)
AppleUSBAudioStream::writeFrameList(uint)
AppleUSBAudioStream::writeHandler(void *,void *,int,void *)
AppleUSBAudioStreamNode::start(IOService *)
AppleUSBCDCCompositeDevice::probe(IOService *,int *)
AppleUSBCDCCompositeDevice::setPreferredConfigProperty(void)
AppleUSBCDCControl::allocateResources(void)
AppleUSBCDCControl::close(IOService *,uint)
AppleUSBCDCControl::free(void)
AppleUSBCDCControl::init(OSDictionary *)
AppleUSBCDCControl::open(IOService *,uint,void *,void (*)(OSObject *,AppleUSBCDCControl*,void *,USBCDCNotification *))
AppleUSBCDCControl::openGated(IOService *,uint,void *,void *)
AppleUSBCDCControl::stop(IOService *)
AppleUSBCDCControl::willTerminate(IOService *,uint)
AppleUSBCableChangeEventSource::cableChangeEventSource(OSObject *,void (*)(OSObject *,IOInterruptEventSource *,int))
AppleUSBCableChangeEventSource::disable(void)
AppleUSBCableChangeEventSource::enable(void)
AppleUSBCableChangeEventSource::free(void)
AppleUSBCableChangeEventSource::init(OSObject *,void (*)(OSObject *,IOInterruptEventSource *,int),IOService *,int)
AppleUSBCableChangeEventSource::setWorkLoop(IOWorkLoop *)
AppleUSBCableChangeEventSource::usbCableTypeNotification(void *,IOService *)
AppleUSBCardReaderBlockStorageServices::doSynchronizeCache(void)
AppleUSBCommonDebug::TracepointParameter::TracepointParameter(char const*)
AppleUSBCommonDebug::getDebugLoggingMask(char const*)
AppleUSBCommonDebugBootArgs::AppleUSBCommonDebugBootArgs(void)
AppleUSBCommonDebugBootArgs::~AppleUSBCommonDebugBootArgs()
AppleUSBDescriptor::free(void)
AppleUSBDescriptor::initWithDescriptor(StandardUSB::Descriptor const*,ushort,uchar,ushort)
AppleUSBDescriptor::withDescriptor(StandardUSB::Descriptor const*,ushort,uchar,ushort)
AppleUSBDescriptorCache::descriptorCache(void)
AppleUSBDescriptorCache::free(void)
AppleUSBDescriptorCache::getDescriptor(uchar,ushort &,uchar,ushort)
AppleUSBDescriptorCache::init(void)
AppleUSBDescriptorCache::removeDescriptor(uchar,uchar,ushort)
AppleUSBDescriptorCache::setDescriptor(StandardUSB::Descriptor const*,ushort,uchar,ushort)
AppleUSBDeviceAudioController::AppendBytesToInterfaceDescriptor(IOBufferMemoryDescriptor *,void *,ushort)
AppleUSBDeviceAudioController::FindPipe(uchar,uchar)
AppleUSBDeviceAudioController::GetAudioDescriptors(void)
AppleUSBDeviceAudioController::GetClockSampleRate(void)
AppleUSBDeviceAudioController::GetInterfaceNumberForStreamInterface(IOService *)
AppleUSBDeviceAudioController::GetProviderType(IOService *)
AppleUSBDeviceAudioController::GetUSBStreamInterfaceWithNumber(uchar)
AppleUSBDeviceAudioController::MetaClass::alloc(void)
AppleUSBDeviceAudioController::addACInterfaceHeaderDescriptor_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addASEndpointDescriptor_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *,uchar,IOUSBDevicePipe *)
AppleUSBDeviceAudioController::addASInterfaceDescriptor_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *,uchar,uchar,uchar,USBAudioFormat const*)
AppleUSBDeviceAudioController::addClassSpecificDescriptorsAsControl(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addClassSpecificDescriptorsAsStreamingIN(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addClassSpecificDescriptorsAsStreamingOUT(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addClockSourceDescriptors_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addFormatTypeIDescriptor(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *,uchar,USBAudioFormat const*)
AppleUSBDeviceAudioController::addInputTerminalDescriptors_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::addOutputTerminalDescriptors_2_0(IOUSBDeviceInterface *,IOBufferMemoryDescriptor *)
AppleUSBDeviceAudioController::didTerminate(IOService *,uint,bool *)
AppleUSBDeviceAudioController::handleControlRequest(IOUSBDeviceSetupPacket *,int *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *)
AppleUSBDeviceAudioController::message(uint,IOService *,void *)
AppleUSBDeviceAudioController::probe(IOService *,int *)
AppleUSBDeviceAudioController::start(IOService *)
AppleUSBDeviceAudioController::stop(IOService *)
AppleUSBDeviceAudioDevice::GetInterfaceProtocolForStreamInterface(IOService *)
AppleUSBDeviceAudioDevice::message(uint,IOService *,void *)
AppleUSBDeviceAudioDevice::openControlInterface(IOService *)
AppleUSBDeviceAudioDevice::protectedInitHardware(IOService *)
AppleUSBDeviceAudioDevice::start(IOService *)
AppleUSBDeviceAudioNub::GetClockSetting(uchar,uchar,uchar,void *,ushort)
AppleUSBDeviceAudioNub::message(uint,IOService *,void *)
AppleUSBDeviceAudioNub::start(IOService *)
AppleUSBDeviceAudioNub::withAudioController(AppleUSBDeviceAudioController *)
AppleUSBDeviceMux::MetaClass::alloc(void)
AppleUSBDeviceMux::allocateUSBReadBuffers(void)
AppleUSBDeviceMux::allocateUSBWriteBuffers(void)
AppleUSBDeviceMux::asyncMbufWriteComplete(__mbuf *,int,uint)
AppleUSBDeviceMux::asyncReadComplete(__mbuf *,int,uint)
AppleUSBDeviceMux::asyncWriteComplete(USBWriteBuffer *,int,uint)
AppleUSBDeviceMux::bmsRelease(BulkUSBMuxSession *,char const*)
AppleUSBDeviceMux::bmsRelease(BulkUSBMuxSession *,char const*)
AppleUSBDeviceMux::bmsRetain(BulkUSBMuxSession *,char const*)
AppleUSBDeviceMux::bubSetSession(USBWriteBuffer *,BulkUSBMuxSession *)
AppleUSBDeviceMux::cleanupSession(BulkUSBMuxSession *)
AppleUSBDeviceMux::dumpUSBLogs(void)
AppleUSBDeviceMux::free(void)
AppleUSBDeviceMux::freeBufferList(USBWriteBuffer *)
AppleUSBDeviceMux::freeUSBBuffers(void)
AppleUSBDeviceMux::getUSBReadBuffer(__mbuf **,int)
AppleUSBDeviceMux::handleConnectResult(BulkUSBMuxSession *,int)
AppleUSBDeviceMux::handleMuxHostLogLevelInput(__mbuf *)
AppleUSBDeviceMux::handleMuxInput(__mbuf *)
AppleUSBDeviceMux::handleMuxTCPInput(__mbuf *)
AppleUSBDeviceMux::handleMuxVersionInput(__mbuf *)
AppleUSBDeviceMux::message(uint,IOService *,void *)
AppleUSBDeviceMux::muxLog(uchar,bool,char const*,...)
AppleUSBDeviceMux::muxLogLimited(uchar,bool,char const*,...)
AppleUSBDeviceMux::newSession(tcphdr *)
AppleUSBDeviceMux::recoverUSBReadBuffer(char *,uint,char *)
AppleUSBDeviceMux::reportStats(bool)
AppleUSBDeviceMux::resyncWithHost(void)
AppleUSBDeviceMux::sendMuxACK(BulkUSBMuxSession *)
AppleUSBDeviceMux::sendMuxRST(BulkUSBMuxSession *,bool,char const*,...)
AppleUSBDeviceMux::sendMuxSegment(BulkUSBMuxSession *)
AppleUSBDeviceMux::sessionUpcall(IOSocketEventSource *,__socket *,BulkUSBMuxSession *)
AppleUSBDeviceMux::setPropertiesGated(OSObject *)
AppleUSBDeviceMux::setTimeoutMS(uint)
AppleUSBDeviceMux::socketIsClosed(__socket *)
AppleUSBDeviceMux::start(IOService *)
AppleUSBDeviceMux::startUSBRead(void)
AppleUSBDeviceMux::startUSBWrite(USBWriteBuffer *,uint,bool)
AppleUSBDeviceMux::syncTimerFired(OSObject *,IOTimerEventSource *)
AppleUSBDeviceMux::timerFired(OSObject *,IOTimerEventSource *)
AppleUSBDeviceMux::vmuxLog(uchar,bool,char const*,char *)
AppleUSBDeviceMux::vsendMuxRST(tcphdr *,bool,char const*,char *)
AppleUSBDeviceMux::writeMbufToUSB(__mbuf *)
AppleUSBDeviceMux::writeMbufToUSB(__mbuf *,uint)
AppleUSBDeviceMux::writeToUSBPipe(USBWriteBuffer *)
AppleUSBDeviceNCMControl::close(IOService *,uint)
AppleUSBDeviceNCMControl::controlRequestCompletion(void *,int,ulong long,IOMemoryDescriptor *)
AppleUSBDeviceNCMControl::copyDescriptorCallbackFn(IOUSBDeviceInterface const*,uchar *,uint,int,int,int,int,void *)
AppleUSBDeviceNCMControl::free(void)
AppleUSBDeviceNCMControl::generateMacAddressFromEcid(uchar *,uchar,uchar)
AppleUSBDeviceNCMControl::handleControlRequest(IOUSBDeviceSetupPacket *,int *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *)
AppleUSBDeviceNCMControl::init(OSDictionary *)
AppleUSBDeviceNCMControl::message(uint,IOService *,void *)
AppleUSBDeviceNCMControl::messageGated(uint,IOService *,void *)
AppleUSBDeviceNCMControl::open(IOService *,uint,void (*)(OSObject *,AppleUSBDeviceNCMControl*,uchar))
AppleUSBDeviceNCMControl::reportLinkRate(uint,uint)
AppleUSBDeviceNCMControl::reportLinkState(int)
AppleUSBDeviceNCMControl::start(IOService *)
AppleUSBDeviceNCMControl::stop(IOService *)
AppleUSBDeviceNCMControl::writePipeGated(uchar *,int)
AppleUSBDeviceNCMData::bulkReadComplete(void *,int,uint)
AppleUSBDeviceNCMData::bulkReadCompleteGated(void *,int,uint)
AppleUSBDeviceNCMData::bulkWriteCompleteGated(void *,int,uint)
AppleUSBDeviceNCMData::commandCallback(AppleUSBDeviceNCMControl *,uchar)
AppleUSBDeviceNCMData::commandCallbackGated(AppleUSBDeviceNCMControl *,uchar)
AppleUSBDeviceNCMData::configureInterface(IONetworkInterface *)
AppleUSBDeviceNCMData::configureUSBRemoteWake(void)
AppleUSBDeviceNCMData::createInterface(void)
AppleUSBDeviceNCMData::createMediumDictionary(void)
AppleUSBDeviceNCMData::disable(IONetworkInterface *)
AppleUSBDeviceNCMData::enable(IONetworkInterface *)
AppleUSBDeviceNCMData::free(void)
AppleUSBDeviceNCMData::getInputPacketSizeMax(void)
AppleUSBDeviceNCMData::getPacketBufferConstraints(IOPacketBufferConstraints *)
AppleUSBDeviceNCMData::getPacketFilters(OSSymbol const*,uint *)
AppleUSBDeviceNCMData::getSelfNameBSDUnitNumber(void)
AppleUSBDeviceNCMData::handleLinkChange(void)
AppleUSBDeviceNCMData::handleLinkChangeGated(void)
AppleUSBDeviceNCMData::init(OSDictionary *)
AppleUSBDeviceNCMData::matchedBSDInterfaceNotifier(void *,IOService *,IONotifier *)
AppleUSBDeviceNCMData::message(uint,IOService *,void *)
AppleUSBDeviceNCMData::messageGated(uint,IOService *,void *)
AppleUSBDeviceNCMData::outputStart(IONetworkInterface *,uint)
AppleUSBDeviceNCMData::readBulkPipeGated(void)
AppleUSBDeviceNCMData::shouldSelfConfigureInterface(void)
AppleUSBDeviceNCMData::start(IOService *)
AppleUSBDeviceNCMData::stop(IOService *)
AppleUSBDeviceNCMData::submitPacketGated(uchar *,uint)
AppleUSBDeviceNCMData::updateLinkState(void)
AppleUSBDeviceNCMData::willTerminate(IOService *,uint)
AppleUSBDeviceNCMData::writeZLPGated(void)
AppleUSBECMControl::getInterfaceAssociationDescriptors(void)
AppleUSBECMControl::getPacketFilterGated(ushort *)
AppleUSBECMControl::pausePacketFilter(void)
AppleUSBECMControl::setMulticastFilter(IOEthernetAddress *,uint)
AppleUSBECMControl::setPacketFilter(ushort)
AppleUSBECMData::MetaClass::alloc(void)
AppleUSBECMData::allocRecords(void)
AppleUSBECMData::armRead(InputPipeRecord *)
AppleUSBECMData::configureData(void)
AppleUSBECMData::configureInterface(IONetworkInterface *)
AppleUSBECMData::createMediumTables(void)
AppleUSBECMData::enable(IONetworkInterface *)
AppleUSBECMData::flushDataTransfers(void)
AppleUSBECMData::free(void)
AppleUSBECMData::freeRecords(void)
AppleUSBECMData::getHardwareAddress(IOEthernetAddress *)
AppleUSBECMData::getMaxPacketSize(uint *)
AppleUSBECMData::init(OSDictionary *)
AppleUSBECMData::lockNetif(void)
AppleUSBECMData::newModelString(void)
AppleUSBECMData::notificationCallback(AppleUSBECMControl *,void *,USBCDCNotification *)
AppleUSBECMData::outputRecordAppendPackets(OutputPipeRecord *,__mbuf **,uint)
AppleUSBECMData::probe(IOService *,int *)
AppleUSBECMData::processTransfer(uchar *,uint)
AppleUSBECMData::registerWithPolicyMaker(IOService *)
AppleUSBECMData::returnOutputRecord(OutputPipeRecord *)
AppleUSBECMData::setDataAlternate(void)
AppleUSBECMData::setLinkStatusDown(void)
AppleUSBECMData::setLinkStatusUp(void)
AppleUSBECMData::setMulticastList(IOEthernetAddress *,uint)
AppleUSBECMData::setMulticastMode(bool)
AppleUSBECMData::setPromiscuousMode(bool)
AppleUSBECMData::setupDataTransfers(void)
AppleUSBECMData::stop(IOService *)
AppleUSBECMData::submitPacket(uchar *,uint)
AppleUSBECMData::transmitRecord(OutputPipeRecord *)
AppleUSBECMData::updateLinkSpeed(uint,uint)
AppleUSBECMData::updateLinkStatus(uchar)
AppleUSBECMData::willTerminate(IOService *,uint)
AppleUSBECMData::~AppleUSBECMData()
AppleUSBEthernetController::configureInterface(IONetworkInterface *)
AppleUSBEthernetController::free(void)
AppleUSBEthernetController::init(OSDictionary *)
AppleUSBEthernetController::newModelString(void)
AppleUSBEthernetController::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBEthernetController::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSBEthernetController::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSBEthernetController::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleUSBEthernetController::start(IOService *)
AppleUSBEthernetController::stop(IOService *)
AppleUSBEthernetController::willTerminate(IOService *,uint)
AppleUSBEthernetControllerAX88178::bulkWriteCompleteGated(void *,int,uint)
AppleUSBEthernetControllerAX88178::createMediumDictionary(void)
AppleUSBEthernetControllerAX88178::disable(IONetworkInterface *)
AppleUSBEthernetControllerAX88178::enable(IONetworkInterface *)
AppleUSBEthernetControllerAX88178::enableExtPhyAgere4(void)
AppleUSBEthernetControllerAX88178::enableExtPhyMarvell(void)
AppleUSBEthernetControllerAX88178::enableExtPhyRealtek(void)
AppleUSBEthernetControllerAX88178::enableExtPhyVitesse(void)
AppleUSBEthernetControllerAX88178::free(void)
AppleUSBEthernetControllerAX88178::getMsrForMediumType(uint,ushort *)
AppleUSBEthernetControllerAX88178::getPacketFilters(OSSymbol const*,uint *)
AppleUSBEthernetControllerAX88178::handleSelectMediumGated(IONetworkMedium const*)
AppleUSBEthernetControllerAX88178::init(OSDictionary *)
AppleUSBEthernetControllerAX88178::interruptReadComplete(void *,int,uint)
AppleUSBEthernetControllerAX88178::linkChangeThreadCall(void *,void *)
AppleUSBEthernetControllerAX88178::lockPhyRegisterGated(void)
AppleUSBEthernetControllerAX88178::outputStart(IONetworkInterface *,uint)
AppleUSBEthernetControllerAX88178::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleUSBEthernetControllerAX88178::prepareExtPhy(void)
AppleUSBEthernetControllerAX88178::prepareHwForNormalStop(void)
AppleUSBEthernetControllerAX88178::prepareHwForWakeOnLan(void)
AppleUSBEthernetControllerAX88178::probe(IOService *,int *)
AppleUSBEthernetControllerAX88178::probeExtPhy(void)
AppleUSBEthernetControllerAX88178::readBulkPipe(void)
AppleUSBEthernetControllerAX88178::readBulkPipeGated(void)
AppleUSBEthernetControllerAX88178::readInterruptPipe(void)
AppleUSBEthernetControllerAX88178::readInterruptPipeGated(void)
AppleUSBEthernetControllerAX88178::readPhyRegister(uchar,ushort *)
AppleUSBEthernetControllerAX88178::readPhyRegisterGated(uchar,ushort *)
AppleUSBEthernetControllerAX88178::readSROM(ushort *,ushort,ushort)
AppleUSBEthernetControllerAX88178::selectMedium(IONetworkMedium const*)
AppleUSBEthernetControllerAX88178::setMulticastMode(bool)
AppleUSBEthernetControllerAX88178::setPromiscuousMode(bool)
AppleUSBEthernetControllerAX88178::start(IOService *)
AppleUSBEthernetControllerAX88178::stop(IOService *)
AppleUSBEthernetControllerAX88178::teardownExtPhy(void)
AppleUSBEthernetControllerAX88178::unlockPhyRegisterGated(void)
AppleUSBEthernetControllerAX88178::willTerminate(IOService *,uint)
AppleUSBEthernetControllerAX88178::writePhyRegister(uchar,ushort)
AppleUSBEthernetControllerAX88178::writePhyRegisterGated(uchar,ushort)
AppleUSBEthernetControllerAX88772A::createMediumDictionary(void)
AppleUSBEthernetControllerAX88772A::disable(IONetworkInterface *)
AppleUSBEthernetControllerAX88772A::enable(IONetworkInterface *)
AppleUSBEthernetControllerAX88772A::handleSelectMediumGated(IONetworkMedium const*)
AppleUSBEthernetControllerAX88772A::interruptReadComplete(void *,int,uint)
AppleUSBEthernetControllerAX88772A::linkChangeThreadCall(void *,void *)
AppleUSBEthernetControllerAX88772A::linkChangeThreadCallGated(void)
AppleUSBEthernetControllerAX88772A::outputStart(IONetworkInterface *,uint)
AppleUSBEthernetControllerAX88772A::prepareHwForNormalStop(void)
AppleUSBEthernetControllerAX88772A::readBulkPipe(void)
AppleUSBEthernetControllerAX88772A::readBulkPipeGated(void)
AppleUSBEthernetControllerAX88772A::readInterruptPipe(void)
AppleUSBEthernetControllerAX88772A::readInterruptPipeGated(void)
AppleUSBEthernetControllerAX88772A::readPhyRegister(uchar,ushort *)
AppleUSBEthernetControllerAX88772A::readSROM(ushort *,ushort,ushort)
AppleUSBEthernetControllerAX88772A::selectMedium(IONetworkMedium const*)
AppleUSBEthernetControllerAX88772A::writePhyRegister(uchar,ushort)
AppleUSBEthernetControllerAX88::disable(IONetworkInterface *)
AppleUSBEthernetControllerAX88::enable(IONetworkInterface *)
AppleUSBEthernetControllerAX88::free(void)
AppleUSBEthernetControllerAX88::init(OSDictionary *)
AppleUSBEthernetControllerAX88::lockInterfaceStateGated(void)
AppleUSBEthernetControllerAX88::serializeStatistics(void *,OSSerialize *)
AppleUSBEthernetControllerAX88::setLinkStatusDown(void)
AppleUSBEthernetControllerAX88::start(IOService *)
AppleUSBEthernetControllerAX88::stop(IOService *)
AppleUSBEthernetControllerAX88::unlockInterfaceStateGated(void)
AppleUSBEthernetControllerAX88::validateInterfaceStateGated(AppleUSBEthernetControllerAX88::tInterfaceStates)
AppleUSBEthernetControllerAX88::vendorReadRequest(uchar,void *,uint)
AppleUSBEthernetControllerAX88::vendorWriteNoDataRequest(uchar,ushort,ushort)
AppleUSBEthernetControllerAX88::willTerminate(IOService *,uint)
AppleUSBEthernetDevice::bulkReadComplete(void *,int,uint)
AppleUSBEthernetDevice::bulkWriteComplete(void *,int,uint)
AppleUSBEthernetDevice::bulkWriteZlpComplete(void *,int,uint)
AppleUSBEthernetDevice::configureInterface(IONetworkInterface *)
AppleUSBEthernetDevice::disable(IONetworkInterface *)
AppleUSBEthernetDevice::enable(IONetworkInterface *)
AppleUSBEthernetDevice::message(uint,IOService *,void *)
AppleUSBEthernetDevice::restart_cmds(void)
AppleUSBEthernetDevice::sendLinkStatusToHost(void)
AppleUSBEthernetDevice::setProperties(OSObject *)
AppleUSBEthernetDevice::setPropertiesGated(OSObject *)
AppleUSBEthernetDevice::startBulkRead(void)
AppleUSBEthernetDevice::startBulkReadGated(void)
AppleUSBEthernetDevice::startBulkWriteZLP(void)
AppleUSBEthernetDevice::stop(IOService *)
AppleUSBEthernetDeviceCommand::initWithParameters(AppleUSBEthernetDeviceCommandPool *,IOBufferMemoryDescriptor *)
AppleUSBEthernetDeviceCommandPool::MetaClass::alloc(void)
AppleUSBEthernetDeviceCommandPool::getCommand(bool)
AppleUSBEthernetDeviceCommandPool::stop(void)
AppleUSBEthernetHost::bulkWriteComplete(void *,int,uint)
AppleUSBEthernetHost::configureInterface(IONetworkInterface *)
AppleUSBEthernetHost::createOutputQueue(void)
AppleUSBEthernetHost::didTerminate(IOService *,uint,bool *)
AppleUSBEthernetHost::disable(IONetworkInterface *)
AppleUSBEthernetHost::enable(IONetworkInterface *)
AppleUSBEthernetHost::free(void)
AppleUSBEthernetHost::freeResources(void)
AppleUSBEthernetHost::getHardwareAddress(IOEthernetAddress *)
AppleUSBEthernetHost::lockNetif(void)
AppleUSBEthernetHost::outputPacket(__mbuf *,void *)
AppleUSBEthernetHost::powerStateChangeOccurred(void)
AppleUSBEthernetHost::processTransfer(uchar *,uint)
AppleUSBEthernetHost::registerWithPolicyMaker(IOService *)
AppleUSBEthernetHost::setPowerState(ulong,IOService *)
AppleUSBEthernetHost::signalTransmitQueue(void)
AppleUSBEthernetHost::start(IOService *)
AppleUSBEthernetHost::startBulkReadGated(void)
AppleUSBEthernetHost::startTransmitQueue(void)
AppleUSBEthernetHost::stop(IOService *)
AppleUSBEthernetHost::stopTransmitQueue(void)
AppleUSBEthernetHost::willTerminate(IOService *,uint)
AppleUSBEthernetHostAQM::configureInterface(IONetworkInterface *)
AppleUSBEthernetHostAQM::outputStart(IONetworkInterface *,uint)
AppleUSBEthernetHostAQM::startTransmitQueue(void)
AppleUSBEthernetHostAQM::stopTransmitQueue(void)
AppleUSBHostBouncedDMACommand::clearMemoryDescriptor(bool)
AppleUSBHostBouncedDMACommand::complete(bool,bool)
AppleUSBHostBouncedDMACommand::free(void)
AppleUSBHostBouncedDMACommand::initWithSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
AppleUSBHostBouncedDMACommand::prepare(ulong long,ulong long,bool,bool)
AppleUSBHostBouncedDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool)
AppleUSBHostBouncedDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool,uint,ulong long)
AppleUSBHostBouncedDMACommand::withSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
AppleUSBHostBulkHIDDevice::free(void)
AppleUSBHostBulkHIDDevice::handleStart(IOService *)
AppleUSBHostBusCurrentAllocator::allocateBusCurrent(IOService *,uint &,uint &)
AppleUSBHostBusCurrentAllocator::free(void)
AppleUSBHostBusCurrentAllocator::initWithOwner(IOService *)
AppleUSBHostBusCurrentAllocator::initWithOwnerAndProvider(IOService *,AppleUSBHostController *)
AppleUSBHostBusCurrentAllocator::initWithOwnerAndProvider(IOService *,AppleUSBHostPort *)
AppleUSBHostBusCurrentAllocator::initWithOwnerAndProvider(IOService *,AppleUSBHostResources *)
AppleUSBHostBusCurrentAllocator::initWithOwnerAndProvider(IOService *,AppleUSBHub *)
AppleUSBHostBusCurrentAllocator::stop(void)
AppleUSBHostBusCurrentAllocator::withOwnerAndProvider(IOService *,AppleUSBHostController *)
AppleUSBHostBusCurrentAllocator::withOwnerAndProvider(IOService *,AppleUSBHostPort *)
AppleUSBHostBusCurrentAllocator::withOwnerAndProvider(IOService *,AppleUSBHub *)
AppleUSBHostBusCurrentClient::initWithClient(IOService *)
AppleUSBHostBusCurrentClient::withClient(IOService *)
AppleUSBHostBusCurrentPool::allocateBusCurrent(IOService *,uint &,uint &)
AppleUSBHostBusCurrentPool::free(void)
AppleUSBHostBusCurrentPool::initWithSizes(uint,uint)
AppleUSBHostBusCurrentPool::withSizes(uint,uint)
AppleUSBHostCompositeDevice::ConfigureDevice(void)
AppleUSBHostCompositeDevice::ReConfigureDevice(bool)
AppleUSBHostCompositeDevice::SetConfiguration(uchar,bool)
AppleUSBHostCompositeDevice::message(uint,IOService *,void *)
AppleUSBHostCompositeDevice::reconfigureThreadCall(void *,void *)
AppleUSBHostCompositeDevice::start(IOService *)
AppleUSBHostController::IOUSBControllerPowerFloorSession::IOUSBControllerPowerFloorSession(AppleUSBHostController*)
AppleUSBHostController::IOUSBControllerPowerFloorSession::startSession(ulong)
AppleUSBHostController::IOUSBControllerPowerFloorSession::~IOUSBControllerPowerFloorSession()
AppleUSBHostController::PMstop(void)
AppleUSBHostController::abortPipe(IOUSBHostPipe *,int,IOService *)
AppleUSBHostController::abortStream(IOUSBHostStream *,int)
AppleUSBHostController::adjustDeviceMaxExitLatency(IOUSBHostDevice *,uint)
AppleUSBHostController::adjustPipe(IOUSBHostPipe *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBHostController::allocateDownstreamBusCurrent(IOService *,uint &,uint &)
AppleUSBHostController::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &,int &)
AppleUSBHostController::clearPipeStall(IOUSBHostPipe *)
AppleUSBHostController::close(IOService *,uint)
AppleUSBHostController::close(IOService *,uint)
AppleUSBHostController::closeGated(IOService *,uint)
AppleUSBHostController::closePipe(IOUSBHostPipe *)
AppleUSBHostController::closeStream(IOUSBHostStream *)
AppleUSBHostController::controllerRegistered(void *,IOService *,IONotifier *)
AppleUSBHostController::controllerRegisteredGatedPhase1(void)
AppleUSBHostController::controllerRegisteredGatedPhase1(void)
AppleUSBHostController::controllerRegisteredGatedPhase2(void)
AppleUSBHostController::controllerRegisteredThreadCall(thread_call *)
AppleUSBHostController::createIOBuffer(uint,ulong long)
AppleUSBHostController::createPipe(IOUSBHostPipe::StandardUSBDescriptors &,IOUSBHostDevice *,IOUSBHostInterface *)
AppleUSBHostController::createStream(IOUSBHostDevice *,IOUSBHostPipe *,uint)
AppleUSBHostController::didTerminate(IOService *,uint,bool *)
AppleUSBHostController::didTerminateThreadCall(AppleUSBHostController::tControllerDidTerminateArguments *)
AppleUSBHostController::didTerminateThreadCallGated(IOService *,uint)
AppleUSBHostController::disablePacketFilter(void)
AppleUSBHostController::disableStreams(IOUSBHostPipe *)
AppleUSBHostController::enablePacketFilter(void (*)(AppleUSBHostController*,AppleUSBHostRequest *),void (*)(AppleUSBHostController*,AppleUSBHostRequest *))
AppleUSBHostController::enableStreams(IOUSBHostPipe *)
AppleUSBHostController::filterPacket(AppleUSBHostRequest *,int,tAppleUSBHostControllerFilterRequest)
AppleUSBHostController::forcePower(ulong,uint)
AppleUSBHostController::forcePowerGated(ulong,uint)
AppleUSBHostController::free(void)
AppleUSBHostController::generateBusNumber(uchar &)
AppleUSBHostController::getCompanionController(uint,uchar)
AppleUSBHostController::getCompanionControllerGated(uint,uchar,AppleUSBHostController*&)
AppleUSBHostController::getFrameNumber(ulong long *)
AppleUSBHostController::getFrameRollover(ulong long *)
AppleUSBHostController::getLPMExitLatency(uint,tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSBHostController::getNvramOptions(void)
AppleUSBHostController::handleClose(IOService *,uint)
AppleUSBHostController::handleIsOpen(IOService const*)
AppleUSBHostController::handleOpen(IOService *,uint,void *)
AppleUSBHostController::hardwareException(uint)
AppleUSBHostController::hardwareExceptionThreadCall(uint)
AppleUSBHostController::hardwareExceptionThreadCallGated(uint)
AppleUSBHostController::init(OSDictionary *)
AppleUSBHostController::io(AppleUSBHostRequest *)
AppleUSBHostController::lowerOnePowerStateTo(ulong)
AppleUSBHostController::matchPropertyTable(OSDictionary *,int *)
AppleUSBHostController::maxCapabilityForDomainState(ulong)
AppleUSBHostController::message(uint,IOService *,void *)
AppleUSBHostController::open(IOService *,uint,void *)
AppleUSBHostController::openGated(IOService *,uint,void *)
AppleUSBHostController::pmStopThreadCall(thread_call *)
AppleUSBHostController::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBHostController::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSBHostController::raiseOnePowerStateTo(ulong)
AppleUSBHostController::registerHub(IOUSBHostDevice *,StandardUSB::HubDescriptor const*,tRegisterHubFlags)
AppleUSBHostController::registerHub(IOUSBHostDevice *,StandardUSB::SuperSpeedHubDescriptor const*)
AppleUSBHostController::registerService(uint)
AppleUSBHostController::releaseAddressLock(void)
AppleUSBHostController::releaseAddressLock(void)
AppleUSBHostController::resumePipes(IOUSBHostDevice *)
AppleUSBHostController::serializeStatistics(void *,OSSerialize *)
AppleUSBHostController::serializeStatisticsGated(OSDictionary *,OSSerialize *)
AppleUSBHostController::setPowerFloor(ulong)
AppleUSBHostController::setPowerFloorGated(ulong)
AppleUSBHostController::setPowerFloorGated(ulong)
AppleUSBHostController::setPowerState(ulong,IOService *)
AppleUSBHostController::setPowerStateGated(ulong,IOService *)
AppleUSBHostController::setProperties(OSObject *)
AppleUSBHostController::start(IOService *)
AppleUSBHostController::stop(IOService *)
AppleUSBHostController::stop(IOService *)
AppleUSBHostController::stopThreadCall(thread_call *)
AppleUSBHostController::stopThreadCallCompleteGated(void)
AppleUSBHostController::stopThreadCallGated(void)
AppleUSBHostController::suspendPipes(IOUSBHostDevice *)
AppleUSBHostController::systemWillShutdown(uint)
AppleUSBHostController::terminate(uint)
AppleUSBHostController::tryAddressLock(void)
AppleUSBHostController::unregisterHub(IOUSBHostDevice *)
AppleUSBHostController::updatePowerStatistics(void)
AppleUSBHostDARTDMACommand::clearMemoryDescriptor(bool)
AppleUSBHostDARTDMACommand::createCopyBuffer(uint,ulong long)
AppleUSBHostDARTDMACommand::initWithSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uint,uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
AppleUSBHostDARTDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool,uint,ulong long)
AppleUSBHostDARTDMACommand::withSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uint,uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
AppleUSBHostDMABufferMemoryDescriptor::free(void)
AppleUSBHostDMABufferMemoryDescriptor::getPhysicalSegment(ulong long,ulong long *,uint)
AppleUSBHostDMABufferMemoryDescriptor::inTaskWithOptions(task *,uint,ulong,ulong,uint,IOMapper *)
AppleUSBHostDMABufferMemoryDescriptor::initInTaskWithOptions(task *,uint,ulong,ulong,uint,IOMapper *)
AppleUSBHostDMABufferMemoryDescriptor::taggedRelease(void const*)
AppleUSBHostDMACommand::clearMemoryDescriptor(bool)
AppleUSBHostDMACommand::complete(bool,bool)
AppleUSBHostDMACommand::initWithSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
AppleUSBHostDMACommand::prepare(ulong long,ulong long,bool,bool)
AppleUSBHostDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool)
AppleUSBHostDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool,uint,ulong long)
AppleUSBHostDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool,uint,ulong long,AppleUSBHostRequest *)
AppleUSBHostDMACommandPool::free(void)
AppleUSBHostDMACommandPool::getCommand(uint,uint)
AppleUSBHostDMACommandPool::initWithSpecification(IOWorkLoop *,bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uint,uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,uint,IOMapper *)
AppleUSBHostDMACommandPool::returnCommand(IODMACommand *)
AppleUSBHostDMACommandPool::withSpecification(IOWorkLoop *,bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uint,uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,uint,IOMapper *)
AppleUSBHostDeviceIdler::disable(void)
AppleUSBHostDeviceIdler::enable(void)
AppleUSBHostDeviceIdler::free(void)
AppleUSBHostDeviceIdler::initWithDeviceAndWorkLoop(IOUSBHostDevice *,IOWorkLoop *)
AppleUSBHostDeviceIdler::removeObject(OSMetaClassBase const*)
AppleUSBHostDeviceIdler::removeObjectGated(OSMetaClassBase const*)
AppleUSBHostDeviceIdler::setObject(OSMetaClassBase const*)
AppleUSBHostDeviceIdler::setObjectGated(OSMetaClassBase const*)
AppleUSBHostDeviceIdler::tickle(void)
AppleUSBHostDeviceIdler::timerCompletion(IOTimerEventSource *)
AppleUSBHostDeviceIdler::updateIdlePolicy(uint)
AppleUSBHostDeviceIdler::updateIdlePolicyGated(uint)
AppleUSBHostDeviceIdler::withDeviceAndWorkLoop(IOUSBHostDevice *,IOWorkLoop *)
AppleUSBHostDeviceUserClient::AbortPipeZero(void)
AppleUSBHostDeviceUserClient::CreateInterfaceIterator(IOUSBFindInterfaceRequest *,ulong long *)
AppleUSBHostDeviceUserClient::GetConfiguration(ulong long *)
AppleUSBHostDeviceUserClient::GetDeviceInformation(ulong long *)
AppleUSBHostDeviceUserClient::GetExtraPowerAllocated(uint,ulong long *)
AppleUSBHostDeviceUserClient::ReEnumerateDevice(uint)
AppleUSBHostDeviceUserClient::RequestExtraPower(uint,uint,ulong long *)
AppleUSBHostDeviceUserClient::ResetDevice(void)
AppleUSBHostDeviceUserClient::ResetDeviceGated(void)
AppleUSBHostDeviceUserClient::ReturnExtraPower(uint,uint)
AppleUSBHostDeviceUserClient::SetConfiguration(uchar,bool)
AppleUSBHostDeviceUserClient::SuspendDevice(bool)
AppleUSBHostDeviceUserClient::_AbortPipeZero(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_CreateInterfaceIterator(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_GetConfiguration(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_GetDeviceInformation(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_GetExtraPowerAllocated(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_ReEnumerateDevice(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_RequestExtraPower(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_ResetDevice(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_ReturnExtraPower(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_SetConfiguration(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::_SuspendDevice(AppleUSBHostDeviceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleUSBHostDeviceUserClient::internalControlRequest(uchar,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint &,uint)
AppleUSBHostDeviceUserClient::message(uint,IOService *,void *)
AppleUSBHostDeviceUserClient::simulateResetCompletionThreadCall(thread_call *)
AppleUSBHostDeviceUserClient::start(IOService *)
AppleUSBHostFrameworkClient::_abortDeviceRequests(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_closeWithOptions(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_createIOBuffer(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_destroyIOBuffer(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_deviceRequest(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_getAddress(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_getDescriptor(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_getFrameNumber(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_getSpeed(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::_openWithOptions(AppleUSBHostFrameworkClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkClient::close(IOService *,uint)
AppleUSBHostFrameworkClient::closeGated(IOService *,uint)
AppleUSBHostFrameworkClient::copyDataMemoryDescriptor(ulong long,ulong long,uint)
AppleUSBHostFrameworkClient::createIOBuffer(ulong long)
AppleUSBHostFrameworkClient::destroyIOBuffer(ulong long)
AppleUSBHostFrameworkClient::free(void)
AppleUSBHostFrameworkClient::initWithTask(task *,void *,uint)
AppleUSBHostFrameworkClient::open(IOService *,uint,int *)
AppleUSBHostFrameworkClient::openGated(IOService *,uint)
AppleUSBHostFrameworkClient::requestCompletion(AppleUSBHostFrameworkClient::AppleUSBHostFrameworkClientAsyncParamBlock *,int,uint)
AppleUSBHostFrameworkClient::start(IOService *)
AppleUSBHostFrameworkClient::stop(IOService *)
AppleUSBHostFrameworkClient::terminate(uint)
AppleUSBHostFrameworkDeviceClient::_allocateDownstreamBusCurrent(AppleUSBHostFrameworkDeviceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkDeviceClient::_reset(AppleUSBHostFrameworkDeviceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkDeviceClient::_setConfiguration(AppleUSBHostFrameworkDeviceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkDeviceClient::abortDeviceRequests(uint)
AppleUSBHostFrameworkDeviceClient::allocateDownstreamBusCurrent(uint &,uint &)
AppleUSBHostFrameworkDeviceClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
AppleUSBHostFrameworkDeviceClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
AppleUSBHostFrameworkDeviceClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleUSBHostFrameworkDeviceClient::getAddress(void)
AppleUSBHostFrameworkDeviceClient::getDescriptor(uchar,ushort &,uchar,ushort,tDeviceRequestType,tDeviceRequestRecipient)
AppleUSBHostFrameworkDeviceClient::getFrameNumber(ulong long *)
AppleUSBHostFrameworkDeviceClient::getSpeed(void)
AppleUSBHostFrameworkDeviceClient::open(IOService *,uint,int *)
AppleUSBHostFrameworkDeviceClient::reset(void)
AppleUSBHostFrameworkDeviceClient::setConfiguration(uchar,bool)
AppleUSBHostFrameworkDeviceClient::start(IOService *)
AppleUSBHostFrameworkInterfaceClient::_getIdlePolicy(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeAbort(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeAdjustPipe(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeClearStall(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeControlRequest(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeEnableStreams(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeGetDescriptors(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeGetIdlePolicy(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeIO(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeIOIsoch(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostPipeSetIdlePolicy(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostStreamAbort(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_hostStreamIO(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_selectAlternateSetting(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::_setIdlePolicy(AppleUSBHostFrameworkInterfaceClient*,void *,IOExternalMethodArguments *)
AppleUSBHostFrameworkInterfaceClient::closeGated(IOService *,uint)
AppleUSBHostFrameworkInterfaceClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
AppleUSBHostFrameworkInterfaceClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
AppleUSBHostFrameworkInterfaceClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleUSBHostFrameworkInterfaceClient::free(void)
AppleUSBHostFrameworkInterfaceClient::getAddress(void)
AppleUSBHostFrameworkInterfaceClient::getDescriptor(uchar,ushort &,uchar,ushort,tDeviceRequestType,tDeviceRequestRecipient)
AppleUSBHostFrameworkInterfaceClient::getFrameNumber(ulong long *)
AppleUSBHostFrameworkInterfaceClient::getIdlePolicy(void)
AppleUSBHostFrameworkInterfaceClient::getSpeed(void)
AppleUSBHostFrameworkInterfaceClient::hostPipeAbort(uchar,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeAdjustPipe(uchar,IOUSBHostPipe::StandardUSBDescriptors *)
AppleUSBHostFrameworkInterfaceClient::hostPipeClearStall(uchar)
AppleUSBHostFrameworkInterfaceClient::hostPipeControlRequest(uchar,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeControlRequest(uchar,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeCopyStream(uchar,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeDisableStreams(uchar)
AppleUSBHostFrameworkInterfaceClient::hostPipeEnableStreams(uchar)
AppleUSBHostFrameworkInterfaceClient::hostPipeGetDescriptors(uchar,IOUSBHostPipe::StandardUSBDescriptors *,IOUSBHostPipe::tGetEndpointDescriptorOptions)
AppleUSBHostFrameworkInterfaceClient::hostPipeGetIdlePolicy(uchar)
AppleUSBHostFrameworkInterfaceClient::hostPipeIO(uchar,IOMemoryDescriptor *,IOUSBHostIsochronousFrame *,uint,ulong long,IOUSBHostIsochronousCompletion *)
AppleUSBHostFrameworkInterfaceClient::hostPipeIO(uchar,IOMemoryDescriptor *,IOUSBHostIsochronousTransaction *,uint,ulong long,uint,IOUSBHostIsochronousTransactionCompletion *)
AppleUSBHostFrameworkInterfaceClient::hostPipeIO(uchar,IOMemoryDescriptor *,uint,IOUSBHostCompletion *,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeIO(uchar,IOMemoryDescriptor *,uint,uint &,uint)
AppleUSBHostFrameworkInterfaceClient::hostPipeSetIdlePolicy(uchar,uint)
AppleUSBHostFrameworkInterfaceClient::hostStreamAbort(uchar,uint,uint)
AppleUSBHostFrameworkInterfaceClient::hostStreamIO(uchar,uint,IOMemoryDescriptor *,uint,IOUSBHostCompletion *)
AppleUSBHostFrameworkInterfaceClient::hostStreamIO(uchar,uint,IOMemoryDescriptor *,uint,uint &)
AppleUSBHostFrameworkInterfaceClient::isochronousCompletion(AppleUSBHostFrameworkInterfaceClient::AppleUSBHostFrameworkInterfaceClientIsochAsyncParameter *,int,IOUSBHostIsochronousFrame *)
AppleUSBHostFrameworkInterfaceClient::selectAlternateSetting(uchar)
AppleUSBHostFrameworkInterfaceClient::setIdlePolicy(uint)
AppleUSBHostFrameworkInterfaceClient::start(IOService *)
AppleUSBHostIORequestPool::withWorkLoop(IOWorkLoop *)
AppleUSBHostInterfaceUserClient::AbortPipe(uchar,uint)
AppleUSBHostInterfaceUserClient::ClearPipeStall(uchar,bool)
AppleUSBHostInterfaceUserClient::CreateIOBuffer(uint,ulong long,ulong long &)
AppleUSBHostInterfaceUserClient::CreateStreams(uchar,uint)
AppleUSBHostInterfaceUserClient::DestroyIOBuffer(ulong long)
AppleUSBHostInterfaceUserClient::GetConfiguredStreams(uchar,ulong long *)
AppleUSBHostInterfaceUserClient::GetDevice(ulong long *)
AppleUSBHostInterfaceUserClient::GetEndpointProperties(uchar,uchar,uchar,ulong long *,ulong long *,ulong long *)
AppleUSBHostInterfaceUserClient::GetEndpointPropertiesV3(uchar,uchar,uchar,uchar,IOUSBEndpointProperties *,uint *)
AppleUSBHostInterfaceUserClient::GetPipeProperties(uchar,ulong long *,ulong long *,ulong long *,ulong long *,ulong long *)
AppleUSBHostInterfaceUserClient::GetPipePropertiesV2(uchar,ulong long *,ulong long *,ulong long *,ulong long *,ulong long *,ulong long *,ulong long *,ulong long *)
AppleUSBHostInterfaceUserClient::GetPipePropertiesV3(uchar,uchar,IOUSBEndpointProperties *,uint *)
AppleUSBHostInterfaceUserClient::GetPipeStatus(uchar)
AppleUSBHostInterfaceUserClient::OverrideIdlePolicy(uchar,bool,uint)
AppleUSBHostInterfaceUserClient::RegisterDriver(void)
AppleUSBHostInterfaceUserClient::SetAlternateInterface(uchar)
AppleUSBHostInterfaceUserClient::SetDeviceIdlePolicy(uint)
AppleUSBHostInterfaceUserClient::SetIdlePolicy(uint,uint)
AppleUSBHostInterfaceUserClient::SetPipeIdlePolicy(uchar,uint)
AppleUSBHostInterfaceUserClient::SetPipePolicy(uchar,ushort,uchar)
AppleUSBHostInterfaceUserClient::_AbortPipe(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_ClearPipeStall(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_CreateIOBuffer(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_DestroyIOBuffer(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetDevice(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetEndpointProperties(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetEndpointPropertiesV3(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetPipeProperties(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetPipePropertiesV2(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetPipePropertiesV3(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_GetPipeStatus(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_OverrideIdlePolicy(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_PipeIO(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_PipeIOIsoch(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_PipeIOLowLatencyIsoch(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_RegisterDriver(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_SetAlternateInterface(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_SetDeviceIdlePolicy(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_SetIdlePolicy(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_SetPipeIdlePolicy(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_SetPipePolicy(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_createStreams(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::_supportsStreams(AppleUSBHostInterfaceUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostInterfaceUserClient::closeGated(IOService *,uint)
AppleUSBHostInterfaceUserClient::copyMemoryDescriptorFromArguments(IOExternalMethodArguments *,ulong long,ulong long,uint)
AppleUSBHostInterfaceUserClient::copyPipe(uchar)
AppleUSBHostInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
AppleUSBHostInterfaceUserClient::free(void)
AppleUSBHostInterfaceUserClient::initWithTask(task *,void *,uint)
AppleUSBHostInterfaceUserClient::internalControlRequest(uchar,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint &,uint)
AppleUSBHostInterfaceUserClient::io(uchar,IOUSBHostIsochronousFrame *,ulong long,uint,IOMemoryDescriptor *,IOUSBHostIsochronousCompletion *)
AppleUSBHostInterfaceUserClient::io(uchar,uint,uint,uint,IOMemoryDescriptor *,uint *,IOUSBHostCompletion *)
AppleUSBHostInterfaceUserClient::isochronousRequestCompletion(IOUSBHostInterfaceUserClientISOAsyncParamBlock *,int,IOUSBHostIsochronousFrame *)
AppleUSBHostInterfaceUserClient::isochronousRequestCompletion(IOUSBHostInterfaceUserClientISOAsyncParamBlock *,int,IOUSBHostIsochronousFrame *)
AppleUSBHostInterfaceUserClient::message(uint,IOService *,void *)
AppleUSBHostInterfaceUserClient::requestCompletion(AppleUSBHostUserClientAsyncParamBlock *,int,uint)
AppleUSBHostInterfaceUserClient::start(IOService *)
AppleUSBHostInterfaceUserClient::stop(IOService *)
AppleUSBHostLegacyClient::abortDeviceRequests(void)
AppleUSBHostLegacyClient::attach(IOService *)
AppleUSBHostLegacyClient::close(IOService *,uint)
AppleUSBHostLegacyClient::closeGated(IOService *,uint)
AppleUSBHostLegacyClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
AppleUSBHostLegacyClient::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
AppleUSBHostLegacyClient::deviceRequest(StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *,uint)
AppleUSBHostLegacyClient::deviceRequest(StandardUSB::DeviceRequest &,void *,uint &,uint)
AppleUSBHostLegacyClient::free(void)
AppleUSBHostLegacyClient::idlePolicy(bool)
AppleUSBHostLegacyClient::legacyDeviceInterestNotifier(void *,uint,IOService *,void *,ulong)
AppleUSBHostLegacyClient::open(IOService *,uint,void *)
AppleUSBHostLegacyClient::openGated(IOService *,uint,void *)
AppleUSBHostLegacyClient::setPowerState(ulong,IOService *)
AppleUSBHostLegacyClient::start(IOService *)
AppleUSBHostLegacyClient::stop(IOService *)
AppleUSBHostMergeProperties::MergeDictionaryIntoDictionary(OSDictionary *,OSDictionary *)
AppleUSBHostMergeProperties::MergeDictionaryIntoProvider(IOService *,OSDictionary *)
AppleUSBHostMergeProperties::probe(IOService *,int *)
AppleUSBHostPacketFilter::start(IOService *)
AppleUSBHostPort::IOUSBPortPowerFloorSession::IOUSBPortPowerFloorSession(AppleUSBHostPort*)
AppleUSBHostPort::IOUSBPortPowerFloorSession::removeSession(void)
AppleUSBHostPort::IOUSBPortPowerFloorSession::startSession(ulong)
AppleUSBHostPort::IOUSBPortPowerFloorSession::stopSession(void)
AppleUSBHostPort::IOUSBPortPowerFloorSession::~IOUSBPortPowerFloorSession()
AppleUSBHostPort::acquireAddressLock(void)
AppleUSBHostPort::allocateDownstreamBusCurrent(IOService *,uint &,uint &)
AppleUSBHostPort::cableChangeOccurred(IOTimerEventSource *)
AppleUSBHostPort::clearPipeStall(IOUSBHostPipe *)
AppleUSBHostPort::close(IOService *,uint)
AppleUSBHostPort::close(IOService *,uint)
AppleUSBHostPort::closeGated(IOService *,uint)
AppleUSBHostPort::createDevice(uint)
AppleUSBHostPort::didTerminate(IOService *,uint,bool *)
AppleUSBHostPort::didTerminateThreadCall(AppleUSBHostPort::tPortTerminateArguments *)
AppleUSBHostPort::didTerminateThreadCallGated(IOService *,uint)
AppleUSBHostPort::disconnect(AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSBHostPort::enumerateDeviceComplete(IOUSBHostDevice *,int)
AppleUSBHostPort::forcePower(AppleUSBHostPort::tPowerState,uint)
AppleUSBHostPort::forcePowerGated(AppleUSBHostPort::tPowerState,uint)
AppleUSBHostPort::free(void)
AppleUSBHostPort::fullDisconnect(AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSBHostPort::getCompanionPort(uint)
AppleUSBHostPort::getCompanionPortGated(uint,AppleUSBHostPort*&)
AppleUSBHostPort::getLPMExitLatency(tUSBLinkState,tUSBLPMExitLatency,uint &)
AppleUSBHostPort::getPortStatus(void)
AppleUSBHostPort::handleClose(IOService *,uint)
AppleUSBHostPort::handleIsOpen(IOService const*)
AppleUSBHostPort::handleOpen(IOService *,uint,void *)
AppleUSBHostPort::init(IORegistryEntry *,IORegistryPlane const*)
AppleUSBHostPort::init(OSDictionary *)
AppleUSBHostPort::initBusCurrent(void)
AppleUSBHostPort::interruptOccurred(IOInterruptEventSource *,int)
AppleUSBHostPort::message(uint,IOService *,void *)
AppleUSBHostPort::open(IOService *,uint,void *)
AppleUSBHostPort::openGated(IOService *,uint,void *)
AppleUSBHostPort::overCurrentTimeoutOccurred(IOTimerEventSource *)
AppleUSBHostPort::portMonitorTimeout(IOTimerEventSource *)
AppleUSBHostPort::portRegistered(void *,IOService *,IONotifier *)
AppleUSBHostPort::portsCreatedMessageGated(void)
AppleUSBHostPort::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBHostPort::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSBHostPort::powerStateLockLock(AppleUSBHostPort::tPowerStateLockReason)
AppleUSBHostPort::powerStateLockUnlock(void)
AppleUSBHostPort::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSBHostPort::powerStateWillChangeToGated(ulong,ulong,IOService *)
AppleUSBHostPort::registerCompanionPort(AppleUSBHostPort*,uint)
AppleUSBHostPort::registerCompanionPortGated(AppleUSBHostPort*,uint)
AppleUSBHostPort::registerCompanionPortGated(AppleUSBHostPort*,uint)
AppleUSBHostPort::releaseAddressLock(void)
AppleUSBHostPort::remoteWake(void)
AppleUSBHostPort::reset(AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSBHostPort::reset(uint,AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSBHostPort::serializePortStatus(void *,OSSerialize *)
AppleUSBHostPort::serializeStatistics(void *,OSSerialize *)
AppleUSBHostPort::serializeStatisticsGated(OSDictionary *,OSSerialize *)
AppleUSBHostPort::setDeferredInterrupt(bool)
AppleUSBHostPort::setPortLocation(uint)
AppleUSBHostPort::setPowerFloor(ulong)
AppleUSBHostPort::setPowerFloorGated(ulong)
AppleUSBHostPort::setPowerState(ulong,IOService *)
AppleUSBHostPort::setPowerStateGated(ulong,IOService *)
AppleUSBHostPort::setPowerStateGated(ulong,IOService *)
AppleUSBHostPort::setProperties(OSObject *)
AppleUSBHostPort::signalInterrupt(uint)
AppleUSBHostPort::start(IOService *)
AppleUSBHostPort::stop(IOService *)
AppleUSBHostPort::stop(IOService *)
AppleUSBHostPort::stopThreadCall(thread_call *)
AppleUSBHostPort::stopThreadCallCompleteGated(void)
AppleUSBHostPort::stopThreadCallGated(void)
AppleUSBHostPort::systemWillShutdown(uint)
AppleUSBHostPort::terminateDevice(IOUSBHostDevice *,AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
AppleUSBHostPort::terminateService(IOService *)
AppleUSBHostPort::terminateService(IOService *)
AppleUSBHostPort::unregisterCompanionPort(AppleUSBHostPort*,uint)
AppleUSBHostPort::unregisterCompanionPortGated(AppleUSBHostPort*,uint)
AppleUSBHostPort::updateLPMPolicy(tUSBLinkState,AppleUSBHostPort::tPortLPMPolicy,uint)
AppleUSBHostPort::updatePowerStatistics(void)
AppleUSBHostPort::willTerminate(IOService *,uint)
AppleUSBHostPort::willTerminateThreadCall(AppleUSBHostPort::tPortTerminateArguments *)
AppleUSBHostPort::willTerminateThreadCallCompleteGated(void)
AppleUSBHostPort::willTerminateThreadCallGated(IOService *,uint)
AppleUSBHostPortInterruptEventSource::checkForWork(void)
AppleUSBHostPortInterruptEventSource::disable(bool)
AppleUSBHostPortInterruptEventSource::disable(void)
AppleUSBHostPortInterruptEventSource::enable(void)
AppleUSBHostPortInterruptEventSource::free(void)
AppleUSBHostPortInterruptEventSource::initWithPort(AppleUSBHostPort *,void (*)(OSObject *,IOInterruptEventSource *,int))
AppleUSBHostPortInterruptEventSource::interruptEventSource(AppleUSBHostPort *,void (*)(OSObject *,IOInterruptEventSource *,int))
AppleUSBHostPortInterruptEventSource::setWorkLoop(IOWorkLoop *)
AppleUSBHostRequest::cancel(void)
AppleUSBHostRequest::complete(void)
AppleUSBHostRequest::getDevice(void)
AppleUSBHostRequest::getIOSource(void)
AppleUSBHostRequest::getPipe(void)
AppleUSBHostRequest::setNextRequest(AppleUSBRequest *)
AppleUSBHostRequestCompleter::checkForIOSourceWork(IOUSBHostIOSource *)
AppleUSBHostRequestCompleter::clearPipeStallThreadCall(IOUSBHostPipe *,thread_call *)
AppleUSBHostRequestCompleter::enqueueRequest(AppleUSBRequest *)
AppleUSBHostRequestCompleter::enqueueRequest(AppleUSBRequest *)
AppleUSBHostResources::MetaClass::alloc(void)
AppleUSBHostResources::allocateDownstreamBusCurrent(IOService *,uint &,uint &)
AppleUSBHostResources::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSBHostResources::close(IOService *,uint)
AppleUSBHostResources::closeGated(IOService *,uint)
AppleUSBHostResources::free(void)
AppleUSBHostResources::matchPropertyTable(OSDictionary *,int *)
AppleUSBHostResources::open(IOService *,uint,void *)
AppleUSBHostResources::openGated(IOService *,uint,void *)
AppleUSBHostResources::registerUSBHostService(AppleUSBHostController *,OSArray *,uint)
AppleUSBHostResources::registerUSBHostServiceGated(AppleUSBHostController *,OSArray *,uint)
AppleUSBHostResources::registerUSBHostServiceThreadCall(void *,void *)
AppleUSBHostResources::releaseBusNumber(AppleUSBHostController *)
AppleUSBHostResources::releaseBusNumberGated(AppleUSBHostController *)
AppleUSBHostResources::reserveBusNumber(AppleUSBHostController *,uchar &)
AppleUSBHostResources::reserveBusNumberGated(AppleUSBHostController *,uchar &)
AppleUSBHostResources::start(IOService *)
AppleUSBHostResources::stop(IOService *)
AppleUSBHostResources::usbHostResourcesRegistered(void *,IOService *,IONotifier *)
AppleUSBHostResources::~AppleUSBHostResources()
AppleUSBHostResourcesBusPowerClient::free(void)
AppleUSBHostResourcesBusPowerClient::initWithClient(IOService *)
AppleUSBHostResourcesBusPowerClient::withClient(IOService *)
AppleUSBHostResourcesClient::start(IOService *)
AppleUSBHostResourcesClient::terminate(uint)
AppleUSBHostResourcesClient::usbServiceCallback(AppleUSBHostController *,OSArray *,uint)
AppleUSBHostResourcesTypeC::MetaClass::alloc(void)
AppleUSBHostResourcesTypeC::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSBHostResourcesTypeC::free(void)
AppleUSBHostResourcesTypeC::probe(IOService *,int *)
AppleUSBHostResourcesTypeC::smcPowerRequest(uint &,uint,AppleUSBHostResourcesTypeC::tPortRequestPowerType)
AppleUSBHostResourcesTypeC::smcSystemStateCallback(OSSymbol const*,OSArray *,ulong)
AppleUSBHostResourcesTypeC::start(IOService *)
AppleUSBHostResourcesTypeC::stop(IOService *)
AppleUSBHostResourcesTypeC::~AppleUSBHostResourcesTypeC()
AppleUSBHostUserClient::ControlRequest(uchar,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint &,uint)
AppleUSBHostUserClient::GetConfigDescriptor(uchar,IOMemoryDescriptor *,uint *)
AppleUSBHostUserClient::GetConfigDescriptor(uchar,IOUSBConfigurationDescriptor *,uint *)
AppleUSBHostUserClient::GetFrameNumber(IOUSBGetFrameStruct *,uint *)
AppleUSBHostUserClient::GetFrameNumberWithTime(IOUSBGetFrameStruct *,uint *)
AppleUSBHostUserClient::GetMicroFrameNumber(IOUSBGetFrameStruct *,uint *)
AppleUSBHostUserClient::_ControlRequest(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_GetConfigDescriptor(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_GetFrameNumber(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_GetFrameNumberWithTime(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_GetMicroFrameNumber(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_open(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::_setAsyncPort(AppleUSBHostUserClient*,void *,IOExternalMethodArguments *)
AppleUSBHostUserClient::close(IOService *,uint)
AppleUSBHostUserClient::closeGated(IOService *,uint)
AppleUSBHostUserClient::copyMemoryDescriptorFromArguments(IOExternalMethodArguments *,ulong long,ulong long,uint)
AppleUSBHostUserClient::free(void)
AppleUSBHostUserClient::initWithTask(task *,void *,uint)
AppleUSBHostUserClient::isAuthorized(void)
AppleUSBHostUserClient::open(IOService *,uint,void *)
AppleUSBHostUserClient::openGated(IOService *,uint,void *)
AppleUSBHostUserClient::requestCompletion(AppleUSBHostUserClientAsyncParamBlock *,int,uint)
AppleUSBHostUserClient::setAsyncPort(ipc_port *)
AppleUSBHostUserClient::simulateAsyncCompletion(IOUSBHostCompletion *,int,uint)
AppleUSBHostUserClient::simulateAsyncCompletionThreadCall(AppleUSBHostUserClient::tSimulatedCompletionParameters *,thread_call *)
AppleUSBHostUserClient::start(IOService *)
AppleUSBHostUserClient::stop(IOService *)
AppleUSBHostUserClient::terminate(uint)
AppleUSBHostiOSDevice::checkPreferredConfig(IOTimerEventSource *)
AppleUSBHostiOSDevice::free(void)
AppleUSBHostiOSDevice::start(IOService *)
AppleUSBHostiOSDevice::stop(IOService *)
AppleUSBHub::allocateDownstreamBusCurrent(IOService *,uint &,uint &)
AppleUSBHub::allocateDownstreamBusCurrentGated(IOService *,uint &,uint &)
AppleUSBHub::clearHubFeature(ushort)
AppleUSBHub::clearPortFeature(uint,ushort)
AppleUSBHub::clearPortFeatureGated(uint,ushort)
AppleUSBHub::close(IOService *,uint)
AppleUSBHub::closeGated(IOService *,uint)
AppleUSBHub::createPorts(void)
AppleUSBHub::deviceRequest(StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *,uint)
AppleUSBHub::deviceResetThreadCall(thread_call *)
AppleUSBHub::enableIdlingGated(void)
AppleUSBHub::enableIdlingThreadCall(thread_call *)
AppleUSBHub::finalize(uint)
AppleUSBHub::firstMatchNotification(void *,IOService *,IONotifier *)
AppleUSBHub::firstMatchNotificationThreadCall(thread_call *)
AppleUSBHub::firstMatchNotificationThreadCallGated(void)
AppleUSBHub::free(void)
AppleUSBHub::getHubPowerSupply(AppleUSBHub::tPowerSupply &)
AppleUSBHub::getHubStatus(uint &)
AppleUSBHub::getPortStatus(uint,uint &)
AppleUSBHub::handleClose(IOService *,uint)
AppleUSBHub::handleIsOpen(IOService const*)
AppleUSBHub::handleOpen(IOService *,uint,void *)
AppleUSBHub::hardwareException(AppleUSBHub::tHardwareException,int)
AppleUSBHub::init(OSDictionary *)
AppleUSBHub::interruptOccurred(void *,int,uint)
AppleUSBHub::interruptRetry(IOTimerEventSource *)
AppleUSBHub::open(IOService *,uint,void *)
AppleUSBHub::openGated(IOService *,uint,void *)
AppleUSBHub::powerAssertionTimeout(IOTimerEventSource *)
AppleUSBHub::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBHub::powerStateDidChangeToGated(ulong,ulong,IOService *)
AppleUSBHub::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSBHub::registerService(uint)
AppleUSBHub::setPortFeature(ushort,ushort)
AppleUSBHub::setPortFeatureGated(ushort,ushort)
AppleUSBHub::setProperties(OSObject *)
AppleUSBHub::setPropertiesGated(OSObject *)
AppleUSBHub::start(IOService *)
AppleUSBHub::stop(IOService *)
AppleUSBHub::systemPowerStateWillChangeToGated(ulong,ulong,IOService *)
AppleUSBHub::willTerminate(IOService *,uint)
AppleUSBHubPort::free(void)
AppleUSBHubPort::initBusCurrent(void)
AppleUSBHubPort::initWithOptions(tUSBHostPortType,uint,uint,AppleUSBHostController *)
AppleUSBHubPort::powerOff(void)
AppleUSBHubPort::powerOn(void)
AppleUSBHubPort::setPortCurrentLimits(void)
AppleUSBHubPort::start(IOService *)
AppleUSBIORequest::cancel(void)
AppleUSBIORequest::checkpoint(AppleUSBRequest::tTransferCheckpoint)
AppleUSBIORequest::complete(AppleUSBRequest **,int)
AppleUSBIORequest::complete(void)
AppleUSBIORequest::complete(void)
AppleUSBIORequest::free(void)
AppleUSBIORequest::free(void)
AppleUSBIORequest::getCompletionAction(void)
AppleUSBIORequest::getCompletionContext(void)
AppleUSBIORequest::getCompletionOwner(void)
AppleUSBIORequest::getCompletionParameter(void)
AppleUSBIORequest::initWithWorkLoopAndPool(IOWorkLoop *,AppleUSBRequestPool *)
AppleUSBIORequest::prepare(IOService *,IOUSBHostPipe *,StandardUSB::DeviceRequest *,IOMemoryDescriptor *,bool,IOUSBHostCompletion *,uint)
AppleUSBIORequest::prepare(IOService *,IOUSBHostPipe *,StandardUSB::DeviceRequest *,IOMemoryDescriptor *,bool,IOUSBHostCompletion *,uint)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,IOMemoryDescriptor *,uint,IOUSBHostBundledCompletion *,uint)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,IOMemoryDescriptor *,uint,IOUSBHostBundledCompletion *,uint)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,IOMemoryDescriptor *,uint,bool,IOUSBHostCompletion *,uint)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,IOMemoryDescriptor *,uint,bool,IOUSBHostCompletion *,uint)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,bool)
AppleUSBIORequest::prepare(IOUSBHostIOSource *,bool)
AppleUSBIORequest::prepare(IOUSBHostPipe *,IOMemoryDescriptor *,IOUSBHostIsochronousTransaction *,uint,ulong long,bool,IOUSBHostIsochronousTransactionCompletion *,IOUSBHostIsochronousFrame *)
AppleUSBIORequest::prepare(IOUSBHostPipe *,IOMemoryDescriptor *,IOUSBHostIsochronousTransaction *,uint,ulong long,bool,IOUSBHostIsochronousTransactionCompletion *,IOUSBHostIsochronousFrame *)
AppleUSBIORequest::update(void)
AppleUSBIORequest::withWorkLoopAndPool(IOWorkLoop *,AppleUSBRequestPool *)
AppleUSBIORequest::~AppleUSBIORequest()
AppleUSBMike::MetaClass::alloc(void)
AppleUSBMike::addAudioControlClassSpecificDescriptors(IOUSBDeviceInterface *)
AppleUSBMike::addAudioStreamingClassSpecificDescriptors(IOUSBDeviceInterface *)
AppleUSBMike::asyncWriteCompletion(IOMemoryDescriptor *,int,IOUSBDeviceIsocFrame *)
AppleUSBMike::completeAudioData(IOMemoryDescriptor *,int,IOUSBDeviceIsocFrame *,uint)
AppleUSBMike::createDefaultOutputStreamDictionary(void)
AppleUSBMike::doTransfer(void)
AppleUSBMike::estimateSafetyOffset(void)
AppleUSBMike::free(void)
AppleUSBMike::getAudioData(ulong long,AppleUSBMike::TransferData *)
AppleUSBMike::getIOBufferForStream(uint,uint *,IOMemoryDescriptor **)
AppleUSBMike::handleChangeSampleRate(long long *,ulong long)
AppleUSBMike::handleChangeStreamFormat(uint,IOAudio2StreamBasicDescription *,ulong long)
AppleUSBMike::helperChangeSampleRate(IOAudio2Notification *)
AppleUSBMike::init(OSDictionary *)
AppleUSBMike::isAudioControlInterface(IOService *)
AppleUSBMike::message(uint,IOService *,void *)
AppleUSBMike::messageGated(uint,IOService *,void *)
AppleUSBMike::performConfigChange(IOAudio2Notification *)
AppleUSBMike::receivedControlRequest(IOUSBDeviceSetupPacket *,int *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *)
AppleUSBMike::resyncAudio(void)
AppleUSBMike::serializeCurrentState(void *,OSSerialize *)
AppleUSBMike::start(IOService *)
AppleUSBMike::startIOEngine(void)
AppleUSBMike::stop(IOService *)
AppleUSBMike::stopIOEngine(void)
AppleUSBMike::timestampWdtHandler(IOTimerEventSource *)
AppleUSBMike::~AppleUSBMike()
AppleUSBNCMControl::cacheAppleInterfaceFlags(void)
AppleUSBNCMControl::cacheInterfaceRole(void)
AppleUSBNCMControl::cacheNTBParameters(void)
AppleUSBNCMControl::chooseIdlePolicies(void)
AppleUSBNCMControl::getInterfaceAssociationDescriptors(void)
AppleUSBNCMControl::getNTBFormat(ushort *)
AppleUSBNCMControl::getNTBInputSize(uint *)
AppleUSBNCMControl::getPacketFilter(ushort *)
AppleUSBNCMControl::setMulticastFilter(IOEthernetAddress *,uint)
AppleUSBNCMControl::setNTBInputSize(uint)
AppleUSBNCMControl::setNetworkAddress(uchar *,ushort)
AppleUSBNCMControl::setPacketFilter(ushort)
AppleUSBNCMData::AppleUSBNCMData(void)
AppleUSBNCMData::MetaClass::alloc(void)
AppleUSBNCMData::allocRecords(void)
AppleUSBNCMData::armRead(InputPipeRecord *)
AppleUSBNCMData::chooseIdlePolicies(void)
AppleUSBNCMData::configureBSDInterfaceThreadCall(void *,void *)
AppleUSBNCMData::configureData(void)
AppleUSBNCMData::createMediumTables(void)
AppleUSBNCMData::enable(IONetworkInterface *)
AppleUSBNCMData::enableNetifThreadCall(thread_call *)
AppleUSBNCMData::flushDataTransfers(void)
AppleUSBNCMData::free(void)
AppleUSBNCMData::freeRecords(void)
AppleUSBNCMData::getDatagramCountMax(ulong long)
AppleUSBNCMData::getMaxPacketSize(uint *)
AppleUSBNCMData::getPacketFilters(OSSymbol const*,uint *)
AppleUSBNCMData::getTransferSizeMax(uint)
AppleUSBNCMData::init(OSDictionary *)
AppleUSBNCMData::lockNetif(void)
AppleUSBNCMData::matchedBSDInterfaceNotifier(void *,IOService *,IONotifier *)
AppleUSBNCMData::newModelString(void)
AppleUSBNCMData::notificationCallback(AppleUSBNCMControl *,void *,USBCDCNotification *)
AppleUSBNCMData::outputRecordAppendPackets(OutputPipeRecord *,__mbuf **,uint)
AppleUSBNCMData::probe(IOService *,int *)
AppleUSBNCMData::processTransfer(uchar *,uint)
AppleUSBNCMData::returnOutputRecord(OutputPipeRecord *)
AppleUSBNCMData::setAppleInternalCoProcProperties(void)
AppleUSBNCMData::setCarPlayProperties(void)
AppleUSBNCMData::setDataAlternate(void)
AppleUSBNCMData::setHardwareAddress(void const*,uint)
AppleUSBNCMData::setLinkStatusDown(void)
AppleUSBNCMData::setLinkStatusUp(void)
AppleUSBNCMData::setMulticastList(IOEthernetAddress *,uint)
AppleUSBNCMData::setMulticastMode(bool)
AppleUSBNCMData::setPromiscuousMode(bool)
AppleUSBNCMData::setPropertiesForInterfaceRole(void)
AppleUSBNCMData::setupDataTransfers(void)
AppleUSBNCMData::stop(IOService *)
AppleUSBNCMData::submitPacket(uchar *,uint)
AppleUSBNCMData::transmitRecord(OutputPipeRecord *)
AppleUSBNCMData::updateLinkSpeed(uint,uint)
AppleUSBNCMData::updateLinkStatus(uchar)
AppleUSBNCMData::waitForMatchingControlDriver(void)
AppleUSBNCMData::willTerminate(IOService *,uint)
AppleUSBNCMData::zlpWriteComplete(void *,int,uint)
AppleUSBNCMData::~AppleUSBNCMData()
AppleUSBNetworkingCommand::free(void)
AppleUSBNetworkingCommand::getDataPointer(void)
AppleUSBNetworkingCommand::initWithParameters(AppleUSBNetworkingCommandPool *,IOBufferMemoryDescriptor *)
AppleUSBNetworkingCommand::setBufferLength(ulong)
AppleUSBNetworkingCommand::withParameters(AppleUSBNetworkingCommandPool *,IOBufferMemoryDescriptor *)
AppleUSBNetworkingCommandPool::allocateCommand(void)
AppleUSBNetworkingCommandPool::free(void)
AppleUSBNetworkingCommandPool::getCommand(bool)
AppleUSBNetworkingCommandPool::initWithParameters(IOWorkLoop *,uint,uint)
AppleUSBNetworkingCommandPool::start(void)
AppleUSBNetworkingCommandPool::stop(void)
AppleUSBNetworkingCommandPool::stopGated(void)
AppleUSBNetworkingCommandPool::withParameters(IOWorkLoop *,uint,uint)
AppleUSBNetworkingHostCommandPool::allocateCommand(void)
AppleUSBNetworkingHostCommandPool::free(void)
AppleUSBNetworkingHostCommandPool::initWithParameters(IOUSBHostInterface *,uint,uint)
AppleUSBNetworkingHostCommandPool::withParameters(IOUSBHostInterface *,uint,uint)
AppleUSBPhy::applySDBTunables(ulong long,AppleUSBPhy::tSDBTunable const*,ulong)
AppleUSBPhy::createServiceClient(AppleUSBPhy::tPhyPort,uint)
AppleUSBPhy::enablePhyPower(OSObject *,uint)
AppleUSBPhy::setProperties(OSObject *)
AppleUSBPhy::start(IOService *)
AppleUSBPhy::stop(IOService *)
AppleUSBPhy::updateClientArrays(OSObject *,uint,OSArray **)
AppleUSBPhyServiceClient::AppleUSBPhyServiceNotifier::AppleUSBPhyServiceNotifier(void)
AppleUSBPhyServiceClient::AppleUSBPhyServiceNotifier::getPhyWithID(uint)
AppleUSBPhyServiceClient::AppleUSBPhyServiceNotifier::serviceNotificationCallback(void *,IOService *,IONotifier *)
AppleUSBPhyServiceClient::AppleUSBPhyServiceNotifier::~AppleUSBPhyServiceNotifier()
AppleUSBPhyServiceClient::free(void)
AppleUSBPhyServiceClient::initWithServicesPhyPortAndOptions(AppleEmbeddedUSBArbitrator *,AppleUSBPhy *,AppleUSBPhy::tPhyPort,uint)
AppleUSBPhyServiceClient::requestPhyServiceLevel(AppleUSBPhyServiceClient::tPhyServiceLevel)
AppleUSBPhyServiceClient::serviceLevelToString(AppleUSBPhyServiceClient::tPhyServiceLevel)
AppleUSBPhyServiceClient::setOTGConnectionSpeed(AppleUSBPhy::tDeviceModeConnectionSpeed)
AppleUSBPhyServiceClient::withPhyPortIDAndOptions(AppleUSBPhy::tPhyPort,uint,uint)
AppleUSBRequest::activate(void)
AppleUSBRequest::cancel(void)
AppleUSBRequest::checkpoint(AppleUSBRequest::tTransferCheckpoint)
AppleUSBRequest::complete(AppleUSBRequest**,int)
AppleUSBRequest::complete(void)
AppleUSBRequest::finish(int)
AppleUSBRequest::free(void)
AppleUSBRequest::getBuffer(void)
AppleUSBRequest::getBytesTransferred(void)
AppleUSBRequest::getClient(void)
AppleUSBRequest::getCompletionContext(void)
AppleUSBRequest::getCompletionTimeout(void)
AppleUSBRequest::getIOLength(void)
AppleUSBRequest::getMetadata(void)
AppleUSBRequest::getNumTransactions(void)
AppleUSBRequest::getRequest(void)
AppleUSBRequest::getRequestID(void)
AppleUSBRequest::getStartFrame(void)
AppleUSBRequest::getStatus(void)
AppleUSBRequest::getTimestamp(void)
AppleUSBRequest::getTransactionList(void)
AppleUSBRequest::initWithPool(AppleUSBRequestPool *)
AppleUSBRequest::isSynchronous(void)
AppleUSBRequest::setBytesTransferred(uint)
AppleUSBRequest::setNextRequest(AppleUSBRequest*)
AppleUSBRequest::setRequestID(ulong long)
AppleUSBRequest::setStatus(int)
AppleUSBRequest::setTimeStamp(ulong long)
AppleUSBRequest::update(void)
AppleUSBRequestCompleter::bundlingTimeoutHandler(IOTimerEventSource *)
AppleUSBRequestCompleter::checkForWork(void)
AppleUSBRequestCompleter::checkForWork(void)
AppleUSBRequestCompleter::completeRequestChain(AppleUSBRequest *)
AppleUSBRequestCompleter::completeRequestQueue(queue_entry *)
AppleUSBRequestCompleter::completeRequestThreadCall(AppleUSBRequestCompleter::tRequestCompleteData *)
AppleUSBRequestCompleter::completeRequestThreadCallGated(AppleUSBRequest *)
AppleUSBRequestCompleter::completeSynchronousRequestQueueThreadCall(thread_call *)
AppleUSBRequestCompleter::completeSynchronousRequestQueueThreadCallGated(void)
AppleUSBRequestCompleter::enqueueRequest(AppleUSBRequest *)
AppleUSBRequestCompleter::enqueueRequest(AppleUSBRequest *)
AppleUSBRequestCompleter::free(void)
AppleUSBRequestCompleter::free(void)
AppleUSBRequestCompleter::init(OSObject *,IOWorkLoop *,void (*)(OSObject *,...))
AppleUSBRequestCompleter::onThread(void)
AppleUSBRequestCompleter::onThreadGated(bool &)
AppleUSBRequestCompleter::requestCompleter(OSObject *,IOWorkLoop *)
AppleUSBRequestCompleter::stop(void)
AppleUSBRequestPool::free(void)
AppleUSBRequestPool::gatedReturnCommand(IOCommand *)
AppleUSBRequestPool::gatedStop(void)
AppleUSBRequestPool::getCommand(bool)
AppleUSBRequestPool::initWithWorkLoop(IOWorkLoop *)
AppleUSBRequestPool::stop(void)
AppleUSBSampleBufferMonitor::copySample(uchar *)
AppleUSBSampleBufferMonitor::initWithSampleCount(uint)
AppleUSBSampleBufferMonitor::withSampleCount(uint)
AppleUSBTopCaseHIDDriver::handleStart(IOService *)
AppleUSBXDCI::addDevCapabilityDescriptors(void)
AppleUSBXDCI::applyPlatformTunables(void)
AppleUSBXDCI::applySDBTunables(IOMemoryMap *,uint,char const*)
AppleUSBXDCI::applyTunablesTag(ulong long,char const*)
AppleUSBXDCI::controllerReset(void)
AppleUSBXDCI::deactivateEndpoint(int)
AppleUSBXDCI::doCompleteEndpointIO(_IOUSBDeviceIORequestTag *)
AppleUSBXDCI::doCompleteFinishedIsocRequests(int)
AppleUSBXDCI::doFunctionRemoteWakeGated(int)
AppleUSBXDCI::doRemoteWakeGated(void)
AppleUSBXDCI::endpointEventOccurred(int,USBXDCI::tAppleUSBXDCIEventType)
AppleUSBXDCI::endpointIOTimerExpired(IOTimerEventSource *)
AppleUSBXDCI::ep0InEventOccurred(USBXDCI::tAppleUSBXDCIEventType)
AppleUSBXDCI::ep0OutEventOccurred(USBXDCI::tAppleUSBXDCIEventType)
AppleUSBXDCI::filterOccurredIsoc(IOFilterInterruptEventSource *)
AppleUSBXDCI::forceReEnumeration(void)
AppleUSBXDCI::free(void)
AppleUSBXDCI::getConnectionSpeed(void)
AppleUSBXDCI::getMaxSpeedCapability(void)
AppleUSBXDCI::goOnBus(bool)
AppleUSBXDCI::goOnBus(bool)
AppleUSBXDCI::handleAbortEndpoint(int)
AppleUSBXDCI::handleControlRequestStateChange(IOUSBDeviceControlRequest::tControlRequestState,IOUSBDeviceControlRequest::tControlRequestState)
AppleUSBXDCI::handleSetAddressPreStatusPhase(int)
AppleUSBXDCI::handleSetConfiguration(uint)
AppleUSBXDCI::handleStallEndpoint(int,bool)
AppleUSBXDCI::handleTestMode(uchar)
AppleUSBXDCI::handleUSBConnectionDone(void)
AppleUSBXDCI::handleUSBReset(void)
AppleUSBXDCI::handleUSBResume(void)
AppleUSBXDCI::handleUSBSuspend(void)
AppleUSBXDCI::handleUserlandCommand(OSString *,OSObject *)
AppleUSBXDCI::init(OSDictionary *)
AppleUSBXDCI::initDeviceController(void)
AppleUSBXDCI::initDeviceController(void)
AppleUSBXDCI::interruptOccurred(IOInterruptEventSource *,int)
AppleUSBXDCI::interruptOccurredBusEvents(IOInterruptEventSource *,int)
AppleUSBXDCI::interruptOccurredIsocEvents(IOInterruptEventSource *,int)
AppleUSBXDCI::invalidateStaleEndpointEvents(int)
AppleUSBXDCI::ioGated(_IOUSBDeviceIORequestTag *)
AppleUSBXDCI::isEndpointStalled(int)
AppleUSBXDCI::isocXferInProgressFilterOccurred(USBXDCI::tEventTRB *,ulong long)
AppleUSBXDCI::parseEndpointEvents(void)
AppleUSBXDCI::prepareConfiguration(OSArray *)
AppleUSBXDCI::prepareNonIsocIORequest(_IOUSBDeviceIORequestTag *)
AppleUSBXDCI::printLogBuffer(void)
AppleUSBXDCI::printToBuffer(char const*,...)
AppleUSBXDCI::processEndpointEvents(void)
AppleUSBXDCI::provideEndpointIDsForConfiguration(OSArray *,uchar *)
AppleUSBXDCI::resetEndpointDataToggle(int)
AppleUSBXDCI::scheduleNextIsocRequest(AppleUSBXDCIEndpoint *)
AppleUSBXDCI::sendDeviceCommand(uint,uint)
AppleUSBXDCI::sendEndpointCommand(int,uint,ushort,bool,bool,uint,uint,uint)
AppleUSBXDCI::setEndpointAllocationOrder(void)
AppleUSBXDCI::softDisconnect(IOUSBDeviceController::IOUSBDeviceControllerSoftDisconnectReason)
AppleUSBXDCI::start(IOService *)
AppleUSBXDCI::start(IOService *)
AppleUSBXDCI::startEp0In(void)
AppleUSBXDCI::startEp0Out(void)
AppleUSBXDCI::startEp0Out(void)
AppleUSBXDCI::startIsocEndpoint(int)
AppleUSBXDCI::startNonIsocEndpoint(int)
AppleUSBXDCI::startNonIsocEndpoint(int)
AppleUSBXDCI::stop(IOService *)
AppleUSBXDCI::stopDeviceController(void)
AppleUSBXDCI::stopEndpoint(int,int)
AppleUSBXDCI::stopEndpoint(int,int)
AppleUSBXDCI::stopEp0Out(void)
AppleUSBXDCI::stopIsocEndpoint(int,int)
AppleUSBXDCI::updateLPMPolicy(IOUSBDeviceFamily::tUSBDeviceConnectionSpeed,tUSBLinkState)
AppleUSBXDCI::writeEndpointEvent(USBXDCI::tEventTRB *)
AppleUSBXDCI::writeEndpointEvent(USBXDCI::tEventTRB *)
AppleUSBXDCIARM::addDevCapabilityDescriptors(void)
AppleUSBXDCIARM::cableChangeOccurred(IOTimerEventSource *)
AppleUSBXDCIARM::connectedToUSBHost(void)
AppleUSBXDCIARM::connectedWithAccessoryCable(void)
AppleUSBXDCIARM::forceReEnumeration(void)
AppleUSBXDCIARM::free(void)
AppleUSBXDCIARM::handleUSBConnectionDone(void)
AppleUSBXDCIARM::hardwareException(int,char const*)
AppleUSBXDCIARM::hardwareException(int,char const*)
AppleUSBXDCIARM::initCableChangeNotification(void)
AppleUSBXDCIARM::initCableChangeNotificationThreadCall(thread_call *)
AppleUSBXDCIARM::initDeviceController(void)
AppleUSBXDCIARM::powerOff(void)
AppleUSBXDCIARM::powerOn(void)
AppleUSBXDCIARM::powerStateDidChangeTo(ulong,ulong,IOService *)
AppleUSBXDCIARM::powerStateWillChangeTo(ulong,ulong,IOService *)
AppleUSBXDCIARM::registerTransportNotifications(void)
AppleUSBXDCIARM::requestNormalMemoryLatency(void)
AppleUSBXDCIARM::requestReducedMemoryLatency(void)
AppleUSBXDCIARM::setCurrentLimit(uint)
AppleUSBXDCIARM::softDisconnect(IOUSBDeviceController::IOUSBDeviceControllerSoftDisconnectReason)
AppleUSBXDCIARM::start(IOService *)
AppleUSBXDCIARM::start(IOService *)
AppleUSBXDCIARM::startUSBStack(void)
AppleUSBXDCIARM::stop(IOService *)
AppleUSBXDCIARM::stopDeviceController(void)
AppleUSBXDCIARM::transportCreated(void *,IOService *,IONotifier *)
AppleUSBXDCIARM::transportMessage(void *,uint,IOService *,void *,ulong)
AppleUSBXDCIARM::updatePortState(uint)
AppleUSBXDCIARM::~AppleUSBXDCIARM()
AppleUSBXDCIEndpoint::configureInController(bool,bool)
AppleUSBXDCIEndpoint::dequeueActiveIO(void)
AppleUSBXDCIEndpoint::dequeueCompletedIO(void)
AppleUSBXDCIEndpoint::enqueueActiveIO(_IOUSBDeviceIORequestTag *)
AppleUSBXDCIEndpoint::enqueueCompletedIO(_IOUSBDeviceIORequestTag *)
AppleUSBXDCIEndpoint::free(void)
AppleUSBXDCIEndpoint::initWithControllerAndOptions(IOUSBDeviceController *,uchar,uchar,ushort,uint,uint,bool,tIOUSBDeviceInterfacePipeProperty,uint,IOMapper *)
AppleUSBXDCIEndpoint::initWithControllerAndOptions(IOUSBDeviceController *,uchar,uchar,ushort,uint,uint,bool,tIOUSBDeviceInterfacePipeProperty,uint,IOMapper *)
AppleUSBXDCIEndpoint::prepareIsocFrame(IOUSBDeviceDMACommand *,ulong long,ulong long,bool)
AppleUSBXDCIEndpoint::resetScheduleHead(void)
AppleUSBXDCIEndpoint::setMaxPacketSize(ushort)
AppleUSBXDCIEndpoint::withControllerAndOptions(IOUSBDeviceController *,uchar,uchar,ushort,uint,uint,bool,tIOUSBDeviceInterfacePipeProperty,uint,IOMapper *)
AppleUSBXDCIEventHandler::disable(void)
AppleUSBXDCIEventHandler::enable(void)
AppleUSBXDCIEventHandler::flushEvents(void)
AppleUSBXDCIEventHandler::free(void)
AppleUSBXDCIEventHandler::getCurrentEvent(void)
AppleUSBXDCIEventHandler::initRegisters(void)
AppleUSBXDCIEventHandler::initWithParameters(AppleUSBXDCI *,void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOService *,uint)
AppleUSBXDCIEventHandler::popEvent(void)
AppleUSBXDCIEventHandler::signalInterrupt(void)
AppleUSBXDCIEventHandler::withParameters(AppleUSBXDCI *,void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOService *,uint)
AppleUSBXDCIIsocTRBBlock::completeIsocFrame(uint *,uint *)
AppleUSBXDCIIsocTRBBlock::prepareIsocFrame(IOUSBDeviceDMACommand *,ulong long,ulong long,ulong long,bool)
AppleUSBXDCIIsocTRBBlock::reset(void)
AppleUSBXDCIModifiedControlTransfer::MetaClass::alloc(void)
AppleUSBXDCIModifiedControlTransfer::ep0InEventOccurred(USBXDCI::tAppleUSBXDCIEventType)
AppleUSBXDCIModifiedControlTransfer::ep0OutEventOccurred(USBXDCI::tAppleUSBXDCIEventType)
AppleUSBXDCIModifiedControlTransfer::handleControlRequestStateChange(IOUSBDeviceControlRequest::tControlRequestState,IOUSBDeviceControlRequest::tControlRequestState)
AppleUSBXDCIModifiedControlTransfer::startEp0Out(void)
AppleUSBXDCIModifiedControlTransfer::~AppleUSBXDCIModifiedControlTransfer()
AppleUSBXDCITRBBlock::completeTRBBlock(uint *,uint *,bool *)
AppleUSBXDCITRBBlock::copyTRBBlock(AppleUSBXDCITRBBlock*)
AppleUSBXDCITRBBlock::free(void)
AppleUSBXDCITRBBlock::getTRBPhysAddr(void)
AppleUSBXDCITRBBlock::initWithTRBCount(uint,IOMapper *)
AppleUSBXDCITRBBlock::pollHWO(void)
AppleUSBXDCITRBBlock::prepareControlTRBs(AppleUSBXDCITRBType,IOUSBDeviceDMACommand *,ulong long,ulong long)
AppleUSBXDCITRBBlock::prepareNonIsocTRBs(IOUSBDeviceDMACommand *,ulong long,ulong long,ulong long,bool)
AppleUSBXDCITRBBlock::setNext(AppleUSBXDCITRBBlock*,bool)
AppleUSBXDCITRBBlock::withTRBCount(uint,IOMapper *)
AppleUSBXDCITRBPool::completeTRBBlocks(void)
AppleUSBXDCITRBPool::free(void)
AppleUSBXDCITRBPool::getTRBBlock(bool)
AppleUSBXDCITRBPool::initWithOptions(uint,uint,IOMapper *)
AppleUSBXDCITRBPool::prepareTRBBlocks(void)
AppleUSBXDCITRBPool::returnTRBBlock(AppleUSBXDCITRBBlock *)
AppleUSBXDCITRBPool::returnTRBList(AppleUSBXDCITRBBlock *,bool)
AppleUSBXHCI::abortPipeGated(IOUSBHostPipe *,int,IOService *)
AppleUSBXHCI::abortStreamGated(IOUSBHostStream *,int)
AppleUSBXHCI::adjustDeviceMaxExitLatencyGated(IOUSBHostDevice *,uint)
AppleUSBXHCI::adjustDeviceMaxExitLatencyGated(IOUSBHostDevice *,uint)
AppleUSBXHCI::adjustPipeGated(IOUSBHostPipe *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCI::clearPipeStallGated(IOUSBHostPipe *)
AppleUSBXHCI::closePipeGated(IOUSBHostPipe *)
AppleUSBXHCI::closeStreamGated(IOUSBHostStream *)
AppleUSBXHCI::createDevice(tInternalUSBHostConnectionSpeed,uint,uint)
AppleUSBXHCI::createIOBuffer(uint,ulong long)
AppleUSBXHCI::createInternalDevice(uint,ulong long *)
AppleUSBXHCI::createInternalEndpoint(AppleUSBXHCIDevice *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCI::createPipeGated(IOUSBHostPipe::StandardUSBDescriptors &,IOUSBHostDevice *,IOUSBHostInterface *,IOUSBHostPipe*&)
AppleUSBXHCI::createPort(StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSBXHCI::createPorts(void)
AppleUSBXHCI::createPorts(void)
AppleUSBXHCI::createRequestPool(void)
AppleUSBXHCI::createStreamGated(IOUSBHostDevice *,IOUSBHostPipe *,uint,IOUSBHostStream *&)
AppleUSBXHCI::didTerminateThreadCallGated(IOService *,uint)
AppleUSBXHCI::disableStreamsGated(IOUSBHostPipe *)
AppleUSBXHCI::enableStreamsGated(IOUSBHostPipe *)
AppleUSBXHCI::executePendingCommands(AppleUSBXHCIDevice *)
AppleUSBXHCI::filterOccurred(IOFilterInterruptEventSource *)
AppleUSBXHCI::free(void)
AppleUSBXHCI::getCompanionPort(AppleUSBHostPort *,uint)
AppleUSBXHCI::getCompanionPortGated(AppleUSBHostPort *,uint,AppleUSBHostPort *&)
AppleUSBXHCI::getCompanionPortGated(AppleUSBHostPort *,uint,AppleUSBHostPort *&)
AppleUSBXHCI::getDMACommand(uint,uint)
AppleUSBXHCI::getNextCapability(void *)
AppleUSBXHCI::getNextLegacyCapability(void *)
AppleUSBXHCI::getNextProtocolCapability(void *)
AppleUSBXHCI::getRawMicroFrameCount(void)
AppleUSBXHCI::getSlotForDevice(AppleUSBXHCIDevice *)
AppleUSBXHCI::getSlotForDevice(IOUSBHostDevice *)
AppleUSBXHCI::hardwareException(uint)
AppleUSBXHCI::hasCapability(AppleUSBXHCI::tCapability)
AppleUSBXHCI::init(OSDictionary *)
AppleUSBXHCI::interruptOccurred(IOInterruptEventSource *,int)
AppleUSBXHCI::interruptOccurred(IOInterruptEventSource *,int)
AppleUSBXHCI::io(AppleUSBHostRequest *)
AppleUSBXHCI::ioGated(AppleUSBHostRequest *)
AppleUSBXHCI::lowerOnePowerStateTo(ulong)
AppleUSBXHCI::manuallyProcessInterrupts(void)
AppleUSBXHCI::messageClients(uint,void *,ulong)
AppleUSBXHCI::raiseOnePowerStateTo(ulong)
AppleUSBXHCI::regRead16(ulong long,uint)
AppleUSBXHCI::registerHubGated(IOUSBHostDevice *,StandardUSB::HubDescriptor const*,tRegisterHubFlags)
AppleUSBXHCI::registerPeriodicTransferRing(AppleUSBXHCITransferRing *)
AppleUSBXHCI::registerSuperSpeedHubGated(IOUSBHostDevice *,StandardUSB::SuperSpeedHubDescriptor const*)
AppleUSBXHCI::reset(void)
AppleUSBXHCI::resumePipesGated(IOUSBHostDevice *)
AppleUSBXHCI::resumePipesGated(IOUSBHostDevice *)
AppleUSBXHCI::returnDMACommand(IODMACommand *)
AppleUSBXHCI::ringDoorbell(uint,uint)
AppleUSBXHCI::start(IOService *)
AppleUSBXHCI::stopThreadCallGated(void)
AppleUSBXHCI::suspendPipesGated(IOUSBHostDevice *)
AppleUSBXHCI::testMode(uint,StandardUSBXHCI::tXHCITestMode)
AppleUSBXHCI::unregisterPeriodicTransferRing(AppleUSBXHCITransferRing *)
AppleUSBXHCI::~AppleUSBXHCI()
AppleUSBXHCIARM::applySDBTunables(uint,uint,char const*)
AppleUSBXHCIARM::applySDBTunables(uint,uint,char const*)
AppleUSBXHCIARM::applyTunables(OSData *)
AppleUSBXHCIARM::controllerRegisteredThreadCall(thread_call *)
AppleUSBXHCIARM::copyPhandleDriver(char const*,char const*)
AppleUSBXHCIARM::createIOUSBHostDevice(tInternalUSBHostConnectionSpeed,ushort,uint)
AppleUSBXHCIARM::createPort(StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSBXHCIARM::createUSB2Port(tUSBPortType,IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *)
AppleUSBXHCIARM::free(void)
AppleUSBXHCIARM::lowerOnePowerStateTo(ulong)
AppleUSBXHCIARM::raiseOnePowerStateTo(ulong)
AppleUSBXHCIARM::regAnd64(ulong long,uint,ulong long)
AppleUSBXHCIARM::regOr64(ulong long,uint,ulong long)
AppleUSBXHCIARM::regRead16(ulong long,uint)
AppleUSBXHCIARM::registerPeriodicTransferRing(AppleUSBXHCITransferRing *)
AppleUSBXHCIARM::registerService(uint)
AppleUSBXHCIARM::setPowerStateGated(ulong,IOService *)
AppleUSBXHCIARM::start(IOService *)
AppleUSBXHCIARM::stopThreadCallGated(void)
AppleUSBXHCIARM::systemPowerChange(void *,uint,IOService *,void *,ulong)
AppleUSBXHCIARM::systemPowerChangeThreadCall(AppleUSBXHCIARM::tSystemPowerNotifyParams *)
AppleUSBXHCIARM::unregisterPeriodicTransferRing(AppleUSBXHCITransferRing *)
AppleUSBXHCIARM::~AppleUSBXHCIARM()
AppleUSBXHCICommandRing::addEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleUSBXHCICommandRing::addEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleUSBXHCICommandRing::disableSlot(uint)
AppleUSBXHCICommandRing::dropEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleUSBXHCICommandRing::enableSlot(uint &)
AppleUSBXHCICommandRing::free(void)
AppleUSBXHCICommandRing::getNextCommand(void)
AppleUSBXHCICommandRing::getNextCommand(void)
AppleUSBXHCICommandRing::getPortBandwidth(uint,uchar,StandardUSBXHCI::StandardUSBXHCIPortBandwidthContext &)
AppleUSBXHCICommandRing::initRegisters(void)
AppleUSBXHCICommandRing::initWithParameters(AppleUSBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleUSBXHCICommandRing::noOp(void)
AppleUSBXHCICommandRing::noOp(void)
AppleUSBXHCICommandRing::notifyHardware(AppleUSBXHCICommandRing::tHardwareState)
AppleUSBXHCICommandRing::resetEndpoint(uint,uint,bool)
AppleUSBXHCICommandRing::setAddress(uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *,bool)
AppleUSBXHCICommandRing::setDequeuePointer(uint,uint,uint,ulong long)
AppleUSBXHCICommandRing::setLatencyTolerance(uint)
AppleUSBXHCICommandRing::stopEndpoint(uint,uint,bool)
AppleUSBXHCICommandRing::updateEndpoint(uint,uint,StandardUSBXHCI::StandardUSBXHCISlotContext *,StandardUSBXHCI::StandardUSBXHCIEndpointContext *)
AppleUSBXHCICommandRing::updateSlot(uint,StandardUSBXHCI::StandardUSBXHCISlotContext *)
AppleUSBXHCICommandRing::updateSlot(uint,StandardUSBXHCI::StandardUSBXHCISlotContext *)
AppleUSBXHCICommandRing::waitForCommand(StandardUSBXHCI::StandardUSBXHCITRB *,uint)
AppleUSBXHCICommandRing::withParameters(AppleUSBXHCI *,AppleUSBXHCIInterrupter *,uint,IOMapper *)
AppleUSBXHCIDevice::close(bool)
AppleUSBXHCIDevice::createPipe(IOUSBHostPipe::StandardUSBDescriptors &,IOUSBHostDevice *,IOUSBHostInterface *)
AppleUSBXHCIDevice::executePendingCommands(void)
AppleUSBXHCIDevice::free(void)
AppleUSBXHCIDevice::getAddress(void)
AppleUSBXHCIDevice::getEndpointContext(uint)
AppleUSBXHCIDevice::getEndpointIndex(uint,uint)
AppleUSBXHCIDevice::getSpeed(void)
AppleUSBXHCIDevice::initWithParameters(AppleUSBXHCI *,StandardUSBXHCI::StandardUSBXHCICapabilityRegisters const*,uint,ulong long *,uint,AppleUSBXHCICommandRing *,IOMapper *)
AppleUSBXHCIDevice::releaseTemporaryHold(tEndpointType)
AppleUSBXHCIDevice::resume(void)
AppleUSBXHCIDevice::setAddress(ulong,StandardUSBXHCI::StandardUSBXHCISlotContext *,ushort &)
AppleUSBXHCIDevice::setTemporaryHold(tEndpointType)
AppleUSBXHCIDevice::setUpstreamHub(AppleUSBXHCIDevice*)
AppleUSBXHCIDevice::suspend(void)
AppleUSBXHCIDevice::transferEvent(uint,StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleUSBXHCIDevice::withParameters(AppleUSBXHCI *,StandardUSBXHCI::StandardUSBXHCICapabilityRegisters const*,uint,ulong long *,uint,AppleUSBXHCICommandRing *,IOMapper *)
AppleUSBXHCIDevice__closePipe_AppleUSBXHCIPipe
AppleUSBXHCIEndpoint::abortAllRequests(int,IOService *)
AppleUSBXHCIEndpoint::adjustPolicy(IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCIEndpoint::clearPipeStall(void)
AppleUSBXHCIEndpoint::configureEndpointContext(IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCIEndpoint::createTransferRing(uint)
AppleUSBXHCIEndpoint::destroy(void)
AppleUSBXHCIEndpoint::executePendingCommands(void)
AppleUSBXHCIEndpoint::free(void)
AppleUSBXHCIEndpoint::getDequeuePointer(void)
AppleUSBXHCIEndpoint::getEndpointIndex(void)
AppleUSBXHCIEndpoint::getSlotIndex(void)
AppleUSBXHCIEndpoint::initWithParameters(AppleUSBXHCI *,AppleUSBXHCIDevice *,AppleUSBXHCICommandRing *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCIEndpoint::releaseTemporaryHold(void)
AppleUSBXHCIEndpoint::resume(void)
AppleUSBXHCIEndpoint::setTemporaryHold(void)
AppleUSBXHCIEndpoint::start(uint)
AppleUSBXHCIEndpoint::stop(bool)
AppleUSBXHCIEndpoint::suspend(void)
AppleUSBXHCIEndpoint::transferEvent(StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleUSBXHCIEndpoint::unhalt(bool)
AppleUSBXHCIEndpoint::waitForStateChange(void)
AppleUSBXHCIEndpoint::withParameters(AppleUSBXHCI *,AppleUSBXHCIDevice *,AppleUSBXHCICommandRing *,IOUSBHostPipe::StandardUSBDescriptors &)
AppleUSBXHCIInterrupter::clearInterruptPending(void)
AppleUSBXHCIInterrupter::disable(void)
AppleUSBXHCIInterrupter::discardRegisters(void)
AppleUSBXHCIInterrupter::enable(void)
AppleUSBXHCIInterrupter::free(void)
AppleUSBXHCIInterrupter::getNextEvent(void)
AppleUSBXHCIInterrupter::getNextEventInternal(void)
AppleUSBXHCIInterrupter::getNextEvents(StandardUSBXHCI::StandardUSBXHCITRB *,uint &)
AppleUSBXHCIInterrupter::initRegisters(void)
AppleUSBXHCIInterrupter::initWithParameters(AppleUSBXHCI *,uint,IOMapper *)
AppleUSBXHCIInterrupter::isEventPending(void)
AppleUSBXHCIInterrupter::peekNextEvent(StandardUSBXHCI::tUSBXHCITRBType,ulong long,bool)
AppleUSBXHCIInterrupter::saveRegisters(void)
AppleUSBXHCIInterrupter::withParameters(AppleUSBXHCI *,uint,IOMapper *)
AppleUSBXHCIIsochronousEndpoint::createTransferRing(uint)
AppleUSBXHCIIsochronousRequest::activate(void)
AppleUSBXHCIIsochronousRequest::cancel(void)
AppleUSBXHCIIsochronousRequest::finish(int)
AppleUSBXHCIIsochronousRequest::getStartFrame(void)
AppleUSBXHCIIsochronousRequest::link(AppleUSBXHCITD *)
AppleUSBXHCIIsochronousRequest::link(AppleUSBXHCITD *)
AppleUSBXHCIIsochronousRequest::prepare(AppleUSBHostRequest *)
AppleUSBXHCIIsochronousRequest::update(StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleUSBXHCIIsochronousRequest::withControllerAndPool(AppleUSBXHCI *,AppleUSBRequestPool *)
AppleUSBXHCIIsochronousTransferRing::abortAllRequests(int,IOService *)
AppleUSBXHCIIsochronousTransferRing::abortRequest(int)
AppleUSBXHCIIsochronousTransferRing::enqueueRequest(AppleUSBXHCIRequest *)
AppleUSBXHCIIsochronousTransferRing::free(void)
AppleUSBXHCIIsochronousTransferRing::initWithParameters(AppleUSBXHCI *,AppleUSBXHCICommandRing *,AppleUSBXHCIEndpoint *)
AppleUSBXHCIIsochronousTransferRing::scavengeRequests(void)
AppleUSBXHCIIsochronousTransferRing::transferEvent(StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleUSBXHCIIsochronousTransferRing::withParameters(AppleUSBXHCI *,AppleUSBXHCICommandRing *,AppleUSBXHCIEndpoint *)
AppleUSBXHCIPipe::free(void)
AppleUSBXHCIPipe::getTransferRing(void)
AppleUSBXHCIPipe::initWithDescriptorsAndOwners(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,AppleUSBHostController *,IOUSBHostDevice *,IOUSBHostInterface *,uchar,ushort,AppleUSBXHCIRequest *)
AppleUSBXHCIPipe::setXHCIEndpoint(AppleUSBXHCIEndpoint *)
AppleUSBXHCIPipe::withDescriptorsAndOwners(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,AppleUSBHostController *,IOUSBHostDevice *,IOUSBHostInterface *,uchar,ushort,AppleUSBXHCIRequest *)
AppleUSBXHCIPort::free(void)
AppleUSBXHCIPort::getCompanionPortGated(uint,AppleUSBHostPort *&)
AppleUSBXHCIPort::getPortSC(void)
AppleUSBXHCIPort::getPortSCForWriting(void)
AppleUSBXHCIPort::getPortSpeed(void)
AppleUSBXHCIPort::getPortStatusGated(uint &)
AppleUSBXHCIPort::getPortType(void)
AppleUSBXHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,IORegistryEntry *,uint)
AppleUSBXHCIPort::initWithDeviceMemory(IODeviceMemory *,StandardUSBXHCI::StandardUSBXHCIProtocolCapability *,uint,uint)
AppleUSBXHCIPort::interruptOccurred(IOInterruptEventSource *,int)
AppleUSBXHCIPort::powerOff(void)
AppleUSBXHCIPort::powerOff(void)
AppleUSBXHCIPort::powerOn(void)
AppleUSBXHCIPort::powerOn(void)
AppleUSBXHCIPort::setPortLocation(uint)
AppleUSBXHCIPort::setPortSC(uint)
AppleUSBXHCIPort::start(IOService *)
AppleUSBXHCIPort::suspend(void)
AppleUSBXHCIRequest::addTD(AppleUSBXHCITD *,uint,uint,uint)
AppleUSBXHCIRequest::cancel(void)
AppleUSBXHCIRequest::cancel(void)
AppleUSBXHCIRequest::complete(void)
AppleUSBXHCIRequest::complete(void)
AppleUSBXHCIRequest::finish(StandardUSBXHCI::StandardUSBXHCITRB *)
AppleUSBXHCIRequest::finish(int)
AppleUSBXHCIRequest::free(void)
AppleUSBXHCIRequest::getNextDeadline(void)
AppleUSBXHCIRequest::getTailTD(void)
AppleUSBXHCIRequest::hasTimedOut(void)
AppleUSBXHCIRequest::initWithControllerAndPool(AppleUSBXHCI *,AppleUSBRequestPool *)
AppleUSBXHCIRequest::link(AppleUSBXHCITD *)
AppleUSBXHCIRequest::prepare(AppleUSBHostRequest *)
AppleUSBXHCIRequest::translateCompletionCode(uint)
AppleUSBXHCIRequest::translateCompletionCode(uint)
AppleUSBXHCIRequest::unlink(void)
AppleUSBXHCIRequest::update(StandardUSBXHCI::StandardUSBXHCITRB *)
AppleUSBXHCIRequest::update(StandardUSBXHCI::StandardUSBXHCITRB *)
AppleUSBXHCIRequest::withControllerAndPool(AppleUSBXHCI *,AppleUSBRequestPool *)
AppleUSBXHCIRequestPool::initWithWorkLoopAndController(IOWorkLoop *,AppleUSBXHCI *)
AppleUSBXHCIRequestPool::withWorkLoopAndController(IOWorkLoop *,AppleUSBXHCI *)
AppleUSBXHCISparseRequest::prepare(AppleUSBHostRequest *)
AppleUSBXHCISparseRequest::update(StandardUSBXHCI::StandardUSBXHCITRB *)
AppleUSBXHCIStream::free(void)
AppleUSBXHCIStream::getTransferRing(void)
AppleUSBXHCIStream::setXHCIEndpoint(AppleUSBXHCIEndpoint *)
AppleUSBXHCIStream::withOwnersAndStreamID(AppleUSBXHCI *,IOUSBHostDevice *,AppleUSBXHCIPipe *,uint)
AppleUSBXHCIStreamingEndpoint::abortAllRequests(int)
AppleUSBXHCIStreamingEndpoint::closeStream(AppleUSBXHCITransferRing *)
AppleUSBXHCIStreamingEndpoint::closeStream(uint)
AppleUSBXHCIStreamingEndpoint::createStream(IOUSBHostDevice *,AppleUSBXHCIPipe *,uint)
AppleUSBXHCIStreamingEndpoint::destroy(void)
AppleUSBXHCIStreamingEndpoint::disableStreams(void)
AppleUSBXHCIStreamingEndpoint::enableStreams(void)
AppleUSBXHCIStreamingEndpoint::executePendingCommands(void)
AppleUSBXHCIStreamingEndpoint::free(void)
AppleUSBXHCIStreamingEndpoint::free(void)
AppleUSBXHCIStreamingEndpoint::getDequeuePointer(void)
AppleUSBXHCIStreamingEndpoint::getTransferRing(uint)
AppleUSBXHCIStreamingEndpoint::initWithParameters(AppleUSBXHCI *,AppleUSBXHCIDevice *,AppleUSBXHCICommandRing *,IOUSBHostPipe::StandardUSBDescriptors &,uint,IOMapper *)
AppleUSBXHCIStreamingEndpoint::start(uint)
AppleUSBXHCIStreamingEndpoint::withParameters(AppleUSBXHCI *,AppleUSBXHCIDevice *,AppleUSBXHCICommandRing *,IOUSBHostPipe::StandardUSBDescriptors &,uint,IOMapper *)
AppleUSBXHCIStreamingEndpoint__fn_0x120
AppleUSBXHCIT8101Request::update(StandardUSBXHCI::StandardUSBXHCITRB *)
AppleUSBXHCITDPool::free(void)
AppleUSBXHCITDPool::getTD(void)
AppleUSBXHCITDPool::initWithParameters(AppleUSBXHCI *,uint,IOMapper *)
AppleUSBXHCITDPool::returnTD(AppleUSBXHCITD *)
AppleUSBXHCITDPool::withParameters(AppleUSBXHCI *,uint,IOMapper *)
AppleUSBXHCITransferRing::abortAllRequests(int,IOService *)
AppleUSBXHCITransferRing::abortRequest(int)
AppleUSBXHCITransferRing::adjustTimeout(bool)
AppleUSBXHCITransferRing::destroy(void)
AppleUSBXHCITransferRing::destroy(void)
AppleUSBXHCITransferRing::enqueueRequest(AppleUSBXHCIRequest *)
AppleUSBXHCITransferRing::free(void)
AppleUSBXHCITransferRing::free(void)
AppleUSBXHCITransferRing::getDequeuePointer(void)
AppleUSBXHCITransferRing::getEndpointIndex(void)
AppleUSBXHCITransferRing::getSlotIndex(void)
AppleUSBXHCITransferRing::hasRequests(IOService *)
AppleUSBXHCITransferRing::initWithParameters(AppleUSBXHCI *,AppleUSBXHCICommandRing *,AppleUSBXHCIEndpoint *,uint)
AppleUSBXHCITransferRing::refreshDequeuePointer(void)
AppleUSBXHCITransferRing::refreshDequeuePointer(void)
AppleUSBXHCITransferRing::timeout(IOTimerEventSource *)
AppleUSBXHCITransferRing::transferEvent(StandardUSBXHCI::StandardUSBXHCITRB *,ulong long)
AppleUSBXHCITransferRing::transferStartTime(void)
AppleUSBXHCITransferRing::withParameters(AppleUSBXHCI *,AppleUSBXHCICommandRing *,AppleUSBXHCIEndpoint *,uint)
AppleUserHIDDevice::completeReport(OSAction *,int,uint)
AppleUserHIDDevice::free(void)
AppleUserHIDDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleUserHIDDevice::handleReportWithTime(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
AppleUserHIDDevice::handleStart(IOService *)
AppleUserHIDDevice::handleStop(IOService *)
AppleUserHIDDevice::init(OSDictionary *)
AppleUserHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
AppleUserHIDDevice::newReportIntervalNumber(void)
AppleUserHIDDevice::newTransportString(void)
AppleUserHIDDevice::processReport(HIDReportCommandType,IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *,bool)
AppleUserHIDDevice::serializeDebugState(void *,OSSerialize *)
AppleUserHIDDevice::setProperties(OSObject *)
AppleUserHIDDevice::setProperty(OSSymbol const*,OSObject *)
AppleUserHIDDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
AppleUserHIDDevice::start(IOService *)
AppleUserHIDDevice::stop(IOService *)
AppleUserHIDDevice::willTerminate(IOService *,uint)
AppleUserHIDEventService::completeCopyEvent(OSAction *,IOHIDEvent *,ulong long)
AppleUserHIDEventService::completeSetProperties(OSAction *,int,ulong long)
AppleUserHIDEventService::copyEvent(uint,IOHIDEvent *,uint)
AppleUserHIDEventService::copyMatchingEvent(OSDictionary *)
AppleUserHIDEventService::dispatchEvent(IOHIDEvent *,uint)
AppleUserHIDEventService::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
AppleUserHIDEventService::dispatchScrollWheelEventWithFixed(ulong long,int,int,int,uint)
AppleUserHIDEventService::free(void)
AppleUserHIDEventService::handleStop(IOService *)
AppleUserHIDEventService::init(OSDictionary *)
AppleUserHIDEventService::probe(IOService *,int *)
AppleUserHIDEventService::setDigitizerProperties(OSDictionary *,OSArray *)
AppleUserHIDEventService::setElementValue(uint,uint,uint)
AppleUserHIDEventService::setProperties(OSObject *)
AppleUserHIDEventService::setSensorProperties(OSDictionary *,OSArray *)
AppleUserHIDEventService::setSystemProperties(OSDictionary *)
AppleUserHIDEventService::setUnicodeProperties(OSDictionary *,OSArray *)
AppleUserHIDEventService::start(IOService *)
AppleUserHIDEventService::updateElementsProperty(OSArray *,OSArray *)
AppleVTempDispatcher::free(void)
AppleVTempDispatcher::setPropertiesGated(OSObject *)
AppleVTempDispatcher::start(IOService *)
AppleWirelessPowerPacket::fromSerializedReceivePacket(uchar const*,ulong)
AppleWirelessPowerPacket::getSerializedSendPacket(ulong long,ulong,uchar *,uint *)
AppleWirelessPowerTelegramStream::MetaClass::alloc(void)
AppleWirelessPowerTelegramStream::enable(void (*)(OSObject *,AppleC26DataStream *,void const*,ulong),void (*)(OSObject *,AppleC26DataStream *,void *,int))
AppleWirelessPowerTelegramStream::receivePacketFromController(AppleC26Packet *)
AppleWirelessPowerTelegramStream::sendData(void const*,ulong,void *)
Asciihex_to_binary(char)
Audio2Control::_initValue(int)
Audio2Control::_setValue(OSObject *)
Audio2Control::flushValue(void)
Audio2Control::free(void)
Audio2Control::getIntValue(void)
Audio2Control::getProperty(char const*)
Audio2Control::getSubType(void)
Audio2Control::getUsage(void)
Audio2Control::hardwareValueChanged(OSObject *)
Audio2Control::init(uint,OSObject *,uint,char const*,uint,uint,uint,OSDictionary *)
Audio2Control::init(void)
Audio2Control::performValueChange(OSObject *)
Audio2Control::sendChangeNotification(uint)
Audio2Control::sendRangeChangeNotification(void)
Audio2Control::sendValueChangeNotification(void)
Audio2Control::setProperty(char const*,OSObject *)
Audio2Control::setProperty(char const*,ulong long,uint)
Audio2Control::setReadOnlyFlag(void)
Audio2Control::setValue(OSObject *)
Audio2Control::setValue(int)
Audio2Control::setValueChangeHandler(int (*)(OSObject *,Audio2Control*,int,int),OSObject *)
Audio2Control::setValueChangeTarget(OSObject *)
Audio2Control::updateValue(OSObject *)
Audio2Device::activateAudioEngine(Audio2Engine *)
Audio2Device::activateAudioEngine(Audio2Engine *,bool)
Audio2Device::deactivateAllAudioEngines(void)
Audio2Device::flushAudioControls(void)
Audio2Device::free(void)
Audio2Device::init(OSDictionary *)
Audio2Device::setDeviceModelName(char const*)
Audio2Device::setDeviceName(char const*)
Audio2Device::start(IOService *)
Audio2Device::stop(IOService *)
Audio2Device::willTerminate(IOService *,uint)
Audio2Engine::_handleChangeSampleRate(long long *,ulong long)
Audio2Engine::_handleChangeStreamFormat(uint,IOAudio2StreamBasicDescription *,ulong long)
Audio2Engine::_handleConfigChange(IOAudio2Notification *,ulong long)
Audio2Engine::_setControlValue(uint,uint,uint *)
Audio2Engine::_setStreamActive(uint,uint)
Audio2Engine::_startIOEngine(void)
Audio2Engine::_stopIOEngine(void)
Audio2Engine::addAudioStream(Audio2Stream *)
Audio2Engine::addDefaultAudioControl(Audio2Control *)
Audio2Engine::channelArrayForConfig(uint)
Audio2Engine::copyDefaultAudioControls(void)
Audio2Engine::deferNotification(uint,uint,uint,uint,ulong long,ulong long)
Audio2Engine::detachAudioStreams(void)
Audio2Engine::doIO(bool,uint,uint,uint,uint,uint)
Audio2Engine::free(void)
Audio2Engine::getAudioControlForID(uint)
Audio2Engine::getAudioStream(_IOAudioStreamDirection,uint)
Audio2Engine::getBufferOptions(void)
Audio2Engine::getGlobalUniqueID(void)
Audio2Engine::getIOBufferForStream(uint,uint *,IOMemoryDescriptor **)
Audio2Engine::getLocalUniqueID(void)
Audio2Engine::getNextStreamID(Audio2Stream *)
Audio2Engine::getStreamForID(uint)
Audio2Engine::handleChangeSampleRate(long long *,ulong long)
Audio2Engine::handleChangeStreamFormat(uint,IOAudio2StreamBasicDescription *,ulong long)
Audio2Engine::handleConfigChange(IOAudio2Notification *,ulong long)
Audio2Engine::hardwareSampleFormatChanged(Audio2Stream *,_IOAudioStreamFormat const*,_IOAudioStreamFormat const*)
Audio2Engine::hardwareSampleRateChanged(_IOAudioSampleRate const*,bool)
Audio2Engine::init(OSDictionary *)
Audio2Engine::isSampleRateSupported(OSOrderedSet *,long long)
Audio2Engine::isSampleRateSupported(long long)
Audio2Engine::lockAllStreams(void)
Audio2Engine::pauseAudioEngine(void)
Audio2Engine::performChangeSampleRate(long long)
Audio2Engine::performChangeStreamFormat(uint,long long,uint)
Audio2Engine::publishDefaultAudioControls(void)
Audio2Engine::publishStreamDictionaries(void)
Audio2Engine::registerNotificationPort(ipc_port *,uint,uint)
Audio2Engine::registerService(uint)
Audio2Engine::removeAllDefaultAudioControls(void)
Audio2Engine::removeDefaultAudioControl(Audio2Control *)
Audio2Engine::requestConfigChange(uint,uint,ulong long,ulong long)
Audio2Engine::resetStatusBuffer(void)
Audio2Engine::resumeAudioEngine(void)
Audio2Engine::sendControlChangeNotification(Audio2Control *,bool)
Audio2Engine::sendFormatChangeNotification(Audio2Stream *)
Audio2Engine::sendMultiNotification(uint,IOAudio2Notification const*)
Audio2Engine::sendNotification(uint)
Audio2Engine::sendSingleNotification(uint,uint,uint,uint,ulong long,ulong long)
Audio2Engine::setClockDomain(uint)
Audio2Engine::setControlValue(uint,uint,uint *)
Audio2Engine::setDescription(char const*)
Audio2Engine::setManufacturerName(char const*)
Audio2Engine::setNumSampleFramesPerBuffer(uint)
Audio2Engine::setSampleLatency(uint)
Audio2Engine::setSampleOffset(uint)
Audio2Engine::setSampleRate(_IOAudioSampleRate const*)
Audio2Engine::setState(_IOAudioEngineState)
Audio2Engine::setStreamActive(uint,uint)
Audio2Engine::start(IOService *)
Audio2Engine::start(IOService *,Audio2Device *)
Audio2Engine::startAudioEngine(void)
Audio2Engine::startIOEngine(void)
Audio2Engine::stop(IOService *)
Audio2Engine::stopAudioEngine(void)
Audio2Engine::stopIOEngine(void)
Audio2Engine::takeTimeStamp(bool,ulong long *)
Audio2Engine::unlockAllStreams(void)
Audio2Engine::updateChannelNumbers(void)
Audio2Engine::updateCustomProperties(void)
Audio2LevelControl::create(int,int,int,int,int,uint,char const*,uint,uint,uint)
Audio2LevelControl::getMaxDB(void)
Audio2LevelControl::getMaxValue(void)
Audio2LevelControl::getMinDB(void)
Audio2LevelControl::getMinValue(void)
Audio2LevelControl::init(int,int,int,int,int,uint,char const*,uint,uint,uint)
Audio2LevelControl::init(void)
Audio2SelectorControl::addAvailableSelection(int,OSString *)
Audio2SelectorControl::addAvailableSelection(int,char const*)
Audio2SelectorControl::create(int,uint,char const*,uint,uint,uint)
Audio2SelectorControl::free(void)
Audio2SelectorControl::init(void)
Audio2SelectorControl::removeAvailableSelection(int)
Audio2SelectorControl::valueExists(int)
Audio2Stream::addAvailableFormat(_IOAudioStreamFormat const*,_IOAudioStreamFormatExtension const*,_IOAudioSampleRate const*,_IOAudioSampleRate const*)
Audio2Stream::clearAvailableFormats(void)
Audio2Stream::clearSampleBuffer(void)
Audio2Stream::free(void)
Audio2Stream::getPreferredBufferMappingOptions(bool)
Audio2Stream::getSampleBufferDescriptor(uint *,IOBufferMemoryDescriptor **)
Audio2Stream::initWithAudioEngine(Audio2Engine *,_IOAudioStreamDirection,uint,char const*,OSDictionary *)
Audio2Stream::publishAvailableFormats(void)
Audio2Stream::publishCurrentFormat(void)
Audio2Stream::publishCurrentSampleRate(_IOAudioSampleRate const*)
Audio2Stream::setFormat(_IOAudioStreamFormat const*,_IOAudioSampleRate const*,bool)
Audio2Stream::setFormat(_IOAudioStreamFormat const*,_IOAudioStreamFormatExtension const*,OSDictionary *,bool)
Audio2Stream::setFormat(_IOAudioStreamFormat const*,bool)
Audio2Stream::setSampleBuffer(void *,uint)
Audio2Stream::setSampleBufferDescriptor(IOBufferMemoryDescriptor *,uint,uint)
Audio2Stream::setStartingChannelNumber(uint)
Audio2Stream::setStreamAvailable(bool)
Audio2Stream::stop(IOService *)
Audio2ToggleControl::create(bool,uint,char const*,uint,uint,uint)
Audio2ToggleControl::init(bool,uint,char const*,uint,uint,uint)
Audio2ToggleControl::init(void)
AudioCodecWrapper::CreateAudioCodecWrapper(IOAudioCodecs *,uint)
AudioCodecWrapper::Decrypt(ulong,ulong &,void *,uchar const*&)
AudioCodecWrapper::Initialize(FunctionAudioAudioStreamBasicDescription const&,FunctionAudioAudioStreamBasicDescription const&,void const*,ulong)
AudioCodecWrapper::Initialize(FunctionAudioAudioStreamBasicDescription const&,FunctionAudioAudioStreamBasicDescription const&,void const*,ulong)
AudioCodecWrapper::Process(ulong,ulong &,void *,ulong &)
AudioCodecWrapper::Reset(void)
AudioCodecWrapper::SetProperty(uint,ulong,void const*)
AudioCodecWrapper::~AudioCodecWrapper()
AudioKernelClientInterface::AudioKernelClientInterface(void)
AudioKernelClientInterface::CreateInterfaceWithOwner(IOService *,OSString const*,int (*)(OSObject *,void *,void *,void *,void *))
AudioKernelClientInterface::CreateMatchingDictionary(OSString const*)
AudioKernelClientInterface::IOMatchingNotificationCallback(void *,void *,IOService *,IONotifier *)
AudioKernelClientInterface::RegisterAudioKernelInterfaceMatchingNotification(IOService *,OSString const*,void (*)(IOService *,AudioKernelClientInterface*,IONotifier *),OSDictionary *)
AudioKernelClientInterface::RegisterAudioKernelInterfaceMatchingNotification(IOService *,char const*,void (*)(IOService *,AudioKernelClientInterface*,IONotifier *),OSDictionary *)
AudioKernelClientInterface::free(void)
AudioKernelClientInterface::getClientIndexLocked(IOService *,uint *)
AudioKernelClientInterface::init(OSDictionary *)
AudioKernelClientInterface::registerClient(IOService *)
AudioKernelClientInterface::sendRequest(IOService *,OSArray *,uint)
AudioKernelClientInterface::start(IOService *)
AudioKernelClientInterface::stop(IOService *)
AudioKernelClientInterface::~AudioKernelClientInterface()
AudioKernelClientInterfaceUtility::AppendFWResourceWriteRequest(OSSharedPtr<OSArray> &,uint,ulong long,void const*)
AudioKernelClientInterfaceUtility::AppendGetPropertyRequest(OSSharedPtr<OSArray> &,OSNumber *,OSObject *)
AudioKernelClientInterfaceUtility::AppendGetPropertyRequest(OSSharedPtr<OSArray> &,ulong long,ulong long,void *)
AudioKernelClientInterfaceUtility::AppendRegisterWriteRequest(OSArray *&,OSNumber *,OSData *)
AudioKernelClientInterfaceUtility::AppendSetPropertyRequest(OSSharedPtr<OSArray> &,OSNumber *,OSObject *,OSObject *)
AudioKernelClientInterfaceUtility::AppendSetPropertyRequest(OSSharedPtr<OSArray> &,ulong long,OSObject *,OSObject *)
AudioKernelClientInterfaceUtility::CreateRequestDictionary(OSNumber *,bool)
AudioKernelClientInterfaceUtility::CreateRequestDictionary(ulong long,bool)
AudioKernelClientInterfaceUtility::GetAccessType(OSDictionary *)
AudioKernelClientInterfaceUtility::GetAudioSamples(OSDictionary *)
AudioKernelClientInterfaceUtility::GetData(OSDictionary *)
AudioKernelClientInterfaceUtility::GetFailedRequestIndices(OSArray *)
AudioKernelClientInterfaceUtility::GetRequestResult(OSArray *,int,OSObject **)
AudioKernelClientInterfaceUtility::GetRequestType(OSDictionary *)
AudioKernelClientInterfaceUtility::GetResult(OSDictionary *)
AudioKernelClientInterfaceUtility::GetStartAddress(OSDictionary *)
AudioKernelClientInterfaceUtility::SetData(OSDictionary *,OSObject *)
AudioKernelClientInterfaceUtility::SetResult(OSDictionary *,int)
AutoreleasedBuffer::~AutoreleasedBuffer()
BCMWLANFirmware4387_Hashstore::start(IOService *)
BICS_Trace::bics_trace(BICS_Trace::TType,uint,uint,uint,uint)
BICSampler::end_plane(uint *,uint)
BICSampler::init(IOMFB::Layout,uint *,uint,uint)
BICSampler::resample_buffer(void)
BICSampler::smoosh_tile(ushort *,uint,uint,uint,IOMFB::BICGainProcessor::Scale)
BICSampler::start_plane(uint *,uchar *,uint *,uint,uint,uint,float,uint)
BICSampler::write(ushort)
BTDebug::MetaClass::alloc(void)
BTDebug::asyncEventHandler(void)
BTDebug::asyncEventThreadCall(void *,void *)
BTDebug::asyncEventThreadCall(void *,void *)
BTDebug::closeService(void)
BTDebug::configureReport(IOReportChannelList *,uint,void *,void *)
BTDebug::configureReportGated(IOReportChannelList *,uint,void *,void *)
BTDebug::coreDumpComplete(void *,int,ulong long)
BTDebug::coreDumpComplete(void *,int,ulong long)
BTDebug::coreDumpCompleteGated(BTDebug::CoreDumpContext *,int,ulong long)
BTDebug::coreDumpGated(BTDebug::CoreDumpContext *)
BTDebug::crashInfoComplete(void *,void *,int)
BTDebug::disableLogging(void)
BTDebug::disableLoggingGated(void)
BTDebug::disableLoggingInternal(void)
BTDebug::dumpLogs(char const*)
BTDebug::dumpLogsGated(char const*)
BTDebug::enableLoggingGated(uint,uint,LogFlowParams const*,uint)
BTDebug::enableLoggingGated(uint,uint,LogFlowParams const*,uint)
BTDebug::enableLoggingInternal(void)
BTDebug::enableLoggingInternal(void)
BTDebug::enqueueAsyncEvent(BTDebug::AsyncEventType,BTDebug::AsyncEvent::Payload *)
BTDebug::free(void)
BTDebug::mapCrashInfoBuffer(void)
BTDebug::openService(BTDebugService *)
BTDebug::printDbgServiceQueue(char const*)
BTDebug::readLogsComplete(void *,int,BTDebugService::LogData *,uint)
BTDebug::readLogsComplete(void *,int,BTDebugService::LogData *,uint)
BTDebug::serviceNotifier(void *,IOService *,IONotifier *)
BTDebug::stop(IOService *)
BTDebug::updateReport(IOReportChannelList *,uint,void *,void *)
BTDebug::updateReportGated(IOReportChannelList *,uint,void *,void *)
BTDebugReporter::BTDebugReporter(void)
BTDebugReporter::addReporters(IOService *,IOReportLegend *)
BTDebugReporter::free(void)
BTDebugReporter::initWithReportingService(IOService *,CCLogStream *)
BTDebugReporter::reportCoreDump(int,ulong long)
BTDebugReporter::reportLogCompletion(int)
BTDebugReporter::reportLoggingState(BTDebugReporter::LoggingState)
BTDebugReporter::reportReceivedLog(uint,uint)
BTDebugReporter::start(void)
BTDebugReporter::stop(void)
BTDebugReporter::updateReport(IOReportChannelList *,uint,void *,void *)
BTDebugReporter::withReportingService(IOService *,CCLogStream *)
BTDebugUserClient::_disableLogging(BTDebugUserClient*,void *,IOExternalMethodArguments *)
BTDebugUserClient::_dumpLogs(BTDebugUserClient*,void *,IOExternalMethodArguments *)
BTDebugUserClient::_enableLogging(BTDebugUserClient*,void *,IOExternalMethodArguments *)
BTDebugUserClient::clientClose(void)
BTDebugUserClient::coreDump(ulong long,char const*,BTDebugService::CoreDumpCompletion *)
BTDebugUserClient::disableLogging(void)
BTDebugUserClient::dumpLogs(char const*)
BTDebugUserClient::enableLogging(uint,uint,LogFlowParams const*,uint)
BTDebugUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
BTDebugUserClient::free(void)
BTDebugUserClient::getLogger(void)
BTDebugUserClient::initWithTask(task *,void *,uint,OSDictionary *)
BTDebugUserClient::start(IOService *)
BTDebugUserClient::stop(IOService *)
BatteryOverrides::setOverride(uint,int)
BeaconSorter(OSMetaClassBase const*,OSMetaClassBase const*,void *)
BilinearScaleInterchangeBuffer(IOSurface *,uchar *,IOSurface *,uchar *,int,int,int,int,int,int,uint,scaler_bilinear_buffers_t,IOSurface *,uchar *,IOSurface *,uchar *)
BilinearScaling420(uchar **,int *,int,int,uchar **,int *,int,int,int,int,hdr_context_t const*,uchar **,scaler_bilinear_buffers_t,uint,uint *,uint *)
BitstreamReader::BitstreamReader(uchar const*,uint)
BitstreamReader::GetBit(void)
BitstreamReader::PutBack(uint)
BitstreamReader::SkipBits(uint)
BlackPointAdaptation::operator()(double)
Block::free(void)
Block::getBlockForceBootArg(IOMFB::BlockType)
Block::init(IOService *,IOMFBSoCProfile *,IOMFB::BlockType)
Block::read_register(uint)
Block::read_register(uint)
Block::write_register(uint,uint)
Block::write_registers(uint,ulong,uint *)
Block__init_IOService___IOMFBSoCProfile___IOMFB__BlockType
BlockedArray::free(void)
CABitStreamReader::FillCache(void)
CABitStreamReader::ReadBits(uint)
CAHDec::CAHDec(void)
CAHDecClaryAvc::AvcPicScalingListFallBack(sAvcSPS *,sAvcPPS *)
CAHDecClaryAvc::AvcSeqScalingListFallBack(sAvcSPS *)
CAHDecClaryAvc::CAHDecClaryAvc(CAVDAvcDecoder *)
CAHDecClaryAvc::allocWorkBuf_PPS(void *,void *)
CAHDecClaryAvc::allocWorkBuf_SPS(void *)
CAHDecClaryAvc::copyScalingList(AvcScalingLists &,AvcQtMatCoeff &,uchar *,uchar *,uchar *,int)
CAHDecClaryAvc::freeWorkBuf_PPS(void)
CAHDecClaryAvc::freeWorkBuf_SPS(void)
CAHDecClaryAvc::getSWRStride(uint,uint,uint,uint)
CAHDecClaryAvc::getTileEndCTU(uint,uint)
CAHDecClaryAvc::getTileIdxAbove(uint)
CAHDecClaryAvc::getTileStartCTU(uint,uint)
CAHDecClaryAvc::initPicture(uint,uint,bool)
CAHDecClaryAvc::populateAvdWork(uint)
CAHDecClaryAvc::populatePictureRegisters(void)
CAHDecClaryAvc::populateSequenceRegisters(void)
CAHDecClaryAvc::populateSliceRegisters(AvcSliceRegisters *,int)
CAHDecClaryAvc::populateSlices(uint)
CAHDecClaryAvc::~CAHDecClaryAvc()
CAHDecClaryHevc::CAHDecClaryHevc(CAVDHevcDecoder *)
CAHDecClaryHevc::getTileEndCTU(uint,uint)
CAHDecClaryHevc::getTileIdxAbove(uint)
CAHDecClaryHevc::getTileStartCTU(uint,uint)
CAHDecClaryHevc::initPicture(uint,uint,bool)
CAHDecClaryHevc::populateAvdWork(uint)
CAHDecClaryHevc::populatePictureRegisters(void)
CAHDecClaryHevc::populateSequenceRegisters(void)
CAHDecClaryHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecClaryHevc::populateSlices(uint)
CAHDecClaryLgh::CAHDecClaryLgh(CAVDLghDecoder *)
CAHDecClaryLgh::DecodePicture(uint)
CAHDecClaryLgh::allocWorkBuf_SPS(void *)
CAHDecClaryLgh::getTileEndCTU(uint,uint)
CAHDecClaryLgh::getTileStartCTU(uint,uint)
CAHDecClaryLgh::populateAvdWork(uint)
CAHDecClaryLgh::populatePictureRegisters(void)
CAHDecClaryLgh::populateTiles(void)
CAHDecCloverAvc::CAHDecCloverAvc(CAVDAvcDecoder *)
CAHDecCloverAvc::allocWorkBuf_SPS(void *)
CAHDecCloverAvc::getTileEndCTU(uint,uint)
CAHDecCloverAvc::getTileIdxAbove(uint)
CAHDecCloverAvc::getTileStartCTU(uint,uint)
CAHDecCloverAvc::initPicture(uint,uint,bool)
CAHDecCloverAvc::populateAvdWork(uint)
CAHDecCloverAvc::populatePictureRegisters(void)
CAHDecCloverAvc::populateSequenceRegisters(void)
CAHDecCloverAvc::populateSliceRegisters(AvcSliceRegisters *,int)
CAHDecCloverAvc::populateSlices(uint)
CAHDecCloverHevc::CAHDecCloverHevc(CAVDHevcDecoder *)
CAHDecCloverHevc::allocWorkBuf_PPS(void *,void *)
CAHDecCloverHevc::allocWorkBuf_SPS(void *)
CAHDecCloverHevc::freeWorkBuf_PPS(void)
CAHDecCloverHevc::getSWRStride(uint,uint,uint,uint)
CAHDecCloverHevc::getTileEndCTU(uint,uint)
CAHDecCloverHevc::getTileIdxAbove(uint)
CAHDecCloverHevc::getTileStartCTU(uint,uint)
CAHDecCloverHevc::initPicture(uint,uint,bool)
CAHDecCloverHevc::populateAvdWork(uint)
CAHDecCloverHevc::populatePictureRegisters(void)
CAHDecCloverHevc::populateSequenceRegisters(void)
CAHDecCloverHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecCloverHevc::populateSlices(uint)
CAHDecCloverLgh::CAHDecCloverLgh(CAVDLghDecoder *)
CAHDecCloverLgh::DecodePicture(uint)
CAHDecCloverLgh::allocWorkBuf_PPS(void *,void *)
CAHDecCloverLgh::allocWorkBuf_SPS(void *)
CAHDecCloverLgh::clearSegBuffer(void)
CAHDecCloverLgh::freeWorkBuf_PPS(void)
CAHDecCloverLgh::freeWorkBuf_SPS(void)
CAHDecCloverLgh::getSWRStride(uint,uint,uint,uint)
CAHDecCloverLgh::getTileEndCTU(uint,uint)
CAHDecCloverLgh::getTileStartCTU(uint,uint)
CAHDecCloverLgh::populateAvdWork(uint)
CAHDecCloverLgh::populatePictureRegisters(void)
CAHDecCloverLgh::populateSequenceRegisters(void)
CAHDecCloverLgh::~CAHDecCloverLgh()
CAHDecDahliaAvc::CAHDecDahliaAvc(CAVDAvcDecoder *)
CAHDecDahliaAvc::allocWorkBuf_PPS(void *,void *)
CAHDecDahliaAvc::allocWorkBuf_SPS(void *)
CAHDecDahliaAvc::freeWorkBuf_PPS(void)
CAHDecDahliaAvc::freeWorkBuf_SPS(void)
CAHDecDahliaAvc::getSWRStride(uint,uint,uint,uint)
CAHDecDahliaAvc::getTileEndCTU(uint,uint)
CAHDecDahliaAvc::getTileIdxAbove(uint)
CAHDecDahliaAvc::getTileStartCTU(uint,uint)
CAHDecDahliaAvc::initPicture(uint,uint,bool)
CAHDecDahliaAvc::populateAvdWork(uint)
CAHDecDahliaAvc::populatePictureRegisters(void)
CAHDecDahliaAvc::populateSequenceRegisters(void)
CAHDecDahliaAvc::populateSliceRegisters(AvcSliceRegisters *,int)
CAHDecDahliaAvc::populateSlices(uint)
CAHDecDahliaAvc::~CAHDecDahliaAvc()
CAHDecDahliaHevc::CAHDecDahliaHevc(CAVDHevcDecoder *)
CAHDecDahliaHevc::allocWorkBuf_PPS(void *,void *)
CAHDecDahliaHevc::allocWorkBuf_SPS(void *)
CAHDecDahliaHevc::freeWorkBuf_PPS(void)
CAHDecDahliaHevc::freeWorkBuf_SPS(void)
CAHDecDahliaHevc::getSWRStride(uint,uint,uint,uint)
CAHDecDahliaHevc::getTileEndCTU(uint,uint)
CAHDecDahliaHevc::getTileIdxAbove(uint)
CAHDecDahliaHevc::getTileStartCTU(uint,uint)
CAHDecDahliaHevc::initPicture(uint,uint,bool)
CAHDecDahliaHevc::populateAvdWork(uint)
CAHDecDahliaHevc::populatePictureRegisters(void)
CAHDecDahliaHevc::populateSequenceRegisters(void)
CAHDecDahliaHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecDahliaHevc::populateSlices(uint)
CAHDecDahliaHevc::~CAHDecDahliaHevc()
CAHDecDahliaLgh::CAHDecDahliaLgh(CAVDLghDecoder *)
CAHDecDahliaLgh::DecodePicture(uint)
CAHDecDahliaLgh::allocWorkBuf_PPS(void *,void *)
CAHDecDahliaLgh::allocWorkBuf_SPS(void *)
CAHDecDahliaLgh::clearSegBuffer(void)
CAHDecDahliaLgh::freeWorkBuf_PPS(void)
CAHDecDahliaLgh::freeWorkBuf_SPS(void)
CAHDecDahliaLgh::getSWRStride(uint,uint,uint,uint)
CAHDecDahliaLgh::getTileEndCTU(uint,uint)
CAHDecDahliaLgh::getTileStartCTU(uint,uint)
CAHDecDahliaLgh::populateAvdWork(uint)
CAHDecDahliaLgh::populatePictureRegisters(void)
CAHDecDahliaLgh::populateTiles(void)
CAHDecDahliaLgh::~CAHDecDahliaLgh()
CAHDecLotusAvc::CAHDecLotusAvc(CAVDAvcDecoder *)
CAHDecLotusAvc::populatePictureRegisters(void)
CAHDecLotusAvc::populateSliceRegisters(AvcSliceRegisters *,int)
CAHDecLotusHevc::CAHDecLotusHevc(CAVDHevcDecoder *)
CAHDecLotusHevc::allocWorkBuf_PPS(void *,void *)
CAHDecLotusHevc::allocWorkBuf_SPS(void *)
CAHDecLotusHevc::freeWorkBuf_PPS(void)
CAHDecLotusHevc::freeWorkBuf_SPS(void)
CAHDecLotusHevc::populatePictureRegisters(void)
CAHDecLotusHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecLotusHevc::~CAHDecLotusHevc()
CAHDecLotusLgh::CAHDecLotusLgh(CAVDLghDecoder *)
CAHDecLotusLgh::DecodePicture(uint)
CAHDecLotusLgh::allocWorkBuf_PPS(void *,void *)
CAHDecLotusLgh::allocWorkBuf_SPS(void *)
CAHDecLotusLgh::freeWorkBuf_PPS(void)
CAHDecLotusLgh::populateAvdWork(uint)
CAHDecLotusLgh::populatePictureRegisters(void)
CAHDecLotusLgh::populateTileRegisters(LghTileRegisters *,sLghTileInfo_t *)
CAHDecLotusLgh::populateTiles(void)
CAHDecLotusLgh::~CAHDecLotusLgh()
CAHDecRoseHevc::CAHDecRoseHevc(CAVDHevcDecoder *)
CAHDecRoseHevc::allocWorkBuf_PPS(void *,void *)
CAHDecRoseHevc::allocWorkBuf_SPS(void *)
CAHDecRoseHevc::copyScalingList(ScalingLists &,avd_QtMatCoeff_t &,uint,hevc_scaling_list_data_t &)
CAHDecRoseHevc::freeWorkBuf_PPS(void)
CAHDecRoseHevc::freeWorkBuf_SPS(void)
CAHDecRoseHevc::getTileEndCTU(uint,uint)
CAHDecRoseHevc::getTileIdxAbove(uint)
CAHDecRoseHevc::getTileStartCTU(uint,uint)
CAHDecRoseHevc::initPicture(uint,uint,bool)
CAHDecRoseHevc::populateAvdWork(uint)
CAHDecRoseHevc::populatePictureRegisters(void)
CAHDecRoseHevc::populateSequenceRegisters(void)
CAHDecRoseHevc::populateSliceRegisters(SliceRegisters *,int)
CAHDecRoseHevc::populateSlices(uint)
CAHDecRoseHevc::~CAHDecRoseHevc()
CAHDecSalviaA0Avc::CAHDecSalviaA0Avc(CAVDAvcDecoder *)
CAHDecSalviaA0Avc::initPicture(uint,uint,bool)
CAHDecSalviaA0Avc::populateAvdWork(uint)
CAHDecSalviaA0Avc::populatePictureRegisters(void)
CAHDecSalviaA0Avc::populateSequenceRegisters(void)
CAHDecSalviaA0Avc::populateSlices(uint)
CAHDecSalviaA0Hevc::CAHDecSalviaA0Hevc(CAVDHevcDecoder *)
CAHDecSalviaA0Hevc::initPicture(uint,uint,bool)
CAHDecSalviaA0Hevc::populateAvdWork(uint)
CAHDecSalviaA0Hevc::populatePictureRegisters(void)
CAHDecSalviaA0Hevc::populateSequenceRegisters(void)
CAHDecSalviaA0Hevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecSalviaA0Hevc::populateSlices(uint)
CAHDecSalviaA0Lgh::CAHDecSalviaA0Lgh(CAVDLghDecoder *)
CAHDecSalviaA0Lgh::DecodePicture(uint)
CAHDecSalviaA0Lgh::allocWorkBuf_PPS(void *,void *)
CAHDecSalviaA0Lgh::allocWorkBuf_SPS(void *)
CAHDecSalviaA0Lgh::clearSegBuffer(void)
CAHDecSalviaA0Lgh::freeWorkBuf_PPS(void)
CAHDecSalviaA0Lgh::getSWRStride(uint,uint,uint,uint)
CAHDecSalviaA0Lgh::getTileEndCTU(uint,uint)
CAHDecSalviaA0Lgh::getTileStartCTU(uint,uint)
CAHDecSalviaA0Lgh::populateAvdWork(uint)
CAHDecSalviaA0Lgh::populatePictureRegisters(void)
CAHDecSalviaAvc::populatePictureRegisters(void)
CAHDecSalviaHevc::populatePictureRegisters(void)
CAHDecSalviaHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecSalviaLgh::allocWorkBuf_SPS(void *)
CAHDecSalviaLgh::populatePictureRegisters(void)
CAHDecViolaAvc::CAHDecViolaAvc(CAVDAvcDecoder *)
CAHDecViolaAvc::allocWorkBuf_PPS(void *,void *)
CAHDecViolaAvc::allocWorkBuf_SPS(void *)
CAHDecViolaAvc::freeWorkBuf_PPS(void)
CAHDecViolaAvc::freeWorkBuf_SPS(void)
CAHDecViolaAvc::getTileEndCTU(uint,uint)
CAHDecViolaAvc::getTileIdxAbove(uint)
CAHDecViolaAvc::getTileStartCTU(uint,uint)
CAHDecViolaAvc::initPicture(uint,uint,bool)
CAHDecViolaAvc::populateAvdWork(uint)
CAHDecViolaAvc::populateDARTAddr(uint)
CAHDecViolaAvc::populatePictureRegisters(void)
CAHDecViolaAvc::populateSequenceRegisters(void)
CAHDecViolaAvc::populateSliceRegisters(AvcSliceRegisters *,int)
CAHDecViolaAvc::populateSlices(uint)
CAHDecViolaAvc::~CAHDecViolaAvc()
CAHDecViolaHevc::CAHDecViolaHevc(CAVDHevcDecoder *)
CAHDecViolaHevc::allocWorkBuf_PPS(void *,void *)
CAHDecViolaHevc::allocWorkBuf_SPS(void *)
CAHDecViolaHevc::copyScalingList(HevcScalingLists &,HevcQtMatCoeff &,uint,hevc_scaling_list_data_t &)
CAHDecViolaHevc::freeWorkBuf_PPS(void)
CAHDecViolaHevc::freeWorkBuf_SPS(void)
CAHDecViolaHevc::getSWRStride(uint,uint,uint,uint)
CAHDecViolaHevc::getTileEndCTU(uint,uint)
CAHDecViolaHevc::getTileIdxAbove(uint)
CAHDecViolaHevc::getTileStartCTU(uint,uint)
CAHDecViolaHevc::initPicture(uint,uint,bool)
CAHDecViolaHevc::populateAvdWork(uint)
CAHDecViolaHevc::populateDARTAddr(uint)
CAHDecViolaHevc::populatePictureRegisters(void)
CAHDecViolaHevc::populateSequenceRegisters(void)
CAHDecViolaHevc::populateSliceRegisters(HevcSliceRegisters *,int)
CAHDecViolaHevc::populateSlices(uint)
CAHDecViolaHevc::~CAHDecViolaHevc()
CAHDecViolaLgh::CAHDecViolaLgh(CAVDLghDecoder *)
CAHDecViolaLgh::allocWorkBuf_SPS(void *)
CAHDecViolaLgh::populateDARTAddr(uint)
CAHDecViolaLgh::populatePictureRegisters(void)
CAVDAvcDecoder::CAVDAvcDecoder(void *,uint,bool)
CAVDAvcDecoder::DecodePicture(uint,uint,bool)
CAVDAvcDecoder::DpbMaxSize(sAvcSPS *)
CAVDAvcDecoder::GetSDataAddr(uint)
CAVDAvcDecoder::VAGetParams(uint,uint *)
CAVDAvcDecoder::VAMapPixelBuffer(int,uint,uint,bool,ulong long,ulong long)
CAVDAvcDecoder::VASetParams(uint,uint *)
CAVDAvcDecoder::VAStartDecode(uchar *,int)
CAVDAvcDecoder::VAStopDecode(void)
CAVDAvcDecoder::VAUnmapPixelBuffer(int,uint)
CAVDAvcDecoder::activatePS(sAvcSliceHeader *)
CAVDAvcDecoder::decodeGetRenderTargetRef(uint,uint,uint,_vsurface **)
CAVDAvcDecoder::getRefBufIndex(uint,uint)
CAVDAvcDecoder::getSDataAddr(uint)
CAVDAvcDecoder::initPicture(sAvcNaluHeader *,sAvcSPS *,sAvcSliceHeader *,sAvcPictureInfo *,bool)
CAVDAvcDecoder::insertFrame(sAvcPictureInfo *)
CAVDAvcDecoder::populateSnapshotStruct(int,int)
CAVDAvcDecoder::scanNalForEmulationPrevention(uchar *,uint,int)
CAVDAvcDecoder::~CAVDAvcDecoder()
CAVDDecoder::CAVDDecoder(void *,uint)
CAVDDecoder::allocAVDMemory(void *,uint,ulong,eAvdMemType,eAvdMapType,_avd_client_mem_info *,bool,bool,ulong long,ulong long)
CAVDDecoder::calcLumaChromaTileOffset(uint,uint,uint,uint,uint,uint *,uint *)
CAVDDecoder::calculateClearBytes(uint,uint,uint,uint,uint *,uint *)
CAVDDecoder::deallocAVDMemory(void *,_avd_client_mem_info *,bool)
CAVDDecoder::decrementSurfaceRefCount(uint)
CAVDDecoder::getDisplaySurfaceMemInfo(uint)
CAVDDecoder::getSurfaceMemInfo(uint)
CAVDDecoder::iterateSurfaceRefCount(uint)
CAVDDecoder::updateWorkStruct(uint)
CAVDHevcDecoder::CAVDHevcDecoder(void *,uint,bool)
CAVDHevcDecoder::DecodePicture(uint,uint,bool)
CAVDHevcDecoder::DpbMaxSize(hevc_sequence_parameter_set_t *)
CAVDHevcDecoder::GetSDataAddr(uint,ulong long *)
CAVDHevcDecoder::IsIrap(void)
CAVDHevcDecoder::VAGetIOSurfaceIDForBufferIndex(uint,uint)
CAVDHevcDecoder::VAGetParams(uint,uint *)
CAVDHevcDecoder::VAMapPixelBuffer(int,uint,uint,bool,ulong long,ulong long)
CAVDHevcDecoder::VASetParams(uint,uint *)
CAVDHevcDecoder::VAStartDecode(uchar *,int)
CAVDHevcDecoder::VAStopDecode(void)
CAVDHevcDecoder::VAUnmapPixelBuffer(int,uint)
CAVDHevcDecoder::allocAVDMem(_avd_client_mem_info *,ulong,eAvdMemType)
CAVDHevcDecoder::createDPB(hevc_sequence_parameter_set_t *,HevcPictureInfo *,int)
CAVDHevcDecoder::createRefPicList(hevc_picture_parameter_set_t *,hevc_slice_info *,HevcPictureInfo *)
CAVDHevcDecoder::decodeGetRenderTargetRef(uint,_vsurface **)
CAVDHevcDecoder::getDispFrameParams(hevc_frame_params *)
CAVDHevcDecoder::getSDataAddr(uint)
CAVDHevcDecoder::initPicture(hevc_nal_unit_header_t *,hevc_sequence_parameter_set_t *,hevc_slice_segment_header_t *,HevcPictureInfo *,bool)
CAVDHevcDecoder::insertFrame(HevcPictureInfo *)
CAVDHevcDecoder::isWPPCompliant(uint,uint)
CAVDHevcDecoder::populateSnapshotStruct(int,int)
CAVDHevcDecoder::~CAVDHevcDecoder()
CAVDLghDecoder::CAVDLghDecoder(void *,uint,bool)
CAVDLghDecoder::VADecodeFrame(uchar *,int,int,int,int,int,avd_seq_params *)
CAVDLghDecoder::VADisplaySurface(int)
CAVDLghDecoder::VAGetIOSurfaceIDForBufferIndex(uint,uint)
CAVDLghDecoder::VAGetParams(uint,uint *)
CAVDLghDecoder::VAIsSurfaceListIndexMapped(int,uint)
CAVDLghDecoder::VAMapPixelBuffer(int,uint,uint,bool,ulong long,ulong long)
CAVDLghDecoder::VAReleaseOutputSurface(int,uint)
CAVDLghDecoder::VASetParams(uint,uint *)
CAVDLghDecoder::VAStartDecode(uchar *,int)
CAVDLghDecoder::VAStopDecode(void)
CAVDLghDecoder::VAUnmapPixelBuffer(int,uint)
CAVDLghDecoder::allocAVDMem(_avd_client_mem_info *,ulong,eAvdMemType)
CAVDLghDecoder::calculateClearBytes(uint,uint)
CAVDLghDecoder::decodeGetRenderTarget(uint,_vsurface **,eAvd_pb_type)
CAVDLghDecoder::getTileAddr(uchar *)
CAVDLghDecoder::initPicture(void)
CAVDLghDecoder::insertFrame(lgh_frame_buffer *)
CAVDLghDecoder::populateSnapshotStruct(int,int)
CAVDLghDecoder::preparePicParms(void)
CAVDLghDecoder::~CAVDLghDecoder()
CAvdApComm::AVDDecodeAbort(uint)
CAvdApComm::AVDDecodeOneFrame(uchar *,uint,uint,bool)
CAvdApComm::AVDSetProperty(uint,uint,uint)
CAvdApComm::AVDStartSession(uint)
CAvdApComm::AVDStopSession(uint)
CAvdApComm::CAvdApComm(void *,CAvdRegisterIO *)
CAvdApComm::ConfigurePioHdr(void)
CAvdApComm::DisableM3InboxEmptyInterrupt(void)
CAvdApComm::EnableM3InboxEmptyInterrupt(void)
CAvdApComm::M3QReady4NewCmd(void)
CAvdApComm::PrepareM3DecodeCommand(void)
CAvdApComm::QueueAVDCommand(uCAvdCmd20 *)
CAvdApComm::ReadCommand(uCAvdCmd20 *)
CAvdApComm::ReadRegister32(uint)
CAvdApComm::ReadRegisterToBuffer(uint,uint *,uint)
CAvdApComm::ReceiveCommand(void)
CAvdApComm::SendCommandsToMCPU(uint)
CAvdApComm::WriteBufferToRegister(uint,uint *,uint)
CAvdApComm::WriteRegister32(uint,uint)
CAvdApComm::restoreM3context(bool)
CAvdApComm::saveM3context(void)
CAvdApComm::writeNCheckTunables(tunable_configuration_t const*,int,bool)
CAvdApComm::~CAvdApComm()
CAvdApCommClary::CAvdApCommClary(void *,CAvdRegisterIO *)
CAvdApCommClary::ConfigurePioHdrAvc(void)
CAvdApCommClary::ConfigurePioHdrHevc(void)
CAvdApCommClary::ConfigurePioHdrLgh(void)
CAvdApCommClary::PrepareM3DecodeCommandAvc(void)
CAvdApCommClary::PrepareM3DecodeCommandHevc(void)
CAvdApCommClary::PrepareM3DecodeCommandLgh(void)
CAvdApCommClary::allocateAPCommFrameParams(void)
CAvdApCommClary::initAvdWrap(void)
CAvdApCommClary::loadTunables(bool)
CAvdApCommClary::mcpuSaveContext(void)
CAvdApCommClary::receiveMessage(uint &,uint)
CAvdApCommClover::CAvdApCommClover(void *,CAvdRegisterIO *)
CAvdApCommClover::ConfigureDMA(void)
CAvdApCommClover::ConfigurePioHdrAvc(void)
CAvdApCommClover::ConfigurePioHdrHevc(void)
CAvdApCommClover::ConfigurePioHdrLgh(void)
CAvdApCommClover::PrepareM3DecodeCommandAvc(void)
CAvdApCommClover::PrepareM3DecodeCommandHevc(void)
CAvdApCommClover::PrepareM3DecodeCommandLgh(void)
CAvdApCommClover::initAvdWrap(void)
CAvdApCommClover::mcpuSaveContext(void)
CAvdApCommClover::receiveMessage(uint &,uint)
CAvdApCommClover::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommClover::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdApCommDahlia::CAvdApCommDahlia(void *,CAvdRegisterIO *)
CAvdApCommDahlia::ConfigureDMA(void)
CAvdApCommDahlia::ConfigurePioHdrAvc(void)
CAvdApCommDahlia::ConfigurePioHdrHevc(void)
CAvdApCommDahlia::ConfigurePioHdrLgh(void)
CAvdApCommDahlia::PrepareM3DecodeCommandAvc(void)
CAvdApCommDahlia::PrepareM3DecodeCommandHevc(void)
CAvdApCommDahlia::PrepareM3DecodeCommandLgh(void)
CAvdApCommDahlia::allocateAPCommFrameParams(void)
CAvdApCommDahlia::initAvdWrap(void)
CAvdApCommDahlia::loadTunables(bool)
CAvdApCommDahlia::mcpuSaveContext(void)
CAvdApCommDahlia::receiveMessage(uint &,uint)
CAvdApCommDahlia::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommDahlia::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdApCommLotus::CAvdApCommLotus(void *,CAvdRegisterIO *)
CAvdApCommLotus::ConfigureDMA(void)
CAvdApCommLotus::ConfigurePioHdrAvc(void)
CAvdApCommLotus::ConfigurePioHdrHevc(void)
CAvdApCommLotus::ConfigurePioHdrLgh(void)
CAvdApCommLotus::PrepareM3DecodeCommandAvc(void)
CAvdApCommLotus::PrepareM3DecodeCommandHevc(void)
CAvdApCommLotus::PrepareM3DecodeCommandLgh(void)
CAvdApCommLotus::allocateAPCommFrameParams(void)
CAvdApCommLotus::initAvdWrap(void)
CAvdApCommLotus::loadTunables(bool)
CAvdApCommLotus::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommLotus::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdApCommRose::CAvdApCommRose(void *,CAvdRegisterIO *)
CAvdApCommRose::ConfigurePioHdrHevc(void)
CAvdApCommRose::PrepareM3DecodeCommandHevc(void)
CAvdApCommRose::initAvdWrap(void)
CAvdApCommRose::mcpuSaveContext(void)
CAvdApCommRose::receiveMessage(uint &,uint)
CAvdApCommRose::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommRose::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdApCommSalviaA0::CAvdApCommSalviaA0(void *,CAvdRegisterIO *)
CAvdApCommSalviaA0::ConfigureDMA(void)
CAvdApCommSalviaA0::ConfigurePioHdrAvc(void)
CAvdApCommSalviaA0::ConfigurePioHdrHevc(void)
CAvdApCommSalviaA0::ConfigurePioHdrLgh(void)
CAvdApCommSalviaA0::PrepareM3DecodeCommandAvc(void)
CAvdApCommSalviaA0::PrepareM3DecodeCommandHevc(void)
CAvdApCommSalviaA0::PrepareM3DecodeCommandLgh(void)
CAvdApCommSalviaA0::mcpuSaveContext(void)
CAvdApCommSalviaA0::receiveMessage(uint &,uint)
CAvdApCommSalviaA0::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommSalviaA0::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdApCommViola::CAvdApCommViola(void *,CAvdRegisterIO *)
CAvdApCommViola::ConfigureDMA(void)
CAvdApCommViola::ConfigurePioHdrAvc(void)
CAvdApCommViola::ConfigurePioHdrHevc(void)
CAvdApCommViola::ConfigurePioHdrLgh(void)
CAvdApCommViola::PrepareM3DecodeCommandAvc(void)
CAvdApCommViola::PrepareM3DecodeCommandHevc(void)
CAvdApCommViola::PrepareM3DecodeCommandLgh(void)
CAvdApCommViola::mcpuSaveContext(void)
CAvdApCommViola::sendAbortCmd(uCAvdCmd20 *)
CAvdApCommViola::sendAvdCmd(uCAvdCmd20 *,uint)
CAvdMcpu::CAvdMcpu(uint,CAvdRegisterIO *)
CAvdMcpu::ReadRegister32(uint)
CAvdMcpu::WriteBufferToRegister(uint,uint *,uint)
CAvdMcpu::WriteRegister32(uint,uint)
CAvdMcpu::enableM3Int(bool,uint,bool)
CAvdMcpu::init(bool)
CAvdMcpu::loadFirmwareImage(void)
CAvdMcpu::sendCmd(uint,uint)
CAvdMcpu::start(void)
CAvdMcpuClary::CAvdMcpuClary(uint,CAvdRegisterIO *)
CAvdMcpuClover::CAvdMcpuClover(uint,CAvdRegisterIO *)
CAvdMcpuClover::EnableMailboxInterrupts(void)
CAvdMcpuClover::IsMailboxFull(uint)
CAvdMcpuClover::sendCmd(uint,uint)
CAvdMcpuClover::start(void)
CAvdMcpuDahlia::CAvdMcpuDahlia(uint,CAvdRegisterIO *)
CAvdMcpuRose::CAvdMcpuRose(uint,CAvdRegisterIO *)
CAvdMcpuSalviaA0::CAvdMcpuSalviaA0(uint,CAvdRegisterIO *)
CAvdMcpuSalviaA0::start(void)
CAvdWrapCtrlClary::CAvdWrapCtrlClary(uint *,IOService *,AVDDart *,uint)
CAvdWrapCtrlClary::DeviceInit(void *)
CAvdWrapCtrlClary::DevicePwrOn(void *)
CAvdWrapCtrlClary::Idle(bool)
CAvdWrapCtrlClary::PwmReset(void)
CAvdWrapCtrlClary::ReadRegister32(uint)
CAvdWrapCtrlClary::StatusLogging(int)
CAvdWrapCtrlClary::WriteRegister32(uint,uint)
CAvdWrapCtrlClary::enableMCDataStrm(uint)
CAvdWrapCtrlClary::getDSID(void)
CAvdWrapCtrlClary::watiForOutstandingAXITransaction(void)
CAvdWrapCtrlClary::~CAvdWrapCtrlClary()
CAvdWrapCtrlClover::CAvdWrapCtrlClover(uint *,IOService *,AVDDart *,uint,e_CloverSocType)
CAvdWrapCtrlClover::DeviceInit(void *)
CAvdWrapCtrlClover::PwmReset(void)
CAvdWrapCtrlClover::ReadRegister32(uint)
CAvdWrapCtrlClover::WriteRegister32(uint,uint)
CAvdWrapCtrlClover::disableMCDataStrm(void)
CAvdWrapCtrlClover::enableMCDataStrm(uint)
CAvdWrapCtrlClover::watiForOutstandingAXITransaction(void)
CAvdWrapCtrlClover::~CAvdWrapCtrlClover()
CAvdWrapCtrlDahlia::CAvdWrapCtrlDahlia(uint *,IOService *,AVDDart *,uint)
CAvdWrapCtrlDahlia::CheckDartStatus(bool)
CAvdWrapCtrlDahlia::PwmReset(void)
CAvdWrapCtrlDahlia::disableMCDataStrm(void)
CAvdWrapCtrlDahlia::enableMCDataStrm(uint)
CAvdWrapCtrlDahlia::watiForOutstandingAXITransaction(void)
CAvdWrapCtrlDahlia::~CAvdWrapCtrlDahlia()
CAvdWrapCtrlLotus::DeviceInit(void *)
CAvdWrapCtrlLotus::DevicePwrOn(void *)
CAvdWrapCtrlLotus::watiForOutstandingAXITransaction(void)
CAvdWrapCtrlRose::CAvdWrapCtrlRose(uint *,uint,e_RoseSocType)
CAvdWrapCtrlRose::CheckDartStatus(bool)
CAvdWrapCtrlRose::DeviceInit(void *)
CAvdWrapCtrlRose::DevicePwrOn(void *)
CAvdWrapCtrlRose::HReset(void)
CAvdWrapCtrlRose::Idle(bool)
CAvdWrapCtrlRose::PwmReset(void)
CAvdWrapCtrlRose::ReadRegister32(uint)
CAvdWrapCtrlRose::WriteRegister32(uint,uint)
CAvdWrapCtrlSalviaA0::enableMCDataStrm(uint)
CAvdWrapCtrlViola::CAvdWrapCtrlViola(uint *,IOService *,AVDDart *,uint)
CAvdWrapCtrlViola::CheckDartStatus(bool)
CAvdWrapCtrlViola::DeviceInit(void *)
CAvdWrapCtrlViola::DevicePwrOn(void *)
CAvdWrapCtrlViola::StatusLogging(int)
CAvdWrapCtrlViola::disableMCDataStrm(void)
CAvdWrapCtrlViola::enableMCDataStrm(uint)
CAvdWrapCtrlViola::watiForOutstandingAXITransaction(void)
CCCapture::attach(IOService *)
CCCapture::detach(IOService *)
CCCapture::free(void)
CCCapture::initWithProvider(IOService *)
CCCapture::withProvider(IOService *)
CCDataPipe::capture(CCTimestamp *,char const*)
CCDataPipe::capture(CCTimestamp,char const*)
CCDataPipe::clientClose(void)
CCDataPipe::dequeueBlob(CCDataPipeBlob **)
CCDataPipe::enqueueBlob(CCDataPipeBlob *)
CCDataPipe::free(void)
CCDataPipe::freeResources(void)
CCDataPipe::initWithOwnerNameCapacity(IOService *,char const*,char const*,CCPipeOptions const*)
CCDataPipe::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
CCDataPipe::start(IOService *)
CCDataPipe::withOwnerNameCapacity(IOService *,char const*,char const*,CCPipeOptions const*)
CCDataPipeBlob::copyBufferToUser(ulong long,ulong,ulong)
CCDataPipeBlob::free(void)
CCDataPipeBlob::init(void)
CCDataPipeBlobOD::getBuffer(void)
CCDataPipeBlobOD::getBufferLength(void)
CCDataPipeBlobOS::free(void)
CCDataPipeBlobOS::getBuffer(void)
CCDataPipeBlobOS::getBufferLength(void)
CCDataPipeBlobOS::init(void)
CCDataPipeUserClient::capture(CCPipeUserClientCapture const*)
CCDataPipeUserClient::clientClose(void)
CCDataPipeUserClient::close(void)
CCDataPipeUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
CCDataPipeUserClient::free(void)
CCDataPipeUserClient::freeResources(void)
CCDataPipeUserClient::initWithTask(task *,void *,uint,OSDictionary *)
CCDataPipeUserClient::open(void)
CCDataPipeUserClient::profileLoaded(void)
CCDataPipeUserClient::profileRemoved(void)
CCDataPipeUserClient::queryMetaData(CCDataPipeUserClientMap *)
CCDataPipeUserClient::queryMetaDataDispatch(CCDataPipeUserClient*,void *,IOExternalMethodArguments *)
CCDataPipeUserClient::readData(CCDataPipeUserClientMap *)
CCDataPipeUserClient::readDataDispatch(CCDataPipeUserClient*,void *,IOExternalMethodArguments *)
CCDataPipeUserClient::start(IOService *)
CCDataPipeUserClient::wakeupPipeUserClient(CCDataPipeUserClient*,void *,IOExternalMethodArguments *)
CCDataSession::free(void)
CCDataSession::initWithNameAndTimestamp(char const*,CCTimestamp)
CCDataSession::withNameAndTimestamp(char const*,CCTimestamp)
CCDataStream::closeSession(CCDataSession *)
CCDataStream::free(void)
CCDataStream::initWithPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCDataStream::saveData(char const*,OSData *,void (*)(OSObject *,int,void *),OSObject *,CCDataSession *)
CCDataStream::saveData(char const*,OSString *,void (*)(OSObject *,int,void *),OSObject *,CCDataSession *)
CCDataStream::shouldLog(void)
CCDataStream::start(IOService *)
CCDataStream::withPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCFaultReport::addFile(OSString *,OSObject *)
CCFaultReport::appendSummary(char const*)
CCFaultReport::createAddFileRecord(void)
CCFaultReport::createFaultReportStateString(void)
CCFaultReport::free(void)
CCFaultReport::freeResources(void)
CCFaultReport::getActionString(char *,uint)
CCFaultReport::getTimestamp_ns(void)
CCFaultReport::initWithFaultInfo(int,char const*,void *,uint,char const*,char const*,uint)
CCFaultReport::needCaptureLog(void)
CCFaultReport::saveFileName(char const*)
CCFaultReport::triggerCoreCapture(CCDataStream *,OSSet *,bool)
CCFaultReport::withFaultInfo(int,char const*,uint,char const*,char const*,uint,void *)
CCFaultReporter::addOwner(char const*)
CCFaultReporter::attach(IOService *)
CCFaultReporter::collectImmediateData(CCFaultReport *)
CCFaultReporter::completeReport(CCFaultReport *)
CCFaultReporter::createHistoryString(void)
CCFaultReporter::detach(IOService *)
CCFaultReporter::dumpClientListAndHistory(void)
CCFaultReporter::enableCollectDeferredFaultData(bool)
CCFaultReporter::enableCollectImmediateFaultData(bool)
CCFaultReporter::enableCoreCapture(bool)
CCFaultReporter::free(void)
CCFaultReporter::freeResources(void)
CCFaultReporter::getCountOfLastLoggedAndMatchedFaults(void)
CCFaultReporter::induceErrorCode(int,char const*)
CCFaultReporter::initWithStreamWorkloop(CCDataStream *,IOWorkLoop *)
CCFaultReporter::processFault(CCFaultReport *)
CCFaultReporter::recordFault(CCFaultReport *)
CCFaultReporter::registerCallbacks(CCFaultReporter::register_callback_t *,uint,OSObject *,char const*)
CCFaultReporter::reportFault(uint,char const*,uint,char const*,OSDictionary *,int,char const*,...)
CCFaultReporter::reportFaultWithInfo(int,char const*,uint,char const*,char const*,uint,OSDictionary *)
CCFaultReporter::setEnable(bool)
CCFaultReporter::spinDeferredCapture(IOTimerEventSource *)
CCFaultReporter::unregisterCallbacks(OSObject *)
CCFaultReporter::updateLastFaultReporterEventCode(char const*,...)
CCFaultReporter::updateRegistery(void)
CCFaultReporter::withStreamWorkloop(CCDataStream *,IOWorkLoop *)
CCIOReporterDataStream::addInterestDictToStreamArray(OSDictionary *,ulong long)
CCIOReporterDataStream::addSubscriptionForProvider(IOService *,ulong long *)
CCIOReporterDataStream::configureInterests(IOReportInterestList *,ulong long *)
CCIOReporterDataStream::createIOReporterInterestArrayForSubscription(ulong long)
CCIOReporterDataStream::createIOReporterRawDataForSubscription(ulong long)
CCIOReporterDataStream::free(void)
CCIOReporterDataStream::freeResources(void)
CCIOReporterDataStream::init(OSDictionary *)
CCIOReporterDataStream::initWithPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCIOReporterDataStream::start(IOService *)
CCIOReporterDataStream::withPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCIOReporterHub::free(void)
CCIOReporterHub::getReportBufferSize(OSDictionary *,int *)
CCIOReporterHub::getValues(OSDictionary *,IOBufferMemoryDescriptor *)
CCIOReporterHub::init(void)
CCIOReporterHub::with(void)
CCIOReporterLogStream::addInterestDictToStreamArray(OSDictionary *,ulong long)
CCIOReporterLogStream::addSubscriptionForProvider(IOService *,ulong long *)
CCIOReporterLogStream::addSubscriptionForThisReporter(IOReporter *,char const*,char const*,ulong long *,IOService *)
CCIOReporterLogStream::configureInterests(IOReportInterestList *,ulong long *)
CCIOReporterLogStream::free(void)
CCIOReporterLogStream::freeResources(void)
CCIOReporterLogStream::init(OSDictionary *)
CCIOReporterLogStream::initWithPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCIOReporterLogStream::logIOReporterSubscription(ulong long)
CCIOReporterLogStream::logIOReporterSubscriptions(OSArray *)
CCIOReporterLogStream::mergeSubscriptionsIntoNewSubscription(ulong long,ulong long,ulong long *)
CCIOReporterLogStream::removeSubscription(ulong long)
CCIOReporterLogStream::start(IOService *)
CCLogPipe::capture(CCTimestamp,char const*)
CCLogPipe::clientClose(void)
CCLogPipe::findStream(char const*)
CCLogPipe::free(void)
CCLogPipe::freeLogBuffer(ulong)
CCLogPipe::freeResources(void)
CCLogPipe::freeScratchBuffers(void)
CCLogPipe::getPolicy(CCLogPolicy *)
CCLogPipe::getScratchBuffer(ulong,ulong *,uint)
CCLogPipe::getUserSpaceNotificationPort(ulong long *)
CCLogPipe::initScratchBuffers(ulong,ulong)
CCLogPipe::isValidCCLogMetaData(CCLogMetadata volatile*)
CCLogPipe::log(CCStreamLogLevel,char const*,ulong long,ulong long,CCLogState)
CCLogPipe::log(uint,CCStreamLogLevel,char const*,ulong long,bool,bool)
CCLogPipe::log(uint,char const*,ulong long)
CCLogPipe::log(uint,char const*,ulong long,ulong long,ulong long)
CCLogPipe::mapPipe(task *,CCLogPipeMap *)
CCLogPipe::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
CCLogPipe::notifyTimeout(IOTimerEventSource *)
CCLogPipe::notifyUserSpace(void)
CCLogPipe::profileLoaded(void)
CCLogPipe::profileRemoved(void)
CCLogPipe::putScratchBuffer(char *,int)
CCLogPipe::reserveRingEntry(ulong long,uint,int *)
CCLogPipe::resizeScratchBuffer(char *,ulong,ulong *)
CCLogPipe::setNotifyTimeout(uint)
CCLogPipe::setPolicy(CCLogPolicy)
CCLogPipe::setStreamConsoleLogFlags(char const*,ulong long)
CCLogPipe::setStreamConsoleLogLevel(char const*,CCStreamLogLevel)
CCLogPipe::setStreamLogFlags(char const*,ulong long)
CCLogPipe::setStreamLogLevel(char const*,CCStreamLogLevel)
CCLogPipe::setWatermarkLevelToNotify(ulong)
CCLogPipe::start(IOService *)
CCLogPipe::unmapPipe(void)
CCLogPipe::updateStreamConsoleLogFlags(char const*,char const*,uint)
CCLogPipe::withOwnerNameCapacity(IOService *,char const*,char const*,CCPipeOptions const*)
CCLogPipeUserClient::capture(CCPipeUserClientCapture const*)
CCLogPipeUserClient::close(void)
CCLogPipeUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
CCLogPipeUserClient::free(void)
CCLogPipeUserClient::initWithTask(task *,void *,uint,OSDictionary *)
CCLogPipeUserClient::mapPipe(CCLogPipeMap *)
CCLogPipeUserClient::open(void)
CCLogPipeUserClient::profileLoaded(void)
CCLogPipeUserClient::profileRemoved(void)
CCLogPipeUserClient::setPipeNotifyTimeout(CCLogPipeUserClientNotifyTimeout const*)
CCLogPipeUserClient::setPipePolicy(CCLogPipeUserClientPolicy const*)
CCLogPipeUserClient::setPipeStreamConsoleLogFlags(CCLogPipeUserClientStreamLogFlags const*)
CCLogPipeUserClient::setPipeStreamConsoleLogLevel(CCLogPipeUserClientStreamLogLevel const*)
CCLogPipeUserClient::setPipeStreamLogFlags(CCLogPipeUserClientStreamLogFlags const*)
CCLogPipeUserClient::setPipeStreamLogLevel(CCLogPipeUserClientStreamLogLevel const*)
CCLogPipeUserClient::setPipeWatermarkLevel(CCLogPipeUserClientWatermarkLevel const*)
CCLogPipeUserClient::unmapPipe(void)
CCLogPipeUserClient::updatePipeStreamConsoleLogFlags(CCLogPipeUserClientStreamLogFlagsByName const*)
CCLogPipeUserClient::updatePipeStreamLogFlags(CCLogPipeUserClientStreamLogFlagsByName const*)
CCLogPipeUserClient::wakeupPipeUserClient(CCLogPipeUserClient*,void *,IOExternalMethodArguments *)
CCLogPipe__initWithOwnerNameCapacity_IOService___char_const___char_const___CCPipeOptions_const
CCLogStream::clearConsoleLogFlag(ulong long)
CCLogStream::clearConsoleLogFlagByName(char const*)
CCLogStream::clearLogFlag(ulong long)
CCLogStream::clearLogFlagByName(char const*)
CCLogStream::findFlagByName(char const*)
CCLogStream::free(void)
CCLogStream::getLevel(void)
CCLogStream::log(CCStreamLogLevel,char const*,...)
CCLogStream::log(ulong long,__mbuf *,ulong,ulong,ulong,void *,ulong,void *,ulong)
CCLogStream::log(ulong long,uchar *,ulong,ulong,ulong,void *,ulong,void *,ulong)
CCLogStream::log(ulong long,uchar *,ulong,void *,ulong)
CCLogStream::logAlert(char const*,...)
CCLogStream::logAlertIf(ulong long,char const*,...)
CCLogStream::logCrit(char const*,...)
CCLogStream::logCritIf(ulong long,char const*,...)
CCLogStream::logEmergency(char const*,...)
CCLogStream::logHeaderAndMbuf(__mbuf *,ulong,ulong,ulong,void *,ulong)
CCLogStream::logHeaderAndMbufIf(ulong long,__mbuf *,ulong,ulong,ulong,void *,ulong)
CCLogStream::logHeaderAndMbufIf(ulong long,__mbuf *,ulong,ulong,ulong,void *,ulong,char const*,...)
CCLogStream::logIf(CCStreamLogLevel,ulong long,char const*,...)
CCLogStream::logIfv(CCStreamLogLevel,ulong long,char const*,char *)
CCLogStream::logInfo(char const*,...)
CCLogStream::logInfoIf(ulong long,char const*,...)
CCLogStream::logNotice(char const*,...)
CCLogStream::logNoticeIf(ulong long,char const*,...)
CCLogStream::logWarn(char const*,...)
CCLogStream::logWarnIf(ulong long,char const*,...)
CCLogStream::profileLoaded(void)
CCLogStream::profileRemoved(void)
CCLogStream::setConsoleFlags(ulong long)
CCLogStream::setConsoleLevel(CCStreamLogLevel)
CCLogStream::setConsoleLogFlag(ulong long)
CCLogStream::setConsoleLogFlagByName(char const*)
CCLogStream::setFlags(ulong long)
CCLogStream::setIORegistry(void)
CCLogStream::setLevel(CCStreamLogLevel)
CCLogStream::setLogFlag(ulong long)
CCLogStream::setLogFlagByName(char const*)
CCLogStream::shouldLog(CCStreamLogLevel,ulong long)
CCLogStream::shouldLog(ulong long)
CCLogStream::start(IOService *)
CCLogStream::withPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCPipe::addCapture(void)
CCPipe::capturePipesWithOwner(char const*,CCTimestamp,char const*)
CCPipe::createReportSet(void)
CCPipe::createReportersAndLegend(char const*)
CCPipe::detach(IOService *)
CCPipe::ensureValidTimestamp(CCTimestamp *)
CCPipe::free(void)
CCPipe::profileLoaded(void)
CCPipe::profileRemoved(void)
CCPipe::publishStatistics(void)
CCPipe::removeCapture(void)
CCPipe::startPipe(void)
CCPipe::stopPipe(void)
CCPipe::updateReport(IOReportChannelList *,uint,void *,void *)
CCPipe::withOwnerNameCapacity(IOService *,char const*,char const*,CCPipeOptions const*)
CCPipeUserClient::free(void)
CCPipeUserClient::freeResources(void)
CCPipeUserClient::initWithTask(task *,void *,uint,OSDictionary *)
CCPipeUserClient::registerNotificationPort(ipc_port *,uint,uint)
CCPipeUserClient::sendDataAvailableNotification(void)
CCPipeUserClient::start(IOService *)
CCPipeUserClient::wakeupUserClient(void)
CCStream::attach(IOService *)
CCStream::createReportSet(void)
CCStream::createReportersAndLegend(void)
CCStream::free(void)
CCStream::initWithPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CCStream::withPipeAndName(CCPipe *,char const*,CCStreamOptions const*)
CEQueryContextToOSDictionary(CEQueryContext *)
CHECKPOINT
CHECKPOINT_0
CLCLSuperset::operator=(CLCLSuperset&&)
CPriorityQueueClover::CPriorityQueueClover(void *,CAvdRegisterIO *)
CPriorityQueueClover::createApCommObject(void *,CAvdRegisterIO *)
CPriorityQueueClover::isVPAvailableForDecodeCmd(uchar *,uint,uint)
CPriorityQueueClover::~CPriorityQueueClover()
CPriorityQueueDahlia::CPriorityQueueDahlia(void *,CAvdRegisterIO *)
CPriorityQueueDahlia::createApCommObject(void *,CAvdRegisterIO *)
CPriorityQueueDahlia::isVPAvailableForDecodeCmd(uchar *,uint,uint)
CPriorityQueueLotus::CPriorityQueueLotus(void *,CAvdRegisterIO *)
CPriorityQueueLotus::createApCommObject(void *,CAvdRegisterIO *)
CPriorityQueueLotus::isVPAvailableForDecodeCmd(uchar *,uint,uint)
CPriorityQueueRose::CPriorityQueueRose(void *,CAvdRegisterIO *)
CPriorityQueueRose::createApCommObject(void *,CAvdRegisterIO *)
CPriorityQueueRose::isVPAvailableForDecodeCmd(uchar *,uint,uint)
CPriorityQueueViola::CPriorityQueueViola(void *,CAvdRegisterIO *)
CPriorityQueueViola::createApCommObject(void *,CAvdRegisterIO *)
CRandomGeneratorForKernel::Init(uint)
CRandomGeneratorForKernel::NormalRand(float)
CRandomGeneratorForKernel::UniformRand(void)
CS35L27Helper::updateASPChannelEnableRegValue(bool,uint,bool,uint &,uint &)
CS35L27Helper::updateASPChannelLocationRegValue(bool,uint,uint,uint &,uint &,uint &)
CS35L27Helper::updateASPChannelWidthRegValue(bool,uint,uint,uint &,uint &)
CS35L27Helper::updateAmpPCMControlRegValue(ushort,uchar,uchar,uchar,uint &,uint &)
CachedUserContext::free(void)
CachedUserContext::initWithServiceAndUserID(IOBiometricService *,uint)
CalibrationChainTupleWithXBand::read(uchar const*)
CheckDictionaryForReservedProperty(char const*,OSDictionary *,OSSymbol const*)
CheckDictionaryForReservedProperty(char const*,OSDictionary *,OSSymbol const*)
CheckDictionaryForReservedProperty(char const*,OSDictionary *,char const*)
ClampToLimit::operator()(double)
ClampToLimit::~ClampToLimit()
ClientEntity::reset(void)
ClientEntity::setThermalPowerBudget(DetailedThermalBudget *)
ClientObject::copyProperty(char const*)
ClientObject::free(void)
ClientObject::init(void)
CompareKey(OSString *,IORegistryEntry const*,OSSymbol const*,OSString **)
CompressedFile::CompressedFile(FileCtx *)
CompressedFile::readRsrcData(void *,ulong,long long,int *)
ConnectionWatchdog::endConnection(void)
ConnectionWatchdog::free(void)
ConnectionWatchdog::init(AUC *,AULUpstreamFlavor)
ConnectionWatchdog::instantiate(AUC *,AULUpstreamFlavor)
ConnectionWatchdog::messageTimerEnable_gated(bool)
ConnectionWatchdog::setMessageTimerThresholdMS_gated(uint)
ConnectionWatchdog::timer_handler_gated(void *,void *,void *)
ConnectionWatchdog::upstreamConnectionGetMessage(void)
ConnectionWatchdog::upstreamConnectionGetStatusFromAULFlags(uint,uint *,bool *)
ConnectionWatchdog::upstreamConnectionSendMessage(void)
ConnectionWatchdog::upstreamConnectionSetStatus(uint,bool,uint,bool)
ContrastEngamma::ContrastEngamma(float,IOMFB::IOFBSAGammaLUT::Evaluator *,bool)
ContrastEngamma::operator()(double)
CopyConsoleUser(uint)
CoreAnalyticsHub::analyticsSendEventLazy(OSString *,OSObject *)
CoreAnalyticsHub::close(IOService *,uint)
CoreAnalyticsHub::createReporters(void)
CoreAnalyticsHub::ensureTimerIsRunning(void)
CoreAnalyticsHub::free(void)
CoreAnalyticsHub::getIndexForEventName(OSString *)
CoreAnalyticsHub::handleDemoTimerExpiry(IOTimerEventSource *)
CoreAnalyticsHub::handleNagTimerExpiry(IOTimerEventSource *)
CoreAnalyticsHub::isClientConnected(void)
CoreAnalyticsHub::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
CoreAnalyticsHub::publishLegend(void)
CoreAnalyticsHub::sendUpEventAndPayload(OSString *,OSObject *)
CoreAnalyticsHub::serializePayload(OSObject *,OSSerialize *,ulong *)
CoreAnalyticsHub::setClient(CoreAnalyticsUserClient *)
CoreAnalyticsHub::setFieldChannel(char const*,long long)
CoreAnalyticsHub::setupNewUserClient(task *,void *,uint,OSDictionary *,IOUserClient *)
CoreAnalyticsHub::start(IOService *)
CoreAnalyticsMessenger::attach(IOService *)
CoreAnalyticsMessenger::detach(IOService *)
CoreAnalyticsMessenger::free(void)
CoreAnalyticsMessenger::initWithProvider(IOService *)
CoreAnalyticsMessenger::startMessages(void)
CoreAnalyticsMessenger::withProvider(IOService *)
CoreAnalyticsPipe::enqueueEventAndPayload(OSString *,OSObject *)
CoreAnalyticsPipe::free(void)
CoreAnalyticsPipe::initWithParams(CoreAnalyticsPipe::Params)
CoreAnalyticsPipe::withParams(CoreAnalyticsPipe::Params)
CoreAnalyticsTestUserClient::clientClose(void)
CoreAnalyticsTestUserClient::clientDied(void)
CoreAnalyticsTestUserClient::didTerminate(IOService *,uint,bool *)
CoreAnalyticsTestUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
CoreAnalyticsTestUserClient::free(void)
CoreAnalyticsTestUserClient::initWithTask(task *,void *,uint,OSDictionary *)
CoreAnalyticsTestUserClient::start(IOService *)
CoreAnalyticsTestUserClient::stop(IOService *)
CoreAnalyticsUserClient::checkEntitlement(task *)
CoreAnalyticsUserClient::clientClose(void)
CoreAnalyticsUserClient::clientDied(void)
CoreAnalyticsUserClient::didTerminate(IOService *,uint,bool *)
CoreAnalyticsUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
CoreAnalyticsUserClient::free(void)
CoreAnalyticsUserClient::goto_configureFilter(CoreAnalyticsUserClient*,void *,IOExternalMethodArguments *)
CoreAnalyticsUserClient::initWithTask(task *,void *,uint,OSDictionary *)
CoreAnalyticsUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
CoreAnalyticsUserClient::start(IOService *)
CoreAnalyticsUserClient::stop(IOService *)
CoreAnalyticsUserClient__clientMemoryForType_unsigned_int__unsigned_int___IOMemoryDescriptor
CreateDeviceUsagePairFromElement(IOHIDElementPrivate *)
CtrlMailboxHandler::ack_cmd_gated(uint)
CtrlMailboxHandler::emergency_shutdown(void)
CtrlMailboxHandler::eventq_callback_notify_gated(uint)
CtrlMailboxHandler::eventq_callback_notify_gated(uint)::$_1::__invoke(void *,void *,void *,void *)
CtrlMailboxHandler::free(void)
CtrlMailboxHandler::inbox_written_callback(uint)
CtrlMailboxHandler::init(IOMFB::M3Hal *,IOMFB::UPIOSvcProxy *,uint,IOMFB::AppleRegisterStream *)
CtrlMailboxHandler::outbox_read_callback(uint)
CtrlMailboxHandler::set_event_mask(uint)
CurveConvolver::operator()(double)
CurveConvolver::~CurveConvolver()
CurveType2::operator()(double)
CurveType4::operator()(double)
DARTErrorHandlerCallback(void *,IODARTErrorInfo const*)
DCPAVSACController::start(IOService *)
DEBUG_PrintEncoderSession(_S_AVE_Client *,uint,uint,int)
DEBUG_PrintEncoderSessionAVC(_S_AVE_Client *,uint,uint,int)
DEBUG_PrintEncoderSessionHEVC(_S_AVE_Client *,uint,uint,int)
DIControllerGlobals::DIControllerGlobals(void)
DIControllerGlobals::~DIControllerGlobals()
DIDeviceCreatorUserClient::CreateDevice(OSObject *,void *,IOExternalMethodArguments *)
DIDeviceCreatorUserClient::clientClose(void)
DIDeviceCreatorUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
DIDeviceCreatorUserClient::free(void)
DIDeviceCreatorUserClient::initWithTask(task *,void *,uint)
DIDeviceCreatorUserClient::message(uint,IOService *,void *)
DIDeviceCreatorUserClient::start(IOService *)
DIDeviceCreatorUserClient::stop(IOService *)
DIDeviceIOUserClient::AllocPortsArray(OSObject *,void *,IOExternalMethodArguments *)
DIDeviceIOUserClient::Complete(OSObject *,void *,IOExternalMethodArguments *)
DIDeviceIOUserClient::Connect(OSObject *,void *,IOExternalMethodArguments *)
DIDeviceIOUserClient::boostMessage(uint,thread_attr_for_ipc_propagation *)
DIDeviceIOUserClient::clientClose(void)
DIDeviceIOUserClient::didTerminate(IOService *,uint,bool *)
DIDeviceIOUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
DIDeviceIOUserClient::findNotificationPort(uint)
DIDeviceIOUserClient::free(void)
DIDeviceIOUserClient::initDirectIO(kDIDirectIOParams *)
DIDeviceIOUserClient::initWithTask(task *,void *,uint)
DIDeviceIOUserClient::ioMem(IOMemoryDescriptor *,ulong,ulong long,ulong,kDIIODirectDir)
DIDeviceIOUserClient::read(DIDeviceIOUserClient::bufferDesc *,ulong long,ulong)
DIDeviceIOUserClient::registerNotificationPort(ipc_port *,uint,uint)
DIDeviceIOUserClient::sendNotification(uint,thread_attr_for_ipc_propagation *)
DIDeviceIOUserClient::start(IOService *)
DIDeviceIOUserClient::stop(IOService *)
DIDeviceIOUserClient::write(DIDeviceIOUserClient::bufferDesc *,ulong long,ulong)
DIDeviceRequest::create(IOLWPool<DIDeviceRequest> &,uint)
DIDeviceRequest::die(void)
DIDeviceRequest::init(uint)
DIDeviceRequestPool::AbortRequest(uint)
DIDeviceRequestPool::AddBuffers(ulong long,ulong,uint)
DIDeviceRequestPool::AddRequests(ulong)
DIDeviceRequestPool::AllocateRequests(ulong,ulong long,ulong,uint)
DIDeviceRequestPool::Create(ulong,ulong long,ulong,uint,ulong (*)(void *,int),void *)
DIDeviceRequestPool::DIDeviceRequestPool(void)
DIDeviceRequestPool::GetPendingRequest(uint)
DIDeviceRequestPool::GetRequest(bool,ulong,bool (*)(void *),void *)
DIDeviceRequestPool::MarkRequestAsPending(DIDeviceRequest *)
DIDeviceRequestPool::ReleaseBuffers(void)
DIDeviceRequestPool::ReleaseRequests(void)
DIDeviceRequestPool::ReturnRequest(DIDeviceRequest *)
DIDeviceRequestPool::ReturnRequestBuffers(DIDeviceRequest *)
DIDeviceRequestPool::free(void)
DIDeviceRequestPool::init(void)
DIDeviceRequestPool::~DIDeviceRequestPool()
DIPoolElement<DISharedBuffer>::disable(void)
DIRef::put(void)
DIRequestPoolPendingIterator::initRequest(void)
DISharedBuffer::create(IOLWPool<DISharedBuffer> &,ulong long,uint)
DISharedBuffer::die(void)
DISharedBuffer::init(ulong long,uint)
DISharedBuffer::~DISharedBuffer()
DNBStateAsString(nub_state_t)
DT_property(char const*,char const*,OSObject **)
DataViewInterface::GetRaw8(ulong,uchar &)
DeCxt::FileIndexToWeight(uint,ulong long,char const*&)
DeCxt::GetFileInfo(FileInfoStruct &)
DeCxt::GetWeightInfo(WeightInfoStruct &)
DeCxt::ParseHeader(InitInfoHeaderStruct &)
DeCxt::ParseOcgRasterizationInfo(OcgRasterizationInfoStruct &)
DeCxt::ParseScaleBiasWeightFileInfo(FileInfoStruct &,FileInfoStruct &,FileInfoStruct &,WeightInfoStruct &)
DeCxt::ParseTransformInfo(TransformInfoStruct &)
DeCxt::ParseTransformList(ushort,char **,DvPtr &,DvPtr &)
DeCxt::ParseVector(DvPtr &)
DeCxt::ProcessInitInfo(void)
DeCxt::ProcessOneInitItem(DvPtr &,DvPtr &,DvPtr &,char **)
DeCxt::RasterizeScaleBiasData(ulong long,ushort,OcgRasterizationInfoStruct const*,DvPtr &,DvPtr &,void *,ulong long)
DeCxt::RasterizeWeightData(ulong long,OcgRasterizationInfoStruct const&,OcgWeightRasterizationInfoStruct const&,DvPtrWeight &,void *,ulong long)
DeCxt::ReadOcgWeightRasterizationInfo(OcgWeightRasterizationInfoStruct &)
DeCxt::ReadTwoVectors(DvPtr &,DvPtr &)
Decrypt_Main_Loop
Decrypt_Main_Loop_0
Decrypt_Main_Loop_End
Decrypt_Main_Loop_End_0
DefaultCompare(uint,uint *,uint *)
Detile420(uchar **,int *,int *,uchar **,int,int,hdr_context_t const*,uint,uint *,uint *)
DetileRow_neon(uchar *,int,uchar *,int)
DeviceMemoryManager::Allocate(uint)
DeviceMemoryManager::DebugPrint(void)
DeviceMemoryManager::DeviceMemoryManager(uint,uint)
DeviceMemoryManager::Free(uint)
DigitizerTransducer::copyProperties(void)
DigitizerTransducer::transducer(uint,IOHIDElement *)
DimensionLocationToLinearLocation(int &,WeightInfoStruct const&,int,int,int,int,int)
DispTarget17LPM::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_bics::bicsConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_cdfd::cdfdConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_control::apiodma::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_control::pipeConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_control::pipeControl::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_control::shadowFifo::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_control::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_dither::EnhancedSTDither0::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_dither::EnhancedSTDither1::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_dither::ditherConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_dither::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_gp0::gpConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_gp1::gpConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_pcc::pccConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_pdc::pdcConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_prc::prcConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_prc::prcMemory::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_splr::ResampCoeffMemory::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_splr::splrConfig::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_vftg::vftg::write_tunables(tunable_writer *,uint)
DispTarget181::display_pipe0_adisp_wpc::wpcConfig::write_tunables(tunable_writer *,uint)
DispTarget181::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_abg::abgConfig::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_abg::abgMemory::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_abg::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_dbm::dbmConfig::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_dbm::dbmMemory::write_tunables(tunable_writer *,uint)
DispTarget35::display_pipe0_adisp_dbm::write_tunables(tunable_writer *,uint)
DispTarget35::write_tunables(tunable_writer *,uint)
DispTarget5::write_tunables(tunable_writer *,uint)
DispTarget79::display_pipe0_adisp_bics::bicsConfig::write_tunables(tunable_writer *,uint)
DispTarget7::display_pipe0_adisp_pcc::pccConfig::write_tunables(tunable_writer *,uint)
DispTarget7::display_pipe0_adisp_pdc::pdcConfig::write_tunables(tunable_writer *,uint)
DispTarget7::display_pipe0_adisp_prc::prcConfig::write_tunables(tunable_writer *,uint)
DispTarget7::display_pipe0_adisp_wpc::wpcConfig::write_tunables(tunable_writer *,uint)
DispTarget7::write_tunables(tunable_writer *,uint)
DispTargetJ327::write_tunables(tunable_writer *,uint)
DispatchDPPluggedNotificationLocal(void *,void *)
DisplayID::Block::name(DisplayID::Block::Tag)
DisplayID::Parser::parse(void)
DisplayID::Parser::parseAppleVendorSpecificSDPDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseContainerIDDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseDisplayParametersDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseProductIdentificationDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseSection(DisplayID::Section *)
DisplayID::Parser::parseTiledDisplayTopologyDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseTypeITimingDetailedDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseVESATimingStandardDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::parseVendorSpecificDataBlock(DisplayID::Section const*,DisplayID::Block const*)
DisplayID::Parser::readSection(DisplayID::Section *)
DisplayID::UUID::String::String(DisplayID::UUID const*)
DisplayID::checksum(void const*,ulong)
DitherControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
DitherControl::isDitherUseful(M2ScalerCSCRequest *)
DitherControlMSR4::setDither_gatedContext(M2ScalerCSCRequest *)
DitherControlMSR7::setDither_gatedContext(M2ScalerCSCRequest *)
DitherControlMSR8::isDitherUseful(M2ScalerCSCRequest *)
DitherControlMSR8::setDither_gatedContext(M2ScalerCSCRequest *)
DitherControlMSR::isDitherUseful(M2ScalerCSCRequest *)
DitherControlMSR::setDither_gatedContext(M2ScalerCSCRequest *)
DvBufferFloat::GetFloat(ulong,float &)
DvBufferFloat::GetRaw16(ulong,ushort &)
DvBufferFloat::SetFloat(ulong,float)
DvBufferFloat::SetRaw16(ulong,ushort)
DvBufferFloat::~DvBufferFloat()
DvFP16::GetFloat(ulong,float &)
DvFP16::GetRaw16(ulong,ushort &)
DvFP16::SetRaw16(ulong,ushort)
DvFloat::GetFloat(ulong,float &)
DvPtr::GetFloat(ulong,float &)
DvPtr::InitFromFileInfo(FileInfoStruct const&)
DvPtr::SetFloat(ulong,float)
DvPtr::TakeDvPtr(DvPtr&)
DvPtrWeight::GetFloat(ulong,float &)
DvPtrWeight::InitFromFileInfo(FileInfoStruct const&)
DvPtrWeight::RasterElementSize(void)
DvPtrWeight::SetFloat(ulong,float)
DvPtrWeight::TakeDvPtr(DvPtr &)
DvPtrWeight::~DvPtrWeight()
DvRaw8::GetRaw8(ulong,uchar &)
DvRaw8::SetRaw8(ulong,uchar)
DvRaw8::~DvRaw8()
EFFACER_service(void *)
ERC_EncRLM::encRLMAssignAndRetireLTRs(void)
ERC_EncRLM::encRLMChooseRefsToReorder(void)
ERC_EncRLM::encRLMGetDPBMetaData(_S_AVE_FrameInfo *)
ERC_EncRLM::encRLMUpdateDPBConextAndFrameInfo(_S_AVE_DPB_Ctxt *,_S_AVE_FrameInfo *,bool,uint)
ERC_EncRLM::getEarliestNAckLTR(uint *,ulong long *,ulong long *)
ERC_EncRLM::getEarliestToRetireLTR(uint *)
ERC_var_d(double *,uint,uint,uint,uint)
ERC_var_d_mod(double *,uint,uint,uint,uint)
EffacingMediaFilter::activateConfiguration(void)
EffacingMediaFilter::deactivateConfiguration(void)
EffacingMediaFilter::free(void)
EffacingMediaFilter::initCrypto(void)
EffacingMediaFilter::instantiateMediaObject(void)
EffacingMediaFilter::probe(IOService *,int *)
EffacingMediaFilter::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
EffacingMediaFilter::revokeKey(void)
EffacingMediaFilter::start(IOService *)
EffacingMediaFilter::stop(IOService *)
EffacingMediaFilter::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
EffacingMediaFilterUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
EffacingMediaFilterUserClient::start(IOService *)
Encrypt_Main_Loop
Encrypt_Main_Loop_End
EncryptedMediaFilter::activateConfiguration(void)
EncryptedMediaFilter::attachMediaObjectToDeviceTree(IOMedia *)
EncryptedMediaFilter::deactivateConfiguration(void)
EncryptedMediaFilter::detachMediaObjectFromDeviceTree(IOMedia *)
EncryptedMediaFilter::free(void)
EncryptedMediaFilter::init(OSDictionary *)
EncryptedMediaFilter::initLabel(void)
EncryptedMediaFilter::instantiateMediaObject(void)
EncryptedMediaFilter::probe(IOService *,int *)
EncryptedMediaFilter::scan(int *)
EncryptedMediaFilter::start(IOService *)
EncryptedMediaFilter::stop(IOService *)
EncryptedMediaFilterUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
EndpointInstance::free(void)
EndpointInstance::initWithControllerAndOptions(IOUSBDeviceController *,int,int,int,uint,uint,int)
EndpointInstance::withControllerAndOptions(IOUSBDeviceController *,int,int,int,uint,uint,int)
EndpointInstanceSG::completeNonIsocSGList(uint *,uint *)
EndpointInstanceSG::dumpStateIOLog(void)
EndpointInstanceSG::free(void)
EndpointInstanceSG::initWithControllerAndOptions(IOUSBDeviceController *,int,int,int,uint,uint,int,IOMapper *)
EndpointInstanceSG::initWithControllerAndOptions(IOUSBDeviceController *,int,int,int,uint,uint,int,IOMapper *)
EndpointInstanceSG::prepareIsocSGList(IOUSBDeviceDMACommand *,uint,uint,bool)
EndpointInstanceSG::prepareNonIsocSGList(IOUSBDeviceDMACommand *,ulong long,ulong long)
EndpointInstanceSG::resetDescList(void)
EndpointInstanceSG::withControllerAndOptions(IOUSBDeviceController *,int,int,int,uint,uint,int,IOMapper *)
EventElementCollection::candidate(IOHIDElement *)
EventElementCollection::copyProperties(void)
EventElementCollection::free(void)
EventElementCollection::serialize(OSSerialize *)
FIFO<AppleSEPMessage,32u>::FIFO(void)
FIFO<AppleSEPMessage,32u>::numContained(void)
FIFO<AppleSEPMessage,32u>::pull(AppleSEPMessage&)
FIFO<AppleSEPMessage,32u>::push(AppleSEPMessage&)
Factory<A5AC3PassThrough>(void)
Factory<A5USACPassThrough>(void)
FileChunker::growChunkBuffer(uint)
FileChunker::growScratchBuffer(uint)
FindEntry(MISDenylistEntry const*)
FoldScaleBias(DvPtr &,DvPtr &,DvPtr &,DvPtr &)
Fx64_t::Fx64_t(int)
Fx64_t::Fx64_t(long long,int,int,bool)
Fx64_t::adjustIn(long long,int,int,bool)
Fx64_t::exportFP16(void)
Fx64_t::multiply(Fx64_t)
Fx64_t::operator*(Fx64_t)
Fx64_t::operator*=(Fx64_t)
Fx64_t::operator+=(Fx64_t)
Fx64_t::operator-=(Fx64_t)
Fx64_t::operator=(Fx64_t const&)
Fx64_t::operator==(Fx64_t)
FxDiv(long long,long long)
G12::AGXFenderCommon::getGPCPerformanceState(void)
G12::AGXFenderCommon::handleGPCHostInterrupts(void)
GTCondition::signal(void)
GTCondition::wait(uint)
GTGateLock::lock(uint)
GTGateLock::unlock(void)
GetDetiledResolution(int *,int *,int,int,uint)
GetKernelStackSizeAndAddress(uchar **)
GetPropertiesEditor(void *,OSSerialize *,OSCollection *,OSSymbol const*,OSMetaClassBase const*)
GetQPFromLambdaQP(double)
GetQPFromLambdaQPMP(double)
GetReturnStatusString(int)
GetSFBOffsetTable(uint)
GetTapStreamListEntry(AppleUSBAudioDevice *,uchar)
GetWithDefault(DvPtr &,ushort,float)
GetWithExpand(DvPtr &,int)
GuardPendingFunction::~GuardPendingFunction()
H10CamInChannel::DisableSensor(void)
H10CamInChannel::EnableSensor(void)
H10CamInChannel::Init(AppleH10CamIn *,uint)
H10CamInChannel::SendDatafilesToFirmware(void)
H10CamInChannel::SendSetfileToFirmware(void)
H10CamInChannel::~H10CamInChannel()
H11ANEIn::ANEPowerChangeHandler(void *,void *,uint,IOService *,void *,ulong)
H11ANEIn::ANEPowerChangeHandler_gated(uint,IOService *,void *,ulong)
H11ANEIn::ANE_AddClientForProgram_gated(void *,H11ANEDeviceInfoStruct *,task *)
H11ANEIn::ANE_AddPersistentClient_gated(void)
H11ANEIn::ANE_CleanupAllocationsPendingRelease_gated(void)
H11ANEIn::ANE_CleanupForColdReboot_gated(void)
H11ANEIn::ANE_CompleteFirmwareWorkProcessorItem_gated(ulong long *,void *,uint,task *)
H11ANEIn::ANE_CreateClientLoggingSession(uint,H11ANEInUserClient *)
H11ANEIn::ANE_CreateClientLoggingSession_gated(uint,H11ANEInUserClient *)
H11ANEIn::ANE_CreateClientLoggingSession_gated(uint,H11ANEInUserClient *)
H11ANEIn::ANE_FlushInactiveDARTMappings(void)
H11ANEIn::ANE_FlushInactiveDARTMappings_gated(void)
H11ANEIn::ANE_ForgetFirmware_gated(void)
H11ANEIn::ANE_GetFirmwareWorkProcessorItem(ulong long *,void *,uint,task *)
H11ANEIn::ANE_GetFirmwareWorkProcessorItem_gated(ulong long *,void *,uint,task *)
H11ANEIn::ANE_GetPeerData_gated(OSString *,void *,void *)
H11ANEIn::ANE_GetStatus_gated(H11ANEStatusStruct *)
H11ANEIn::ANE_GetTime_gated(H11ANETimeStruct *)
H11ANEIn::ANE_HandlePowerStateChecksForClient(void)
H11ANEIn::ANE_Init(void)
H11ANEIn::ANE_LoadFirmware(void *,uint,uint,task *)
H11ANEIn::ANE_LoadFirmware_gated(void *,uint,uint,task *)
H11ANEIn::ANE_MemoryPressureNotification_gated(uint)
H11ANEIn::ANE_Overflow_Logging(char const*,int)
H11ANEIn::ANE_PeerEPControl_gated(OSString *,void *,void *)
H11ANEIn::ANE_PowerOff_gated(void *)
H11ANEIn::ANE_PowerOff_gated(void *)
H11ANEIn::ANE_PowerOn(void *)
H11ANEIn::ANE_PowerOnByKernelClient_gated(void *,uint)
H11ANEIn::ANE_PowerOn_gated(void *,char const*,bool)
H11ANEIn::ANE_ProcessCreate_gated(H11ANEProcessCreateArgsStruct *,H11ANEProcessCreateArgsStructOutput *)
H11ANEIn::ANE_ProcessDestroy_gated(H11ANEProcessDestroyArgsStruct *,bool,bool,H11ANEProgramBufferParamsStruct *,uint *)
H11ANEIn::ANE_ProgramCreate(H11ANEProgramCreateArgsStruct *,H11ANEProgramCreateArgsStructOutput *,task *,void *,ulong long *)
H11ANEIn::ANE_ProgramCreateInstance_gated(H11ANEProgramCreateArgsStruct *,void *)
H11ANEIn::ANE_ProgramCreatePreprocessing(H11ANEProgramCreateArgsStruct *,H11ANEProgramCreateArgsAdditionalParamsStruct *,ZinComputeProgramStruct **,H11ANEProgramBufferParamsStruct **,H11ANEProgramCreateArgsStructOutput *)
H11ANEIn::ANE_ProgramCreate_gated(H11ANEProgramCreateArgsStruct *,H11ANEProgramCreateArgsAdditionalParamsStruct *)
H11ANEIn::ANE_ProgramDestroy_gated(H11ANEProgramDestroyArgsStruct *,bool)
H11ANEIn::ANE_ProgramHandleCreate_gated(ulong long *)
H11ANEIn::ANE_ProgramPrepare_gated(H11ANEProgramPrepareArgsStruct *)
H11ANEIn::ANE_ProgramSendRequest(H11ANEProgramRequestArgsStruct *,ulong long *,void *,task *,H11ANESharedEventsStruct *)
H11ANEIn::ANE_ProgramSendRequest_gated(H11ANEProgramRequestArgsStruct *,H11ANESharedEventsStruct *,H11ANEProgramSendRequestAdditionalParamsStruct *)
H11ANEIn::ANE_ProgramUnprepare_gated(H11ANEProgramPrepareArgsStruct *)
H11ANEIn::ANE_RegisterFirmwareWorkProcessor_gated(H11ANEFirmwareWorkProcessorRegistrationArgsStruct *,ulong long *,H11ANEInUserClient *)
H11ANEIn::ANE_RemovePersistentClient_gated(void)
H11ANEIn::ANE_RestoreState(void)
H11ANEIn::ANE_SaveState(void)
H11ANEIn::ANE_ScheduleWork_gated(H11ANEInFirmwareWorkProcessorRPCRequestStruct *,bool)
H11ANEIn::ANE_SendCommand(uchar *,uint,uint,uint,task *)
H11ANEIn::ANE_SendCommand_gated(H11ANEUserFWCommandParamsStruct *)
H11ANEIn::ANE_SetDARTCacheTTL_gated(uint)
H11ANEIn::ANE_SetDriverInitiatedSleepTimerPeriod_gated(uint)
H11ANEIn::ANE_SetFirmwareBootArg(uint,uint)
H11ANEIn::ANE_SetPeerData_gated(OSString *,void *,void *)
H11ANEIn::ANE_SetPowerManagement_gated(uint)
H11ANEIn::ANE_SetThrottlingPercentage(uint)
H11ANEIn::ANE_SetThrottlingPercentage_gated(uint)
H11ANEIn::ANE_ShowSharedMemoryAllocations(void)
H11ANEIn::ANE_ShowSharedMemoryAllocations_gated(bool)
H11ANEIn::ANE_TerminateClientLoggingSession_gated(uint,H11ANEInUserClient *)
H11ANEIn::ANE_UnregisterFirmwareWorkProcessor_gated(ulong long *,H11ANEInUserClient *)
H11ANEIn::ANE_UserClientCleanup(void *)
H11ANEIn::ANE_UserClientCleanup_gated(void *)
H11ANEIn::ANE_UserClientClose_gated(void *)
H11ANEIn::ANE_UserClientOpen_gated(void *,char const*)
H11ANEIn::ANE_ctrrReloadFw(IOMemoryMap *,uint,uint,task *)
H11ANEIn::ANE_deInit(void)
H11ANEIn::ANE_processISPSurfaceMapRequest(ulong long,ulong long,uint)
H11ANEIn::ANE_processISPSurfaceUnMapRequest(ulong long,bool)
H11ANEIn::ANE_processIspAneNetworkSurfaceRemap(uint,bool)
H11ANEIn::ANE_processIspAneNetworkSurfaceUnMap(ulong long)
H11ANEIn::ANE_releaseAllPeerSurfaces(void)
H11ANEIn::ANE_releaseDaemon_gated(void)
H11ANEIn::ANE_saveSurfaceToFile_gated(H11ANESharedMemorySurfaceParamsStruct *)
H11ANEIn::ANE_showISPPeerSurfaces(void)
H11ANEIn::ANE_startDaemon_gated(void)
H11ANEIn::AllocateFwHeapMemorySurface(uint,bool)
H11ANEIn::AllocateIntermediateBuffer(uint,H11ANEIntermediateBufferSurfaceParamsStruct **,H11ANEProgramBufferParamsStruct *,ulong long)
H11ANEIn::AllocateSharedMemorySurface(ulong long,H11ANESharedMemorySurfaceParamsStruct **,bool,uint,bool,bool,bool)
H11ANEIn::AneMachoSignatureCheck(uchar *,ulong)
H11ANEIn::ClientLookup(void *)
H11ANEIn::DARTErrorHandler_gated(IODARTErrorInfo const*)
H11ANEIn::DartMapIntermediateBuffer(H11ANEIntermediateBufferSurfaceParamsStruct *,H11ANEProgramBufferParamsStruct *)
H11ANEIn::DartUnmapIntermediateBuffer(H11ANEIntermediateBufferSurfaceParamsStruct *)
H11ANEIn::DisableANEClocksAndPower(void)
H11ANEIn::DriverInitiatedSleepTimerTimeOut(IOTimerEventSource *)
H11ANEIn::DriverInitiatedSleepTimerTimeOut_gated(void)
H11ANEIn::DumpANERegisters(void)
H11ANEIn::EnableANEClocksAndPower(void)
H11ANEIn::EnableANEClocksAndPower(void)
H11ANEIn::FirmwareTraceCallback(kd_callback_type,void *)
H11ANEIn::FirmwareTraceCallback_gated(kd_callback_type)
H11ANEIn::FlushFirmwareWorkProcessorSurfaceCache(task *)
H11ANEIn::FreeIntermediateBuffer(H11ANEIntermediateBufferSurfaceParamsStruct *,bool)
H11ANEIn::FreeSharedMemorySurface(ulong long,bool)
H11ANEIn::FreeUpDartSpace(H11ANEProgramBufferParamsStruct *,ulong)
H11ANEIn::GetANETimeToSystemTimeSync(ulong long *,ulong long *)
H11ANEIn::HandleFirmwareTimeout_gated(void)
H11ANEIn::HandleFirmwareTimeout_gated(void)
H11ANEIn::IOProcessorChannelSendRetry(void *,void const*,ulong long,ulong long,bool)
H11ANEIn::IsLatencySensitiveClientPresent(void)
H11ANEIn::MemoryPressureMonitorThread(void *)
H11ANEIn::MetaClass::alloc(void)
H11ANEIn::PerformPowerGatingDisabledReset(void)
H11ANEIn::PrintFwDebugInfo(void)
H11ANEIn::ProgramLoad(H11ANEProgramBufferParamsStruct *)
H11ANEIn::ProgramReMap(H11ANEProgramBufferParamsStruct *)
H11ANEIn::ProgramUnload(H11ANEProgramBufferParamsStruct *)
H11ANEIn::ReleaseFirmwareWorkProcessor(ipc_port *)
H11ANEIn::ReleaseFirmwareWorkProcessorMappedSurface(task *,uint)
H11ANEIn::ReleaseFwHeapMemorySurface(void)
H11ANEIn::ReleaseProgramMemoryBuffer(H11ANEProgramBufferParamsStruct *,bool)
H11ANEIn::ReleaseSharedMemorySurface(ulong long)
H11ANEIn::RestartDriverSleepTimer(void)
H11ANEIn::RetainFirmwareWorkProcessorMappedSurface(task *,uint)
H11ANEIn::RetainProgramMemoryBuffer(ulong long)
H11ANEIn::RetainProgramMemoryBuffer(ulong long)
H11ANEIn::RetainSharedMemorySurface(ulong long)
H11ANEIn::RetainSharedMemorySurface(ulong long)
H11ANEIn::SendRequestToFirmware_gated(H11ANERequestParamsStruct *,IOSurface *,int,bool)
H11ANEIn::SharedMemorySurfaceTargetPhysicalAddressToHostVirtualAddress(ulong long,H11ANESharedMemorySurfaceParamsStruct **,uint *)
H11ANEIn::StartPerformanceCounters(void)
H11ANEIn::StopPerformanceCounters(void)
H11ANEIn::WorkProcessorDoneProc(void *,void *)
H11ANEIn::ZinAneLoadProgramSegment(ComputeProgramSegment *,ulong,ulong,ulong long)
H11ANEIn::aneAddressToHostAddress(ulong long)
H11ANEIn::aneCmdSend(void *,uint,uint *,uint,bool,ulong long,uint,bool,bool,bool)
H11ANEIn::aneInterruptHandler(IOInterruptEventSource *,int)
H11ANEIn::aneInterruptHandlerFilter(OSObject *,IOFilterInterruptEventSource *)
H11ANEIn::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
H11ANEIn::channelNameToIndex(char *,uint *)
H11ANEIn::configureReport(IOReportChannelList *,uint,void *,void *)
H11ANEIn::createANEDrvSurface(uint,uint)
H11ANEIn::createReporters(void)
H11ANEIn::dartMapMemoryDescriptor(IOMemoryDescriptor *,IODMACommand **,ulong long *)
H11ANEIn::dartMapMemoryDescriptorForProgram(IOMemoryDescriptor *,IODMACommand **,ulong long *,H11ANEProgramBufferParamsStruct *)
H11ANEIn::decIntermediatePendingRequest(H11ANEIntermediateBufferSurfaceParamsStruct *)
H11ANEIn::destroyReporters(void)
H11ANEIn::disableDynamicPowerGating(void)
H11ANEIn::doorBellRing(void *)
H11ANEIn::drainIOProcessorChannelMessageQueues(void)
H11ANEIn::dumpANEClients(void)
H11ANEIn::dynPowerGateEnableTimerHandler(IOTimerEventSource *)
H11ANEIn::dynPowerGateEnableTimerHandler_gated(void)
H11ANEIn::enableDynamicPowerGating(void)
H11ANEIn::findClient(void *,H11ANEClientContextStruct **)
H11ANEIn::findISPSurfaceParamsByID(uint,H11ANESharedMemorySurfaceParamsStruct *)
H11ANEIn::findIntermediateBuffer(ulong long,int *,H11ANEIntermediateBufferSurfaceParamsStruct *,bool)
H11ANEIn::findProgramsMaxCacheSize(void)
H11ANEIn::firmwareResourceIsAvailable(H11ANEProcessParamsStruct *,uint)
H11ANEIn::freeSharedEvents(H11ANERequestParamsStruct *)
H11ANEIn::fwEventCodeConversion(eAnsCmdDbgEvent)
H11ANEIn::handleOutstandingCommand(OSObject *,bool)
H11ANEIn::hasSameCodeSigningID(H11ANEIntermediateBufferSurfaceParamsStruct const*,uchar const*,uchar const*)
H11ANEIn::isProcessValid(H11ANEProgramBufferParamsStruct const*,H11ANEProcessParamsStruct const*,uint *)
H11ANEIn::isProgramValid(H11ANEProgramBufferParamsStruct const*,uint *,bool)
H11ANEIn::isWorkProcessorValid(H11ANEInFirmwareWorkProcessorParamsStruct const*)
H11ANEIn::lookupProgramBuffer(ulong long,H11ANEProcessParamsStruct **,OSObject **,OSData **)
H11ANEIn::mapFwCTRRRegion(void)
H11ANEIn::newUserClient(task *,void *,uint,IOUserClient **)
H11ANEIn::notifyPerfController(H11ANERequestParamsStruct *,eAnsCmdProgramEvent)
H11ANEIn::outstandingCommandsWithFirmware(uint)
H11ANEIn::patchMutableSurface(H11ANERequestParamsStruct *)
H11ANEIn::pendingRequestsCount(H11ANEProcessParamsStruct const*,uint *)
H11ANEIn::pendingRequestsCount(uint *,uint *,uchar)
H11ANEIn::powerStateDidChangeTo_gated(ulong,ulong,IOService *)
H11ANEIn::powerStateWillChangeTo(ulong,ulong,IOService *)
H11ANEIn::powerStateWillChangeTo_gated(ulong,ulong,IOService *)
H11ANEIn::power_off_hardware(void)
H11ANEIn::power_on_hardware(void)
H11ANEIn::processCommandResponse(ulong long,ulong long,ulong long)
H11ANEIn::processCount(void)
H11ANEIn::processDebugLoggingRequest(ulong long,ulong long,ulong long)
H11ANEIn::processHostToTargetBufferResponse(ulong long,ulong long,ulong long)
H11ANEIn::processSharedMallocRequest(ulong long,ulong long,ulong long)
H11ANEIn::processTargetToHostBufferNotification(ulong long,ulong long,ulong long)
H11ANEIn::queuePendingRequests(void)
H11ANEIn::releaseSharedClientBuffer(H11ANESharedClientBufferArgsStruct *)
H11ANEIn::removeRequestFromPendingList(OSData *)
H11ANEIn::setPowerState(ulong,IOService *)
H11ANEIn::setPowerStateGated(ulong,IOService *)
H11ANEIn::sharedEventNotification(IOSurfaceSharedEvent *,ulong long,ulong long)
H11ANEIn::sharedEventNotification_gated(IOSurfaceSharedEvent *,ulong long,H11ANERequestParamsStruct *)
H11ANEIn::signalFences(H11ANERequestParamsStruct *,int)
H11ANEIn::signalSharedEvents(H11ANERequestParamsStruct *,ANESharedEventType,uint)
H11ANEIn::start(IOService *)
H11ANEIn::start(IOService *)
H11ANEIn::stop(IOService *)
H11ANEIn::timeOut(IOTimerEventSource *)
H11ANEIn::timeOut_gated(void)
H11ANEIn::updateReport(IOReportChannelList *,uint,void *,void *)
H11ANEIn::updateReport_gated(IOReportChannelList *,uint *,void *,void *)
H11ANEIn::validateANEReg(uint,uint,uint)
H11ANEIn::validatePSReg(uint,uint,uint)
H11ANEIn::validatePWGATEReg(uint,uint,uint)
H11ANEIn::waitForPendingUpdate(H11ANEProgramBufferParamsStruct *)
H11ANEIn::~H11ANEIn()
H11ANEInDirectPathClient::ANE_DeviceClose(void)
H11ANEInDirectPathClient::ANE_DeviceOpen(H11ANEDeviceInfoStruct *)
H11ANEInDirectPathClient::ANE_ProgramSendRequest(H11ANEProgramRequestArgsStruct *,H11ANESharedEventsStruct *,ulong long *)
H11ANEInDirectPathClient::_ANE_DeviceOpen(H11ANEInDirectPathClient*,void *,IOExternalMethodArguments *)
H11ANEInDirectPathClient::_ANE_ProgramSendRequest(H11ANEInDirectPathClient*,void *,IOExternalMethodArguments *)
H11ANEInDirectPathClient::clientClose(void)
H11ANEInDirectPathClient::clientDied(void)
H11ANEInDirectPathClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
H11ANEInDirectPathClient::init(task *,OSDictionary *)
H11ANEInDirectPathClient::start(IOService *)
H11ANEInDirectPathClient::stop(IOService *)
H11ANEInUserClient::ANE_DeviceClose(void)
H11ANEInUserClient::ANE_DeviceOpen(H11ANEDeviceInfoStruct *)
H11ANEInUserClient::ANE_PowerOn(void)
H11ANEInUserClient::_ANE_CompleteFirmwareWorkProcessorItem(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_CreateClientLoggingSession(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_GetFirmwareWorkProcessorItem(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_LoadFirmware(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_ProgramCreateInstance(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_ProgramPrepare(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_ReadANERegister(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_RegisterFirmwareWorkProcessor(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_SendCommand(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_SetDriverLoggingFlags(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_SetFirmwareBootArg(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_ShowSharedMemoryAllocations(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_UnregisterFirmwareWorkProcessor(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::_ANE_WriteANERegister(H11ANEInUserClient*,void *,IOExternalMethodArguments *)
H11ANEInUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
H11ANEInUserClient::free(void)
H11ANEInUserClient::init(task *,OSDictionary *)
H11ANEInWorkLoop::closeGate(void)
H11ANEInWorkLoop::openGate(void)
H11ANEInWorkLoop::workLoop(void)
H1xANEMessage::init(H1xANEMessageType)
H1xANENotificationMsg::create(void)
H1xANERequestCompletionMsg::create(void)
HDRGammaFunc::operator()(double)
HEVCReleasePPS(hevc_picture_parameter_set_t *)
HEVCReleaseSPS(hevc_sequence_parameter_set_t *)
HEVCReleaseVPS(hevc_video_parameter_set_t *)
HEVC_CalcMaxDpbSize(uint,uint,SH_HEVC_PROFILE_TYPE,SH_HEVC_LEVEL_TYPE)
HEVC_PPS::Generate(HEVC_SPS *,int,int)
HEVC_PPS::GenerateExtra(HEVC_SPS *,int,int)
HEVC_PPS::HEVC_PPS(HEVC_PICTURE_HEADER_PARAMS *)
HEVC_PPS::pic_parameter_set_rbsp(WriteBits *,int)
HEVC_RBSP::HEVC_RBSP(void)
HEVC_RBSP::calcScanOrder(uint,uint *,uint *,uint *)
HEVC_RBSP::flush_bits(int,bool)
HEVC_RBSP::getNumberOfBitsParsed(void)
HEVC_RBSP::get_next_uint32(uchar *,uint *,uint *)
HEVC_RBSP::initScanOrder(void)
HEVC_RBSP::next_access_unit(bool)
HEVC_RBSP::parseHRD(hevc_hrd_parameters_t *,uint,uint)
HEVC_RBSP::parseNAL(hevc_nal_unit_header_t *,bool)
HEVC_RBSP::parsePPS(hevc_picture_parameter_set_t *,hevc_sequence_parameter_set_t *)
HEVC_RBSP::parsePpsMultiLayerExtension(hevc_pps_multilayer_extension_t *)
HEVC_RBSP::parsePpsRangeExtension(hevc_picture_parameter_set_t *,hevc_pps_range_extension_t *)
HEVC_RBSP::parsePredWeightTable(hevc_sequence_parameter_set_t *,hevc_slice_segment_header_t *,uint)
HEVC_RBSP::parseProfileTierLevel(hevc_profile_tier_level_t *,uint)
HEVC_RBSP::parseRefPicListsModification(hevc_slice_segment_header_t *)
HEVC_RBSP::parseSPS(hevc_sequence_parameter_set_t *)
HEVC_RBSP::parseScalingListData(hevc_scaling_list_data_t *)
HEVC_RBSP::parseShortTermRefPicSet(hevc_short_term_ref_pic_set_t *,uint,uint)
HEVC_RBSP::parseSliceHeader(hevc_slice_segment_header_t *,hevc_nal_unit_type_t,hevc_sequence_parameter_set_t *,hevc_picture_parameter_set_t *)
HEVC_RBSP::parseSpsRangeExtension(hevc_sps_range_extension_t *)
HEVC_RBSP::parseSubLayerHRD(hevc_sub_layer_hrd_parameters_t *,uint,uint,uint)
HEVC_RBSP::parseVPS(hevc_video_parameter_set_t *)
HEVC_RBSP::parseVUI(hevc_vui_parameters_t *,uint)
HEVC_RBSP::releaseScanOrder(void)
HEVC_RBSP::setDefaultScalingListData(hevc_scaling_list_data_t *)
HEVC_RBSP::setRBSP(uchar *,ulong)
HEVC_RBSP::~HEVC_RBSP()
HEVC_RLM::HEVC_RLM(CAVDHevcDecoder *)
HEVC_RLM::addNewEntry(HevcPictureInfo *)
HEVC_RLM::addNewReferencePicture(HevcPictureInfo *,hevc_sequence_parameter_set_t *)
HEVC_RLM::bumpingProcess(HevcPictureInfo *)
HEVC_RLM::decodePicOrderCnt(hevc_nal_unit_header_t *,hevc_sequence_parameter_set_t *,hevc_slice_segment_header_t *,uint)
HEVC_RLM::decodeReferencePictureSet(HevcPictureInfo *,hevc_sequence_parameter_set_t *,hevc_slice_segment_header_t *)
HEVC_RLM::getReferencePictureList(hevc_slice_segment_header_t *,HevcPictureInfo **,HevcPictureInfo **,bool)
HEVC_RLM::isBumpingNeeded(hevc_sequence_parameter_set_t *)
HEVC_RLM::isBumpingNeededForNonIRAP(hevc_sequence_parameter_set_t *)
HEVC_RLM::releaseAllPictures(void)
HEVC_RLM::releaseUnusedPictures(void)
HEVC_RLM::removeEntry(uint)
HEVC_RLM::~HEVC_RLM()
HEVC_RPS::HEVC_RPS(HEVC_RPS_PARAMS *)
HEVC_RPS::Init(AVE_VIDEO_PARAMS *,AVE_VIDEO_PARAMS_DRIVER *,HEVC_VPS *,HEVC_SPS *,uint,bool)
HEVC_RPS::calc_poc(uchar,int)
HEVC_RPS::calc_rps(uchar,int)
HEVC_RPS::program_sh_rps_for_ltref(int)
HEVC_RPS::program_sps_rps_IPPP(void)
HEVC_RPS::program_sps_rps_IbP(void)
HEVC_RPS::program_sps_rps_IntraOnly(void)
HEVC_RPS::setRpsVars(AVE_VIDEO_PARAMS *,uint,uint,bool,HEVCSlicePerFrameFields *)
HEVC_RPS::short_term_ref_pic_set(int,int,int,WriteBits *)
HEVC_RPS::updateNumPocTotalCurr(void)
HEVC_RPS::update_sps_rps_internal_variables(HEVC_SHORT_TERM_RPS *)
HEVC_SPS::Generate(HEVC_VPS *,HEVC_RPS *,int)
HEVC_SPS::HEVC_SPS(HEVC_SEQUENCE_HEADER_PARAMS *)
HEVC_SPS::ptl_parameters(ushort,WriteBits *)
HEVC_SPS::seq_parameter_set_rbsp(HEVC_RPS *,WriteBits *)
HEVC_SPS::vui_parameters(WriteBits *)
HEVC_SPS::write_scaling_list_data(WriteBits *)
HEVC_Slice::GenerateMap(uint,uint,uint,uint)
HEVC_Slice::HEVC_Slice(HEVC_SLICE_HEADER_PARAMS *)
HEVC_Slice::ResetMultiPass(void)
HEVC_Slice::UpdateBuffer(ulong long)
HEVC_Slice::calcDistScaleFactor(int,int *)
HEVC_VPS::Generate(int)
HEVC_VPS::HEVC_VPS(HEVC_VIDEO_HEADER_PARAMS *)
HEVC_VPS::ptl_parameters(bool,ushort,WriteBits *)
HEVC_VPS::video_parameter_set_rbsp(WriteBits *)
HEVC_VPS::vps_encode_independent_layer_parameters(WriteBits *,uchar *)
HEVC_VPS::vps_extension(WriteBits *)
HIDMTQueueEventSource::flushQueue(void)
HIDMTQueueEventSource::queueEventSource(OSObject *,void (*)(OSObject *,OSObject *),uint,bool)
HIDMTQueueEventSource::queueObject(OSObject *)
HIDMTQueueEventSourceWorkItem::doWork(OSObject *,OSObject *)
HIDMTQueueEventSourceWorkItem::queueEventSourceWorkItem(void (*)(OSObject *,void *,void *,void *,void *),OSObject *,void *,void *,void *,void *)
HSAIDAckPacket::free(void)
HSAIDAckPacket::initWithPremableLength(uchar)
HSAIDAckPacket::setAckNumber(uchar)
HSAIDAckPacket::withPremableLength(uchar)
HSAIDCommand::dequeuePacket(void)
HSAIDCommand::enqueuePacket(HSAIDPacket *)
HSAIDCommand::init(void)
HSAIDPacket::computeCRC(void)
HSAIDPacket::free(void)
HSAIDPacket::getAckNumber(void)
HSAIDPacket::getCommandBufferSpace(void)
HSAIDPacket::getCommandLength(void)
HSAIDPacket::getCommandPointer(void)
HSAIDPacket::getHSAIDCommand(void)
HSAIDPacket::getHeader(void)
HSAIDPacket::getPacketLength(void)
HSAIDPacket::getPacketType(void)
HSAIDPacket::getResetSequenceNumber(void)
HSAIDPacket::getSequenceNumber(void)
HSAIDPacket::getSnifferPacketLength(void)
HSAIDPacket::initWithBufferSize(uint)
HSAIDPacket::resetHeader(void)
HSAIDPacket::setAckNumber(uchar)
HSAIDPacket::setCommandLength(ushort)
HSAIDPacket::setPacketType(HSAIDPacketType)
HSAIDPacket::setSequenceNumber(uchar)
HSAIDPacket::updateCRC(void)
HSAIDReceivePacket::setPacketData(void const*,uint)
HSAIDReceivePacket::withMaxCommandDataLength(ushort)
HSAIDReceivePacketPool::getPacket(void)
HSAIDReceivePacketPool::setMaxCommandDataLength(ushort)
HSAIDTransmitCommand::complete(int)
HSAIDTransmitCommand::reset(void)
HSAIDTransmitCommand::setCompletion(IOAccessoryHSAIDBusTransport::Completion *)
HSAIDTransmitCommandPool::free(void)
HSAIDTransmitCommandPool::getTransmitCommand(void)
HSAIDTransmitCommandPool::returnTransmitCommand(HSAIDTransmitCommand *)
HSAIDTransmitPacket::setCommandData(void const*,ushort)
HSAIDTransmitPacket::withMaxCommandDataLength(ushort,ushort)
HSAIDTransmitPacketPool::drain(void)
HSAIDTransmitPacketPool::getPacket(void)
HSAIDTransmitPacketPool::returnPacket(HSAIDTransmitPacket *)
HSAIDTransmitPacketPool::setPacketParameters(ushort,ushort)
HSAIDTransmitPacketPool::withWorkLoop(IOWorkLoop *)
HSAIDUserClientAccessory::cancelTransmit(void)
HSAIDUserClientAccessory::clientClose(void)
HSAIDUserClientAccessory::free(void)
HSAIDUserClientAccessory::message(uint,IOService *,void *)
HSAIDUserClientAccessory::queueData(OSData *)
HSAIDUserClientAccessory::receiveEvent(IOExternalMethodArguments *)
HSAIDUserClientAccessory::sendFrame(IOExternalMethodArguments *)
HSAIDUserClientAccessory::sendHSAIDBreak(void)
HSAIDUserClientAccessory::setReceiveEventCallback(IOExternalMethodArguments *)
HSAIDUserClientAccessory::start(IOService *)
HSAIDUserClientAccessory::startTransmit(void const*,uint)
HSAIDUserClientAccessory::willTerminate(IOService *,uint)
HSAIDUserClientHost::MetaClass::alloc(void)
HSAIDUserClientHost::clientClose(void)
HSAIDUserClientHost::eventHandler(IOAccessoryHSAIDBusTransport::HSAIDEvent,void const*,uint)
HSAIDUserClientHost::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
HSAIDUserClientHost::free(void)
HSAIDUserClientHost::initWithTask(task *,void *,uint,OSDictionary *)
HSAIDUserClientHost::message(uint,IOService *,void *)
HSAIDUserClientHost::receiveEvent(IOExternalMethodArguments *)
HSAIDUserClientHost::sendCommand(IOExternalMethodArguments *)
HSAIDUserClientHost::setReceiveEventCallback(IOExternalMethodArguments *)
HSAIDUserClientHost::start(IOService *)
HSAIDUserClientHost::willTerminate(IOService *,uint)
HSAIDUserClientHost::~HSAIDUserClientHost()
HSBufferPointer::getBytesNoCopy(ulong,ulong)
HSBufferPointer::readBytes(ulong,void *,ulong)
HSBufferPointer::writeBytes(ulong,void const*,ulong)
HSDescriptor::checkStringLength(ulong,ulong)
HSDescriptor::readString(ulong,ulong,char *,ushort)
HSMDevice::commandSleep(void *,ulong long)
HSMDevice::getNewRxParser(uchar,HSTransfer::TransferType)
HSMDevice::isValidInterface(uchar)
HSMDevice::resume(uint)
HSMDevice::rxParserCompleted(HSParser *,HSParser::ParserStatus)
HSMDevice::txParserCompleted(HSParser *,HSParser::ParserStatus)
HSMDevice::~HSMDevice()
HSMDeviceInterface::inputParserCompleted(HSParser *,HSParser::ParserStatus)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::DeviceInterface::handleMessage(HSParserDeviceInput::Message,HSParserDeviceInput::Submessage)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::DeviceInterface::handleMessage(HSParserDeviceInput::Message,HSParserDeviceInput::Submessage)::{lambda(HSMTest *)#1}::__invoke(HSMTest *)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::HIDInterface::handleInputReport(HSBuffer *)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::asyncTask(void)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::shouldResume(void)
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMDeviceTest()
HSMHIDInterface::getInputParser(void)
HSMParserTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMParserTest()
HSMSPITest<2048ul,AHTHSBufferStatic>::checkForWork(void)
HSMSPITest<2048ul,AHTHSBufferStatic>::~HSMSPITest()
HSMTransferDevice::getHSLogger(void)
HSMTransferDevice::rxTransferReady(void)
HSMTransferDevice::txTransferReady(void)
HSMTransferTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMTransferTest()
HSParser::calculateCRC16(void)
HSParser::recalculateCRC(void)
HSParserDevice::isValidInterfaceId(uchar)
HSParserDevice::rxTransferAvailable(void)
HSParserDevice::txTransferCompleted(void)
HSParserHID::createPacket(HSParserHID::Type,uchar,HSParserHID::Status,ulong,HSBuffer *)
HSParserHID::getTransferType(void)
HSParserHID::setFrameNumber(ulong)
HSParserTest<8192ul,HSBufferStatic>::getNewRxParser(uchar,HSTransfer::TransferType)
HSParserTest<8192ul,HSBufferStatic>::rxParserCompleted(HSParser *,HSParser::ParserStatus)
HSReturnIOReturnMap::map(HSReturn)
HSReturnIOReturnMap::map(int)
HSTransfer::copyToSection(HSBuffer *,ulong *,ulong *,ulong *,void *,ulong,ulong)
HSTransferTest<8192ul,AHTHSBufferStatic>::rxTransferAvailable(void)
HSTransferTest<8192ul,AHTHSBufferStatic>::txTransferCompleted(void)
HSTransferTest<8192ul,AHTHSBufferStatic>::~HSTransferTest()
HandleMultiTouchPowerChildNotification(void *,void *,IOService *,IONotifier *)
HevcCopyDependentSliceHeader(hevc_slice_segment_header_t *,hevc_slice_segment_header_t *)
HevcReleaseSliceHeader(hevc_slice_segment_header_t *)
ICEBBControl::deviceWake(bool,uint)
ICEBBRTIDevice::updateImageDoorbell(uint)
ICSInfo::Deserialize(BitstreamReader &)
IO80211APIUserClient::_runDriverCommandHelper(IOExternalMethodArguments *)
IO80211APIUserClient::checkEntitlement(task *)
IO80211APIUserClient::clientClose(void)
IO80211APIUserClient::extQueryUseIOUCWhenPossible(IO80211APIUserClient*,void *,IOExternalMethodArguments *)
IO80211APIUserClient::extSubscribeEvent(IO80211APIUserClient*,void *,IOExternalMethodArguments *)
IO80211APIUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IO80211APIUserClient::free(void)
IO80211APIUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IO80211APIUserClient::mapBuffer(IOUCPipeMap *)
IO80211APIUserClient::mapUserClient(IO80211APIUserClient*,void *,IOExternalMethodArguments *)
IO80211APIUserClient::start(IOService *)
IO80211APIUserClient::stop(IOService *)
IO80211APIUserClient::unmapBuffer(void)
IO80211APIUserClient::unmapUserClient(IO80211APIUserClient*,void *,IOExternalMethodArguments *)
IO80211AWDLMulticastPeer::MetaClass::alloc(void)
IO80211AWDLMulticastPeer::canTransmit(uint,uint)
IO80211AWDLMulticastPeer::flushQueues(uint)
IO80211AWDLMulticastPeer::free(void)
IO80211AWDLMulticastPeer::getPacket(pktDequeue *)
IO80211AWDLMulticastPeer::initWithAddressAndManager(uchar const*,IO80211AWDLPeerManager *)
IO80211AWDLMulticastPeer::prepareForTransmit(IO80211PacketDescriptor *)
IO80211AWDLMulticastPeer::transmitSuccess(IO80211PacketDescriptor *,reportTxStatus *)
IO80211AWDLMulticastPeer::withAddressAndManager(uchar const*,IO80211AWDLPeerManager *)
IO80211AWDLPeer::actionFrameReport(actionFrameReportContext *)
IO80211AWDLPeer::addPeerToUmiChain(void)
IO80211AWDLPeer::awdlLllcInput(__mbuf *,inputPacketCtx *)
IO80211AWDLPeer::calculateHighestAllowedChannel(void)
IO80211AWDLPeer::calculatePeerTimeDiff(IO80211BufferCursor const&,uint,uint,uint,uint,uint)
IO80211AWDLPeer::canTransmit(uint,uint)
IO80211AWDLPeer::checkAndUpdatePeerMIPayloadOverflowState(ulong)
IO80211AWDLPeer::checkForChanSeqChangeToProxyMode(void)
IO80211AWDLPeer::clearCacheState(void)
IO80211AWDLPeer::clearRealTimeGroupRole(rtgRole)
IO80211AWDLPeer::didAFPayloadChange(IO80211Buffer const*,bool *)
IO80211AWDLPeer::doMinimalAFProcessing(actionFrameReportContext const*)
IO80211AWDLPeer::dumpSteeringTlv(IO80211BufferCursor const&)
IO80211AWDLPeer::dumpTxPacket(char const*,phdr *)
IO80211AWDLPeer::extractVersionTlvForLegacyPeerProcessing(IO80211BufferCursor const&,IO80211Buffer *)
IO80211AWDLPeer::fillInCacheParams(apple80211_peer_cache_control *)
IO80211AWDLPeer::freeResources(void)
IO80211AWDLPeer::getPacket(pktDequeue *)
IO80211AWDLPeer::getUnicastOptionsFromDataPathTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::hasHTorVHTCaps(void)
IO80211AWDLPeer::incrementRxCount(uint)
IO80211AWDLPeer::incrementTxFailNoAckCount(void)
IO80211AWDLPeer::incrementTxFailOtherCount(void)
IO80211AWDLPeer::incrementTxOkCount(uint)
IO80211AWDLPeer::initWithAddressAndManager(uchar const*,IO80211AWDLPeerManager *)
IO80211AWDLPeer::inputPacket(__mbuf *,inputPacketCtx *)
IO80211AWDLPeer::isLegacyPeerNotRoutable(void)
IO80211AWDLPeer::isPeerRoutable(void)
IO80211AWDLPeer::logDataStats(peerDataLogRequest)
IO80211AWDLPeer::monitorCachedPeerActivity(ulong long const*)
IO80211AWDLPeer::monitorPeerRssi(ulong long const*)
IO80211AWDLPeer::monitorPeersTimeline(IO80211BufferCursor const&,uint,uint,uint)
IO80211AWDLPeer::nextServiceRequest(IO80211ActionFrameDescriptor *,uint)
IO80211AWDLPeer::parseAWDLRangingTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAWDLRealTimeGroupTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlChanSeqFromChanSeqTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlChanSeqFromSyncParamsTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlDataPathTLVAndTakeAction(IO80211BufferCursor const&,uchar *,bool)
IO80211AWDLPeer::parseAwdlElectionParamsV1(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlElectionParamsV2(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlIEEE80211CntnrTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlSyncParamsTlvAndTakeAction(IO80211BufferCursor const&,IO80211BufferCursor const&,IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlSyncTreeTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::parseAwdlVersionTlv(IO80211BufferCursor const&)
IO80211AWDLPeer::parseBssSteeringTlv(IO80211BufferCursor const&)
IO80211AWDLPeer::parseNanSyncTlv(IO80211BufferCursor const&)
IO80211AWDLPeer::peerChainRssiThresholdCheck(void)
IO80211AWDLPeer::populateBssSteeringMsgBlob(bssSteeringMsgId,void *,uint)
IO80211AWDLPeer::prepareForTransmit(IO80211PacketDescriptor *)
IO80211AWDLPeer::print(uint)
IO80211AWDLPeer::printChannelSequence(userPrintCtx *)
IO80211AWDLPeer::printTlv(uint,ulong,IO80211BufferCursor const&)
IO80211AWDLPeer::processInfraChangesOfPeer(bool,uint)
IO80211AWDLPeer::processServiceResponseTLV(IO80211BufferCursor const&)
IO80211AWDLPeer::processUnicastAWSF(uint)
IO80211AWDLPeer::setMIPayloadOverflowState(bool)
IO80211AWDLPeer::setPeerNotReachable(void)
IO80211AWDLPeer::setRealTimeGroupRole(rtgRole)
IO80211AWDLPeer::setStateForCachedPeer(void)
IO80211AWDLPeer::shouldRemovePeerFromNDP(ulong long const*)
IO80211AWDLPeer::shouldRemovePeerFromSystem(void)
IO80211AWDLPeer::shouldStopAFProcessing(actionFrameReportContext const*,ulong long const*,bool *)
IO80211AWDLPeer::updateAwdlChanSeq(libkern::bounded_ptr<awdl_chan_seq_info,os_detail::panic_trapping_policy>)
IO80211AWDLPeer::updateNumOfOverlapSlots(uchar *)
IO80211AWDLPeer::updatePeerStatsHistogram(histogramBin_s *,uchar,double,bool)
IO80211AWDLPeer::waitForPostingPeer(void)
IO80211AWDLPeer::withAddressAndManager(uchar const*,IO80211AWDLPeerManager *)
IO80211AWDLPeerManager::IO80211AWDLPeerManager(void)
IO80211AWDLPeerManager::MetaClass::alloc(void)
IO80211AWDLPeerManager::actionFrameHasCorrectOUI(IO80211BufferCursor const&,ulong)
IO80211AWDLPeerManager::actionFrameInput(IO80211Buffer *,uint,void *,ulong)
IO80211AWDLPeerManager::actionFrameProcessInput(IO80211Buffer *,uint,void *,ulong)
IO80211AWDLPeerManager::actionFrameProcessThread(IO80211WorkSource *)
IO80211AWDLPeerManager::actionFrameQueueCleanup(void)
IO80211AWDLPeerManager::activeSockets(bool)
IO80211AWDLPeerManager::addAWDLPeer(apple80211_act_frm_hdr const*,IO80211Buffer *)
IO80211AWDLPeerManager::addAwdlSnapHeader(__mbuf *,ushort)
IO80211AWDLPeerManager::addPreferredChannel(uchar,signed char,uchar *,uchar *,signed char *)
IO80211AWDLPeerManager::adjustAwdlSnapHeader(IO80211PacketDescriptor *,IO80211Peer *)
IO80211AWDLPeerManager::adjustAwdlSnapHeader(__mbuf *,IO80211Peer *)
IO80211AWDLPeerManager::ageoutRootNodeList(void)
IO80211AWDLPeerManager::airplayOutOfRange(IO80211AWDLPeer *)
IO80211AWDLPeerManager::airplayStatsBuildAvgCCAHistogramForChannel(uchar,uint)
IO80211AWDLPeerManager::airplayStatsBuildRSSIHistogram(void)
IO80211AWDLPeerManager::airplayStatsInitializeHistogramBins(void)
IO80211AWDLPeerManager::airplayStatsPostMetrics(void)
IO80211AWDLPeerManager::airplayStatsPrepare(void)
IO80211AWDLPeerManager::airplayStatsPrintMetrics(void)
IO80211AWDLPeerManager::airplayStatsUpdateAirplayMode(void)
IO80211AWDLPeerManager::airplayToATVAllowed(IO80211AWDLPeer *)
IO80211AWDLPeerManager::airplayWillUseRetrogade(IO80211AWDLPeer *)
IO80211AWDLPeerManager::attachCoreAnalyticsService(void *,IOService *,IONotifier *)
IO80211AWDLPeerManager::awRemainingTime(void)
IO80211AWDLPeerManager::awStartTimeElapsed(void)
IO80211AWDLPeerManager::awdlCATsPolicy(awdlCATsTrafficNotificationType,bool)
IO80211AWDLPeerManager::awdlChipReset(void)
IO80211AWDLPeerManager::awdlChipRestore(void)
IO80211AWDLPeerManager::awdlDutyCycle(void)
IO80211AWDLPeerManager::awdlStatsCollectCachedPeersStats(apple80211_peer_cache_stats *)
IO80211AWDLPeerManager::awdlStatsCountServices(IO80211ServiceRequestDescriptor *,uchar,uchar)
IO80211AWDLPeerManager::awdlStatsPktByteCount(void)
IO80211AWDLPeerManager::awdlStatsPostMetrics(void)
IO80211AWDLPeerManager::awdlStatsPrintMetric(void)
IO80211AWDLPeerManager::awdlStatsSetSessionDuration(void)
IO80211AWDLPeerManager::awdlStatsSetSuspendDuration(void)
IO80211AWDLPeerManager::bssSteeringInProgress(void)
IO80211AWDLPeerManager::bssSteeringScanDoneHandler(void)
IO80211AWDLPeerManager::buildAWDLElectionParamsVer2(awdlElectionParamsTlvV2 *,uint)
IO80211AWDLPeerManager::buildAWDLVersionTlv(apple80211_awdl_version_tlv *,uint)
IO80211AWDLPeerManager::buildAwdlDataPathStateTlv(uchar *,bool,uint,bool,bool,uint)
IO80211AWDLPeerManager::buildAwdlNanSeq(apple80211_nan_radio_schedule *)
IO80211AWDLPeerManager::buildEnhDataRateTlv(uchar *,uint)
IO80211AWDLPeerManager::buildIEEE80211CntnrTlv(uchar *,uchar *,uchar,uint)
IO80211AWDLPeerManager::buildMasterIndicationTemplate(uchar *,uint,bool,uint,bool,uchar *)
IO80211AWDLPeerManager::buildMultiPeerBssSteeringTlv(uchar *,uchar *,uint)
IO80211AWDLPeerManager::buildNanSyncTlv(apple80211_awdl_nan_sync_tlv *,uint)
IO80211AWDLPeerManager::buildRangingTlv(apple80211_awdl_ranging_tlv *,uint)
IO80211AWDLPeerManager::buildRealTimeGroupTlv(apple80211_awdl_realtimegroup_tlv *,uint)
IO80211AWDLPeerManager::buildSecondaryMasterIndicationTemplate(uchar *,uint,bool,uint,bool)
IO80211AWDLPeerManager::buildServiceParamTlv(apple80211_awdl_service_params_tlv *,uint)
IO80211AWDLPeerManager::buildServiceResponseTlvs(apple80211_awdl_service_params_tlv *,uchar *,uint)
IO80211AWDLPeerManager::buildSyncTreeTlv(apple80211_awdl_synch_tree_path_tlv *,uint)
IO80211AWDLPeerManager::cachedATVChangedSoloModeState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::cachedPeerChangedRealTimeState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::cachedPeerHasChangedChannelSequence(IO80211AWDLPeer *)
IO80211AWDLPeerManager::cachedPeerHasChangedInfra(IO80211Peer *)
IO80211AWDLPeerManager::calculateAWDLCommonChannel(bool)
IO80211AWDLPeerManager::calculateAWDLCommonChannelWithPeer(IO80211AWDLPeer *)
IO80211AWDLPeerManager::calculateChannelsForDataMode(void)
IO80211AWDLPeerManager::calculateDataChannelsForAirplaySolo(IO80211AWDLPeer *)
IO80211AWDLPeerManager::calculateDataChannelsForAirplaySoloDFS(IO80211AWDLPeer *)
IO80211AWDLPeerManager::channelAtSlot(uint)
IO80211AWDLPeerManager::checkAndAdoptPeerRTGID(IO80211AWDLPeer *)
IO80211AWDLPeerManager::checkAndupdateAirPlay2State(IO80211AWDLPeer *,bool)
IO80211AWDLPeerManager::checkAnomalyInService(void)
IO80211AWDLPeerManager::checkToCachePeer(IO80211Peer *)
IO80211AWDLPeerManager::cleanUpForPeerRemovedFromNDP(IO80211AWDLPeer *)
IO80211AWDLPeerManager::clearAirPlayingState(void)
IO80211AWDLPeerManager::clearAssistedDiscoveryState(void)
IO80211AWDLPeerManager::clearAwdlFixedElectionToSelf(void)
IO80211AWDLPeerManager::clearDynSdbState(void)
IO80211AWDLPeerManager::clearRTGSideCarState(bool)
IO80211AWDLPeerManager::comparePredictiveLinkScore(apple80211_scan_result *,apple80211_scan_result *,linkScoreComparisonType)
IO80211AWDLPeerManager::composeRTGChannelSequence(apple80211_rtg_peer_info *,uchar,uchar *,uchar)
IO80211AWDLPeerManager::configure(void)
IO80211AWDLPeerManager::configureAirPlayHPP(IO80211AWDLPeer *)
IO80211AWDLPeerManager::configureDFSProxy(IO80211AWDLPeer *,bool,uchar)
IO80211AWDLPeerManager::configureHPPLlwParams(bool,IO80211AWDLPeer *)
IO80211AWDLPeerManager::countActiveSockets(bool)
IO80211AWDLPeerManager::countryCodeStateChanged(void)
IO80211AWDLPeerManager::createReporters(void)
IO80211AWDLPeerManager::currentInfraTrafficType(void)
IO80211AWDLPeerManager::d2dStatsConfigureStop(IO80211AWDLPeer *)
IO80211AWDLPeerManager::dataIntensiveServiceActive(void)
IO80211AWDLPeerManager::dequeueTxPacket(TxPacketRequest *)
IO80211AWDLPeerManager::destroyReporters(void)
IO80211AWDLPeerManager::determineAirPlaySoloMode(IO80211AWDLPeer *)
IO80211AWDLPeerManager::determineAndSetEdgeRssiThreshold(uint)
IO80211AWDLPeerManager::determinePeerReachability(apple80211_act_frm_hdr const*,IO80211Buffer *)
IO80211AWDLPeerManager::deviceAllows2GOnlyScan(void)
IO80211AWDLPeerManager::dfsProxyGetInfraDFSChannel(IO80211AWDLPeer *)
IO80211AWDLPeerManager::dfsProxyModeAllowed(IO80211AWDLPeer *)
IO80211AWDLPeerManager::dfsProxyModeAllowedWithReason(IO80211AWDLPeer *)
IO80211AWDLPeerManager::dfsProxyStateMachine(IO80211AWDLPeer *,awdlDFSPState)
IO80211AWDLPeerManager::dfspScanDoneHandler(void)
IO80211AWDLPeerManager::disableAWDL(uint)
IO80211AWDLPeerManager::disableAWDLScanTimer(void)
IO80211AWDLPeerManager::disableAwdlRecoveryTimer(void)
IO80211AWDLPeerManager::disableInfraMonitoring(void)
IO80211AWDLPeerManager::disableLLAMonitoring(void)
IO80211AWDLPeerManager::disableSdbMode(void)
IO80211AWDLPeerManager::disableWorkQueueSources(void)
IO80211AWDLPeerManager::doDisable(char const*)
IO80211AWDLPeerManager::doEnable(char const*)
IO80211AWDLPeerManager::doesChannelSeqContain5GChannels(IO80211Buffer *)
IO80211AWDLPeerManager::duplicateMulticastPackets(__mbuf *)
IO80211AWDLPeerManager::dynSdbForceSDBModeOff(void)
IO80211AWDLPeerManager::dynSdbForceSDBModeOn(IO80211AWDLPeer *)
IO80211AWDLPeerManager::dynSdbStateMachine(awdlSDBState,IO80211AWDLPeer *)
IO80211AWDLPeerManager::dynamicSdbModeCheck(IO80211AWDLPeer *)
IO80211AWDLPeerManager::electionParamsChanged(void)
IO80211AWDLPeerManager::enableAWDL(void)
IO80211AWDLPeerManager::enableAwdlRecoveryTimer(uint)
IO80211AWDLPeerManager::enableDFSProxyMode(IO80211AWDLPeer *,uchar)
IO80211AWDLPeerManager::enableInfraMonitoring(void)
IO80211AWDLPeerManager::enableLLAMonitoring(void)
IO80211AWDLPeerManager::enableWorkQueueSources(void)
IO80211AWDLPeerManager::enqueuePeerInOrder(IO80211AWDLPeer *,int)
IO80211AWDLPeerManager::enterAssistedDiscoveryFollowMode(IO80211AWDLPeer *,rangingRole)
IO80211AWDLPeerManager::enterAssistedDiscoveryMode(ether_addr *,ushort,ushort)
IO80211AWDLPeerManager::enterCriticalAssistedDiscoveryPeriod(void)
IO80211AWDLPeerManager::enterQuietMode(void)
IO80211AWDLPeerManager::evaluateQuietMode(void)
IO80211AWDLPeerManager::evaluateRTGPeers(void)
IO80211AWDLPeerManager::evaluateThreadCoexPolicy(IO80211AWDLPeerManager::threadCoexPolicyEvent)
IO80211AWDLPeerManager::exitAssistedDiscoveryFollowMode(IO80211AWDLPeer *,rangingRole)
IO80211AWDLPeerManager::exitAssistedDiscoveryMode(bool)
IO80211AWDLPeerManager::exitAwdlSuspendedMode(void)
IO80211AWDLPeerManager::exitQuietMode(void)
IO80211AWDLPeerManager::failToEnable(void)
IO80211AWDLPeerManager::fillLegacyDataPathPayload(awdl_data_path_state_tlv &,bool,uint,bool)
IO80211AWDLPeerManager::findRoamingCandidateOnTargetChannel(IO80211AWDLPeer *,uint)
IO80211AWDLPeerManager::followPeerChannelSequence(IO80211AWDLPeer *)
IO80211AWDLPeerManager::forceRoamToPeersAP(ether_addr *,uchar)
IO80211AWDLPeerManager::forceSdbModeONForRealTimeGroup(bool)
IO80211AWDLPeerManager::free(void)
IO80211AWDLPeerManager::freeInfraMulticastPackets(void)
IO80211AWDLPeerManager::freeSocialMulticastPackets(void)
IO80211AWDLPeerManager::gatherInfraStats(void)
IO80211AWDLPeerManager::getAWDLStateNextTransition(AWDLPerStateInfo *)
IO80211AWDLPeerManager::getAssistedDiscoveryStartTimeInMsec(void)
IO80211AWDLPeerManager::getAwdlAfTxMode(apple80211_awdl_af_tx_mode *)
IO80211AWDLPeerManager::getAwdlAirplayStatistics(apple80211_p2p_airplay_ext_stats *)
IO80211AWDLPeerManager::getAwdlBlockSetCommands(apple80211_awdl_block_set_commands *)
IO80211AWDLPeerManager::getAwdlBtleStateParams(apple80211_awdl_btle_state_params *)
IO80211AWDLPeerManager::getAwdlCCA(apple80211_awdl_cca *)
IO80211AWDLPeerManager::getAwdlChannelSequence(apple80211_awdl_sync_channel_sequence *)
IO80211AWDLPeerManager::getAwdlCtl(apple80211_awdl_ctl *)
IO80211AWDLPeerManager::getAwdlElectionId(apple80211_awdl_election_id *)
IO80211AWDLPeerManager::getAwdlElectionMetric(apple80211_awdl_election_metric *)
IO80211AWDLPeerManager::getAwdlElectionParams(apple80211_awdl_election_params *)
IO80211AWDLPeerManager::getAwdlEncryptType(apple80211_encrypt *)
IO80211AWDLPeerManager::getAwdlExtensionParams(apple80211_awdl_extension_state_machine_parameter *)
IO80211AWDLPeerManager::getAwdlMasterChannel(apple80211_awdl_master_channel *)
IO80211AWDLPeerManager::getAwdlPeerDatabase(apple80211_awdl_peer_database *)
IO80211AWDLPeerManager::getAwdlPeerTrafficRegistration(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::getAwdlPreferredChannels(apple80211_awdl_preferred_channels *)
IO80211AWDLPeerManager::getAwdlRestoreDefaults(uint *)
IO80211AWDLPeerManager::getAwdlSecondaryMasterChannel(apple80211_awdl_secondary_master_channel *)
IO80211AWDLPeerManager::getAwdlSidecarDiagnostics(apple80211_awdl_sidecar_diagnostics *)
IO80211AWDLPeerManager::getAwdlSidecarStatistics(apple80211_awdl_sidecar_statistics *)
IO80211AWDLPeerManager::getAwdlSocialTimeSlots(apple80211_awdl_social_time_slots *)
IO80211AWDLPeerManager::getAwdlStatistics(apple80211_awdl_statistics *)
IO80211AWDLPeerManager::getAwdlSyncEnabled(apple80211_awdl_sync_enabled *)
IO80211AWDLPeerManager::getAwdlSyncParams(apple80211_awdl_sync_params *)
IO80211AWDLPeerManager::getHtCapabilityIE(apple80211_ht_capability *)
IO80211AWDLPeerManager::getInfrastructureState(void)
IO80211AWDLPeerManager::getLLWParams(apple80211_llw_params *)
IO80211AWDLPeerManager::getLogPolicy(CCLogPolicy *)
IO80211AWDLPeerManager::getMulticastPackets(TxPacketRequest *)
IO80211AWDLPeerManager::getTlvPtrForType(IO80211Buffer const*,uchar,ulong *)
IO80211AWDLPeerManager::getUnicastPackets(TxPacketRequest *,mbuf_traffic_class_t)
IO80211AWDLPeerManager::getVHtCapabilityIE(apple80211_vht_capability *)
IO80211AWDLPeerManager::getvalidAWDLServices(void)
IO80211AWDLPeerManager::growAFRing(void)
IO80211AWDLPeerManager::handleAVConferenceTrafficReg(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleAWDLRecoveryTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleAirPlayEnsembleTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleAirPlayToOdeonTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleAssistedDiscoveryTimedOut(IOTimerEventSource *)
IO80211AWDLPeerManager::handleAssistedDiscoveryTrafficReg(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleAwdlLLATimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleAwdlScanTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleCarPlayTrafficReg(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleConnectivityCheckTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleDebugCmd(apple80211_debug_command *)
IO80211AWDLPeerManager::handleDebugCmd_chanlist(apple80211_debug_command *,userPrintCtx *)
IO80211AWDLPeerManager::handleDebugCmd_print_awdl_peers(apple80211_debug_command *,userPrintCtx *)
IO80211AWDLPeerManager::handleInfraMonitorTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleMigrationTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleMulticastTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleRangingTrafficReg(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleSideCarEnsembleTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleSideCarTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *,bool &,bool &)
IO80211AWDLPeerManager::handleSuspendTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::handleTimeSyncTrafficReg(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::handleUmiTimer(IOTimerEventSource *)
IO80211AWDLPeerManager::inMulticastTimeslot(void)
IO80211AWDLPeerManager::increaseRssiThresholdForSingleStreamDevice(void)
IO80211AWDLPeerManager::infraDutyCycle(void)
IO80211AWDLPeerManager::initAWDLStateTrackInfo(void)
IO80211AWDLPeerManager::initCoreAnalyticsService(void)
IO80211AWDLPeerManager::initParamsToDefaults(void)
IO80211AWDLPeerManager::initWithInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211AWDLPeerManager::initiateHighThruputMode(IO80211AWDLPeer *)
IO80211AWDLPeerManager::inputPacket(__mbuf **,packet_info_tag *)
IO80211AWDLPeerManager::interfaceMonitor(void)
IO80211AWDLPeerManager::interfaceStateChange(StateChangedSource)
IO80211AWDLPeerManager::isAirplayTrafficOverSkywalkDatapath(void)
IO80211AWDLPeerManager::isDFSChannel(uchar)
IO80211AWDLPeerManager::isDFSChannelUsageAllowed(uchar *,uchar)
IO80211AWDLPeerManager::isPeerCacheProhibited(IO80211Peer *)
IO80211AWDLPeerManager::isPeerQualifiedForElection(IO80211AWDLPeer *)
IO80211AWDLPeerManager::isPeerSafeForElection(IO80211AWDLPeer *)
IO80211AWDLPeerManager::isPeerUncacheable(ether_addr *)
IO80211AWDLPeerManager::isRetroModeExpectedForSidecar(IO80211AWDLPeer *)
IO80211AWDLPeerManager::isSafeToSendUmiNow(uchar)
IO80211AWDLPeerManager::isSdbModeActive(void)
IO80211AWDLPeerManager::isValidAF(IO80211Buffer const*,void *,ulong)
IO80211AWDLPeerManager::isValidChanSeqTlv(IO80211BufferCursor const&)
IO80211AWDLPeerManager::isValidChannel(apple80211_channels_info *,uint,uint,uint *)
IO80211AWDLPeerManager::jumpStartDFSProxy(IOTimerEventSource *)
IO80211AWDLPeerManager::logAWEnd(apple80211_availability_window_extensions_end *)
IO80211AWDLPeerManager::logAWStart(apple80211_availability_window_start *)
IO80211AWDLPeerManager::logDisplayTriggeredServiceAnomaly(serviceRegRecord *,IO80211ServiceRequestDescriptor *)
IO80211AWDLPeerManager::logServiceInactivityAnomaly(serviceRegRecord *,IO80211ServiceRequestDescriptor *)
IO80211AWDLPeerManager::logTxCompletionPacket(__mbuf *,int)
IO80211AWDLPeerManager::logTxPacket(__mbuf *)
IO80211AWDLPeerManager::mapRecordTypeToServiceType(uint)
IO80211AWDLPeerManager::monitorAWDLCommonChannel(void)
IO80211AWDLPeerManager::monitorAWDLState(void)
IO80211AWDLPeerManager::monitorAWDLStats(void)
IO80211AWDLPeerManager::monitorAWEvents(void)
IO80211AWDLPeerManager::monitorDFSForceRoam(void)
IO80211AWDLPeerManager::monitorDataPath(void)
IO80211AWDLPeerManager::monitorElectionMetric(void)
IO80211AWDLPeerManager::monitorInfraBeacon(void)
IO80211AWDLPeerManager::monitorInfraTraffic(void)
IO80211AWDLPeerManager::monitorNearbyLogTrigger(void)
IO80211AWDLPeerManager::monitorPeerStats(void)
IO80211AWDLPeerManager::monitorTimeline(apple80211_availability_window_start *)
IO80211AWDLPeerManager::multicastAllowedOnInfra(void)
IO80211AWDLPeerManager::nearbyLogTriggerReceived(ushort,ether_addr)
IO80211AWDLPeerManager::notifyHostapState(apple80211_hostap_state *)
IO80211AWDLPeerManager::notifyRangingUMI(IO80211AWDLPeer *,uint)
IO80211AWDLPeerManager::notifyThreadCoexEvent(bool)
IO80211AWDLPeerManager::overlayScanRequestOnRealTimeChannelSequence(scheduleState)
IO80211AWDLPeerManager::populateTrafficRegV2(apple80211_awdl_peer_traffic_registration *,apple80211_traffic_registration *,realTimeServiceId)
IO80211AWDLPeerManager::preQueuePacket(__mbuf *)
IO80211AWDLPeerManager::printAWDLActiveTimeHistory(bool)
IO80211AWDLPeerManager::printAWDLGeneralState(void)
IO80211AWDLPeerManager::printAwdlChannelSequence(userPrintCtx *)
IO80211AWDLPeerManager::printAwdlPeers(apple80211_awdl_ctl *)
IO80211AWDLPeerManager::printState(userPrintCtx *)
IO80211AWDLPeerManager::processUnicastAfStatus(IO80211AWDLPeer *,apple80211_actionFrame_status *)
IO80211AWDLPeerManager::programChipWithNewMaster(void)
IO80211AWDLPeerManager::programMasterChannels(void)
IO80211AWDLPeerManager::realTimeDataModeRequired(void)
IO80211AWDLPeerManager::realTimePrintStats(realTimeServiceId,ether_addr *)
IO80211AWDLPeerManager::realTimeStatsGetSkywalkStatistics(void)
IO80211AWDLPeerManager::recordDisplayState(bool)
IO80211AWDLPeerManager::recordServiceRegistrationState(IO80211ServiceRequestDescriptor *,bool)
IO80211AWDLPeerManager::recoverAWDLPeerTrafficRegistrationSession(void)
IO80211AWDLPeerManager::recoverFromSetChanSeqFailure(void)
IO80211AWDLPeerManager::removeAllPeers(void)
IO80211AWDLPeerManager::removePeer(IO80211Peer *)
IO80211AWDLPeerManager::reportTransmitStatusLegacy(__mbuf *,int,packet_info_tx *)
IO80211AWDLPeerManager::reset(void)
IO80211AWDLPeerManager::resetElectionState(void)
IO80211AWDLPeerManager::resetPeerActivityTimeStamp(void)
IO80211AWDLPeerManager::resetServiceRegStats(void)
IO80211AWDLPeerManager::resolveAWDLChannelConflict(apple80211_radio_channel_sequence *)
IO80211AWDLPeerManager::runElection(void)
IO80211AWDLPeerManager::runParentElection(void)
IO80211AWDLPeerManager::runPiggybackScanStateMachine(void)
IO80211AWDLPeerManager::sanityCheckAWEnd(void)
IO80211AWDLPeerManager::sanityCheckAWStart(void)
IO80211AWDLPeerManager::scanForPeersBSSIDOnDFSChannel(IO80211AWDLPeer *,uint)
IO80211AWDLPeerManager::sdbModeAnd24Infra(void)
IO80211AWDLPeerManager::sdbStateToString(awdlSDBState)
IO80211AWDLPeerManager::selectChannelsToUseForAWDL(void)
IO80211AWDLPeerManager::sendRealTimeUMI(IO80211AWDLPeer *,uint)
IO80211AWDLPeerManager::sendUnicastMI(IO80211AWDLPeer *,uint,uchar *)
IO80211AWDLPeerManager::setAFTXMode(apple80211_awdl_af_tx_type_t)
IO80211AWDLPeerManager::setAWDLMaxBandwidth(uint)
IO80211AWDLPeerManager::setAWDLStateStart(scheduleState,uint)
IO80211AWDLPeerManager::setAWDLStateStop(void)
IO80211AWDLPeerManager::setAirPlayChannelToPeerForMode(uchar &,IO80211AWDLPeerManager::AirPlayMode_t)
IO80211AWDLPeerManager::setAirPlayChannelToSelfForMode(uchar &,IO80211AWDLPeerManager::AirPlayMode_t)
IO80211AWDLPeerManager::setAirPlayPeer(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setAirPlayState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setAwdlAfTxMode(apple80211_awdl_af_tx_mode *)
IO80211AWDLPeerManager::setAwdlAvailabilityWindowApAlignment(apple80211_awdl_availability_window_ap_alignment *)
IO80211AWDLPeerManager::setAwdlBlockSetCommands(apple80211_awdl_block_set_commands *)
IO80211AWDLPeerManager::setAwdlBssid(apple80211_awdl_bssid *)
IO80211AWDLPeerManager::setAwdlBtleEnableSynchWithParams(apple80211_awdl_btle_enable_synch_params *)
IO80211AWDLPeerManager::setAwdlBtlePeerIndication(apple80211_awdl_btle_peer_indication_data *)
IO80211AWDLPeerManager::setAwdlChannelSequence(apple80211_awdl_sync_channel_sequence *)
IO80211AWDLPeerManager::setAwdlCtl(apple80211_awdl_ctl *)
IO80211AWDLPeerManager::setAwdlElectionId(apple80211_awdl_election_id *)
IO80211AWDLPeerManager::setAwdlElectionMetric(apple80211_awdl_election_metric *)
IO80211AWDLPeerManager::setAwdlElectionParams(apple80211_awdl_election_params *)
IO80211AWDLPeerManager::setAwdlElectionRssiThresholds(apple80211_awdl_election_rssi_thresholds *)
IO80211AWDLPeerManager::setAwdlEncryptType(apple80211_encrypt *)
IO80211AWDLPeerManager::setAwdlExtensionParameters(void)
IO80211AWDLPeerManager::setAwdlExtensionParams(apple80211_awdl_extension_state_machine_parameter *)
IO80211AWDLPeerManager::setAwdlFixedElectionToSelf(void)
IO80211AWDLPeerManager::setAwdlKey(apple80211_key *)
IO80211AWDLPeerManager::setAwdlMasterChannel(apple80211_awdl_master_channel *)
IO80211AWDLPeerManager::setAwdlMaxPeers(apple80211_peer_cache_maximum_size *)
IO80211AWDLPeerManager::setAwdlNearbyLogTrigger(apple80211_awdl_nearby_log_trigger_data *)
IO80211AWDLPeerManager::setAwdlOUI(apple80211_awdl_oui *)
IO80211AWDLPeerManager::setAwdlOperatingMode(apple80211_awdl_oper_mode *)
IO80211AWDLPeerManager::setAwdlPeerServiceRequest(apple80211_peer_service_request *,uchar *)
IO80211AWDLPeerManager::setAwdlPeerTrafficRegistration(apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::setAwdlPresenceMode(apple80211_awdl_presence_mode *)
IO80211AWDLPeerManager::setAwdlSecondaryMasterChannel(apple80211_awdl_secondary_master_channel *)
IO80211AWDLPeerManager::setAwdlSocialTimeSlots(apple80211_awdl_social_time_slots *)
IO80211AWDLPeerManager::setAwdlStrategy(apple80211_awdl_strategy *)
IO80211AWDLPeerManager::setAwdlSuspendedMode(void)
IO80211AWDLPeerManager::setAwdlSyncEnabled(apple80211_awdl_sync_enabled *)
IO80211AWDLPeerManager::setAwdlSyncFramePacketLifetime(apple80211_awdl_sync_frame_packet_lifetime *)
IO80211AWDLPeerManager::setAwdlSyncParams(apple80211_awdl_sync_params *)
IO80211AWDLPeerManager::setAwdlSyncState(apple80211_awdl_sync_state *)
IO80211AWDLPeerManager::setChannelSequence(void)
IO80211AWDLPeerManager::setChannelSequenceUnconditional(bool)
IO80211AWDLPeerManager::setCountryCode(apple80211_country_code_data *)
IO80211AWDLPeerManager::setDataMode(scheduleStateReasons,bool)
IO80211AWDLPeerManager::setDisplayState(bool)
IO80211AWDLPeerManager::setDynSdbExitRate(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setElectionMetricForAirplaySink(bool *)
IO80211AWDLPeerManager::setElectionMetricForNonAirplaySink(bool *)
IO80211AWDLPeerManager::setElectionMetricsToDefault(void)
IO80211AWDLPeerManager::setElectionParamsToForcedPeer(void)
IO80211AWDLPeerManager::setElectionParamsToNANPeer(awdlElectionParamsTlvV2 *)
IO80211AWDLPeerManager::setHostApAWDLConcurrency(uchar)
IO80211AWDLPeerManager::setIOCTL(uint,uint,void *)
IO80211AWDLPeerManager::setInfraTxState(bool)
IO80211AWDLPeerManager::setJoiningState(scanSource,joinStatus,bool)
IO80211AWDLPeerManager::setLLWParams(apple80211_llw_params *)
IO80211AWDLPeerManager::setLogPolicy(CCLogPolicy)
IO80211AWDLPeerManager::setPresenceMode(uint)
IO80211AWDLPeerManager::setScanningState(scanSource,bool,apple80211_scan_data *,int)
IO80211AWDLPeerManager::setSideCarState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setSidecarChanseq(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setSyncFramePeriod(uint)
IO80211AWDLPeerManager::setTimeSyncChannelAndSchedule(void)
IO80211AWDLPeerManager::setTimeSyncState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::setToAdoptNANChannelSequence(bool)
IO80211AWDLPeerManager::setTrafficRegistration(apple80211_traffic_registration *)
IO80211AWDLPeerManager::setupDFSProxyMode(IO80211AWDLPeer *,uchar)
IO80211AWDLPeerManager::setupStateForSideCar(IO80211AWDLPeer *,apple80211_awdl_peer_traffic_registration *)
IO80211AWDLPeerManager::shouldEnterQuietMode(void)
IO80211AWDLPeerManager::shouldForceSDBMode(IO80211AWDLPeer *)
IO80211AWDLPeerManager::shouldRunElection(void)
IO80211AWDLPeerManager::sidecarClearPeerState(IO80211AWDLPeer *)
IO80211AWDLPeerManager::sidecarRecoveryStateTransition(IO80211AWDLPeer *)
IO80211AWDLPeerManager::sidecarSessionPrintStats(void)
IO80211AWDLPeerManager::sidecarStatsConfigureOnState(void)
IO80211AWDLPeerManager::sidecarStatsGetBssSteeringStatistics(void)
IO80211AWDLPeerManager::sidecarStatsPostMetrics(void)
IO80211AWDLPeerManager::sidecarStatsSessionActiveTimeInMsec(void)
IO80211AWDLPeerManager::sidecarStatsSessionBgTimeInMsec(void)
IO80211AWDLPeerManager::skywalkLogTxCompletionPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,IO80211Peer *,int,uint)
IO80211AWDLPeerManager::staleCheckAndUpdateRootNodeList(IO80211AWDLPeer *)
IO80211AWDLPeerManager::startHighThruputMode(IO80211AWDLPeer *)
IO80211AWDLPeerManager::startRealTimeGroupSessionWith(IO80211AWDLPeer *)
IO80211AWDLPeerManager::stopHighThruputMode(IO80211AWDLPeer *)
IO80211AWDLPeerManager::stopRealTimeGroupSessionWith(IO80211AWDLPeer *)
IO80211AWDLPeerManager::submitRTGMetricstoCoreAnalytics(void)
IO80211AWDLPeerManager::topMasterChanged(void)
IO80211AWDLPeerManager::triggerBssSteeringAtSidecarSender(IO80211AWDLPeer *)
IO80211AWDLPeerManager::triggerScanForBssSteering(void)
IO80211AWDLPeerManager::updateAFStats(apple80211_act_frm_hdr *,apple80211_awdl_action_frame_hdr *,bool)
IO80211AWDLPeerManager::updateAWDLCommonChannel(void)
IO80211AWDLPeerManager::updateAWDLServiceCnts(uint)
IO80211AWDLPeerManager::updateBroadcastMI(MIPayloadUpdateReason_t,bool,bool)
IO80211AWDLPeerManager::updateHTandVHTCapsForRSDB(void)
IO80211AWDLPeerManager::updateLocalRequests(apple80211_peer_service_request_kernel *)
IO80211AWDLPeerManager::updateMulticastQueues(void)
IO80211AWDLPeerManager::updatePrimaryPayloadMI(MIPayloadUpdateReason_t,bool,bool)
IO80211AWDLPeerManager::updateRTGDiscoveryRelatedMetricsInfo(IO80211AWDLPeer *)
IO80211AWDLPeerManager::updateRTGPeersChannelsMetricsInfo(void)
IO80211AWDLPeerManager::updateRTGPeersRoleMetricsInfo(void)
IO80211AWDLPeerManager::updateRangingTLV(bool,uchar *,uchar)
IO80211AWDLPeerManager::updateRootNodeList(IO80211AWDLPeer *)
IO80211AWDLPeerManager::updateSSTH(void)
IO80211AWDLPeerManager::updateScheduleState(scheduleState)
IO80211AWDLPeerManager::updateSecondaryPayloadMI(MIPayloadUpdateReason_t,bool,bool)
IO80211AWDLPeerManager::updateServiceRegistrationStats(void)
IO80211AWDLPeerManager::updateSyncFrameTemplate(bool)
IO80211AWDLPeerManager::useMyInfraForAirPlay(IO80211AWDLPeer *)
IO80211AWDLPeerManager::usePiggybackScan(apple80211_scan_data *)
IO80211AWDLPeerManager::validRecordForBonjourOffload(IO80211ServiceRequestDescriptor *)
IO80211AWDLPeerManager::validateForHostapAWDLConcurrency(void)
IO80211AWDLPeerManager::withInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211AWDLPeerManager::~IO80211AWDLPeerManager()
IO80211ActionFrameDescriptor::free(void)
IO80211ActionFrameDescriptor::initWithAddr(ether_addr *)
IO80211ActionFrameDescriptor::print(userPrintCtx *)
IO80211AllocBPFNode(uint,OSObject *,uint (OSObject::*)(__mbuf *,void *),IO80211WorkQueue *,int (OSObject::*)(uint,uint))
IO80211AssociationJoinSnapshot::captureRequestCallback(char const*,CCTimestamp const*)
IO80211AssociationJoinSnapshot::clearAssocHistory(void)
IO80211AssociationJoinSnapshot::count(uint,void *,ulong)
IO80211AssociationJoinSnapshot::countStatusUsingDataInTLV(uint,void *,ulong)
IO80211AssociationJoinSnapshot::createArrayOfEntireHistoryMessageScanAndTime(void)
IO80211AssociationJoinSnapshot::createArrayOfEventsBeforeAssocDone(void)
IO80211AssociationJoinSnapshot::createBlobPipeAndStream(void)
IO80211AssociationJoinSnapshot::createIOReporters(void)
IO80211AssociationJoinSnapshot::dumpSnapshot(char const*,CCTimestamp const*)
IO80211AssociationJoinSnapshot::free(void)
IO80211AssociationJoinSnapshot::initWithInterfaceAndOptions(IOService *,IO80211Interface *,IO80211SkywalkInterface *,IO80211AssociationJoinSnapshot::apple80211_joinSnapshotInitOptionsType *)
IO80211AssociationJoinSnapshot::logDebug(char const*,...)
IO80211AssociationJoinSnapshot::retrieveIOReportersAndEnqueueToSet(IOTimerEventSource *)
IO80211AssociationJoinSnapshot::withInterfaceAndOptions(IOService *,IO80211Interface *,IO80211SkywalkInterface *,IO80211AssociationJoinSnapshot::apple80211_joinSnapshotInitOptionsType *)
IO80211AsyncEventUserClient::clientClose(void)
IO80211AsyncEventUserClient::eventInTransitReadNotification(IO80211AsyncEventUserClient*,void *,IOExternalMethodArguments *)
IO80211AsyncEventUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IO80211AsyncEventUserClient::free(void)
IO80211AsyncEventUserClient::initWithTask(task *,kIO80211InterfaceType)
IO80211AsyncEventUserClient::log(char const*,...)
IO80211AsyncEventUserClient::monitorAllEventStart(IO80211AsyncEventUserClient*,void *,IOExternalMethodArguments *)
IO80211AsyncEventUserClient::postEvent(user_client_event const*)
IO80211AsyncEventUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
IO80211AsyncEventUserClient::resetClient(void)
IO80211AsyncEventUserClient::sendEvent(IOMemoryDescriptor *,user_client_event const*,uint)
IO80211AsyncEventUserClient::start(IOService *)
IO80211AsyncEventUserClient::stop(IOService *)
IO80211AsyncUserClientParameters::free(void)
IO80211AsyncUserClientParameters::getFreeBuffer(IOMemoryDescriptor **)
IO80211AsyncUserClientParameters::initWithParams(ulong,uint)
IO80211BPFListFree(bpfListHead *)
IO80211BPFNodeFree(bpfNode *)
IO80211BpfTap(__ifnet *,uint,uint)
IO80211Buffer::allocBuffer(IO80211BufferOptions *)
IO80211Buffer::allocBufferSingle(uint,ulong,IO80211BufferPool **,char const*)
IO80211Buffer::free(void)
IO80211Buffer::getBytesNoCopy(void)
IO80211Buffer::initWithOptions(IO80211BufferOptions *)
IO80211BufferCursor::_crop(ulong,ulong)
IO80211BufferCursor::copyFrom(IO80211BufferCursor const&,ulong)
IO80211BufferCursor::dropTail(ulong)
IO80211BufferPool::flushPool(void)
IO80211BufferPool::free(void)
IO80211BufferPool::getBuffer(void)
IO80211BufferPool::initWithOptions(IO80211BufferPoolOptions *)
IO80211BufferPool::resetPool(void)
IO80211BufferPool::returnBuffer(IO80211Buffer *)
IO80211BufferSlab::free(void)
IO80211BufferSlab::getBytesNoCopy(ulong,ulong,ulong)
IO80211BufferSlab::initWithOptions(IO80211BufferSlabOptions *)
IO80211BufferSlab::isZero(ulong)
IO80211BufferSlab::readBytes(ulong,ulong,void *,ulong)
IO80211BufferSlab::withOptions(IO80211BufferSlabOptions *)
IO80211BufferSlab::writeBytes(ulong,ulong,void const*,ulong)
IO80211BufferSlab::zero(ulong)
IO80211CagedBuffer::copyIn(void const*,ulong)
IO80211CagedBuffer::free(void)
IO80211CagedBuffer::getBuffer(void)
IO80211CagedBuffer::init(IO80211CagedBufferGuardSize,ulong)
IO80211CagedBuffer::withLayout(IO80211CagedBufferGuardSize,ulong)
IO80211CalculateMaxNSSAndHEMCSForMCSMap(ushort,uint *,uint *)
IO80211CalculateMaxNSSAndVHTMCSForMCSMap(ushort,uint *,uint *)
IO80211CommandQueue::dequeue(uint)
IO80211CommandQueue::enqueue(IO80211QueueDescriptor *)
IO80211CommandQueue::enqueueBefore(IO80211QueueDescriptor *,IO80211QueueDescriptor *)
IO80211CommandQueue::flush(void)
IO80211CommandQueue::free(void)
IO80211CommandQueue::getFirst(uchar)
IO80211CommandQueue::getLast(uchar)
IO80211CommandQueue::initWithGateAndCapacity(IOCommandGate *,uint,uint)
IO80211CommandQueue::lockDequeue(uchar)
IO80211CommandQueue::lockEnqueue(IO80211QueueDescriptor *)
IO80211CommandQueue::lockFlush(void)
IO80211CommandQueue::lockInsert(comparisonResult (*)(IO80211QueueDescriptor *,IO80211QueueDescriptor *,userPrintCtx *),IO80211QueueDescriptor *,userPrintCtx *,insertMethod,int (*)(OSObject *,IO80211QueueDescriptor *,void *,userPrintCtx *))
IO80211CommandQueue::lockMap(MapAction (*)(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *),OSObject *,void *,mapExtraParam *,uint)
IO80211CommandQueue::map(MapAction (*)(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *),OSObject *,void *,mapExtraParam *,uint)
IO80211CommandQueue::print(userPrintCtx *)
IO80211CommandQueue::releaseResources(void)
IO80211CommandQueue::unlock(char const*,int)
IO80211CommandQueue::withGateAndCapacity(IOCommandGate *,uint,uint)
IO80211ConfigureBPFOutputQueue(uint,uint,IOGatedOutputQueue *)
IO80211Controller::_apple80211_ioctl_getForIOUC(IO80211Interface *,IO80211VirtualInterface *,IO80211SkywalkInterface *,void *)
IO80211Controller::_apple80211_ioctl_getLegacy(IO80211Interface *,IO80211VirtualInterface *,IO80211SkywalkInterface *,void *)
IO80211Controller::_apple80211_ioctl_setForIOUC(IO80211Interface *,IO80211VirtualInterface *,IO80211SkywalkInterface *,void *)
IO80211Controller::_apple80211_ioctl_setLegacy(IO80211Interface *,IO80211VirtualInterface *,IO80211SkywalkInterface *,void *)
IO80211Controller::addIOReportLogStreamForProvider(IOService *,ulong long *)
IO80211Controller::addReporterLegend(IOService *,IOReporter *,char const*,char const*)
IO80211Controller::addSubscriptionForThisReporterFetchedOnTimer(IOReporter *,char const*,char const*,IOService *)
IO80211Controller::apple80211RequestIoctl(uint,int,IO80211Interface *,void *)
IO80211Controller::apple80211VirtualRequestIoctl(uint,int,IO80211VirtualInterface *,void *)
IO80211Controller::apple80211_ioctl(IO80211Interface *,IO80211VirtualInterface *,__ifnet *,ulong,void *)
IO80211Controller::apple80211_ioctl(IO80211Interface *,__ifnet *,ulong,void *)
IO80211Controller::apple80211_ioctl(IO80211SkywalkInterface *,ulong,void *)
IO80211Controller::apple80211_ioctl_get(IO80211Interface *,IO80211VirtualInterface *,IO80211SkywalkInterface *,void *)
IO80211Controller::attachInterface(IOSkywalkInterface *,IOService *)
IO80211Controller::attachInterfaceWithMacAddress(void *,uint,IONetworkInterface **,bool,uint)
IO80211Controller::attachVirtualInterface(IO80211VirtualInterface **,ether_addr *,uint,bool)
IO80211Controller::bpfOutputPacket(OSObject *,uint,__mbuf *)
IO80211Controller::calculateInterfacesAvaiability(void)
IO80211Controller::calculateInterfacesCoex(void)
IO80211Controller::configureAntennae(void)
IO80211Controller::configureInterface(IONetworkInterface *)
IO80211Controller::configureReport(IOReportChannelList *,uint,void *,void *)
IO80211Controller::copyIn(ulong long,void *,ulong)
IO80211Controller::createIOReporters(IOService *)
IO80211Controller::createVirtualInterface(ether_addr *,uint)
IO80211Controller::createWorkLoop(void)
IO80211Controller::createWorkQueue(void)
IO80211Controller::detachInterface(IOSkywalkInterface *,bool)
IO80211Controller::detachVirtualInterface(IO80211VirtualInterface *,bool)
IO80211Controller::disable(IO80211SkywalkInterface *)
IO80211Controller::disable(IONetworkInterface *)
IO80211Controller::dispatchPacket(__mbuf *,uint,char *,uint)
IO80211Controller::enable(IO80211SkywalkInterface *)
IO80211Controller::enable(IONetworkInterface *)
IO80211Controller::errnoFromReturn(int)
IO80211Controller::findAndAttachToFaultReporter(void)
IO80211Controller::forceInterfaceRegistration(IO80211Interface *)
IO80211Controller::free(void)
IO80211Controller::getBSSIDData(OSObject *,apple80211_bssid_data *)
IO80211Controller::getBeaconPeriod(apple80211_beacon_period_data *)
IO80211Controller::getCountryCode(apple80211_country_code_data *)
IO80211Controller::getHardwareAddressForInterface(IO80211Interface *,IOEthernetAddress *)
IO80211Controller::getInfraChannel(apple80211_channel_data *)
IO80211Controller::getInfraInterface(void)
IO80211Controller::getInterfaceMonitor(void)
IO80211Controller::getPrimaryInterfaceLinkState(void)
IO80211Controller::getPrimaryInterfaceScanManager(void)
IO80211Controller::getRxLatencyClearOnRead(OSData *)
IO80211Controller::getSSIDData(apple80211_ssid_data *)
IO80211Controller::getTxLatencyClearOnRead(OSData *)
IO80211Controller::getWorkLoop(void)
IO80211Controller::handleIOReporterTimer(IOTimerEventSource *)
IO80211Controller::init(OSDictionary *)
IO80211Controller::inputInfraPacket(__mbuf *)
IO80211Controller::inputMonitorPacket(__mbuf *,uint,void *,ulong)
IO80211Controller::inputPacket(__mbuf *)
IO80211Controller::isIOCTLLoggingRestricted(apple80211req *)
IO80211Controller::joinDone(scanSource,joinStatus)
IO80211Controller::joinStarted(scanSource,joinStatus)
IO80211Controller::logIOCTLIOUC(apple80211req *)
IO80211Controller::logIOCTLLegacy(apple80211req *)
IO80211Controller::logRxLatency(ulong long,uint)
IO80211Controller::logTxLatency(ulong long,uint)
IO80211Controller::outputActionFrame(IO80211Interface *,__mbuf *)
IO80211Controller::outputRaw80211Packet(IO80211Interface *,__mbuf *)
IO80211Controller::outputStart(IONetworkInterface *,uint)
IO80211Controller::radioCountForInterface(IO80211Interface *)
IO80211Controller::releaseIOReporters(void)
IO80211Controller::removeReporterFromLegend(IOService *,IOReporter *,char const*,char const*)
IO80211Controller::requestFlowQueue(FlowIdMetadata const*)
IO80211Controller::scanDone(scanSource,int)
IO80211Controller::scanStarted(scanSource,apple80211_scan_data *)
IO80211Controller::selfDiagnosticsReport(int,char const*,uint)
IO80211Controller::setBTCoexstat(apple80211_stat_report *,apple80211_btCoex_report *)
IO80211Controller::setChanCCA(apple80211_stat_report *,int)
IO80211Controller::setChanExtendedCCA(apple80211_stat_report *,apple80211_cca_report *)
IO80211Controller::setChanNoiseFloor(apple80211_stat_report *,int)
IO80211Controller::setChanNoiseFloorLTE(apple80211_stat_report *,int)
IO80211Controller::setCountryCode(apple80211_country_code_data *)
IO80211Controller::setCurrentChannel(apple80211_channel *)
IO80211Controller::setDisplayState(bool)
IO80211Controller::setInfraChannel(apple80211_channel *)
IO80211Controller::setLeakyAPStats(apple80211_leaky_ap_event *)
IO80211Controller::setLogTarget(IO80211Interface *,IO80211VirtualInterface *,bool)
IO80211Controller::setPowerStats(apple80211_stat_report *,apple80211_power_debug_sub_info *)
IO80211Controller::setPrimaryInterfaceDatapathState(bool)
IO80211Controller::setupControlPathLogging(void)
IO80211Controller::start(IOService *)
IO80211Controller::stop(IOService *)
IO80211Controller::stringFromReturn(int)
IO80211Controller::updateIOReportersStreamFrequency(void)
IO80211Controller::updateInterfaceCoexRiskPct(ulong long)
IO80211Controller::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211Controller::vlogDebug(ulong long,char const*,char *)
IO80211Controller::~IO80211Controller()
IO80211ControllerMonitor::createHeReportersAndLegend(void)
IO80211ControllerMonitor::createReportersAndLegend(void)
IO80211ControllerMonitor::destroyReporters(void)
IO80211ControllerMonitor::free(void)
IO80211ControllerMonitor::getBTCoexWLANLostAntenna(ulong long *,ulong long *,bool *)
IO80211ControllerMonitor::getChanCCA(apple80211_channel,long long *)
IO80211ControllerMonitor::getChanQualChannelID(IO80211ControllerMonitor::ChannelQualityTypes,apple80211_channel)
IO80211ControllerMonitor::getRxErrorRate(uint *)
IO80211ControllerMonitor::getTxErrorRate(uint *)
IO80211ControllerMonitor::getTxRetransmitRate(uint *)
IO80211ControllerMonitor::initWithControllerAndProvider(IO80211Controller *,IOService *)
IO80211ControllerMonitor::resetIO80211ReporterHistory(void)
IO80211ControllerMonitor::setAMPDUstat(apple80211_stat_report *,apple80211_ampdu_stat_report *)
IO80211ControllerMonitor::setBTCoexstat(apple80211_stat_report *,apple80211_btCoex_report *)
IO80211ControllerMonitor::setChanCCA(apple80211_channel,int)
IO80211ControllerMonitor::setChanNoiseFloor(apple80211_channel,int)
IO80211ControllerMonitor::setChanNoiseFloorLTE(apple80211_channel,int)
IO80211ControllerMonitor::setChipCounterStats(apple80211_chip_stats *)
IO80211ControllerMonitor::setChipHeCounterStats(apple80211_he_stats *)
IO80211ControllerMonitor::setDriverAvailable(void *,ulong)
IO80211ControllerMonitor::setFrameStats(apple80211_frame_counters *)
IO80211ControllerMonitor::setLTECoexstat(apple80211_stat_report *,apple80211_lteCoex_report *)
IO80211ControllerMonitor::setLprxStats(apple80211_power_debug_sub_info *)
IO80211ControllerMonitor::setPowerStats(apple80211_power_debug_sub_info *)
IO80211ControllerMonitor::setRxetStats(apple80211_power_debug_sub_info *)
IO80211ControllerMonitor::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211ControllerMonitor::withControllerAndProvider(IO80211Controller *,IOService *)
IO80211DriverCommandDescriptor::free(void)
IO80211DriverCommandDescriptor::init(void)
IO80211EventSource::checkForWork(void)
IO80211EventSource::free(void)
IO80211EventSource::initWithCallbacks(OSObject *,bool (*)(OSObject *,IO80211WorkSource *))
IO80211EventSource::withCallbacks(OSObject *,bool (*)(OSObject *,IO80211WorkSource *))
IO80211FlowQueue::free(void)
IO80211FlowQueue::initWithParamaters(ether_addr const&,uchar,uchar)
IO80211FlowQueue::pendingPackets(void)
IO80211FlowQueue::print(void *)
IO80211FlowQueueDatabase::MetaClass::alloc(void)
IO80211FlowQueueDatabase::find(bool (*)(IO80211FlowQueue *,void *),void *)
IO80211FlowQueueDatabase::find(ulong long)
IO80211FlowQueueDatabase::flush(void (*)(IO80211FlowQueue *,void *),void *)
IO80211FlowQueueDatabase::free(void)
IO80211FlowQueueDatabase::init(void)
IO80211FlowQueueDatabase::initialize(void)
IO80211FlowQueueDatabase::insert(IO80211FlowQueue *)
IO80211FlowQueueDatabase::map(bool (*)(IO80211FlowQueue *,void *),void *)
IO80211FlowQueueDatabase::packetSpace(uchar)
IO80211FlowQueueDatabase::pendingPackets(uchar)
IO80211FlowQueueDatabase::print(void *)
IO80211FlowQueueDatabase::remove(ulong long)
IO80211FlowQueueLegacy::queueSize(void)
IO80211FlowQueueLegacy::queueSpace(void)
IO80211HistogramReporter::copyHistValues(histogramBin_s *,uint)
IO80211HistogramReporter::free(void)
IO80211HistogramReporter::initWith(IOService *,ushort,ulong long,OSSymbol const*,ulong long,int,IOHistogramSegmentConfig *)
IO80211HistogramReporter::with(IOService *,ushort,ulong long,char const*,ulong long,int,IOHistogramSegmentConfig *)
IO80211IOUCEventPipe::createMapping(task *,IOUCPipeMap *)
IO80211IOUCEventPipe::free(void)
IO80211IOUCEventPipe::reserveRingEntry(char const*,uint,ulong,int *)
IO80211IOUCEventPipe::withClient(IO80211APIUserClient *)
IO80211IOUCEventPipe::writePipe(char const*,uint,uchar *,ulong)
IO80211InfraInterface::bpfAttach(uint,uint,OSObject *,uint (OSObject::*)(__mbuf *,void *),int (OSObject::*)(uint,uint),IO80211WorkQueue *)
IO80211InfraInterface::bpfTap(uint,uint)
IO80211InfraInterface::cancelDebounceTimer(void)
IO80211InfraInterface::configureReport(IOReportChannelList *,uint,void *,void *)
IO80211InfraInterface::createAssocHistory(void)
IO80211InfraInterface::createLinkQualityMonitor(IO80211Peer *,IOService *)
IO80211InfraInterface::free(void)
IO80211InfraInterface::getHardwareAddress(ether_addr *)
IO80211InfraInterface::getInfraLinkProperties(IO80211Peer *,uint &,uint &,apple80211_channel &,apple80211_channel_width &,apple80211_phymode &,char const**)
IO80211InfraInterface::getLQMSummary(apple80211_lqm_summary *)
IO80211InfraInterface::getTrafficMonitor(void)
IO80211InfraInterface::getWmeTxCounters(ulong long *)
IO80211InfraInterface::init(void)
IO80211InfraInterface::initCapabilities(void)
IO80211InfraInterface::inputPacket(IOSkywalkNetworkPacket *,packet_info_tag *,ether_header *)
IO80211InfraInterface::logTxCompletionPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,int,uint,bool)
IO80211InfraInterface::logTxPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,bool)
IO80211InfraInterface::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IO80211InfraInterface::notifyAWDLStateChange(bool)
IO80211InfraInterface::postMessageInternal(uint,void *,ulong)
IO80211InfraInterface::prepareBSDInterface(__ifnet *,uint)
IO80211InfraInterface::processBSDCommand(__ifnet *,uint,void *)
IO80211InfraInterface::releaseLinkQualityMonitor(IO80211Peer *)
IO80211InfraInterface::reportAVCAdvisoryInfo(IO80211InterfaceAVCAdvisory *)
IO80211InfraInterface::reportAVCAdvisoryInfoGated(IO80211InterfaceAVCAdvisory *)
IO80211InfraInterface::reportAdvisoryInfo(IOTimerEventSource *)
IO80211InfraInterface::reportDataPathEvents(uint,void *,ulong)
IO80211InfraInterface::reportDataPathEventsGated(void *,void *,void *,void *,void *)
IO80211InfraInterface::reportDataTransferRatesGated(void)
IO80211InfraInterface::reportDataTransferRatesStatic(void *)
IO80211InfraInterface::setBTCoexWLANLostAntennaTime(ulong long,ulong long,bool,apple80211_btCoex_report *)
IO80211InfraInterface::setDataPointerAndLengthForMessageType(apple80211_postMessage_tlv_types,void **,ulong *)
IO80211InfraInterface::setHardwareAddress(ether_addr *)
IO80211InfraInterface::setInterfaceNF(apple80211_channel,long long)
IO80211InfraInterface::setLQM(ulong long)
IO80211InfraInterface::setLQMGated(ulong long)
IO80211InfraInterface::setLQMStatic(void *,void *)
IO80211InfraInterface::setLeakyAPStats(apple80211_leaky_ap_event *)
IO80211InfraInterface::setLeakyAPStatsMode(uint)
IO80211InfraInterface::setLeakyApSsidMetrics(apple80211_leaky_ap_ssid_metrics *)
IO80211InfraInterface::setPeerManagerLogFlag(uint,uint,uint)
IO80211InfraInterface::setPoweredOnByUser(bool)
IO80211InfraInterface::setScanningState(uint,bool,apple80211_scan_data *,int)
IO80211InfraInterface::setWMMBWReset(bool)
IO80211InfraInterface::setWoWEnabled(bool)
IO80211InfraInterface::start(IOService *)
IO80211InfraInterface::triggerLinkStatusUpdate(IOTimerEventSource *)
IO80211InfraInterface::updateBSSIDProperty(void)
IO80211InfraInterface::updateChannelProperty(void)
IO80211InfraInterface::updateChannelPropertyGated(void)
IO80211InfraInterface::updateChannelPropertyStatic(void *)
IO80211InfraInterface::updateCountryCodeProperty(bool)
IO80211InfraInterface::updateInterfaceCoexRiskPct(ulong long)
IO80211InfraInterface::updateLinkParameters(apple80211_interface_availability *)
IO80211InfraInterface::updateLinkParametersGated(apple80211_interface_availability *)
IO80211InfraInterface::updateLinkParametersStatic(void *,void *)
IO80211InfraInterface::updateLinkStatusGated(void)
IO80211InfraInterface::updateLinkStatusStatic(void *)
IO80211InfraInterface::updateMediumStatus(ifmediareq *)
IO80211InfraInterface::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211InfraInterface::updateSSIDProperty(void)
IO80211InfraInterface::updateStaticProperties(void)
IO80211InfraInterface::willRoam(ether_addr *,uint)
IO80211InfraInterface__fn_0x6c8
IO80211Interface::IO80211InterfacePostMessage(uint,void *,ulong)
IO80211Interface::MetaClass::alloc(void)
IO80211Interface::attach(IOService *)
IO80211Interface::attachToDataLinkLayer(uint,void *)
IO80211Interface::awsRespond(__mbuf *,AWSRequest *,ulong,ushort)
IO80211Interface::bpfAttach(uint,uint)
IO80211Interface::bpfAttach(uint,uint,OSObject *,uint (OSObject::*)(__mbuf *,void *),int (OSObject::*)(uint,uint),IO80211WorkQueue *)
IO80211Interface::bpfOutput(uint,__mbuf *)
IO80211Interface::bpfOutputPacket(__mbuf *,void *)
IO80211Interface::bpfTap(uint,uint)
IO80211Interface::cachePMKSA(uchar *,ulong,ether_addr *)
IO80211Interface::configureBpfOutputQueues(bool)
IO80211Interface::configureInterface(void)
IO80211Interface::configureReport(IOReportChannelList *,uint,void *,void *)
IO80211Interface::createAssocHistory(void)
IO80211Interface::createIOReporters(IOService *)
IO80211Interface::dequeueTxPackets(TxPacketRequest *)
IO80211Interface::detach(IOService *)
IO80211Interface::detachFromDataLinkLayer(uint,void *)
IO80211Interface::dropTxPacket(__mbuf *)
IO80211Interface::dumpUnentitledProcesses(void)
IO80211Interface::errnoFromReturn(int)
IO80211Interface::findOrCreateFlowQueue(IO80211FlowQueueHash)
IO80211Interface::finishAttachToDataLinkLayer(void)
IO80211Interface::flushPacketQueues(void)
IO80211Interface::free(void)
IO80211Interface::freeBpf(void)
IO80211Interface::freePMKSACache(void)
IO80211Interface::getBSDName(void)
IO80211Interface::getController(void)
IO80211Interface::getPMKSAList(apple80211_pmk_cache_data *)
IO80211Interface::getWmeTxCounters(ulong long *)
IO80211Interface::handleDebugCmd(apple80211_debug_command *)
IO80211Interface::handleLeakyApStatsModeTimer(IOTimerEventSource *)
IO80211Interface::handleLeakyApStatsResetTimer(IOTimerEventSource *)
IO80211Interface::init(IONetworkController *)
IO80211Interface::initSupplicant(uchar *,int)
IO80211Interface::inputAWSPacket(__mbuf *)
IO80211Interface::inputEvent(uint,void *)
IO80211Interface::inputPacket(__mbuf *,uint,uint,void *)
IO80211Interface::logDebug(char const*,...)
IO80211Interface::logDebugHex(void const*,ulong,char const*,...)
IO80211Interface::logTxPacket(__mbuf *)
IO80211Interface::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IO80211Interface::outputPacket(__mbuf *,void *)
IO80211Interface::outputStart(uint)
IO80211Interface::performCommand(IONetworkController *,ulong,void *,void *)
IO80211Interface::performGatedCommand(void *,void *,void *,void *,void *)
IO80211Interface::pidLocked(void)
IO80211Interface::pmksaLookup(ether_addr *,uchar *)
IO80211Interface::preQueuePacket(__mbuf *)
IO80211Interface::printDataPath(userPrintCtx *)
IO80211Interface::queueWMEPacket(__mbuf *,void *)
IO80211Interface::removePacketQueue(IO80211FlowQueueHash const*)
IO80211Interface::reportDataPathEvents(uint,void *,ulong)
IO80211Interface::reportDataPathEventsGated(void *,void *,void *,void *,void *)
IO80211Interface::reportDataTransferRatesGated(void)
IO80211Interface::reportDataTransferRatesStatic(void *)
IO80211Interface::reportTransmitStatus(__mbuf *,int,packet_info_tx *)
IO80211Interface::resetUserClientReference(void)
IO80211Interface::setBTCoexWLANLostAntennaTime(ulong long,ulong long,bool,apple80211_btCoex_report *)
IO80211Interface::setCountermeasuresTimer(IOTimerEventSource *)
IO80211Interface::setDataPointerAndLengthForMessageType(apple80211_postMessage_tlv_types,void **,ulong *)
IO80211Interface::setDebugFlags(ulong long,uint)
IO80211Interface::setLQM(ulong long)
IO80211Interface::setLQMGated(long long)
IO80211Interface::setLQMStatic(void *,void *)
IO80211Interface::setLeakyAPStats(apple80211_leaky_ap_event *)
IO80211Interface::setLeakyAPStatsMode(uint)
IO80211Interface::setLeakyApSsidMetrics(apple80211_leaky_ap_ssid_metrics *)
IO80211Interface::setLinkState(IO80211LinkState,int,uint)
IO80211Interface::setLinkState(IO80211LinkState,uint)
IO80211Interface::setPeerManagerLogFlag(uint,uint,uint)
IO80211Interface::setPidLock(bool)
IO80211Interface::setPoweredOnByUser(bool)
IO80211Interface::setWoWEnabled(bool)
IO80211Interface::startAsyncEventUserClientForTask(task *,kIO80211InterfaceType)
IO80211Interface::startOutputQueues(void)
IO80211Interface::stopCountermeasures(OSObject *,IOTimerEventSource *)
IO80211Interface::stopOutputQueues(void)
IO80211Interface::storeIoctlInArray(OSArray *,OSNumber *)
IO80211Interface::storeProcessNameAndIoctlInformation(ulong)
IO80211Interface::stringFromReturn(int)
IO80211Interface::terminate(uint)
IO80211Interface::terminateSupplicant(void)
IO80211Interface::updateBSSIDProperty(void)
IO80211Interface::updateChannelProperty(void)
IO80211Interface::updateChannelPropertyStatic(void *)
IO80211Interface::updateCountryCodeProperty(bool)
IO80211Interface::updateInterfaceCoexRiskPct(ulong long)
IO80211Interface::updateLinkParameters(apple80211_interface_availability *)
IO80211Interface::updateLinkParametersGated(apple80211_interface_availability *)
IO80211Interface::updateLinkParametersStatic(void *,void *)
IO80211Interface::updateLinkStatusGated(void)
IO80211Interface::updateLinkStatusStatic(void *)
IO80211Interface::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211Interface::updateSSIDProperty(void)
IO80211Interface::updateStaticProperties(void)
IO80211Interface::~IO80211Interface()
IO80211InterfaceClassifyAndFixupPacket(OSObject *,__mbuf *)
IO80211InterfaceDetermineWMEQueueByMulticastFixup(OSObject *,__mbuf *,uchar,long *)
IO80211InterfaceMonitor::configureSubscriptions(IO80211Controller *)
IO80211InterfaceMonitor::createInterfaceReportSet(void)
IO80211InterfaceMonitor::createReportersAndLegend(void)
IO80211InterfaceMonitor::destroyReporters(void)
IO80211InterfaceMonitor::free(void)
IO80211InterfaceMonitor::getAMPDUChannelID(apple80211_ampdu_stat_report *,uint *)
IO80211InterfaceMonitor::getBssidLeakyApMetricsFromSsidMetrics(apple80211_leaky_ap_bssid_metrics *)
IO80211InterfaceMonitor::getEffectiveRxBWSinceLastRead(uint *)
IO80211InterfaceMonitor::getEffectiveTxBWSinceLastRead(uint *)
IO80211InterfaceMonitor::getInterfaceAverageCCA(void)
IO80211InterfaceMonitor::incrementConsecutiveDPS(void)
IO80211InterfaceMonitor::incrementDPSDetected(void)
IO80211InterfaceMonitor::initFrameStats(void)
IO80211InterfaceMonitor::initHeFrameStats(void)
IO80211InterfaceMonitor::initWithServiceAndName(IOService *,char const*,bool)
IO80211InterfaceMonitor::isLeakyApSsidMatchesSsidMetrics(void)
IO80211InterfaceMonitor::loadLeakyApBssidMetricsFromSsidMetrics(void)
IO80211InterfaceMonitor::recordInputPacket(__mbuf *)
IO80211InterfaceMonitor::recordInputPacket(int,int)
IO80211InterfaceMonitor::recordOutputPacket(__mbuf *)
IO80211InterfaceMonitor::recordOutputPacket(mbuf_traffic_class_t,int,int)
IO80211InterfaceMonitor::resetLeakyApRxRateDropState(uint,uint,bool)
IO80211InterfaceMonitor::setDataTransferRates(ulong long)
IO80211InterfaceMonitor::setEffectiveDataTransferRate(ulong long)
IO80211InterfaceMonitor::setEffectiveLinkRate(ulong long)
IO80211InterfaceMonitor::setExpectedPeakLatency(ulong long)
IO80211InterfaceMonitor::setFrameStats(apple80211_stat_report *,apple80211_frame_counters *)
IO80211InterfaceMonitor::setHeFrameStats(apple80211_stat_report *,apple80211_frame_counters *)
IO80211InterfaceMonitor::setInputPacketRSSI(long long)
IO80211InterfaceMonitor::setInterfaceActivity(IO80211InterfaceMonitor::InterfaceActivity,ulong long)
IO80211InterfaceMonitor::setInterfaceAverageCCA(ulong long)
IO80211InterfaceMonitor::setInterfaceAverageExtendedCCA(apple80211_cca_report *)
IO80211InterfaceMonitor::setInterfaceChipCounters(apple80211_stat_report *,apple80211_chip_counters_tx *,apple80211_chip_error_counters_tx *,apple80211_chip_counters_rx *)
IO80211InterfaceMonitor::setInterfaceMIBdot11(apple80211_stat_report *,apple80211_ManagementInformationBasedot11_counters *)
IO80211InterfaceMonitor::setInterfaceNF(long long)
IO80211InterfaceMonitor::setInterfaceOFDMDesense(long long)
IO80211InterfaceMonitor::setInterfaceOpenPercent(ulong long)
IO80211InterfaceMonitor::setInterfaceQBSS(apple80211_qbss_load *)
IO80211InterfaceMonitor::setInterfaceRSSI(long long)
IO80211InterfaceMonitor::setInterfaceSNR(long long)
IO80211InterfaceMonitor::setLQM(int)
IO80211InterfaceMonitor::setLeakyApGtPeriod(apple80211_leaky_ap_reason,int)
IO80211InterfaceMonitor::setLeakyApRateDrop(uint,apple80211_leaky_ap_reason,uint,signed char,uint)
IO80211InterfaceMonitor::setLeakyApSsidMetrics(apple80211_leaky_ap_ssid_metrics *)
IO80211InterfaceMonitor::setLinkChangedEventData(apple80211_channel,apple80211_link_changed_event_data)
IO80211InterfaceMonitor::setLinkRate(ulong long)
IO80211InterfaceMonitor::setPreviousInterfaceActivity(void)
IO80211InterfaceMonitor::storeBssidLeakyApMetricsToSsidMetrics(apple80211_leaky_ap_bssid_metrics *)
IO80211InterfaceMonitor::updateLeakyApNetwork(void)
IO80211InterfaceMonitor::withServiceAndInterfaceName(IOService *,char const*,bool)
IO80211InterfacePostMessage(char const*,uint,void *,ulong,IO80211Controller *)
IO80211LQMCrashTracer::calculateAndFreeLogBuffer(uint)
IO80211LQMCrashTracer::calculateFreeBufferSize(void)
IO80211LQMCrashTracer::copyPayloadToRingBuffer(uint,uchar *,uint)
IO80211LQMCrashTracer::freeResources(void)
IO80211LQMCrashTracer::getLqmCrashTracerDataBlock(uchar *)
IO80211LQMCrashTracer::getLqmRingBufferDataBlock(uchar *)
IO80211LQMCrashTracer::initLQMRingBuffer(void)
IO80211LQMCrashTracer::initWithController(IO80211Controller *)
IO80211LQMCrashTracer::lqmCrashTracerBufferFreeTimeoutCallback(IOTimerEventSource *)
IO80211LQMCrashTracer::lqmDataSampleTimeoutCallback(IOTimerEventSource *)
IO80211LQMCrashTracer::recordAWDLActivity(ulong long,ulong long)
IO80211LQMCrashTracer::recordBTAntennaInfo(ulong long,ulong long)
IO80211LQMCrashTracer::recordCCA(apple80211_homechan_qual_data *)
IO80211LQMCrashTracer::recordDPSSymptomsInput(apple80211_dps_symptoms_input *)
IO80211LQMCrashTracer::recordIPAddressEvent(apple80211_assoc_ready *)
IO80211LQMCrashTracer::recordInfraBandTxRxStatsUpdate(apple80211_infra_band_tx_rx_stats *)
IO80211LQMCrashTracer::recordInfraChanInfo(apple80211_channel_data *)
IO80211LQMCrashTracer::recordNoise(long long)
IO80211LQMCrashTracer::recordPhyRxDesense(apple80211_phy_rxdesense_t *)
IO80211LQMCrashTracer::recordRC1CoexActivity(apple80211_rc1_coex_stats_report *)
IO80211LQMCrashTracer::recordRC2CoexActivity(apple80211_rc2_coex_stats_report *)
IO80211LQMCrashTracer::recordRssiChangeLqmEvent(apple80211_lqm_event_data *)
IO80211LQMCrashTracer::recordRxAmpduUpdate(apple80211_rx_ampdu_lqmct_stats *)
IO80211LQMCrashTracer::recordScanSummaryEvent(apple80211_scan_summary_t *)
IO80211LQMCrashTracer::recordSlowWiFiLinkRecoveryInfo(apple80211_link_recovery_event *)
IO80211LQMCrashTracer::recordTxDPS(apple82011_postMessage_dps *)
IO80211LQMCrashTracer::recordTxDataPathStatsPerACs(bool,apple80211_per_ac_ext_stats *)
IO80211LQMCrashTracer::recordWeightedAvgLQM(apple80211_weight_avg_lqm_event_data *)
IO80211LQMCrashTracer::recordWpsInfo(apple80211_WPS_info_t *)
IO80211LQMCrashTracer::reportLQMCrashTracerFeatureFlag(uint)
IO80211LQMCrashTracer::triggerCapture(uint)
IO80211LQMCrashTracer::writeLogToRingBuffer(uchar *,uint,uint)
IO80211LQMCrashTracer::writeTxDataPathStatIDAndCnt(uint **,apple80211_per_ac_ext_stats *)
IO80211LinkQualityMonitor::analyzeMeasurements(bool)
IO80211LinkQualityMonitor::checkLimits(IO80211LinkQualityMonitor::Limits *)
IO80211LinkQualityMonitor::checkMeasurementTimeout(void)
IO80211LinkQualityMonitor::checkRecoveryReason(IO80211LinkQualityMonitor::Limits *)
IO80211LinkQualityMonitor::checkRxPhyRateLimits(uint,ulong long,bool *)
IO80211LinkQualityMonitor::checkTxPhyRateLimits(uint,ulong long,bool *)
IO80211LinkQualityMonitor::free(void)
IO80211LinkQualityMonitor::getConcurrentInterfaceActiveDurationMS(void)
IO80211LinkQualityMonitor::getElapsedPeriodMS(void)
IO80211LinkQualityMonitor::getExpectedThroughput(signed char,signed char)
IO80211LinkQualityMonitor::getExpectedTxAMPDUDensity(signed char,signed char)
IO80211LinkQualityMonitor::getMaxQueueFullDurationMS(void)
IO80211LinkQualityMonitor::getSummary(apple80211_lqm_summary *)
IO80211LinkQualityMonitor::initWithProviderAndOptions(IOService *,IO80211LinkQualityMonitor::Options const*,IO80211LinkRecovery *,IO80211LQMCrashTracer *)
IO80211LinkQualityMonitor::measurementTimeoutCallback(IOTimerEventSource *)
IO80211LinkQualityMonitor::printLogs(IO80211LinkQualityMonitor::Limits *)
IO80211LinkQualityMonitor::recordAmpduCounters(IO80211LinkQualityMonitor::AmpduCounters_t *)
IO80211LinkQualityMonitor::recordAvgLQM(apple80211_lqm_event_data *)
IO80211LinkQualityMonitor::recordChannelSwitchEvent(apple80211_channel_switch_data *)
IO80211LinkQualityMonitor::recordDataQueueState(apple80211_data_queue_state_event *)
IO80211LinkQualityMonitor::recordEscoTrafficIndication(uint)
IO80211LinkQualityMonitor::recordIPAddressEvent(apple80211_assoc_ready *)
IO80211LinkQualityMonitor::recordInterfaceConcurrencyState(bool)
IO80211LinkQualityMonitor::recordLinkProbeResult(int)
IO80211LinkQualityMonitor::recordPhyRate(uint,bool)
IO80211LinkQualityMonitor::recordRxDataFrames(IO80211LinkQualityMonitor::RxErrors *)
IO80211LinkQualityMonitor::recordRxPacket(IOSkywalkNetworkPacket *,packet_info_tag *)
IO80211LinkQualityMonitor::recordRxPhyErrors(IO80211LinkQualityMonitor::RxErrors *)
IO80211LinkQualityMonitor::recordSymptomsInput(ulong long)
IO80211LinkQualityMonitor::recordTVPMState(apple80211_tvpm_event *)
IO80211LinkQualityMonitor::recordTxErrors(IO80211LinkQualityMonitor::TxErrors *)
IO80211LinkQualityMonitor::recordTxPacketCompletion(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,int)
IO80211LinkQualityMonitor::recordTxPacketSubmission(IOSkywalkNetworkPacket *,PacketSkywalkScratch *)
IO80211LinkQualityMonitor::recordUserInputResult(int)
IO80211LinkQualityMonitor::recordWeightedAvgLQM(apple80211_weight_avg_lqm_event_data *)
IO80211LinkQualityMonitor::resetMeasurements(void)
IO80211LinkQualityMonitor::runUIStateMachine(UIEvent,UIEventData)
IO80211LinkQualityMonitor::snapshotHostTxPacketStats(void)
IO80211LinkQualityMonitor::triggerIPFailRecovery(void)
IO80211LinkQualityMonitor::triggerLinkProbe(bool)
IO80211LinkQualityMonitor::triggerUserInput(void)
IO80211LinkQualityMonitor::userInputTimeoutCallback(IOTimerEventSource *)
IO80211LinkQualityMonitor::withProviderAndOptions(IOService *,IO80211LinkQualityMonitor::Options const*,IO80211LinkRecovery *,IO80211LQMCrashTracer *)
IO80211LinkRecovery::confirmAction(apple80211_link_recovery_user_input)
IO80211LinkRecovery::free(void)
IO80211LinkRecovery::initWithMacAddressAndController(ether_addr,IO80211Controller *,bool,IO80211LQMCrashTracer *)
IO80211LinkRecovery::postLinkRecoveryEvent(void)
IO80211LinkRecovery::recordAppState(apple80211_app_state *)
IO80211LinkRecovery::recordBSSBlacklistEvent(apple80211_bss_blacklist_event *)
IO80211LinkRecovery::recordLinkProbeResult(int)
IO80211LinkRecovery::reset(ether_addr const*)
IO80211LinkRecovery::setScreenState(bool)
IO80211LinkRecovery::triggerFaultReporter(void)
IO80211LinkRecovery::triggerLinkProbe(bool)
IO80211LinkRecovery::updateStats(apple80211_link_recovery_action,IO80211LinkRecovery::ActionState,apple80211_link_recovery_reason,apple80211_link_recovery_user_input)
IO80211LinkRecovery::withMacAddressAndController(ether_addr,IO80211Controller *,bool,IO80211LQMCrashTracer *)
IO80211NANAttributeTx::addAttributeInNANFrames(uchar *,ushort,uint,bool,bool)
IO80211NANAttributeTx::free(void)
IO80211NANAttributeTx::removeAttributeFromNANFrames(uchar *,ushort,uint,bool)
IO80211NANAttributeTx::withManager(IO80211NANPeerManager *)
IO80211NANDFSManager::configureDFSMasterMonitoring(void)
IO80211NANDFSManager::disable(void)
IO80211NANDFSManager::disableDFSMasterMonitoring(void)
IO80211NANDFSManager::free(void)
IO80211NANDFSManager::handleAssocDone(uchar,bool)
IO80211NANDFSManager::handleAssocIPReady(uchar)
IO80211NANDFSManager::handleAssocStart(uchar)
IO80211NANDFSManager::handleCSAEndEvent(void)
IO80211NANDFSManager::handleCSAStartEvent(uchar)
IO80211NANDFSManager::handleDFSChannelResumed(void)
IO80211NANDFSManager::handleDFSChannelSuspended(void)
IO80211NANDFSManager::handleScanDone(void)
IO80211NANDFSManager::initDFSMasterScan(void)
IO80211NANDFSManager::initWithManager(IO80211NANPeerManager *)
IO80211NANDFSManager::monitorDFSManagerState(void)
IO80211NANDFSManager::notifyDFSChannelAbsence(apple80211_nan_dfs_notify_reason)
IO80211NANDFSManager::reset(void)
IO80211NANDFSManager::restrictDFSMonitor(apple80211_disallow_nan_dfs_monitor_entities)
IO80211NANDFSManager::setDfsMonitorState(apple80211_nan_dfs_channel_monitor_state)
IO80211NANDFSManager::unconfigureDFSMasterMonitoring(void)
IO80211NANDFSManager::unrestrictDFSMonitor(apple80211_disallow_nan_dfs_monitor_entities)
IO80211NANDataInterfacePeerManager::MetaClass::alloc(void)
IO80211NANDataInterfacePeerManager::addNANSnapHeader(__mbuf *,uchar)
IO80211NANDataInterfacePeerManager::addPeer(uchar *)
IO80211NANDataInterfacePeerManager::clearInfraRelayGatewayMacAddress(void)
IO80211NANDataInterfacePeerManager::configure(void)
IO80211NANDataInterfacePeerManager::convertMcastPacketToUnicast(__mbuf *,uchar *)
IO80211NANDataInterfacePeerManager::doDisable(char const*)
IO80211NANDataInterfacePeerManager::doEnable(char const*)
IO80211NANDataInterfacePeerManager::forwardInfraRelayPackets(__mbuf *)
IO80211NANDataInterfacePeerManager::forwardMulticastPacket(__mbuf *,uchar)
IO80211NANDataInterfacePeerManager::free(void)
IO80211NANDataInterfacePeerManager::freeMcastQueuedPackets(void)
IO80211NANDataInterfacePeerManager::handleMcastPacketForwardingTimer(IOTimerEventSource *)
IO80211NANDataInterfacePeerManager::handleNANEventReset(apple80211_chip_reset *)
IO80211NANDataInterfacePeerManager::initWithInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211NANDataInterfacePeerManager::preQueuePacket(__mbuf *)
IO80211NANDataInterfacePeerManager::preQueuePacketHelper(__mbuf *,outputPacketCtx *)
IO80211NANDataInterfacePeerManager::prepareLLCMcastPacket(__mbuf *,uchar)
IO80211NANDataInterfacePeerManager::reportDataPathEvents(uint,void *,ulong)
IO80211NANDataInterfacePeerManager::reset(void)
IO80211NANDataInterfacePeerManager::resetInterfaceState(void)
IO80211NANDataInterfacePeerManager::setIOCTL(uint,uint,void *)
IO80211NANDataInterfacePeerManager::setInfraRelayGatewayMacAddress(uchar *)
IO80211NANDataInterfacePeerManager::setNANInitialize(void)
IO80211NANDataInterfacePeerManager::transmitMcastPacketAsUnicast(__mbuf *,uchar *)
IO80211NANDataInterfacePeerManager::withInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211NANDataInterfacePeerManager::~IO80211NANDataInterfacePeerManager()
IO80211NANDataPathInitiator::copyNanDpSessionInfo(uchar *,ushort *)
IO80211NANDataPathInitiator::free(void)
IO80211NANDataPathInitiator::freeResources(void)
IO80211NANDataPathInitiator::getDataPathInfo(apple80211_nan_data_path_info *)
IO80211NANDataPathInitiator::handleDataPathAFTxComplete(apple80211_nan_dp_tx_complete *)
IO80211NANDataPathInitiator::handleDataPathEstablished(IO80211NANPeer *,apple80211_nan_data_path_established_event_data *)
IO80211NANDataPathInitiator::handleDataPathResponseRecvd(apple80211_nan_dp_resp_recvd_event_data *)
IO80211NANDataPathInitiator::handleDataPathTerminate(apple80211_nan_data_path_end_reason)
IO80211NANDataPathInitiator::init(IO80211NANPeerManager *,IO80211PeerManager *,apple80211_nan_dp_role,void *)
IO80211NANDataPathInitiator::initiateDataPathRequest(void)
IO80211NANDataPathInitiator::monitorDataSession(void)
IO80211NANDataPathInitiator::parseNANDPAttrServiceInfoTLV(apple80211_nan_data_path_ext_tlv *)
IO80211NANDataPathInitiator::printDataPathInfo(userPrintCtx *)
IO80211NANDataPathInitiator::setDataPathRequestWithPeerCacheReservation(void)
IO80211NANDataPathInitiator::setDataSessionState(apple80211_nan_dp_session_state)
IO80211NANDataPathManager::addEntryNanInfoList(ndp_info_node **,uchar *,ushort,uint,uint)
IO80211NANDataPathManager::addNANDataAddress(uchar *,IO80211PeerManager *)
IO80211NANDataPathManager::allocateDpId(uchar *)
IO80211NANDataPathManager::checkInstantUpdateSlotBeaconing(void)
IO80211NANDataPathManager::checkNANDpSessionWaitingOnPeerCaching(void)
IO80211NANDataPathManager::clearCustomPreferredChannel(void)
IO80211NANDataPathManager::clearNANDataClusterAvailability(void)
IO80211NANDataPathManager::clearPreferredChannelForExtraBandwidth(void)
IO80211NANDataPathManager::configureLowLatencyParams(ether_addr *,bool,uchar)
IO80211NANDataPathManager::configureTier1AvailabilitySlots(void)
IO80211NANDataPathManager::configureTier2AvailabilitySlots(void)
IO80211NANDataPathManager::configureTier3AvailabilitySlots(void)
IO80211NANDataPathManager::configureTier4AvailabilitySlots(void)
IO80211NANDataPathManager::convertDpEndReasonCodeToString(apple80211_nan_data_path_end_reason)
IO80211NANDataPathManager::createDataPathInitiator(apple80211_nan_dp_request *,IO80211PeerManager *)
IO80211NANDataPathManager::createDataPathResponder(apple80211_nan_dp_request_recvd_event_data *)
IO80211NANDataPathManager::decrementDPSessionCounters(IO80211NANDataPathSession *)
IO80211NANDataPathManager::decrementDpEstSessionCount(void)
IO80211NANDataPathManager::decrementDpTotalSessionCount(void)
IO80211NANDataPathManager::decrementRTMDataSession(bool)
IO80211NANDataPathManager::decrementSessionPerNdi(uchar *)
IO80211NANDataPathManager::deleteNanInfoList(ndp_info_node **)
IO80211NANDataPathManager::disable(void)
IO80211NANDataPathManager::dumpLowLatencyParams(apple80211_llw_params *)
IO80211NANDataPathManager::free(void)
IO80211NANDataPathManager::getDataPathInfo(apple80211_nan_data_path_info *)
IO80211NANDataPathManager::handleDWStart(ushort)
IO80211NANDataPathManager::handleDataPathConfirmRecvd(apple80211_nan_dp_confirm_recvd_event_data *)
IO80211NANDataPathManager::handleDataPathEstablished(apple80211_nan_data_path_established_event_data *)
IO80211NANDataPathManager::handleDataPathHostAssistRequest(apple80211_nan_dp_host_assist_event_data *)
IO80211NANDataPathManager::handleDataPathRequestRecvd(apple80211_nan_dp_request_recvd_event_data *)
IO80211NANDataPathManager::handleDataPathResponseRecvd(apple80211_nan_dp_resp_recvd_event_data *)
IO80211NANDataPathManager::handleDataPathTerminateEvent(apple80211_nan_data_path_end_event_data *)
IO80211NANDataPathManager::handleDpPeerCacheTimer(IOTimerEventSource *)
IO80211NANDataPathManager::incrementDpEstSessionCount(void)
IO80211NANDataPathManager::incrementRTMDataSession(bool)
IO80211NANDataPathManager::incrementSessionPerNdi(uchar *)
IO80211NANDataPathManager::initiateDataPathRequest(apple80211_nan_dp_request *)
IO80211NANDataPathManager::isDataSessionSetupInProgress(uchar *)
IO80211NANDataPathManager::isDataSessionValid(uchar,uchar *)
IO80211NANDataPathManager::isDfsChannelUsageAllowed(apple80211_nan_channel *,uchar)
IO80211NANDataPathManager::learnCustomPreferredChannel(void)
IO80211NANDataPathManager::learnPreferredChannelForExtraBandwidth(void)
IO80211NANDataPathManager::monitorDataPath(void)
IO80211NANDataPathManager::pclStateLearnHandler(void)
IO80211NANDataPathManager::pclStateResetHandler(void)
IO80211NANDataPathManager::printDataPathInfo(apple80211_debug_command *,userPrintCtx *)
IO80211NANDataPathManager::recordDataPacketStatistics(void)
IO80211NANDataPathManager::removeInitialDataSchedule(void)
IO80211NANDataPathManager::removeNANDataAddress(uchar *)
IO80211NANDataPathManager::reset(void)
IO80211NANDataPathManager::resetCustomPreferredChannel(void)
IO80211NANDataPathManager::resetPreferredChannelForExtraBandwidth(void)
IO80211NANDataPathManager::restore(void)
IO80211NANDataPathManager::restoreDatapathInfo(ndp_info_node *,uint,uint)
IO80211NANDataPathManager::runAdaptiveChannelAllocation(ushort)
IO80211NANDataPathManager::runPreferredChannelLearning(ushort)
IO80211NANDataPathManager::sendDataPathResponse(apple80211_nan_dp_response *)
IO80211NANDataPathManager::setCustomPreferredChannel(apple80211_nan_channel *)
IO80211NANDataPathManager::setNANDataAvailabilityPerQosType(apple80211_nan_data_qos_types,bool)
IO80211NANDataPathManager::setNANDataClusterAvailability(IO80211NANPeer *)
IO80211NANDataPathManager::setNANDataClusterAvailabilityOn2_4GHz(void)
IO80211NANDataPathManager::setPreferredChannelForExtraBandwidth(apple80211_nan_channel *)
IO80211NANDataPathManager::setSlotBeaconPeriodicTransmission(bool,apple80211_nan_forced_disc_beacon_transmission_reason)
IO80211NANDataPathManager::setSlotBeaconTransmission(bool,apple80211_nan_forced_disc_beacon_transmission_reason)
IO80211NANDataPathManager::terminateAllDpSession(apple80211_nan_data_path_end_reason)
IO80211NANDataPathManager::traverseNanInfoList(ndp_info_node *)
IO80211NANDataPathManager::updateDpLinkStatus(apple80211_nan_dp_link_status *)
IO80211NANDataPathManager::updateDpSessionWithKeepAliveRecvd(apple80211_nan_dp_identifier *)
IO80211NANDataPathResponder::copyNanDpSessionInfo(uchar *,ushort *)
IO80211NANDataPathResponder::free(void)
IO80211NANDataPathResponder::freeResources(void)
IO80211NANDataPathResponder::getDataPathInfo(apple80211_nan_data_path_info *)
IO80211NANDataPathResponder::handleDataPathAFTxComplete(apple80211_nan_dp_tx_complete *)
IO80211NANDataPathResponder::handleDataPathEstablished(IO80211NANPeer *,apple80211_nan_data_path_established_event_data *)
IO80211NANDataPathResponder::handleDataPathRequestRecvd(apple80211_nan_dp_request_recvd_event_data *)
IO80211NANDataPathResponder::handleDataPathTerminate(apple80211_nan_data_path_end_reason)
IO80211NANDataPathResponder::parseNANDPAttrServiceInfoTLV(apple80211_nan_data_path_ext_tlv *)
IO80211NANDataPathResponder::printDataPathInfo(userPrintCtx *)
IO80211NANDataPathResponder::setDataSessionState(apple80211_nan_dp_session_state)
IO80211NANDataPathResponder__fn_0x80
IO80211NANDataPathSession::clearCacheReservationForPeer(void)
IO80211NANDataPathSession::free(void)
IO80211NANDataPathSession::handleDataPathAFTxComplete(apple80211_nan_dp_tx_complete *)
IO80211NANDataPathSession::handleDataPathEstablished(IO80211NANPeer *,apple80211_nan_data_path_established_event_data *)
IO80211NANDataPathSession::handleDataPathTerminate(apple80211_nan_data_path_end_reason)
IO80211NANDataPathSession::parseNANDPAttrIPv6LinkLocalTLV(apple80211_nan_data_path_ext_tlv *)
IO80211NANDataPathSession::parseNANDPAttributeTLVList(uchar *,ushort,ushort)
IO80211NANDataPathSession::tearDownDataPathSession(apple80211_nan_data_path_end_reason)
IO80211NANDataPathSession__fn_0x80
IO80211NANDataPeer::freeResources(void)
IO80211NANDataPeer::initWithAddressAndManager(uchar const*,IO80211NANDataInterfacePeerManager *)
IO80211NANDataPeer::inputPacket(__mbuf *,inputPacketCtx *)
IO80211NANDataPeer::monitorPeer(peerMonitoringCtx *)
IO80211NANDataPeer::nanLLCInput(__mbuf *,inputPacketCtx *)
IO80211NANDiscoveryEngine::configure(void)
IO80211NANDiscoveryEngine::configureFastDiscoveryState(void)
IO80211NANDiscoveryEngine::configureIdleDiscoveryState(void)
IO80211NANDiscoveryEngine::configureInstantDiscoveryState(void)
IO80211NANDiscoveryEngine::configurePeriodicDiscoveryState(void)
IO80211NANDiscoveryEngine::enableForcedSlotBeaconTransmission(apple80211_nan_forced_disc_beacon_transmission *)
IO80211NANDiscoveryEngine::free(void)
IO80211NANDiscoveryEngine::handleChannelChange(void)
IO80211NANDiscoveryEngine::initWithManager(IO80211NANPeerManager *)
IO80211NANDiscoveryEngine::restore(void)
IO80211NANDiscoveryEngine::setDiscoveryState(apple80211_nan_discovery_states,bool,bool)
IO80211NANDiscoveryEngine::setInstantDiscovery(bool,bool,uchar)
IO80211NANInfraManager::addNANInfrastructureAttribute(void)
IO80211NANInfraManager::clearAssociationState(void)
IO80211NANInfraManager::clearInfraAvailability(void)
IO80211NANInfraManager::clearScanThrottling(void)
IO80211NANInfraManager::configureInfraTier1Availability(void)
IO80211NANInfraManager::configureInfraTier2Availability(void)
IO80211NANInfraManager::configureInfraTier3Availability(void)
IO80211NANInfraManager::configureInfraTier4Availability(void)
IO80211NANInfraManager::currentInfraTrafficType(void)
IO80211NANInfraManager::disable(void)
IO80211NANInfraManager::disableInfraMonitoring(void)
IO80211NANInfraManager::enable(void)
IO80211NANInfraManager::enableInfraMonitoring(void)
IO80211NANInfraManager::free(void)
IO80211NANInfraManager::getInfraBSSInfo(void)
IO80211NANInfraManager::getInfraChannelForAvailability(apple80211_nan_channel *)
IO80211NANInfraManager::getInfraStatistics(void)
IO80211NANInfraManager::handleInfraAssociationDone(void *)
IO80211NANInfraManager::handleInfraAssociationStart(void *)
IO80211NANInfraManager::handleInfraAuthentication(void *)
IO80211NANInfraManager::handleInfraDisassociation(void)
IO80211NANInfraManager::handleInfraIPReady(void *)
IO80211NANInfraManager::handleInfraMonitorTimer(IOTimerEventSource *)
IO80211NANInfraManager::handleInfraScanEnd(void *)
IO80211NANInfraManager::handleInfraScanStart(void *)
IO80211NANInfraManager::handleJoinDone(joinStatus)
IO80211NANInfraManager::infraOnDFS(void)
IO80211NANInfraManager::initWithManager(IO80211NANPeerManager *)
IO80211NANInfraManager::monitorInfraAssociation(void)
IO80211NANInfraManager::monitorInfraScan(void)
IO80211NANInfraManager::monitorInfraTraffic(void)
IO80211NANInfraManager::removeNANInfrastructureAttribute(void)
IO80211NANInfraManager::reset(void)
IO80211NANInfraManager::setInfraAssocAvailability(apple80211_nan_infra_assoc_start_event_data *)
IO80211NANInfraManager::setInfraScanAvailability(uchar,uchar)
IO80211NANInfraManager::setNANInfraAvailabilityPerTrafficType(apple80211_nan_infra_traffic_type)
IO80211NANInfraManager::throttleBackScans(bool)
IO80211NANLocaleManager::addNANCountryCodeAttribute(void)
IO80211NANLocaleManager::configure(void)
IO80211NANLocaleManager::disable(void)
IO80211NANLocaleManager::free(void)
IO80211NANLocaleManager::getChannelProperties(uchar,uint *)
IO80211NANLocaleManager::getSupportedChannelListFromDevice(void)
IO80211NANLocaleManager::handleCountryCodeChangeEvent(void)
IO80211NANLocaleManager::initWithManager(IO80211NANPeerManager *)
IO80211NANPeer::clearLowLatencyLinkIdle(void)
IO80211NANPeer::copyNANPeerAttributeInfo(uchar *,ushort *)
IO80211NANPeer::copyNANPeerAvailabilityInfo(apple80211_nan_attribute *,ushort *)
IO80211NANPeer::copyNANPeerElementContainerInfo(apple80211_nan_attribute *,ushort *)
IO80211NANPeer::copyNANPeerInfo(uchar *,ushort *)
IO80211NANPeer::copyNANPeerNDCInfo(apple80211_nan_attribute *,ushort *)
IO80211NANPeer::decrementDataLinks(void)
IO80211NANPeer::decrementLLWTransmitter(void)
IO80211NANPeer::decrementLowLatencyDataSession(void)
IO80211NANPeer::didPotentialAvailChange(void)
IO80211NANPeer::doPreferredChannelLearning(void)
IO80211NANPeer::fetchPeerInfo(apple80211_nan_peer_info *)
IO80211NANPeer::freeResources(void)
IO80211NANPeer::getNANMgmtInterfacePeerManager(void)
IO80211NANPeer::getPeerLastActivityTimeMsec(void)
IO80211NANPeer::getPreferredChannel(apple80211_nan_channel *,radio_schedule_band_id,uchar,uchar)
IO80211NANPeer::getPreferredChannelList(apple80211_nan_peer_preferred_channel_list *,uchar)
IO80211NANPeer::handleBeaconRx(apple80211_nan_beacon_recvd_event_data *)
IO80211NANPeer::handleDataPathConfirmReceived(apple80211_nan_dp_confirm_recvd_event_data *)
IO80211NANPeer::handleNANManagementActionFrameRx(void *,ushort)
IO80211NANPeer::handleOobActionFrameRx(apple80211_nan_oob_act_frm_rx_event_data *)
IO80211NANPeer::handleScheduleUpdate(apple80211_nan_peer_schedule_update_event_data *)
IO80211NANPeer::incrementDataLinks(void)
IO80211NANPeer::initWithAddressAndManager(uchar const*,IO80211PeerManager *)
IO80211NANPeer::llwComputeTxConsecutiveErrorCount(int)
IO80211NANPeer::llwLoadPacketLifetimeHistogram(uchar)
IO80211NANPeer::llwMetricsCountCommonSlotsWithPeer(void)
IO80211NANPeer::lowlatencyGetStatistics(IO80211Peer *)
IO80211NANPeer::lowlatencyStats(void)
IO80211NANPeer::lowlatencyStatsPrintHistogram(apple80211_extended_peer_stats *)
IO80211NANPeer::lowlatencyStatsPrintMetrics(uchar)
IO80211NANPeer::monitorPeer(peerMonitoringCtx *)
IO80211NANPeer::parseSDAAttribute(apple80211_nan_attribute *)
IO80211NANPeer::printAvail(apple80211_debug_command *,userPrintCtx *)
IO80211NANPeer::printPreferredChannelList(apple80211_debug_command *,userPrintCtx *)
IO80211NANPeer::saveAvailSequenceId(uchar)
IO80211NANPeer::saveCountryCode(apple80211_nan_country_code_attribute_data *)
IO80211NANPeer::updateRadioPreferredChannel(apple80211_nan_peer_pref_chan_list_opcode,apple80211_nan_channel *,uchar)
IO80211NANPeer::updateRadioPreferredChannelList(apple80211_nan_peer_pref_chan_list_opcode)
IO80211NANPeer::withAddressAndManager(uchar const*,IO80211PeerManager *)
IO80211NANPeerManager::MetaClass::alloc(void)
IO80211NANPeerManager::actionFrameInput(IO80211Buffer *,uint,void *,ulong)
IO80211NANPeerManager::addPeer(uchar *)
IO80211NANPeerManager::configure(void)
IO80211NANPeerManager::countryCodeStateChanged(void)
IO80211NANPeerManager::disableNAN(void)
IO80211NANPeerManager::disableWorkQueueSources(void)
IO80211NANPeerManager::doDisable(char const*)
IO80211NANPeerManager::doEnable(char const*)
IO80211NANPeerManager::enableNAN(void)
IO80211NANPeerManager::enableNonSdbOn5GhzAvailabilityOnly(void)
IO80211NANPeerManager::enableWorkQueueSources(void)
IO80211NANPeerManager::free(void)
IO80211NANPeerManager::getHp2pCaps(apple80211_hp2p_caps *)
IO80211NANPeerManager::getIOCTL(uint,uint,void *)
IO80211NANPeerManager::getLowlatencyStatistics(apple80211_lowlatency_statistics *)
IO80211NANPeerManager::getLowlatencyStats(apple80211_lowlatency_stats_peer *)
IO80211NANPeerManager::getMaxChannelBandwidth(uchar)
IO80211NANPeerManager::getNANAdvertisers(apple80211_nan_advertisers *)
IO80211NANPeerManager::getNANCtl(apple80211_nan_ctl *)
IO80211NANPeerManager::getNANCurrentAMRRecord(apple80211_nan_current_amr_record_data *)
IO80211NANPeerManager::getNANDWAwakePeriod(apple80211_nan_dw_awake_period *)
IO80211NANPeerManager::getNANDeviceCapability(apple80211_nan_device_capability *)
IO80211NANPeerManager::getNANDeviceInfo(apple80211_nan_device_info *)
IO80211NANPeerManager::getNANEnable(apple80211_nan_enable *)
IO80211NANPeerManager::getNANHopCountLimit(apple80211_nan_hop_count_limit *)
IO80211NANPeerManager::getNANHostElection(apple80211_nan_host_election *)
IO80211NANPeerManager::getNANLLWParams(apple80211_llw_params *)
IO80211NANPeerManager::getNANLastAMRRecord(apple80211_nan_last_amr_record_data *)
IO80211NANPeerManager::getNANMasterChannel(apple80211_nan_primary_master_channel *)
IO80211NANPeerManager::getNANMasterPreference(apple80211_nan_master_pref *)
IO80211NANPeerManager::getNANMaxPeers(apple80211_nan_maxpeers *)
IO80211NANPeerManager::getNANMinTxRate(apple80211_nan_min_tx_rate *)
IO80211NANPeerManager::getNANPeerDataBase(apple80211_nan_peer_db *)
IO80211NANPeerManager::getNANPublishedServiceList(apple80211_nan_published_service_list_data *)
IO80211NANPeerManager::getNANSecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
IO80211NANPeerManager::getNANServiceDiscoveryStats(apple80211_nan_service_disc_stats *)
IO80211NANPeerManager::getNANSubscribedServiceList(apple80211_nan_subscribed_service_list_data *)
IO80211NANPeerManager::getNANSyncStats(apple80211_nan_sync_stats *)
IO80211NANPeerManager::getNANWarmupTime(apple80211_nan_warmup_time *)
IO80211NANPeerManager::getNdiPeerManager(ether_addr *)
IO80211NANPeerManager::getRllwStats(apple80211_rllw_stats *)
IO80211NANPeerManager::handleDebugCmd(apple80211_debug_command *)
IO80211NANPeerManager::handleNANEventBeaconRx(apple80211_nan_beacon_recvd_event_data *,ulong)
IO80211NANPeerManager::handleNANEventClusterChanged(apple80211_nan_cluster_changed_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPatahHostAssistRequest(apple80211_nan_dp_host_assist_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPathAFTxComplete(apple80211_nan_dp_tx_complete *,ulong)
IO80211NANPeerManager::handleNANEventDataPathConfirmReceived(apple80211_nan_dp_confirm_recvd_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPathEnd(apple80211_nan_data_path_end_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPathEstablished(apple80211_nan_data_path_established_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPathRequestReceived(apple80211_nan_dp_request_recvd_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDataPathResponseReceived(apple80211_nan_dp_resp_recvd_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDeviceRoleChanged(apple80211_nan_device_role_changed_event_data *,ulong)
IO80211NANPeerManager::handleNANEventDiscoveryResultRecv(apple80211_nan_discovery_result_received_event_data *,ulong)
IO80211NANPeerManager::handleNANEventFollowupTxComplete(apple80211_nan_follow_up_tx_complete_event_data *,ulong)
IO80211NANPeerManager::handleNANEventLinkStateChange(apple80211_nan_link_state *,ulong)
IO80211NANPeerManager::handleNANEventMacAddressChanged(ether_addr *)
IO80211NANPeerManager::handleNANEventMasterChanged(apple80211_nan_master_changed_event_data *,ulong)
IO80211NANPeerManager::handleNANEventOobActionFrameRx(apple80211_nan_oob_act_frm_rx_event_data *,ulong)
IO80211NANPeerManager::handleNANEventOobActionFrameTxStatus(apple80211_nan_oob_act_frm_tx_status *,ulong)
IO80211NANPeerManager::handleNANEventPeerScheduleUpdate(apple80211_nan_peer_schedule_update_event_data *,ulong)
IO80211NANPeerManager::handleNANEventPublishTerminated(apple80211_nan_publish_terminated_event_data *,ulong)
IO80211NANPeerManager::handleNANEventRangingRequestIndication(apple80211_nan_ranging_request_indication_event_data *,ulong)
IO80211NANPeerManager::handleNANEventRangingResponseIndication(apple80211_nan_ranging_response_indication_event_data *,ulong)
IO80211NANPeerManager::handleNANEventRangingResults(apple80211_nan_ranging_report_event_data *,ulong)
IO80211NANPeerManager::handleNANEventRangingTerminated(apple80211_nan_ranging_terminated_event_data *,ulong)
IO80211NANPeerManager::handleNANEventReset(apple80211_chip_reset *)
IO80211NANPeerManager::handleNANEventRestoreResponse(apple80211_nan_restore_response *,ulong)
IO80211NANPeerManager::initDefaultNANParams(void)
IO80211NANPeerManager::initWithInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211NANPeerManager::interfaceMonitor(void)
IO80211NANPeerManager::isInfraScanAllowed(bool)
IO80211NANPeerManager::lowlatencyStatsPostMetrics(void)
IO80211NANPeerManager::lowlatencyStatsPrepareMetrics(void)
IO80211NANPeerManager::monitorLowlatencyAWDmetric(void)
IO80211NANPeerManager::populateDeviceBatteryStatus(void)
IO80211NANPeerManager::preQueuePacket(__mbuf *)
IO80211NANPeerManager::printOverallNANStats(void)
IO80211NANPeerManager::printPeerAvailability(apple80211_debug_command *,userPrintCtx *)
IO80211NANPeerManager::removeAllPeers(void)
IO80211NANPeerManager::reportDataPathEvents(uint,void *,ulong)
IO80211NANPeerManager::reset(void)
IO80211NANPeerManager::restore(void)
IO80211NANPeerManager::setIOCTL(uint,uint,void *)
IO80211NANPeerManager::setJoiningState(scanSource,joinStatus,bool)
IO80211NANPeerManager::setNANBcnTxControl(apple80211_nan_bcn_control *)
IO80211NANPeerManager::setNANCancelPublish(apple80211_nan_cancel_publish_data *)
IO80211NANPeerManager::setNANCancelSubscribe(apple80211_nan_cancel_subscribe_data *)
IO80211NANPeerManager::setNANClusterId(apple80211_nan_cluster_id *)
IO80211NANPeerManager::setNANCommittedAvailability(apple80211_nan_committed_availability *)
IO80211NANPeerManager::setNANCtl(apple80211_nan_ctl *)
IO80211NANPeerManager::setNANCtlCustomPreferredChannel(void)
IO80211NANPeerManager::setNANCtlExtraBwPreferredChannel(void)
IO80211NANPeerManager::setNANCustomPreferredChannel(apple80211_nan_channel *)
IO80211NANPeerManager::setNANDWAwakePeriod(apple80211_nan_dw_awake_period *)
IO80211NANPeerManager::setNANDataClusterAvailability(apple80211_nan_data_cluster_availability *)
IO80211NANPeerManager::setNANDataPathConf(apple80211_nan_dp_confirm *)
IO80211NANPeerManager::setNANDataPathEnd(apple80211_nan_dp_terminate *)
IO80211NANPeerManager::setNANDataPathLinkStatus(apple80211_nan_dp_link_status *)
IO80211NANPeerManager::setNANDataPathRequest(apple80211_nan_dp_request *)
IO80211NANPeerManager::setNANDataPathResponse(apple80211_nan_dp_response *)
IO80211NANPeerManager::setNANDataPathRestore(apple80211_nan_restore_data_path_restore_info *)
IO80211NANPeerManager::setNANDiscBcnPeriod(apple80211_nan_disc_bcn_period *)
IO80211NANPeerManager::setNANEnable(apple80211_nan_enable *)
IO80211NANPeerManager::setNANFastDiscovery(apple80211_nan_forced_disc_beacon_transmission *)
IO80211NANPeerManager::setNANFastDiscoveryRequest(apple80211_nan_forced_disc_beacon_transmission *)
IO80211NANPeerManager::setNANFollowupTransmit(apple80211_nan_follow_up_transmit_data *)
IO80211NANPeerManager::setNANHopCount(apple80211_nan_hop_count *)
IO80211NANPeerManager::setNANHopCountLimit(apple80211_nan_hop_count_limit *)
IO80211NANPeerManager::setNANHostElection(apple80211_nan_host_election *)
IO80211NANPeerManager::setNANImmutableAvailability(apple80211_nan_immutable_availability *)
IO80211NANPeerManager::setNANInitialize(void)
IO80211NANPeerManager::setNANKeepAliveDatapathIdentifier(apple80211_nan_keep_alive_dp_identifer *)
IO80211NANPeerManager::setNANLLWParams(apple80211_llw_params *)
IO80211NANPeerManager::setNANMasterChannel(apple80211_nan_primary_master_channel *)
IO80211NANPeerManager::setNANMasterPreference(apple80211_nan_master_pref *)
IO80211NANPeerManager::setNANMasterRank(apple80211_nan_anchor_master_rank *)
IO80211NANPeerManager::setNANMaxPeers(apple80211_nan_maxpeers *)
IO80211NANPeerManager::setNANMinTxRate(apple80211_nan_min_tx_rate *)
IO80211NANPeerManager::setNANOobActionFrame(apple80211_nan_oob_act_frm_data *)
IO80211NANPeerManager::setNANPotentialAvailability(apple80211_nan_potential_availability *)
IO80211NANPeerManager::setNANPowerSaveRestriction(apple80211_nan_ps_restriction *)
IO80211NANPeerManager::setNANPublish(apple80211_nan_publish_data *)
IO80211NANPeerManager::setNANRandomFactor(apple80211_nan_random_factor *)
IO80211NANPeerManager::setNANRandomFactorRotation(apple80211_nan_random_factor_rotation *)
IO80211NANPeerManager::setNANRangingAvailaility(apple80211_nan_ranging_availability *)
IO80211NANPeerManager::setNANRangingCancel(apple80211_nan_ranging_cancel *)
IO80211NANPeerManager::setNANRangingRequest(apple80211_nan_ranging_request *)
IO80211NANPeerManager::setNANRangingResponse(apple80211_nan_ranging_response *)
IO80211NANPeerManager::setNANRssi5GCloseThreshold(apple80211_nan_rssi_5G_close *)
IO80211NANPeerManager::setNANRssiCloseThreshold(apple80211_nan_rssi_close *)
IO80211NANPeerManager::setNANRssiMiddleThreshold(apple80211_nan_rssi_5G_mid *)
IO80211NANPeerManager::setNANRssiMiddleThreshold(apple80211_nan_rssi_mid *)
IO80211NANPeerManager::setNANScheduleUpdate(apple80211_nan_schedule_update *)
IO80211NANPeerManager::setNANSecondaryMasterChannel(apple80211_nan_secondary_master_channel *)
IO80211NANPeerManager::setNANServiceDescriptorExtension(apple80211_nan_service_descriptor_extension *)
IO80211NANPeerManager::setNANSubscribe(apple80211_nan_subscribe_data *)
IO80211NANPeerManager::setNANSyncBcnPeriod(apple80211_nan_disc_bcn_period *)
IO80211NANPeerManager::setNANUserConfiguredChannelSequence(apple80211_nan_user_configured_radio_schedule *)
IO80211NANPeerManager::setNANVendorPayload(apple80211_nan_vendor_payload *)
IO80211NANPeerManager::setNANWarmupTime(apple80211_nan_warmup_time *)
IO80211NANPeerManager::setP2PLocalePeerLearned(bool)
IO80211NANPeerManager::setRadioChannelSequence(apple80211_radio_chan_seq *)
IO80211NANPeerManager::setScanningState(scanSource,bool,apple80211_scan_data *,int)
IO80211NANPeerManager::withInterface(IO80211VirtualInterface *,IO80211Interface *,ether_addr *)
IO80211NANPeerManager::~IO80211NANPeerManager()
IO80211NANPeerManager__fn_0x108
IO80211NANPowerManager::configurePowerSavingAvailabilitySlots(void)
IO80211NANPowerManager::free(void)
IO80211NANPowerManager::monitorPower(void)
IO80211NANPowerManager::restrictPowerSave(apple80211_disallow_nan_pwrsave_entities)
IO80211NANPowerManager::startRealTimePowerSaving(void)
IO80211NANPowerManager::unrestrictPowerSave(apple80211_disallow_nan_pwrsave_entities)
IO80211NANPowerManager::withManager(IO80211NANPeerManager *)
IO80211NANPublishServiceDescriptor::findSubscriberObject(ether_addr *)
IO80211NANPublishServiceDescriptor::freeResources(void)
IO80211NANPublishServiceDescriptor::getServiceDescriptorInfo(void *)
IO80211NANPublishServiceDescriptor::handleNANPublishRepliedEvent(apple80211_nan_publish_replied_private_event_data *)
IO80211NANPublishServiceDescriptor::initWithServiceParams(IO80211NANPeerManager *,IO80211PeerManager *,void *,serviceType)
IO80211NANPublishServiceDescriptor::parseSDAAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANPublishServiceDescriptor::parseSDExtensionAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANPublishServiceDescriptor::printServiceInfo(userPrintCtx *)
IO80211NANPublishServiceDescriptor::restoreServiceDescriptor(void)
IO80211NANPublishServiceDescriptor::sdTerminate(void *)
IO80211NANPublishServiceDescriptor::updateServiceParams(apple80211_nan_publish_data *,IO80211PeerManager *)
IO80211NANRadioResourceManager::addPreferredChannel(apple80211_nan_channel *,uchar)
IO80211NANRadioResourceManager::allocateChannelSlots(apple80211_channel_schedule_list *,apple80211_channel_schedule_list *,uchar *)
IO80211NANRadioResourceManager::checkForAWDLChannelSequenceOverride(void)
IO80211NANRadioResourceManager::checkForConflict(void)
IO80211NANRadioResourceManager::clearPreferredChannelList(uchar)
IO80211NANRadioResourceManager::createPrioritizedSchedule(void)
IO80211NANRadioResourceManager::enable(void)
IO80211NANRadioResourceManager::evaluatePreferredChannels(bool)
IO80211NANRadioResourceManager::free(void)
IO80211NANRadioResourceManager::getExtraBandwidthPreferredChannels(apple80211_nan_channel *,radio_schedule_band_id,uchar)
IO80211NANRadioResourceManager::getTopPreferredChannelList(apple80211_nan_channel *,radio_schedule_band_id,uchar)
IO80211NANRadioResourceManager::handleChannelBoundaryEvent(apple80211_nan_channel_boundary_event_data *,ulong)
IO80211NANRadioResourceManager::handleDWStart(ushort)
IO80211NANRadioResourceManager::initializeCCALogBuffer(void)
IO80211NANRadioResourceManager::insertAWDLChannelSchedule(apple80211_nan_radio_schedule *,void *,uint,void (*)(void *,apple80211_nan_radio_resource_change_reason,void *),void *,bool)
IO80211NANRadioResourceManager::insertAWDLRealTimeChannelSchedule(apple80211_nan_radio_schedule *,void *,uint,void (*)(void *,apple80211_nan_radio_resource_change_reason,void *),void *,bool)
IO80211NANRadioResourceManager::insertChannelSchedule(uchar,apple80211_nan_radio_schedule *,void (*)(void *,apple80211_nan_radio_resource_change_reason,void *),void *,bool)
IO80211NANRadioResourceManager::monitorRadioResources(void)
IO80211NANRadioResourceManager::notifyChannelChange(apple80211_nan_radio_resource_change_reason)
IO80211NANRadioResourceManager::prepareAvailability(void)
IO80211NANRadioResourceManager::prepareNonSDBAvailability(void)
IO80211NANRadioResourceManager::prepareNonSDBPotentialAvailability(void)
IO80211NANRadioResourceManager::prepareSDBAvailability(void)
IO80211NANRadioResourceManager::prepareSDBPotentialAvailability(void)
IO80211NANRadioResourceManager::printCCA(bool)
IO80211NANRadioResourceManager::printFinalSchedule(apple80211_debug_command *,userPrintCtx *)
IO80211NANRadioResourceManager::printOccupiedSlots(apple80211_debug_command *,userPrintCtx *)
IO80211NANRadioResourceManager::printPreferredChannels(apple80211_debug_command *,userPrintCtx *)
IO80211NANRadioResourceManager::printRadioResourceTable(apple80211_debug_command *,userPrintCtx *)
IO80211NANRadioResourceManager::recordCCA(uchar,uint)
IO80211NANRadioResourceManager::removeChannelSchedule(uchar,bool)
IO80211NANRadioResourceManager::removePreferredChannel(apple80211_nan_channel *,uchar,bool)
IO80211NANRadioResourceManager::restore(void)
IO80211NANRadioResourceManager::saveCurrentCommitedRawTimebitmap(apple80211_nan_committed_availability *,apple80211_nan_committed_base_schedule *)
IO80211NANRadioResourceManager::setDeviceChannelAvailability(bool)
IO80211NANRadioResourceManager::setDevicePotentialAvailability(bool)
IO80211NANRadioResourceManager::setRadioChannelSchedule(apple80211_nan_committed_availability *)
IO80211NANRangingManager::createRangingSession(void *,apple80211_nan_ranging_role)
IO80211NANRangingManager::createSchedule(void)
IO80211NANRangingManager::free(void)
IO80211NANRangingManager::handleChannelChange(void)
IO80211NANRangingManager::handleRangingRequestReceived(apple80211_nan_ranging_request_indication_event_data *)
IO80211NANRangingManager::handleRangingResponseReceived(apple80211_nan_ranging_response_indication_event_data *)
IO80211NANRangingManager::handleRangingResults(apple80211_nan_ranging_report_event_data *)
IO80211NANRangingManager::handleRangingTerminateEvent(apple80211_nan_ranging_terminated_event_data *)
IO80211NANRangingManager::initWithManager(IO80211NANPeerManager *)
IO80211NANRangingManager::printRangingSessionInfo(apple80211_debug_command *,userPrintCtx *)
IO80211NANRangingSession::free(void)
IO80211NANRangingSession::handleRangeReport(apple80211_nan_ranging_report_event_data *)
IO80211NANRangingSession::handleRangeResponse(apple80211_nan_ranging_response_indication_event_data *)
IO80211NANRangingSession::init(IO80211NANPeerManager *,apple80211_nan_ranging_role,void *)
IO80211NANRangingSession::printRangingSessionInfo(userPrintCtx *)
IO80211NANServiceDescriptor::free(void)
IO80211NANServiceDescriptor::freeResources(void)
IO80211NANServiceDescriptor::handleNANSDFollowup(apple80211_nan_follow_up_received_event_data *)
IO80211NANServiceDescriptor::initWithServiceParams(IO80211NANPeerManager *,IO80211PeerManager *,void *,serviceType)
IO80211NANServiceDescriptor::parseNANSDFAttributes(uchar *,ushort,apple80211_sdf_ctx *)
IO80211NANServiceDescriptor::parseSDAAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANServiceDescriptor::parseSDExtensionAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANServiceDescriptor::printServiceInfo(userPrintCtx *)
IO80211NANServiceDescriptor::sdTerminate(void *)
IO80211NANServiceManager::createSubscribeServiceRequest(apple80211_nan_subscribe_data *)
IO80211NANServiceManager::free(void)
IO80211NANServiceManager::getPublishDescriptorNdiPeerManager(uchar)
IO80211NANServiceManager::getPublisherDataAddress(uchar,uchar *)
IO80211NANServiceManager::getPublisherInfo(apple80211_nan_discovery_result_data *)
IO80211NANServiceManager::getServiceQoS(uchar,apple80211_nan_qos_requirements *)
IO80211NANServiceManager::handleServiceFollowup(apple80211_nan_follow_up_received_event_data *)
IO80211NANServiceManager::handleServiceFollowupTxComplete(apple80211_nan_follow_up_tx_complete_event_data *)
IO80211NANServiceManager::incrementPublishServiceCount(void)
IO80211NANServiceManager::initWithManager(IO80211NANPeerManager *)
IO80211NANServiceManager::isPublishInstanceIsInstantDiscovery(uchar)
IO80211NANServiceManager::isServiceInstanceValid(uchar)
IO80211NANServiceManager::isSubscribeInstanceIsInstantDiscovery(uchar)
IO80211NANServiceManager::monitorServices(void)
IO80211NANServiceManager::printServiceInfo(apple80211_debug_command *,userPrintCtx *)
IO80211NANServiceManager::removeAllServices(apple80211_nan_service_termination_reason)
IO80211NANServiceManager::restore(void)
IO80211NANServiceManager::setPublishInstanceIsInstantDiscovery(uchar)
IO80211NANServiceManager::setSubscribeInstanceIsInstantDiscovery(uchar)
IO80211NANServiceManager::storeDiscoveryResults(apple80211_nan_discovery_result_received_event_data *)
IO80211NANServiceManager::storeSubscriberInformation(apple80211_nan_publish_replied_private_event_data *)
IO80211NANServiceManager::terminatePublishInstance(apple80211_nan_publish_terminated_event_data *)
IO80211NANServiceManager::terminateSubscribeInstance(apple80211_nan_subscribe_terminated_event_data *)
IO80211NANServiceManager::terminateSubscribeWithReason(uchar,apple80211_nan_subscribe_termination_reason)
IO80211NANServiceManager::userInitiatedTerminatePublish(uchar)
IO80211NANServiceManager::userInitiatedTerminateSubscribe(uchar)
IO80211NANSubscribeServiceDescriptor::ageOutNANPublisherEntry(void)
IO80211NANSubscribeServiceDescriptor::findPublisherObject(uchar,ether_addr *)
IO80211NANSubscribeServiceDescriptor::freeResources(void)
IO80211NANSubscribeServiceDescriptor::getPublisherInfo(void *)
IO80211NANSubscribeServiceDescriptor::getServiceDescriptorInfo(void *)
IO80211NANSubscribeServiceDescriptor::getServiceUsersInfo(void *)
IO80211NANSubscribeServiceDescriptor::handleNANDiscoveryResult(apple80211_nan_discovery_result_received_event_data *)
IO80211NANSubscribeServiceDescriptor::initWithServiceParams(IO80211NANPeerManager *,IO80211PeerManager *,void *,serviceType)
IO80211NANSubscribeServiceDescriptor::parseSDAAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANSubscribeServiceDescriptor::parseSDExtensionAttribute(apple80211_nan_attribute *,ushort,apple80211_sdf_ctx *)
IO80211NANSubscribeServiceDescriptor::printServiceInfo(userPrintCtx *)
IO80211NANSubscribeServiceDescriptor::restoreServiceDescriptor(void)
IO80211NANSubscribeServiceDescriptor::sdTerminate(void *)
IO80211NANSubscribeServiceDescriptor::updateServiceParams(apple80211_nan_subscribe_data *)
IO80211NANSyncEngine::MetaClass::alloc(void)
IO80211NANSyncEngine::addDwStartRecord(apple80211_nan_dw_start_event_data *)
IO80211NANSyncEngine::disable(void)
IO80211NANSyncEngine::dwStartCallbacks(ushort)
IO80211NANSyncEngine::enable(void)
IO80211NANSyncEngine::free(void)
IO80211NANSyncEngine::handleDWEndEvent(apple80211_nan_dw_end_event_data *,ulong)
IO80211NANSyncEngine::handleDWStartEvent(apple80211_nan_dw_start_event_data *,ulong)
IO80211NANSyncEngine::handleDWStartTimer(IOTimerEventSource *)
IO80211NANSyncEngine::handleNANClusterChange(apple80211_nan_cluster_changed_event_data *)
IO80211NANSyncEngine::handleNANDeviceRoleChange(apple80211_nan_device_role_changed_event_data *)
IO80211NANSyncEngine::handleNANMasterChange(apple80211_nan_master_changed_event_data *)
IO80211NANSyncEngine::initWithManager(IO80211NANPeerManager *)
IO80211NANSyncEngine::restore(void)
IO80211NANSyncEngine::withManager(IO80211NANPeerManager *)
IO80211P2PDFSProxyManager::checkForDFSPrimeAvailability(uchar,uchar *,apple80211_dfs_proxy_clients)
IO80211P2PDFSProxyManager::disableDFSPrimeMonitoring(apple80211_dfs_proxy_clients)
IO80211P2PDFSProxyManager::handleScanDone(void)
IO80211P2PDFSProxyManager::initDFSPrimeScan(void)
IO80211P2PDFSProxyManager::initWithInterface(IO80211P2PSupervisor *)
IO80211P2PDFSProxyManager::reset(void)
IO80211P2PDaemonUserClient::clientClose(void)
IO80211P2PDaemonUserClient::clientCloseGated(OSObject *,void *,void *,void *,void *)
IO80211P2PDaemonUserClient::free(void)
IO80211P2PDaemonUserClient::initWithTask(task *)
IO80211P2PDaemonUserClient::start(IOService *)
IO80211P2PDaemonUserClient::stop(IOService *)
IO80211P2PDataPathManager::addNANPeerToCachedList(IO80211Peer *)
IO80211P2PDataPathManager::addPeerToFWCache(IO80211Peer *,bool)
IO80211P2PDataPathManager::allocateWithPeerManager(IO80211PeerManager *)
IO80211P2PDataPathManager::configureP2PPeerCacheSize(void)
IO80211P2PDataPathManager::deleteNANPeerFromCachedList(IO80211Peer *)
IO80211P2PDataPathManager::deletePeerFromFWCache(IO80211Peer *,peerDeleteReason)
IO80211P2PDataPathManager::enqueuePeerToFwCachedPeerList(IO80211Peer *)
IO80211P2PDataPathManager::findCachedPeer(ether_addr const*)
IO80211P2PDataPathManager::getCardCapableMaxPeerCacheSize(void)
IO80211P2PDataPathManager::getPeerToBeUncached(void)
IO80211P2PDataPathManager::handleCacheControlMessages(apple80211_peer_cache_control *)
IO80211P2PDataPathManager::handlePeerAddIndication(apple80211_peer_cache_control *)
IO80211P2PDataPathManager::handlePeerDeleteIndication(apple80211_peer_cache_control *)
IO80211P2PDataPathManager::initCommonResources(void)
IO80211P2PDataPathManager::logDebug(char const*,...)
IO80211P2PDataPathManager::logDebug(ulong long,char const*,...)
IO80211P2PDataPathManager::removeLRUPeerFromFWCache(void)
IO80211P2PDataPathManager::removePeerFromFWCachedPeerList(IO80211Peer *)
IO80211P2PDataPathManager::sanityCheckFWCachedPeerListSize(void)
IO80211P2PDataPathManager::sendIoctlToCachePeer(apple80211_peer_cache_control *,IO80211Peer *)
IO80211P2PInterface::apStaAttachToBpf(void)
IO80211P2PInterface::apStaSetUnitNumber(char const*)
IO80211P2PInterface::apsta_if_output_pre_enqueue(__ifnet *,__mbuf *)
IO80211P2PInterface::attachToBpf(void)
IO80211P2PInterface::configureIfnet(void)
IO80211P2PInterface::createPeerManager(ether_addr *,IO80211PeerManager **)
IO80211P2PInterface::initIfnetEparams(ifnet_init_eparams *)
IO80211P2PInterface::p2pSetUnitNumber(char const*)
IO80211P2PInterface::setUnitNumber(char const*)
IO80211P2PSteeringManager::addPeerToSteeringGroup(uchar *,uchar,signed char,bool)
IO80211P2PSteeringManager::addSteerChannel(uchar,signed char,bool)
IO80211P2PSteeringManager::delPeerFromSteeringGroup(uchar *)
IO80211P2PSteeringManager::delSteerChannel(uchar)
IO80211P2PSteeringManager::enableSteering(bool)
IO80211P2PSteeringManager::free(void)
IO80211P2PSteeringManager::initWithInterface(IO80211P2PSupervisor *)
IO80211P2PSteeringManager::monitorSteerState(void)
IO80211P2PSteeringManager::postSteeringRequest(uchar)
IO80211P2PSteeringManager::selectChannelForRoam(uchar *,signed char *,signed char *,uchar,uchar *,signed char *)
IO80211P2PSteeringManager::setAssocState(bool,uchar,signed char,bool)
IO80211P2PSteeringManager::setRoamComplete(int)
IO80211P2PSteeringManager::setSdbMode(bool)
IO80211P2PSteeringManager::shouldRoam(uchar)
IO80211P2PSteeringManager::switchChannel(uchar,signed char,signed char,uchar,signed char,signed char)
IO80211P2PSupervisor::csaCompleteReceived(void)
IO80211P2PSupervisor::csaStartReceived(uchar)
IO80211P2PSupervisor::enterSteadyState(void)
IO80211P2PSupervisor::enterWarmupState(void)
IO80211P2PSupervisor::free(void)
IO80211P2PSupervisor::getNANDeviceInfo(apple80211_nan_device_info *)
IO80211P2PSupervisor::handleMonitorTimer(IOTimerEventSource *)
IO80211P2PSupervisor::handleP2PPeerDeletion(void)
IO80211P2PSupervisor::initWithInterface(IO80211VirtualInterface *)
IO80211P2PSupervisor::isAWDLEnableRequired(void)
IO80211P2PSupervisor::logDebug(char const*,...)
IO80211P2PSupervisor::logDebug(ulong long,char const*,...)
IO80211P2PSupervisor::monitorSteadyState(void)
IO80211P2PSupervisor::nanAnchorMasterChanged(apple80211_nan_master_changed_event_data *)
IO80211P2PSupervisor::printState(userPrintCtx *)
IO80211P2PSupervisor::requestNANEnable(void)
IO80211P2PSupervisor::runConcurrencyStateMachine(void)
IO80211P2PSupervisor::setAWDLDisable(void)
IO80211P2PSupervisor::setAWDLEnable(void)
IO80211P2PSupervisor::setAWDLToAdoptNANChannelSequence(bool)
IO80211P2PSupervisor::setNANConfigured(void)
IO80211P2PSupervisor::setNANDisable(void)
IO80211P2PSupervisor::setNANEnable(void)
IO80211P2PSupervisor::setNANHostElection(bool)
IO80211P2PSupervisor::stateTimer(IOTimerEventSource *)
IO80211P2PSupervisor::supervisorTimer(void)
IO80211P2PSupervisor::withInterface(IO80211VirtualInterface *)
IO80211PacketDescriptor::free(void)
IO80211PacketDescriptor::freeResources(void)
IO80211PacketDescriptor::init(uchar)
IO80211PacketDescriptor::print(userPrintCtx *)
IO80211Peer::IO80211Peer(void)
IO80211Peer::MetaClass::alloc(void)
IO80211Peer::canTransmit(uint,uint)
IO80211Peer::canTransmitReason(uint,uint)
IO80211Peer::createIOReporters(IOService *)
IO80211Peer::decrementLowLatencyDataSession(void)
IO80211Peer::doCreditGrant(apple80211_peer_credit_grant *)
IO80211Peer::doSkywalkTransmitStatus(IOSkywalkNetworkPacket *,int)
IO80211Peer::doTransmitStatus(__mbuf *,int,bool &)
IO80211Peer::doTransmitStatusLegacy(IO80211PacketDescriptor *,reportTxStatus *,mapExtraParam *)
IO80211Peer::dumpTxPacket(char const*,phdr *)
IO80211Peer::fillInCacheParams(apple80211_peer_cache_control *)
IO80211Peer::flushQueues(uint)
IO80211Peer::free(void)
IO80211Peer::freeResources(void)
IO80211Peer::getPacket(pktDequeue *)
IO80211Peer::getStats(apple80211_peer_stats *)
IO80211Peer::hasQueuedPackets(void)
IO80211Peer::incrementLowLatencyDataSession(void)
IO80211Peer::incrementRxCount(uint)
IO80211Peer::incrementTxFailNoAckCount(void)
IO80211Peer::incrementTxFailOtherCount(void)
IO80211Peer::incrementTxOkCount(uint)
IO80211Peer::incrementTxQueueCount(uint)
IO80211Peer::init(void)
IO80211Peer::initWithAddressAndManager(uchar const*,IO80211PeerManager *)
IO80211Peer::inputPacket(__mbuf *,inputPacketCtx *)
IO80211Peer::logDebug(char const*,...)
IO80211Peer::packetStats(packetStats *)
IO80211Peer::parseHTCapTLV(IO80211BufferCursor const&,IO80211BufferCursor const&)
IO80211Peer::parseHTOperationTLV(IO80211BufferCursor const&,IO80211BufferCursor const&)
IO80211Peer::parseVhtCapTLV(IO80211BufferCursor const&,IO80211BufferCursor const&)
IO80211Peer::printHTandVHTFlags(userPrintCtx *)
IO80211Peer::queuePacket(IO80211PacketDescriptor *)
IO80211Peer::queuePacket(__mbuf *)
IO80211Peer::removePacketQueue(IO80211FlowQueueHash *)
IO80211Peer::reportChainRssi(signed char const*,int)
IO80211Peer::reportRssi(int,apple80211_channel)
IO80211Peer::reportTransmitStatus(reportTxStatus *)
IO80211Peer::setState(peerState)
IO80211Peer::setStateForCachedPeer(void)
IO80211Peer::skywalkInputPacket(ulong,mbuf_traffic_class_t)
IO80211Peer::unpauseQueues(void)
IO80211Peer::updateNumHostPackets(uint,int)
IO80211Peer::updateQueueState(int)
IO80211Peer::updateRequestBitField(void)
IO80211Peer::updateTxPacketStats(int,uint)
IO80211Peer::withAddressAndManager(uchar const*,IO80211PeerManager *)
IO80211PeerBssSteeringManager::IO80211PeerBssSteeringManager(void)
IO80211PeerBssSteeringManager::MetaClass::alloc(void)
IO80211PeerBssSteeringManager::abortScans(void)
IO80211PeerBssSteeringManager::addAllEventSources(void)
IO80211PeerBssSteeringManager::arePeersBssInSync(void)
IO80211PeerBssSteeringManager::bssSteeringExpiryTimerHandler(IOTimerEventSource *)
IO80211PeerBssSteeringManager::bssSteeringStageExpiryTimerHandler(IOTimerEventSource *)
IO80211PeerBssSteeringManager::clearTxConfirmAwaitCounter(void)
IO80211PeerBssSteeringManager::confirmBssSteeringState(IO80211AWDLPeer *,realTimeServiceId)
IO80211PeerBssSteeringManager::disableWorkloopSources(void)
IO80211PeerBssSteeringManager::enableWorkloopSources(void)
IO80211PeerBssSteeringManager::free(void)
IO80211PeerBssSteeringManager::getActionOnSteeringFail(uint,uint)
IO80211PeerBssSteeringManager::getBssSteeringRequestTypeString(apple80211_bss_steering_request_type)
IO80211PeerBssSteeringManager::getCompletionTimeoutAtReceiver(realTimeServiceId)
IO80211PeerBssSteeringManager::getEventName(bssSteeringEvent)
IO80211PeerBssSteeringManager::getPeerForBssSteering(void)
IO80211PeerBssSteeringManager::getStateName(bssSteeringState)
IO80211PeerBssSteeringManager::getSteeringCmdFlags(realTimeServiceId,IO80211AWDLPeer *)
IO80211PeerBssSteeringManager::getSteeringPolicy(realTimeServiceId,uint,uint,sdbCapabilityType,sdbCapabilityType,uint)
IO80211PeerBssSteeringManager::initWithManager(IO80211PeerManager *,apple80211_virtual_if_role)
IO80211PeerBssSteeringManager::initializeParams(void)
IO80211PeerBssSteeringManager::isBssSteeringScanAttemptValid(void)
IO80211PeerBssSteeringManager::isSelfPeerInfraValid(void)
IO80211PeerBssSteeringManager::isTimeRemainingForScanAttempt(void)
IO80211PeerBssSteeringManager::postBssSteeringRequest(apple80211_bss_steering_request *)
IO80211PeerBssSteeringManager::processBssSteeringEnabled(bssSteeringRole,bssSteeringEnableData *,steeringTriggerType)
IO80211PeerBssSteeringManager::processDisableEvent(void)
IO80211PeerBssSteeringManager::processPostSteeringSyncFailure(bssSteeringSyncFailureReason)
IO80211PeerBssSteeringManager::processPostSyncEvaluation(uint,bool)
IO80211PeerBssSteeringManager::processPreSyncEvaluation(void)
IO80211PeerBssSteeringManager::processSelfSteeringDirective(uint)
IO80211PeerBssSteeringManager::processSteeringCandidate(ether_addr *)
IO80211PeerBssSteeringManager::processSteeringResume(bool *)
IO80211PeerBssSteeringManager::processSteeringSuspend(void)
IO80211PeerBssSteeringManager::processSteeringSyncDone(void)
IO80211PeerBssSteeringManager::requestBssChange(apple80211_bss_steering_request_type,void *)
IO80211PeerBssSteeringManager::resetAndRemovePeerInfo(IO80211AWDLPeer *)
IO80211PeerBssSteeringManager::sendSteeringFailureIndication(void)
IO80211PeerBssSteeringManager::setUpBssSteeringInitTimers(void)
IO80211PeerBssSteeringManager::withManager(IO80211PeerManager *,apple80211_virtual_if_role)
IO80211PeerManager::IO80211PeerManager(void)
IO80211PeerManager::MetaClass::alloc(void)
IO80211PeerManager::addAllEventSource(void)
IO80211PeerManager::addPeer(uchar *)
IO80211PeerManager::allocateDescriptor(__mbuf *)
IO80211PeerManager::awdlChipReset(void)
IO80211PeerManager::cachePeerPendingWithData(IO80211Peer *)
IO80211PeerManager::checkDisablemDNSTx(void)
IO80211PeerManager::collectImmediateFaultDataCallback(CCFaultReport *)
IO80211PeerManager::configureReport(IOReportChannelList *,uint,void *,void *)
IO80211PeerManager::createIOReporters(IOService *)
IO80211PeerManager::decrementMIPayloadOverflowPeersCount(void)
IO80211PeerManager::defaultLLWParams(apple80211_llw_params *,uchar)
IO80211PeerManager::dequeueTxPacket(TxPacketRequest *)
IO80211PeerManager::destroyPeerManagerDatapathPcapLogger(void)
IO80211PeerManager::destroyPeerManagerTextLogger(void)
IO80211PeerManager::disable(char const*)
IO80211PeerManager::disableGated(void *,void *,void *,void *,void *)
IO80211PeerManager::disableWorkQueueSources(void)
IO80211PeerManager::doDisable(char const*)
IO80211PeerManager::doEnable(char const*)
IO80211PeerManager::doFreePacket(IO80211PacketDescriptor *)
IO80211PeerManager::do_ioctl(uint,uint,void *)
IO80211PeerManager::dumpPacket(ulong long,char const*,phdr *,uint)
IO80211PeerManager::dumpPacketUpdateBPFHeader(apple80211_ios_wifi_driver_bpf_hdr *,char const*,phdr *,uchar *,uint *,uchar **)
IO80211PeerManager::enable(char const*)
IO80211PeerManager::enableGated(void *,void *,void *,void *,void *)
IO80211PeerManager::enableWorkQueueSources(void)
IO80211PeerManager::enablemDNSTx(void)
IO80211PeerManager::failToEnable(void)
IO80211PeerManager::findPeer(uchar *)
IO80211PeerManager::flushFreeMbufs(void)
IO80211PeerManager::free(void)
IO80211PeerManager::getAwdlCtl(apple80211_awdl_ctl *)
IO80211PeerManager::getBSDName(void)
IO80211PeerManager::getBSSIDData(apple80211_bssid_data *)
IO80211PeerManager::getController(void)
IO80211PeerManager::getHeCapabilityIE(apple80211_he_capability *)
IO80211PeerManager::getHp2pCtrl(apple80211_hp2p_ctrl *)
IO80211PeerManager::getHtCapabilityIE(apple80211_ht_capability *)
IO80211PeerManager::getIfNet(void)
IO80211PeerManager::getLogFlags(apple80211_peer_manager_log_flags *)
IO80211PeerManager::getMulticastPackets(TxPacketRequest *)
IO80211PeerManager::getNewAvg(uint,uint)
IO80211PeerManager::getOldestPeerWaitingToBeCached(void)
IO80211PeerManager::getPeerManagerLogFlags(void)
IO80211PeerManager::getPeerStats(apple80211_peer_stats *)
IO80211PeerManager::getPeerStatsID(ether_addr *,uchar *)
IO80211PeerManager::getRsdbCaps(apple80211_rsdb_capability *)
IO80211PeerManager::getUnicastPackets(TxPacketRequest *,mbuf_traffic_class_t)
IO80211PeerManager::getVHtCapabilityIE(apple80211_vht_capability *)
IO80211PeerManager::handleDebugCmd(apple80211_debug_command *)
IO80211PeerManager::handleMonitorTimer(IOTimerEventSource *)
IO80211PeerManager::incrementMIPayloadOverflowPeersCount(void)
IO80211PeerManager::induceFaultCallback(int,char const*)
IO80211PeerManager::initDefaultLogFlags(void)
IO80211PeerManager::initInfraRelayPcapLogger(void)
IO80211PeerManager::initPeerManagerDatapathPcapLogger(void)
IO80211PeerManager::initPeerManagerPcapLogger(void)
IO80211PeerManager::initPeerManagerTextLogger(void)
IO80211PeerManager::initWithInterface(IO80211VirtualInterface *,IO80211Interface *,IO80211SkywalkInterface *)
IO80211PeerManager::inputPacket(__mbuf **,packet_info_tag *)
IO80211PeerManager::interfaceMonitor(void)
IO80211PeerManager::ioctl_internal(ioctl_internal_req *)
IO80211PeerManager::ioctl_internal_gated(void *,ioctl_internal_req *,void *,void *,void *)
IO80211PeerManager::isAWDLInterfaceRestoreImpending(void)
IO80211PeerManager::logDebug(char const*,...)
IO80211PeerManager::logDebug(ulong long,char const*,...)
IO80211PeerManager::logTxCompletionPacket(__mbuf *,int)
IO80211PeerManager::logTxPacket(__mbuf *)
IO80211PeerManager::macAddressEqual(IO80211Peer *,uchar *)
IO80211PeerManager::monitorCountryCode(void)
IO80211PeerManager::postMessageOnInfraInterface(uint,void *,uint)
IO80211PeerManager::preQueuePacket(__mbuf *)
IO80211PeerManager::printDataPath(userPrintCtx *)
IO80211PeerManager::printFlowControl(ulong long,char const*)
IO80211PeerManager::printHashTable(void)
IO80211PeerManager::printPackets(userPrintCtx *)
IO80211PeerManager::printPeers(uint,uint)
IO80211PeerManager::printState(userPrintCtx *)
IO80211PeerManager::removeAllPeers(void)
IO80211PeerManager::removeCachedPeers(uint *)
IO80211PeerManager::removeFlushedPeers(void)
IO80211PeerManager::removePeer(IO80211Peer *)
IO80211PeerManager::removePeer(uchar *)
IO80211PeerManager::reportP2PCCA(uchar,uint,uint,uint,uint)
IO80211PeerManager::reportTransmitStatus(__mbuf *,int)
IO80211PeerManager::reportTransmitStatusLegacy(__mbuf *,int,packet_info_tx *)
IO80211PeerManager::requestTxPacket(char const*)
IO80211PeerManager::reset(void)
IO80211PeerManager::resetTxPathHealthCheck(void)
IO80211PeerManager::restorePeerManagerLogFlags(void)
IO80211PeerManager::saveCountryCode(uchar *)
IO80211PeerManager::selfDiagnosticsReport(int,char const*,bool)
IO80211PeerManager::sendUnflowControlStack(mbuf_traffic_class_t)
IO80211PeerManager::setAwdlCtl(apple80211_awdl_ctl *)
IO80211PeerManager::setCountryCodeState(void)
IO80211PeerManager::setDataPathState(bool)
IO80211PeerManager::setDefaultLogFlags(void)
IO80211PeerManager::setHp2pCtrl(apple80211_hp2p_ctrl *)
IO80211PeerManager::setHtCapabilityIE(apple80211_ht_capability *)
IO80211PeerManager::setLogFlags(apple80211_peer_manager_log_flags *)
IO80211PeerManager::setMIPayloadOverflowState(bool)
IO80211PeerManager::setPeerManagerLogFlags(ulong long,uint)
IO80211PeerManager::setScanningState(scanSource,bool,apple80211_scan_data *,int)
IO80211PeerManager::setVHtCapabilityIE(apple80211_vht_capability *)
IO80211PeerManager::shouldLog(ulong long)
IO80211PeerManager::signalPeerManagerEvent(ApplePeerManagerEvents)
IO80211PeerManager::skywalkDumpPacket(ulong long,char const*,phdr *,IOSkywalkNetworkPacket *,uchar *,mbuf_traffic_class_t,ushort,lowlatencyStatus *)
IO80211PeerManager::skywalkInputPacket(IOSkywalkNetworkPacket *,IO80211Peer *,packet_info_tag *,ether_header *,bool)
IO80211PeerManager::skywalkLogTxCompletionPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,IO80211Peer *,int,uint)
IO80211PeerManager::skywalkLogTxPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *,mbuf_traffic_class_t,IO80211Peer *,bool)
IO80211PeerManager::skywalkReportTransmitStatus(IOSkywalkNetworkPacket *,IO80211Peer *,int,packet_info_tx *)
IO80211PeerManager::stackHasPackets(void)
IO80211PeerManager::storePeerManagerLogFlags(void)
IO80211PeerManager::stringForInterfaceStateChangedSource(StateChangedSource)
IO80211PeerManager::unflowControlStack(void)
IO80211PeerManager::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211PeerManager::validCCForPeerLearning(uchar *)
IO80211PeerManager::waitForPeerManagerEvent(ApplePeerManagerEvents,uint)
IO80211PeerManager::withInterface(IO80211VirtualInterface *,IO80211Interface *,IO80211SkywalkInterface *)
IO80211PeerManager::~IO80211PeerManager()
IO80211PeerMonitor::checkForDPS(void)
IO80211PeerMonitor::createExtendedReportersAndLegend(PeerExtendedReportId,PeerExtendedReportId)
IO80211PeerMonitor::createInterfaceReportSet(void)
IO80211PeerMonitor::createLinkQualityMonitor(IOService *,IO80211LinkQualityMonitor::Options const*)
IO80211PeerMonitor::createLinkQualityMonitorReportersAndLegend(void)
IO80211PeerMonitor::createReportersAndLegend(void)
IO80211PeerMonitor::createReportersAndLegendForData(uint)
IO80211PeerMonitor::createReportersAndLegendForDataSnapshot(uint)
IO80211PeerMonitor::destroyExtendedReporters(PeerExtendedReportId,PeerExtendedReportId)
IO80211PeerMonitor::destroyLinkQualityMonitorReporters(void)
IO80211PeerMonitor::destroyReporters(void)
IO80211PeerMonitor::disableDPSNotificationsDueToRateLimit(void)
IO80211PeerMonitor::disableDPSSymptomsNotificationsDueToRateLimit(void)
IO80211PeerMonitor::exceededDPSSymptomsQuotaPerMonitoringPeriod(uint,uint &)
IO80211PeerMonitor::exceededQuotaPerHour(uint,uint &)
IO80211PeerMonitor::free(void)
IO80211PeerMonitor::getCardCapabilities(void)
IO80211PeerMonitor::getExtendedStats(apple80211_extended_peer_stats *)
IO80211PeerMonitor::getPerPeerChannelID(ulong long)
IO80211PeerMonitor::getTotalTxPacketsGivenUp(uint *)
IO80211PeerMonitor::incrementControlVOTxStatus(int,uint)
IO80211PeerMonitor::incrementRxExtStats(IOSkywalkNetworkPacket *,packet_info_tag *,lowlatencyStatus *)
IO80211PeerMonitor::incrementTxFreed(uint)
IO80211PeerMonitor::incrementTxGivenUp(uint)
IO80211PeerMonitor::incrementTxInput(uint)
IO80211PeerMonitor::incrementTxStatus(int,uint,uchar,PacketSkywalkScratch *)
IO80211PeerMonitor::incrementTxStatusForDps(int,uint)
IO80211PeerMonitor::incrementTxSuppressed(uint)
IO80211PeerMonitor::initWithPeerPeerManagerAndProvider(IO80211Peer *,IO80211PeerManager *,IOService *)
IO80211PeerMonitor::isRealTimePeer(void)
IO80211PeerMonitor::logTxPacket(IOSkywalkNetworkPacket *,PacketSkywalkScratch *)
IO80211PeerMonitor::printControlVOTxStats(void)
IO80211PeerMonitor::recordDPSSymptomsInput(apple80211_dps_symptoms_input *)
IO80211PeerMonitor::releaseLinkQualityMonitor(void)
IO80211PeerMonitor::resetStuckDataPathCheck(void)
IO80211PeerMonitor::setPeerRSSI(long long)
IO80211PeerMonitor::setQueueFill(uint,ulong long)
IO80211PeerMonitor::simulateDPS(void)
IO80211PeerMonitor::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211PeerMonitor::withPeerPeerManagerAndProvider(IO80211Peer *,IO80211PeerManager *,IOService *)
IO80211QueueCall::addEntryToQueueAndCall(QCEntry *)
IO80211QueueCall::free(void)
IO80211QueueCall::get_chip_diags(IO80211SkywalkInterface *,IO80211LinkQualityMonitor *)
IO80211QueueCall::handleQueue(void *)
IO80211QueueCall::ifnet_enableIPv6(char const*,bool)
IO80211QueueCall::init(void)
IO80211QueueCall::io80211QueueCall(void)
IO80211QueueCall::kev_post_msg(kev_msg *,IO80211Controller *)
IO80211QueueCall::link_quality_monitor(IO80211SkywalkInterface *,IO80211Peer *,bool)
IO80211QueueCall::performSelfDiagnosticGated(OSObject *,void *,void *,void *,void *)
IO80211QueueCall::request_bss_blacklist(IO80211Controller *,IO80211LinkQualityMonitor *)
IO80211QueueDescriptor::free(void)
IO80211QueueDescriptor::init(void)
IO80211RangingManager::_abortRequest(int)
IO80211RangingManager::_findIO80211Peer(ether_addr *,bool)
IO80211RangingManager::_freePeers(void)
IO80211RangingManager::_freeRequests(void)
IO80211RangingManager::_getRangingPeerNode(ether_addr *)
IO80211RangingManager::_getRangingPeerNodeByIdentifier(uchar const*)
IO80211RangingManager::_postMessage(int,io80211_ranging_request_node *)
IO80211RangingManager::_rangingCompleted(void)
IO80211RangingManager::_restartAuthentication(void)
IO80211RangingManager::_restartPendingRequest(void)
IO80211RangingManager::_setRangeable(bool)
IO80211RangingManager::_startAuthentication(io80211_ranging_peer_node *)
IO80211RangingManager::_startRanging(io80211_ranging_request_node *)
IO80211RangingManager::_stopRanging(void)
IO80211RangingManager::_updatePeerList(ether_addr *,bool)
IO80211RangingManager::assistedDiscoveryTimedOut(uint)
IO80211RangingManager::authenticationCompleted(apple80211_ranging_authentication_event_t *)
IO80211RangingManager::awdlSyncStateChanged(void)
IO80211RangingManager::enableRanging(apple80211_ranging_enable_request_t *)
IO80211RangingManager::free(void)
IO80211RangingManager::getRangingCaps(apple80211_ranging_capabilities_t *)
IO80211RangingManager::getRangingResult(apple80211_ranging_peer_list_data_t *,bool)
IO80211RangingManager::inAwdlAvailabilityWindow(void)
IO80211RangingManager::initWithController(IO80211Controller *)
IO80211RangingManager::isPeerBusy(ether_addr *)
IO80211RangingManager::notifyExitAssistedDiscovery(void)
IO80211RangingManager::peerPresenceChanged(uchar const*,bool)
IO80211RangingManager::peerStatusUpdated(ether_addr *)
IO80211RangingManager::rangingResult(apple80211_ranging_peer_t *)
IO80211RangingManager::sessionTimedOut(OSObject *,IOTimerEventSource *)
IO80211RangingManager::setRangingFollowMode(apple80211_ranging_set_ranging_follow_mode_t *)
IO80211RangingManager::setRangingIdentifier(apple80211_ranging_set_identifier_t *)
IO80211RangingManager::startRanging(apple80211_ranging_start_request_t *)
IO80211RangingManagerExt::UMI_TimedOut(OSObject *,IOTimerEventSource *)
IO80211RangingManagerExt::_abortRequest(int,io80211_ranging_manager_request_node *)
IO80211RangingManagerExt::_findIO80211Peer(ether_addr *,bool)
IO80211RangingManagerExt::_freePeers(bool)
IO80211RangingManagerExt::_freeRequests(bool)
IO80211RangingManagerExt::_getRangeablePeerNode(ether_addr *,uchar const*)
IO80211RangingManagerExt::_getRangingPeerNode(ether_addr *,uchar const*)
IO80211RangingManagerExt::_getRangingReqNode(ether_addr *,uchar const*)
IO80211RangingManagerExt::_postMessage(int,io80211_ranging_manager_request_node *)
IO80211RangingManagerExt::_processRangeablePeers(void)
IO80211RangingManagerExt::_processRangingPeers(void)
IO80211RangingManagerExt::_rangingCompleted(ether_addr *,io80211_ranging_manager_result_node *)
IO80211RangingManagerExt::_releasePeerNode(io80211_ranging_manager_peer_node *)
IO80211RangingManagerExt::_releaseRequestNode(io80211_ranging_manager_request_node *)
IO80211RangingManagerExt::_setRangeable(bool)
IO80211RangingManagerExt::_startAuthentication(io80211_ranging_manager_peer_node *)
IO80211RangingManagerExt::_startRanging(io80211_ranging_manager_peer_node *)
IO80211RangingManagerExt::_stopRanging(void)
IO80211RangingManagerExt::assistedDiscoveryTimedOut(uint)
IO80211RangingManagerExt::awdlSyncStateChanged(void)
IO80211RangingManagerExt::enableRanging(apple80211_ranging_enable_request_t *)
IO80211RangingManagerExt::free(void)
IO80211RangingManagerExt::freePeerNodeTimeout(OSObject *,IOTimerEventSource *)
IO80211RangingManagerExt::getRangingResult(apple80211_ranging_peer_list_data_t *,bool)
IO80211RangingManagerExt::inAwdlAvailabilityWindow(void)
IO80211RangingManagerExt::initWithController(IO80211Controller *)
IO80211RangingManagerExt::notifyExitAssistedDiscovery(void)
IO80211RangingManagerExt::peerStatusUpdated(ether_addr *)
IO80211RangingManagerExt::rangingResult(apple80211_ranging_peer_t *)
IO80211RangingManagerExt::rangingRetryTimedOut(OSObject *,IOTimerEventSource *)
IO80211RangingManagerExt::sessionTimedOut(OSObject *,IOTimerEventSource *)
IO80211RangingManagerExt::setRangingFollowMode(apple80211_ranging_set_ranging_follow_mode_t *)
IO80211RangingManagerExt::setRangingIdentifier(apple80211_ranging_set_identifier_t *)
IO80211RangingManagerExt::startRanging(apple80211_ranging_start_request_t *)
IO80211RealTimePeerManager::cachedRtPeerHasChangedChannelSequence(IO80211AWDLPeer *,realTimePeer,realTimePeerChangeType)
IO80211RealTimePeerManager::disableRealTimeMgrTimer(void)
IO80211RealTimePeerManager::displayRtChannelSequence(void)
IO80211RealTimePeerManager::enableRealTimeMgrTimer(void)
IO80211RealTimePeerManager::free(void)
IO80211RealTimePeerManager::getRtMode(void)
IO80211RealTimePeerManager::handleRealTimeMgrTimer(IOTimerEventSource *)
IO80211RealTimePeerManager::initWithInterface(void *)
IO80211RealTimePeerManager::isAllOnNonDFS5GInfra(void)
IO80211RealTimePeerManager::isAllOnSameDFS5GInfra(void)
IO80211RealTimePeerManager::isBothOnNonDFS5GInfra(void)
IO80211RealTimePeerManager::isBothOnSameDFS5GInfra(void)
IO80211RealTimePeerManager::isDFSProxy(void)
IO80211RealTimePeerManager::isDiffNonDFS5GInfra(void)
IO80211RealTimePeerManager::isMixDFS(void)
IO80211RealTimePeerManager::resetRealTimeSession(void)
IO80211RealTimePeerManager::resetRtMode(void)
IO80211RealTimePeerManager::rxStop(IO80211AWDLPeer *)
IO80211RealTimePeerManager::setRealTimeChannelSequenceByMode(rtMode)
IO80211RealTimePeerManager::setRealTimePeerSession(void)
IO80211RealTimePeerManager::txStartUmiStatusInd(uchar,IO80211AWDLPeer *)
IO80211RealTimePeerManager::txStopUmiStatusInd(uchar,IO80211AWDLPeer *)
IO80211RealTimePeerManager::updateAWDLChannelSequenceWithRtChannelSequence(void)
IO80211RealTimePeerManager::withInterface(void *)
IO80211ScanManager::cachePurge(bool)
IO80211ScanManager::commonInit(IO80211Controller *,IOService *)
IO80211ScanManager::createReportersAndLegend(void)
IO80211ScanManager::createScanManagerReportSet(void)
IO80211ScanManager::destroyReporters(void)
IO80211ScanManager::fastScan(apple80211_scan_data *,int)
IO80211ScanManager::fastScanMultiple(apple80211_scan_multiple_data *,int)
IO80211ScanManager::free(void)
IO80211ScanManager::getCachedScanResults(apple80211_scan_data *,apple80211scan_req_node *,ether_addr *,uint)
IO80211ScanManager::getScanResult(apple80211_scan_result **,ulong *)
IO80211ScanManager::initWithControllerAndInterface(IO80211Controller *,IO80211Interface *)
IO80211ScanManager::initWithControllerAndSkywalkInterface(IO80211Controller *,IO80211SkywalkInterface *)
IO80211ScanManager::isOpModeScanFriendly(void)
IO80211ScanManager::isScanDisallowedByAwdl(apple80211_scan_data *,apple80211_scan_multiple_data *)
IO80211ScanManager::queryScanResult(apple80211_scan_result **)
IO80211ScanManager::reportScanOnChannels(apple80211scan_req_node *)
IO80211ScanManager::reportScanRequest(apple80211scan_req_node *)
IO80211ScanManager::scanControl(apple80211scan_control_client,bool,bool,bool,bool,bool)
IO80211ScanManager::scanControlCommand(bool,bool)
IO80211ScanManager::scanDone(bool)
IO80211ScanManager::searchForPendingAndClearPid(int)
IO80211ScanManager::setCacheAgeThreshold(uint)
IO80211ScanManager::startScan(apple80211_scan_data *)
IO80211ScanManager::startScanMultiple(apple80211_scan_multiple_data *)
IO80211ScanManager::updateCache(apple80211scan_cache_node *,apple80211scan_req_node *)
IO80211ScanManager::validateScanData(apple80211_scan_data *)
IO80211ServiceRequestDescriptor::awdlUncompressData(userPrintCtx *)
IO80211ServiceRequestDescriptor::awdlUncompressKey(userPrintCtx *)
IO80211ServiceRequestDescriptor::compare(IO80211ServiceRequestDescriptor*)
IO80211ServiceRequestDescriptor::copyData(uchar *)
IO80211ServiceRequestDescriptor::copyDataOnly(uchar *,ulong)
IO80211ServiceRequestDescriptor::createStringForDnsData(uchar *,uint)
IO80211ServiceRequestDescriptor::createStringForKey(void)
IO80211ServiceRequestDescriptor::freeResources(void)
IO80211ServiceRequestDescriptor::hasString(char const*,ulong)
IO80211ServiceRequestDescriptor::initWithArpaTLV(IO80211BufferCursor const&,ether_addr *,userPrintCtx *)
IO80211ServiceRequestDescriptor::initWithTLVData(IO80211BufferCursor const&,IO80211BufferCursor const&)
IO80211ServiceRequestDescriptor::initWithUserAddress(uchar *,userPrintCtx *)
IO80211ServiceRequestDescriptor::print(userPrintCtx *)
IO80211ServiceRequestDescriptor::printKey(userPrintCtx *)
IO80211SimpleReporter::free(void)
IO80211SimpleReporter::getModeChannelIdAndIndex(uint &,ulong long &)
IO80211SimpleReporter::handleAddChannelSwap(ulong long,OSSymbol const*)
IO80211SimpleReporter::handleSwapPrepare(int)
IO80211SimpleReporter::with(IOService *,ushort,ulong long)
IO80211SkywalkInterface::createIOReporters(IOService *)
IO80211SkywalkInterface::debugFlags(void)
IO80211SkywalkInterface::dumpUnentitledProcesses(void)
IO80211SkywalkInterface::free(void)
IO80211SkywalkInterface::getBSDName(void)
IO80211SkywalkInterface::getBSSID(void)
IO80211SkywalkInterface::getIfnet(void)
IO80211SkywalkInterface::getSelfMacAddr(void)
IO80211SkywalkInterface::getWorkQueue(void)
IO80211SkywalkInterface::handleDebugCmd(apple80211_debug_command *)
IO80211SkywalkInterface::handleSIOCSIFADDR(void)
IO80211SkywalkInterface::init(IOService *)
IO80211SkywalkInterface::init(void)
IO80211SkywalkInterface::initBSDInterfaceParameters(ifnet_init_eparams *,sockaddr_dl **)
IO80211SkywalkInterface::initialPowerStateForDomainState(ulong)
IO80211SkywalkInterface::inputPacket(IOSkywalkNetworkPacket *,packet_info_tag *,ether_header *)
IO80211SkywalkInterface::isCommandAllowed(void)
IO80211SkywalkInterface::isIOUCPipeOpened(void)
IO80211SkywalkInterface::isInterfaceEnabled(void)
IO80211SkywalkInterface::logDebug(char const*,...)
IO80211SkywalkInterface::logDebug(ulong long,char const*,...)
IO80211SkywalkInterface::logDebugHex(void const*,ulong,char const*,...)
IO80211SkywalkInterface::mapBuffer(IO80211APIUserClient *,task *,IOUCPipeMap *)
IO80211SkywalkInterface::maxCapabilityForDomainState(ulong)
IO80211SkywalkInterface::performGatedCommandIOCTL(uint,void *)
IO80211SkywalkInterface::performGatedCommandIOUC(uint,void *)
IO80211SkywalkInterface::postMessageIOUC(char const*,uint,void *,ulong)
IO80211SkywalkInterface::postPeerPresence(ether_addr *,int,int,int,char *)
IO80211SkywalkInterface::prepareBSDInterface(__ifnet *,uint)
IO80211SkywalkInterface::printDataPath(userPrintCtx *)
IO80211SkywalkInterface::processBSDCommand(__ifnet *,uint,void *)
IO80211SkywalkInterface::setInterfaceRole(uint)
IO80211SkywalkInterface::setLinkState(IO80211LinkState,uint,bool,uint)
IO80211SkywalkInterface::setRunningState(bool)
IO80211SkywalkInterface::setSelfMacAddr(ether_addr *)
IO80211SkywalkInterface::start(IOService *)
IO80211SkywalkInterface::storeIoctlInArray(OSArray *,OSNumber *)
IO80211SkywalkInterface::storeProcessNameAndIoctlInformation(ulong)
IO80211SkywalkInterface::stringFromReturn(int)
IO80211SkywalkInterface::unmapBuffer(IO80211APIUserClient *)
IO80211String::appendFormat(char const*,...)
IO80211String::appendFormatAndArguments(char const*,char *)
IO80211String::appendStringWithLength(char const*,uint)
IO80211String::free(void)
IO80211String::getCStringNoCopy(void)
IO80211String::init(void)
IO80211String::withFormatAndArguments(char const*,char *)
IO80211ThroughputCache::discardThroughput(ether_addr)
IO80211ThroughputCache::etherAddrStr(ether_addr)
IO80211ThroughputCache::free(void)
IO80211ThroughputCache::initWithCapacityAndTimeout(uint,ulong long)
IO80211ThroughputCache::lookupThroughput(ether_addr)
IO80211ThroughputCache::saveThroughput(ether_addr,uint)
IO80211ThroughputCache::withCapacityAndTimeout(uint,ulong long)
IO80211TrafficMonitor::addTrafficNotification(IO80211TrafficNotification *)
IO80211TrafficMonitor::createTrafficNotification(IO80211TrafficNotificationConfig const&,void (*)(OSObject *,void *,uint,uint,uint))
IO80211TrafficMonitor::free(void)
IO80211TrafficMonitor::initWithParam(IO80211WorkQueue *)
IO80211TrafficMonitor::reportTxPacket(IOSkywalkNetworkPacket *)
IO80211TrafficNotification::checkForWork(void)
IO80211TrafficNotification::free(void)
IO80211TrafficNotification::initWithParams(IO80211TrafficMonitor *,IO80211TrafficNotificationConfig const&,void (*)(OSObject *,void *,uint,uint,uint))
IO80211TrafficNotification::withParams(IO80211TrafficMonitor *,IO80211TrafficNotificationConfig const&,void (*)(OSObject *,void *,uint,uint,uint))
IO80211VirtualInterface::IO80211InterfacePostMessage(uint,void *,ulong)
IO80211VirtualInterface::_outputStartGated(uint)
IO80211VirtualInterface::_outputStartGatedNoPM(uint)
IO80211VirtualInterface::allocFramePool(void)
IO80211VirtualInterface::allocFramePoolMainThread(OSObject *,IOEventSource *)
IO80211VirtualInterface::attachIfnet(ether_addr *,char const*)
IO80211VirtualInterface::attachToBpf(void)
IO80211VirtualInterface::bpfAttach(uint,uint,OSObject *,uint (OSObject::*)(__mbuf *,void *),int (OSObject::*)(uint,uint),IO80211WorkQueue *)
IO80211VirtualInterface::bpfAttachEN10MB(uint)
IO80211VirtualInterface::bpfOutput(uint,__mbuf *)
IO80211VirtualInterface::bpfOutputPacket(__mbuf *,void *)
IO80211VirtualInterface::bpfTap(uint,uint)
IO80211VirtualInterface::bpfTapInput(IO80211Buffer *,uint,void *,ulong)
IO80211VirtualInterface::configureBpfOutputQueues(bool)
IO80211VirtualInterface::configureIfnet(void)
IO80211VirtualInterface::configureReport(IOReportChannelList *,uint,void *,void *)
IO80211VirtualInterface::controllerDidChangePowerState(IO80211Controller *,ulong,uint,IOService *)
IO80211VirtualInterface::controllerWillChangePowerState(IO80211Controller *,ulong,uint,IOService *)
IO80211VirtualInterface::createIOReporters(IOService *)
IO80211VirtualInterface::createPeerManager(ether_addr *,IO80211PeerManager **)
IO80211VirtualInterface::dequeueOutputPacketsWithServiceClass(uint,IOMbufServiceClass,__mbuf **,__mbuf **,uint *,ulong long *)
IO80211VirtualInterface::dequeueTxPackets(TxPacketRequest *)
IO80211VirtualInterface::detachIfnet(void)
IO80211VirtualInterface::dropTxPacket(__mbuf *)
IO80211VirtualInterface::dumpUnentitledProcesses(void)
IO80211VirtualInterface::errnoFromReturn(int)
IO80211VirtualInterface::findOrCreateFlowQueue(IO80211FlowQueueHash)
IO80211VirtualInterface::flushPacketQueues(void)
IO80211VirtualInterface::free(void)
IO80211VirtualInterface::getController(void)
IO80211VirtualInterface::getInterfaceAddress(uchar *)
IO80211VirtualInterface::getName(void)
IO80211VirtualInterface::getWmeTxCounters(ulong long *)
IO80211VirtualInterface::getWorkLoop(void)
IO80211VirtualInterface::getWorkQueue(void)
IO80211VirtualInterface::handleDebugCmd(apple80211_debug_command *)
IO80211VirtualInterface::handleIoctl(ulong,void *)
IO80211VirtualInterface::handleSIOCGIFMEDIA(ulong,ifmediareq *)
IO80211VirtualInterface::handleSIOCSIFADDR(void)
IO80211VirtualInterface::handleSIOCSIFFLAGS(char const*)
IO80211VirtualInterface::ifnet_detach_callback(__ifnet *)
IO80211VirtualInterface::ifnet_ioctl_callback(__ifnet *,ulong,void *)
IO80211VirtualInterface::ifnet_start_callback(__ifnet *)
IO80211VirtualInterface::init(IO80211Controller *,ether_addr *,uint,char const*)
IO80211VirtualInterface::initIfnetEparams(ifnet_init_eparams *)
IO80211VirtualInterface::isOutputFlowControlled(void)
IO80211VirtualInterface::logDebug(char const*,...)
IO80211VirtualInterface::logDebug(ulong long,char const*,...)
IO80211VirtualInterface::logTxPacket(__mbuf *)
IO80211VirtualInterface::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IO80211VirtualInterface::outputPacket(__mbuf *,void *)
IO80211VirtualInterface::outputStart(uint)
IO80211VirtualInterface::p2pDaemonExited(void)
IO80211VirtualInterface::packetSpace(uchar)
IO80211VirtualInterface::peerToPeerAttachToBpf(void)
IO80211VirtualInterface::peerToPeerConfigureIfnet(void)
IO80211VirtualInterface::postMessage(uint,void *,ulong)
IO80211VirtualInterface::postPeerAbsence(ether_addr *)
IO80211VirtualInterface::postPeerPresence(ether_addr *,int,int,int,char *)
IO80211VirtualInterface::postPeerPresenceIPv6(ether_addr *,int,int,int,char *,uchar *)
IO80211VirtualInterface::postSyncStateChanged(void)
IO80211VirtualInterface::powerStateDidChangeToGated(void *,void *,void *,void *,void *)
IO80211VirtualInterface::powerStateWillChangeTo(ulong,ulong,IOService *)
IO80211VirtualInterface::powerStateWillChangeToGated(void *,void *,void *,void *,void *)
IO80211VirtualInterface::preQueuePacket(__mbuf *)
IO80211VirtualInterface::printDataPath(userPrintCtx *)
IO80211VirtualInterface::pushPacket(__mbuf *)
IO80211VirtualInterface::removePacketQueue(IO80211FlowQueueHash const*)
IO80211VirtualInterface::reportDataPathEvents(uint,void *,ulong)
IO80211VirtualInterface::reportDataPathEventsGated(void *,void *,void *,void *,void *)
IO80211VirtualInterface::reportTransmitStatus(__mbuf *,int,packet_info_tx *)
IO80211VirtualInterface::reset(void)
IO80211VirtualInterface::resetUserClientReference(void)
IO80211VirtualInterface::sendToBpfTap(IO80211Buffer *,uint,void *,ulong)
IO80211VirtualInterface::setInterfaceCCA(apple80211_channel,int,apple80211_awdl_sync_channel_sequence *)
IO80211VirtualInterface::setInterfaceExtendedCCA(apple80211_channel,apple80211_cca_report *,apple80211_awdl_sync_channel_sequence *)
IO80211VirtualInterface::setInterfaceRole(uint)
IO80211VirtualInterface::setLinkState(IO80211LinkState,uint)
IO80211VirtualInterface::setScanningState(uint,bool,apple80211_scan_data *,int)
IO80211VirtualInterface::setUnitNumber(char const*)
IO80211VirtualInterface::signalOutputThread(void)
IO80211VirtualInterface::startAsyncEventUserClientForTask(task *,kIO80211InterfaceType)
IO80211VirtualInterface::startOutputQueues(void)
IO80211VirtualInterface::startP2PDaemonUserClientForTask(task *)
IO80211VirtualInterface::stopOutputQueues(void)
IO80211VirtualInterface::storeIoctlInArray(OSArray *,OSNumber *)
IO80211VirtualInterface::stringFromReturn(int)
IO80211VirtualInterface::terminate(uint)
IO80211VirtualInterface::updateLinkParameters(apple80211_interface_availability *)
IO80211VirtualInterface::updateReport(IOReportChannelList *,uint,void *,void *)
IO80211VirtualInterface::willTerminate(IOService *,uint)
IO80211VirtualInterfaceNamer::arrayContainsUnitNumber(OSArray *,OSNumber *)
IO80211VirtualInterfaceNamer::free(void)
IO80211VirtualInterfaceNamer::init(void)
IO80211VirtualInterfaceNamer::markInterfaceUnitUnused(char const*,uint)
IO80211VirtualInterfaceNamer::markInterfaceUnitUsed(char const*,uint)
IO80211VirtualInterfaceNamer::nextAvailableUnitNumberForName(char const*,bool)
IO80211VirtualInterfaceNamerRetain(void)
IO80211WorkQueue::addWorkSource(IO80211WorkSource *)
IO80211WorkQueue::workQueue(void)
IOACIPCBTIDevice::IOACIPCBTIDevice(IOACIPCLogger *)
IOACIPCBTIDevice::deRegisterPipe(IOACIPCBTIPipe *)
IOACIPCBTIDevice::engage(void)
IOACIPCBTIDevice::enterDead(uint,void *,void *)
IOACIPCBTIDevice::generateNonce(void)
IOACIPCBTIDevice::initialize(acipcBTIDeviceParams *)
IOACIPCBTIDevice::linkDown(uint)
IOACIPCBTIDevice::msiInterrupt(uchar)
IOACIPCBTIDevice::registerPipe(IOACIPCBTIPipe *)
IOACIPCBTIDevice::registerPipe(IOACIPCBTIPipe *)
IOACIPCBTIDevice::sendImage(acipcImageIOV *,uint)
IOACIPCBTIDevice::sendImage(ulong long,uint)
IOACIPCBTIDevice::setupDevice(void)
IOACIPCBTIDevice::stateAsString(uint)
IOACIPCBTIDevice::terminate(void)
IOACIPCBTIPipe::IOACIPCBTIPipe(IOACIPCLogger *)
IOACIPCBTIPipe::cancelImage(void)
IOACIPCBTIPipe::generateNonce(acipcNonceCompletionCall *)
IOACIPCBTIPipe::generateNonceCompletion(void)
IOACIPCBTIPipe::initialize(acipcBTIPipeParams *)
IOACIPCBTIPipe::sendImage(acipcImage *)
IOACIPCBTIPipe::sendImage(acipcImageScatterGather *)
IOACIPCBTIPipe::sendImageCompletion(int,uint)
IOACIPCBTIPipe::setupPipe(void)
IOACIPCBTIPipe::teardownPipe(void)
IOACIPCBTIPipe::terminate(void)
IOACIPCBTIPipe::~IOACIPCBTIPipe()
IOACIPCControl::IOACIPCControl(IOACIPCLogger *)
IOACIPCControl::cancelTimer(void)
IOACIPCControl::deRegisterPort(IOACIPCPort *)
IOACIPCControl::deRegisterPort(IOACIPCPort *)
IOACIPCControl::deviceAlive(void)
IOACIPCControl::deviceAwakeCheck(void)
IOACIPCControl::deviceWakeAsync(void)
IOACIPCControl::enterLowPower(bool)
IOACIPCControl::enterLowPower(bool)
IOACIPCControl::exitLowPower(bool,bool)
IOACIPCControl::exitLowPower(bool,bool)
IOACIPCControl::initialize(acipcControlParams *)
IOACIPCControl::initializeDeviceWakeDoorbell(ulong long *)
IOACIPCControl::linkDownCheck(int)
IOACIPCControl::linkDownCheck(int)
IOACIPCControl::linkUpCheck(int,bool)
IOACIPCControl::linkUpCheck(int,bool)
IOACIPCControl::mmioRead(uint volatile*,bool)
IOACIPCControl::mmioReadBar0(uint,bool)
IOACIPCControl::mmioReadBar0(uint,bool)
IOACIPCControl::mmioReadBar1(uint,bool)
IOACIPCControl::mmioReadMemory(uchar volatile*,uchar *,uint,bool)
IOACIPCControl::mmioReadMemory(uchar volatile*,uchar *,uint,bool)
IOACIPCControl::mmioReadMemoryBar0(uint,uchar *,uint,bool)
IOACIPCControl::mmioReadMemoryBar1(uint,uchar *,uint,bool)
IOACIPCControl::mmioReadMemoryBar1(uint,uchar *,uint,bool)
IOACIPCControl::mmioWriteBar0(uint,uint)
IOACIPCControl::mmioWriteBar0(uint,uint)
IOACIPCControl::mmioWriteBar1(uint,uint)
IOACIPCControl::mmioWriteMemory(uint volatile*,uint *,uint)
IOACIPCControl::mmioWriteMemoryBar0(uint,uint *,uint)
IOACIPCControl::mmioWriteMemoryBar0(uint,uint *,uint)
IOACIPCControl::mmioWriteMemoryBar1(uint,uint *,uint)
IOACIPCControl::mmioWriteMemoryBar1(uint,uint *,uint)
IOACIPCControl::msiInterrupt(uchar)
IOACIPCControl::registerPort(IOACIPCPort *)
IOACIPCControl::scan(void)
IOACIPCControl::setChip(IOACIPCChip *)
IOACIPCControl::setChip(IOACIPCChip *)
IOACIPCControl::sleepCheck(int)
IOACIPCControl::startSleepTimer(ulong long,void *)
IOACIPCControl::startTimer(ulong long,uint,void *)
IOACIPCControl::terminate(void)
IOACIPCControl::timer(void *)
IOACIPCControl::timer(void *)
IOACIPCControl::timerCallback(void *,void *)
IOACIPCControl::~IOACIPCControl()
IOACIPCNullDevice::IOACIPCNullDevice(IOACIPCLogger *)
IOACIPCPort::IOACIPCPort(IOACIPCLogger *)
IOACIPCPort::callAsync(uint,void *)
IOACIPCPort::callAsyncCallback(void *,void *)
IOACIPCPort::cancelAsync(uint)
IOACIPCPort::changeState(uint)
IOACIPCPort::checkPortAction(void)
IOACIPCPort::completeCurrentPortAction(void)
IOACIPCPort::createQueues(void)
IOACIPCPort::freeQueues(void)
IOACIPCPort::freeQueues(void)
IOACIPCPort::initialize(acipcPortParams *)
IOACIPCPort::invokeAsync(void *)
IOACIPCPort::lockPort(bool)
IOACIPCPort::manualDisablePort(void)
IOACIPCPort::notifyPortStateChange(int)
IOACIPCPort::portAction(uint)
IOACIPCPort::portActionDone(uint)
IOACIPCPort::portActionDone(uint)
IOACIPCPort::portEnable(bool)
IOACIPCPort::portEnabled(bool)
IOACIPCPort::portSleep(void)
IOACIPCPort::portWake(void)
IOACIPCPort::portWake(void)
IOACIPCPort::processCurrentPortAction(void)
IOACIPCPort::processCurrentPortAction(void)
IOACIPCPort::setupPort(void)
IOACIPCPort::stateAsString(uint)
IOACIPCPort::teardownPort(void)
IOACIPCPort::terminate(void)
IOACIPCPort::~IOACIPCPort()
IOACIPCRTIDevice::IOACIPCRTIDevice(IOACIPCLogger *)
IOACIPCRTIDevice::abortIO(uint,uint,ushort,acipcIO *,bool)
IOACIPCRTIDevice::abortIO(uint,uint,ushort,acipcIO *,bool)
IOACIPCRTIDevice::cancelTimer(void)
IOACIPCRTIDevice::changeSleepState(uint)
IOACIPCRTIDevice::changeState(uint)
IOACIPCRTIDevice::changeToError(void)
IOACIPCRTIDevice::changeToInit(void)
IOACIPCRTIDevice::changeToRecovery(void)
IOACIPCRTIDevice::changeToRunning(void)
IOACIPCRTIDevice::changeToUninit(void)
IOACIPCRTIDevice::closeCompletionRing(uint,acipcRTIRingOpenCompletionCall *)
IOACIPCRTIDevice::collectSnapshot(acipcImage *)
IOACIPCRTIDevice::deRegisterPipe(uint,ushort)
IOACIPCRTIDevice::deleteNotificationMsiCtx(ushort)
IOACIPCRTIDevice::deleteNotificationMsiCtx(ushort)
IOACIPCRTIDevice::deleteSharedMemoryRegion(ushort)
IOACIPCRTIDevice::deleteSharedMemoryRegion(ushort)
IOACIPCRTIDevice::deregisterMSIEventCallback(ushort,void *)
IOACIPCRTIDevice::deregisterMemoryEventCallback(ushort,void *)
IOACIPCRTIDevice::deregisterTimeEventCallback(uint,void *)
IOACIPCRTIDevice::deviceActive(void)
IOACIPCRTIDevice::deviceWakeAsync(void)
IOACIPCRTIDevice::deviceWakeAsync(void)
IOACIPCRTIDevice::doorbellPolicy(acipcRTIDoorbellSetting *,uint,uint)
IOACIPCRTIDevice::engage(void)
IOACIPCRTIDevice::engage(void)
IOACIPCRTIDevice::enterDead(uint,void *,void *)
IOACIPCRTIDevice::enterLowPower(void)
IOACIPCRTIDevice::findNotificationMsiCtx(ushort)
IOACIPCRTIDevice::findSharedMemoryRegion(ushort)
IOACIPCRTIDevice::freeCompleteIOTable(uint,uint)
IOACIPCRTIDevice::freeCompleteIOTable(uint,uint)
IOACIPCRTIDevice::generalizeStatus(uint)
IOACIPCRTIDevice::getCompleteIOCount(uint)
IOACIPCRTIDevice::getCompletionRingsForGroup(uint,uint **,uint *)
IOACIPCRTIDevice::getContinuousCompleteIOTable(uint,uint *)
IOACIPCRTIDevice::getContinuousCompleteIOTable(uint,uint *)
IOACIPCRTIDevice::getDeviceWakeTimeUS(void)
IOACIPCRTIDevice::getTransferRingTailIndex(uint)
IOACIPCRTIDevice::getTransferRingTailIndex(uint)
IOACIPCRTIDevice::groupCheckIn(uint,uint)
IOACIPCRTIDevice::groupCheckOut(uint)
IOACIPCRTIDevice::groupCheckOut(uint)
IOACIPCRTIDevice::hostEnterSleep(void)
IOACIPCRTIDevice::hostEnterSleep(void)
IOACIPCRTIDevice::hostEnterSleepCompletion(void)
IOACIPCRTIDevice::hostExitSleep(void)
IOACIPCRTIDevice::hostExitSleep(void)
IOACIPCRTIDevice::hostExitSleepCompletion(void)
IOACIPCRTIDevice::initCheck(void)
IOACIPCRTIDevice::initPipe(uint)
IOACIPCRTIDevice::initPipe(uint)
IOACIPCRTIDevice::initialize(acipcRTIDeviceParams *)
IOACIPCRTIDevice::initialize(acipcRTIDeviceParams *)
IOACIPCRTIDevice::ioCompletion(uint,uint,uint,ushort,bool,void *,uint,uint,uint,uint,bool *)
IOACIPCRTIDevice::linkDown(uint)
IOACIPCRTIDevice::linkDown(uint)
IOACIPCRTIDevice::linkUp(ulong long,ulong long,uint,uint)
IOACIPCRTIDevice::messageCompletion(void *,uint,uint,bool)
IOACIPCRTIDevice::messageCompletion(void *,uint,uint,bool)
IOACIPCRTIDevice::msiCheckIn(uchar,acipcRTIRingType,uint,uchar)
IOACIPCRTIDevice::msiCheckOut(acipcRTIRingType,uint,uchar)
IOACIPCRTIDevice::msiInterrupt(uchar)
IOACIPCRTIDevice::msiInterrupt(uchar,bool,acipcRTIRingType,uint)
IOACIPCRTIDevice::msiInterrupt(uchar,bool,acipcRTIRingType,uint)
IOACIPCRTIDevice::openCompletionRing(uint,acipcRTIRingOpenCompletionCall *)
IOACIPCRTIDevice::openCompletionRing(uint,acipcRTIRingOpenCompletionCall *)
IOACIPCRTIDevice::printScanHostMems(void)
IOACIPCRTIDevice::printScanHostMems(void)
IOACIPCRTIDevice::processCD(acipcRTICD *,void *,uint,bool *)
IOACIPCRTIDevice::processCD(acipcRTICD *,void *,uint,bool *)
IOACIPCRTIDevice::processCompletionRing(uint,bool *)
IOACIPCRTIDevice::processCompletionRing(uint,bool *)
IOACIPCRTIDevice::processDeviceInfo(void)
IOACIPCRTIDevice::processDoorbellControl(ushort,uint,bool,void *,ulong)
IOACIPCRTIDevice::processExecutionStageChange(uint)
IOACIPCRTIDevice::processMTI(void)
IOACIPCRTIDevice::processMTIInternal(uint,void *,uint,uint)
IOACIPCRTIDevice::processMemoryEvent(ushort,ulong long,void *,ulong)
IOACIPCRTIDevice::processNotificationEvent(ushort)
IOACIPCRTIDevice::processSleepNotification(uint)
IOACIPCRTIDevice::processSleepNotification(uint)
IOACIPCRTIDevice::processTimeEvent(uint,uint,uint,ulong long,void *,ulong)
IOACIPCRTIDevice::publishSharedMemory(acipcRTISharedMemoryParams *)
IOACIPCRTIDevice::queueMessage(ulong long,uint,ushort)
IOACIPCRTIDevice::readBootStage(void)
IOACIPCRTIDevice::registerMSIEventCallback(ushort,acipcRTIMSIEventCall *,void **)
IOACIPCRTIDevice::registerMemoryEventCallback(ushort,acipcRTIMemoryEventCall *,void **)
IOACIPCRTIDevice::registerPipe(uint,IOACIPCRTIPipe *,ushort)
IOACIPCRTIDevice::registerTimeEventCallback(acipcRTITimeEventCall *,void **)
IOACIPCRTIDevice::reinitializeCompletionRing(uint,acipcRTICRParams *)
IOACIPCRTIDevice::reinitializeCompletionRing(uint,acipcRTICRParams *)
IOACIPCRTIDevice::sendMessage(acipcMappedIO *)
IOACIPCRTIDevice::sendMessage(acipcMappedIO *)
IOACIPCRTIDevice::sendMessage(void *,ulong long)
IOACIPCRTIDevice::sendTransfer(uint,uint,ushort,ulong long,acipcRTIPipeDirection,bool)
IOACIPCRTIDevice::sendTransfer(uint,uint,ushort,ulong long,acipcRTIPipeDirection,bool)
IOACIPCRTIDevice::setupCR(void)
IOACIPCRTIDevice::setupDevice(void)
IOACIPCRTIDevice::setupMR(void)
IOACIPCRTIDevice::setupMemory(void)
IOACIPCRTIDevice::setupMemory(void)
IOACIPCRTIDevice::setupMessage(uint,void *,ulong long,void *)
IOACIPCRTIDevice::setupMessage(uint,void *,ulong long,void *)
IOACIPCRTIDevice::shadowDoorbellCheck(void)
IOACIPCRTIDevice::shadowDoorbellFlush(ulong long)
IOACIPCRTIDevice::shadowDoorbellProcess(void)
IOACIPCRTIDevice::shadowDoorbellProcess(void)
IOACIPCRTIDevice::shadowDoorbellRing(ushort,bool)
IOACIPCRTIDevice::shadowDoorbellRing(ushort,bool)
IOACIPCRTIDevice::sharedMemoryNotification(acipcRTISharedMemoryParams *)
IOACIPCRTIDevice::sleepInform(uint,uint,acipcRTIMessageCompletionCall *)
IOACIPCRTIDevice::sleepStateAsString(uint)
IOACIPCRTIDevice::snapshotMessageCompletion(uint,uint)
IOACIPCRTIDevice::snapshotMessageCompletion(uint,uint)
IOACIPCRTIDevice::startTimer(ulong long,uint,bool,void *)
IOACIPCRTIDevice::startTimer(ulong long,uint,bool,void *)
IOACIPCRTIDevice::stateAsString(uint)
IOACIPCRTIDevice::statusFromCode(uint)
IOACIPCRTIDevice::teardownDevice(void)
IOACIPCRTIDevice::terminate(void)
IOACIPCRTIDevice::timer(void *)
IOACIPCRTIDevice::timer(void *)
IOACIPCRTIDevice::timerCallback(void *,void *)
IOACIPCRTIDevice::triggerError(void)
IOACIPCRTIDevice::triggerError(void)
IOACIPCRTIDevice::triggerTrap(acipcTrapCompletionCall *)
IOACIPCRTIDevice::updateCompletionRingTailIndex(uint,uint)
IOACIPCRTIDevice::updateDoorbell(ushort,uint,bool)
IOACIPCRTIDevice::updateSharedMemory(acipcRTISharedMemoryParams *)
IOACIPCRTIDevice::updateSleepControl(uint)
IOACIPCRTIDevice::withdrawSharedMemory(ushort,acipcRTIMessageCompletionCall *)
IOACIPCRTIDevice::~IOACIPCRTIDevice()
IOACIPCRTIIOTable::IOACIPCRTIIOTable(uint)
IOACIPCRTIIOTable::getContFreeTable(uint *)
IOACIPCRTIIOTable::getContOccTable(uint *)
IOACIPCRTIIOTable::getFreeCount(void)
IOACIPCRTIIOTable::getOccCount(void)
IOACIPCRTIIOTable::isFull(void)
IOACIPCRTIIOTable::~IOACIPCRTIIOTable()
IOACIPCRTIIOTableAtomic::IOACIPCRTIIOTableAtomic(uint)
IOACIPCRTIIOTableAtomic::consumeContTable(uint)
IOACIPCRTIIOTableAtomic::freeContTable(uint)
IOACIPCRTIIOTableAtomic::getContFreeTable(uint *)
IOACIPCRTIIOTableAtomic::getContOccTable(uint *)
IOACIPCRTIIOTableAtomic::getFreeCount(void)
IOACIPCRTIIOTableAtomic::getOccCount(void)
IOACIPCRTIPipe::IOACIPCRTIPipe(IOACIPCLogger *)
IOACIPCRTIPipe::abortPipe(acipcRTIMessage *)
IOACIPCRTIPipe::abortPipeComplete(int)
IOACIPCRTIPipe::callAsync(uint,void *)
IOACIPCRTIPipe::callAsyncCallback(void *,void *)
IOACIPCRTIPipe::cancelAsync(uint)
IOACIPCRTIPipe::cancelIO(void)
IOACIPCRTIPipe::cancelIO(void)
IOACIPCRTIPipe::cancelMessage(void)
IOACIPCRTIPipe::checkPendingMessage(void)
IOACIPCRTIPipe::checkPendingMessage(void)
IOACIPCRTIPipe::closePipe(acipcRTIMessage *)
IOACIPCRTIPipe::closePipeComplete(int)
IOACIPCRTIPipe::consumeCompleteIOTable(uint)
IOACIPCRTIPipe::createQueues(void)
IOACIPCRTIPipe::enterError(uint)
IOACIPCRTIPipe::enterErrorCallback(void *,int)
IOACIPCRTIPipe::enterErrorCompletion(int)
IOACIPCRTIPipe::freeCompleteIOTable(uint)
IOACIPCRTIPipe::freeQueues(void)
IOACIPCRTIPipe::freeQueues(void)
IOACIPCRTIPipe::getCompletionCount(void)
IOACIPCRTIPipe::getContinuousCompleteIOTable(uint *)
IOACIPCRTIPipe::getContinuousFreeIOTable(uint *)
IOACIPCRTIPipe::initialize(acipcRTIPipeParams *)
IOACIPCRTIPipe::initialize(acipcRTIPipeParams *)
IOACIPCRTIPipe::invokeAsync(void *)
IOACIPCRTIPipe::ioCompletion(uint,uint,IOACIPCRTIIOTable *,bool *,bool,void *,uint,uint,uint,uint,uint)
IOACIPCRTIPipe::ioCompletionInternal(uint,uint,IOACIPCRTIIOTable *,bool,void *,uint,uint,uint,uint,uint)
IOACIPCRTIPipe::ioCompletionInternal(uint,uint,IOACIPCRTIIOTable *,bool,void *,uint,uint,uint,uint,uint)
IOACIPCRTIPipe::ioTransfer(acipcIO **,uint *)
IOACIPCRTIPipe::ioTransfer(acipcIO **,uint *)
IOACIPCRTIPipe::linkRecovery(void)
IOACIPCRTIPipe::linkRecovery(void)
IOACIPCRTIPipe::messageCompletion(uint,uint)
IOACIPCRTIPipe::messageCompletion(uint,uint)
IOACIPCRTIPipe::msiInterrupt(uint,bool *)
IOACIPCRTIPipe::msiInterrupt(uint,bool *)
IOACIPCRTIPipe::openPipe(acipcRTIMessage *,acipcTransferSignalCall *,acipcCompletionSignalCall *)
IOACIPCRTIPipe::openPipe(acipcRTIMessage *,acipcTransferSignalCall *,acipcCompletionSignalCall *)
IOACIPCRTIPipe::openPipeComplete(int)
IOACIPCRTIPipe::processCurrentMessage(int)
IOACIPCRTIPipe::processCurrentMessage(int)
IOACIPCRTIPipe::queryFreeSlots(void)
IOACIPCRTIPipe::queueMessage(acipcRTIMessage *)
IOACIPCRTIPipe::queueTransfer(acipcIO *,acipcRTITD *,ushort)
IOACIPCRTIPipe::queueTransfer(acipcIO *,acipcRTITD *,ushort)
IOACIPCRTIPipe::reinitialize(acipcRTIPipeParams *)
IOACIPCRTIPipe::reinitialize(acipcRTIPipeParams *)
IOACIPCRTIPipe::sendTransfer(void)
IOACIPCRTIPipe::setupMessage(uint,void *,ulong long)
IOACIPCRTIPipe::setupMessage(uint,void *,ulong long)
IOACIPCRTIPipe::setupPipe(void)
IOACIPCRTIPipe::setupTR(void)
IOACIPCRTIPipe::signalCompletion(bool)
IOACIPCRTIPipe::signalCompletion(bool)
IOACIPCRTIPipe::signalQueueing(void)
IOACIPCRTIPipe::stateAsString(uint)
IOACIPCRTIPipe::teardownPipe(void)
IOACIPCRTIPipe::terminate(void)
IOACIPCRTIPipe::validateMessage(acipcRTIMessage *,int &)
IOACIPCRTIPipe::validateMessage(acipcRTIMessage *,int &)
IOACIPCRTIPipe::~IOACIPCRTIPipe()
IOACIPCTagList::claimTag(ushort)
IOACIPCTagList::consumeTagChain(ushort,ushort)
IOACIPCTagList::consumeTagChain(ushort,ushort)
IOACIPCTagList::freeTagChain(ushort,ushort)
IOACIPCTagList::getFreeTag(ushort *,IOACIPCTagEntry **)
IOACIPCTagList::getFreeTag(ushort *,IOACIPCTagEntry **)
IOACIPCTagList::getTag(IOACIPCTagEntry *)
IOACIPCTagList::initialize(ushort)
IOACIPCTagList::tagWalk(ushort,void ( {block_pointer})(ushort,IOACIPCTagEntry *))
IOAESAccelerator::MetaClass::alloc(void)
IOAESAccelerator::_completeAES(IOAESAcceleratorCommand *)
IOAESAccelerator::_generateSpecialKeys(void)
IOAESAccelerator::_generateSpecialKeys(void)
IOAESAccelerator::_getSpecialKey(uint,IOAESKeyData **)
IOAESAccelerator::_queueLocked(IOAESAcceleratorCommand *)
IOAESAccelerator::_queueLocked(IOAESAcceleratorCommand *)
IOAESAccelerator::_setPropertySHA1(char const*,uchar const*,ulong)
IOAESAccelerator::_startCommand(void)
IOAESAccelerator::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAESAccelerator::completeAESQuantum(IOAESAcceleratorCommand *)
IOAESAccelerator::createSpecialKeys(void)
IOAESAccelerator::dev_ioctl(int,ulong,char *,int,proc *)
IOAESAccelerator::dev_ioctl(ulong,char *,int,proc *)
IOAESAccelerator::dev_open(int,int,int,proc *)
IOAESAccelerator::getWorkLoop(void)
IOAESAccelerator::performAES(IOMemoryDescriptor *,IOMemoryDescriptor *,ulong long,IOAESIV *,IOAESOperation,IOAESKeyData *,ulong long,ulong long,void (*)(void *,int),void *)
IOAESAccelerator::performAES(void *,void *,task *,ulong long,IOAESIV *,IOAESOperation,IOAESKeyData *,void (*)(void *,int),void *)
IOAESAccelerator::performAESQuantum(IOAESAcceleratorCommand *)
IOAESAccelerator::start(IOService *)
IOAESAccelerator::withDevice(int)
IOAESAccelerator::~IOAESAccelerator()
IOAESAcceleratorUserClient::_getInfo(IOAESAcceleratorInfo *)
IOAESAcceleratorUserClient::_internalTest(void)
IOAESAcceleratorUserClient::clientClose(void)
IOAESAcceleratorUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAESAcceleratorUserClient::initWithTask(task *,void *,uint)
IOAESAcceleratorUserClient::start(IOService *)
IOAGPDevice::MetaClass::alloc(void)
IOAGPDevice::commitAGPMemory(IOMemoryDescriptor *,ulong long,uint)
IOAGPDevice::createAGPSpace(uint,ulong long *,ulong long *)
IOAGPDevice::destroyAGPSpace(void)
IOAGPDevice::getAGPRangeAllocator(void)
IOAGPDevice::getAGPSpace(ulong long *,ulong long *)
IOAGPDevice::getAGPStatus(uint)
IOAGPDevice::releaseAGPMemory(IOMemoryDescriptor *,ulong long,uint)
IOAGPDevice::resetAGP(uint)
IOAVAUPPacket::MetaClass::alloc(void)
IOAVAUPPacket::copyData(void)
IOAVAUPPacket::packet(IOAVAUPState const&)
IOAVAUPPacket::serialize(OSSerialize *)
IOAVAUPState::StatusFlags::addStateToDictionary(OSDictionary *)
IOAVAbstractVideoInterface::IOAVAbstractVideoInterface(OSMetaClass const*)
IOAVAbstractVideoInterface::clearLinkColorAttributes(IOAVLinkSource)
IOAVAbstractVideoInterface::clearLinkTimingAttributes(IOAVLinkSource)
IOAVAbstractVideoInterface::copyColorElements(OSObject **)
IOAVAbstractVideoInterface::copyTimingElements(OSObject **)
IOAVAbstractVideoInterface::didStartLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::getColorDynamicRange(IOAVLinkSource)
IOAVAbstractVideoInterface::getColorimetry(IOAVLinkSource)
IOAVAbstractVideoInterface::getDSCBitsPerPixel(IOAVLinkSource)
IOAVAbstractVideoInterface::getDSCParameters(IOAVLinkSource)
IOAVAbstractVideoInterface::getInterlaced(IOAVLinkSource)
IOAVAbstractVideoInterface::getLinkMode(IOAVLinkSource)
IOAVAbstractVideoInterface::getLinkStatus(IOAVLinkSource)
IOAVAbstractVideoInterface::getMatchingColorElement(void)
IOAVAbstractVideoInterface::getMatchingColorElementID(void)
IOAVAbstractVideoInterface::getMatchingTimingElement(void)
IOAVAbstractVideoInterface::getMatchingTimingElementID(void)
IOAVAbstractVideoInterface::getPixelRepetition(IOAVVideoAxis,IOAVLinkSource)
IOAVAbstractVideoInterface::getRequiresDSC(IOAVLinkSource)
IOAVAbstractVideoInterface::getSyncPolarity(IOAVVideoAxis,IOAVLinkSource)
IOAVAbstractVideoInterface::getSyncRate(IOAVVideoAxis,IOAVLinkSource)
IOAVAbstractVideoInterface::handleStart(IOService *)
IOAVAbstractVideoInterface::init(OSDictionary *)
IOAVAbstractVideoInterface::prepareLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::runLinkCommand(uint,IOAVLinkSource)
IOAVAbstractVideoInterface::runLinkCommandInternal(uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setActive(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setBackPorch(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorDepth(uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorDynamicRange(IOAVVideoColorDynamicRange,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorElement(IOAVVideoColorElement const*,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorElement(ulong long,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorElements(OSArray *)
IOAVAbstractVideoInterface::setColorEncoding(IOAVVideoPixelEncoding,IOAVLinkSource)
IOAVAbstractVideoInterface::setColorimetry(IOAVVideoColorimetry,IOAVLinkSource)
IOAVAbstractVideoInterface::setDSCBitsPerPixel(ushort,IOAVLinkSource)
IOAVAbstractVideoInterface::setDSCParameters(IOAVDSCParameters,IOAVLinkSource)
IOAVAbstractVideoInterface::setFrontPorch(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setInterlaced(bool,IOAVLinkSource)
IOAVAbstractVideoInterface::setLinkMode(uchar,IOAVLinkSource)
IOAVAbstractVideoInterface::setPixelRepetition(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setRequiresDSC(bool,IOAVLinkSource)
IOAVAbstractVideoInterface::setScanInformation(IOAVVideoScanInformation,IOAVLinkSource)
IOAVAbstractVideoInterface::setSyncPolarity(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setSyncRate(IOAVVideoAxis,int,IOAVLinkSource)
IOAVAbstractVideoInterface::setSyncWidth(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::setTestMode(IOAVVideoTestMode,IOAVLinkSource)
IOAVAbstractVideoInterface::setTimingElement(IOAVVideoTimingElement const*,IOAVLinkSource)
IOAVAbstractVideoInterface::setTimingElement(ulong long,IOAVLinkSource)
IOAVAbstractVideoInterface::setTimingElements(OSArray *)
IOAVAbstractVideoInterface::setTotal(IOAVVideoAxis,uint,IOAVLinkSource)
IOAVAbstractVideoInterface::startLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::updateLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::withProperties(OSMetaClass const*,OSDictionary *)
IOAVAsyncEventSource::asyncEventSource(OSObject *,void (*)(OSObject *,IOAVAsyncEventSource*),uint)
IOAVAsyncEventSource::cancel(void)
IOAVAsyncEventSource::cancelTimeout(void)
IOAVAsyncEventSource::cleanUpOutstandingEvents(void)
IOAVAsyncEventSource::cleanUpOutstandingEventsGated(void)
IOAVAsyncEventSource::disable(void)
IOAVAsyncEventSource::getAction(void)
IOAVAsyncEventSource::init(OSObject *,void (*)(OSObject *,IOAVAsyncEventSource*),uint)
IOAVAsyncEventSource::onSendingThread(void)
IOAVAsyncEventSource::onSendingThreadGated(void)
IOAVAsyncEventSource::onThread(void)
IOAVAsyncEventSource::sendActionGated(OSObject *)
IOAVAsyncEventSource::setAction(void (*)(OSObject *,...))
IOAVAsyncEventSource::signal(void)
IOAVAsyncEventSource::waitUntilNoActionInProgressGated(bool)
IOAVAudioChannelLayoutElement::copyProperties(void)
IOAVAudioChannelLayoutElement::createChannelLayoutProperty(void)
IOAVAudioChannelLayoutElement::isEqualTo(OSMetaClassBase const*)
IOAVAudioChannelLayoutElement::withChannelAllocation(IOAVAudioChannelAllocation)
IOAVAudioChannelLayoutElement::withSpeakerAllocationMask(uint)
IOAVAudioDMADelegate::MetaClass::alloc(void)
IOAVAudioDMADelegate::completedDMACommand(IOAVDMACommand *)
IOAVAudioDMADelegate::dmaCompleteAction(IOEventSource *,IOAVDMACommand *,int,ulong long,ulong long)
IOAVAudioDMADelegate::flushOutstandingDMACommands(void)
IOAVAudioDMADelegate::free(void)
IOAVAudioDMADelegate::getDMACommandGated(IOAVDMACommand **,bool *)
IOAVAudioDMADelegate::getDataSafetyOffset(IOAVAudioLinkData const*)
IOAVAudioDMADelegate::getInitializedDMACommand(IOAVAudioDMADelegate::DMACommandAttributes *)
IOAVAudioDMADelegate::getOutstandingDMACountGated(uint *)
IOAVAudioDMADelegate::returnDMACommandGated(IOAVDMACommand *)
IOAVAudioDMADelegate::serializeTransferInformation(void *,OSSerialize *)
IOAVAudioDMADelegate::start(IOService *)
IOAVAudioDMADelegate::start(IOService *,IOService *)
IOAVAudioDMADelegate::stop(IOService *)
IOAVAudioDMADelegate::stopDataTransfer(void)
IOAVAudioDMADelegate::stopDataTransferGated(void)
IOAVAudioDMADelegate::transferAudioDataGated(IOAVAudioDMADelegate::DMACommandAttributes *)
IOAVAudioDMADelegate::transferData(IOMemoryDescriptor *,ulong long,ulong long,IOAVDataCompletion *)
IOAVAudioDMADelegate::withExternalAudio(OSObject *,int (*)(OSObject *,IOAVDMACommand *),int (*)(OSObject *))
IOAVAudioDriver::MetaClass::alloc(void)
IOAVAudioDriver::audioLinkDataForStreamFormat(IOAudio2StreamBasicDescription const&,IOAVAudioChannelLayoutElement **)
IOAVAudioDriver::beginStartStopOperation(void)
IOAVAudioDriver::clearOutputBuffer(void)
IOAVAudioDriver::clearOutputBufferRange(uint,uint)
IOAVAudioDriver::compareLPCMAudioElements(IOAVAudioElement const*,IOAVAudioElement const*)
IOAVAudioDriver::completeBuffer(void *,int,ulong long,ulong long)
IOAVAudioDriver::completeBufferGated(void *,int *,ulong long *,ulong long *)
IOAVAudioDriver::controlPropertySelectorForFormat(IOAVAudioFormat)
IOAVAudioDriver::createChannelLayout(IOAVAudioChannelLayoutElement *)
IOAVAudioDriver::createOutputStreamList(OSArray *,IOAudio2StreamBasicDescription *,OSArray *,uint *)
IOAVAudioDriver::createStreamFormat(uint,long long,uint,uint)
IOAVAudioDriver::didTerminate(IOService *,uint,bool *)
IOAVAudioDriver::doIO(bool,uint,uint,uint,uint,uint)
IOAVAudioDriver::formatID(IOAVAudioFormat)
IOAVAudioDriver::formatWithID(uint)
IOAVAudioDriver::free(void)
IOAVAudioDriver::getAudioTransportType(void)
IOAVAudioDriver::getControlByID(uint)
IOAVAudioDriver::getDataLatency(IOAVAudioLinkData const*)
IOAVAudioDriver::getDataSafetyOffset(IOAVAudioLinkData const*)
IOAVAudioDriver::getFormat(uint)
IOAVAudioDriver::getFormatIndex(IOAudio2StreamBasicDescription const*)
IOAVAudioDriver::getIOBufferForStream(uint,uint *,IOMemoryDescriptor **)
IOAVAudioDriver::handleChangeSampleRate(long long *,ulong long)
IOAVAudioDriver::handleChangeSampleRateGated(long long *,ulong long *)
IOAVAudioDriver::handleChangeStreamFormat(uint,IOAudio2StreamBasicDescription *,ulong long)
IOAVAudioDriver::handleChangeStreamFormatGated(uint *,IOAudio2StreamBasicDescription *,ulong long *)
IOAVAudioDriver::handleSetLatencyAdjustment(uint)
IOAVAudioDriver::init(OSDictionary *)
IOAVAudioDriver::initChannelAllocation(IOAVAudioLinkData *)
IOAVAudioDriver::message(uint,IOService *,void *)
IOAVAudioDriver::messageGated(uint *,IOService *,void *)
IOAVAudioDriver::performConfigChange(IOAudio2Notification *)
IOAVAudioDriver::performConfigChangeGated(IOAudio2Notification *)
IOAVAudioDriver::performOutputBufferOperationGated(OSNumber *)
IOAVAudioDriver::playbackDoneOccurred(IOAVAsyncEventSource *)
IOAVAudioDriver::registerService(uint)
IOAVAudioDriver::registerServiceGated(uint *)
IOAVAudioDriver::sendBuffer(uint,bool)
IOAVAudioDriver::setControlValue(uint,uint,uint *)
IOAVAudioDriver::setLogicalFormat(IOAudio2StreamBasicDescription)
IOAVAudioDriver::setProperties(OSObject *)
IOAVAudioDriver::setStreamActive(uint,uint)
IOAVAudioDriver::setStreamActiveGated(uint *,uint *)
IOAVAudioDriver::start(IOService *)
IOAVAudioDriver::startAudio(uint)
IOAVAudioDriver::startDMAInternal(bool)
IOAVAudioDriver::startDefaultAudioStream(void)
IOAVAudioDriver::startIOEngine(void)
IOAVAudioDriver::startIOEngineGated(void)
IOAVAudioDriver::startIOEngineInternal(void)
IOAVAudioDriver::stop(IOService *)
IOAVAudioDriver::stopAudio(uint)
IOAVAudioDriver::stopIOEngineGated(void)
IOAVAudioDriver::stopIOEngineInternal(void)
IOAVAudioDriver::stopPersistentAudio(void)
IOAVAudioDriver::transferData(IOMemoryDescriptor *,ulong long,ulong long,uint)
IOAVAudioDriver::updatePhysicalFormat(void)
IOAVAudioDriver::updatePhysicalFormatIfNeeded(void)
IOAVAudioDriver::~IOAVAudioDriver()
IOAVAudioElement::copyProperties(void)
IOAVAudioElement::free(void)
IOAVAudioElement::isEqualTo(OSMetaClassBase const*,bool)
IOAVAudioElement::isSimilarTo(IOAVAudioElement const*,bool *)
IOAVAudioElement::setChannelLayoutElements(OSArray *)
IOAVAudioElement::withBasicAudio(IOAVAudioFormat,bool,uint)
IOAVAudioElement::withCEAShortData(uchar *,uint)
IOAVAudioElement::withData(IOAVAudioLinkData *,uint,uint,bool)
IOAVAudioElement::withIEC61937Format(IOAVAudioFormat,uint,uint,bool)
IOAVAudioElement::withVirtualAudioFormat(IOAVAudioFormat)
IOAVAudioInterface::IOAVAudioInterface(void)
IOAVAudioInterface::MetaClass::alloc(void)
IOAVAudioInterface::audioTestCompletion(void *,int,ulong long,ulong long)
IOAVAudioInterface::copyChannelLayoutElements(OSObject **)
IOAVAudioInterface::copyEDIDUUID(OSObject **)
IOAVAudioInterface::copyElements(OSObject **)
IOAVAudioInterface::copyProductAttributes(OSObject **)
IOAVAudioInterface::didStartLink(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::free(void)
IOAVAudioInterface::getChannelAllocation(IOAVLinkSource)
IOAVAudioInterface::getDataLatency(IOAVAudioLinkData const*)
IOAVAudioInterface::getDataLatency(IOAVLinkSource)
IOAVAudioInterface::getDataSafetyOffset(IOAVAudioLinkData const*)
IOAVAudioInterface::getDataSafetyOffset(IOAVLinkSource)
IOAVAudioInterface::getLinkData(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::getLinkStatus(IOAVLinkSource)
IOAVAudioInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVAudioInterface::getLocation(void)
IOAVAudioInterface::getProductAttributes(void)
IOAVAudioInterface::getSampleRate(IOAVLinkSource)
IOAVAudioInterface::getTransport(IOAVLinkSource)
IOAVAudioInterface::getUnit(void)
IOAVAudioInterface::handleStart(IOService *)
IOAVAudioInterface::handleStop(IOService *)
IOAVAudioInterface::prepareLink(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::runLinkCommand(uint,IOAVLinkSource)
IOAVAudioInterface::runLinkCommandInternal(uint,IOAVLinkSource)
IOAVAudioInterface::startLink(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::startTestAudioGated(IOAVAudioLinkData *)
IOAVAudioInterface::stopLink(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::stopTestAudioGated(void)
IOAVAudioInterface::stopTransfer(void)
IOAVAudioInterface::transferData(IOMemoryDescriptor *,ulong long,ulong long,IOAVDataCompletion *)
IOAVAudioInterface::willTerminate(IOService *,uint)
IOAVAudioInterface::withProperties(OSDictionary *)
IOAVAudioInterface::~IOAVAudioInterface()
IOAVAudioInterfaceConcreteUserClient::start(IOService *)
IOAVAudioInterfaceUserClient::_copyChannelLayoutElements(IOAVAudioInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVAudioInterfaceUserClient::_copyElements(IOAVAudioInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVAudioInterfaceUserClient::_getLinkData(IOAVAudioInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVAudioInterfaceUserClient::_startLink(IOAVAudioInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVAudioInterfaceUserClient::_stopLink(IOAVAudioInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVAudioInterfaceUserClient::start(IOService *,IOAVAudioInterfaceUserInterface *,IOAVLoggingInterface *)
IOAVAudioLinkDataCopy(IOAVAudioLinkData const*)
IOAVAudioLinkDelegate::init(OSDictionary *)
IOAVAudioLinkDelegate::start(IOService *)
IOAVAudioLinkDelegate::start(IOService *,OSObject *,int (*)(OSObject *,IOAVDMACommand *),int (*)(OSObject *))
IOAVAudioLinkDelegate::stop(IOService *)
IOAVAudioPattern::addCountToBuffer(uchar *,uint)
IOAVAudioPattern::audioStarted(void)
IOAVAudioPattern::audioStopped(void)
IOAVAudioPattern::pattern(OSMetaClass const*,IOAVAudioDriver *)
IOAVAudioPattern::sampleArrived(uchar *,uint)
IOAVAudioPattern::setNewFormat(IOAudio2StreamBasicDescription *)
IOAVAudioPattern::startPattern(uint)
IOAVCECService::cecReceiveCallback(IOAVCECInterface *,IOCECFrame const*)
IOAVCECService::cecReceiveCallbackGated(IOCECFrame const*)
IOAVCECService::closeReceiveQueue(uint)
IOAVCECService::closeReceiveQueueGated(uint *)
IOAVCECService::hpdChangeCallback(IOAVCECInterface *,bool)
IOAVCECService::init(OSDictionary *)
IOAVCECService::openInterface(void)
IOAVCECService::openReceiveQueue(uint,uint)
IOAVCECService::openReceiveQueueGated(uint *,uint *)
IOAVCECService::sendCEC(IOCECFrame const*,uchar)
IOAVCECService::sendCECGated(IOCECFrame const*,uchar *)
IOAVCECService::service(void)
IOAVCECService::setCECInterface(IOAVCECInterface *)
IOAVCECService::setCECInterfaceGated(IOAVCECInterface *)
IOAVCECService::setLogicalAddressMask(ushort)
IOAVCECService::setLogicalAddressMaskGated(ushort *)
IOAVCECService::start(IOService *)
IOAVCECService::stop(IOService *)
IOAVCECService::updatePhysicalAddressCallback(IOAVCECInterface *,ushort)
IOAVCECService::willHibernateGated(void)
IOAVCECService::willTerminate(IOService *,uint)
IOAVCommandGate::attemptAction(int (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
IOAVCommandGate::commandGate(IOService *)
IOAVCommandGate::commandSleepForInterval(uint,uint,uint)
IOAVCommandGate::commandSleepUntilDeadline(ulong long,uint)
IOAVCommandGate::disable(void)
IOAVCommandGate::runAction(int (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
IOAVCommandGate::sendActionGated(OSObject *,IOAVCommandGate::PartialInvocation *)
IOAVCompareAudioLinkData(IOAVAudioLinkData const*,IOAVAudioLinkData const*)
IOAVControlInterfaceUserClient::start(IOService *,IOAVControlInterfaceUserInterface *,IOAVLoggingInterface *)
IOAVController::attach(IOService *)
IOAVController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAVController::createEventLog(void)
IOAVController::matchPropertyTable(OSDictionary *,int *)
IOAVControllerUserClient::_forceHPD(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::_getPower(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::_setPower(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::_setVirtualDeviceMode(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::_sleepDisplay(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::_wakeDisplay(IOAVControllerUserClient*,void *,IOExternalMethodArguments *)
IOAVControllerUserClient::start(IOService *,IOAVControllerUserInterface *,IOAVLoggingInterface *)
IOAVCreateSerializedDataFromObject(OSObject *,OSObject **)
IOAVDMACommand::setCompletion(IOAVDataCompletion *)
IOAVDSCCapabilitiesCopy(IOAVDSCCapabilities const*)
IOAVDeviceConcreteUserClient::start(IOService *)
IOAVDeviceUserClient::_getContentProtectionCapabilities(IOAVDeviceUserClient*,void *,IOExternalMethodArguments *)
IOAVDeviceUserClient::_getLinkData(IOAVDeviceUserClient*,void *,IOExternalMethodArguments *)
IOAVDeviceUserClient::_getProtectionStatus(IOAVDeviceUserClient*,void *,IOExternalMethodArguments *)
IOAVDeviceUserClient::_readBytes(IOAVDeviceUserClient*,void *,IOExternalMethodArguments *)
IOAVDeviceUserClient::_writeBytes(IOAVDeviceUserClient*,void *,IOExternalMethodArguments *)
IOAVDeviceUserClient::start(IOService *,IOAVDeviceUserInterface *,IOAVLoggingInterface *)
IOAVDisplayMemoryConcreteUserClient::start(IOService *)
IOAVDisplayMemoryUserClient::_read(IOAVDisplayMemoryUserClient*,void *,IOExternalMethodArguments *)
IOAVDisplayMemoryUserClient::_write(IOAVDisplayMemoryUserClient*,void *,IOExternalMethodArguments *)
IOAVDisplayMemoryUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAVDisplayMemoryUserClient::start(IOService *,IOAVDisplayMemoryUserInterface *)
IOAVElement::copyProperties(void)
IOAVElement::getScore(void)
IOAVElement::init(void)
IOAVElement::isEqualTo(OSMetaClassBase const*)
IOAVElement::isEqualTo(OSMetaClassBase const*,bool)
IOAVElement::serialize(OSSerialize *)
IOAVElementArray::getGreaterPixelClock(IOAVVideoTimingElement *)
IOAVElementArray::getMatchingAspect(IOAVVideoTimingElement *)
IOAVElementArray::getMatchingDimension(IOAVVideoTimingElement *)
IOAVElementArray::getMatchingITTimingSource(IOAVVideoTimingElement *)
IOAVElementArray::getMatchingRate(IOAVVideoTimingElement *)
IOAVElementArray::withCapacity(uint)
IOAVElementArray::withSet(OSSet const*)
IOAVEventLog::copyEvents(void)
IOAVEventLog::createPropertyList(void)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogAddRemoveChildEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogBasicCommandEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogBasicLinkCommandEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogBasicProtectionCommandEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogEventHeader const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogHotPlugEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogServiceLinkCommandEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogServiceProtectionCommandEvent const*)
IOAVEventLog::createPropertyListForEvent(IOAVEventLogSetPowerCommandEvent const*)
IOAVEventLog::createStringFromReturn(int)
IOAVEventLog::eventLog(OSMetaClass const*,IOService *,char const*,ulong long,ulong long,uint)
IOAVEventLog::flush(void)
IOAVEventLog::free(void)
IOAVEventLog::initWithOwner(IOService *,char const*,ulong long,ulong long,uint)
IOAVEventLog::isCommandInMask(uint)
IOAVEventLog::logAddChild(IOService *,int)
IOAVEventLog::logCommand(int,uint)
IOAVEventLog::logCommand(int,uint,IOAVAUPState const&,IOAVLinkSource)
IOAVEventLog::logCommand(int,uint,IOAVAudioLinkData const*,IOAVLinkSource)
IOAVEventLog::logCommand(int,uint,IOAVLinkData const*)
IOAVEventLog::logCommand(int,uint,IOAVLinkData const*,IOAVLinkSource)
IOAVEventLog::logCommand(int,uint,IOAVProtectionStatus)
IOAVEventLog::logCommand(int,uint,IOAVVideoLinkData const*,IOAVLinkSource)
IOAVEventLog::logEvent(IOAVEventLogEventHeader *,uint)
IOAVEventLog::logHotPlug(bool,bool)
IOAVEventLog::logRemoveChild(IOService *,int)
IOAVEventLog::logSetPower(int,bool,IOAVEventLogSetPowerCommandReason)
IOAVEventLog::serialize(OSSerialize *)
IOAVEventLog::setMaxCapacity(uint)
IOAVGetDeviceName(IORegistryEntry const*)
IOAVGetDolbyVSIF(IOAVVideoLinkData const*)
IOAVGetDynamicRangeAndMasteringInfoFrame(IOAVInfoFrame *,uchar,IOAVVideoLinkData const*,OSDictionary const*)
IOAVGetHDMIVSIF(IOAVVideoLinkData const*,bool)
IOAVHandler::IOAVEvent(IOAVHandler::IOAVEventType,IOService *)
IOAVHandler::IOAVEvent_async(void *,void *,void *)
IOAVHandler::IOAVEvent_async_gated(void *,void *)
IOAVHandler::free(void)
IOAVHandler::init(IOService *,IOAVLocation)
IOAVHandler::linkShutdown_gated(void)
IOAVHandler::unlink_gated(void)
IOAVHandlerInternalDisplay::MetaClass::MetaClass(void)
IOAVHandlerInternalDisplay::MetaClass::alloc(void)
IOAVHandlerInternalDisplay::init(IOService *,IOAVLocation)
IOAVHandlerInternalDisplay::init(IOService *,int (*)(void *,IOAVHandler::IOAVEventType),void *)
IOAVHandlerInternalDisplay::isVFPModulationSupported_gated(void)
IOAVHandlerInternalDisplay::plugEvent_async_gated(IOAVVideoInterface *)
IOAVHandlerInternalDisplay::setVerticalFrontPorchForVRR_gated(uint)
IOAVHandlerInternalDisplay::unplugEvent_async_gated(IOAVVideoInterface *)
IOAVHandlerInternalDisplay::~IOAVHandlerInternalDisplay()
IOAVIISAudioDMAEventSource::audioDMAEventSource(OSObject *,void (*)(OSObject *,IOAVIISAudioDMAEventSource*,IODMACommand *,int,ulong long,ulong long),uint)
IOAVIISAudioDMAEventSource::checkForWork(void)
IOAVIISAudioDMAEventSource::completeDMACommand(IODMACommand *,int,ulong long,ulong long)
IOAVIISAudioDMAEventSource::free(void)
IOAVIISAudioDMAEventSource::init(OSObject *,void (*)(OSObject *,IOAVIISAudioDMAEventSource*,IODMACommand *,int,ulong long,ulong long),uint)
IOAVInterface::IOAVInterface(OSMetaClass const*)
IOAVInterface::attach(IOService *)
IOAVInterface::close(IOService *,uint)
IOAVInterface::closeGated(IOService *,uint *)
IOAVInterface::didTerminate(IOService *,uint,bool *)
IOAVInterface::free(void)
IOAVInterface::handleClose(IOService *,uint)
IOAVInterface::handleOpen(IOService *,uint,void *)
IOAVInterface::init(OSDictionary *)
IOAVInterface::mergeProperties(OSDictionary *)
IOAVInterface::message(uint,IOService *,void *)
IOAVInterface::open(IOService *,uint,void *)
IOAVInterface::openGated(IOService *,uint *,void *)
IOAVInterface::start(IOService *)
IOAVInterface::stop(IOService *)
IOAVLinkDataCopy(IOAVLinkData const*)
IOAVLocationMatching(IOAVLocation,OSDictionary *)
IOAVMatchPropertyTable(IOService *,OSDictionary *,int *)
IOAVObjectsEqual(OSObject const*,OSObject const*)
IOAVPHandleMatching(OSData *,OSDictionary *)
IOAVParentMatching(OSData *,OSDictionary *)
IOAVParentMatching(OSDictionary *,OSDictionary *)
IOAVRegisterSet::copyData(void)
IOAVRegisterSet::free(void)
IOAVRegisterSet::init(char const*,IOAVRegisterSetType,ulong long,ulong long,ulong long,uint,OSObject *,int (*)(OSObject *,IOAVRegisterSet const*,IOAVRegisterSet::Range const*,void *,void *),void *)
IOAVRegisterSet::registerSet(char const*,IOAVRegisterSetType,ulong long,ulong long,ulong long,uint,OSObject *,int (*)(OSObject *,IOAVRegisterSet const*,IOAVRegisterSet::Range const*,void *,void *),void *)
IOAVRegisterSet::serialize(OSSerialize *)
IOAVRegistryEntrySetNameWithFormat(IORegistryEntry *,char const*,...)
IOAVSerialize(OSSerialize *,bool)
IOAVSerialize(OSSerialize *,char const*)
IOAVSerialize(OSSerialize *,ulong long,uint)
IOAVSerializer::forTarget(IOService *,bool (*)(void *,void *,OSSerialize *),void *)
IOAVSerializer::free(void)
IOAVSerializer::serialize(OSSerialize *)
IOAVSerializer::serializeGated(OSSerialize *)
IOAVService::DisplayIDParser::Delegate::parserDidParseContainerIDDataBlock(DisplayID::Section const*,DisplayID::Block const*,DisplayID::UUID const&)
IOAVService::DisplayIDParser::Delegate::parserDidParseProductIdentificationDataBlock(DisplayID::Section const*,DisplayID::Block const*,DisplayID::ProductID const*)
IOAVService::DisplayIDParser::Delegate::parserDidParseTiledDisplayTopologyDataBlock(DisplayID::Section const*,DisplayID::Block const*,DisplayID::TiledDisplay const*)
IOAVService::DisplayIDParser::Delegate::parserDidParseTiming(DisplayID::Section const*,DisplayID::Block const*,DisplayID::Timing const*,void const*,ulong)
IOAVService::DisplayIDParser::Delegate::parserDidParseTimingCode(DisplayID::Section const*,DisplayID::Block const*,ushort,DisplayID::Timing::CodeType)
IOAVService::DisplayIDParser::Delegate::parserDidParseTimingFormula(DisplayID::Section const*,DisplayID::Block const*,ushort,ushort,ushort,bool,bool,DisplayID::Timing::Formula)
IOAVService::DisplayIDParser::Delegate::parserDidParseVendorSpecificAppleSDPType1DataBlock(DisplayID::Section const*,DisplayID::Block const*,int,int,int,int,int,int)
IOAVService::DisplayIDParser::Delegate::parserDidParseVendorSpecificDataBlock(DisplayID::Section const*,DisplayID::Block const*,DisplayID::VendorID)
IOAVService::DisplayIDParser::Delegate::parserDidReadBlock(DisplayID::Section const*,DisplayID::Block const*)
IOAVService::DisplayIDParser::Delegate::parserDidReadSection(DisplayID::Section *,uchar,bool)
IOAVService::DisplayIDParser::Delegate::parserShouldRereadSection(ushort,uint)
IOAVService::DisplayIDParser::Delegate::parserWillFixBlockLength(DisplayID::Section const*,DisplayID::Block const*,uchar)
IOAVService::DisplayIDParser::Delegate::parserWillFixSectionLength(DisplayID::Section const*,uchar)
IOAVService::DisplayIDParser::parseDisplayID(_EDIDDisplayID *)
IOAVService::DisplayIDParser::parseDisplayID(_EDIDDisplayID *)::DataSource::read(ushort,void *,ulong)
IOAVService::DisplayIDParser::readDisplayID(IOAVService::DisplayIDParser::DisplayCapabilitiesSource)
IOAVService::DisplayIDParser::readDisplayID(IOAVService::DisplayIDParser::DisplayCapabilitiesSource)::DataSource::read(ushort,void *,ulong)
IOAVService::DisplayIDParser::~DisplayIDParser()
IOAVService::IOAVService(void)
IOAVService::MetaClass::alloc(void)
IOAVService::addElement(IOAVElement *)
IOAVService::addElements(OSArray *)
IOAVService::addInterface(IOAVInterface *)
IOAVService::addInterfaceGated(IOAVInterface *)
IOAVService::addInterfaces(void)
IOAVService::addInterfacesGated(void)
IOAVService::addRegisterSet(char const*,IOAVRegisterSetType,ulong long,ulong long,ulong long,uint,OSObject *,int (*)(OSObject *,IOAVRegisterSet const*,IOAVRegisterSet::Range const*,void *,void *),void *)
IOAVService::addWhitePoint(uchar,IOAVVideoColorPoint,bool)
IOAVService::clearEventLog(void)
IOAVService::colorModeSupportsDSC(IOAVVideoPixelEncoding,IOAVVideoColorBitDepthType,IOAVLinkSource)
IOAVService::completeLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::containsElement(IOAVElement *)
IOAVService::copyEDID(OSData **)
IOAVService::copyEDIDBlock(uint,OSData **)
IOAVService::copyEDIDBlockInternal(uint,OSData **)
IOAVService::copyFilteredAudioElements(OSArray const*)
IOAVService::copyFilteredVideoColorElements(OSArray const*)
IOAVService::copyFilteredVideoTimingElements(OSArray const*)
IOAVService::copyInterface(char const*)
IOAVService::copyInterfaceGated(char const*,IOAVInterface **)
IOAVService::copyLinkQualityProperties(void)
IOAVService::copyPhysicalAddress(OSObject **)
IOAVService::createAUPPacket(OSData *)
IOAVService::createEDIDColorAttributes(IOAVVideoColorPoint)
IOAVService::createEDIDString(_EDIDString *)
IOAVService::createLinkSourceSupportProperty(IOAVLinkType)
IOAVService::createLinkSourceSupportProperty(void)
IOAVService::createTransportProperty(void)
IOAVService::createVideoInterfaceWithProperties(OSDictionary *)
IOAVService::didStartLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::didTerminate(IOService *,uint,bool *)
IOAVService::enableWorkarounds(OSArray *)
IOAVService::enumerateAudioChannelLayoutElements(void)
IOAVService::enumerateBasicAudioElements(IOAVTransport,bool)
IOAVService::enumerateBasicColorElements(IOAVTransport,bool)
IOAVService::enumerateBasicTimingElements(IOAVTransport,bool)
IOAVService::enumerateColorElements(IOAVStandardType,uint,uint,uint,uint,uchar)
IOAVService::enumerateColorElements(void)
IOAVService::enumerateDolbyVisionColorElements(void)
IOAVService::enumerateElements(void)
IOAVService::filterElements(void)
IOAVService::finalizeProductAttributes(void)
IOAVService::free(void)
IOAVService::getAUPState(void)
IOAVService::getDSCCapabilities(IOAVLinkSource)
IOAVService::getDataLatency(IOAVLinkData *)
IOAVService::getDataSafetyOffset(IOAVLinkData *)
IOAVService::getDefaultContentProtection(void)
IOAVService::getDisplayAsleep(bool *)
IOAVService::getDisplaySplitCapability(void)
IOAVService::getHDCPAuthenticatedContentType(void)
IOAVService::getHDCPContentTypeCapability(void)
IOAVService::getInfoFrame(IOAVInfoFrame *,IOAVLinkSource)
IOAVService::getIsProtectionRepeater(void)
IOAVService::getLinkData(IOAVLinkType,IOAVLinkData *,IOAVLinkSource)
IOAVService::getLinkQuality(void)
IOAVService::getLinkQualityGated(IOAVLinkQuality *)
IOAVService::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVService::getLinkStatusMask(IOAVLinkSource)
IOAVService::getLocation(void)
IOAVService::getOutputLinkData(IOAVLinkType,IOAVLinkData *,IOAVLinkData *)
IOAVService::getPower(bool *)
IOAVService::getProtectionStatus(IOAVProtectionStatus *)
IOAVService::getSinkSupportsHDMIScramblingAtAllRates(void)
IOAVService::getSupportsCEC(void)
IOAVService::getTransport(IOAVLinkSource)
IOAVService::getTransport(IOAVLinkSource,uint *)
IOAVService::getUnit(void)
IOAVService::handleAddInterfaces(void)
IOAVService::handleCPOverridesChanged(void)
IOAVService::handleClose(IOService *,uint)
IOAVService::handleCompleteLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::handleContentTypeCapabilityChanged(void)
IOAVService::handleDidStartLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::handleGetContentProtectionCapabilities(void)
IOAVService::handleIsOpen(IOService const*)
IOAVService::handleOpen(IOService *,uint,void *)
IOAVService::handlePrepareLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::handleProtectLinkGated(void)
IOAVService::handleProtectionFailure(void)
IOAVService::handleProtectionIntegrityFailure(void)
IOAVService::handleRemoveInterfaces(void)
IOAVService::handleSerializeProtectionAUP(void *,OSSerialize *)
IOAVService::handleSleepDisplay(void)
IOAVService::handleStartLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::handleStopLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::handleUnprotectLinkGated(void)
IOAVService::handleWakeDisplay(void)
IOAVService::handleWillStopLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::hdcp2HPrimeAvailable(void)
IOAVService::hdcp2PairingInfoAvailable(void)
IOAVService::hdcp2ReceiverIDListAvailable(void)
IOAVService::hdcpReauthenticationRequest(IOAVHDCPReauthRequestReason)
IOAVService::hdmiCharacterErrorDetectionReset(void)
IOAVService::hdmiCharacterErrorDetectionUpdate(IOAVService::HDMICharacterErrorCounts)
IOAVService::hdmiCharacterErrorInjectionOccurred(IOAVAsyncEventSource *)
IOAVService::hdmiCharacterErrorRateThresholdExceeded(uint,ulong long)
IOAVService::hdmiLinkStatusErrorMonitorOccurred(IOEventSource *)
IOAVService::init(OSDictionary *)
IOAVService::initAUPPacketGated(IOAVAUPPacket *)
IOAVService::linkQualityMetricsReset(ulong long)
IOAVService::message(uint,IOService *,void *)
IOAVService::messageGated(uint *,IOService *,void *)
IOAVService::overrideEDIDCEA3VendorSpecific(void)
IOAVService::powerOffOccurred(IOEventSource *)
IOAVService::prepareLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::prepareLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::probeSinkSupportsSCDC(void)
IOAVService::processAudioElements(void)
IOAVService::processEDID(OSData *)
IOAVService::processEDID(_EDID *)
IOAVService::processEDID(void)
IOAVService::processEDIDCEA(_EDIDCEA *)
IOAVService::processEDIDCEA3Audio(_EDIDCEA3DataBlockAudio *,uint)
IOAVService::processEDIDCEA3ColorimetryDB(_EDIDCEA3DataBlockExtended *,uint)
IOAVService::processEDIDCEA3DolbyVSADB(_EDIDCEA3DataBlockVSAVDB *,uint)
IOAVService::processEDIDCEA3DolbyVSVDB(_EDIDCEA3DataBlockVSAVDB *,uint)
IOAVService::processEDIDCEA3Extended(_EDIDCEA3DataBlockExtended *,uint)
IOAVService::processEDIDCEA3H14bVSDB(_EDIDCEA3H14bVSDB *,uint)
IOAVService::processEDIDCEA3HDRStaticMetadataDB(_EDIDCEA3DataBlockExtended *,uint)
IOAVService::processEDIDCEA3HFVSDB(_EDIDCEA3HFVSDB *,uint)
IOAVService::processEDIDCEA3SpeakerAllocation(_EDIDCEA3DataBlockSpeakerAllocation *,uint)
IOAVService::processEDIDCEA3VSVDB(_EDIDCEA3DataBlockVSAVDB *,uint)
IOAVService::processEDIDCEA3VendorSpecific(_EDIDCEA3DataBlockVendorSpecific *,uint)
IOAVService::processEDIDCEA3Video(_EDIDCEA3DataBlockVideo *,uint,bool)
IOAVService::processEDIDCVTTimings(uchar *,uint)
IOAVService::processEDIDDIEXTDigitalInterface(_EDIDDIEXTDigitalInterface *)
IOAVService::processEDIDDetailed(EDIDDetailed *,IOAVStandardType,bool)
IOAVService::processEDIDDetailedColorPoint(_EDIDDetailedColorPoint *)
IOAVService::processEDIDDetailedDescriptor(_EDIDDetailedDescriptor *)
IOAVService::processEDIDDetailedEstablishedTimingsIII(_EDIDDetailedEstablishedTimingsIII *)
IOAVService::processEDIDStandard(_EDIDStandard *)
IOAVService::processEDIDStandardAspectRatio(_EDIDStandard *)
IOAVService::processEDIDStandardColor(_EDIDStandard *)
IOAVService::processEDIDStandardEstablishedTimings(_EDIDStandard *)
IOAVService::processEDIDStandardFeature(_EDIDStandard *)
IOAVService::processEDIDStandardTimings(uchar *,uint)
IOAVService::processEDIDVTB(_EDIDVTB *)
IOAVService::processElements(void)
IOAVService::processTimingElement(IOAVElementArray *,IOAVVideoTimingElement *)
IOAVService::processTimingElements(void)
IOAVService::protectLinkGated(void)
IOAVService::protectionOccurred(IOEventSource *)
IOAVService::readI2C(uint,uint,uchar *)
IOAVService::readI2C(uint,uint,uchar *,uint)
IOAVService::readI2CGated(uint *,uint *,uchar *,uint *)
IOAVService::readI2CRegisterSet(IOAVRegisterSet const*,IOAVRegisterSet::Range const*,void *,void *)
IOAVService::removeEDID(void)
IOAVService::removeEDIDProperties(void)
IOAVService::removeElements(void)
IOAVService::removeFilteredElements(void)
IOAVService::removeInterface(IOAVInterface *)
IOAVService::removeInterfaceGated(IOAVInterface *)
IOAVService::removeInterfacesGated(void)
IOAVService::reprotectLinkGated(void)
IOAVService::restartInterfaces(IOAVService::RestartInterfacesReason)
IOAVService::restartInterfacesGated(IOAVService::RestartInterfacesReason *)
IOAVService::restartInterfacesOccurred(IOAVAsyncEventSource *)
IOAVService::serializeAllElements(void *,OSSerialize *)
IOAVService::serializeAudioProperties(void *,OSSerialize *)
IOAVService::serializeColorDitherRemoval(void *,OSSerialize *)
IOAVService::serializeDSCCapabilities(void *,OSSerialize *)
IOAVService::serializeDisplayIDProductAttributes(void *,OSSerialize *)
IOAVService::serializeDownstreamTransport(void *,OSSerialize *)
IOAVService::serializeEDIDProductAttributes(void *,OSSerialize *)
IOAVService::serializeHDMICharacterErrorCounts(void *,OSSerialize *)
IOAVService::serializeHDMILinkStatusErrorMonitorState(void *,OSSerialize *)
IOAVService::serializeHDMILinkStatusMonitoringEnabled(void *,OSSerialize *)
IOAVService::serializeHDMIScramblingEnabled(void *,OSSerialize *)
IOAVService::serializeHDRStaticMetadata(void *,OSSerialize *)
IOAVService::serializeInfoFrames(void *,OSSerialize *)
IOAVService::serializeLink(void *,OSSerialize *)
IOAVService::serializeLinkQuality(void *,OSSerialize *)
IOAVService::serializeProtectionAUP(void *,OSSerialize *)
IOAVService::serializeProtectionOptions(void *,OSSerialize *)
IOAVService::serializeProtectionStatus(void *,OSSerialize *)
IOAVService::serializeProtectionType(void *,OSSerialize *)
IOAVService::serializeRestartInterfacesReason(void *,OSSerialize *)
IOAVService::serializeRotation(void *,OSSerialize *)
IOAVService::serializeSCDCTransactionsEnabled(void *,OSSerialize *)
IOAVService::serializeVideoProperties(void *,OSSerialize *)
IOAVService::setContentProtectionSupportEnabled(bool)
IOAVService::setDisplayChromaticity(char const*,IOAVVideoColorPoint,IOAVVideoColorPoint,IOAVVideoColorPoint)
IOAVService::setEventLogCommandMask(ulong long)
IOAVService::setEventLogEventMask(ulong long)
IOAVService::setEventLogMaxCapacity(uint)
IOAVService::setHDRStaticMetadataGated(OSDictionary const*)
IOAVService::setInterfaceProperty(char const*,OSObject *)
IOAVService::setInterfaceProperty(char const*,char const*)
IOAVService::setInterfaceProperty(char const*,void *,uint)
IOAVService::setManufacturerIDProperty(char const*,bool)
IOAVService::setPhysicalAddress(ushort)
IOAVService::setPower(bool)
IOAVService::setVirtualEDIDMode(bool,OSData *)
IOAVService::setupContentProtection(IOAVCPConfiguration,OSMetaClass const*)
IOAVService::shouldUseDisplaySplit(void)
IOAVService::shutdownContentProtection(void)
IOAVService::sinkMatches(char const*,ushort)
IOAVService::sleepDisplayGated(void)
IOAVService::sortElements(void)
IOAVService::start(IOService *)
IOAVService::startInfoFrame(IOAVInfoFrame *,IOAVLinkSource)
IOAVService::startLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::stop(IOService *)
IOAVService::stopDataTransfer(IOAVLinkType)
IOAVService::stopInfoFrame(IOAVInfoFrame *,IOAVLinkSource)
IOAVService::stopLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::transferData(IOAVLinkType,IOMemoryDescriptor *,ulong long,ulong long,IOAVDataCompletion *)
IOAVService::unprotectLinkGated(void)
IOAVService::updateCPConfiguration(void)
IOAVService::validateAudioElements(void)
IOAVService::validateColorFormatConversion(IOAVVideoColorData const*,IOAVVideoColorData const*)
IOAVService::validateElements(void)
IOAVService::validateLink(IOAVLinkData *,IOAVLinkSource,bool)
IOAVService::validateTimingElements(void)
IOAVService::validateVideoMode(IOAVVideoTimingElement const*,IOAVVideoColorElement const*,bool *,bool *,IOAVLinkSource)
IOAVService::videoLinkConsideredSafe(IOAVVideoLinkData const*)
IOAVService::vsyncCallback(IOAVDevice *,void *)
IOAVService::wakeDisplayGated(void)
IOAVService::willStopLinkGated(IOAVLinkData *,IOAVLinkSource *,uint *)
IOAVService::willTerminate(IOService *,uint)
IOAVService::writeI2C(uint,uint,uchar)
IOAVService::writeI2CGated(uint *,uint *,uchar *,uint *)
IOAVService::~IOAVService()
IOAVServiceUserClient::_copyEDID(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_copyPhysicalAddress(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_getChosenContentProtection(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_getContentProtectionCapabilities(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_getHDCPAuthenticatedContentType(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_getLinkData(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_getProtectionStatus(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_readI2C(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_setContentProtectionCapabilities(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_setContentProtectionPolicyOptions(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_setContentProtectionSupportEnabled(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_setHDRStaticMetadata(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_setVirtualEDID(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_startInfoFrame(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_startLink(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_stopInfoFrame(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_stopLink(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::_writeI2C(IOAVServiceUserClient*,void *,IOExternalMethodArguments *)
IOAVServiceUserClient::start(IOService *,IOAVServiceUserInterface *,IOAVLoggingInterface *)
IOAVShouldRedactSensitiveData(void)
IOAVSimpleVideoInterface::IOAVSimpleVideoInterface(void)
IOAVSimpleVideoInterface::MetaClass::alloc(void)
IOAVSimpleVideoInterface::createAUPPacket(OSData *)
IOAVSimpleVideoInterface::getBounds(IOAVVideoBoundsRect *)
IOAVSimpleVideoInterface::getBoundsSupport(void)
IOAVSimpleVideoInterface::getColorDitherRemoval(void)
IOAVSimpleVideoInterface::getColorDitherRemovalSupport(void)
IOAVSimpleVideoInterface::getDSCCapabilities(IOAVLinkSource)
IOAVSimpleVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::getLinkQuality(void)
IOAVSimpleVideoInterface::getLinkSourceSupport(IOAVLinkSource)
IOAVSimpleVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSimpleVideoInterface::getLocation(void)
IOAVSimpleVideoInterface::getRotation(void)
IOAVSimpleVideoInterface::getRotationIncrement(void)
IOAVSimpleVideoInterface::getRotationMax(void)
IOAVSimpleVideoInterface::getRotationMin(void)
IOAVSimpleVideoInterface::getTileLocation(void)
IOAVSimpleVideoInterface::getTiledDisplayInfo(void)
IOAVSimpleVideoInterface::getTransport(IOAVLinkSource)
IOAVSimpleVideoInterface::getUnit(void)
IOAVSimpleVideoInterface::getUpdateLinkSupport(IOAVLinkSource)
IOAVSimpleVideoInterface::handleCompleteLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handleDidStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handlePrepareLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handleStart(IOService *)
IOAVSimpleVideoInterface::handleStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handleStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handleUpdateLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::handleWillStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::setBounds(IOAVVideoBoundsRect)
IOAVSimpleVideoInterface::setColorDitherRemoval(bool)
IOAVSimpleVideoInterface::setHDRStaticMetadata(OSDictionary const*)
IOAVSimpleVideoInterface::setRotation(int)
IOAVSimpleVideoInterface::setScreenVirtualTemperature(int)
IOAVSimpleVideoInterface::~IOAVSimpleVideoInterface()
IOAVSliceVideoInterface::IOAVSliceVideoInterface(void)
IOAVSliceVideoInterface::MetaClass::alloc(void)
IOAVSliceVideoInterface::createAUPPacket(OSData *)
IOAVSliceVideoInterface::getDisplaySplitCapability(void)
IOAVSliceVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::getLinkQuality(void)
IOAVSliceVideoInterface::getLinkSourceSupport(IOAVLinkSource)
IOAVSliceVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSliceVideoInterface::getLocation(void)
IOAVSliceVideoInterface::getTileLocation(void)
IOAVSliceVideoInterface::getTiledDisplayInfo(void)
IOAVSliceVideoInterface::getTransport(IOAVLinkSource)
IOAVSliceVideoInterface::getUnit(void)
IOAVSliceVideoInterface::handleCompleteLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::handleDidStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::handlePrepareLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::handleStart(IOService *)
IOAVSliceVideoInterface::handleStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::handleStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::handleWillStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::setHDRStaticMetadata(OSDictionary const*)
IOAVSliceVideoInterface::setScreenVirtualTemperature(int)
IOAVSliceVideoInterface::~IOAVSliceVideoInterface()
IOAVSplitDisplay::MetaClass::alloc(void)
IOAVSplitDisplay::addSplitDisplayFormats(OSDictionary *)
IOAVSplitDisplay::commandAllSlices(uint,uint)
IOAVSplitDisplay::commandSingleSlice(uint,uint)
IOAVSplitDisplay::completeLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::createAUPPacket(OSData *)
IOAVSplitDisplay::didStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::didTerminate(IOService *,uint,bool *)
IOAVSplitDisplay::free(void)
IOAVSplitDisplay::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSplitDisplay::getLinkQuality(void)
IOAVSplitDisplay::getLinkSourceSupport(IOAVLinkSource)
IOAVSplitDisplay::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSplitDisplay::getLocation(void)
IOAVSplitDisplay::getTiledDisplayInfo(void)
IOAVSplitDisplay::getTransport(IOAVLinkSource)
IOAVSplitDisplay::handleClose(IOService *,uint)
IOAVSplitDisplay::handleOpen(IOService *,uint,void *)
IOAVSplitDisplay::handleSlicePublished(IOAVSliceVideoInterface *)
IOAVSplitDisplay::handleSlicePublishedGated(IOAVSliceVideoInterface *)
IOAVSplitDisplay::handleSliceTerminatedGated(IOAVSliceVideoInterface *)
IOAVSplitDisplay::prepareLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::probe(IOService *,int *)
IOAVSplitDisplay::publishClientInterface(void)
IOAVSplitDisplay::setHDRStaticMetadata(OSDictionary const*)
IOAVSplitDisplay::setScreenVirtualTemperature(int)
IOAVSplitDisplay::slicePublishedNotification(void *,IOService *,IONotifier *)
IOAVSplitDisplay::sliceTerminatedNotification(void *,IOService *,IONotifier *)
IOAVSplitDisplay::start(IOService *)
IOAVSplitDisplay::startLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::stop(IOService *)
IOAVSplitDisplay::stopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::terminateClientInterface(void)
IOAVSplitDisplay::willStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplay::~IOAVSplitDisplay()
IOAVSplitDisplayVideoInterface::createAUPPacket(OSData *)
IOAVSplitDisplayVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::getLinkQuality(void)
IOAVSplitDisplayVideoInterface::getLinkSourceSupport(IOAVLinkSource)
IOAVSplitDisplayVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::getLocation(void)
IOAVSplitDisplayVideoInterface::getTiledDisplayInfo(void)
IOAVSplitDisplayVideoInterface::getTransport(IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handleCompleteLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handleDidStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handlePrepareLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handleStartLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handleStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::handleWillStopLink(IOAVLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::setHDRStaticMetadata(OSDictionary const*)
IOAVSplitDisplayVideoInterface::setScreenVirtualTemperature(int)
IOAVTransferToArray(OSArray *,OSObject *)
IOAVTransferToArray(OSArray *,char const*)
IOAVTransferToArray(OSArray *,ulong long,uint)
IOAVTransferToArray(OSArray *,void *,ulong)
IOAVTransferToDictionary(OSDictionary *,char const*,OSObject *)
IOAVTransferToDictionary(OSDictionary *,char const*,bool)
IOAVTransferToDictionary(OSDictionary *,char const*,char const*)
IOAVTransferToDictionary(OSDictionary *,char const*,ulong long,uint)
IOAVTransferToDictionary(OSDictionary *,char const*,void const*,ulong)
IOAVUserClient::clearEventLog(void)
IOAVUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAVUserClient::externalMethodGated(IOAVUserClient::MethodArgs *)
IOAVUserClient::free(void)
IOAVUserClient::setEventLogCommandMask(ulong long)
IOAVUserClient::setEventLogEventMask(ulong long)
IOAVUserClient::setEventLogMaxCapacity(uint)
IOAVUserClient::setLogLevel(uint)
IOAVUserClient::setLogLevelMask(uint,uint)
IOAVUserClient::start(IOService *,IOExternalMethodDispatch const*,uint,IOAVLoggingInterface *)
IOAVUserClient::stop(IOService *)
IOAVVSDBElement::copyProperties(void)
IOAVVSDBElement::free(void)
IOAVVSDBElement::isEqualTo(OSMetaClassBase const*,bool)
IOAVVSDBElement::withPayload(IOAVVendorID,uchar,uchar,uchar *,ulong)
IOAVValueSet::getMember(OSMetaClassBase const*)
IOAVValueSet::member(OSMetaClassBase const*)
IOAVVideoActiveFormatAspectRatio(uint,uint)
IOAVVideoColorElement::copyProperties(void)
IOAVVideoColorElement::free(void)
IOAVVideoColorElement::initWithData(IOAVVideoColorData const*,IOAVStandardType,OSDictionary const*,OSDictionary const*,OSDictionary const*,OSSet const*)
IOAVVideoColorElement::isEqualTo(OSMetaClassBase const*,bool)
IOAVVideoColorElement::isSimilarTo(IOAVVideoColorElement const*,bool *)
IOAVVideoColorElement::setDownstreamFormat(IOAVVideoColorElement*)
IOAVVideoColorElement::withCapabilities(IOAVStandardType,uint,IOAVVideoPixelEncoding,IOAVVideoColorDynamicRange,IOAVVideoColorEOTF,IOAVVideoColorimetry,bool,OSDictionary const*,OSDictionary const*,OSDictionary const*,OSSet const*)
IOAVVideoColorElement::withData(IOAVVideoColorData const*,IOAVStandardType,OSDictionary const*,OSDictionary const*,OSDictionary const*,OSSet const*)
IOAVVideoInterface::IOAVVideoInterface(OSMetaClass const*)
IOAVVideoInterface::createAUPPacketAsync(int (*)(OSObject *,OSData *,void *),OSObject *,void *,OSData *)
IOAVVideoInterface::createAUPPacketAsyncGated(void *,OSObject *,void *,OSData *)
IOAVVideoInterface::createAUPPacketAsyncOccurred(IOAVAsyncEventSource *)
IOAVVideoInterface::createAUPPacketAsyncOccurred(IOAVAsyncEventSource *)
IOAVVideoInterface::free(void)
IOAVVideoInterface::getFrontPorch(IOAVVideoAxis,IOAVLinkSource)
IOAVVideoInterface::getSyncPolarity(IOAVVideoAxis,IOAVLinkSource)
IOAVVideoInterface::getSyncRate(IOAVVideoAxis,IOAVLinkSource)
IOAVVideoInterface::handleStart(IOService *)
IOAVVideoInterface::handleStop(IOService *)
IOAVVideoInterfaceUserClient::_copyColorElements(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_copyDisplayAttributes(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_copyTimingElements(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_getLinkData(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_setBounds(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_setColorDitherRemoval(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_setRotation(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_setScreenVirtualTemperature(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_startLinkWithModes(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_startLinkWithSource(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_stopLink(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::_stopLinkWithSource(IOAVVideoInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOAVVideoInterfaceUserClient::start(IOService *,IOAVVideoInterfaceUserInterface *,IOAVLoggingInterface *)
IOAVVideoLinkDataCopy(IOAVVideoLinkData const*)
IOAVVideoTimingAxisCopy(IOAVVideoTimingData const*,IOAVVideoAxis)
IOAVVideoTimingElement::copyElement(IOAVVideoTimingElement const*)
IOAVVideoTimingElement::copyProperties(void)
IOAVVideoTimingElement::free(void)
IOAVVideoTimingElement::getInterlaced(void)
IOAVVideoTimingElement::getIsCEVideoFormat(void)
IOAVVideoTimingElement::getIsVideoOptimized(void)
IOAVVideoTimingElement::getPreciseAspectRatio(void)
IOAVVideoTimingElement::getRequiresDSC(IOAVVideoColorElement const*)
IOAVVideoTimingElement::getSyncRateRounded(IOAVVideoAxis)
IOAVVideoTimingElement::getTotalPixelClock(void)
IOAVVideoTimingElement::getYCbCr420Capable(void)
IOAVVideoTimingElement::getYCbCr420Only(void)
IOAVVideoTimingElement::init(IOAVVideoTimingType,IOAVStandardType,IOAVVideoTimingStandard)
IOAVVideoTimingElement::initAspectRatio(void)
IOAVVideoTimingElement::initWithCEAShortID(uint,bool)
IOAVVideoTimingElement::initWithData(IOAVVideoTimingData const*,IOAVStandardType,IOAVVideoTimingStandard)
IOAVVideoTimingElement::initWithDetailedTiming(_EDIDDetailedTiming *,IOAVStandardType)
IOAVVideoTimingElement::initWithDimensions(uint,uint,int,IOAVVideoTimingType,IOAVVideoTimingStandard,IOAVVideoBlankingStyle)
IOAVVideoTimingElement::initWithElement(IOAVVideoTimingElement const*)
IOAVVideoTimingElement::initWithElementReplacingHorizontalTimingAxis(IOAVVideoTimingElement const*,IOAVVideoTimingAxis const*,uint)
IOAVVideoTimingElement::isEqualTo(OSMetaClassBase const*,bool)
IOAVVideoTimingElement::isSimilarTo(IOAVVideoTimingElement const*,bool *)
IOAVVideoTimingElement::mergeSimilarElement(IOAVVideoTimingElement const*,bool)
IOAVVideoTimingElement::pruneColorElementIDs(OSArray const*,OSArray const*,void (IOAVVideoTimingElement::*)(OSArray*))
IOAVVideoTimingElement::pruneSimilarColorElements(IOAVVideoTimingElement const*)
IOAVVideoTimingElement::setColorElements(OSArray *)
IOAVVideoTimingElement::setDSCRequiredColorElementIDs(OSArray *)
IOAVVideoTimingElement::setDownstreamFormat(IOAVVideoTimingElement*)
IOAVVideoTimingElement::setIsPreferred(bool)
IOAVVideoTimingElement::setIsPromoted(bool)
IOAVVideoTimingElement::setRequiresDisplaySplit(bool)
IOAVVideoTimingElement::setScanInformation(IOAVVideoScanInformation)
IOAVVideoTimingElement::setScoreOffsetMask(uint)
IOAVVideoTimingElement::setUnsafeColorElementIDs(OSArray *)
IOAVVideoTimingElement::setValidPixelEncoding(IOAVVideoPixelEncoding,bool)
IOAVVideoTimingElement::setValidPixelEncodings(uint)
IOAVVideoTimingElement::withCEAShortID(uint,bool)
IOAVVideoTimingElement::withCVTTimingID(_EDIDCVT *)
IOAVVideoTimingElement::withData(IOAVVideoTimingData const*,IOAVStandardType,IOAVVideoTimingStandard)
IOAVVideoTimingElement::withDetailedTiming(_EDIDDetailedTiming *,IOAVStandardType)
IOAVVideoTimingElement::withDimensions(uint,uint,int,IOAVVideoTimingType,IOAVVideoTimingStandard,IOAVVideoBlankingStyle)
IOAVVideoTimingElement::withElementReplacingHorizontalTimingAxis(IOAVVideoTimingElement const*,IOAVVideoTimingAxis const*,uint)
IOAVVideoTimingElement::withEstablishedTimingID(uchar,IOAVVideoTimingFormula)
IOAVVideoTimingElement::withEstablishedTimingIIIID(uchar,IOAVVideoTimingFormula)
IOAVVideoTimingElement::withStandardTimingID(ushort,IOAVVideoTimingFormula)
IOAVWAVRecorder::addTimeHeader(void)
IOAVWAVRecorder::addWAVDataHeader(void)
IOAVWAVRecorder::addWAVFormatHeader(void)
IOAVWAVRecorder::addWAVSample(uchar *,uint)
IOAVWAVRecorder::audioStarted(void)
IOAVWAVRecorder::audioStopped(void)
IOAVWAVRecorder::endWAVBlock(void)
IOAVWAVRecorder::finalizeTimeHeader(void)
IOAVWAVRecorder::finalizeWAVBuffer(void)
IOAVWAVRecorder::finalizeWAVDataHeader(void)
IOAVWAVRecorder::free(void)
IOAVWAVRecorder::initWithOwner(IOAVAudioDriver *,uint)
IOAVWAVRecorder::initializeWAVBuffer(void)
IOAVWAVRecorder::recorder(OSMetaClass const*,IOAVAudioDriver *,uint)
IOAVWAVRecorder::sampleArrived(uchar *,uint)
IOAVWAVRecorder::saveWAVBuffer(uchar *,uint,uint,uint)
IOAVWAVRecorder::sendWAVBuffersToFile(void)
IOAVWAVRecorder::setNewFormat(IOAudio2StreamBasicDescription *)
IOAVWAVRecorder::startRecording(void)
IOAVWAVRecorder::startWAVBlock(void)
IOAVWAVRecorder::stopRecording(void)
IOAVWAVRecorder::writeToBuffer(void const*,ulong)
IOAccelGPURestartReport::newUserClient(task *,void *,uint,IOUserClient **)
IOAcceleratorKDCallback(void *,kd_callback_type,void *)
IOAccessoryAuthProtocolInterface::receiveData(void const*,ulong long)
IOAccessoryAuthProtocolInterface::start(IOService *)
IOAccessoryAuthProtocolInterface::transmitData(IOMemoryDescriptor *,uint)
IOAccessoryBulkDataEndpoint::getEndpointID(void)
IOAccessoryBulkDataEndpoint::matchPropertyTable(OSDictionary *,int *)
IOAccessoryConfigStreamInterface::_categoryIndexForID(ushort)
IOAccessoryConfigStreamInterface::_checkForInitialProperties(void)
IOAccessoryConfigStreamInterface::_handleAutoRetrieveCategory(ushort)
IOAccessoryConfigStreamInterface::_printHexData(void const*,ulong long,void ( {block_pointer})(char *))
IOAccessoryConfigStreamInterface::_propertyIDForIndex(ushort,ushort,uchar *)
IOAccessoryConfigStreamInterface::_propertyIndexForID(ushort,uchar)
IOAccessoryConfigStreamInterface::_publishConfigInfo(void)
IOAccessoryConfigStreamInterface::_publishDevInfoData(void)
IOAccessoryConfigStreamInterface::_publishMFiDevInfoData(void)
IOAccessoryConfigStreamInterface::_receiveDataMsg(uchar,ulong long,void const*,int)
IOAccessoryConfigStreamInterface::_receiveMessage(void *,void *,uint,IOService *,void *,ulong)
IOAccessoryConfigStreamInterface::_requestPropertyDataIfRequired(ushort,uchar,bool,bool)
IOAccessoryConfigStreamInterface::_sendCommand(uchar,ulong long,void const*)
IOAccessoryConfigStreamInterface::_setManagerProperty(char const*,char const*)
IOAccessoryConfigStreamInterface::_setStringPropertyWithData(char const*,uchar const*,ulong long)
IOAccessoryConfigStreamInterface::_unpublishDevInfoData(void)
IOAccessoryConfigStreamInterface::_unpublishMFiDevInfoData(void)
IOAccessoryConfigStreamInterface::free(void)
IOAccessoryConfigStreamInterface::message(uint,IOService *,void *)
IOAccessoryConfigStreamInterface::receiveData(void const*,ulong long)
IOAccessoryConfigStreamInterface::requestGetPropertyData(ushort,uchar)
IOAccessoryConfigStreamInterface::setPropertyData(ushort,uchar,uchar const*,ulong long)
IOAccessoryConfigStreamInterface::start(IOService *)
IOAccessoryConfigStreamInterface::stop(IOService *)
IOAccessoryConfigStreamInterface::willTerminate(IOService *,uint)
IOAccessoryConfigStreamUserClient::extRequestGetProperty(IOAccessoryConfigStreamInterface *,void *,IOExternalMethodArguments *)
IOAccessoryConfigStreamUserClient::extSetProperty(IOAccessoryConfigStreamInterface *,void *,IOExternalMethodArguments *)
IOAccessoryConfigStreamUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryDock0PinBuiltin::handleAccessoryDetect(bool *,IOAccResistorID *,bool,bool)
IOAccessoryDock0PinBuiltin::messageClients(uint,void *,ulong)
IOAccessoryDock0PinBuiltin::setConnectedState(bool,IOAccResistorID)
IOAccessoryDock0PinBuiltin::start(IOService *)
IOAccessoryDock30Pin::getPowerModeCurrentLimit(IOAccessoryPowerMode)
IOAccessoryDock30Pin::getPowerModeVoltage(IOAccessoryPowerMode,uint *,uint *)
IOAccessoryDock30Pin::getTransportAvailable(IOAccessoryTransportType)
IOAccessoryDock30Pin::handleAccessoryDetect(bool *,IOAccResistorID *,bool,bool)
IOAccessoryDock30Pin::handleAccessoryUSBMode(void)
IOAccessoryDock30PinBuiltIn::MetaClass::alloc(void)
IOAccessoryDock30PinBuiltIn::free(void)
IOAccessoryDock30PinBuiltIn::getPrimaryPortID(void)
IOAccessoryDock30PinBuiltIn::interruptAction(IOInterruptEventSource *,int)
IOAccessoryDock30PinBuiltIn::readCurrentAccessory(IOAccResistorID *,bool *)
IOAccessoryDock30PinBuiltIn::setAccessoryPower(bool,bool,bool,bool,bool)
IOAccessoryDock30PinBuiltIn::start(IOService *)
IOAccessoryDock30PinBuiltIn::~IOAccessoryDock30PinBuiltIn()
IOAccessoryDock9Pin::_runVoltageDetectStateMachineGated(IOAccessoryDock9Pin*,uint *)
IOAccessoryDock9Pin::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAccessoryDock9Pin::challengeCrypto(ulong long,uchar const*,ulong long,uchar *,ulong long,ulong long *)
IOAccessoryDock9Pin::checkFreePinPair(bool *,IOAccessoryDock9Pin::DPDNConfig)
IOAccessoryDock9Pin::checkOverrideMbAccLowVoltage(IOAccessoryPowerMode,uchar const*)
IOAccessoryDock9Pin::checkOverrideMbAccLowVoltageSel(IOAccGoldbondBehavior,uint)
IOAccessoryDock9Pin::checkOverrideMbIdBusAssert(IOAccGoldbondBehavior)
IOAccessoryDock9Pin::checkPinVoltage(IOAccPinID,IOAccMeasID,uint *)
IOAccessoryDock9Pin::checkReservedDigitalID(uchar const*,IOAccessoryDock9Pin::hasMask *)
IOAccessoryDock9Pin::configureDPDNConfigOverride(IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig)
IOAccessoryDock9Pin::configureDPDNConfigOverride(IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig,IOAccessoryDock9Pin::DPDNConfig)
IOAccessoryDock9Pin::configureDPDNConfigOverrideGated(IOAccessoryDock9Pin::DPDNConfig const*)
IOAccessoryDock9Pin::configureGoldbondMode(IOAccGoldbondModeMask,IOAccGoldbondModeMask)
IOAccessoryDock9Pin::configureGoldbondModeGated(IOAccGoldbondModeMask,IOAccGoldbondModeMask)
IOAccessoryDock9Pin::createVoltageDetectEventReport(ulong long,uchar,uchar *,uchar *,ushort *)
IOAccessoryDock9Pin::free(void)
IOAccessoryDock9Pin::getACCxConfig(IOAccessoryDock9Pin::ACCxConfig *,IOAccessoryDock9Pin::ACCxConfig *)
IOAccessoryDock9Pin::getACCxConfig(uchar const*,IOAccessoryDock9Pin::ACCxConfig *,IOAccessoryDock9Pin::ACCxConfig *)
IOAccessoryDock9Pin::getAccessoryAttached(void)
IOAccessoryDock9Pin::getDPDNConfig(IOAccessoryDock9Pin::DPDNConfig *,IOAccessoryDock9Pin::DPDNConfig *)
IOAccessoryDock9Pin::getDPDNConfig(uchar const*,IOAccessoryDock9Pin::DPDNConfig *,IOAccessoryDock9Pin::DPDNConfig *)
IOAccessoryDock9Pin::getFreePinMask(uint *)
IOAccessoryDock9Pin::getLdcmParams(IOAccLdcmParams *)
IOAccessoryDock9Pin::getMagicPullDownState(void)
IOAccessoryDock9Pin::getOrientationConfig(void)
IOAccessoryDock9Pin::getPowerHandshakeState(void)
IOAccessoryDock9Pin::getPowerModeCurrentLimit(IOAccessoryPowerMode)
IOAccessoryDock9Pin::getPowerModeVoltage(IOAccessoryPowerMode,uint *,uint *)
IOAccessoryDock9Pin::getSerialTransportConfig(void)
IOAccessoryDock9Pin::getSleepPowerEnabled(void)
IOAccessoryDock9Pin::getTransportAvailable(IOAccessoryTransportType)
IOAccessoryDock9Pin::getTransportEnabled(IOAccessoryTransportType)
IOAccessoryDock9Pin::getVBUSDownstream(void)
IOAccessoryDock9Pin::goldbondDisablePort(void)
IOAccessoryDock9Pin::goldbondEnablePort(void)
IOAccessoryDock9Pin::handleAccessoryDetect(bool *,IOAccResistorID *,bool,bool)
IOAccessoryDock9Pin::handleAccessoryPowerDidChange(IOAccessoryPowerMode)
IOAccessoryDock9Pin::handleAccessoryPowerWillChange(IOAccessoryPowerMode)
IOAccessoryDock9Pin::handleAccessoryUSBMode(void)
IOAccessoryDock9Pin::handleBrickWARGated(void)
IOAccessoryDock9Pin::handleDetectChange(bool)
IOAccessoryDock9Pin::handleDigitalID(uchar const*)
IOAccessoryDock9Pin::handleIDBusCommand(void (*)(void *,int),ulong long,IOAccessoryIDBusTransport *,bool,bool)
IOAccessoryDock9Pin::handleIDBusCommandForMagicPullDown(void (*)(void *,int),ulong long,IOAccessoryIDBusTransport *)
IOAccessoryDock9Pin::handleIDBusResponse(IOAccessoryManagerAID::IDBusState)
IOAccessoryDock9Pin::handleSleepWakeNotification(uint)
IOAccessoryDock9Pin::handleSleepWakeNotificationIdBusOverride(uint)
IOAccessoryDock9Pin::handleUSBPowerChange(bool)
IOAccessoryDock9Pin::isDebugCableConnected(bool *)
IOAccessoryDock9Pin::isDockWithCcConnected(bool *)
IOAccessoryDock9Pin::notifyPowerSourceChange(void)
IOAccessoryDock9Pin::requestLdcmMeasurement(uint)
IOAccessoryDock9Pin::runAllowedFeaturesAvailableTimedOutGated(void)
IOAccessoryDock9Pin::runGoldbondStateMachineGated(void)
IOAccessoryDock9Pin::runMikeyBusHeadsetTimeoutGated(void)
IOAccessoryDock9Pin::runVoltageDetectStateMachineGated(void)
IOAccessoryDock9Pin::selectEisPin(bool,IOAccPinID,uint *)
IOAccessoryDock9Pin::selectPinsForVoltageDetectGated(bool *,bool *)
IOAccessoryDock9Pin::setCurrentLimitMode(bool)
IOAccessoryDock9Pin::setGoldbond(bool)
IOAccessoryDock9Pin::setGoldbondBehavior(IOAccGoldbondBehavior,IOAccAccessoryBehaviorMask,uint)
IOAccessoryDock9Pin::setGoldbondGated(bool)
IOAccessoryDock9Pin::setMagicPullDownState(IOAccessoryDock9Pin::MagicPullDownState)
IOAccessoryDock9Pin::setOrientationConfig(IOAccessoryDock9Pin::OrientationConfig)
IOAccessoryDock9Pin::setPowerHandshakeState(IOAccessoryDock9Pin::PowerHandshakeState)
IOAccessoryDock9Pin::setProperties(OSObject *)
IOAccessoryDock9Pin::setVoltageDetected(bool)
IOAccessoryDock9Pin::setVoltageDetectedGated(bool)
IOAccessoryDock9Pin::shouldOverridePowerHandshake(uchar const*)
IOAccessoryDock9Pin::start(IOService *)
IOAccessoryDock9Pin::updateGoldbondOverrideCounts(void)
IOAccessoryDock9Pin::updateMBGoldbondLifetimeCounter(void)
IOAccessoryDockUSB_UFP::MetaClass::alloc(void)
IOAccessoryDockUSB_UFP::free(void)
IOAccessoryDockUSB_UFP::start(IOService *)
IOAccessoryDockUSB_UFP::~IOAccessoryDockUSB_UFP()
IOAccessoryEAInterface::_setManagerProperty(char const*,char const*)
IOAccessoryEAInterface::copyProperty(char const*)
IOAccessoryEAInterface::handleClose(IOService *,uint)
IOAccessoryEAInterface::handleOpen(IOService *,uint,void *)
IOAccessoryEAInterface::receiveData(void const*,ulong long)
IOAccessoryEAInterface::start(IOService *)
IOAccessoryEAInterfaceUserClient::_receiveData(IOAccessoryEAInterface *,void const*,ulong long)
IOAccessoryEAInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryEAInterfaceUserClient::free(void)
IOAccessoryEAInterfaceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAccessoryEAInterfaceUserClient::start(IOService *)
IOAccessoryHIDDeviceEndpoint::_getReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryHIDDeviceEndpoint::_receiveDataMsg(uchar,ulong long,void const*,int)
IOAccessoryHIDDeviceEndpoint::_sendCommand(uchar,ulong long,void const*)
IOAccessoryHIDDeviceEndpoint::_setReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryHIDDeviceEndpoint::free(void)
IOAccessoryHIDDeviceEndpoint::getEndpointID(void)
IOAccessoryHIDDeviceEndpoint::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryHIDDeviceEndpoint::handleStart(IOService *)
IOAccessoryHIDDeviceEndpoint::handleStop(IOService *)
IOAccessoryHIDDeviceEndpoint::initWithEndpointID(uchar)
IOAccessoryHIDDeviceEndpoint::newCountryCodeNumber(void)
IOAccessoryHIDDeviceEndpoint::newLocationIDNumber(void)
IOAccessoryHIDDeviceEndpoint::newManufacturerString(void)
IOAccessoryHIDDeviceEndpoint::newReportDescriptor(IOMemoryDescriptor **)
IOAccessoryHIDDeviceEndpoint::newTransportString(void)
IOAccessoryHIDDeviceEndpoint::newVendorIDNumber(void)
IOAccessoryHIDDeviceEndpoint::newVersionNumber(void)
IOAccessoryHIDDeviceEndpoint::setProperty(OSSymbol const*,OSObject *)
IOAccessoryHIDDeviceEndpoint::willTerminate(IOService *,uint)
IOAccessoryHIDDeviceInterface::_getHIDDescriptor(uchar,ushort,ushort)
IOAccessoryHIDDeviceInterface::_handleCreateEndpoint(uchar)
IOAccessoryHIDDeviceInterface::_handleDescriptorResponseForEndpoint(uchar,void const*,ulong long)
IOAccessoryHIDDeviceInterface::_handleGetEndpointDescriptor(uchar)
IOAccessoryHIDDeviceInterface::_handleStartGated(void)
IOAccessoryHIDDeviceInterface::_hidResponseErrorToIOReturn(IOAccessoryInductiveHIDResponseErrorCode)
IOAccessoryHIDDeviceInterface::_receiveDataMsg(uchar,ulong long,void const*,int)
IOAccessoryHIDDeviceInterface::_sendCommand(uchar,ulong long,void const*)
IOAccessoryHIDDeviceInterface::findEndpoint(uchar)
IOAccessoryHIDDeviceInterface::free(void)
IOAccessoryHIDDeviceInterface::handleStartThreadCall(void *,void *)
IOAccessoryHIDDeviceInterface::newLocationIDNumber(void)
IOAccessoryHIDDeviceInterface::newManufacturerString(void)
IOAccessoryHIDDeviceInterface::newTransportString(void)
IOAccessoryHIDDeviceInterface::newVersionNumber(void)
IOAccessoryHIDDeviceInterface::sendData(void const*,ulong long)
IOAccessoryHIDDeviceInterface::start(IOService *)
IOAccessoryHIDDeviceInterface::stop(IOService *)
IOAccessoryHIDDeviceInterface::willTerminate(IOService *,uint)
IOAccessoryHIDDeviceUserClient::clientClose(void)
IOAccessoryHIDDeviceUserClient::extInjectIncomingData(IOAccessoryHIDDeviceInterface *,void *,IOExternalMethodArguments *)
IOAccessoryHIDDeviceUserClient::extInjectOutgoingData(IOAccessoryHIDDeviceInterface *,void *,IOExternalMethodArguments *)
IOAccessoryHIDDeviceUserClient::extInjectOutgoingGetHIDReport(IOAccessoryHIDDeviceInterface *,void *,IOExternalMethodArguments *)
IOAccessoryHIDDeviceUserClient::extInjectOutgoingSetHIDReport(IOAccessoryHIDDeviceInterface *,void *,IOExternalMethodArguments *)
IOAccessoryHIDDeviceUserClient::free(void)
IOAccessoryHIDDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAccessoryHIDDeviceUserClient::start(IOService *)
IOAccessoryHIDDeviceUserClient::willTerminate(IOService *,uint)
IOAccessoryHSAIDBulkData::_detachFromIDBus(void)
IOAccessoryHSAIDBulkData::_finishStartGated(IOService *)
IOAccessoryHSAIDBulkData::_setPowerStateGated(ulong)
IOAccessoryHSAIDBulkData::_startIDBusInfoInternal(void)
IOAccessoryHSAIDBulkData::_startTransfer(OSData *)
IOAccessoryHSAIDBulkData::eventHandler(IOAccessoryHSAIDBusTransport::HSAIDEvent,void const*,uint)
IOAccessoryHSAIDBulkData::free(void)
IOAccessoryHSAIDBulkData::getFunctionForEndpointID(uchar)
IOAccessoryHSAIDBulkData::handleCommandResponse(void const*,uint)
IOAccessoryHSAIDBulkData::handleErrorResponse(void const*,uint)
IOAccessoryHSAIDBulkData::handleIdentifyResponse(void const*,uint)
IOAccessoryHSAIDBulkData::handleReadResponse(void const*,uint)
IOAccessoryHSAIDBulkData::handleResetResponse(void)
IOAccessoryHSAIDBulkData::handleStart(void)
IOAccessoryHSAIDBulkData::message(uint,IOService *,void *)
IOAccessoryHSAIDBulkData::probe(IOService *,int *)
IOAccessoryHSAIDBulkData::responseThread(void *,int)
IOAccessoryHSAIDBulkData::start(IOService *)
IOAccessoryHSAIDBulkData::startTransfer(uchar,uchar,ulong long,void const*,ulong long,uint,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryHSAIDBulkData::stop(IOService *)
IOAccessoryHSAIDBulkData::transferCompletion(void *,int)
IOAccessoryHSAIDBulkDataEndpoint::_logBulkDataInfo(void)
IOAccessoryHSAIDBulkDataEndpoint::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryHSAIDBulkDataEndpoint::free(void)
IOAccessoryHSAIDBulkDataEndpoint::registerReadResponseAction(void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryHSAIDBulkDataEndpoint::start(IOService *)
IOAccessoryHSAIDBulkDataEndpoint::startTransfer(uchar,ulong long,void const*,ulong long,uint,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryHSAIDBulkDataEndpoint::stop(IOService *)
IOAccessoryHSAIDBusTransport::cancelTransmitInternal(void)
IOAccessoryHSAIDBusTransport::closeOpenClients(void)
IOAccessoryHSAIDBusTransport::disable(void)
IOAccessoryHSAIDBusTransport::enable(ushort,uchar,ushort)
IOAccessoryHSAIDBusTransport::exitBusError(void)
IOAccessoryHSAIDBusTransport::freeClient(IOAccessoryHSAIDBusTransport::Client *)
IOAccessoryHSAIDBusTransport::generateACK(void)
IOAccessoryHSAIDBusTransport::handleClose(IOService *,uint)
IOAccessoryHSAIDBusTransport::handleIsOpen(IOService const*)
IOAccessoryHSAIDBusTransport::init(void)
IOAccessoryHSAIDBusTransport::linkStateTransferCompletion(void *,int)
IOAccessoryHSAIDBusTransport::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOAccessoryHSAIDBusTransport::outputCommand(void const*,uint,IOAccessoryHSAIDBusTransport::Completion *)
IOAccessoryHSAIDBusTransport::processSinglePacketCommand(HSAIDTransmitCommand *,void const*,uint)
IOAccessoryHSAIDBusTransport::receiveData(void const*,uint)
IOAccessoryHSAIDBusTransport::receiveLongFormPacket(void const*,uint,uint *)
IOAccessoryHSAIDBusTransport::receivePacketForInterest(HSAIDReceivePacket *,IOAccessoryHSAIDBusTransport::EventInterestFlags)
IOAccessoryHSAIDBusTransport::receivedACK(uchar)
IOAccessoryHSAIDBusTransport::retransmitPendingPacket(void)
IOAccessoryHSAIDBusTransport::returnPendingPacketsToPools(void)
IOAccessoryHSAIDBusTransport::returnTransmitCommand(HSAIDTransmitCommand *,int)
IOAccessoryHSAIDBusTransport::sendHSAIDBreakInternal(void)
IOAccessoryHSAIDBusTransport::setBusErrorState(IOAccessoryHSAIDBusTransport::BusErrorReason)
IOAccessoryHSAIDBusTransport::setPowerState(ulong,IOService *)
IOAccessoryHSAIDBusTransport::sniffCompletedPacket(void)
IOAccessoryHSAIDBusTransport::sniffReceivedPacket(void const*,uint,uint)
IOAccessoryHSAIDBusTransport::start(IOService *)
IOAccessoryHSAIDBusTransport::startTransmitInternal(void const*,uint,IOAccessoryHSAIDBusTransport::HSAIDFrameType)
IOAccessoryHSAIDBusTransport::stop(IOService *)
IOAccessoryHSAIDBusTransport::suspendTimeout(void)
IOAccessoryHSAIDBusTransport::transmitACK(void)
IOAccessoryHSAIDBusTransport::transmitNextPacket(bool)
IOAccessoryHSAIDBusTransport::updatePendingTransmitPacket(void)
IOAccessoryHSAIDBusTransport::validateAndUpdateReceivedSequenceNumber(HSAIDReceivePacket *)
IOAccessoryHSAIDBusTransport::verboseLog(char const*,...)
IOAccessoryIDBusBulkData::MetaClass::alloc(void)
IOAccessoryIDBusBulkData::_completeIDBusCommandInternal(int)
IOAccessoryIDBusBulkData::_completeIDBusInfoInternal(int)
IOAccessoryIDBusBulkData::_completeIDBusReadCommand(void *,int)
IOAccessoryIDBusBulkData::_completeIDBusReadCommandInternal(int)
IOAccessoryIDBusBulkData::_detachFromIDBus(void)
IOAccessoryIDBusBulkData::_finishStartGated(IOService *)
IOAccessoryIDBusBulkData::_setPowerStateGated(ulong)
IOAccessoryIDBusBulkData::_startIDBusCommandInternal(void)
IOAccessoryIDBusBulkData::_startIDBusInfoInternal(void)
IOAccessoryIDBusBulkData::_startIDBusReadCommandInternal(void)
IOAccessoryIDBusBulkData::_startTransfer(OSData *)
IOAccessoryIDBusBulkData::free(void)
IOAccessoryIDBusBulkData::getFunctionForEndpointID(uchar)
IOAccessoryIDBusBulkData::getPendingCommandEndpointFunction(void)
IOAccessoryIDBusBulkData::handleCommandError(uchar,uchar,int,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryIDBusBulkData::handleCommandResponse(uchar,uchar,ulong long,void const*,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryIDBusBulkData::handleInterrupt(void)
IOAccessoryIDBusBulkData::handleReadResponse(uchar,uchar,ulong long,void const*)
IOAccessoryIDBusBulkData::handleResetResponse(void)
IOAccessoryIDBusBulkData::handleStart(void)
IOAccessoryIDBusBulkData::message(uint,IOService *,void *)
IOAccessoryIDBusBulkData::probe(IOService *,int *)
IOAccessoryIDBusBulkData::setPowerState(ulong,IOService *)
IOAccessoryIDBusBulkData::start(IOService *)
IOAccessoryIDBusBulkData::startTransfer(uchar,uchar,ulong long,void const*,ulong long,uint,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryIDBusBulkData::stop(IOService *)
IOAccessoryIDBusBulkData::useBulkDataRead(void)
IOAccessoryIDBusBulkData::~IOAccessoryIDBusBulkData()
IOAccessoryIDBusBulkDataEndpoint::_logBulkDataInfo(void)
IOAccessoryIDBusBulkDataEndpoint::registerReadResponseAction(void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryIDBusBulkDataEndpoint::start(IOService *)
IOAccessoryIDBusBulkDataEndpoint::startTransfer(uchar,ulong long,void const*,ulong long,uint,void (*)(void *,uchar,ulong long,void const*,int),void *)
IOAccessoryIDBusBulkDataEndpoint::stop(IOService *)
IOAccessoryIDBusEA::_receiveData(uchar,ulong long,void const*,int)
IOAccessoryIDBusEA::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryIDBusEA::copyDeviceFirmwareRevision(void)
IOAccessoryIDBusEA::copyDeviceHardwareRevision(void)
IOAccessoryIDBusEA::copyDeviceVendorName(void)
IOAccessoryIDBusEA::copyProtocolString(void)
IOAccessoryIDBusEA::free(void)
IOAccessoryIDBusEA::sendData(void const*,ulong long)
IOAccessoryIDBusEA::sessionClose(void)
IOAccessoryIDBusEA::sessionOpen(void)
IOAccessoryIDBusEA::start(IOService *)
IOAccessoryIDBusEA::stop(IOService *)
IOAccessoryIDBusHIDDevice::_getReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryIDBusHIDDevice::_handleReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryIDBusHIDDevice::_handleSleepDeadline(IOHIDReportType,uint)
IOAccessoryIDBusHIDDevice::_handleStartGated(void)
IOAccessoryIDBusHIDDevice::_receiveData(uchar,ulong long,void const*,int)
IOAccessoryIDBusHIDDevice::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryIDBusHIDDevice::_setReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryIDBusHIDDevice::free(void)
IOAccessoryIDBusHIDDevice::handleReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOAccessoryIDBusHIDDevice::handleStart(IOService *)
IOAccessoryIDBusHIDDevice::handleStop(IOService *)
IOAccessoryIDBusHIDDevice::newCountryCodeNumber(void)
IOAccessoryIDBusHIDDevice::newLocationIDNumber(void)
IOAccessoryIDBusHIDDevice::newManufacturerString(void)
IOAccessoryIDBusHIDDevice::newProductIDNumber(void)
IOAccessoryIDBusHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
IOAccessoryIDBusHIDDevice::newVendorIDNumber(void)
IOAccessoryIDBusHIDDevice::newVersionNumber(void)
IOAccessoryIDBusHIDDevice::processBufferQueue(void)
IOAccessoryIDBusHIDDevice::setProperty(OSSymbol const*,OSObject *)
IOAccessoryIDBusHIDDevice::willTerminate(IOService *,uint)
IOAccessoryIDBusPD::_receiveData(uchar,ulong long,void const*,int)
IOAccessoryIDBusPD::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryIDBusPD::_setPDOProperty<uint>(OSSymbol const*,uint const*,uint,OSArray const**)
IOAccessoryIDBusPD::activeRole(void)
IOAccessoryIDBusPD::chooseAccessorySourceCapabilities(void)
IOAccessoryIDBusPD::free(void)
IOAccessoryIDBusPD::getSourcePDOs(uint *,uint *,IOAccessoryPowerMode *)
IOAccessoryIDBusPD::handleConfigChanged(void)
IOAccessoryIDBusPD::handlePowerSourceChanged(void)
IOAccessoryIDBusPD::handleSinkDisconnect(bool)
IOAccessoryIDBusPD::handleSourceDisconnect(bool)
IOAccessoryIDBusPD::handleSourceTimeout(IOTimerEventSource *)
IOAccessoryIDBusPD::handleSupplyDataRequestReady(uint)
IOAccessoryIDBusPD::managerNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryIDBusPD::receiveDataMessage(uchar,uchar,uint const*,uint)
IOAccessoryIDBusPD::requestAccessorySourceCapabilities(uint const*,uint)
IOAccessoryIDBusPD::sendControlMessage(uchar,uchar)
IOAccessoryIDBusPD::sendDataMessage(uchar,uint const*,uint,uchar)
IOAccessoryIDBusPD::sendSourceCapabilities(bool)
IOAccessoryIDBusPD::start(IOService *)
IOAccessoryIDBusPD::stop(IOService *)
IOAccessoryIDBusPD::stopNotifier(IONotifier **)
IOAccessoryIDBusPD::willTerminate(IOService *,uint)
IOAccessoryIDBusPDSupplyData::initWithIndex(IOAccessoryIDBusPD *,IOAccessoryPowerSource *,uint,bool)
IOAccessoryIDBusPDSupplyData::isEqualTo(OSMetaClassBase const*)
IOAccessoryIDBusPDSupplyData::requestReady(void)
IOAccessoryIDBusProxyPD::_receiveData(uchar,ulong long,void const*,int)
IOAccessoryIDBusProxyPD::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryIDBusProxyPD::free(void)
IOAccessoryIDBusProxyPD::getSourcePDOs(uint *,uint *,bool *)
IOAccessoryIDBusProxyPD::handlePowerSourceChanged(void)
IOAccessoryIDBusProxyPD::hasBatteryCaseLikeDigitalID(uchar const*)
IOAccessoryIDBusProxyPD::managerNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryIDBusProxyPD::receiveDataMessage(uchar,uchar,uint const*,uint)
IOAccessoryIDBusProxyPD::sendControlMessage(uchar,uchar)
IOAccessoryIDBusProxyPD::sendDataMessage(uchar,uint const*,uint,uchar)
IOAccessoryIDBusProxyPD::sendSourceCapabilities(bool)
IOAccessoryIDBusProxyPD::start(IOService *)
IOAccessoryIDBusProxyPD::stop(IOService *)
IOAccessoryIDBusProxyPD::stopNotifier(IONotifier **)
IOAccessoryIDBusProxyPD::willTerminate(IOService *,uint)
IOAccessoryIDBusTransport::_addGetLastErrorForMGFix(uint,uint)
IOAccessoryIDBusTransport::_addVendorSleepForMGFix(uint,uint)
IOAccessoryIDBusTransport::assertBusReset(IOAccessoryIDBusTransport::IOAccessoryIDBusAssertType)
IOAccessoryIDBusTransport::assertBusResetInternalGated(IOAccessoryIDBusTransport::IOAccessoryIDBusAssertType)
IOAccessoryIDBusTransport::calculateCRC(void const*,ulong long,uint)
IOAccessoryIDBusTransport::cancelTransfer(void)
IOAccessoryIDBusTransport::cancelTransferGated(void)
IOAccessoryIDBusTransport::cancelTransfers(void (*)(void *,int),void *)
IOAccessoryIDBusTransport::cancelTransfersGated(void *,void *)
IOAccessoryIDBusTransport::closeOpenClients(OSSet *)
IOAccessoryIDBusTransport::completeTransfer(int,void const*)
IOAccessoryIDBusTransport::completeTransferCallback(void *,int)
IOAccessoryIDBusTransport::completeTransferCallbackGated(OSObject *,void *,void *,void *,void *)
IOAccessoryIDBusTransport::completeTransferInternal(OSData *,int,void const*)
IOAccessoryIDBusTransport::extendTransferTimeout(IORegistryEntry *,void *)
IOAccessoryIDBusTransport::free(void)
IOAccessoryIDBusTransport::handleClose(IOService *,uint)
IOAccessoryIDBusTransport::handleIsOpen(IOService const*)
IOAccessoryIDBusTransport::handleOpen(IOService *,uint,void *)
IOAccessoryIDBusTransport::matchPropertyTable(OSDictionary *,int *)
IOAccessoryIDBusTransport::message(uint,IOService *,void *)
IOAccessoryIDBusTransport::openClientNeedsPT(void)
IOAccessoryIDBusTransport::processAssertBusResetInternalGated(void)
IOAccessoryIDBusTransport::receiveInterrupt(void)
IOAccessoryIDBusTransport::sendBreak(void)
IOAccessoryIDBusTransport::sendBusReset(void)
IOAccessoryIDBusTransport::setProperty(OSSymbol const*,OSObject *)
IOAccessoryIDBusTransport::start(IOService *)
IOAccessoryIDBusTransport::startTransferData(void)
IOAccessoryIDBusTransport::stop(IOService *)
IOAccessoryIDBusTransport::transferData(void const*,ulong long,void *,ulong long,ulong long,uint,void (*)(void *,int),void *)
IOAccessoryIDBusTransport::transferDataForAuthIC(void const*,ulong long,void *,ulong long,ulong long,uint,void (*)(void *,int),void *)
IOAccessoryIDBusTransport::transferDataGated(OSData *)
IOAccessoryIDBusTransport::transferDataTimeout(IOTimerEventSource *)
IOAccessoryIDBusUserClient::clientClose(void)
IOAccessoryIDBusUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryIDBusUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAccessoryIDBusUserClient::start(IOService *)
IOAccessoryManager::_getPortType(void)
IOAccessoryManager::accessoryDetect(void)
IOAccessoryManager::accessoryDetectGated(IOTimerEventSource *)
IOAccessoryManager::calculateAccessoryPowerSleepCurrentLimit(IOAccessoryPowerMode)
IOAccessoryManager::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAccessoryManager::configureAccessoryPower(IOAccessoryPowerMode)
IOAccessoryManager::configureAccessoryPowerGated(IOAccessoryPowerMode)
IOAccessoryManager::configureAccessoryPowerInternal(void)
IOAccessoryManager::configureAccessoryPowerLowVoltageSelect(uint,uint)
IOAccessoryManager::configureAccessoryPowerReady(bool)
IOAccessoryManager::configureAccessoryPowerReadyGated(bool)
IOAccessoryManager::configureAccessorySleepPower(bool)
IOAccessoryManager::configureAccessorySleepPowerGated(bool)
IOAccessoryManager::configureAllowedFeatures(uint,uint)
IOAccessoryManager::configureAllowedFeaturesGated(uint,uint)
IOAccessoryManager::configureAttachStyleGated(IOAccessoryAttachStyleType)
IOAccessoryManager::configureBatteryPackGated(bool)
IOAccessoryManager::configureDetectOverride(bool,bool,IOAccResistorID)
IOAccessoryManager::configureDetectOverrideGated(bool,bool,IOAccResistorID)
IOAccessoryManager::configureUSBCurrentLimitBase(uint)
IOAccessoryManager::configureUSBCurrentLimitBaseRestore(void)
IOAccessoryManager::configureUSBCurrentLimitGated(OSSymbol const*,OSObject *,IOAccessoryPowerSourceItem const*)
IOAccessoryManager::configureUSBCurrentLimitMaximum(uint)
IOAccessoryManager::configureUSBCurrentLimitOffset(int)
IOAccessoryManager::configureUSBModeGated(IOAccessoryUSBModeType)
IOAccessoryManager::configureUSBPowerIgnoreGated(bool)
IOAccessoryManager::configureUSBRemapChargeThroughGated(bool)
IOAccessoryManager::copyFinalManagerForTransport(IOAccessoryTransportType)
IOAccessoryManager::copyFinalTransportService(IOAccessoryTransportType)
IOAccessoryManager::copyNextManagerForTransport(IOAccessoryTransportType)
IOAccessoryManager::copyUpstreamManagerForService(IOService const*)
IOAccessoryManager::copyUpstreamManagerForTransport(IOAccessoryTransportType)
IOAccessoryManager::free(void)
IOAccessoryManager::getAccessoryID(void)
IOAccessoryManager::getAccessoryPowerInfo(IOAccessoryPowerMode,uint *,uint *,uint *)
IOAccessoryManager::getAccessoryPowerReady(void)
IOAccessoryManager::getAccessoryStyleAttached(IOAccessoryAttachStyleType)
IOAccessoryManager::getFeatureAllowed(uint)
IOAccessoryManager::getManagerPrimaryPortID(void)
IOAccessoryManager::getPowerMode(void)
IOAccessoryManager::getUSBConnectType(void)
IOAccessoryManager::getUSBRestrictedMode(void)
IOAccessoryManager::handleDetectChange(bool)
IOAccessoryManager::isAccessoryAttached(IOAccResistorID,bool *)
IOAccessoryManager::isTransportSupported(IOPortTransportStateTransportType)
IOAccessoryManager::logEntry(char const*,char const*,ushort,ushort,uint,uint,void *)
IOAccessoryManager::matchPropertyTable(OSDictionary *,int *)
IOAccessoryManager::messageClients(uint,void *,ulong)
IOAccessoryManager::notifyPowerSourceChange(void)
IOAccessoryManager::processAccessoryPowerModeExtOffRequest(void)
IOAccessoryManager::processAccessoryPowerModeExtOffRequestGated(void)
IOAccessoryManager::readAccessoryAttached(IOAccResistorID *)
IOAccessoryManager::readAccessoryAttachedGated(IOAccResistorID *)
IOAccessoryManager::reparentUpstreamPorts(void)
IOAccessoryManager::requestAccessoryPowerOff(void)
IOAccessoryManager::requestAccessoryPowerOffGated(void)
IOAccessoryManager::requestAccessoryPowerOnGated(void)
IOAccessoryManager::requestProbe(uint)
IOAccessoryManager::resetAccessoryPower(ulong long)
IOAccessoryManager::resetAccessoryPowerGated(ulong long const*)
IOAccessoryManager::setAccessoryID(IOAccResistorID)
IOAccessoryManager::setProperties(OSObject *)
IOAccessoryManager::sleepWakeNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryManager::start(IOService *)
IOAccessoryManager::stop(IOService *)
IOAccessoryManager::stopNotifier(IONotifier **)
IOAccessoryManager::stringFromReturn(int)
IOAccessoryManager::updatePowerSourceState(OSObject *,IOTimerEventSource *)
IOAccessoryManager::updatePowerSourceStateGated(void)
IOAccessoryManager::updateUSBConnectStateGated(void)
IOAccessoryManagerAID::configureDetectOverrideGated(bool,bool,IOAccResistorID)
IOAccessoryManagerAID::configureDigitalIDOverride(uchar const*)
IOAccessoryManagerAID::free(void)
IOAccessoryManagerAID::getAccessoryDigitalID(uchar *)
IOAccessoryManagerAID::getAccessoryInterfaceDeviceInfo(IOAccDigitalIDInterfaceDeviceInfo *)
IOAccessoryManagerAID::getAccessoryInterfaceDeviceSerialNumber(ulong long *)
IOAccessoryManagerAID::handleAccessoryDetect(bool *,IOAccResistorID *,bool,bool)
IOAccessoryManagerAID::handleDetectChange(bool)
IOAccessoryManagerAID::handleDigitalID(uchar const*)
IOAccessoryManagerAID::handleDigitalIDDisconnect(void)
IOAccessoryManagerAID::handleIDBusCommand(void (*)(void *,int),ulong long,IOAccessoryIDBusTransport *,bool,bool)
IOAccessoryManagerAID::handleIDBusState(int)
IOAccessoryManagerAID::matchPropertyTable(OSDictionary *,int *)
IOAccessoryManagerAID::recheckAccessoryVersionInfo(void)
IOAccessoryManagerAID::setAccessoryDigitalID(uchar const*)
IOAccessoryManagerAID::shouldOverrideAU(uchar const*)
IOAccessoryManagerAID::start(IOService *)
IOAccessoryManagerHSAID::_closeHSAIDTransport(void)
IOAccessoryManagerHSAID::_eventHandler(IOAccessoryHSAIDBusTransport::HSAIDEvent,void const*,uint)
IOAccessoryManagerHSAID::_handleAccessoryInfo(HSAIDGetAccessoryInfoStringResponse_t *,ushort)
IOAccessoryManagerHSAID::_startIdentification(void)
IOAccessoryManagerHSAID::handleAccessoryPowerDidChange(IOAccessoryPowerMode)
IOAccessoryManagerHSAID::handleHighSpeedMode(void)
IOAccessoryManagerHSAID::handleIDBusCommand(void (*)(void *,int),ulong long,IOAccessoryIDBusTransport *,bool,bool)
IOAccessoryManagerHSAID::handleIDBusResponse(IOAccessoryManagerAID::IDBusState)
IOAccessoryManagerHSAID::handleIDBusState(int)
IOAccessoryManagerHSAID::message(uint,IOService *,void *)
IOAccessoryManagerHSAID::messageClients(uint,void *,ulong)
IOAccessoryManagerHSAID::start(IOService *)
IOAccessoryManagerHSAID::stop(IOService *)
IOAccessoryManagerOrion::getPowerModeCurrentLimit(IOAccessoryPowerMode)
IOAccessoryManagerOrion::getPowerModeVoltage(IOAccessoryPowerMode,uint *,uint *)
IOAccessoryManagerOrion::getTransportEnabled(IOAccessoryTransportType)
IOAccessoryManagerOrion::handleAccessoryDetect(bool *,IOAccResistorID *,bool,bool)
IOAccessoryManagerOrion::handleAccessoryPowerWillChange(IOAccessoryPowerMode)
IOAccessoryManagerOrion::handleDetectChange(uint)
IOAccessoryManagerOrion::setPowerRole(uint)
IOAccessoryManagerOrion::start(IOService *)
IOAccessoryManagerOrion::startRoleSwap(uint)
IOAccessoryManagerUSBC::initWithPortType(IOPortType,OSDictionary *)
IOAccessoryManagerUserClient::extChallengeCryptoDock(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extChallengeCryptoDock9Pin(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extCheckPinVoltage(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureAllowedFeatures(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureDPDNConfigOverride(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureDetectOverride(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureDigitalIDOverride(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureGoldbondMode(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigurePower(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigurePowerDuringSleep(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigurePowerLowVoltageSelect(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureUSBConnectActive(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureUSBCurrentLimitSetBase(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureUSBCurrentLimitSetOffset(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extConfigureUSBMode(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extGetFreePinMask(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extGetLdcmParams(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extLDCMEnableMitigations(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extLDCMEnableUserOverride(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extLDCMGetMeasurementStatus(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extLDCMSetLiquidDetected(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extLDCMSetState(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extRequestLdcmMeasurement(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extSelectEisPin(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extSetGoldbond(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::extSetLDCM(IOAccessoryManager *,void *,IOExternalMethodArguments *)
IOAccessoryManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryManagerUserClient::start(IOService *)
IOAccessoryOOBPairingInterface::willTerminate(IOService *,uint)
IOAccessoryOOBPairingInterfaceUserClient::_checkSupportedTypes(void)
IOAccessoryOOBPairingInterfaceUserClient::_notifyActivePairingTypeChange(IOAccessoryOOBPairingInterface *)
IOAccessoryOOBPairingInterfaceUserClient::_receivePairingInfoData(OSObject *,IOAccessoryOOBPairingInterface *,IOAccessoryOOBPairingNotifyType,void const*,ulong long)
IOAccessoryOOBPairingInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryOOBPairingInterfaceUserClient::free(void)
IOAccessoryOOBPairingInterfaceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAccessoryOOBPairingInterfaceUserClient::start(IOService *)
IOAccessoryOOBPairingInterfaceUserClient::willTerminate(IOService *,uint)
IOAccessoryPort::_releasePortID(int)
IOAccessoryPort::_reservePortID(int)
IOAccessoryPort::deallocatePort(void)
IOAccessoryPort::free(void)
IOAccessoryPort::getPortNumber(void)
IOAccessoryPort::init(OSDictionary *)
IOAccessoryPort::initWithDynamicPort(OSDictionary *)
IOAccessoryPort::receiveDataBuff(IOAccessoryBuffer *)
IOAccessoryPort::receiveDataBuff(uchar *,uint)
IOAccessoryPort::reserveDynamicPortID(void)
IOAccessoryPort::start(IOService *)
IOAccessoryPortDataQueue::withEntries(uint,uint)
IOAccessoryPortIDBus::_receiveData(uchar,ulong long,void const*,int)
IOAccessoryPortIDBus::_receiveResponse(uchar,ulong long,void const*,int)
IOAccessoryPortIDBus::start(IOService *)
IOAccessoryPortIDBus::stop(IOService *)
IOAccessoryPortIDBus::transmitData(IOMemoryDescriptor *,uint)
IOAccessoryPortSerial::ReverifyBaudRate(uint,bool *)
IOAccessoryPortSerial::free(void)
IOAccessoryPortSerial::getSerialConfig(uint *)
IOAccessoryPortSerial::message(uint,IOService *,void *)
IOAccessoryPortSerial::receiveAccessoryID(uint *)
IOAccessoryPortSerial::receiveAttach(void)
IOAccessoryPortSerial::receiveDetach(void)
IOAccessoryPortSerial::receivePowerChange(IOAccessoryPowerMode const*)
IOAccessoryPortSerial::receiveSerialByte(uchar)
IOAccessoryPortSerial::setupSerialPort(void)
IOAccessoryPortSerial::sleepWakeNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryPortSerial::start(IOService *)
IOAccessoryPortSerial::stop(IOService *)
IOAccessoryPortSerial::transmitData(IOMemoryDescriptor *,uint)
IOAccessoryPortSerial::waitSendDone(uint)
IOAccessoryPortSerialSync::MetaClass::alloc(void)
IOAccessoryPortSerialSync::UartDisable(void)
IOAccessoryPortSerialSync::UartEnable(void)
IOAccessoryPortSerialSync::UartSetBaudRate(uint)
IOAccessoryPortSerialSync::UartSetLineState(bool)
IOAccessoryPortSerialSync::UartStartAutoBaud(void)
IOAccessoryPortSerialSync::filterSerialEvent(AppleOnboardSerialSync *,uint,uint)
IOAccessoryPortSerialSync::free(void)
IOAccessoryPortSerialSync::receiveSerialEvent(uint,uint)
IOAccessoryPortSerialSync::serialThread(void)
IOAccessoryPortSerialSync::serialTimeout(IOTimerEventSource *)
IOAccessoryPortSerialSync::setPowerState(ulong,IOService *)
IOAccessoryPortSerialSync::start(IOService *)
IOAccessoryPortSerialSync::transmitDataGated(IOMemoryDescriptor *,uint)
IOAccessoryPortSerialSync::waitSendDoneGated(uint)
IOAccessoryPortSerialSync::~IOAccessoryPortSerialSync()
IOAccessoryPortUSB::controlReceiveCompletion(void *,int,ulong long,IOMemoryDescriptor *)
IOAccessoryPortUSB::controlRequest(IOUSBDeviceSetupPacket *,int *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *)
IOAccessoryPortUSB::free(void)
IOAccessoryPortUSB::getHsHidOutReportId(uint,uint *)
IOAccessoryPortUSB::isIgnoreVBUS(void)
IOAccessoryPortUSB::message(uint,IOService *,void *)
IOAccessoryPortUSB::receiveNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryPortUSB::setProperties(OSObject *)
IOAccessoryPortUSB::setUSBRoleSwitchMask(ushort,ushort)
IOAccessoryPortUSB::start(IOService *)
IOAccessoryPortUSB::stop(IOService *)
IOAccessoryPortUSB::transmitData(IOMemoryDescriptor *,uint)
IOAccessoryPortUSB::transmitDataGated(IOMemoryDescriptor *,uint)
IOAccessoryPortUSB::usbRoleSwitchThreadCall(void *,void *)
IOAccessoryPortUSB::waitSendDone(uint)
IOAccessoryPortUserClient::clientClose(void)
IOAccessoryPortUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOAccessoryPortUserClient::extSetUSBRoleSwitchMask(IOAccessoryPortUserClient*,IOAccessoryPort *,IOExternalMethodArguments *)
IOAccessoryPortUserClient::extTransmitData(IOAccessoryPortUserClient*,IOAccessoryPort *,IOExternalMethodArguments *)
IOAccessoryPortUserClient::extWaitForIdle(IOAccessoryPortUserClient*,IOAccessoryPort *,IOExternalMethodArguments *)
IOAccessoryPortUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAccessoryPortUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAccessoryPortUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOAccessoryPortUserClient::start(IOService *)
IOAccessoryPortUserClient::willTerminate(IOService *,uint)
IOAccessoryPowerSource::attachToParent(IORegistryEntry *,IORegistryPlane const*)
IOAccessoryPowerSource::copyForManager(IOAccessoryManager *)
IOAccessoryPowerSource::copyPowerSourceBehavior(void)
IOAccessoryPowerSource::copyPowerSourceBehaviorExcluding(OSObject const*)
IOAccessoryPowerSource::createPowerSourceBehaviorGated(IOAccessoryPowerSourceBehavior *,OSObject const*)
IOAccessoryPowerSource::createPowerSourceItemsInternal(OSObject const*,OSObject const*,OSSet const*,OSSet const*,bool)
IOAccessoryPowerSource::debounceTimeout(IOTimerEventSource *)
IOAccessoryPowerSource::free(void)
IOAccessoryPowerSource::getPowerStatus(ulong long *)
IOAccessoryPowerSource::getPowerStatusGated(bool *,ulong long *)
IOAccessoryPowerSource::getVoltageMaxMV(uint)
IOAccessoryPowerSource::getVoltageNominalMV(uint)
IOAccessoryPowerSource::notifyUpstreamManagers(void)
IOAccessoryPowerSource::notifyUpstreamManagersRawChange(void)
IOAccessoryPowerSource::removePowerSourceItemsWithTag(OSObject const*,OSObject const*)
IOAccessoryPowerSource::removePowerSourceItemsWithTagSet(OSObject const*,OSSet const*)
IOAccessoryPowerSource::setPowerSourceItemWithTag(OSObject const*,OSObject const*,IOAccessoryPowerSourceItem const*)
IOAccessoryPowerSource::setPowerSourceItems(OSObject const*,OSSet const*)
IOAccessoryPowerSource::setPowerStatus(bool,ulong long)
IOAccessoryPowerSource::setPowerStatusGated(bool const*,ulong long const*,OSSet const*,OSObject const*)
IOAccessoryPowerSource::setPowerStatusWithItemAndTag(bool,ulong long,IOAccessoryPowerSourceItem const*,OSObject const*)
IOAccessoryPowerSource::start(IOService *)
IOAccessoryPowerSource::stop(IOService *)
IOAccessoryPowerSourceBehavior::containsBehavior(OSObject const*)
IOAccessoryPowerSourceBehavior::free(void)
IOAccessoryPowerSourceBehavior::initWithPowerSource(IOAccessoryPowerSource *)
IOAccessoryPowerSourceBehavior::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceBehavior::resolveCurrentLimitForSupplyData(IOAccessoryPowerSourceSupplyData const*)
IOAccessoryPowerSourceBehavior::resolveMaxNominalVoltage(void)
IOAccessoryPowerSourceBehavior::serialize(OSSerialize *)
IOAccessoryPowerSourceItem::applyBefore(IOAccessoryPowerSourceItem const*)
IOAccessoryPowerSourceItem::free(void)
IOAccessoryPowerSourceItem::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItem::serialize(OSSerialize *)
IOAccessoryPowerSourceItem::setOwner(OSObject const*,OSObject const*)
IOAccessoryPowerSourceItemBehavior::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemBehavior::free(void)
IOAccessoryPowerSourceItemBehavior::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemBehavior::withBehavior(ulong long,OSObject const*)
IOAccessoryPowerSourceItemBehavior::withBehaviorSet(ulong long,OSSet const*)
IOAccessoryPowerSourceItemBrickID::applyBefore(IOAccessoryPowerSourceItem const*)
IOAccessoryPowerSourceItemBrickID::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemBrickID::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemBrickID::initWithIDAndVoltage(ulong long,IOAccessoryPowerSourceItemBrickID::BrickID,uint,uint)
IOAccessoryPowerSourceItemBrickID::withIDAndVoltage(ulong long,IOAccessoryPowerSourceItemBrickID::BrickID,uint,uint)
IOAccessoryPowerSourceItemBrickID::withVoltage(ulong long,uint,uint)
IOAccessoryPowerSourceItemBrickLimit::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemBrickLimit::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemBrickLimit::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemBrickLimit::withMatchingBrickIDAndLimit(ulong long,IOAccessoryPowerSourceItemBrickID::BrickID,uint)
IOAccessoryPowerSourceItemCurrentBase::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemCurrentBase::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemCurrentBase::withCurrentLimit(ulong long,int)
IOAccessoryPowerSourceItemCurrentOffset::applyBefore(IOAccessoryPowerSourceItem const*)
IOAccessoryPowerSourceItemCurrentOffset::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemDebounce::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemDebounce::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemDebounce::withDeadline(ulong long,ulong long)
IOAccessoryPowerSourceItemLowVoltageLimit::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemLowVoltageLimit::getAdapterInfo(void)
IOAccessoryPowerSourceItemLowVoltageLimit::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemLowVoltageLimit::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemOrion::withTimestamp(ulong long)
IOAccessoryPowerSourceItemPD::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemPD::copyAdapterFamily(void)
IOAccessoryPowerSourceItemPD::free(void)
IOAccessoryPowerSourceItemPD::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemPD::initWithDataObjects(ulong long,OSArray const*,ulong long)
IOAccessoryPowerSourceItemPD::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemPD::withDataObjects(ulong long,OSArray const*,ulong long)
IOAccessoryPowerSourceItemPDPlatformCurrentLimit::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemPDPlatformCurrentLimit::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemPDPlatformCurrentLimit::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemPDPlatformCurrentLimit::withAdapterVoltageRangeAndLimit(ulong long,uint,uint,uint)
IOAccessoryPowerSourceItemRestrictions::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemRestrictions::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemRestrictions::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemRestrictions::withAbsoluteMaximums(ulong long,uint,uint,int,uint)
IOAccessoryPowerSourceItemUSBHost::copyAdapterDescription(void)
IOAccessoryPowerSourceItemUSBHost::withCurrentLimit(ulong long,uint)
IOAccessoryPowerSourceItemUSB_ChargingPort::applyBehavior(IOAccessoryPowerSourceBehavior *)
IOAccessoryPowerSourceItemUSB_ChargingPort::copyAdapterDescription(void)
IOAccessoryPowerSourceItemUSB_ChargingPort::copyAdapterFamily(void)
IOAccessoryPowerSourceItemUSB_ChargingPort::copyAdapterID(void)
IOAccessoryPowerSourceItemUSB_ChargingPort::copyWithSecondaryDetectionVoltage(uint)
IOAccessoryPowerSourceItemUSB_ChargingPort::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemUSB_ChargingPort::initWithTypeAndVoltage(ulong long,IOAccessoryPowerSourceItemUSB_ChargingPort::PortableDeviceType,IOAccessoryPowerSourceItemUSB_ChargingPort::ChargingPortType,uint,uint)
IOAccessoryPowerSourceItemUSB_ChargingPort::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemUSB_ChargingPort::withTypeAndVoltage(ulong long,IOAccessoryPowerSourceItemUSB_ChargingPort::PortableDeviceType,IOAccessoryPowerSourceItemUSB_ChargingPort::ChargingPortType,uint,uint)
IOAccessoryPowerSourceItemUSB_ChargingPort::withVoltage(ulong long,IOAccessoryPowerSourceItemUSB_ChargingPort::PortableDeviceType,uint)
IOAccessoryPowerSourceItemUSB_DataContactDetect::getDCDTimeout(void)
IOAccessoryPowerSourceItemUSB_DataContactDetect::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemUSB_DataContactDetect::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemUSB_DataContactDetect::withDetectAndVoltage(ulong long,bool,uint,ulong long)
IOAccessoryPowerSourceItemUSB_TypeC_Current::handleSerialization(OSDictionary *)
IOAccessoryPowerSourceItemUSB_TypeC_Current::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceItemUSB_TypeC_Current::withAdvertisementAndVoltage(ulong long,IOAccessoryPowerSourceItemUSB_TypeC_Current::TypeCAdvertisement,uint)
IOAccessoryPowerSourceItemUSB_TypeC_Current::withVoltage(ulong long,uint)
IOAccessoryPowerSourceSupplyData::getMaxCurrentLimit(void)
IOAccessoryPowerSourceSupplyData::getMinCurrentLimit(void)
IOAccessoryPowerSourceSupplyData::initWithFixedSupply(IOAccessoryPowerSource *,bool,uint,int)
IOAccessoryPowerSourceSupplyData::initWithLowVoltageSupply(IOAccessoryPowerSource *,bool,int)
IOAccessoryPowerSourceSupplyData::initWithVariableSupply(IOAccessoryPowerSource *,bool,uint,uint,int)
IOAccessoryPowerSourceSupplyData::isEqualTo(OSMetaClassBase const*)
IOAccessoryPowerSourceSupplyData::serialize(OSSerialize *)
IOAccessoryTRM::IOAccessoryTRM(void)
IOAccessoryTRM::MetaClass::alloc(void)
IOAccessoryTRM::_addIDToCache(void)
IOAccessoryTRM::_copyID(void **,ulong *)
IOAccessoryTRM::_dequeueNotification(int *)
IOAccessoryTRM::_dropAllNotifications(void)
IOAccessoryTRM::_enqueueNotification(int)
IOAccessoryTRM::_getACMTRMStatus(IOAccessoryTRM_State_t *,IOAccessoryTRM_GracePeriodReason_t *,bool *)
IOAccessoryTRM::_handleACMMessage(void *,uint,IOService *,void *,ulong)
IOAccessoryTRM::_handleNotificationGated(int)
IOAccessoryTRM::_handleNotifications(void)
IOAccessoryTRM::_ignoreVbus(void)
IOAccessoryTRM::_isCachedAccessoryAttached(bool *)
IOAccessoryTRM::_isExemptAccessoryAttached(void)
IOAccessoryTRM::_isSupervisedAccessoryAttached(void)
IOAccessoryTRM::_processNotifications(void)
IOAccessoryTRM::_setPropertiesGated(void)
IOAccessoryTRM::_updateStatusGated(void)
IOAccessoryTRM::init(OSDictionary *)
IOAccessoryTRM::message(uint,IOService *,void *)
IOAccessoryTRM::start(IOService *)
IOAccessoryTRM::stop(IOService *)
IOAccessoryTransport::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAccessoryTransport::copyParentManager(void)
IOAccessoryTransport::free(void)
IOAccessoryTransport::getManager(void)
IOAccessoryTransport::start(IOService *)
IOAccessoryTransport::stop(IOService *)
IOAccessoryTransport::updatePrimaryPort(void)
IOAccessoryUSBConnectShim::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOAccessoryUSBConnectShim::chargerFunction(uint,uint)
IOAccessoryUSBConnectShim::free(void)
IOAccessoryUSBConnectShim::message(uint,IOService *,void *)
IOAccessoryUSBConnectShim::peekPrecharge(void *,IOService *,IONotifier *)
IOAccessoryUSBConnectShim::publishResources(void)
IOAccessoryUSBConnectShim::publishResourcesGated(void)
IOAccessoryUSBConnectShim::setPowerState(ulong,IOService *)
IOAccessoryUSBConnectShim::setPowerStateGated(ulong,IOService *)
IOAccessoryUSBConnectShim::setProperties(OSObject *)
IOAccessoryUSBConnectShim::setRestrictedMode(bool)
IOAccessoryUSBConnectShim::setRestrictedModeGated(bool)
IOAccessoryUSBConnectShim::start(IOService *)
IOAccessoryUSBConnectShim::stop(IOService *)
IOAccessoryUSBPowerSourceDetect::continuedDetect(IOTimerEventSource *)
IOAccessoryUSBPowerSourceDetect::determinePowerSupply(IOAccessoryPowerSource *,IOAccessoryPowerSourceBehavior const*)
IOAccessoryUSBPowerSourceDetect::determineUSBCharger(IOAccessoryPowerSource *,ulong long,OSSet *)
IOAccessoryUSBPowerSourceDetect::disableDcpDetectSource(void *)
IOAccessoryUSBPowerSourceDetect::disableDetect(IOAccessoryPowerSource *)
IOAccessoryUSBPowerSourceDetect::free(void)
IOAccessoryUSBPowerSourceDetect::message(uint,IOService *,void *)
IOAccessoryUSBPowerSourceDetect::powerSupplyDebounce(IOTimerEventSource *)
IOAccessoryUSBPowerSourceDetect::sleepWakeNotification(void *,uint,IOService *,void *,ulong)
IOAccessoryUSBPowerSourceDetect::start(IOService *)
IOAccessoryUSBPowerSourceDetect::stop(IOService *)
IOAccessoryUSBPowerSourceDetect::verifyUSBMode(void)
IOAccessoryUSBPowerSourceDetect::willTerminate(IOService *,uint)
IOAccessoryUSBTypeCCurrentDetect::checkRpValueTimer(IOTimerEventSource *)
IOAccessoryUSBTypeCCurrentDetect::free(void)
IOAccessoryUSBTypeCCurrentDetect::init(IOAccessoryManager *,IOAccessoryPowerSource *,ulong long,IOAccessoryPowerSourceItemUSB_ChargingPort::ChargingPortType)
IOAccessoryUSBTypeCCurrentDetect::setPowerState(ulong,IOService *)
IOAccessoryUSBTypeCCurrentDetect::start(IOService *)
IOAccessoryUSBTypeCCurrentDetect::stop(IOService *)
IOAccessoryUSBTypeCCurrentDetect::updateStatus(void)
IOAccessoryUSBTypeCCurrentDetect::updateStatusInternal(void)
IOAppleConvergedIPCBTIDevice::allocDevice(void)
IOAppleConvergedIPCBTIDevice::allocDeviceParams(void)
IOAppleConvergedIPCBTIDevice::clearDMATransfer(IODMACommand **)
IOAppleConvergedIPCBTIDevice::createSetupDevice(void)
IOAppleConvergedIPCBTIDevice::createSetupInterface(void)
IOAppleConvergedIPCBTIDevice::errorFunction(uint,void *,void *)
IOAppleConvergedIPCBTIDevice::finishImageCommand(IODMACommand **)
IOAppleConvergedIPCBTIDevice::free(void)
IOAppleConvergedIPCBTIDevice::freeMappedIO(void *)
IOAppleConvergedIPCBTIDevice::getDMATransferPhysicalAddress(IODMACommand *,ulong long **,uint **,uint *)
IOAppleConvergedIPCBTIDevice::getMapper(void)
IOAppleConvergedIPCBTIDevice::prepareDMATransfer(IOMemoryDescriptor *,IODMACommand **)
IOAppleConvergedIPCBTIDevice::start(IOService *)
IOAppleConvergedIPCBTIDevice::start(IOService *)
IOAppleConvergedIPCBTIDevice::stop(IOService *)
IOAppleConvergedIPCBTIDevice::terminate(uint)
IOAppleConvergedIPCBTIDevice::terminateInterface(void)
IOAppleConvergedIPCBTIDevice__allocMappedIO_acipcMappedIO
IOAppleConvergedIPCBTIDevice__initWithLogger_IOAppleConvergedIPCLogger
IOAppleConvergedIPCBTIDevice__initWithLogger_IOAppleConvergedIPCLogger_0
IOAppleConvergedIPCBTIDevice__initWithLogger_IOAppleConvergedIPCLogger_1
IOAppleConvergedIPCBTIDevice__initializeDeviceParams_acipcBTIDeviceParams
IOAppleConvergedIPCBTIDevice__prepareImageCommand_IOMemoryDescriptor___AppleConvergedIPCIODirection__IODMACommand
IOAppleConvergedIPCBTIInterface::allocPipe(void)
IOAppleConvergedIPCBTIInterface::close(IOService *,uint)
IOAppleConvergedIPCBTIInterface::closeGated(IOService *,uint)
IOAppleConvergedIPCBTIInterface::createSetupPipe(void)
IOAppleConvergedIPCBTIInterface::createWithLogger(IOAppleConvergedIPCLogger *)
IOAppleConvergedIPCBTIInterface::errorFunction(uint,void *,void *)
IOAppleConvergedIPCBTIInterface::finishImageCommand(IODMACommand **)
IOAppleConvergedIPCBTIInterface::free(void)
IOAppleConvergedIPCBTIInterface::generateNonce(void)
IOAppleConvergedIPCBTIInterface::generateNonceGated(void)
IOAppleConvergedIPCBTIInterface::getIOMMUPageSize(uint *)
IOAppleConvergedIPCBTIInterface::nonceCompletionFunction(void *)
IOAppleConvergedIPCBTIInterface::prepareImageCommand(IOMemoryDescriptor *,IODMACommand **)
IOAppleConvergedIPCBTIInterface::readRegister(uint,uchar *,uint *)
IOAppleConvergedIPCBTIInterface::sendImageCompletionFunction(int,uint,uint)
IOAppleConvergedIPCBTIInterface::sendImageCompletionGated(int,uint,uint)
IOAppleConvergedIPCBTIInterface::sendImageGated(IOAppleConvergedIPCBTIInterface::tParams *)
IOAppleConvergedIPCBTIInterface::sendImageGated(IOAppleConvergedIPCBTIInterface::tParams *)
IOAppleConvergedIPCBTIInterface::start(IOService *)
IOAppleConvergedIPCBTIInterface::stop(IOService *)
IOAppleConvergedIPCBTIInterface::stop(IOService *)
IOAppleConvergedIPCBTIInterface::synchronousFunction(void *,int,ulong long,void *)
IOAppleConvergedIPCBTIInterface::terminate(uint)
IOAppleConvergedIPCBTIInterface__fn_0x750
IOAppleConvergedIPCCompletionRing::MetaClass::alloc(void)
IOAppleConvergedIPCCompletionRing::free(void)
IOAppleConvergedIPCCompletionRing::free(void)
IOAppleConvergedIPCCompletionRing::initWithOptions(uint,IOAppleConvergedIPCInterface *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *,int ( {block_pointer})(IOACIPCDescriptor **,uint *))
IOAppleConvergedIPCCompletionRing::withOptions(uint,IOAppleConvergedIPCInterface *,int ( {block_pointer})(IOACIPCDescriptor **,uint *))
IOAppleConvergedIPCCompletionRing::withOptions(uint,IOAppleConvergedIPCInterface *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *)
IOAppleConvergedIPCControl::IOAppleConvergedIPCControl(OSMetaClass const*)
IOAppleConvergedIPCControl::IOMMUMapRange(ulong long *,ulong long *)
IOAppleConvergedIPCControl::IOMMUMapRange(ulong long *,ulong long *)
IOAppleConvergedIPCControl::asyncFunction(void *,void (*)(void *,void *),void *,void *)
IOAppleConvergedIPCControl::asyncThreadCall(void *,void *)
IOAppleConvergedIPCControl::asyncThreadCallGated(void)
IOAppleConvergedIPCControl::bounceImageIn(IOMemoryDescriptor *,IODMACommand *,ulong long)
IOAppleConvergedIPCControl::clearDMATransfer(IODMACommand **)
IOAppleConvergedIPCControl::collectSnapshotGated(IOMemoryDescriptor *,uint,IOACIPCCompletion *)
IOAppleConvergedIPCControl::createSetupControl(void)
IOAppleConvergedIPCControl::createSetupPort(void)
IOAppleConvergedIPCControl::deviceWakeDeadTimeSample(void)
IOAppleConvergedIPCControl::deviceWakeDeadTimeWait(void)
IOAppleConvergedIPCControl::deviceWakeFunction(bool)
IOAppleConvergedIPCControl::disableLockPort(void)
IOAppleConvergedIPCControl::disableLockPortGated(void)
IOAppleConvergedIPCControl::enableUnlockPort(void)
IOAppleConvergedIPCControl::enableUnlockPortGated(void)
IOAppleConvergedIPCControl::errorFunction(uint,void *,void *)
IOAppleConvergedIPCControl::finishImageCommand(IODMACommand **)
IOAppleConvergedIPCControl::free(void)
IOAppleConvergedIPCControl::getBootStage(uint *)
IOAppleConvergedIPCControl::getDMATransferPhysicalAddress(IODMACommand *,ulong long *)
IOAppleConvergedIPCControl::getDMATransferPhysicalAddress(IODMACommand *,ulong long **,uint **,uint *)
IOAppleConvergedIPCControl::handleAER(IOPCIEventSource *,IOPCIEvent *)
IOAppleConvergedIPCControl::handleAER(IOPCIEventSource *,IOPCIEvent *)
IOAppleConvergedIPCControl::handlePCIMessage(uint)
IOAppleConvergedIPCControl::handleTLPCompletionTimeoutGated(void)
IOAppleConvergedIPCControl::isDeviceAccessibleFunction(void)
IOAppleConvergedIPCControl::linkStateUpFunction(ulong long *,ulong long *,uint *,uint *)
IOAppleConvergedIPCControl::matchPropertyTable(OSDictionary *,int *)
IOAppleConvergedIPCControl::mmioReadMemoryBar0(uint,uchar *,uint,bool)
IOAppleConvergedIPCControl::mmioReadMemoryBar0Gated(uint,uchar *,uint,bool)
IOAppleConvergedIPCControl::mmioReadMemoryBar1(uint,uchar *,uint,bool)
IOAppleConvergedIPCControl::mmioReadMemoryBar1Gated(uint,uchar *,uint,bool)
IOAppleConvergedIPCControl::pciMessage(void *,uint,IOService *,void *,ulong)
IOAppleConvergedIPCControl::pciMessageThreadCall(void *,void *)
IOAppleConvergedIPCControl::pciMessageThreadCallGated(void *)
IOAppleConvergedIPCControl::pciMessageThreadCallGated(void *)
IOAppleConvergedIPCControl::portChangeFunction(bool,int)
IOAppleConvergedIPCControl::portManualEnableFunction(bool,bool)
IOAppleConvergedIPCControl::portManualEnableFunction(bool,bool)
IOAppleConvergedIPCControl::portQuiesceWaitFunction(bool,void *)
IOAppleConvergedIPCControl::powerStateDidChangeTo(ulong,ulong,IOService *)
IOAppleConvergedIPCControl::powerStateDidChangeToGated(ulong,ulong,IOService *)
IOAppleConvergedIPCControl::powerStateWillChangeTo(ulong,ulong,IOService *)
IOAppleConvergedIPCControl::powerStateWillChangeToGated(ulong,ulong,IOService *)
IOAppleConvergedIPCControl::prepareDMATransfer(IOMemoryDescriptor *,IODMACommand **)
IOAppleConvergedIPCControl::prepareImageCommand(IOMemoryDescriptor *,AppleConvergedIPCIODirection,IODMACommand **,bool)
IOAppleConvergedIPCControl::releasePCIDevice(IOAppleConvergedPCI *)
IOAppleConvergedIPCControl::serviceNotifier(void *,IOService *,IONotifier *)
IOAppleConvergedIPCControl::serviceRegisterThreadCall(void *,void *)
IOAppleConvergedIPCControl::serviceRegisterThreadCallGated(IOService *,void *)
IOAppleConvergedIPCControl::serviceRegisterThreadCallGated(IOService *,void *)
IOAppleConvergedIPCControl::setBootStage(uint)
IOAppleConvergedIPCControl::setPowerState(ulong,IOService *)
IOAppleConvergedIPCControl::setupControlParams(acipcControlParams *)
IOAppleConvergedIPCControl::setupPCIDevice(IOAppleConvergedPCI *)
IOAppleConvergedIPCControl::sleepAckFunction(void)
IOAppleConvergedIPCControl::start(IOService *)
IOAppleConvergedIPCControl::stop(IOService *)
IOAppleConvergedIPCControl::systemPowerMessage(void *,uint,IOService *,void *,ulong)
IOAppleConvergedIPCControl::terminateDevice(void)
IOAppleConvergedIPCControl::timerFunction(void (*)(void *,void *),ulong long,void *,void *)
IOAppleConvergedIPCControl::triggerTrapGated(IOACIPCCompletion *)
IOAppleConvergedIPCControlUserClient::IOAppleConvergedIPCControlUserClient(OSMetaClass const*)
IOAppleConvergedIPCControlUserClient::MetaClass::alloc(void)
IOAppleConvergedIPCControlUserClient::_collectSnapshot(IOAppleConvergedIPCControlUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCControlUserClient::_trap(IOAppleConvergedIPCControlUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCControlUserClient::clientClose(void)
IOAppleConvergedIPCControlUserClient::close(IOService *,uint)
IOAppleConvergedIPCControlUserClient::closeGated(IOService *,uint)
IOAppleConvergedIPCControlUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAppleConvergedIPCControlUserClient::free(void)
IOAppleConvergedIPCControlUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAppleConvergedIPCControlUserClient::loggerKnob(uint,uint,void *,void *)
IOAppleConvergedIPCControlUserClient::open(IOService *,uint,void *)
IOAppleConvergedIPCControlUserClient::openGated(IOService *,uint,void *)
IOAppleConvergedIPCControlUserClient::readLogs(ulong long,ulong long,bool,IOACIPCCompletion *)
IOAppleConvergedIPCControlUserClient::snapshotComplete(void *,void *,int,ulong long,void *)
IOAppleConvergedIPCControlUserClient::start(IOService *)
IOAppleConvergedIPCControlUserClient::willTerminate(IOService *,uint)
IOAppleConvergedIPCControlUserClient__collectSnapshot_unsigned_long_long__unsigned_int__IOACIPCCompletion
IOAppleConvergedIPCControlUserClient__triggerTrap_IOACIPCCompletion
IOAppleConvergedIPCControl__fn_0x608
IOAppleConvergedIPCControl__fn_0x610
IOAppleConvergedIPCControl__fn_0x758
IOAppleConvergedIPCControl__fn_0x760
IOAppleConvergedIPCICEBBUserClient__clearTimeEventRegistrations
IOAppleConvergedIPCICEBBUserClient__deregisterTimeEvent_unsigned_int__unsigned_long_long
IOAppleConvergedIPCICEBBUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
IOAppleConvergedIPCICEBBUserClient__findTimeEventRegistration_unsigned_int__unsigned_int
IOAppleConvergedIPCICEBBUserClient__free
IOAppleConvergedIPCICEBBUserClient__registerTimeEvent_unsigned_int__unsigned_long_long
IOAppleConvergedIPCICEBBUserClient__timesync_unsigned_int__unsigned_int__unsigned_long_long__unsigned_int__IOACIPCCompletion
IOAppleConvergedIPCIOCommand::MetaClass::alloc(void)
IOAppleConvergedIPCIOCommand::cancel(void)
IOAppleConvergedIPCIOCommand::cleanCommandParamters(void)
IOAppleConvergedIPCIOCommand::complete(uint *,uint *,uint *)
IOAppleConvergedIPCIOCommand::complete(uint *,uint *,uint *)
IOAppleConvergedIPCIOCommand::finish(void)
IOAppleConvergedIPCIOCommand::free(void)
IOAppleConvergedIPCIOCommand::free(void)
IOAppleConvergedIPCIOCommand::setIO(ulong long,bool,bool,acipcIOQueue *)
IOAppleConvergedIPCIOCommand::setIO(ulong long,ulong long,ulong long,bool,bool,acipcIOQueue *)
IOAppleConvergedIPCIOCommand::setIO(ulong long,ulong long,ulong long,bool,bool,acipcIOQueue *)
IOAppleConvergedIPCIOCommand::withInfo(IOAppleConvergedIPCIOCommandPool *,IOAppleConvergedIPCMemoryPolicy *,ulong long,ulong long,IOAppleConvergedIPCLogger *)
IOAppleConvergedIPCIOCommandPool::allocateReturnCommand(void)
IOAppleConvergedIPCIOCommandPool::free(void)
IOAppleConvergedIPCIOCommandPool::initWithInfo(IOWorkLoop *,ulong long,IOAppleConvergedIPCMemoryPolicyInfo *,IOAppleConvergedIPCLogger *)
IOAppleConvergedIPCIOCommandPool::withInfo(IOWorkLoop *,ulong long,IOAppleConvergedIPCMemoryPolicyInfo *,IOAppleConvergedIPCLogger *)
IOAppleConvergedIPCIOCommand__initWithInfo_IOAppleConvergedIPCIOCommandPool___IOAppleConvergedIPCMemoryPolicy___unsigned_long_long__unsigned_long_long__IOAppleConvergedIPCLogger
IOAppleConvergedIPCIOCommand__initWithPool_IOAppleConvergedIPCIOCommandPool___IOAppleConvergedIPCLogger
IOAppleConvergedIPCIOCommand__prepare_IOACIPCCompletion___IOAppleConvergedIPCIOCommand
IOAppleConvergedIPCIOCommand__prepare_IOMemoryDescriptor___unsigned_long_long__unsigned_long_long__IOACIPCFooter___AppleConvergedIPCIODirection__IOAppleConvergedIPCIOCommand
IOAppleConvergedIPCInterface::IOAppleConvergedIPCInterface(OSMetaClass const*)
IOAppleConvergedIPCInterface::MetaClass::alloc(void)
IOAppleConvergedIPCInterface::compareProp(OSDictionary *,OSSymbol const*)
IOAppleConvergedIPCInterface::getCommandGate(void)
IOAppleConvergedIPCInterface::getMaxChunkSize(void)
IOAppleConvergedIPCInterface::matchPropertyTable(OSDictionary *,int *)
IOAppleConvergedIPCMemoryPolicy::MetaClass::alloc(void)
IOAppleConvergedIPCMemoryPolicy::allocatePrepareMemory(void)
IOAppleConvergedIPCMemoryPolicy::clearDMATransfer(void)
IOAppleConvergedIPCMemoryPolicy::completeMemory(void)
IOAppleConvergedIPCMemoryPolicy::createWithOptions(IOAppleConvergedIPCMemoryPolicy::Options *)
IOAppleConvergedIPCMemoryPolicy::free(void)
IOAppleConvergedIPCMemoryPolicy::free(void)
IOAppleConvergedIPCMemoryPolicy::getPhysicalAddress(ulong long *)
IOAppleConvergedIPCMemoryPolicy::getVirtualAddress(ulong long *)
IOAppleConvergedIPCMemoryPolicy::prepareDMATransfer(IOMemoryDescriptor *)
IOAppleConvergedIPCMemoryPolicy::prepareMemory(IOMemoryDescriptor *,bool)
IOAppleConvergedIPCMemoryPolicy::updateUse(bool)
IOAppleConvergedIPCMemoryPolicy::updateUse(bool)
IOAppleConvergedIPCMemoryPolicyInfo::MetaClass::alloc(void)
IOAppleConvergedIPCMemoryPolicyInfo::createWithOptions(IOAppleConvergedIPCMemoryPolicyInfo::Options *)
IOAppleConvergedIPCMemoryPolicyInfo::free(void)
IOAppleConvergedIPCMemoryPolicyInfo::free(void)
IOAppleConvergedIPCMemoryPolicyInfo::setMapper(IOMapper *)
IOAppleConvergedIPCMemoryPolicyInfo__addNode_IOAppleConvergedIPCMemoryPolicy___unsigned_long_long
IOAppleConvergedIPCMemoryPolicyInfo__initWithOptions_IOAppleConvergedIPCMemoryPolicyInfo__Options
IOAppleConvergedIPCMemoryPolicyInfo__moveNode_bool__IOAppleConvergedIPCMemoryPolicy
IOAppleConvergedIPCMemoryPolicyInfo__removeNode_IOAppleConvergedIPCMemoryPolicy___unsigned_long_long
IOAppleConvergedIPCMemoryPolicy__initWithOptions_IOAppleConvergedIPCMemoryPolicy__Options
IOAppleConvergedIPCPool::IOAppleConvergedIPCPool(OSMetaClass const*)
IOAppleConvergedIPCPool::free(void)
IOAppleConvergedIPCPool::gatedReturnCommand(IOCommand *)
IOAppleConvergedIPCPool::gatedStop(void)
IOAppleConvergedIPCPool::getCommand(bool)
IOAppleConvergedIPCPool::initWithWorkLoop(IOWorkLoop *)
IOAppleConvergedIPCPool::returnCommand(IOCommand *)
IOAppleConvergedIPCPool::stop(void)
IOAppleConvergedIPCPool__initWithInfo_IOWorkLoop___IOAppleConvergedIPCLogger
IOAppleConvergedIPCRTIDevice::allocCRParams(void)
IOAppleConvergedIPCRTIDevice::allocDeviceParams(void)
IOAppleConvergedIPCRTIDevice::allocMappedIO(acipcMappedIO *)
IOAppleConvergedIPCRTIDevice::allocateDeviceMemory(void)
IOAppleConvergedIPCRTIDevice::allocatePipeMemory(OSArray *,uint)
IOAppleConvergedIPCRTIDevice::assignPipeMemory(ulong long *,ulong long *,uint)
IOAppleConvergedIPCRTIDevice::asyncCallMain(void)
IOAppleConvergedIPCRTIDevice::bootStageChangeFunction(uint)
IOAppleConvergedIPCRTIDevice::bootStageChangeFunction(uint)
IOAppleConvergedIPCRTIDevice::cachedCRParams(uint)
IOAppleConvergedIPCRTIDevice::clearDeviceParams(acipcRTIDeviceParams *)
IOAppleConvergedIPCRTIDevice::closeCompletionRing(uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIDevice::collectSnapshot(IOMemoryDescriptor *,uint,IOACIPCCompletion *)
IOAppleConvergedIPCRTIDevice::computeDeviceMemory(void)
IOAppleConvergedIPCRTIDevice::computeDeviceMemory(void)
IOAppleConvergedIPCRTIDevice::computePipeMemory(OSArray *,uint)
IOAppleConvergedIPCRTIDevice::computePipeMemory(OSArray *,uint)
IOAppleConvergedIPCRTIDevice::createPools(void)
IOAppleConvergedIPCRTIDevice::createSetupDevice(void)
IOAppleConvergedIPCRTIDevice::createSetupInterface(OSArray *,uint,uint)
IOAppleConvergedIPCRTIDevice::createSetupInterfaces(uint)
IOAppleConvergedIPCRTIDevice::createSetupInterfaces(uint)
IOAppleConvergedIPCRTIDevice::deregisterMSIEventCallback(ushort,void *)
IOAppleConvergedIPCRTIDevice::deregisterMemoryEventCallback(ushort,void *)
IOAppleConvergedIPCRTIDevice::deregisterTimeEventCallback(uint,void *)
IOAppleConvergedIPCRTIDevice::free(void)
IOAppleConvergedIPCRTIDevice::freeContinuousCompletionTable(uint,uint)
IOAppleConvergedIPCRTIDevice::freeContinuousCompletionTable(uint,uint)
IOAppleConvergedIPCRTIDevice::freeDeviceMemory(void)
IOAppleConvergedIPCRTIDevice::freeMappedIO(void *)
IOAppleConvergedIPCRTIDevice::freePipeMemory(void)
IOAppleConvergedIPCRTIDevice::getCompletionCount(uint)
IOAppleConvergedIPCRTIDevice::getCompletionCount(uint)
IOAppleConvergedIPCRTIDevice::getContinuousCompletionTable(uint,uint *)
IOAppleConvergedIPCRTIDevice::getContinuousCompletionTable(uint,uint *)
IOAppleConvergedIPCRTIDevice::getIOCommand(ulong long,bool)
IOAppleConvergedIPCRTIDevice::getInitialBootStage(void)
IOAppleConvergedIPCRTIDevice::getMSIRange(IOACIPCMSIRange **,uint *,uint)
IOAppleConvergedIPCRTIDevice::getPipeProperties(uint)
IOAppleConvergedIPCRTIDevice::getRTIDeviceDict(void)
IOAppleConvergedIPCRTIDevice::isCompletionRingOpen(uint)
IOAppleConvergedIPCRTIDevice::isCompletionRingOpen(uint)
IOAppleConvergedIPCRTIDevice::isTypeNoCopyMemoryCommand(ulong long)
IOAppleConvergedIPCRTIDevice::mapSharedMemory(IOMemoryDescriptor *,ushort,IOACIPCSharedMemoryOptions *)
IOAppleConvergedIPCRTIDevice::notifySharedMemory(ushort,IOACIPCSharedMemoryOptions *)
IOAppleConvergedIPCRTIDevice::openCloseCompletion(bool,uint,uint)
IOAppleConvergedIPCRTIDevice::openCloseCompletion(bool,uint,uint)
IOAppleConvergedIPCRTIDevice::openCompletionRing(uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIDevice::setupDeviceParams(acipcRTIDeviceParams *)
IOAppleConvergedIPCRTIDevice::setupDeviceParams(acipcRTIDeviceParams *)
IOAppleConvergedIPCRTIDevice::sharedMemoryCompletion(void ( {block_pointer})(int),int)
IOAppleConvergedIPCRTIDevice::sleepStateChangeFunction(uint)
IOAppleConvergedIPCRTIDevice::snapshotCompletionFunction(int,uint,uint)
IOAppleConvergedIPCRTIDevice::snapshotCompletionFunction(int,uint,uint)
IOAppleConvergedIPCRTIDevice::start(IOService *)
IOAppleConvergedIPCRTIDevice::stop(IOService *)
IOAppleConvergedIPCRTIDevice::stop(IOService *)
IOAppleConvergedIPCRTIDevice::synthesizeCRParams(uint,IOACIPCRingOptions *,acipcRTICRParams *)
IOAppleConvergedIPCRTIDevice::synthesizeCRParams(uint,IOACIPCRingOptions *,acipcRTICRParams *)
IOAppleConvergedIPCRTIDevice::teardownPools(void)
IOAppleConvergedIPCRTIDevice::terminate(uint)
IOAppleConvergedIPCRTIDevice::terminateGated(uint,bool *)
IOAppleConvergedIPCRTIDevice::terminateInterfaces(void)
IOAppleConvergedIPCRTIDevice::timerFunction(void (*)(void *,void *),ulong long,void *,void *)
IOAppleConvergedIPCRTIDevice::trapCompletionCallbackGated(int)
IOAppleConvergedIPCRTIDevice::trapCompletionCallbackGated(int)
IOAppleConvergedIPCRTIDevice::triggerAsync(bool,IOCommandGate *,void (*)(void *,void *),void *,void *)
IOAppleConvergedIPCRTIDevice::unmapSharedMemory(ushort,IOACIPCSharedMemoryOptions *)
IOAppleConvergedIPCRTIDevice::updateSharedMemory(ushort,IOACIPCSharedMemoryOptions *)
IOAppleConvergedIPCRTIDevice__fn_0x5a0
IOAppleConvergedIPCRTIDevice__fn_0x5b0
IOAppleConvergedIPCRTIDevice__fn_0x5e8
IOAppleConvergedIPCRTIDevice__fn_0x608
IOAppleConvergedIPCRTIDevice__fn_0x638
IOAppleConvergedIPCRTIDevice__fn_0x648
IOAppleConvergedIPCRTIDevice__fn_0x658
IOAppleConvergedIPCRTIDevice__fn_0x668
IOAppleConvergedIPCRTIInterface::MetaClass::alloc(void)
IOAppleConvergedIPCRTIInterface::abortMessageCallback(void *,int)
IOAppleConvergedIPCRTIInterface::abortMessageCallback(void *,int)
IOAppleConvergedIPCRTIInterface::abortTransferRing(uint,void ( {block_pointer})(int))
IOAppleConvergedIPCRTIInterface::abortTransferRing(uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIInterface::allocPipe(void)
IOAppleConvergedIPCRTIInterface::allocPipeParams(void)
IOAppleConvergedIPCRTIInterface::asyncCompletion(uint)
IOAppleConvergedIPCRTIInterface::asyncCompletion(uint)
IOAppleConvergedIPCRTIInterface::asyncFunction(uint,void (*)(void *,void *),void *,void *)
IOAppleConvergedIPCRTIInterface::clearCompletionSignalCallGated(AppleConvergedIPCRingType,int,void *)
IOAppleConvergedIPCRTIInterface::clearCompletionSignalCallGated(AppleConvergedIPCRingType,int,void *)
IOAppleConvergedIPCRTIInterface::clearEnqueueSignal(uint,void *)
IOAppleConvergedIPCRTIInterface::clearEnqueueSignalCallGated(int,void *)
IOAppleConvergedIPCRTIInterface::clearEnqueueSignalCallGated(int,void *)
IOAppleConvergedIPCRTIInterface::close(IOService *,uint)
IOAppleConvergedIPCRTIInterface::closeCompletionRings(bool)
IOAppleConvergedIPCRTIInterface::closeGated(IOService *,uint)
IOAppleConvergedIPCRTIInterface::closeRing(AppleConvergedIPCRingType,uint,void ( {block_pointer})(int))
IOAppleConvergedIPCRTIInterface::closeRing(AppleConvergedIPCRingType,uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIInterface::closeRingGated(AppleConvergedIPCRingType,IOAppleConvergedIPCRTIInterface::tParams *)
IOAppleConvergedIPCRTIInterface::closeTransferRing(uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIInterface::closeTransferRings(bool)
IOAppleConvergedIPCRTIInterface::completeACIPCIO(IOACIPCDescriptor **,IOMemoryDescriptor **,IOACIPCFooter **,IOACIPCCompletionStatus **,uint *,uint *)
IOAppleConvergedIPCRTIInterface::crCompletionSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::crCompletionSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::createRingSourceGated(AppleConvergedIPCRingType,uint,IOACIPCRingOptions *,IOAppleConvergedIPCRing **)
IOAppleConvergedIPCRTIInterface::createRingSourceGated(AppleConvergedIPCRingType,uint,IOACIPCRingOptions *,IOAppleConvergedIPCRing **)
IOAppleConvergedIPCRTIInterface::createSetupInterface(void)
IOAppleConvergedIPCRTIInterface::createSetupInterface(void)
IOAppleConvergedIPCRTIInterface::createWithInfo(uint,IOAppleConvergedIPCLogger *)
IOAppleConvergedIPCRTIInterface::deregisterMSIEventCallback(ushort,void *)
IOAppleConvergedIPCRTIInterface::deregisterMemoryEventCallback(ushort,void *)
IOAppleConvergedIPCRTIInterface::deregisterTimeEventCallback(uint,void *)
IOAppleConvergedIPCRTIInterface::enqueueIOsGated(int,IOACIPCDescriptor **,uint *)
IOAppleConvergedIPCRTIInterface::enqueueSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::enqueueSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::errorFunction(uint,void *,void *)
IOAppleConvergedIPCRTIInterface::free(void)
IOAppleConvergedIPCRTIInterface::free(void)
IOAppleConvergedIPCRTIInterface::freeContiuousCompletionTable(AppleConvergedIPCRingType,uint,uint,void *)
IOAppleConvergedIPCRTIInterface::getCompletionCount(AppleConvergedIPCRingType,uint,void *)
IOAppleConvergedIPCRTIInterface::getContinuousCompletionTable(AppleConvergedIPCRingType,uint,uint *,void *)
IOAppleConvergedIPCRTIInterface::getIOMMUPageSize(uint *)
IOAppleConvergedIPCRTIInterface::getMaxChunkSize(void)
IOAppleConvergedIPCRTIInterface::getRingProperties(AppleConvergedIPCRingType)
IOAppleConvergedIPCRTIInterface::maxFooterSize(int)
IOAppleConvergedIPCRTIInterface::maxHeaderSize(int)
IOAppleConvergedIPCRTIInterface::open(IOService *,uint,void *)
IOAppleConvergedIPCRTIInterface::openCloseMessageCallback(void *,int)
IOAppleConvergedIPCRTIInterface::openCloseMessageCallback(void *,int)
IOAppleConvergedIPCRTIInterface::openCompletionRings(bool)
IOAppleConvergedIPCRTIInterface::openGated(IOService *,uint,void *)
IOAppleConvergedIPCRTIInterface::openRing(AppleConvergedIPCRingType,uint,void ( {block_pointer})(int))
IOAppleConvergedIPCRTIInterface::openRing(AppleConvergedIPCRingType,uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIInterface::openRingGated(AppleConvergedIPCRingType,IOAppleConvergedIPCRTIInterface::tParams *)
IOAppleConvergedIPCRTIInterface::openTransferRing(uint,void *,void (*)(void *,void *,int),void *)
IOAppleConvergedIPCRTIInterface::openTransferRings(bool)
IOAppleConvergedIPCRTIInterface::pipeOpenCloseDone(uint,bool,bool)
IOAppleConvergedIPCRTIInterface::pipeOpenCloseDone(uint,bool,bool)
IOAppleConvergedIPCRTIInterface::pollRingGated(AppleConvergedIPCRingType,uint)
IOAppleConvergedIPCRTIInterface::prepareACIPCIO(IOMemoryDescriptor **,IOACIPCFooter **,void **,IOACIPCDescriptor **,uint *,uint *,AppleConvergedIPCIODirection,bool)
IOAppleConvergedIPCRTIInterface::prepareACIPCIO(IOMemoryDescriptor **,IOACIPCFooter **,void **,IOACIPCDescriptor **,uint *,uint *,AppleConvergedIPCIODirection,bool)
IOAppleConvergedIPCRTIInterface::queryFreeDescriptors(uint)
IOAppleConvergedIPCRTIInterface::queryFreeDescriptors(uint)
IOAppleConvergedIPCRTIInterface::registerMSIEventCallback(ushort,void (*)(void *,void *),void *,void *,void **)
IOAppleConvergedIPCRTIInterface::registerMemoryEventCallback(ushort,void (*)(void *,void *,ulong long,void *,ulong),void *,void *,void **)
IOAppleConvergedIPCRTIInterface::registerTimeEventCallback(uint,void (*)(void *,void *,uint,ulong long,uint,void *,ulong),void *,void *,void **)
IOAppleConvergedIPCRTIInterface::setCompletionSignalCallGated(AppleConvergedIPCRingType,int,IOAppleConvergedIPCRTIInterface::signalingInfo *,void **)
IOAppleConvergedIPCRTIInterface::setCompletionSignalCallGated(AppleConvergedIPCRingType,int,IOAppleConvergedIPCRTIInterface::signalingInfo *,void **)
IOAppleConvergedIPCRTIInterface::setEnqueueSignalCallGated(int,IOAppleConvergedIPCRTIInterface::signalingInfo *,void **)
IOAppleConvergedIPCRTIInterface::setEnqueueSignalCallback(uint,void *,void (*)(void *,uint,void *),void *,void **)
IOAppleConvergedIPCRTIInterface::setupPipe(uint,OSDictionary *)
IOAppleConvergedIPCRTIInterface::setupPipe(uint,OSDictionary *)
IOAppleConvergedIPCRTIInterface::start(IOService *)
IOAppleConvergedIPCRTIInterface::start(IOService *)
IOAppleConvergedIPCRTIInterface::stop(IOService *)
IOAppleConvergedIPCRTIInterface::stop(IOService *)
IOAppleConvergedIPCRTIInterface::synthesizePipeParams(uint,IOACIPCRingOptions *,acipcRTIPipeParams *)
IOAppleConvergedIPCRTIInterface::synthesizePipeParams(uint,IOACIPCRingOptions *,acipcRTIPipeParams *)
IOAppleConvergedIPCRTIInterface::terminate(uint)
IOAppleConvergedIPCRTIInterface::terminate(uint)
IOAppleConvergedIPCRTIInterface::trCompletionSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::trCompletionSignalDispatcher(uint,uint)
IOAppleConvergedIPCRTIInterface::transferRingDirection(int)
IOAppleConvergedIPCRTIInterface::userLogKnob(void *,void *)
IOAppleConvergedIPCRTIInterface::waitForTransferRingOpenClose(uint)
IOAppleConvergedIPCRTIInterface::waitForTransferRingOpenClose(uint)
IOAppleConvergedIPCRTIInterface__abortTransferRingGated_IOAppleConvergedIPCRTIInterface__tParams
IOAppleConvergedIPCRTIInterface__closeTransferRingGated_IOAppleConvergedIPCRTIInterface__tParams
IOAppleConvergedIPCRTIInterface__copyPipeParams_acipcRTIPipeParams___acipcRTIPipeParams
IOAppleConvergedIPCRTIInterface__fn_0x568
IOAppleConvergedIPCRTIInterface__fn_0x570
IOAppleConvergedIPCRTIInterface__fn_0x5c0
IOAppleConvergedIPCRTIInterface__fn_0x5c8
IOAppleConvergedIPCRTIInterface__fn_0x5d0
IOAppleConvergedIPCRTIInterface__fn_0x5e0
IOAppleConvergedIPCRTIInterface__fn_0x610
IOAppleConvergedIPCRTIInterface__fn_0x618
IOAppleConvergedIPCRTIInterface__fn_0x620
IOAppleConvergedIPCRTIInterface__fn_0x628
IOAppleConvergedIPCRTIInterface__fn_0x668
IOAppleConvergedIPCRTIInterface__fn_0x670
IOAppleConvergedIPCRTIInterface__fn_0x678
IOAppleConvergedIPCRTIInterface__fn_0x680
IOAppleConvergedIPCRTIInterface__fn_0x690
IOAppleConvergedIPCRTIInterface__fn_0x6a8
IOAppleConvergedIPCRTIInterface__fn_0x6c0
IOAppleConvergedIPCRTIInterface__initWithInfo_unsigned_int__IOAppleConvergedIPCLogger
IOAppleConvergedIPCRTIInterface__openTransferRingGated_IOAppleConvergedIPCRTIInterface__tParams
IOAppleConvergedIPCRTIInterface__pollRingGated_AppleConvergedIPCRingType__unsigned_int
IOAppleConvergedIPCRing::checkForWork(void)
IOAppleConvergedIPCRing::completionSignal(uint,void *)
IOAppleConvergedIPCRing::dequeueGated(void)
IOAppleConvergedIPCRing::disable(void)
IOAppleConvergedIPCRing::enable(void)
IOAppleConvergedIPCRing::requestDequeue(void)
IOAppleConvergedIPCRing::setWorkLoop(IOWorkLoop *)
IOAppleConvergedIPCRing::setWorkLoop(IOWorkLoop *)
IOAppleConvergedIPCTransferRing::MetaClass::alloc(void)
IOAppleConvergedIPCTransferRing::dequeueGated(void)
IOAppleConvergedIPCTransferRing::dequeueGated(void)
IOAppleConvergedIPCTransferRing::enqueueGated(void)
IOAppleConvergedIPCTransferRing::enqueueGated(void)
IOAppleConvergedIPCTransferRing::enqueueSignal(uint,void *)
IOAppleConvergedIPCTransferRing::free(void)
IOAppleConvergedIPCTransferRing::free(void)
IOAppleConvergedIPCTransferRing::initWithOptions(uint,IOAppleConvergedIPCInterface *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *,int ( {block_pointer})(IOACIPCDescriptor **,uint *),int ( {block_pointer})(IOACIPCDescriptor **,uint *))
IOAppleConvergedIPCTransferRing::requestEnqueue(void)
IOAppleConvergedIPCTransferRing::requestEnqueue(void)
IOAppleConvergedIPCTransferRing::withOptions(uint,IOAppleConvergedIPCInterface *,int ( {block_pointer})(IOACIPCDescriptor **,uint *),int ( {block_pointer})(IOACIPCDescriptor **,uint *))
IOAppleConvergedIPCTransferRing::withOptions(uint,IOAppleConvergedIPCInterface *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *,int (*)(void *,IOACIPCDescriptor **,uint *,void *),void *,void *)
IOAppleConvergedIPCUserClient::IOAppleConvergedIPCUserClient(OSMetaClass const*)
IOAppleConvergedIPCUserClient::MetaClass::alloc(void)
IOAppleConvergedIPCUserClient::_abortTransferRing(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_close(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_generateNonce(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_io(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_mapSharedMemory(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_notifySharedMemory(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_open(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_queryIOMMUPageSize(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_queryTransferCredit(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_registerRead(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_sendImage(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_unmapSharedMemory(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::_updateSharedMemory(IOAppleConvergedIPCUserClient*,void *,IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::abortIOQueue(IOAppleConvergedIPCUserClient::ioQueueHead *)
IOAppleConvergedIPCUserClient::abortTransferRing(IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::clientClose(void)
IOAppleConvergedIPCUserClient::clientCloseGated(void)
IOAppleConvergedIPCUserClient::close(IOService *,uint)
IOAppleConvergedIPCUserClient::closeGated(IOService *,uint)
IOAppleConvergedIPCUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAppleConvergedIPCUserClient::free(void)
IOAppleConvergedIPCUserClient::free(void)
IOAppleConvergedIPCUserClient::generateNonce(void)
IOAppleConvergedIPCUserClient::imageComplete(void *,void *,int,ulong long,void *)
IOAppleConvergedIPCUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAppleConvergedIPCUserClient::io(ulong long,ulong long,ulong long,ulong long,IOACIPCUserClientAsyncParamBlock *,uint)
IOAppleConvergedIPCUserClient::ioComplete(void *,void *,int,ulong long,void *)
IOAppleConvergedIPCUserClient::mapSharedMemory(IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::notifySharedMemory(IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::open(IOService *,uint,void *)
IOAppleConvergedIPCUserClient::openGated(IOService *,uint,void *)
IOAppleConvergedIPCUserClient::queryIOMMUPageSize(uint *)
IOAppleConvergedIPCUserClient::queryTransferCredit(uint,uint *)
IOAppleConvergedIPCUserClient::registerRead(uint,void *,uint *)
IOAppleConvergedIPCUserClient::sendImage(IOMemoryDescriptor *,ulong long *,uint)
IOAppleConvergedIPCUserClient::sendImage(ulong long,uint,IOACIPCCompletion *,uint)
IOAppleConvergedIPCUserClient::sendImage(void const*,uint,ulong long *,uint)
IOAppleConvergedIPCUserClient::start(IOService *)
IOAppleConvergedIPCUserClient::start(IOService *)
IOAppleConvergedIPCUserClient::unmapSharedMemory(IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::updateSharedMemory(IOExternalMethodArguments *)
IOAppleConvergedIPCUserClient::willTerminate(IOService *,uint)
IOAppleConvergedIPCUserClient::willTerminate(IOService *,uint)
IOAppleConvergedIPCUserClient__abortIOQueue_IOAppleConvergedIPCUserClient__ioQueueHead
IOAppleConvergedIPCUserClient__io_IOMemoryDescriptor___IOMemoryDescriptor___IOACIPCUserClientAsyncParamBlock___unsigned_int
IOAppleConvergedPCI::IOAppleConvergedPCI(OSMetaClass const*)
IOAppleConvergedPCI::MetaClass::alloc(void)
IOAppleConvergedPCI::closeService(IOService *)
IOAppleConvergedPCI::closeServiceGated(IOService *)
IOAppleConvergedPCI::enableASPM(bool)
IOAppleConvergedPCI::enableEndpointASPM(bool)
IOAppleConvergedPCI::enableL1SSPostROM(void)
IOAppleConvergedPCI::enableL1SSPostROMGated(void)
IOAppleConvergedPCI::flr(void)
IOAppleConvergedPCI::free(void)
IOAppleConvergedPCI::gatherEPConfigRegSpace(void)
IOAppleConvergedPCI::getBridge(void)
IOAppleConvergedPCI::getInLowPower(void)
IOAppleConvergedPCI::isDeviceAccessible(void)
IOAppleConvergedPCI::isDeviceAccessibleGated(void)
IOAppleConvergedPCI::mapBar(ulong long *,ulong long *,uint *,uint *)
IOAppleConvergedPCI::mapBarGated(ulong long *,ulong long *,uint *,uint *)
IOAppleConvergedPCI::notifyTerminateAck(IOService *)
IOAppleConvergedPCI::notifyTerminateAckGated(IOService *)
IOAppleConvergedPCI::openService(IOService *)
IOAppleConvergedPCI::openServiceGated(IOService *)
IOAppleConvergedPCI::registerAER(OSObject *,void (*)(OSObject *,IOPCIEventSource *,IOPCIEvent const*))
IOAppleConvergedPCI::registerMSI(uchar,OSObject *,void (*)(OSObject *,IOInterruptEventSource *,int))
IOAppleConvergedPCI::registerWorkLoop(IOWorkLoop *)
IOAppleConvergedPCI::registerWorkLoop(IOWorkLoop *)
IOAppleConvergedPCI::restoreDeviceState(uint)
IOAppleConvergedPCI::restoreDeviceStateGated(uint)
IOAppleConvergedPCI::saveDeviceState(uint)
IOAppleConvergedPCI::saveDeviceStateGated(uint)
IOAppleConvergedPCI::serialEPConfigRead(IOPCIDevice *,ulong long,uint *,uint)
IOAppleConvergedPCI::setPowerState(ulong,IOService *)
IOAppleConvergedPCI::setPowerStateGated(ulong,IOService *)
IOAppleConvergedPCI::setupVendorSpecificConfig(void)
IOAppleConvergedPCI::start(IOService *)
IOAppleConvergedPCI::stop(IOService *)
IOAppleConvergedPCI::unmapBar(void)
IOAppleConvergedPCI::unmapBarGated(void)
IOAppleConvergedPCI::validateMSIIndex(uchar)
IOAppleConvergedPCI::willTerminate(IOService *,uint)
IOAppleConvergedPCI::willTerminateGated(IOService *,uint)
IOAppleConvergedPCI::willTerminateGated(IOService *,uint)
IOAppleConvergedPCI::~IOAppleConvergedPCI()
IOAppleConvergedPCI__setLogger_IOAppleConvergedIPCLogger
IOApplePartitionScheme::MetaClass::alloc(void)
IOApplePartitionScheme::free(void)
IOApplePartitionScheme::init(OSDictionary *)
IOApplePartitionScheme::instantiateDesiredMediaObject(dpme *,uint,uint)
IOApplePartitionScheme::instantiateMediaObject(dpme *,uint,uint)
IOApplePartitionScheme::isPartitionCorrupt(dpme *,uint,uint)
IOApplePartitionScheme::isPartitionInvalid(dpme *,uint,uint)
IOApplePartitionScheme::probe(IOService *,int *)
IOApplePartitionScheme::requestProbe(uint)
IOApplePartitionScheme::scan(int *)
IOApplePartitionScheme::start(IOService *)
IOApplePartitionScheme::stop(IOService *)
IOApplePartitionScheme::~IOApplePartitionScheme()
IOArgumentInit(IOExternalMethodArguments *,out_struct_data *,in_struct_data *)
IOAsynchronousScheduler::MetaClass::alloc(void)
IOAsynchronousScheduler::abortThread(uint)
IOAsynchronousScheduler::checkAndQueueArgument(IOAsynchronousScheduler::ArgumentEntry *)
IOAsynchronousScheduler::createArgumentEntry(void)
IOAsynchronousScheduler::free(void)
IOAsynchronousScheduler::free(void)
IOAsynchronousScheduler::go(int (*)(void *,void *,void *,void *),uint *,bool,void *,void *,void *,void *)
IOAsynchronousScheduler::init(void)
IOAsynchronousScheduler::ioAsynchronousScheduler(int (*)(void *,void *,void *,void *))
IOAsynchronousScheduler::joinThread(uint,uint)
IOAsynchronousScheduler::notifyThread(uint,void *,void *,void *,void *)
IOAsynchronousScheduler::performActions_gated(void)
IOAsynchronousScheduler::performActions_gated(void)
IOAsynchronousScheduler::prepareThreadWithAction(int (*)(void *,void *,void *,void *),uint *,void *,void *,void *,void *)
IOAsynchronousScheduler::releaseArgumentEntry(IOAsynchronousScheduler::ArgumentEntry *,bool)
IOAsynchronousScheduler::releaseArgumentEntry(IOAsynchronousScheduler::ArgumentEntry *,bool)
IOAsynchronousScheduler::sleepForPointer(void *,uint)
IOAsynchronousScheduler::softwareInterruptOccurred(void)
IOAsynchronousScheduler::startThread(uint *,void *,void *,void *,void *)
IOAsynchronousScheduler::startThreadWithAction(int (*)(void *,void *,void *,void *),uint *,void *,void *,void *,void *)
IOAsynchronousScheduler::~IOAsynchronousScheduler()
IOAudio2ControlDictionary::copyLevelControlRangeMap(OSDictionary *)
IOAudio2ControlDictionary::create(uint,uint,uint,uint,uint,bool,uint,OSString *)
IOAudio2ControlDictionary::createBooleanControl(uint,uint,uint,uint,uint,bool,bool,uint,OSString *)
IOAudio2ControlDictionary::createLevelControl(uint,uint,uint,uint,uint,uint,OSArray *,uint,bool,uint,OSString *)
IOAudio2ControlDictionary::createLevelControlRangeMapItem(uint,long long,uint,long long)
IOAudio2ControlDictionary::createLevelControlSimpleRange(uint,uint,uint,uint,uint,uint,uint,long long,uint,long long,uint,bool,uint,OSString *)
IOAudio2ControlDictionary::createMultiSelectorControl(uint,uint,uint,uint,uint,OSArray *,OSArray *,bool,uint,OSString *)
IOAudio2ControlDictionary::createSelectorControl(uint,uint,uint,uint,uint,uint,OSArray *,bool,uint,OSString *)
IOAudio2ControlDictionary::createSelectorControlSelectorMapItem(uint,OSString *)
IOAudio2ControlDictionary::createSliderControl(uint,uint,uint,uint,uint,uint,uint,uint,bool,uint,OSString *)
IOAudio2ControlDictionary::getControlByID(OSArray *,uint)
IOAudio2ControlDictionary::getLevelControlRangeByIndex(OSArray *,uint,uint &,long long &,uint &,long long &)
IOAudio2ControlDictionary::getLevelControlSimpleRange(OSDictionary *,uint &,long long &,uint &,long long &)
IOAudio2ControlDictionary::getSliderControlRange(OSDictionary *,uint &,uint &)
IOAudio2ControlDictionary::setBooleanControlPropertySelectors(OSDictionary *,uint)
IOAudio2ControlDictionary::setLevelControlPropertySelectors(OSDictionary *,uint,uint,uint,uint,uint,uint)
IOAudio2ControlDictionary::setLevelControlRangeMap(OSDictionary *,OSArray *)
IOAudio2ControlDictionary::setSelectorControlPropertySelectors(OSDictionary *,uint,uint,uint)
IOAudio2ControlDictionary::setSliderControlPropertySelectors(OSDictionary *,uint,uint)
IOAudio2DataExchangeBlockDictionary::create(uint)
IOAudio2Device::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOAudio2Device::clientWasClosed(IOAudio2DeviceUserClient *)
IOAudio2Device::createIOReporters(void)
IOAudio2Device::free(void)
IOAudio2Device::getIOEngineStatus(void)
IOAudio2Device::handleConfigChange(IOAudio2Notification *,ulong long)
IOAudio2Device::init(OSDictionary *)
IOAudio2Device::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOAudio2Device::registerNotificationPort(ipc_port *,uint,uint)
IOAudio2Device::requestConfigChange(uint,uint,ulong long,ulong long)
IOAudio2Device::sendMultiNotification(uint,IOAudio2Notification const*)
IOAudio2Device::sendSingleNotification(uint,uint,uint,uint,ulong long,ulong long)
IOAudio2Device::setProperties(OSObject *)
IOAudio2Device::start(IOService *)
IOAudio2Device::startIOEngine(void)
IOAudio2Device::startIOEngineWithFlags(uint,ulong long *)
IOAudio2Device::stop(IOService *)
IOAudio2Device::stopIOEngine(void)
IOAudio2Device::stopIOEngineWithFlags(uint,ulong long *)
IOAudio2Device::updateReport(IOReportChannelList *,uint,void *,void *)
IOAudio2DeviceUserClient::_clientClose(OSObject *,void *,void *,void *,void *)
IOAudio2DeviceUserClient::_clientMemoryForType(OSObject *,void *,void *,void *,void *)
IOAudio2DeviceUserClient::_externalMethod(OSObject *,void *,void *,void *,void *)
IOAudio2DeviceUserClient::_registerNotificationPort(OSObject *,void *,void *,void *,void *)
IOAudio2DeviceUserClient::clientCleanup(void)
IOAudio2DeviceUserClient::clientClose(void)
IOAudio2DeviceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOAudio2DeviceUserClient::doIO(bool,uint,uint,uint,uint,uint)
IOAudio2DeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOAudio2DeviceUserClient::free(void)
IOAudio2DeviceUserClient::getTargetAndMethodForIndex(IOService **,uint)
IOAudio2DeviceUserClient::getTargetAndTrapForIndex(IOService **,uint)
IOAudio2DeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAudio2DeviceUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOAudio2DeviceUserClient::start(IOService *)
IOAudio2DeviceUserClient::stop(IOService *)
IOAudio2Dictionary_getBoolean(OSDictionary *,char const*)
IOAudio2Dictionary_getUInt32(OSDictionary *,char const*)
IOAudio2Dictionary_getUInt64(OSDictionary *,char const*)
IOAudio2Dictionary_setBoolean(OSDictionary *,char const*,bool)
IOAudio2Dictionary_setUInt64(OSDictionary *,char const*,ulong long)
IOAudio2StreamDictionary::create(uint,uint,OSDictionary *,OSArray *)
IOAudio2StreamDictionary::create(uint,uint,uint,OSDictionary *,OSArray *)
IOAudio2StreamDictionary::getCurrentFormat(OSDictionary *,IOAudio2StreamBasicDescription &)
IOAudio2StreamDictionary::setCurrentFormat(OSDictionary *,IOAudio2StreamBasicDescription const&)
IOAudio2StreamFormatDictionary::IsSameSampleFormat(IOAudio2StreamBasicDescription const&,IOAudio2StreamBasicDescription const&)
IOAudio2StreamFormatDictionary::create(long long,uint,uint,uint,uint,uint,uint,uint)
IOAudio2StreamFormatDictionary::createRanged(long long,long long,uint,uint,uint,uint,uint,uint,uint)
IOAudio2StreamFormatDictionary::createRangedWithDescription(IOAudio2StreamRangedDescription const&)
IOAudio2StreamFormatDictionary::createRangedWithSimple60958AC3(long long,long long,bool)
IOAudio2StreamFormatDictionary::createRangedWithSimpleLinearPCM(long long,long long,uint,uint,uint,bool)
IOAudio2StreamFormatDictionary::createWithSimpleLinearPCM(long long,uint,uint,uint,bool)
IOAudio2StreamFormatDictionary::getDescription(OSDictionary *,IOAudio2StreamBasicDescription &)
IOAudio2StreamFormatDictionary::getRangedDescription(OSDictionary *,IOAudio2StreamRangedDescription &)
IOAudioCodecs::decryptFairPlayFrame(void *,uchar const*,uchar *,uint)
IOAudioCodecs::decryptFrame(void *,uint,uchar const*,uchar *,uint)
IOAudioCodecs::decryptKeyDeliveryFrame(void *,uint,uchar const*,uchar *,uint)
IOAudioCodecs::handleClose(IOService *,uint)
IOAudioCodecs::handleIsOpen(IOService const*)
IOAudioCodecs::handleOpen(IOService *,uint,void *)
IOAudioCodecs::initDecryptionServiceReference(void)
IOAudioCodecs::initFairPlayReference(void)
IOAudioCodecs::initKeyDeliveryReference(void)
IOAudioCodecs::start(IOService *)
IOAudioCodecs::stop(IOService *)
IOAudioCodecs::uninitDecryptionServiceReference(void)
IOAudioCodecsUserClient::Initialize(AudioStreamBasicDescription const&,AudioStreamBasicDescription const&)
IOAudioCodecsUserClient::IsClientOpened(void)
IOAudioCodecsUserClient::IsInitialized(void)
IOAudioCodecsUserClient::MetaClass::MetaClass(void)
IOAudioCodecsUserClient::ProcessFrame(ulong,ulong &,void *,ulong &)
IOAudioCodecsUserClient::Reset(void)
IOAudioCodecsUserClient::Uninitialize(void)
IOAudioCodecsUserClient::clientClose(void)
IOAudioCodecsUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOAudioCodecsUserClient::closeUserClient(void)
IOAudioCodecsUserClient::free(void)
IOAudioCodecsUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOAudioCodecsUserClient::openUserClient(void)
IOAudioCodecsUserClient::sCloseUserClient(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::sInitialize(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::sOpenUserClient(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::sProcessFrame(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::sReset(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::sUninitialize(IOAudioCodecsUserClient*,void *,IOExternalMethodArguments *)
IOAudioCodecsUserClient::setProperties(OSObject *)
IOAudioCodecsUserClient::start(IOService *)
IOAudioLevelControl::createVolumeControl(int,int,int,int,int,uint,char const*,uint,uint)
IOBasicOutputQueue::MetaClass::alloc(void)
IOBasicOutputQueue::dequeue(void)
IOBasicOutputQueue::dispatchNetworkDataNotification(void *,void *,IONetworkData *,uint)
IOBasicOutputQueue::enqueue(__mbuf *,void *)
IOBasicOutputQueue::flush(void)
IOBasicOutputQueue::free(void)
IOBasicOutputQueue::getSize(void)
IOBasicOutputQueue::handleNetworkDataAccess(IONetworkData *,uint,void *)
IOBasicOutputQueue::output(IOMbufQueue *,uint *)
IOBasicOutputQueue::service(uint)
IOBasicOutputQueue::serviceThread(void *)
IOBasicOutputQueue::setCapacity(uint)
IOBasicOutputQueue::start(void)
IOBasicOutputQueue::stop(void)
IOBasicOutputQueue::~IOBasicOutputQueue()
IOBigMemoryCursor::withSpecification(ulong long,ulong long,ulong long)
IOBioArrayQueue::free(void)
IOBioArrayQueue::getCount(void)
IOBioArrayQueue::init(char const*,uint,bool,bool)
IOBioArrayQueue::iterateObjects(bool ( {block_pointer})(OSObject *))
IOBioArrayQueue::osLogObject(OSObject *)
IOBioArrayQueue::osLogQueue(void)
IOBioArrayQueue::releaseAllObjects(void)
IOBioArrayQueue::releaseMatchingObjects(bool ( {block_pointer})(OSObject *,bool *),bool)
IOBioArrayQueue::releaseObjects(uint)
IOBioArrayQueue::removeMatchingObject(bool ( {block_pointer})(OSObject *),bool)
IOBioArrayQueue::removeObjectAtIndex(uint,bool)
IOBioPool::allocateItem(void)
IOBioPool::free(void)
IOBioPool::init(IOBioPoolItemFactory *,uint)
IOBioPool::returnItem(IOBioPoolItem *)
IOBioPoolItem::init(IOBioPool *)
IOBioPoolItem::release(void)
IOBioQueue::init(char const*)
IOBioQueue::isFull(void)
IOBioSEPSharedBuffer::free(void)
IOBioSEPSharedBuffer::init(IOBioPool *,kern_allocation_name *,ulong,AppleSEPGenericTransfer *)
IOBioSEPSharedBufferFactory::free(void)
IOBioSEPSharedBufferFactory::init(kern_allocation_name *,ulong,AppleSEPGenericTransfer *)
IOBioShareableMemoryObject::getShareableMemory(void)
IOBioSharedMemoryTransferQueue::dequeueObject(bool)
IOBioSharedMemoryTransferQueue::enqueueObject(OSObject *,bool)
IOBioSharedMemoryTransferQueue::getCount(uint)
IOBioSharedMemoryTransferQueue::init(char const*,uint)
IOBioSharedMemoryTransferQueue::osLogObject(IOBioShareableMemoryObject *,uint)
IOBioSharedMemoryTransferQueue::osLogQueue(uint)
IOBioSharedMemoryTransferQueue::releaseAllObjects(uint)
IOBioSharedMemoryTransferQueue::releaseObjects(uint,uint)
IOBioUtils::writeBytesToIOMD(IOMemoryDescriptor *,void const*,ulong,uint *)
IOBiometricService::bioMatchExpirationHandler(IOTimerEventSource *)
IOBiometricService::bioTokenExpirationHandler(IOTimerEventSource *)
IOBiometricService::cacheProtectedConfiguration(uint,bool)
IOBiometricService::cacheSysProtectedConfiguration(bool)
IOBiometricService::checkBioMatchTimer(CachedUserContext *,bool)
IOBiometricService::checkBiometricCommand(bm_cmd_t const*)
IOBiometricService::checkPasscodeInputTimer(CachedUserContext *,bool)
IOBiometricService::dropUnlockTokenCommandHandler(void)
IOBiometricService::enumCommandModeToString(command_mode_t)
IOBiometricService::forceBioLockout(int)
IOBiometricService::freeTimerEventSource(IOTimerEventSource **)
IOBiometricService::getCachedContextForUser(uint,bool)
IOBiometricService::getLastSharedMemoryTransfer(IOMemoryDescriptor **)
IOBiometricService::getNextSharedMemoryTransfer(IOMemoryDescriptor **)
IOBiometricService::isAtLeastOneEligibleForPrewarm(void)
IOBiometricService::isEnabledForIdentification(void)
IOBiometricService::isEnabledForUnlock(CachedUserContext const*)
IOBiometricService::lockCommandAccess(void)
IOBiometricService::lockItem(uint *,uint)
IOBiometricService::notifySharedMemoryTransfer(bool)
IOBiometricService::passcodeInputExpirationHandler(IOTimerEventSource *)
IOBiometricService::performCommand(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *)
IOBiometricService::performCommandGated(IOMemoryDescriptor *,IOMemoryDescriptor *,uint *)
IOBiometricService::powerOn(void)
IOBiometricService::resetTimer(IOTimerEventSource *,uint)
IOBiometricService::sendAutoBugCaptureEvent(ulong long)
IOBiometricService::start(IOService *)
IOBiometricService::stop(IOService *)
IOBiometricService::switchCommandMode(command_mode_t)
IOBiometricService::unlockCommandAccess(void)
IOBiometricService::unlockItem(uint *)
IOBiometricService::waitForEvent(void *,uint)
IOBiometricService::waitForEventWithTimeoutFromBoot(void *,ulong long)
IOBiometricUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOBiometricUserClient::free(void)
IOBlockStorageDevice::doSynchronize(ulong long,ulong long,uint)
IOBlockStorageDevice::getProperty(OSSymbol const*)
IOBlockStorageDevice::init(OSDictionary *)
IOBlockStorageDevice::setProperties(OSObject *)
IOBlockStorageDriver::MetaClass::alloc(void)
IOBlockStorageDriver::acceptNewMedia(void)
IOBlockStorageDriver::addToBytesTransferred(ulong long,ulong long,ulong long,bool)
IOBlockStorageDriver::allocateContext(void)
IOBlockStorageDriver::breakUpRequest(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,IOBlockStorageDriver::Context *)
IOBlockStorageDriver::breakUpRequestCompletion(void *,void *,int,ulong long)
IOBlockStorageDriver::breakUpRequestExecute(void *,void *)
IOBlockStorageDriver::checkForMedia(void)
IOBlockStorageDriver::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
IOBlockStorageDriver::deblockRequest(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,IOBlockStorageDriver::Context *)
IOBlockStorageDriver::deblockRequestCompletion(void *,void *,int,ulong long)
IOBlockStorageDriver::deblockRequestExecute(void *,void *)
IOBlockStorageDriver::decommissionMedia(bool)
IOBlockStorageDriver::deleteContext(IOBlockStorageDriver::Context *)
IOBlockStorageDriver::didTerminate(IOService *,uint,bool *)
IOBlockStorageDriver::ejectMedia(void)
IOBlockStorageDriver::executeRequest(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,IOBlockStorageDriver::Context *)
IOBlockStorageDriver::formatMedia(ulong long)
IOBlockStorageDriver::free(void)
IOBlockStorageDriver::getFormatCapacities(ulong long *,uint)
IOBlockStorageDriver::getProvisionStatus(IOService *,ulong long,ulong long,uint *,IOStorageProvisionExtent *,ulong long)
IOBlockStorageDriver::getStatistic(IOBlockStorageDriver::Statistics)
IOBlockStorageDriver::getStatistics(ulong long *,uint)
IOBlockStorageDriver::handleClose(IOService *,uint)
IOBlockStorageDriver::handleIsOpen(IOService const*)
IOBlockStorageDriver::handleOpen(IOService *,uint,void *)
IOBlockStorageDriver::handlePowerEvent(void *,void *,uint,IOService *,void *,ulong)
IOBlockStorageDriver::handleStart(IOService *)
IOBlockStorageDriver::incrementErrors(bool)
IOBlockStorageDriver::incrementRetries(bool)
IOBlockStorageDriver::init(OSDictionary *)
IOBlockStorageDriver::instantiateMediaObject(ulong long,ulong long,uint,char *)
IOBlockStorageDriver::mediaStateHasChanged(uint)
IOBlockStorageDriver::message(uint,IOService *,void *)
IOBlockStorageDriver::prepareRequest(ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOBlockStorageDriver::prepareRequestCompletion(void *,void *,int,ulong long)
IOBlockStorageDriver::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOBlockStorageDriver::recordMediaParameters(void)
IOBlockStorageDriver::rejectMedia(void)
IOBlockStorageDriver::requestIdle(void)
IOBlockStorageDriver::setPriority(IOService *,IOStorageExtent *,uint,uchar)
IOBlockStorageDriver::start(IOService *)
IOBlockStorageDriver::stop(IOService *)
IOBlockStorageDriver::synchronize(IOService *,ulong long,ulong long,uint)
IOBlockStorageDriver::unmap(IOService *,IOStorageExtent *,uint,uint)
IOBlockStorageDriver::validateNewMedia(void)
IOBlockStorageDriver::~IOBlockStorageDriver()
IOBlockStorageServices::attach(IOService *)
IOBlockStorageServices::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOBlockStorageServices::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageCompletion)
IOBlockStorageServices::doEjectMedia(void)
IOBlockStorageServices::doFormatMedia(ulong long)
IOBlockStorageServices::doGetFormatCapacities(ulong long *,uint)
IOBlockStorageServices::doGetProvisionStatus(ulong long,ulong long,uint *,IOBlockStorageProvisionDeviceExtent *,ulong long)
IOBlockStorageServices::doSynchronizeCache(void)
IOBlockStorageServices::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
IOBlockStorageServices::getProductString(void)
IOBlockStorageServices::getRevisionString(void)
IOBlockStorageServices::getVendorString(void)
IOBlockStorageServices::getWriteCacheState(bool *)
IOBlockStorageServices::message(uint,IOService *,void *)
IOBlockStorageServices::reportBlockSize(ulong long *)
IOBlockStorageServices::reportEjectability(bool *)
IOBlockStorageServices::reportMaxValidBlock(ulong long *)
IOBlockStorageServices::reportWriteProtection(bool *)
IOBlockStorageServices::setWriteCacheState(bool)
IOBreaker::MetaClass::alloc(void)
IOBreaker::free(void)
IOBreaker::getBreakSize(ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryDescriptor *,ulong long)
IOBreaker::getNextStage(void)
IOBreaker::initWithBreakSize(ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,void *)
IOBreaker::setThreadCallback(void (*)(void *,void *))
IOBreaker::withBreakSize(ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,void *)
IOBreaker::~IOBreaker()
IOBufferMemoryDescriptor::Create(ulong long,ulong long,ulong long,IOBufferMemoryDescriptor**)
IOBufferMemoryDescriptor::Create_Invoke(IORPC,int (*)(ulong long,ulong long,ulong long,IOBufferMemoryDescriptor**))
IOBufferMemoryDescriptor::Dispatch(IORPC)
IOBufferMemoryDescriptor::IOBufferMemoryDescriptor(OSMetaClass const*)
IOBufferMemoryDescriptor::IOBufferMemoryDescriptor(void)
IOBufferMemoryDescriptor::MetaClass::Dispatch(IORPC)
IOBufferMemoryDescriptor::MetaClass::MetaClass(void)
IOBufferMemoryDescriptor::SetLength(ulong long,int (*)(OSMetaClassBase *,IORPC))
IOBufferMemoryDescriptor::SetLength_Impl(ulong long)
IOBufferMemoryDescriptor::_Dispatch(IOBufferMemoryDescriptor*,IORPC)
IOBufferMemoryDescriptor::getBytesNoCopy(ulong,ulong)
IOBufferMemoryDescriptor::getBytesNoCopy(void)
IOBufferMemoryDescriptor::inTaskWithGuardPages(task *,uint,ulong long)
IOBufferMemoryDescriptor::inTaskWithOptions(task *,uint,ulong,ulong)
IOBufferMemoryDescriptor::inTaskWithOptions(task *,uint,ulong,ulong,uint,uint)
IOBufferMemoryDescriptor::inTaskWithPhysicalMask(task *,uint,ulong long,ulong long)
IOBufferMemoryDescriptor::initControlWithPhysicalMask(task *,uint,ulong long,ulong long,ulong long)
IOBufferMemoryDescriptor::initWithGuardPages(task *,uint,ulong long)
IOBufferMemoryDescriptor::withBytes(void const*,ulong,uint,bool)
IOBufferMemoryDescriptor::withCapacity(ulong,uint,bool)
IOBufferMemoryDescriptor::withOptions(uint,ulong,ulong)
IOBufferMemoryDescriptor::~IOBufferMemoryDescriptor()
IOBufferMemoryDescriptor__appendBytes_void_const___unsigned_long
IOCECMergeProperties::mergeDictionaryIntoDictionary(OSDictionary *,OSDictionary *)
IOCECMergeProperties::mergeDictionaryIntoProvider(IOService *,OSDictionary *)
IOCECMergeProperties::start(IOService *)
IOCECService::closeReceiveQueue(uint)
IOCECService::closeReceiveQueueGated(uint *)
IOCECService::free(void)
IOCECService::getReceiveQueueMemoryDescriptor(IOMemoryDescriptor **)
IOCECService::getReceiveQueueMemoryDescriptorGated(IOMemoryDescriptor **)
IOCECService::openReceiveQueue(uint,uint)
IOCECService::openReceiveQueueGated(uint *,uint *)
IOCECService::receiveCECGated(IOCECFrame const*)
IOCECService::sendStatusUpdate(void)
IOCECService::setReceiveQueueNotificationPort(ipc_port *)
IOCECService::setReceiveQueueNotificationPortGated(ipc_port **)
IOCECService::start(IOService *)
IOCECService::stop(IOService *)
IOCECService::updateHPD(bool)
IOCECService::updateHPDGated(bool *)
IOCECService::updateHibernateGated(bool *)
IOCECService::updatePhysicalAddress(ushort)
IOCECUserClient::_close(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::_closeReceiveQueue(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::_open(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::_openReceiveQueue(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::_sendCEC(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::_setLogicalAddressMask(IOCECUserClient*,void *,IOExternalMethodArguments *)
IOCECUserClient::clientClose(void)
IOCECUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOCECUserClient::close(void)
IOCECUserClient::didTerminate(IOService *,uint,bool *)
IOCECUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOCECUserClient::externalMethodGated(IOCECUserClient::MethodArgs *)
IOCECUserClient::free(void)
IOCECUserClient::open(void)
IOCECUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
IOCECUserClient::start(IOService *)
IOCECUserClient::stop(IOService *)
IOCPU::IOCPU(OSMetaClass const*)
IOCPU::MetaClass::MetaClass(void)
IOCPU::detach(IOService *)
IOCPU::getCPUGroupSize(void)
IOCPU::getProperty(OSSymbol const*)
IOCPU::serializeProperties(OSSerialize *)
IOCPU::setProperties(OSObject *)
IOCPU::signalCPUDeferred(IOCPU*)
IOCPU::start(IOService *)
IOCPU::~IOCPU()
IOCPUInitialize(void)
IOCPUInterruptController::getInterruptType(IOService *,int,int *)
IOCPUInterruptController::handleInterrupt(void *,IOService *,int)
IOCPUInterruptController::initCPUInterruptController(int)
IOCPUInterruptController::registerCPUInterruptController(void)
IOCPUInterruptController::registerInterrupt(IOService *,int,void *,void (*)(void *,void *,void *,int),void *)
IOCPUInterruptController::setCPUInterruptProperties(IOService *)
IOCPUInterruptController__enableCPUInterrupt_IOCPU
IOCancelationWrapper::free(void)
IOCancelationWrapper::init(OSObject *)
IOCancelationWrapper::startUsingObjectAndGetReference(OSObject **)
IOCancelationWrapper::stopUsingObjectAndRelease(OSObject *)
IOCatalogue::IOCatalogue(OSMetaClass const*)
IOCatalogue::IOCatalogue(void)
IOCatalogue::_removeDrivers(OSDictionary *)
IOCatalogue::addPersonality(OSDictionary *)
IOCatalogue::arrayForPersonality(OSDictionary *)
IOCatalogue::findDrivers(IOService *,int *)
IOCatalogue::findDrivers(OSDictionary *,int *)
IOCatalogue::free(void)
IOCatalogue::isModuleLoaded(OSDictionary *,OSObject **)
IOCatalogue::moduleHasLoaded(OSSymbol const*)
IOCatalogue::moduleHasLoaded(char const*)
IOCatalogue::removeDrivers(OSDictionary *,bool)
IOCatalogue::resetAfterUserspaceReboot(void)
IOCatalogue::terminateDrivers(OSDictionary *)
IOCatalogue::terminateDriversForModule(OSString *,bool)
IOCatalogue::terminateDriversForModule(char const*,bool)
IOCatalogue::unloadModule(OSString *)
IOCatalogue::~IOCatalogue()
IOCharacterDevice::free(void)
IOCoastGuardSARTMapper::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOCoastGuardSARTMapper::iovmInsert(uint,ulong long,ulong long,ulong long,ulong long)
IOCoastGuardSARTMapper::iovmMapMemory(IOMemoryDescriptor *,ulong long,ulong long,uint,IODMAMapSpecification const*,IODMACommand *,IODMAMapPageList const*,ulong long *,ulong long *)
IOCoastGuardSARTMapper::iovmMapMemory(IOMemoryDescriptor *,ulong long,ulong long,uint,IODMAMapSpecification const*,IODMACommand *,IODMAMapPageList const*,ulong long *,ulong long *)
IOCoastGuardSARTMapper::iovmUnmapMemory(IOMemoryDescriptor *,IODMACommand *,ulong long,ulong long)
IOCoastGuardSARTMapper::start(IOService *)
IOCommandGate::MetaClass::MetaClass(void)
IOCommandGate::attemptCommand(void *,void *,void *,void *)
IOCommandGate::commandGate(OSObject *,int (*)(OSObject *,void *,void *,void *,void *))
IOCommandGate::disable(void)
IOCommandGate::free(void)
IOCommandGate::runActionBlock(int ( {block_pointer})(void))
IOCommandGate::runCommand(void *,void *,void *,void *)
IOCommandGate__attemptAction_int_____OSObject___void___void___void___void____void___void___void___void
IOCommandGate__commandSleep_void___unsigned_int
IOCommandGate__commandSleep_void___unsigned_long_long__unsigned_int
IOCommandGate__enable
IOCommandGate__runAction_int_____OSObject___void___void___void___void____void___void___void___void
IOCommandPool::IOCommandPool(OSMetaClass const*)
IOCommandPool::IOCommandPool(void)
IOCommandPool::commandPool(IOService *,IOWorkLoop *,uint)
IOCommandPool::gatedGetCommand(IOCommand **,bool)
IOCommandPool::gatedReturnCommand(IOCommand *)
IOCommandPool::getCommand(bool)
IOCommandPool::init(IOService *,IOWorkLoop *,uint)
IOCommandPool::returnCommand(IOCommand *)
IOCommandPool::withWorkLoop(IOWorkLoop *)
IOCommandPool::~IOCommandPool()
IOCommandPool__free
IOCommandPool__initWithWorkLoop_IOWorkLoop
IOConditionGate::conditionGate(OSObject *)
IOConditionGate::conditionSet(bool,bool)
IOConditionGate::conditionSleep(int)
IOConditionGate::conditionSleep(uint,uint,int)
IOConditionGate::conditionSleep(ulong long,int)
IOConditionGate::conditionSleep(ulong long,int)
IOConditionGate::free(void)
IOConditionGate::init(OSObject *)
IOConditionLock::lock(void)
IOConditionLock::lockWhen(int)
IOConditionLock::setCondition(int)
IOConditionLock::tryLock(void)
IOConditionLock::unlock(void)
IOConditionLock::unlockWith(int)
IOConfigurationDescriptorOrderedSet::orderFunction(OSMetaClassBase const*,OSMetaClassBase const*,void *)
IOCopyPropertyCompatible(IORegistryEntry *,char const*)
IOCryptoAccelerator::getAlgorithmName(void)
IODART::IODART(OSMetaClass const*)
IODART::_addUnmappableDVAs(IODART::dvaRange_t const*,ulong)
IODART::_countPersistentMappingsForSID(uint,uint,IODART::capability_t const*,ulong long const*,uint &,uint &)
IODART::_dartLockIsLocked(bool)
IODART::_dva(IODART::capability_t const*,uint,uint,uint,bool)
IODART::_errorHandlerFind(void *,uint,void *)
IODART::_errorHandlerRegister(void *,uint,void *,ulong long)
IODART::_errorHandlerUnregister(void *,uint,void *)
IODART::_initPersistentMappings(void)
IODART::_initPersistentMappingsForSID(uint,OSData const*)
IODART::_validatePersistentTTBRs(void)
IODART::_validateTzDeadPage(uint,uint,uint)
IODART::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IODART::freeVMSpace(IODARTVMSpace *)
IODART::getWorkLoop(void)
IODART::manualAvailabilityState(void)
IODART::persistentMappings(uint)
IODART::registerMapper(IODARTMapper *,uint)
IODART::registerService(uint)
IODART::start(IOService *)
IODART::start(IOService *)
IODART::timestamp(void)
IODART::unregisterMapper(IODARTMapper *,uint)
IODARTClient::clientClose(void)
IODARTClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IODARTClient::initWithTask(task *,void *,uint)
IODARTClient::start(IOService *)
IODARTClient::start(IOService *)
IODARTMapper::MetaClass::alloc(void)
IODARTMapper::_addBatchSegment(ulong,ulong long,ulong,uint,uint)
IODARTMapper::_allocateDeadPages(void)
IODARTMapper::_captureRegisters(void)
IODARTMapper::_destroyMapper(void)
IODARTMapper::_findVMSpace(IODARTVMSpace *,uint,bool)
IODARTMapper::_freeDeadPages(void)
IODARTMapper::_getRegionType(ulong long,uint)
IODARTMapper::_init(void)
IODARTMapper::_initPersistentMappings(void)
IODARTMapper::_iomdCacheActivate(iomdCacheEntry *)
IODARTMapper::_iomdCacheActivate(iomdCacheEntry *)
IODARTMapper::_iomdCacheEnter(IODMACommand const*,IOMemoryDescriptor const*,IODARTVMSpace *,ulong long,ulong long,iomdHistoryEntry *)
IODARTMapper::_iomdCacheFlushInactive(void)
IODARTMapper::_iomdCacheFree(iomdCacheEntry *,bool)
IODARTMapper::_iomdCacheInactivate(iomdCacheEntry *)
IODARTMapper::_iomdCacheInactivate(iomdCacheEntry *)
IODARTMapper::_iomdCacheLookup(IOMemoryDescriptor const*,iomdHistoryEntry *,ulong long,IODMACommand *)
IODARTMapper::_iomdCacheReclaimImmediate(bool)
IODARTMapper::_iomdCacheReclaimIsRunning(void)
IODARTMapper::_iomdCacheReclaimResume(ulong long)
IODARTMapper::_iomdCacheReclaimSchedule(ulong long)
IODARTMapper::_iomdCacheReclaimStop(bool)
IODARTMapper::_iomdCacheRemove(iomdCacheEntry *)
IODARTMapper::_iomdCacheSearch(IOMemoryDescriptor const*,uint)
IODARTMapper::_iomdComplete(iomdCacheEntry *)
IODARTMapper::_iomdHistoryInit(bool)
IODARTMapper::_iomdHistoryUpdateLimits(iomdHistoryEntry *,IODARTVMSpace *)
IODARTMapper::_iomdHistoryUpdateLimits(iomdHistoryEntry *,iomdCacheEntry *)
IODARTMapper::_iomdPrepare(iomdCacheEntry *)
IODARTMapper::_iomdRelease(iomdCacheEntry *)
IODARTMapper::_iomdRetain(iomdCacheEntry *)
IODARTMapper::_iomdUniqueID(IOMemoryDescriptor const*,ulong long *)
IODARTMapper::_iovmAllocDMACommand(IODMACommand *,IOMemoryDescriptor *,uint,ulong long,ulong long,ulong long *)
IODARTMapper::_iovmAllocDMACommandForPIO(IODMACommand *,ulong long,uint)
IODARTMapper::_iovmAllocPIO(uint,IODMACommand *)
IODARTMapper::_iovmAllocSize(uint,uint,uint)
IODARTMapper::_iovmFree(IODARTVMSpace *)
IODARTMapper::_iovmFree(uint,uint,IODARTHistoryAction)
IODARTMapper::_iovmFreeDMACommand(IODMACommand *,uint,uint)
IODARTMapper::_iovmInsert(IODARTVMSpace *,uint,uint,uint,uint)
IODARTMapper::_iovmInsertBatch(ulong long,ulong long,ulong long,uint)
IODARTMapper::_iovmInsertDMACommand(IODARTVMSpace *,IODMACommand *,IOMemoryDescriptor *,ulong long,ulong long,uint,ulong long *)
IODARTMapper::_iovmInsertDMACommand(IODARTVMSpace *,IODMACommand *,IOMemoryDescriptor *,ulong long,ulong long,uint,ulong long *)
IODARTMapper::_isMapperReady(bool)
IODARTMapper::_reclaimLock(void)
IODARTMapper::_reclaimUnlock(void)
IODARTMapper::_registerMapper(void)
IODARTMapper::_setActive(bool,StateTransitionReason,bool)
IODARTMapper::_setActiveWithRetry(bool,StateTransitionReason,bool)
IODARTMapper::_setAllocator(IODARTVMAllocator *)
IODARTMapper::_setIomdCacheAttribute(IODARTCacheAttribute *)
IODARTMapper::_submitBatchRequest(uint)
IODARTMapper::_validateDARTCapabilities(void)
IODARTMapper::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IODARTMapper::copyAllocationInfo(uint,IODARTAllocationInfo *)
IODARTMapper::copyCacheInfo(uint,IODARTCacheInfo *)
IODARTMapper::copyHistory(uint,IODARTHistory *)
IODARTMapper::copyInfo(IODARTMapperInfo *)
IODARTMapper::copyStats(ulong long *)
IODARTMapper::free(void)
IODARTMapper::getManagedRange(uint *)
IODARTMapper::iovmInsert(uint,ulong long,ulong long,ulong long,ulong long)
IODARTMapper::iovmMapMemory(IOMemoryDescriptor *,ulong long,ulong long,uint,IODMAMapSpecification const*,IODMACommand *,IODMAMapPageList const*,ulong long *,ulong long *)
IODARTMapper::iovmMapMemory(IOMemoryDescriptor *,ulong long,ulong long,uint,IODMAMapSpecification const*,IODMACommand *,IODMAMapPageList const*,ulong long *,ulong long *)
IODARTMapper::iovmUnmapMemory(IOMemoryDescriptor *,IODMACommand *,ulong long,ulong long)
IODARTMapper::iovmUnmapMemory(IOMemoryDescriptor *,IODMACommand *,ulong long,ulong long)
IODARTMapper::mapToPhysicalAddress(ulong long)
IODARTMapper::start(IOService *)
IODARTMapper::start(IOService *)
IODARTMapper::~IODARTMapper()
IODARTMapperClient::_mapClientBuffer(IOExternalMethodArguments *,void **,ulong long,uint *,IOMemoryMap **)
IODARTMapperClient::clientClose(void)
IODARTMapperClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IODARTMapperClient::start(IOService *)
IODARTMapperClient::start(IOService *)
IODARTMapperNub::initWithDictionary(IODART *,OSDictionary *)
IODARTMapperNub::initWithDictionary(IODART *,OSDictionary *)
IODARTMapperNub::initWithRegistryEntry(IODART *,IORegistryEntry *)
IODARTMapperNub::initWithRegistryEntry(IODART *,IORegistryEntry *)
IODARTPIOAllocatorGeneric::copyAllocationInfo(uint,IODARTAllocationInfo *,uint *)
IODARTPIOAllocatorGeneric::forMapper(IOMapper *,uint)
IODARTPIOAllocatorGeneric::free(void)
IODARTPIOAllocatorGeneric::init(IOMapper *,uint)
IODARTPIOAllocatorGeneric::vmAlloc(uint,uint,uint,IODMACommand *,uint,uint,bool)
IODARTPIOAllocatorGeneric::vmFree(IODARTVMSpace *)
IODARTPIOAllocatorGeneric::vmFree(uint,uint)
IODARTVMAllocator::_isInVMSpace(IODARTVMSpace *,uint,uint *,uint *)
IODARTVMAllocator::_lockHaveLock(void)
IODARTVMAllocator::_registerSpace(IODARTVMSpace *)
IODARTVMAllocator::_unregisterSpace(IODARTVMSpace *)
IODARTVMAllocator::findVMSpace(uint)
IODARTVMAllocator::findVMSpace(uint,uint *,uint *)
IODARTVMAllocator::free(void)
IODARTVMAllocator::init(IOMapper *,uint)
IODARTVMAllocator::init(IOMapper *,uint)
IODARTVMAllocator::isCacheHitValid(IOMemoryDescriptor const*,uint,uint)
IODARTVMAllocator::vmspaceTree_RB_INSERT(IODARTVMAllocator::vmspaceTree *,IODARTVMSpace *)
IODARTVMAllocator::vmspaceTree_RB_INSERT_COLOR(IODARTVMAllocator::vmspaceTree *,IODARTVMSpace *)
IODARTVMAllocator::vmspaceTree_RB_NEXT(IODARTVMSpace *)
IODARTVMAllocator::vmspaceTree_RB_REMOVE(IODARTVMAllocator::vmspaceTree *,IODARTVMSpace *)
IODARTVMAllocator::vmspaceTree_RB_REMOVE_COLOR(IODARTVMAllocator::vmspaceTree *,IODARTVMSpace *,IODARTVMSpace *)
IODARTVMAllocatorGeneric::copyAllocationInfo(uint,IODARTAllocationInfo *,uint *)
IODARTVMAllocatorGeneric::forMapper(IOMapper *,uint)
IODARTVMAllocatorGeneric::init(IOMapper *,uint)
IODARTVMAllocatorGeneric::vmAlloc(uint,uint,uint,IODMACommand *,uint,uint,bool)
IODARTVMAllocatorGeneric::vmFree(IODARTVMSpace *)
IODARTVMAllocatorGeneric::vmFree(uint,uint)
IODARTVMAllocatorGeneric::vmReserve(uint,uint)
IODARTVMSpace::MetaClass::alloc(void)
IODARTVMSpace::_getRefForPage(uint)
IODARTVMSpace::forMapper(IODART *,IODARTMapper *,uint,uint,uint,uint,dartPageType_t)
IODARTVMSpace::forMapper(IODART *,IODARTMapper *,uint,uint,uint,uint,dartPageType_t)
IODARTVMSpace::free(void)
IODARTVMSpace::getTranslation(uint,uint *,bool *)
IODARTVMSpace::initForMapper(IODART *,IODARTMapper *,uint,uint,uint,uint,dartPageType_t)
IODARTVMSpace::invalidateTLB(uint,uint)
IODARTVMSpace::setTranslation(uint,uint,uint,uint,bool)
IODARTVMSpace::setTranslation(uint,uint,uint,uint,uint,uint,bool)
IODART__fn_0x558
IODART__fn_0x628
IODART__fn_0x630
IODMACommand::CompleteDMA(ulong long,int (*)(OSMetaClassBase *,IORPC))
IODMACommand::CompleteDMA_Impl(ulong long)
IODMACommand::Create(IOService *,ulong long,IODMACommandSpecification const*,IODMACommand**)
IODMACommand::Create_Impl(IOService *,ulong long,IODMACommandSpecification const*,IODMACommand**)
IODMACommand::Create_Invoke(IORPC,int (*)(IOService *,ulong long,IODMACommandSpecification const*,IODMACommand**))
IODMACommand::GetPreparation(ulong long *,ulong long *,IOMemoryDescriptor **,int (*)(OSMetaClassBase *,IORPC))
IODMACommand::GetPreparation_Impl(ulong long *,ulong long *,IOMemoryDescriptor **)
IODMACommand::GetPreparation_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long *,ulong long *,IOMemoryDescriptor **))
IODMACommand::IODMACommand(OSMetaClass const*)
IODMACommand::IODMACommand(void)
IODMACommand::MetaClass::Dispatch(IORPC)
IODMACommand::MetaClass::MetaClass(void)
IODMACommand::OutputBig32(IODMACommand*,IODMACommand::Segment64,void *,uint)
IODMACommand::OutputBig64(IODMACommand*,IODMACommand::Segment64,void *,uint)
IODMACommand::PerformOperation(ulong long,ulong long,ulong long,ulong long,IOMemoryDescriptor *,int (*)(OSMetaClassBase *,IORPC))
IODMACommand::PerformOperation_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long,ulong long,ulong long,IOMemoryDescriptor *))
IODMACommand::PrepareForDMA(ulong long,IOMemoryDescriptor *,ulong long,ulong long,ulong long *,uint *,IOAddressSegment *,int (*)(OSMetaClassBase *,IORPC))
IODMACommand::PrepareForDMA_Impl(ulong long,IOMemoryDescriptor *,ulong long,ulong long,ulong long *,uint *,IOAddressSegment *)
IODMACommand::PrepareForDMA_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,IOMemoryDescriptor *,ulong long,ulong long,ulong long *,uint *,IOAddressSegment *))
IODMACommand::_Dispatch(IODMACommand*,IORPC)
IODMACommand::clearMemoryDescriptor(bool)
IODMACommand::clientOutputSegment(void *,IODMACommand*,IODMACommand::Segment64,void *,uint)
IODMACommand::cloneCommand(void *)
IODMACommand::createCopyBuffer(uint,ulong long)
IODMACommand::genIOVMSegments(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),ulong long *,void *,uint *)
IODMACommand::genIOVMSegments(ulong long *,void *,uint *)
IODMACommand::getIOMemoryDescriptor(void)
IODMACommand::getPreparedOffsetAndLength(ulong long *,ulong long *)
IODMACommand::initWithSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),IODMACommand::SegmentOptions const*,uint,IOMapper *,void *)
IODMACommand::initWithSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
IODMACommand::prepareWithSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,ulong long,ulong long,bool,bool)
IODMACommand::readBytes(ulong long,void *,ulong long)
IODMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool)
IODMACommand::setSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),IODMACommand::SegmentOptions const*,uint,IOMapper *)
IODMACommand::synchronize(uint)
IODMACommand::transfer(uint,ulong long,void *,ulong long)
IODMACommand::transferSegment(void *,IODMACommand*,IODMACommand::Segment64,void *,uint)
IODMACommand::withRefCon(void *)
IODMACommand::withSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),IODMACommand::SegmentOptions const*,uint,IOMapper *,void *)
IODMACommand::withSpecification(bool (*)(IODMACommand*,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
IODMACommand::writeBytes(ulong long,void const*,ulong long)
IODMACommand::~IODMACommand()
IODMAController::IODMAController(OSMetaClass const*)
IODMAController::completeDMACommand(IODMAEventSource *,IODMACommand *)
IODMAController::createControllerName(uint)
IODMAController::getController(IOService *,uint)
IODMAController::notifyDMACommand(IODMAEventSource *,IODMACommand *,int,ulong long,ulong long)
IODMAController::registerDMAController(uint)
IODMAController::~IODMAController()
IODMAEventSource::IODMAEventSource(OSMetaClass const*)
IODMAEventSource::IODMAEventSource(void)
IODMAEventSource::MetaClass::MetaClass(void)
IODMAEventSource::dmaEventSource(OSObject *,IOService *,void (*)(OSObject *,IODMAEventSource*,IODMACommand *,int,ulong long,ulong long),void (*)(OSObject *,IODMAEventSource*,IODMACommand *,int,ulong long,ulong long),uint)
IODMAEventSource::getFIFODepth(uint)
IODMAEventSource::init(OSObject *,IOService *,void (*)(OSObject *,IODMAEventSource*,IODMACommand *,int,ulong long,ulong long),void (*)(OSObject *,IODMAEventSource*,IODMACommand *,int,ulong long,ulong long),uint)
IODMAEventSource::notifyDMACommand(IODMACommand *,int,ulong long,ulong long)
IODMAEventSource::queryDMACommand(IODMACommand **,ulong long *,bool)
IODMAEventSource::setDMAConfig(uint)
IODMAEventSource::setFIFODepth(ulong long)
IODMAEventSource::setFrameSize(uchar)
IODMAEventSource::stopDMACommand(bool,ulong long)
IODMAEventSource::validDMAConfig(uint)
IODMAEventSource::validFIFODepth(ulong long,uint)
IODMAEventSource::~IODMAEventSource()
IODMAEventSource__startDMACommand_IODMACommand___unsigned_int__unsigned_long_long__unsigned_long_long
IODPDevice::~IODPDevice()
IODTCompareNubName(IORegistryEntry const*,OSString *,OSSharedPtr<OSString> &)
IODTCompareNubName(IORegistryEntry const*,OSString *,OSString **)
IODTFindMatchingEntries(IORegistryEntry *,uint,char const*)
IODTFindSlotName(IORegistryEntry *,uint)
IODTGetCellCounts(IORegistryEntry *,uint *,uint *)
IODTGetInterruptOptions(IORegistryEntry *,int,uint *)
IODTMatchNubWithKeys(IORegistryEntry *,char const*)
IODTNVRAM::IODTNVRAM(OSMetaClass const*)
IODTNVRAM::IODTNVRAM(void)
IODTNVRAM::copyProperty(char const*)
IODTNVRAM::getDictionaryType(OSDictionary const*)
IODTNVRAM::getProperty(char const*)
IODTNVRAM::setProperty(OSSymbol const*,OSObject *)
IODTNVRAM::~IODTNVRAM()
IODTNVRAMDiags::IODTNVRAMDiags(OSMetaClass const*)
IODTNVRAMDiags::IODTNVRAMDiags(void)
IODTNVRAMDiags::MetaClass::MetaClass(void)
IODTNVRAMDiags::start(IOService *)
IODTNVRAMDiags::~IODTNVRAMDiags()
IODTNVRAMVariables::getProperty(OSSymbol const*)
IODTNVRAMVariables::init(uchar const(*)[16])
IODTNVRAMVariables::removeProperty(OSSymbol const*)
IODTNVRAMVariables::setProperty(OSSymbol const*,OSObject *)
IODTNVRAMVariables::start(IOService *)
IODTPlatformExpert::MetaClass::MetaClass(void)
IODTPlatformExpert::compareNubName(IOService const*,OSString *,OSString **)
IODTPlatformExpert::configure(IOService *)
IODTPlatformExpert::createSystemSerialNumberString(OSData *)
IODTPlatformExpert::getNVRAMPartitions(void)
IODTPlatformExpert::getNubResources(IOService *)
IODTPlatformExpert::getProductName(char *,int)
IODTPlatformExpert::getTargetName(char *,int)
IODTPlatformExpert::probe(IOService *,int *)
IODTPlatformExpert::readNVRAMPartition(OSSymbol const*,ulong long,uchar *,ulong long)
IODTPlatformExpert::readNVRAMProperty(IORegistryEntry *,OSSharedPtr<OSSymbol const> &,OSSharedPtr&<OSData>)
IODTPlatformExpert::readNVRAMProperty(IORegistryEntry *,OSSymbol const**,OSData **)
IODTPlatformExpert::readXPRAM(ulong long,uchar *,ulong long)
IODTPlatformExpert::registerNVRAMController(IONVRAMController *)
IODTPlatformExpert::savePanicInfo(uchar *,ulong long)
IODTPlatformExpert::writeNVRAMPartition(OSSymbol const*,ulong long,uchar *,ulong long)
IODTPlatformExpert::writeNVRAMProperty(IORegistryEntry *,OSSymbol const*,OSData *)
IODTPlatformExpert::writeXPRAM(ulong long,uchar *,ulong long)
IODTPlatformExpert__getMachineName_char___int
IODTResolveAddressCell(IORegistryEntry *,uint *,ulong long *,ulong long *)
IODTResolveAddressing(IORegistryEntry *,char const*,IODeviceMemory *)
IODataQueue::enqueue(void *,uint)
IODataQueue::getMemoryDescriptor(void)
IODataQueue::initWithEntries(uint,uint)
IODataQueue::sendDataAvailableNotification(void)
IODataQueue::withCapacity(uint)
IODataQueue::withEntries(uint,uint)
IODataQueueDispatchSource::Cancel_Impl(void ( {block_pointer})(void))
IODataQueueDispatchSource::CopyDataAvailableHandler(OSAction **,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::CopyDataAvailableHandler_Impl(OSAction **)
IODataQueueDispatchSource::CopyDataServicedHandler(OSAction **,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::CopyDataServicedHandler_Impl(OSAction **)
IODataQueueDispatchSource::CopyMemory(IOMemoryDescriptor **,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::CopyMemory_Impl(IOMemoryDescriptor **)
IODataQueueDispatchSource::Create(ulong long,IODispatchQueue *,IODataQueueDispatchSource**)
IODataQueueDispatchSource::Create_Impl(ulong long,IODispatchQueue *,IODataQueueDispatchSource**)
IODataQueueDispatchSource::Create_Invoke(IORPC,int (*)(ulong long,IODispatchQueue *,IODataQueueDispatchSource**))
IODataQueueDispatchSource::DataAvailable(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::DataAvailable_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *),OSMetaClass const*)
IODataQueueDispatchSource::Dequeue(void ( {block_pointer})(void const*,ulong))
IODataQueueDispatchSource::DequeueWithCoalesce(bool *,void ( {block_pointer})(void const*,ulong))
IODataQueueDispatchSource::Enqueue(uint,void ( {block_pointer})(void *,ulong))
IODataQueueDispatchSource::EnqueueWithCoalesce(uint,bool *,void ( {block_pointer})(void *,ulong))
IODataQueueDispatchSource::IsDataAvailable(void)
IODataQueueDispatchSource::MetaClass::Dispatch(IORPC)
IODataQueueDispatchSource::Peek(void ( {block_pointer})(void const*,ulong))
IODataQueueDispatchSource::SendDataAvailable(void)
IODataQueueDispatchSource::SendDataServiced(void)
IODataQueueDispatchSource::SetDataAvailableHandler(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::SetDataAvailableHandler_Impl(OSAction *)
IODataQueueDispatchSource::SetDataServicedHandler(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IODataQueueDispatchSource::SetDataServicedHandler_Impl(OSAction *)
IODataQueueDispatchSource::_Dispatch(IODataQueueDispatchSource*,IORPC)
IODeblocker::MetaClass::alloc(void)
IODeblocker::complete(uint)
IODeblocker::free(void)
IODeblocker::getNextStage(void)
IODeblocker::getPhysicalSegment(ulong long,ulong long *,uint)
IODeblocker::getPreparationID(void)
IODeblocker::getRequestCompletion(ulong long *)
IODeblocker::initWithBlockSize(ulong long,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,void *)
IODeblocker::prepare(uint)
IODeblocker::setThreadCallback(void (*)(void *,void *))
IODeblocker::withBlockSize(ulong long,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *,void *)
IODeblocker::~IODeblocker()
IODeviceMemory::arrayFromList(IODeviceMemory::InitElement *,uint)
IODiskImageBlockStorageDeviceInKernel::attach(IOService *)
IODispatchQueue::Create_Call(char const*,ulong long,ulong long,IODispatchQueue**)
IODispatchQueue::Create_Invoke(IORPC,int (*)(char const*,ulong long,ulong long,IODispatchQueue**))
IODispatchQueue::Dispatch(IORPC)
IODispatchQueue::MetaClass::Dispatch(IORPC)
IODispatchQueue::SetPort(ipc_port *,int (*)(OSMetaClassBase *,IORPC))
IODispatchQueue::SetPort_Impl(ipc_port *)
IODispatchQueue::SetPort_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ipc_port *))
IODispatchQueue::_Dispatch(IODispatchQueue*,IORPC)
IODispatchSource::Cancel(void ( {block_pointer})(void),int (*)(OSMetaClassBase *,IORPC))
IODispatchSource::Cancel_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,void ( {block_pointer})(void)))
IODispatchSource::CheckForWork(bool,int (*)(OSMetaClassBase *,IORPC))
IODispatchSource::CheckForWork_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IORPC,bool))
IODispatchSource::Dispatch(IORPC)
IODispatchSource::SetEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IODispatchSource::SetEnableWithCompletion(bool,void ( {block_pointer})(void),int (*)(OSMetaClassBase *,IORPC))
IODispatchSource::SetEnableWithCompletion_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool,void ( {block_pointer})(void)))
IODispatchSource::SetEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IODispatchSource::_Dispatch(IODispatchSource*,IORPC)
IOECTimeSyncHandler::init(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *,uint)
IOEmbeddedNVMeBlockDevice::Create(uint,uchar,bool,bool)
IOEmbeddedNVMeBlockDevice::GetDeviceProperties(void)
IOEmbeddedNVMeBlockDevice::PublishRootDeviceProperties(void)
IOEmbeddedNVMeBlockDevice::RestoreShadowBuffer(void)
IOEmbeddedNVMeBlockDevice::RestoreShadowBuffer(void)
IOEmbeddedNVMeBlockDevice::SetNVMeProperties(void)
IOEmbeddedNVMeBlockDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOEmbeddedNVMeBlockDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOEmbeddedNVMeBlockDevice::doFormatMedia(ulong long)
IOEmbeddedNVMeBlockDevice::doSynchronize(ulong long,ulong long,uint)
IOEmbeddedNVMeBlockDevice::initWithOptions(uint,uchar,bool,bool)
IOEmbeddedNVMeBlockDevice::setFWSize(uint)
IOEmbeddedNVMeBlockDevice::start(IOService *)
IOEmbeddedNVMeBlockDevice::writeData(void)
IOEthernetController::addTimeSyncReceivePacketHandler(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOEthernetController::addTimeSyncTransmitPacketHandler(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *,uint *)
IOEthernetController::allocateAVBPacket(bool)
IOEthernetController::allocatedAVBPacketCompletion(void *,IOEthernetController::IOEthernetAVBPacket *)
IOEthernetController::changeAVBControllerState(IOEthernetControllerAVBStateEvent)
IOEthernetController::createInterface(void)
IOEthernetController::deregisterForAVBStateChangeNotifications(void (*)(void *,IOEthernetControllerAVBState,IOEthernetControllerAVBState),void *)
IOEthernetController::disablePacketFilter(OSSymbol const*,uint,uint,uint)
IOEthernetController::enablePacketFilter(OSSymbol const*,uint,uint,uint)
IOEthernetController::free(void)
IOEthernetController::getAVBSupport(IOEthernetController::IOEthernetControllerAVBSupport *)
IOEthernetController::getHardwareAddress(void *,uint *)
IOEthernetController::getPacketFilters(OSSymbol const*,uint *)
IOEthernetController::getTransmitQueuePacketLatency(uint)
IOEthernetController::getTransmitQueuePrefetchDelay(uint)
IOEthernetController::getVlanTagDemand(__mbuf *,uint *)
IOEthernetController::init(OSDictionary *)
IOEthernetController::publishProperties(void)
IOEthernetController::receivedTimeSyncPacket(IOEthernetController::IOEthernetAVBPacket *)
IOEthernetController::registerForAVBStateChangeNotifications(void (*)(void *,IOEthernetControllerAVBState,IOEthernetControllerAVBState),void *)
IOEthernetController::removeTimeSyncReceivePacketHandler(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOEthernetController::removeTimeSyncTransmitPacketHandler(uint)
IOEthernetController::setAVBControllerState(IOEthernetControllerAVBState)
IOEthernetController::setGPTPPresent(bool)
IOEthernetController::setHardwareAddress(void const*,uint)
IOEthernetController::timeSyncCallbackThread(void)
IOEthernetController::transmittedTimeSyncPacket(IOEthernetController::IOEthernetAVBPacket *,bool)
IOEthernetInterface::_fixupVlanPacket(__mbuf *,ushort,int)
IOEthernetInterface::attachToDataLinkLayer(uint,void *)
IOEthernetInterface::controllerDidChangePowerState(IONetworkController *,ulong,uint,IOService *)
IOEthernetInterface::controllerDidOpen(IONetworkController *)
IOEthernetInterface::controllerWillChangePowerState(IONetworkController *,ulong,uint,IOService *)
IOEthernetInterface::controllerWillClose(IONetworkController *)
IOEthernetInterface::disableFilter(IONetworkController *,OSSymbol const*,uint,uint)
IOEthernetInterface::enableController(IONetworkController *)
IOEthernetInterface::enableFilter(IONetworkController *,OSSymbol const*,uint,uint)
IOEthernetInterface::feedPacketInputTap(__mbuf *)
IOEthernetInterface::feedPacketOutputTap(__mbuf *)
IOEthernetInterface::free(void)
IOEthernetInterface::handleEthernetInputEvent(void *,void *)
IOEthernetInterface::init(IONetworkController *)
IOEthernetInterface::initIfnetParams(ifnet_init_params *)
IOEthernetInterface::inputEvent(uint,void *)
IOEthernetInterface::performCommand(IONetworkController *,ulong,void *,void *)
IOEthernetInterface::performGatedCommand(void *,void *,void *,void *,void *)
IOEthernetInterface::reportInterfaceWakeFlags(IONetworkController *)
IOEthernetInterface::setFilters(OSDictionary *,OSSymbol const*,uint)
IOEthernetInterface::setupMulticastFilter(IONetworkController *)
IOEthernetInterface::syncSIOCADDMULTI(IONetworkController *)
IOEthernetInterface::syncSIOCGIFDEVMTU(IONetworkController *,ifreq *)
IOEthernetInterface::syncSIOCSIFADDR(IONetworkController *)
IOEthernetInterface::syncSIOCSIFCAP(IONetworkController *,ifreq *)
IOEthernetInterface::syncSIOCSIFFLAGS(IONetworkController *)
IOEthernetInterface::syncSIOCSIFLLADDR(IONetworkController *,char const*,int)
IOEthernetInterface::syncSIOCSIFMTU(IONetworkController *,ifreq *,bool)
IOEthernetInterface::willTerminate(IOService *,uint)
IOEventLink::Create_Call(OSString *,IOUserClient *,IOEventLink**)
IOEventLink::Create_Invoke(IORPC,int (*)(OSString *,IOUserClient *,IOEventLink**))
IOEventLink::InvalidateKernel(IOUserClient *,int (*)(OSMetaClassBase *,IORPC))
IOEventLink::InvalidateKernel_Impl(IOUserClient *)
IOEventLink::MetaClass::Dispatch(IORPC)
IOEventLink::SetEventlinkPort(ipc_port *,int (*)(OSMetaClassBase *,IORPC))
IOEventLink::_Dispatch(IOEventLink*,IORPC)
IOEventSource::enable(void)
IOEventSource::onThread(void)
IOEventSource::setAction(void (*)(OSObject *,...))
IOEventSource::setActionBlock(int ( {block_pointer})(void))
IOEventSource::setWorkLoop(IOWorkLoop *)
IOEventSource::signalWorkAvailable(void)
IOEventSource::wakeupGate(void *,bool)
IOFBSA::Exp(double)
IOFBSA::FxPrecision::convert(ulong long,IOFBSA::FxPrecision)
IOFBSA::Ln(double)
IOFBSA::Pow(double,double)
IOFBSA::agx_tile(uint,uint *,uint *)
IOFBSAFixed64_to_other(ulong long,uint,uint)
IOFDiskPartitionScheme::instantiateMediaObject(fdisk_part *,uint,uint)
IOFDiskPartitionScheme::isPartitionExtended(fdisk_part *)
IOFDiskPartitionScheme::isPartitionInvalid(fdisk_part *,uint,uint)
IOFDiskPartitionScheme::isPartitionUsed(fdisk_part *)
IOFDiskPartitionScheme::probe(IOService *,int *)
IOFDiskPartitionScheme::requestProbe(uint)
IOFDiskPartitionScheme::scan(int *)
IOFence::MetaClass::alloc(void)
IOFence::complete(int)
IOFence::finalize(void)
IOFence::free(void)
IOFence::init(void)
IOFence::release(int)
IOFence::release(int)
IOFence::release(void)
IOFence::taggedRelease(void const*,int)
IOFence::taggedRelease(void const*,int)
IOFence::writeTraceData(IOFenceTraceData *)
IOFence::~IOFence()
IOFenceTransaction::MetaClass::alloc(void)
IOFenceTransaction::add_fence(IOFence *)
IOFenceTransaction::add_fence(IOFence *)
IOFenceTransaction::copy_fences(void)
IOFenceTransaction::fenceTransaction(IOService *)
IOFenceTransaction::init(IOService *)
IOFenceTransaction::remove_fence(IOFence *)
IOFenceTransaction::runTransactionDeadlockCheck(IOFenceTransaction*,IOFenceTransaction*,uint)
IOFilterInterruptEventSource::MetaClass::MetaClass(void)
IOFilterInterruptEventSource::filterInterruptEventSource(OSObject *,IOService *,int,void ( {block_pointer})(IOInterruptEventSource *,int),bool ( {block_pointer})(IOFilterInterruptEventSource*))
IOFilterInterruptEventSource::filterInterruptEventSource(OSObject *,void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource*),IOService *,int)
IOFilterInterruptEventSource::free(void)
IOFilterInterruptEventSource__disableInterruptOccurred_void___IOService___int
IOFilterInterruptEventSource__normalInterruptOccurred_void___IOService___int
IOFilterInterruptEventSource__signalInterrupt
IOFilterScheme::MetaClass::alloc(void)
IOFilterScheme::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
IOFilterScheme::getProvisionStatus(IOService *,ulong long,ulong long,uint *,IOStorageProvisionExtent *,ulong long)
IOFilterScheme::handleClose(IOService *,uint)
IOFilterScheme::handleIsOpen(IOService const*)
IOFilterScheme::handleOpen(IOService *,uint,void *)
IOFilterScheme::lockPhysicalExtents(IOService *)
IOFilterScheme::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOFilterScheme::setPriority(IOService *,IOStorageExtent *,uint,uchar)
IOFilterScheme::synchronize(IOService *,ulong long,ulong long,uint)
IOFilterScheme::unlockPhysicalExtents(IOService *)
IOFilterScheme::unmap(IOService *,IOStorageExtent *,uint,uint)
IOFilterScheme::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOFilterScheme::~IOFilterScheme()
IOFixedDivide(int,int)
IOGPU::IOPerfControlWorkBegin(ulong long)
IOGPU::IOPerfControlWorkEnd(ulong long,IOPerfControlClient::WorkEndArgs *,bool)
IOGPU::IOPerfControlWorkSubmit(IOGPUWorkSubmitArgs *)
IOGPU::calcMaxGPUPhysicalMemoryBytes(ulong long)
IOGPU::copy_all_resources(void)
IOGPU::createAllocationList(void)
IOGPU::createAllocationListTotals(OSDictionary *,IOAccelMemoryInfoAllocTotals *)
IOGPU::createCommandDescriptor(IOGPUCommandQueue *,IOGPUTask *)
IOGPU::createDevice(task *,ulong long)
IOGPU::createEventMachine(void)
IOGPU::createGlobalCommPageClientMapping(task *)
IOGPU::createIOFence(IOSurface *,uint,IOGPUCommandDescriptor *)
IOGPU::createMemoryForIOSurfaceDeviceCache(IOSurface *)
IOGPU::createMemoryMap(IOGPUTask *,IOGPUMemory *,ulong long)
IOGPU::createResource(IOGPUDevice *,uint)
IOGPU::createRestrictedRangeMapping(IOGPUDevice *,IOMemoryDescriptor *,IOGPUNewResourceArgs *)
IOGPU::createScheduler(void)
IOGPU::createSysMemory(void)
IOGPU::deviceCacheControl(IOSurfaceDeviceCache *,uint,ulong long,ulong long)
IOGPU::deviceCacheForIOSurface(IOSurface *,uint)
IOGPU::emitFirstFlushEvents(void)
IOGPU::event_scrubber_thread(void)
IOGPU::free(void)
IOGPU::freeToMapKernelMemory(IOGPUKernelMappedMemory *)
IOGPU::getMaxResourceSize(void)
IOGPU::getMaxResourceSizeForTask(IOGPUTask *)
IOGPU::getMaxWiredSysMemorySize(void)
IOGPU::initGlobalCommPage(void)
IOGPU::insert_kernel_mapped_memory(IOGPUKernelMappedMemory *)
IOGPU::kickEventScrubber(void)
IOGPU::newUserClient(task *,void *,uint,IOUserClient **)
IOGPU::oneTimeSetup(void)
IOGPU::remove_kernel_mapped_memory(IOGPUKernelMappedMemory *)
IOGPU::reportGPURestart(IOGPUCommandQueue const*,char const*,uint,ulong long)
IOGPU::reserve_sysmem_wired(ulong long)
IOGPU::restart(void)
IOGPU::retainResourceForMemory(IOGPUMemory *)
IOGPU::scrubEvents(void)
IOGPU::start(IOService *)
IOGPU::stop(IOService *)
IOGPU::traceAllResources(IOInterruptEventSource *,int)
IOGPUAllocationInfo::addAllocationDescription(IOGPUMemory *)
IOGPUAllocationInfo::addIOSurfaceID(IOGPUMemory *,uint)
IOGPUAllocationInfo::addString(IOGPUMemory *,char const*)
IOGPUAllocationInfo::addUserMapping(IOGPUMemory *,int,ulong long,ulong long)
IOGPUAllocationInfo::copyToArray(void)
IOGPUAllocationInfo::createAllocationDescription(IOGPUMemory *)
IOGPUAllocationInfo::declareDeviceShmem(int,IOMemoryDescriptor *,ulong long)
IOGPUAllocationInfo::declareIOSurfaceBackingStore(IOMemoryDescriptor *,uint,int *,int)
IOGPUAllocationInfo::free(void)
IOGPUAllocationInfo::getOrCreateProcessDictionaryForPID(IOGPUMemory *,int)
IOGPUAllocationInfo::init(IOGPU *)
IOGPUAllocationInfo::insertAllocation(IOGPUMemory *,OSDictionary *)
IOGPUAllocationInfo::lookupAllocation(IOGPUMemory *)
IOGPUBlockFence::IOPerfControlBegin(void)
IOGPUBlockFence::IOPerfControlEnd(IOPerfControlClient::WorkEndArgs *,bool)
IOGPUBlockFence::free(void)
IOGPUBlockFence::init(IOGPU *,IOGPUCommandQueue *,IOGPUBlockFencePort *,ulong long,ulong long)
IOGPUBlockFence::notifyClient(void)
IOGPUBlockFencePort::free(void)
IOGPUBlockFencePort::initWithAsyncRef64(ulong long *)
IOGPUBlockFencePort::initWithNotificationQueue(IOGPUNotificationQueue *)
IOGPUBlockFencePort::withNotificationQueue(IOGPUNotificationQueue *)
IOGPUChannel::free(void)
IOGPUChannel::getChannelLabel(void)
IOGPUChannel::init(IOGPU *,int)
IOGPUChannel::updateChannelStampIndex(IOGPUDevice *)
IOGPUClientSharedMachine::allocId(uint *)
IOGPUClientSharedMachine::alloc_handles(void)
IOGPUClientSharedMachine::free(void)
IOGPUClientSharedMachine::freeId(uint)
IOGPUClientSharedMachine::getClientSharedAddressForId(uint,ulong long *)
IOGPUClientSharedMachine::init(IOGPU *,task *,IOGPUTask *,ulong,ulong,ulong,uint)
IOGPUClientSharedMachine::mapClientSharedForId(uint,void **)
IOGPUCommandDescriptor::addMemory(IOGPUMemory *)
IOGPUCommandDescriptor::complete(void)
IOGPUCommandDescriptor::createIOGPUIOFenceWithTransaction(IOSurface *,uint,IOFenceTransaction *)
IOGPUCommandDescriptor::describeAllocations(IOGPUAllocationInfo *)
IOGPUCommandDescriptor::didSubmit(void)
IOGPUCommandDescriptor::free(void)
IOGPUCommandDescriptor::init(IOGPU *,IOGPUCommandQueue *,IOGPUTask *)
IOGPUCommandDescriptor::prepare(uint)
IOGPUCommandDescriptor::retainMemoryMap(IOGPUMemoryMap const*)
IOGPUCommandDescriptor::retainObject(OSObject const*)
IOGPUCommandDescriptor::retainResource(IOGPUResource const*)
IOGPUCommandDescriptor::setBlockFence(IOGPUBlockFence *)
IOGPUCommandDescriptor::setSubmitEventStamp(int)
IOGPUCommandDescriptor::willSubmit(void)
IOGPUCommandQueue::MetaClass::alloc(void)
IOGPUCommandQueue::clientRelease(void)
IOGPUCommandQueue::client_release(void)
IOGPUCommandQueue::free(void)
IOGPUCommandQueue::init(IOGPU *,IOGPUDevice *,IOGPUDeviceNewCommandQueueArgs *)
IOGPUCommandQueue::isOpportunisticWorkload(void)
IOGPUCommandQueue::processCommandBuffer(uint,uint,uint)
IOGPUCommandQueue::processKernelCommand(IOGPUKernelCommand const*,IOGPUKernelCommand const*)
IOGPUCommandQueue::processKernelCommands(IOGPUKernelCommand const*,IOGPUKernelCommand const*)
IOGPUCommandQueue::processSegment(IOGPUSegmentResourceList *,IOGPUKernelCommand const*,IOGPUKernelCommand const*,uchar const*,uchar const*)
IOGPUCommandQueue::processSegmentKernelCommand(IOGPUSegmentResourceList *,IOGPUKernelCommand const*,IOGPUKernelCommand const*,uchar const*,uchar const*)
IOGPUCommandQueue::processSegmentKernelCommands(IOGPUSegmentResourceList *,IOGPUKernelCommand const*,IOGPUKernelCommand const*,uchar const*,uchar const*)
IOGPUCommandQueue::process_command_buffer(uint,uint,uint)
IOGPUCommandQueue::process_command_buffer(uint,uint,uint)
IOGPUCommandQueue::retireCommandBuffer(IOGPUEventFence *)
IOGPUCommandQueue::scrubEvents(void)
IOGPUCommandQueue::scrub_needed(void)
IOGPUCommandQueue::serialize_app_usage(void)
IOGPUCommandQueue::setNotificationQueue(IOGPUNotificationQueue *)
IOGPUCommandQueue::set_priority_and_background(eIOGPUCommandQueuePriority,eIOGPUCommandQueuePriority)
IOGPUCommandQueue::submit_command_buffer(uint,uint,uint,ulong long,ulong long)
IOGPUCommandQueue::submit_command_buffers(IOGPUCommandQueueSubmitArgs const*)
IOGPUCommandQueue::updatePriority(void)
IOGPUCommandQueue::~IOGPUCommandQueue()
IOGPUDevice::client_release(void)
IOGPUDevice::copyEntitlements(void)
IOGPUDevice::createUserGPUTask(task *)
IOGPUDevice::create_mtlevent(ulong long *)
IOGPUDevice::create_mtlfence(uint *)
IOGPUDevice::create_notificationqueue(IOGPUNotificationQueueData *)
IOGPUDevice::create_resource_iosurface(uint,ulong long,ulong long,uint *)
IOGPUDevice::create_shmem(uint,eIOGPUShmemType,ulong long *,uint *,uint *)
IOGPUDevice::delete_resource(uint)
IOGPUDevice::describeDriverAllocations(IOGPUAllocationInfo *)
IOGPUDevice::destroy_mtlevent(uint)
IOGPUDevice::destroy_mtlfence(uint)
IOGPUDevice::destroy_notificationqueue(uint)
IOGPUDevice::destroy_shmem(uint)
IOGPUDevice::doesEntitlementExist(char const*)
IOGPUDevice::finalize(void)
IOGPUDevice::finish_object_event(uint,uint)
IOGPUDevice::free(void)
IOGPUDevice::getMemoryData(IOGPUMemoryData *)
IOGPUDevice::get_shared_info(IOGPUSharedGetInfoReturnData *)
IOGPUDevice::init(IOGPU *,task *)
IOGPUDevice::init(IOGPU *,task *,ulong long)
IOGPUDevice::new_resource(IOGPUNewResourceArgs *,IOGPUNewResourceReturnData *,ulong long,uint *)
IOGPUDevice::register_device(void)
IOGPUDevice::retainResourceForMemory(IOGPUMemory *)
IOGPUDevice::scrubEvents(void)
IOGPUDevice::serialize_app_usage(OSSerialize *)
IOGPUDevice::set_resource_owner_idenity(uint,uint)
IOGPUDevice::set_resources_purgeable(uint const*,eIOGPUResourcePurgeable,eIOGPUResourcePurgeable*,int)
IOGPUDeviceShmem::describeAllocation(int,IOGPUAllocationInfo *)
IOGPUDeviceShmem::deviceShmemWithTask(IOGPU *,task *,ulong,uint)
IOGPUDeviceShmem::free(void)
IOGPUDeviceShmem::getClientData(void)
IOGPUDeviceShmem::getKernelData(void)
IOGPUDeviceShmem::init(IOGPU *,task *,ulong,uint)
IOGPUDeviceShmem::resetKernelDataRange(void)
IOGPUDeviceUserClient::clientClose(void)
IOGPUDeviceUserClient::deviceUserClientStart(void)
IOGPUDeviceUserClient::deviceUserClientStop(void)
IOGPUDeviceUserClient::free(void)
IOGPUDeviceUserClient::init(OSDictionary *,task *,ulong long)
IOGPUDeviceUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
IOGPUDeviceUserClient::s_async_signal_mtlLateEvalevent(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_create_mtllateevalevent(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_create_resource_iosurface(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_create_shmem(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_delete_command_queue(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_destroy_mtllateevalevent(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_config(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_current_trace_filter(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_device_info(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_event_machine(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_name(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_get_next_gid_group(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_new_command_queue(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_new_resource(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_query_mtlLateEvalevent(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_api_property(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_app_gpu_role(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_command_queue_notification_queue(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_command_queue_priority_and_background(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_command_queue_quality_of_service(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_display_params_for_gpu(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_resource_purgeable(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_set_resources_purgeable(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::s_submit_command_buffers(IOGPUDeviceUserClient*,void *,IOExternalMethodArguments *)
IOGPUDeviceUserClient::start(IOService *)
IOGPUDeviceUserClient::stop(IOService *)
IOGPUEventFence::init(IOGPU *,IOGPUCommandQueue *)
IOGPUEventMachine::copyStampIdxInEvent(IOGPUEvent *,IOGPUEvent *,int)
IOGPUEventMachine::eventHasStampIndex(IOGPUEvent const*,int)
IOGPUEventMachine::findChannelByStampIdx(uint)
IOGPUEventMachine::findChannelByStampIdxLocked(uint)
IOGPUEventMachine::finishAllStamps(void)
IOGPUEventMachine::finishEvent(IOGPUEvent *)
IOGPUEventMachine::finishEvent(IOGPUEvent const*)
IOGPUEventMachine::finishStamp(int)
IOGPUEventMachine::forceCompleteAllStamps(void)
IOGPUEventMachine::forceCompleteEvent(IOGPUEvent const*)
IOGPUEventMachine::forceCompleteStamp(int,uint)
IOGPUEventMachine::free(void)
IOGPUEventMachine::freeStampIndexForChannel(IOGPUChannel *)
IOGPUEventMachine::incrementStamp(int)
IOGPUEventMachine::init(IOGPU *,uint,int)
IOGPUEventMachine::initEvent(IOGPUEvent *)
IOGPUEventMachine::logCommandSubmission(int,uint)
IOGPUEventMachine::mergeEvent(IOGPUEvent const*,IOGPUEvent*)
IOGPUEventMachine::mergeEventExcluding(IOGPUEvent *,IOGPUEvent *,int)
IOGPUEventMachine::mergeEventNoWait(IOGPUEvent const*,IOGPUEvent*)
IOGPUEventMachine::merge_event_slow(IOGPUEvent const*,IOGPUEvent*)
IOGPUEventMachine::releaseStampIndex(int)
IOGPUEventMachine::remove_device(IOGPUDevice *)
IOGPUEventMachine::requestStampIndexForChannel(IOGPUChannel *,IOGPUDevice *)
IOGPUEventMachine::scrubEvent(IOGPUEvent *)
IOGPUEventMachine::setEventStamp(int,IOGPUEvent *)
IOGPUEventMachine::setEventStampNoWait(int,IOGPUEvent *)
IOGPUEventMachine::setEventStampPair(int,IOGPUEvent *,bool)
IOGPUEventMachine::setStampBaseAddress(uint volatile*)
IOGPUEventMachine::set_event_stamp_slow(int,IOGPUEvent *,bool)
IOGPUEventMachine::signalStamp(int,uint)
IOGPUEventMachine::testAllStamps(void)
IOGPUEventMachine::testAllSubmittedStampsUnlocked(void)
IOGPUEventMachine::testEvent(IOGPUEvent *)
IOGPUEventMachine::testEvent(IOGPUEvent const*)
IOGPUEventMachine::testEventAgainstSubmitStampsUnlocked(IOGPUEvent const*)
IOGPUEventMachine::testEventExcluding(IOGPUEvent const*,int)
IOGPUEventMachine::testStamp(int)
IOGPUEventMachine::waitForAnyStamp(IOGPUEvent const*,int *)
IOGPUEventMachine::waitForStamp(int,uint)
IOGPUEventMachine::writeEventBarrierCommand(IOGPUEventQueue *,IOGPUEvent const*,vendevtBarrierRec *,int)
IOGPUEventMachine::writeStampCommand(int,IOGPUEventQueue *,vendevtCommandRec *)
IOGPUFenceMachine::addEventFence(IOGPUCommandQueue *,IOGPUEventFence *)
IOGPUFenceMachine::addIOGPUIOFences(IOGPUIOFenceListHead *,int)
IOGPUFenceMachine::cancelBlockFenceCallback(IOGPUCommandQueue *)
IOGPUFenceMachine::eventfence_notifier(void)
IOGPUFenceMachine::free(void)
IOGPUFenceMachine::guiltyForHardwareReset(IOGPUCommandQueue *,uint)
IOGPUFenceMachine::init(IOGPU *)
IOGPUFenceMachine::ioaccelfence_notifier(void)
IOGPUFenceMachine::process_eventfences(EventFencesListHead *,bool)
IOGPUFenceMachine::sendBlockFenceNotification(ulong long *,ulong long,ulong long,uint,ulong long,ulong long)
IOGPUFenceMachine::sendCompletionNotification(IOGPUNotificationQueue *,ulong long,ulong long,ulong long,uint)
IOGPUFenceMachine::work_completed(void)
IOGPUKernelMappedMemory::deleteMap(void)
IOGPUKernelMappedMemory::free(void)
IOGPUKernelMappedMemory::getKernelData(void)
IOGPUKernelMappedMemory::map(void)
IOGPUKernelMappedMemory::releaseKernelData(void)
IOGPUKernelMappedMemory::unmap(void)
IOGPUMTLEvent::clean_ring(void)
IOGPUMTLEvent::free(void)
IOGPUMTLEvent::initWithAccelerator(IOGPU *)
IOGPUMTLEvent::mergeSubmitted(ulong long,IOGPUEvent *)
IOGPUMTLEvent::mergeSubmitted(ulong long,IOGPUEvent *)
IOGPUMTLEvent::scrubEvents(void)
IOGPUMTLEvent::signalSubmitted(IOGPUEvent const*,ulong long)
IOGPUMTLEvent::waitSubmitted(ulong long,ulong long)
IOGPUMTLEvent::withAccelerator(IOGPU *)
IOGPUMTLFence::initWithAccelerator(IOGPU *)
IOGPUMTLFence::scrubEvents(void)
IOGPUMTLFence::withAccelerator(IOGPU *)
IOGPUMTLLateEvalEvent::free(void)
IOGPUMTLLateEvalEvent::initWithAccelerator(IOGPU *)
IOGPUMemory::add_mapping(IOGPUMemoryMap *)
IOGPUMemory::commit_mappings(void)
IOGPUMemory::completeMemory(void)
IOGPUMemory::createGPUMappingInTask(IOGPUTask *,ulong long)
IOGPUMemory::createGPUMappingInTaskAtAddressLength(IOGPUTask *,ulong long,ulong long,ulong long)
IOGPUMemory::describeAllocation(OSDictionary *)
IOGPUMemory::evict(void)
IOGPUMemory::finalize(void)
IOGPUMemory::finalize(void)
IOGPUMemory::free(void)
IOGPUMemory::init(IOGPU *)
IOGPUMemory::prepareMemory(void)
IOGPUMemory::prepare_memory_slow(void)
IOGPUMemory::release_mappings(void)
IOGPUMemory::remove_mapping(IOGPUMemoryMap *)
IOGPUMemoryInfoUserClient::clientClose(void)
IOGPUMemoryInfoUserClient::gather_memory_data(uint,uint *,uint *,void *)
IOGPUMemoryInfoUserClient::init(void)
IOGPUMemoryInfoUserClient::s_allowed_to_gather(void)
IOGPUMemoryInfoUserClient::s_gather_memory_data(OSObject *,void *,IOExternalMethodArguments *)
IOGPUMemoryInfoUserClient::s_gather_memory_data_totals(OSObject *,void *,IOExternalMethodArguments *)
IOGPUMemoryInfoUserClient::s_purge_all_vid_memory(OSObject *,void *,IOExternalMethodArguments *)
IOGPUMemoryInfoUserClient::start(IOService *)
IOGPUMemoryInfoUserClient::stop(IOService *)
IOGPUMemoryInfoUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
IOGPUMemoryMap::allocGPUVirtualAddress(void)
IOGPUMemoryMap::commit_pte(void)
IOGPUMemoryMap::finalize(void)
IOGPUMemoryMap::free(void)
IOGPUMemoryMap::freeGPUVirtualAddress(void)
IOGPUMemoryMap::getGPUVirtualAddressForUserProcess(void)
IOGPUMemoryMap::getGPUVirtualAddressLengthForUserProcess(void)
IOGPUMemoryMap::getLength(void)
IOGPUMemoryMap::init(IOGPU *,IOGPUTask *,IOGPUMemory *,ulong long)
IOGPUMemoryMap::release_pte(void)
IOGPUMemoryMap::reserveGPUVirtualAddress(ulong long,ulong long)
IOGPUNamespace::addObject(IOGPUObject *)
IOGPUNamespace::free(void)
IOGPUNamespace::getObjectLocked(uint)
IOGPUNamespace::releaseObject(uint)
IOGPUNamespace::removeObjectLocked(uint)
IOGPUNotificationQueue::free(void)
IOGPUNotificationQueue::get_notification_queue_address(void)
IOGPUNotificationQueue::initWithEntries(task *,uint,uint)
IOGPUNotificationQueue::setNotificationPort(ipc_port *)
IOGPUNotificationQueue::withEntries(task *,uint,uint)
IOGPUObject::finalize(void)
IOGPUObject::init(void)
IOGPUObject::release(int)
IOGPUObject::release(void)
IOGPUObject::taggedRelease(void const*,int)
IOGPURangeAllocator::free(void)
IOGPURangeAllocator::init(void)
IOGPUResidentMemorySet::Iterator::getNextMemory(void)
IOGPUResidentMemorySet::LRUIterator::getNextMemory(void)
IOGPUResidentMemorySet::LRUIterator::~LRUIterator()
IOGPUResidentMemorySet::Snapshot::Snapshot(IOGPUResidentMemorySet&)
IOGPUResidentMemorySet::Snapshot::getNextMemory(void)
IOGPUResidentMemorySet::Snapshot::~Snapshot()
IOGPUResidentMemorySet::addMemory(IOGPUMemory *)
IOGPUResidentMemorySet::free(void)
IOGPUResidentMemorySet::init(IOGPU *)
IOGPUResidentMemorySet::realloc(void)
IOGPUResidentMemorySet::realloc(void)
IOGPUResidentMemorySet::removeMemory(IOGPUMemory *)
IOGPUResidentMemorySet::sort(void)
IOGPUResource::describeAllocations(IOGPUAllocationInfo *)
IOGPUResource::dirtyLevel(uint,uint)
IOGPUResource::dirty_level_iosurface(void)
IOGPUResource::free(void)
IOGPUResource::free(void)
IOGPUResource::gartEvent(void)
IOGPUResource::getIOSurface(void)
IOGPUResource::getMappingOptions(IOGPUNewResourceArgs *,ulong long)
IOGPUResource::getResidentSize(void)
IOGPUResource::init(IOGPU *,IOGPUDevice *,uint)
IOGPUResource::initClientShared(IOGPUClientSharedRO *)
IOGPUResource::initialize(IOGPUDevice *,IOGPUNewResourceArgs *,ulong long)
IOGPUResource::log_set_events(IOGPUChannel *,uint)
IOGPUResource::map(ulong long)
IOGPUResource::mapAtAddressLength(ulong long,ulong long,ulong long)
IOGPUResource::newResourceWithClientBuffer(IOGPU *,IOGPUDevice *,eIOGPUResType,ulong long,ulong long,ulong long,ulong long *)
IOGPUResource::newResourceWithIOSurface(IOGPU *,IOGPUDevice *,IOSurface *,uint,uint)
IOGPUResource::newResourceWithIOSurfaceDeviceCache(IOGPU *,IOSurfaceDeviceCache *)
IOGPUResource::newResourceWithOptions(IOGPU *,IOGPUDevice *,eIOGPUResType,ulong long,ulong long,uint,ulong long *,IOGPUNewResourceArgs *)
IOGPUResource::newResourceWithParentResourceID(IOGPU *,IOGPUDevice *,eIOGPUResType,ulong long,ulong long,ulong long,ulong long,ulong long *,uint)
IOGPUResource::objTypeName(void)
IOGPUResource::purgeable(void)
IOGPUResource::removeIOSurfaceRef(IOGPUResource*)
IOGPUResource::scrubEvents(void)
IOGPUResource::setEventsWithChannel(IOGPUChannel *,uint)
IOGPUResource::setOwnership(task *)
IOGPUResource::setPurgeable(uint,uint)
IOGPUResource::sharedRelease(IOGPUDevice *)
IOGPUResource::traceResource(void)
IOGPUResource::unmap(void)
IOGPUResource::update_iosurface_textures_stamp(IOGPUChannel *,uint)
IOGPUResourceSet::addResource(IOGPUResource *)
IOGPUResourceSet::add_resource_slow(IOGPUResource *)
IOGPUResourceSet::free(void)
IOGPUResourceSet::init(void)
IOGPUResourceSet::initWithCapacity(ulong)
IOGPUScheduler::BusyQueueIterator::BusyQueueIterator(IOGPUScheduler const*)
IOGPUScheduler::BusyQueueIterator::~BusyQueueIterator()
IOGPUScheduler::cancelProgressTimer(void)
IOGPUScheduler::collectGartWirings(void)
IOGPUScheduler::configure_gart_collector(uint,uint,ulong long)
IOGPUScheduler::describeAllocations(IOGPUAllocationInfo *)
IOGPUScheduler::disableWorkQueues(void)
IOGPUScheduler::display_footprint_changed_callback(void *)
IOGPUScheduler::enable_gart_collector(void)
IOGPUScheduler::eventTimeout(int)
IOGPUScheduler::free(void)
IOGPUScheduler::freeToWireMemory(IOGPUMemory *)
IOGPUScheduler::freeToWireSysMemory(IOGPUMemory *)
IOGPUScheduler::gart_collector_thread(void)
IOGPUScheduler::getGPURestartClientErrorCode(IOGPUCommandQueue const*)
IOGPUScheduler::getGPURestartSeed(IOGPUCommandQueue const*)
IOGPUScheduler::gpuRestartBegin(void)
IOGPUScheduler::gpuRestartCompleted(void)
IOGPUScheduler::gpu_progress_check_interrupt(IOInterruptEventSource *,int)
IOGPUScheduler::gpu_progress_check_timer(IOTimerEventSource *)
IOGPUScheduler::hardware_error_interrupt(IOInterruptEventSource *,int)
IOGPUScheduler::init(IOGPU *)
IOGPUScheduler::kick_completed(void)
IOGPUScheduler::kick_scheduler(eIOGPUKickReason)
IOGPUScheduler::progressTimerCheckInterrupt(void)
IOGPUScheduler::prune_busy_queues(void)
IOGPUScheduler::queue_did_submit(IOGPUWorkQueue *)
IOGPUScheduler::registerCommandQueue(IOGPUCommandQueue const*)
IOGPUScheduler::retainOldestCommand(ulong long *,bool)
IOGPUScheduler::scheduleWorkqueue(IOGPUWorkQueue *)
IOGPUScheduler::schedule_workqueue(IOGPUWorkQueue *,bool)
IOGPUScheduler::setGPURestartClientErrorCode(IOGPUCommandQueue const*,uint)
IOGPUScheduler::setGPURestartErrorCodeOnAllClients(uint)
IOGPUScheduler::setSingleSubmissionMode(bool)
IOGPUScheduler::signalHardwareError(eRestartRequest,int)
IOGPUScheduler::startHardwareProgressTimer(void)
IOGPUScheduler::stopHardwareProgressTimer(void)
IOGPUScheduler::unregisterCommandQueue(IOGPUCommandQueue const*)
IOGPUScheduler::update_gart_cache_size(void)
IOGPUScheduler::update_gart_collector_age(void)
IOGPUScheduler::wakeProgressTimerAtTime(ulong long)
IOGPUScheduler::workCompleted(void)
IOGPUScheduler::work_completed(ulong long,ulong long,IOGPUWorkQueue *)
IOGPUScheduler::work_completion_interrupt(IOInterruptEventSource *,int)
IOGPUSharedEventFence::withSharedEvent(IOSurfaceSharedEvent *,ulong long,IOGPU *,IOGPUCommandQueue *)
IOGPUStatistics::addNumber(OSDictionary *,uint,char const*)
IOGPUStatistics::addNumber64(OSDictionary *,ulong long,char const*)
IOGPUStatistics::configure_report(IOReportChannelList *,uint,void *,void *)
IOGPUStatistics::free(void)
IOGPUStatistics::init(IOGPU *)
IOGPUStatistics::serialize_performance_stats(void *,void *,OSSerialize *)
IOGPUStatistics::setupChannels(void)
IOGPUStatistics::setupIOReporters(void)
IOGPUStatistics::updateReport(IOReportChannelList *,uint,void *,void *)
IOGPUStatistics::update_report(IOReportChannelList *,uint,void *,void *)
IOGPUStatistics::writePerformanceStats(OSDictionary *,bool)
IOGPUSysMemory::describeAllocation(OSDictionary *)
IOGPUSysMemory::flushProcessorCacheForIn(void)
IOGPUSysMemory::free(void)
IOGPUSysMemory::makeUntracked(void)
IOGPUSysMemory::setPurgeable(uint,uint *)
IOGPUSysMemory::set_purgeable(uint,uint *)
IOGPUSysMemory::unwire(void)
IOGPUSysMemory::wire(void)
IOGPUSysMemory::withClientBuffer(IOGPU *,task *,IOGPUDevice *,ulong long,ulong long)
IOGPUSysMemory::withMemoryDescriptor(IOGPU *,IOGPUResource *,IOMemoryDescriptor *)
IOGPUSysMemory::withOptions(IOGPU *,task *,IOGPUDevice *,IOGPUResource *,uint,ulong long)
IOGPUTask::allocate(IOGPUMemoryMap *)
IOGPUTask::deallocate(IOGPUMemoryMap *,ulong long)
IOGPUTask::free(void)
IOGPUTask::free(void)
IOGPUTask::getProcessIDAndName(char *,int)
IOGPUTask::init(IOGPU *,task *,uint,IORangeAllocator **)
IOGPUTask::reserve(uint,ulong long,ulong long)
IOGPUTask::searchMapForGPUVirtualAddress(ulong long,IOGPUMemoryMap **)
IOGPUTask::set_device(IOGPUDevice *)
IOGPUWeakNamespace::addObject(IOGPUObject *)
IOGPUWeakNamespace::addObjectLocked(IOGPUObject *)
IOGPUWeakNamespace::alloc_handles(void)
IOGPUWeakNamespace::copyObjects(void)
IOGPUWeakNamespace::free(void)
IOGPUWeakNamespace::free_handles(void)
IOGPUWeakNamespace::init(void)
IOGPUWeakNamespace::removeObject(uint)
IOGPUWeakNamespace::removeObjectLocked(uint)
IOGPUWeakNamespace::retainObjectLocked(uint)
IOGPUWorkQueue::addCommandToTail(IOGPUCommandDescriptor *)
IOGPUWorkQueue::addCommandToTail_slow(IOGPUCommandDescriptor *)
IOGPUWorkQueue::describeAllocations(IOGPUAllocationInfo *)
IOGPUWorkQueue::finalize(void)
IOGPUWorkQueue::findCommandDescriptorWithStampValue(int,uint)
IOGPUWorkQueue::free(void)
IOGPUWorkQueue::getFirstPendingCommand(void)
IOGPUWorkQueue::init(IOGPU *,IOGPUCommandQueue const*,int)
IOGPUWorkQueue::logRingBuffer(void)
IOGPUWorkQueue::performBlockOnSubmittedCommands(void ( {block_pointer})(IOGPUCommandDescriptor *))
IOGPUWorkQueue::prepare_next_command(uint,bool)
IOGPUWorkQueue::pruneRingBuffer(void)
IOGPUWorkQueue::restart(void)
IOGPUWorkQueue::restart(void)
IOGPUWorkQueue::set_error_on_all_commands(uint)
IOGPUWorkQueue::submit_next_command(int)
IOGPUWorkQueue::updateSchedulerState(eIOGPUWorkQueueSchedulerState *)
IOGUIDPartitionScheme::handleClose(IOService *,uint)
IOGUIDPartitionScheme::instantiateMediaObject(gpt_ent *,uint)
IOGUIDPartitionScheme::isPartitionInvalid(gpt_ent *,uint)
IOGUIDPartitionScheme::isPartitionUsed(gpt_ent *)
IOGUIDPartitionScheme::message(uint,IOService *,void *)
IOGUIDPartitionScheme::probe(IOService *,int *)
IOGUIDPartitionScheme::requestProbe(uint)
IOGUIDPartitionScheme::scan(int *)
IOGateLock::lock(uint)
IOGateLock::unlock(void)
IOGatedOutputQueue::free(void)
IOGatedOutputQueue::gatedOutput(OSObject *,IOGatedOutputQueue*,IOMbufQueue *,uint *)
IOGatedOutputQueue::init(OSObject *,uint (OSObject::*)(__mbuf *,void *),IOWorkLoop *,uint,uint)
IOGatedOutputQueue::output(IOMbufQueue *,uint *)
IOGatedOutputQueue::restartDeferredOutput(OSObject *,IOInterruptEventSource *,int)
IOGatedOutputQueue::scheduleServiceThread(void *)
IOGatedOutputQueue::withTarget(IONetworkController *,IOWorkLoop *,uint,uint)
IOGatedOutputQueue::withTarget(OSObject *,uint (OSObject::*)(__mbuf *,void *),IOWorkLoop *,uint,uint)
IOGeneralMemoryDescriptor::IOGeneralMemoryDescriptor(OSMetaClass const*)
IOGeneralMemoryDescriptor::IOGeneralMemoryDescriptor(void)
IOGeneralMemoryDescriptor::MetaClass::MetaClass(void)
IOGeneralMemoryDescriptor::memoryReferenceGetPageCounts(IOMemoryReference *,ulong long *,ulong long *)
IOGeneralMemoryDescriptor::memoryReferenceSetOwnership(IOMemoryReference *,task *,int,uint)
IOGeneralMemoryDescriptor::memoryReferenceSetPurgeable(IOMemoryReference *,uint,uint *)
IOGeneralMemoryDescriptor::setOwnership(task *,int,uint)
IOGeneralMemoryDescriptor::withPersistentMemoryDescriptor(IOGeneralMemoryDescriptor*)
IOGuardPageMemoryDescriptor::MetaClass::MetaClass(void)
IOGuardPageMemoryDescriptor::doMap(_vm_map *,ulong long *,uint,ulong long,ulong long)
IOGuardPageMemoryDescriptor::withSize(ulong)
IOHDCP1TransmitterAuthSession::validateKSVList(IOHDCPTopologyInfo const*,uchar const(*)[5],uint const*,uchar const*)
IOHDCP2AuthSession::CStringForState(IOHDCP2AuthSession::State)
IOHDCP2AuthSession::cancelTimeout(void)
IOHDCP2AuthSession::disable(void)
IOHDCP2AuthSession::enable(void)
IOHDCP2AuthSession::free(void)
IOHDCP2AuthSession::handleAction(void)
IOHDCP2AuthSession::handleActionThreadFunc(void *,void *)
IOHDCP2AuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession *),IOHDCPMessageTransport *,IOHDCPInterface *)
IOHDCP2AuthSession::messageCountWaitForZero(void)
IOHDCP2AuthSession::recvMessage(IOHDCP2Message *)
IOHDCP2AuthSession::reset(void)
IOHDCP2AuthSession::sendMessage(IOHDCP2Message *)
IOHDCP2AuthSession::setState(IOHDCP2AuthSession::State)
IOHDCP2AuthSession::setTimeoutMS(uint)
IOHDCP2AuthSession::setWorkLoop(IOWorkLoop *)
IOHDCP2AuthSession::setWorkLoop(IOWorkLoop *)
IOHDCP2AuthSession::signalAction(void)
IOHDCP2AuthSession::timeout(void)
IOHDCP2DPTransmitterAuthSession::MetaClass::alloc(void)
IOHDCP2DPTransmitterAuthSession::fillAKE_No_Stored_km(IOHDCP2Message::AKE_No_Stored_km *)
IOHDCP2DPTransmitterAuthSession::fillRepeaterAuth_Send_Ack(IOHDCP2Message::RepeaterAuth_Send_Ack *)
IOHDCP2DPTransmitterAuthSession::fillRepeaterAuth_Stream_Manage(IOHDCP2Message::DP_RepeaterAuth_Stream_Manage *)
IOHDCP2DPTransmitterAuthSession::hPrimeAvailable(void)
IOHDCP2DPTransmitterAuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession *),IOHDCPMessageTransport *,IOHDCPInterface *)
IOHDCP2DPTransmitterAuthSession::pairingInfoAvailable(void)
IOHDCP2DPTransmitterAuthSession::receiverIDListAvailable(void)
IOHDCP2DPTransmitterAuthSession::reset(void)
IOHDCP2DPTransmitterAuthSession::takeAKE_Send_Cert(IOHDCP2Message::DP_AKE_Send_Cert *)
IOHDCP2DPTransmitterAuthSession::takeRepeaterAuth_Send_ReceiverID_List(IOHDCP2Message::DP_RepeaterAuth_Send_ReceiverID_List *)
IOHDCP2DPTransmitterAuthSession::takeRepeaterAuth_Stream_Ready(IOHDCP2Message::RepeaterAuth_Stream_Ready *)
IOHDCP2DPTransmitterAuthSession::~IOHDCP2DPTransmitterAuthSession()
IOHDCP2LocalMessageTransport::deqMessage(IOHDCP2Message *)
IOHDCP2LocalMessageTransport::enqMessage(IOHDCP2Message *)
IOHDCP2LocalMessageTransport::free(void)
IOHDCP2LocalMessageTransport::getAuthSession(void)
IOHDCP2LocalMessageTransport::init(void *)
IOHDCP2LocalMessageTransport::recvMessage(IOHDCP2Message *)
IOHDCP2LocalMessageTransport::sendMessage(IOHDCP2Message *)
IOHDCP2LocalMessageTransport::takeMessage(IOHDCP2Message *)
IOHDCP2Message::CStringForID(IOHDCP2Message::ID)
IOHDCP2ReceiverAuthSession::fillAKE_Receiver_Info(IOHDCP2Message::AKE_Receiver_Info *)
IOHDCP2ReceiverAuthSession::fillAKE_Send_Cert(IOHDCP2Message::AKE_Send_Cert *)
IOHDCP2ReceiverAuthSession::fillAKE_Send_H_prime(IOHDCP2Message::AKE_Send_H_prime *)
IOHDCP2ReceiverAuthSession::fillAKE_Send_H_prime_from_Stored(IOHDCP2Message::AKE_Send_H_prime *)
IOHDCP2ReceiverAuthSession::fillAKE_Send_Pairing_Info(IOHDCP2Message::AKE_Send_Pairing_Info *)
IOHDCP2ReceiverAuthSession::fillLC_Send_L_prime(IOHDCP2Message::LC_Send_L_prime *)
IOHDCP2ReceiverAuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession *),IOHDCPMessageTransport *,IOHDCPInterface *)
IOHDCP2ReceiverAuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession *),IOHDCPMessageTransport *,IOHDCPInterface *,bool)
IOHDCP2ReceiverAuthSession::negotiating(void)
IOHDCP2ReceiverAuthSession::takeAKE_Init(IOHDCP2Message::AKE_Init *)
IOHDCP2ReceiverAuthSession::takeAKE_No_Stored_km(IOHDCP2Message::AKE_No_Stored_km *)
IOHDCP2ReceiverAuthSession::takeAKE_Stored_km(IOHDCP2Message::AKE_Stored_km *)
IOHDCP2ReceiverAuthSession::takeAKE_Transmitter_Info(IOHDCP2Message::AKE_Transmitter_Info *)
IOHDCP2ReceiverAuthSession::takeLC_Init(IOHDCP2Message::LC_Init *)
IOHDCP2ReceiverAuthSession::takeSKE_Send_Eks(IOHDCP2Message::SKE_Send_Eks *)
IOHDCP2ReceiverAuthSession::timeout(void)
IOHDCP2TransmitterAuthSession::MetaClass::alloc(void)
IOHDCP2TransmitterAuthSession::abortAuthentication(void)
IOHDCP2TransmitterAuthSession::akeSendCertTimeout(void)
IOHDCP2TransmitterAuthSession::authStreamReadyTimeout(void)
IOHDCP2TransmitterAuthSession::cpDesired(IOHDCPAuthPolicy)
IOHDCP2TransmitterAuthSession::enableEncryption(void)
IOHDCP2TransmitterAuthSession::fillAKE_No_Stored_km(IOHDCP2Message::AKE_No_Stored_km *)
IOHDCP2TransmitterAuthSession::fillAKE_Stored_km(IOHDCP2Message::AKE_Stored_km *)
IOHDCP2TransmitterAuthSession::fillAKE_Transmitter_Info(IOHDCP2Message::AKE_Transmitter_Info *)
IOHDCP2TransmitterAuthSession::fillLC_Init(IOHDCP2Message::LC_Init *)
IOHDCP2TransmitterAuthSession::getAuthenticatedContentType(uint)
IOHDCP2TransmitterAuthSession::hPrimeAvailable(void)
IOHDCP2TransmitterAuthSession::handleTimeout(void)
IOHDCP2TransmitterAuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession *),IOHDCPMessageTransport *,IOHDCPInterface *)
IOHDCP2TransmitterAuthSession::negotiating(void)
IOHDCP2TransmitterAuthSession::pairingInfoAvailable(void)
IOHDCP2TransmitterAuthSession::receiverConnected(void)
IOHDCP2TransmitterAuthSession::receiverDisconnected(void)
IOHDCP2TransmitterAuthSession::receiverIDIsValid(IOHDCP_ReceiverID)
IOHDCP2TransmitterAuthSession::receiverIDListAvailable(void)
IOHDCP2TransmitterAuthSession::restartAuthentication(void)
IOHDCP2TransmitterAuthSession::sendKm(void)
IOHDCP2TransmitterAuthSession::sendLCInit(void)
IOHDCP2TransmitterAuthSession::sendLPrimeTimeout(void)
IOHDCP2TransmitterAuthSession::takeAKE_Receiver_Info(IOHDCP2Message::AKE_Receiver_Info *)
IOHDCP2TransmitterAuthSession::takeAKE_Send_Cert(IOHDCP2Message::AKE_Send_Cert *)
IOHDCP2TransmitterAuthSession::takeAKE_Send_H_prime(IOHDCP2Message::AKE_Send_H_prime *)
IOHDCP2TransmitterAuthSession::takeAKE_Send_Pairing_Info(IOHDCP2Message::AKE_Send_Pairing_Info *)
IOHDCP2TransmitterAuthSession::takeAKE_Send_rrx(IOHDCP2Message::AKE_Send_rrx *)
IOHDCP2TransmitterAuthSession::takeLC_Send_L_prime(IOHDCP2Message::LC_Send_L_prime *)
IOHDCP2TransmitterAuthSession::~IOHDCP2TransmitterAuthSession()
IOHDCPAuthSession::close(IOService *)
IOHDCPAuthSession::free(void)
IOHDCPAuthSession::init(OSObject *,void (*)(OSObject *,IOHDCPAuthSession*),IOHDCPMessageTransport *,IOHDCPInterface *)
IOHDCPAuthSession::open(IOService *,uint)
IOHDCPAuthSession::validateIsOpen(void)
IOHDIXCommand::complete(int,ulong long)
IOHDIXCommand::init(uint,ulong long,ulong long,IOMemoryDescriptor *,IOStorageCompletion,void *,ulong long,bool)
IOHDIXCommand::release(void)
IOHDIXCommandPool::add(IOHDIXCommand &,bool)
IOHDIXCommandPool::allocCommand(bool)
IOHDIXCommandPool::createWithCapacity(ulong)
IOHDIXCommandPool::deactivate(void)
IOHDIXCommandPool::free(void)
IOHDIXCommandPool::init(ulong)
IOHDIXCommandPool::mallocSingleCommand(void)
IOHDIXCommandQueue::clearQueue(bool)
IOHDIXCommandQueue::enqueueCommand(IOHDIXCommand *,bool)
IOHDIXCommandQueue::free(void)
IOHDIXCommandQueue::init(void)
IOHDIXController::_di_root_image(char const*,char *,ulong,int *,OSObject *)
IOHDIXController::attachToChild(IORegistryEntry *,IORegistryPlane const*)
IOHDIXController::checkPermission(OSDictionary *,task *)
IOHDIXController::createDriveInKernel(OSDictionary *,OSDictionary *,int *,task *,vfs_context *)
IOHDIXController::createNextDriveID(int *,OSNumber **,OSSymbol const**)
IOHDIXController::free(void)
IOHDIXController::init(OSDictionary *)
IOHDIXController::message(uint,IOService *,void *)
IOHDIXController::setProperty(char const*,OSObject *)
IOHDIXController::setupBasicProperties(void)
IOHDIXController::setupWorkLoop(void)
IOHDIXController::start(IOService *)
IOHDIXController::stop(IOService *)
IOHDIXControllerUserClient::_createDriveInKernel(OSDictionary *,int *)
IOHDIXControllerUserClient::_createDriveOutKernel(OSDictionary *,int *)
IOHDIXControllerUserClient::convertClientBuffer(ulong long,ulong long *)
IOHDIXControllerUserClient::createDrive64(HDIImageCreateBlock64 const*,int *)
IOHDIXControllerUserClient::createImageInfoDict(void const*,ulong,OSDictionary **)
IOHDIXControllerUserClient::free(void)
IOHDIXControllerUserClient::getTargetAndMethodForIndex(IOService **,uint)
IOHDIXControllerUserClient::start(IOService *)
IOHDIXControllerUserClient::validateImageInfoDict(OSDictionary *)
IOHDIXControllerUserClient__initWithTask_task___void___unsigned_int
IOHDIXHDDrive::_wakeupSyncCommandLock(IOHDIXCommand *)
IOHDIXHDDrive::abortPendingRequests(void)
IOHDIXHDDrive::attach(IOService *)
IOHDIXHDDrive::createNub(void)
IOHDIXHDDrive::detach(IOService *)
IOHDIXHDDrive::didTerminate(IOService *,uint,bool *)
IOHDIXHDDrive::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOHDIXHDDrive::doEjectMedia(void)
IOHDIXHDDrive::doEjectMediaWithForce(bool)
IOHDIXHDDrive::doGetFormatCapacities(ulong long *,uint)
IOHDIXHDDrive::doSynchronize(ulong long,ulong long,uint)
IOHDIXHDDrive::free(void)
IOHDIXHDDrive::getDeviceCapacity(ulong long *,ulong long *)
IOHDIXHDDrive::getProductString(void)
IOHDIXHDDrive::getRevisionString(void)
IOHDIXHDDrive::getVendorString(void)
IOHDIXHDDrive::handleClose(IOService *,uint)
IOHDIXHDDrive::handleOpen(IOService *,uint,void *)
IOHDIXHDDrive::init(OSDictionary *)
IOHDIXHDDrive::makeRequestAvailable(IOHDIXCommand *,bool)
IOHDIXHDDrive::processPropertyList(void)
IOHDIXHDDrive::reportBlockSize(ulong long *)
IOHDIXHDDrive::reportMaxValidBlock(ulong long *)
IOHDIXHDDrive::reportMediaState(bool *,bool *)
IOHDIXHDDrive::sendSyncCommand(uint,ulong long,ulong long,IOMemoryDescriptor *)
IOHDIXHDDrive::start(IOService *)
IOHDIXHDDrive::stop(IOService *)
IOHDIXHDDrive::willTerminate(IOService *,uint)
IOHDIXHDDriveInKernel::attach(IOService *)
IOHDIXHDDriveInKernel::checkTermination(bool *,int *)
IOHDIXHDDriveInKernel::didTerminate(IOService *,uint,bool *)
IOHDIXHDDriveInKernel::finalizeProcessedCommand(IOHDIXCommand const&)
IOHDIXHDDriveInKernel::free(void)
IOHDIXHDDriveInKernel::getCommandFromWaitingQueue(void)
IOHDIXHDDriveInKernel::handleClose(IOService *,uint)
IOHDIXHDDriveInKernel::handleOpen(IOService *,uint,void *)
IOHDIXHDDriveInKernel::init(OSDictionary *)
IOHDIXHDDriveInKernel::kernelIOThread(void *)
IOHDIXHDDriveInKernel::makeRequestAvailable(IOHDIXCommand *,bool)
IOHDIXHDDriveInKernel::message(uint,IOService *,void *)
IOHDIXHDDriveInKernel::processCommand(IOHDIXCommand &,BounceBuffer &)
IOHDIXHDDriveInKernel::processPropertyList(void)
IOHDIXHDDriveInKernel::start(IOService *)
IOHDIXHDDriveNub::attach(IOService *)
IOHDIXHDDriveNub::detach(IOService *)
IOHDIXHDDriveNub::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOHDIXHDDriveNub::doEjectMedia(void)
IOHDIXHDDriveNub::doFormatMedia(ulong long)
IOHDIXHDDriveNub::doGetFormatCapacities(ulong long *,uint)
IOHDIXHDDriveNub::doSyncReadWrite(IOMemoryDescriptor *,uint,uint)
IOHDIXHDDriveNub::doSyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long)
IOHDIXHDDriveNub::doSynchronize(ulong long,ulong long,uint)
IOHDIXHDDriveNub::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
IOHDIXHDDriveNub::getAdditionalDeviceInfoString(void)
IOHDIXHDDriveNub::getProductString(void)
IOHDIXHDDriveNub::getRevisionString(void)
IOHDIXHDDriveNub::getVendorString(void)
IOHDIXHDDriveNub::handleClose(IOService *,uint)
IOHDIXHDDriveNub::handleOpen(IOService *,uint,void *)
IOHDIXHDDriveNub::reportBlockSize(ulong long *)
IOHDIXHDDriveNub::reportEjectability(bool *)
IOHDIXHDDriveNub::reportMaxValidBlock(ulong long *)
IOHDIXHDDriveNub::reportMediaState(bool *,bool *)
IOHDIXHDDriveNub::reportRemovability(bool *)
IOHDIXHDDriveNub::reportWriteProtection(bool *)
IOHDIXHDDriveNub::willTerminate(IOService *,uint)
IOHIDAsyncReportQueue::MetaClass::alloc(void)
IOHIDAsyncReportQueue::checkForWork(void)
IOHIDAsyncReportQueue::init(IOHIDDevice *)
IOHIDAsyncReportQueue::postReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDAsyncReportQueue::withOwner(IOHIDDevice *)
IOHIDAsyncReportQueue::~IOHIDAsyncReportQueue()
IOHIDClientData::withClientInfo(IOService *,void *,void (*)(OSObject *,OSObject *,void *,OSObject *,uint))
IOHIDDevice::CompleteReport_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,int,uint),OSMetaClass const*)
IOHIDDevice::CreateAction_CompleteReport(ulong,OSAction **)
IOHIDDevice::_CompleteReport_Impl(OSAction *,int,uint)
IOHIDDevice::_Dispatch(IOHIDDevice*,IORPC)
IOHIDDevice::_HandleReport_Impl(ulong long,IOMemoryDescriptor *,uint,IOHIDReportType,uint)
IOHIDDevice::_HandleReport_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,IOMemoryDescriptor *,uint,IOHIDReportType,uint))
IOHIDDevice::_ProcessReport(HIDReportCommandType,IOMemoryDescriptor *,IOHIDReportType,uint,uint,OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOHIDDevice::_ProcessReport_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,HIDReportCommandType,IOMemoryDescriptor *,IOHIDReportType,uint,uint,OSAction *))
IOHIDDevice::_SetProperty(IOBufferMemoryDescriptor *,int (*)(OSMetaClassBase *,IORPC))
IOHIDDevice::_SetProperty_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,IOBufferMemoryDescriptor *))
IOHIDDevice::_Start_Impl(IOService *)
IOHIDDevice::_publishDeviceNotificationHandler(void *,void *,IOService *,IONotifier *)
IOHIDDevice::checkEventDelivery(IOHIDEventQueue *,uint,bool *)
IOHIDDevice::conformsTo(uint,uint)
IOHIDDevice::createInterface(uint)
IOHIDDevice::destroyInterface(uint)
IOHIDDevice::free(void)
IOHIDDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDDevice::handleClose(IOService *,uint)
IOHIDDevice::handleIsOpen(IOService const*)
IOHIDDevice::handleOpen(IOService *,uint,void *)
IOHIDDevice::handleReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDDevice::handleReportWithTime(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDDevice::handleReportWithTimeAsync(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDDevice::init(OSDictionary *)
IOHIDDevice::matchPropertyTable(OSDictionary *,int *)
IOHIDDevice::message(uint,IOService *,void *)
IOHIDDevice::newDeviceUsagePairs(OSArray *,uint)
IOHIDDevice::newIsAccessProtected(void)
IOHIDDevice::newPrimaryUsageNumber(void)
IOHIDDevice::newPrimaryUsagePageNumber(void)
IOHIDDevice::newReportIntervalNumber(void)
IOHIDDevice::newSerialNumberString(void)
IOHIDDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOHIDDevice::newUserClientInternal(task *,void *,OSDictionary *,IOUserClient **)
IOHIDDevice::parseReportDescriptor(IOMemoryDescriptor *,uint)
IOHIDDevice::postElementTransaction(void const*,uint)
IOHIDDevice::postElementValues(uint *,uint)
IOHIDDevice::publishProperties(IOService *)
IOHIDDevice::setProperty(OSSymbol const*,OSObject *)
IOHIDDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDDevice::setupResolution(void)
IOHIDDevice::start(IOService *)
IOHIDDevice::startEventDelivery(IOHIDEventQueue *,uint,uint)
IOHIDDevice::stop(IOService *)
IOHIDDevice::stopEventDelivery(IOHIDEventQueue *,uint)
IOHIDDevice::updateElementValues(uint *,uint)
IOHIDDeviceElementContainer::free(void)
IOHIDDeviceElementContainer::init(void *,ulong long,IOHIDDevice *)
IOHIDDeviceElementContainer::postElementValues(uint *,uint)
IOHIDDeviceElementContainer::updateElementValues(uint *,uint)
IOHIDDeviceElementContainer::withDescriptor(void *,ulong long,IOHIDDevice *)
IOHIDElementContainer::createButtonElements(void *,OSArray *,uint,IOHIDElementType,uint)
IOHIDElementContainer::createCollectionElements(void *,OSArray *,uint)
IOHIDElementContainer::createElementHierarchy(void *)
IOHIDElementContainer::createElementValuesMemory(void)
IOHIDElementContainer::createFlattenedCollections(IOHIDElement *)
IOHIDElementContainer::createFlattenedElements(IOHIDElement *)
IOHIDElementContainer::createNULLElements(void *,IOHIDElementPrivate *)
IOHIDElementContainer::createReport(IOHIDReportType,uchar,IOBufferMemoryDescriptor *)
IOHIDElementContainer::createReportHandlerElements(void *)
IOHIDElementContainer::createValueElements(void *,OSArray *,uint,IOHIDElementType,uint)
IOHIDElementContainer::free(void)
IOHIDElementContainer::getReportCountAndSizes(void *)
IOHIDElementContainer::init(void *,ulong long)
IOHIDElementContainer::processReport(IOHIDReportType,uchar,void *,uint,ulong long,bool *,uint)
IOHIDElementContainer::registerElement(IOHIDElementPrivate *,uint *)
IOHIDElementContainer::setReportSize(uchar,IOHIDReportType,uint)
IOHIDElementPrivate::addChildElement(IOHIDElementPrivate*,bool)
IOHIDElementPrivate::addEventQueue(IOHIDEventQueue *)
IOHIDElementPrivate::arrayHandlerElement(IOHIDElementContainer *,IOHIDElementType,IOHIDElementPrivate*,IOHIDElementPrivate*)
IOHIDElementPrivate::buttonElement(IOHIDElementContainer *,IOHIDElementType,HIDButtonCapabilities *,IOHIDElementPrivate*)
IOHIDElementPrivate::collectionElement(IOHIDElementContainer *,IOHIDElementType,HIDCollectionExtendedNode *,IOHIDElementPrivate*)
IOHIDElementPrivate::conformsTo(uint,uint)
IOHIDElementPrivate::copyCollection(OSDictionary *)
IOHIDElementPrivate::createArrayReport(uchar,void *,uint *)
IOHIDElementPrivate::createDuplicateReport(uchar,void *,uint *)
IOHIDElementPrivate::createProperties(void)
IOHIDElementPrivate::createReport(uchar,void *,uint *,IOHIDElementPrivate**)
IOHIDElementPrivate::createSubElements(void)
IOHIDElementPrivate::enqueueValue(_IOHIDElementValue *)
IOHIDElementPrivate::fillElementStruct(IOHIDElementStruct *)
IOHIDElementPrivate::free(void)
IOHIDElementPrivate::getDataValue(uint)
IOHIDElementPrivate::getDataValue(void)
IOHIDElementPrivate::getElementValueSize(void)
IOHIDElementPrivate::getRangeCount(void)
IOHIDElementPrivate::getReportType(IOHIDReportType *)
IOHIDElementPrivate::getScaledFixedValue(uint)
IOHIDElementPrivate::getScaledFixedValue(uint,uint)
IOHIDElementPrivate::getScaledValue(uint)
IOHIDElementPrivate::getUsage(void)
IOHIDElementPrivate::getValue(uint)
IOHIDElementPrivate::getValue(void)
IOHIDElementPrivate::hasEventQueue(IOHIDEventQueue *)
IOHIDElementPrivate::init(IOHIDElementContainer *,IOHIDElementType)
IOHIDElementPrivate::matchProperties(OSDictionary *)
IOHIDElementPrivate::newSubElement(ushort)
IOHIDElementPrivate::nullElement(IOHIDElementContainer *,uint,IOHIDElementPrivate*)
IOHIDElementPrivate::processArrayReport(uchar,void *,uint,ulong long const*)
IOHIDElementPrivate::processReport(uchar,void *,uint,ulong long const*,IOHIDElementPrivate**,uint)
IOHIDElementPrivate::removeEventQueue(IOHIDEventQueue *)
IOHIDElementPrivate::reportHandlerElement(IOHIDElementContainer *,IOHIDElementType,uint,uint)
IOHIDElementPrivate::serialize(OSSerialize *)
IOHIDElementPrivate::setArrayElementValue(uint,uint)
IOHIDElementPrivate::setDataBits(OSData *)
IOHIDElementPrivate::setDataValue(OSData *)
IOHIDElementPrivate::setMemoryForElementValue(ulong long,void *)
IOHIDElementPrivate::setOptions(uint,uint,void *)
IOHIDElementPrivate::setOutOfBoundsValue(void)
IOHIDElementPrivate::setValue(uint)
IOHIDElementPrivate::setValue(uint,uint)
IOHIDElementPrivate::valueElement(IOHIDElementContainer *,IOHIDElementType,HIDValueCapabilities *,IOHIDElementPrivate*)
IOHIDEvent::_axisEvent(uint,ulong long,int,int,int,uint)
IOHIDEvent::absolutePointerEvent(ulong long,int,int,int,uint,uint,uint)
IOHIDEvent::accelerometerEvent(ulong long,int,int,int,uint,uint,uint,uint)
IOHIDEvent::ambientLightSensorEvent(ulong long,uint,uchar,double,double,double,uint)
IOHIDEvent::ambientLightSensorEvent(ulong long,uint,uint,uint,uint,uint,uint)
IOHIDEvent::appendBytes(uchar *,ulong long)
IOHIDEvent::appendChild(IOHIDEvent*)
IOHIDEvent::atmosphericPressureEvent(ulong long,int,uint,uint)
IOHIDEvent::biometricEvent(ulong long,int,uint,uint)
IOHIDEvent::brightnessEvent(ulong long,int,int,ulong long,uint)
IOHIDEvent::buttonEvent(ulong long,uint,uchar,bool,uint)
IOHIDEvent::compassEvent(ulong long,int,int,int,uint,uint,uint,uint)
IOHIDEvent::createBytes(void)
IOHIDEvent::digitizerEvent(ulong long,uint,uint,bool,uint,int,int,int,int,int,int,uint)
IOHIDEvent::extendedGameControllerEvent(ulong long,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,uint)
IOHIDEvent::free(void)
IOHIDEvent::getDataValue(uint,uint)
IOHIDEvent::getDoubleValue(uint,uint)
IOHIDEvent::getFixedValue(uint,uint)
IOHIDEvent::getIntegerValue(uint,uint)
IOHIDEvent::getLatency(uint)
IOHIDEvent::getLength(uint *)
IOHIDEvent::gyroEvent(ulong long,int,int,int,uint,uint,uint,uint)
IOHIDEvent::humidityEvent(ulong long,int,uint,uint)
IOHIDEvent::initWithCapacity(ulong long)
IOHIDEvent::initWithType(uint,ulong long)
IOHIDEvent::keyboardEvent(ulong long,uint,uint,bool,uchar,bool,uchar,uint)
IOHIDEvent::keyboardEvent(ulong long,uint,uint,bool,uint)
IOHIDEvent::multiAxisPointerEvent(ulong long,int,int,int,int,int,int,uint,uint,uint)
IOHIDEvent::orientationEvent(ulong long,uint,uint)
IOHIDEvent::powerEvent(ulong long,long long,uint,uint,uint)
IOHIDEvent::proximityEvent(ulong long,uint,uint,uint)
IOHIDEvent::readBytes(void *,ulong long)
IOHIDEvent::relativePointerEventWithFixed(ulong long,int,int,int,uint,uint,uint)
IOHIDEvent::scrollEvent(ulong long,int,int,int,uint)
IOHIDEvent::setDoubleValue(uint,double,uint)
IOHIDEvent::setFixedValue(uint,int,uint)
IOHIDEvent::setIntegerValue(uint,int,uint)
IOHIDEvent::standardGameControllerEvent(ulong long,int,int,int,int,int,int,int,int,int,int,uint)
IOHIDEvent::temperatureEvent(ulong long,int,uint)
IOHIDEvent::unicodeEvent(ulong long,uchar *,uint,uint,int,uint)
IOHIDEvent::vendorDefinedEvent(ulong long,uint,uint,uint,uchar *,uint,uint)
IOHIDEvent::withBytes(void const*,ulong long)
IOHIDEvent::withType(uint,uint)
IOHIDEventDriver::calibrateCenteredPreferredStateElement(IOHIDElement *,int)
IOHIDEventDriver::calibrateJustifiedPreferredStateElement(IOHIDElement *,int)
IOHIDEventDriver::checkGameControllerElement(IOHIDElement *)
IOHIDEventDriver::checkMultiAxisElement(IOHIDElement *)
IOHIDEventDriver::conformTo(uint,uint)
IOHIDEventDriver::copyEvent(uint,IOHIDEvent *,uint)
IOHIDEventDriver::copyMatchingEvent(OSDictionary *)
IOHIDEventDriver::createDigitizerTransducerEventForReport(DigitizerTransducer *,ulong long,uint)
IOHIDEventDriver::dispatchEvent(IOHIDEvent *,uint)
IOHIDEventDriver::free(void)
IOHIDEventDriver::getBlessedUsagePairs(void)
IOHIDEventDriver::getButtonStateFromElements(OSArray *)
IOHIDEventDriver::getCountryCode(void)
IOHIDEventDriver::getElementValue(uint,uint)
IOHIDEventDriver::getLocationID(void)
IOHIDEventDriver::getManufacturer(void)
IOHIDEventDriver::getProduct(void)
IOHIDEventDriver::getProductID(void)
IOHIDEventDriver::getSerialNumber(void)
IOHIDEventDriver::getTransport(void)
IOHIDEventDriver::getVendorID(void)
IOHIDEventDriver::getVendorIDSource(void)
IOHIDEventDriver::getVersion(void)
IOHIDEventDriver::handleAccelReport(ulong long,uint)
IOHIDEventDriver::handleBiometricReport(ulong long,uint)
IOHIDEventDriver::handleBootPointingReport(ulong long,IOMemoryDescriptor *,uint)
IOHIDEventDriver::handleCompassReport(ulong long,uint)
IOHIDEventDriver::handleDeviceOrientationReport(ulong long,uint)
IOHIDEventDriver::handleDigitizerCollectionReport(ulong long,uint)
IOHIDEventDriver::handleDigitizerReport(ulong long,uint)
IOHIDEventDriver::handleDigitizerTransducerReport(DigitizerTransducer *,ulong long,uint)
IOHIDEventDriver::handleGameControllerReport(ulong long,uint)
IOHIDEventDriver::handleGyroReport(ulong long,uint)
IOHIDEventDriver::handleInterruptReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDEventDriver::handleKeboardReport(ulong long,uint)
IOHIDEventDriver::handleMultiAxisPointerReport(ulong long,uint)
IOHIDEventDriver::handlePhaseReport(ulong long,uint)
IOHIDEventDriver::handleProximityReport(ulong long,uint)
IOHIDEventDriver::handleRelativeReport(ulong long,uint)
IOHIDEventDriver::handleScrollReport(ulong long,uint)
IOHIDEventDriver::handleStart(IOService *)
IOHIDEventDriver::handleTemperatureReport(ulong long,uint)
IOHIDEventDriver::handleUnicodeGestureCandidateReport(EventElementCollection *,ulong long,uint)
IOHIDEventDriver::handleUnicodeGestureReport(ulong long,uint)
IOHIDEventDriver::handleUnicodeLegacyReport(ulong long,uint)
IOHIDEventDriver::handleVendorMessageReport(ulong long,IOMemoryDescriptor *,uint,int)
IOHIDEventDriver::init(OSDictionary *)
IOHIDEventDriver::parseAccelElement(IOHIDElement *)
IOHIDEventDriver::parseBiometricElement(IOHIDElement *)
IOHIDEventDriver::parseCompassElement(IOHIDElement *)
IOHIDEventDriver::parseDeviceOrientationElement(IOHIDElement *)
IOHIDEventDriver::parseDigitizerElement(IOHIDElement *)
IOHIDEventDriver::parseDigitizerTransducerElement(IOHIDElement *,IOHIDElement *)
IOHIDEventDriver::parseElements(OSArray *,uint)
IOHIDEventDriver::parseGameControllerElement(IOHIDElement *)
IOHIDEventDriver::parseGestureUnicodeElement(IOHIDElement *)
IOHIDEventDriver::parseGyroElement(IOHIDElement *)
IOHIDEventDriver::parseKeyboardElement(IOHIDElement *)
IOHIDEventDriver::parseLEDElement(IOHIDElement *)
IOHIDEventDriver::parseLegacyUnicodeElement(IOHIDElement *)
IOHIDEventDriver::parseMultiAxisElement(IOHIDElement *)
IOHIDEventDriver::parsePhaseElement(IOHIDElement *)
IOHIDEventDriver::parseProximityElement(IOHIDElement *)
IOHIDEventDriver::parseRelativeElement(IOHIDElement *)
IOHIDEventDriver::parseScrollElement(IOHIDElement *)
IOHIDEventDriver::parseSensorPropertyElement(IOHIDElement *)
IOHIDEventDriver::parseTemperatureElement(IOHIDElement *)
IOHIDEventDriver::parseVendorMessageElement(IOHIDElement *)
IOHIDEventDriver::processDigitizerElements(void)
IOHIDEventDriver::processGameControllerElements(void)
IOHIDEventDriver::processLEDElements(void)
IOHIDEventDriver::processMultiAxisElements(void)
IOHIDEventDriver::serializeCharacterGestureState(void *,OSSerialize *)
IOHIDEventDriver::serializeDebugState(void *,OSSerialize *)
IOHIDEventDriver::setAccelProperties(void)
IOHIDEventDriver::setBiometricProperties(void)
IOHIDEventDriver::setCompassProperties(void)
IOHIDEventDriver::setDeviceOrientationProperties(void)
IOHIDEventDriver::setDigitizerProperties(void)
IOHIDEventDriver::setElementValue(uint,uint,uint)
IOHIDEventDriver::setGameControllerProperties(void)
IOHIDEventDriver::setGyroProperties(void)
IOHIDEventDriver::setKeyboardProperties(void)
IOHIDEventDriver::setLEDProperties(void)
IOHIDEventDriver::setMultiAxisProperties(void)
IOHIDEventDriver::setProperties(OSObject *)
IOHIDEventDriver::setRelativeProperties(void)
IOHIDEventDriver::setScrollProperties(void)
IOHIDEventDriver::setSensorProperties(void)
IOHIDEventDriver::setSurfaceDimensions(void)
IOHIDEventDriver::setTemperatureProperties(void)
IOHIDEventDriver::setUnicodeProperties(void)
IOHIDEventDriver::setVendorMessageProperties(void)
IOHIDEventDummyService::didTerminate(IOService *,uint,bool *)
IOHIDEventDummyService::handleStart(IOService *)
IOHIDEventQueue::copyUsageCountDict(void)
IOHIDEventQueue::enqueue(void *,uint)
IOHIDEventQueue::serialize(OSSerialize *)
IOHIDEventQueue::updateUsageCounts(void)
IOHIDEventService::EventAvailable_Impl(uint)
IOHIDEventService::SetEventMemory_Impl(IOBufferMemoryDescriptor *)
IOHIDEventService::SetLEDAction(uint,uint,bool,ulong long,OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOHIDEventService::SetLEDAction_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,uint,uint,bool,ulong long,OSAction *),OSMetaClass const*)
IOHIDEventService::SetLEDState_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint,bool))
IOHIDEventService::SetProperties_Impl(OSDictionary *)
IOHIDEventService::SetUserProperties(OSDictionary *,ulong long,OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOHIDEventService::SetUserProperties_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSDictionary *,ulong long,OSAction *),OSMetaClass const*)
IOHIDEventService::_CompleteCopyEvent_Impl(OSAction *,IOBufferMemoryDescriptor *,ulong long)
IOHIDEventService::_CompleteCopyEvent_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,IOBufferMemoryDescriptor *,ulong long))
IOHIDEventService::_CompleteSetLED_Impl(OSAction *,int,ulong long)
IOHIDEventService::_CompleteSetLED_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,int,ulong long))
IOHIDEventService::_CompleteSetProperties_Impl(OSAction *,int,ulong long)
IOHIDEventService::_Dispatch(IOHIDEventService*,IORPC)
IOHIDEventService::_DispatchAbsolutePointerEvent_Impl(ulong long,int,int,uint,uint,bool)
IOHIDEventService::_DispatchKeyboardEvent_Impl(ulong long,uint,uint,uint,uint,bool)
IOHIDEventService::_DispatchRelativePointerEvent_Impl(ulong long,int,int,uint,uint,bool)
IOHIDEventService::_DispatchRelativeScrollWheelEvent_Impl(ulong long,int,int,int,uint,bool)
IOHIDEventService::_DispatchRelativeScrollWheelEvent_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,int,int,int,uint,bool))
IOHIDEventService::calculateStandardType(void)
IOHIDEventService::close(IOService *,uint)
IOHIDEventService::debugActionSysdiagnose(IOHIDEventService*,void *)
IOHIDEventService::debuggerTimerCallback(IOTimerEventSource *)
IOHIDEventService::determineResolution(IOHIDElement *)
IOHIDEventService::dispatchAbsolutePointerEvent(ulong long,int,int,IOGBounds *,uint,bool,int,int,int,uint)
IOHIDEventService::dispatchBiometricEvent(ulong long,int,uint,uint)
IOHIDEventService::dispatchDigitizerEvent(ulong long,uint,uint,bool,uint,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchDigitizerEventWithOrientation(ulong long,uint,uint,bool,uint,int,int,int,int,int,int,uint,int *,uint,uint)
IOHIDEventService::dispatchDigitizerEventWithTiltOrientation(ulong long,uint,uint,bool,uint,int,int,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchEvent(IOHIDEvent *,uint)
IOHIDEventService::dispatchExtendedGameControllerEvent(ulong long,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchExtendedGameControllerEventWithThumbstickButtons(ulong long,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchKeyboardEvent(ulong long,uint,uint,uint,uchar,uchar,uchar,uint)
IOHIDEventService::dispatchKeyboardEvent(ulong long,uint,uint,uint,uint)
IOHIDEventService::dispatchMultiAxisPointerEvent(ulong long,uint,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchRelativePointerEventWithFixed(ulong long,int,int,uint,uint)
IOHIDEventService::dispatchScrollWheelEvent(ulong long,int,int,int,uint)
IOHIDEventService::dispatchScrollWheelEventWithFixed(ulong long,int,int,int,uint)
IOHIDEventService::dispatchStandardGameControllerEvent(ulong long,int,int,int,int,int,int,int,int,int,int,uint)
IOHIDEventService::dispatchTabletPointerEvent(ulong long,uint,int,int,int,IOGBounds *,uint,int,int,int,int,int,int,int,int,uint,uint)
IOHIDEventService::dispatchTabletProximityEvent(ulong long,uint,bool,bool,uint,uint,uint)
IOHIDEventService::dispatchUnicodeEvent(ulong long,uchar *,uint,uint,int,uint)
IOHIDEventService::free(void)
IOHIDEventService::getDeviceUsagePairs(void)
IOHIDEventService::getLocationID(void)
IOHIDEventService::getPrimaryUsagePage(void)
IOHIDEventService::getReportInterval(void)
IOHIDEventService::getTransport(void)
IOHIDEventService::handleClose(IOService *,uint)
IOHIDEventService::handleCopyMatchingEvent_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSDictionary *,IOHIDEvent **))
IOHIDEventService::handleIsOpen(IOService const*)
IOHIDEventService::handleOpen(IOService *,uint,void *)
IOHIDEventService::init(OSDictionary *)
IOHIDEventService::matchPropertyTable(OSDictionary *,int *)
IOHIDEventService::message(uint,IOService *,void *)
IOHIDEventService::multiAxisTimerCallback(IOTimerEventSource *)
IOHIDEventService::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOHIDEventService::open(IOService *,uint,void *,void (*)(OSObject *,OSObject *,void *,OSObject *,uint))
IOHIDEventService::parseSupportedElements(OSArray *,uint)
IOHIDEventService::setProperties(OSObject *)
IOHIDEventService::setSystemProperties(OSDictionary *)
IOHIDEventService::stackshotTimerCallback(IOTimerEventSource *)
IOHIDEventService::start(IOService *)
IOHIDEventService::stop(IOService *)
IOHIDEventService::supportsHeadset(OSArray *)
IOHIDEventServiceFastPathUserClient::_close(IOHIDEventServiceFastPathUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceFastPathUserClient::_copyEvent(IOHIDEventServiceFastPathUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceFastPathUserClient::_open(IOHIDEventServiceFastPathUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceFastPathUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOHIDEventServiceFastPathUserClient::clientMemoryForTypeGated(uint *,IOMemoryDescriptor **)
IOHIDEventServiceFastPathUserClient::close(void)
IOHIDEventServiceFastPathUserClient::copyEvent(OSObject *,uint)
IOHIDEventServiceFastPathUserClient::copyProperty(char const*)
IOHIDEventServiceFastPathUserClient::copyPropertyGated(char const*,OSObject **)
IOHIDEventServiceFastPathUserClient::didTerminate(IOService *,uint,bool *)
IOHIDEventServiceFastPathUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOHIDEventServiceFastPathUserClient::externalMethodGated(IOHIDEventServiceFastPathUserClient::ExternalMethodGatedArguments *)
IOHIDEventServiceFastPathUserClient::free(void)
IOHIDEventServiceFastPathUserClient::getSharedMemorySize(void)
IOHIDEventServiceFastPathUserClient::initWithTask(task *,void *,uint)
IOHIDEventServiceFastPathUserClient::message(uint,IOService *,void *)
IOHIDEventServiceFastPathUserClient::open(uint,OSDictionary *)
IOHIDEventServiceFastPathUserClient::serializeDebugState(void *,OSSerialize *)
IOHIDEventServiceFastPathUserClient::setProperties(OSObject *)
IOHIDEventServiceFastPathUserClient::setPropertiesGated(OSObject *)
IOHIDEventServiceFastPathUserClient::start(IOService *)
IOHIDEventServiceFastPathUserClient::stop(IOService *)
IOHIDEventServiceQueue::enqueueEvent(IOHIDEvent *)
IOHIDEventServiceQueue::getMemoryDescriptor(void)
IOHIDEventServiceQueue::sendDataAvailableNotification(void)
IOHIDEventServiceQueue::serialize(OSSerialize *)
IOHIDEventServiceQueue::setNotificationPort(ipc_port *)
IOHIDEventServiceQueue::withCapacity(OSObject *,uint,uint)
IOHIDEventServiceQueue::withCapacity(uint,uint)
IOHIDEventServiceUserClient::_close(IOHIDEventServiceUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceUserClient::_copyEvent(IOHIDEventServiceUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceUserClient::_copyMatchingEvent(IOHIDEventServiceUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceUserClient::_open(IOHIDEventServiceUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceUserClient::_setElementValue(IOHIDEventServiceUserClient*,void *,IOExternalMethodArguments *)
IOHIDEventServiceUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOHIDEventServiceUserClient::clientMemoryForTypeGated(uint *,IOMemoryDescriptor **)
IOHIDEventServiceUserClient::close(void)
IOHIDEventServiceUserClient::copyEvent(uint,IOHIDEvent *,IOHIDEvent **,uint)
IOHIDEventServiceUserClient::copyMatchingEvent(OSDictionary *,OSData **)
IOHIDEventServiceUserClient::didTerminate(IOService *,uint,bool *)
IOHIDEventServiceUserClient::enqueueEventGated(IOHIDEvent *)
IOHIDEventServiceUserClient::eventServiceCallback(IOHIDEventService *,void *,IOHIDEvent *,uint)
IOHIDEventServiceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOHIDEventServiceUserClient::externalMethodGated(IOHIDEventServiceUserClient::ExternalMethodGatedArguments *)
IOHIDEventServiceUserClient::free(void)
IOHIDEventServiceUserClient::initWithTask(task *,void *,uint)
IOHIDEventServiceUserClient::open(uint)
IOHIDEventServiceUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOHIDEventServiceUserClient::registerNotificationPortGated(ipc_port *,uint,uint)
IOHIDEventServiceUserClient::serializeDebugState(void *,OSSerialize *)
IOHIDEventServiceUserClient::setElementValue(uint,uint,uint)
IOHIDEventServiceUserClient::setProperties(OSObject *)
IOHIDEventServiceUserClient::start(IOService *)
IOHIDEventServiceUserClient::stop(IOService *)
IOHIDEventSource::HIDEventSource(OSObject *,void (*)(OSObject *,...))
IOHIDEventSource::free(void)
IOHIDEventSource::setWorkLoop(IOWorkLoop *)
IOHIDInterface::AddReportToPool_Impl(IOBufferMemoryDescriptor *)
IOHIDInterface::Close_Impl(IOService *,uint)
IOHIDInterface::Close_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uint))
IOHIDInterface::GetElementValues_Impl(uint,IOMemoryDescriptor *)
IOHIDInterface::GetElementValues_Impl(uint,IOMemoryDescriptor *)
IOHIDInterface::GetElementValues_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,IOMemoryDescriptor *))
IOHIDInterface::GetReport_Impl(IOMemoryDescriptor *,IOHIDReportType,uint,uint)
IOHIDInterface::GetSupportedCookies_Impl(IOBufferMemoryDescriptor **)
IOHIDInterface::HandleReportPrivate(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
IOHIDInterface::Open_Impl(IOService *,uint,OSAction *)
IOHIDInterface::Open_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uint,OSAction *))
IOHIDInterface::ReportAvailable(ulong long,uint,uint,IOHIDReportType,IOMemoryDescriptor *,OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOHIDInterface::SendDebugBuffer_Impl(IOMemoryDescriptor *)
IOHIDInterface::SendDebugBuffer_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor *))
IOHIDInterface::SetElementValues_Impl(uint,IOMemoryDescriptor *)
IOHIDInterface::SetReport_Impl(IOMemoryDescriptor *,IOHIDReportType,uint,uint)
IOHIDInterface::SetReport_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor *,IOHIDReportType,uint,uint))
IOHIDInterface::_Dispatch(IOHIDInterface*,IORPC)
IOHIDInterface::addReportToPoolGated(IOMemoryDescriptor *)
IOHIDInterface::close(IOService *,uint)
IOHIDInterface::createMatchingElements(OSDictionary *,uint)
IOHIDInterface::free(void)
IOHIDInterface::getReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint)
IOHIDInterface::handleReport(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,uint)
IOHIDInterface::handleReportGated(ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *)
IOHIDInterface::init(OSDictionary *)
IOHIDInterface::matchPropertyTable(OSDictionary *,int *)
IOHIDInterface::message(uint,IOService *,void *)
IOHIDInterface::open(IOService *,uint,void (*)(OSObject *,ulong long,IOMemoryDescriptor *,IOHIDReportType,uint,void *),void *)
IOHIDInterface::openGated(IOService *,uint,OSAction *)
IOHIDInterface::serializeDebugState(void *,OSSerialize *)
IOHIDInterface::setProperty(OSSymbol const*,OSObject *)
IOHIDInterface::setReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint)
IOHIDInterface::start(IOService *)
IOHIDInterface::withElements(OSArray *)
IOHIDLibUserClient::MetaClass::alloc(void)
IOHIDLibUserClient::ReqComplete(void *,int,uint)
IOHIDLibUserClient::ReqCompleteGated(void *,int,uint)
IOHIDLibUserClient::_addElementToQueue(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_disposeQueue(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_getElements(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_getReport(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_queueHasElement(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_setQueueAsyncPort(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_setReport(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::_updateElementValues(IOHIDLibUserClient*,void *,IOExternalMethodArguments *)
IOHIDLibUserClient::addElementToQueue(IOHIDEventQueue *,uint,uint,ulong long *)
IOHIDLibUserClient::attach(IOService *)
IOHIDLibUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOHIDLibUserClient::clientMemoryForTypeGated(uint,uint *,IOMemoryDescriptor **)
IOHIDLibUserClient::close(void)
IOHIDLibUserClient::createQueue(uint,uint,ulong long *)
IOHIDLibUserClient::createTokenForQueue(IOHIDEventQueue *)
IOHIDLibUserClient::didTerminate(IOService *,uint,bool *)
IOHIDLibUserClient::disposeQueue(IOHIDEventQueue *)
IOHIDLibUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOHIDLibUserClient::externalMethodGated(void *)
IOHIDLibUserClient::free(void)
IOHIDLibUserClient::getElementCount(ulong long *,ulong long *)
IOHIDLibUserClient::getElements(uint,IOMemoryDescriptor *,uint *)
IOHIDLibUserClient::getElements(uint,void *,uint *)
IOHIDLibUserClient::getNextTokenForToken(uint)
IOHIDLibUserClient::getQueueForToken(uint)
IOHIDLibUserClient::getReport(IOMemoryDescriptor *,uint *,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDLibUserClient::getReport(void *,uint *,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDLibUserClient::initWithTask(task *,void *,uint)
IOHIDLibUserClient::message(uint,IOService *,void *)
IOHIDLibUserClient::messageGated(uint,IOService *,void *)
IOHIDLibUserClient::open(uint)
IOHIDLibUserClient::postElementValues(IOMemoryDescriptor *)
IOHIDLibUserClient::postElementValues(uchar const*,uint)
IOHIDLibUserClient::processElement(_IOHIDElementValue *,IOHIDEventQueue *)
IOHIDLibUserClient::queueHasElement(IOHIDEventQueue *,uint,ulong long *)
IOHIDLibUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOHIDLibUserClient::registerNotificationPortGated(ipc_port *,uint,uint)
IOHIDLibUserClient::releaseReport(ulong long)
IOHIDLibUserClient::removeElementFromQueue(IOHIDEventQueue *,uint,ulong long *)
IOHIDLibUserClient::removeQueueFromMap(IOHIDEventQueue *)
IOHIDLibUserClient::resourceNotification(void *,IOService *,IONotifier *)
IOHIDLibUserClient::resourceNotificationGated(void)
IOHIDLibUserClient::serializeDebugState(void *,OSSerialize *)
IOHIDLibUserClient::setProperties(OSObject *)
IOHIDLibUserClient::setReport(IOMemoryDescriptor *,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDLibUserClient::setReport(void const*,uint,IOHIDReportType,uint,uint,IOHIDCompletion *)
IOHIDLibUserClient::setStateForQueues(uint,uint)
IOHIDLibUserClient::setValid(bool)
IOHIDLibUserClient::start(IOService *)
IOHIDLibUserClient::startQueue(IOHIDEventQueue *)
IOHIDLibUserClient::stop(IOService *)
IOHIDLibUserClient::stopQueue(IOHIDEventQueue *)
IOHIDLibUserClient::updateElementValues(uint const*,uint,IOMemoryDescriptor *,uint,uint)
IOHIDLibUserClient::updateElementValues(uint const*,uint,void *,uint,uint)
IOHIDLibUserClient::~IOHIDLibUserClient()
IOHIDOOBReportDescriptor::inTaskWithBytes(task *,void const*,ulong,uint,bool)
IOHIDProviderPropertyMerger::mergeDictionaries(OSDictionary *,OSDictionary *)
IOHIDProviderPropertyMerger::mergeProperties(IOService *,OSDictionary *)
IOHIDProviderPropertyMerger::probe(IOService *,int *)
IOHIDRelayService::MetaClass::alloc(void)
IOHIDRelayService::~IOHIDRelayService()
IOHIDReportElementQueue::enqueue(_IOHIDElementValue *)
IOHIDReportElementQueue::withCapacity(uint,IOHIDLibUserClient *)
IOHIDResource::free(void)
IOHIDResource::start(IOService *)
IOHIDResourceDeviceUserClient::ReportComplete(void *,int,uint)
IOHIDResourceDeviceUserClient::_registerService(IOHIDResourceDeviceUserClient*,void *,IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::_releaseToken(IOHIDResourceDeviceUserClient*,void *,IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::cleanupPendingReports(void)
IOHIDResourceDeviceUserClient::clientMemoryForTypeGated(uint *,IOMemoryDescriptor **)
IOHIDResourceDeviceUserClient::createAndStartDevice(void)
IOHIDResourceDeviceUserClient::createDevice(IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::createMemoryDescriptorFromInputArguments(IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOHIDResourceDeviceUserClient::externalMethodGated(IOHIDResourceDeviceUserClient::ExternalMethodGatedArguments *)
IOHIDResourceDeviceUserClient::free(void)
IOHIDResourceDeviceUserClient::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDResourceDeviceUserClient::getReportGated(IOHIDResourceDeviceUserClient::ReportGatedArguments *)
IOHIDResourceDeviceUserClient::handleReport(IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::initWithTask(task *,void *,uint)
IOHIDResourceDeviceUserClient::postReportResult(IOExternalMethodArguments *)
IOHIDResourceDeviceUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
IOHIDResourceDeviceUserClient::registerNotificationPortGated(ipc_port *)
IOHIDResourceDeviceUserClient::releaseTokenGated(ulong long)
IOHIDResourceDeviceUserClient::serializeDebugState(void *,OSSerialize *)
IOHIDResourceDeviceUserClient::setPropertiesGated(OSObject *)
IOHIDResourceDeviceUserClient::setReportGated(IOHIDResourceDeviceUserClient::ReportGatedArguments *)
IOHIDResourceDeviceUserClient::start(IOService *)
IOHIDResourceDeviceUserClient::stop(IOService *)
IOHIDResourceDeviceUserClient::terminateDevice(void)
IOHIDResourceQueue::enqueueReport(IOHIDResourceDataQueueHeader *,IOMemoryDescriptor *)
IOHIDResourceQueue::serialize(OSSerialize *)
IOHIDResourceQueue::withCapacity(uint)
IOHIDUserDevice::free(void)
IOHIDUserDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDUserDevice::handleStart(IOService *)
IOHIDUserDevice::initWithProperties(OSDictionary *)
IOHIDUserDevice::newReportDescriptor(IOMemoryDescriptor **)
IOHIDUserDevice::newReportIntervalNumber(void)
IOHIDUserDevice::newTransportString(void)
IOHIDUserDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOHIDUserDevice::withProperties(OSDictionary *)
IOHistogramReporter::createLegend(ulong long,char const*,int,IOHistogramSegmentConfig *,ushort,ulong long)
IOHistogramReporter::handleCreateLegend(void)
IOHistogramReporter::with(IOService *,ushort,ulong long,char const*,ulong long,int,IOHistogramSegmentConfig *)
IOImageLoader::checkSHAForImageFromDatastore(char const*,uint,void const*,ulong long)
IOImageLoader::completeImageLoad(task *,OSDictionary *)
IOImageLoader::datastoreNotifierPublishHandlerGated(void *,IOService *,IONotifier *)
IOImageLoader::datastoreNotifierTerminatedHandlerGated(void *,IOService *,IONotifier *)
IOImageLoader::detach(IOService *)
IOImageLoader::doAllImagesHaveImageSizeRequirements(OSDictionary *)
IOImageLoader::free(void)
IOImageLoader::isNetbooting(void)
IOImageLoader::notifyImageLoad(OSDictionary *,int)
IOImageLoader::prepareImageLoad(task *,OSDictionary *)
IOImageLoaderDatastore::start(IOService *)
IOImageLoaderDatastoreHelper::checkVersion(IOImageLoaderDatastoreIndex_s const*)
IOImageLoaderDatastoreHelper::displayIndex(IOImageLoaderDatastoreIndex_s const*)
IOImageLoaderDatastoreHelper::getImageInformationWithImageName(IOImageLoaderDatastoreImageInformation_s *,IOImageLoaderDatastoreIndex_s const*,char const*,uint)
IOImageLoaderDatastoreHelper::getIndexConsumer(IOImageLoaderDatastoreIndex_s const*)
IOImageLoaderDatastoreHelper::getIndexCount(IOImageLoaderDatastoreIndex_s const*)
IOImageLoaderDatastoreHelper::getIndexRecords(IOImageLoaderDatastoreIndex_s const*)
IOImageLoaderDatastoreHelper::getIndexRecordsAt(IOImageLoaderDatastoreIndex_s const*,uint)
IOImageLoaderDatastoreHelper::requestImageLoad(IOImageLoaderDatastoreIndex_s const*,char const*,OSDictionary *,uint)
IOImageLoaderDatastoreHelper::requestImageVerify(IOImageLoaderDatastoreIndex_s const*,char const*,OSDictionary *,uint)
IOImageLoaderImageDictionary::doAllImagesHaveAttributes(IOImageLoaderImageDictionary*)
IOImageLoaderImageDictionary::isAttributeOfType(OSDictionary *,char const*,OSMetaClass const*)
IOImageLoaderImageDictionary::setAttributeWithBoolean(OSDictionary *,char const*,bool)
IOImageLoaderImageDictionary::setAttributeWithNumber(OSDictionary *,char const*,ulong long)
IOImageLoaderImageDictionary::setAttributeWithString(OSDictionary *,char const*,char const*)
IOImageLoaderRequest::MetaClass::alloc(void)
IOImageLoaderRequest::attach(IOService *)
IOImageLoaderRequest::detach(IOService *)
IOImageLoaderRequest::initWithProvider(IOService *,OSDictionary *,char const*)
IOImageLoaderRequest::stop(IOService *)
IOImageLoaderRequest::withProvider(IOService *,OSDictionary *,char const*)
IOImageLoaderUserClient::clientClose(void)
IOImageLoaderUserClient::detach(IOService *)
IOImageLoaderUserClient::externalMethodGated(void *)
IOImageLoaderUserClient::initWithIOImageLoader(IOImageLoader *,task *,void *,uint,OSDictionary *)
IOImageLoaderUserClient::mapArguments(IOExternalMethodArguments *,IOMemoryMap **,void **,ulong *,void **,ulong *,bool)
IOImageLoaderUserClient::unmapArguments(IOExternalMethodArguments *,IOMemoryMap **,void **,void **,ulong,bool)
IOImageLoaderUserClient::userMethodClose(IOImageLoaderUserClient*,void *,IOExternalMethodArguments *)
IOImageLoaderUserClient::userMethodNotifyImageLoad(IOImageLoaderUserClient*,void *,IOExternalMethodArguments *)
IOImageLoaderUserClient::userMethodOpen(IOImageLoaderUserClient*,void *,IOExternalMethodArguments *)
IOImageLoaderUserClient::withIOImageLoader(IOImageLoader *,task *,void *,uint,OSDictionary *)
IOImageLoader__newUserClient_task___void___unsigned_int__OSDictionary___IOUserClient
IOInstallServicePlatformActions(IOService *)
IOInstallServiceSleepPlatformActions(IOService *)
IOInterleavedMemoryDescriptor::IOInterleavedMemoryDescriptor(OSMetaClass const*)
IOInterleavedMemoryDescriptor::IOInterleavedMemoryDescriptor(void)
IOInterleavedMemoryDescriptor::clearMemoryDescriptors(uint)
IOInterleavedMemoryDescriptor::setMemoryDescriptor(IOMemoryDescriptor *,ulong long,ulong long)
IOInterleavedMemoryDescriptor::~IOInterleavedMemoryDescriptor()
IOInterleavedMemoryDescriptor__complete_unsigned_int
IOInterleavedMemoryDescriptor__prepare_unsigned_int
IOInterruptController::causeInterrupt(IOService *,int)
IOInterruptController::disableInterrupt(IOService *,int)
IOInterruptController::enableInterrupt(IOService *,int)
IOInterruptController::getInterruptType(IOService *,int,int *)
IOInterruptController::unregisterInterrupt(IOService *,int)
IOInterruptDispatchSource::Create_Call(IOService *,uint,IODispatchQueue *,IOInterruptDispatchSource**)
IOInterruptDispatchSource::Create_Impl(IOService *,uint,IODispatchQueue *,IOInterruptDispatchSource**)
IOInterruptDispatchSource::Create_Invoke(IORPC,int (*)(IOService *,uint,IODispatchQueue *,IOInterruptDispatchSource**))
IOInterruptDispatchSource::GetInterruptType(IOService *,uint,ulong long *)
IOInterruptDispatchSource::GetInterruptType_Impl(IOService *,uint,ulong long *)
IOInterruptDispatchSource::GetInterruptType_Invoke(IORPC,int (*)(IOService *,uint,ulong long *))
IOInterruptDispatchSource::InterruptOccurred(IORPC,OSAction *,ulong long,ulong long,int (*)(OSMetaClassBase *,IORPC))
IOInterruptDispatchSource::InterruptOccurred_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,ulong long,ulong long))
IOInterruptDispatchSource::InterruptOccurred_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,ulong long,ulong long),OSMetaClass const*)
IOInterruptDispatchSource::MetaClass::Dispatch(IORPC)
IOInterruptDispatchSource::SetHandler(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOInterruptDispatchSource::SetHandler_Impl(OSAction *)
IOInterruptDispatchSource::_Dispatch(IOInterruptDispatchSource*,IORPC)
IOInterruptEventSource::disable(void)
IOInterruptEventSource::enable(void)
IOInterruptEventSource::free(void)
IOInterruptEventSource::getPrimaryInterruptTimestamp(void)
IOInterruptEventSource::interruptEventSource(OSObject *,IOService *,int,void ( {block_pointer})(IOInterruptEventSource*,int))
IOInterruptEventSource::interruptEventSource(OSObject *,void (*)(OSObject *,IOInterruptEventSource*,int),IOService *,int)
IOInterruptEventSource::interruptOccurred(void *,IOService *,int)
IOInterruptEventSource::registerInterruptHandler(IOService *,int)
IOInterruptEventSource::setWorkLoop(IOWorkLoop *)
IOInterruptEventSource::unregisterInterruptHandler(IOService *,int)
IOInterruptEventSource__disableInterruptOccurred_void___IOService___int
IOInterruptEventSource__normalInterruptOccurred_void___IOService___int
IOInterruptQueueEventSource::~IOInterruptQueueEventSource()
IOKDP::MetaClass::alloc(void)
IOKDP::message(uint,IOService *,void *)
IOKDP::probe(IOService *,int *)
IOKDP::start(IOService *)
IOKDP::stop(IOService *)
IOKDP::~IOKDP()
IOKernelDebugger::debugger(IOService *,void (*)(IOService *,void *,uint),void (*)(IOService *,void *,uint *,uint),uint (*)(IOService *),bool (*)(IOService *,bool))
IOKernelDebugger::free(void)
IOKernelDebugger::handleClose(IOService *,uint)
IOKernelDebugger::handleIsOpen(IOService const*)
IOKernelDebugger::handleOpen(IOService *,uint,void *)
IOKernelDebugger::init(IOService *,void (*)(IOService *,void *,uint),void (*)(IOService *,void *,uint *,uint),uint (*)(IOService *),bool (*)(IOService *,bool))
IOKernelDebugger::interfacePublished(void *,void *,IOService *,IONotifier *)
IOKernelDebugger::kdpLinkStatusDispatcher(void)
IOKernelDebugger::kdpReceiveDispatcher(void *,uint *,uint)
IOKernelDebugger::kdpSetModeDispatcher(int)
IOKernelDebugger::kdpTransmitDispatcher(void *,uint)
IOKernelDebugger::message(uint,IOService *,void *)
IOKernelDebugger::nullRxHandler(IOService *,void *,uint *,uint)
IOKernelDebugger::powerStateDidChangeTo(ulong,ulong,IOService *)
IOKernelDebugger::powerStateWillChangeTo(ulong,ulong,IOService *)
IOKernelDebugger::registerHandler(IOService *,void (*)(IOService *,void *,uint),void (*)(IOService *,void *,uint *,uint),uint (*)(IOService *),bool (*)(IOService *,bool))
IOKernelDebugger::signalDebugger(void)
IOKitDiagnostics::serialize(OSSerialize *)
IOKitDiagnostics::updateOffset(OSDictionary *,ulong long,char const*)
IOKitDiagnosticsClient::clientClose(void)
IOLWPool<DIDeviceRequest>::dequeueElement(bool,bool *,bool)
IOLWPool<DIDeviceRequest>::~IOLWPool()
IOLWPool<DISharedBuffer>::dequeueElement(bool,bool *,bool)
IOLWPool<DISharedBuffer>::~IOLWPool()
IOLWPoolBase::init(void)
IOLWPoolBase::releaseReservedElements(ulong)
IOLWPoolBase::reserveElements(ulong)
IOLWPoolBase::waitForEntriesLocked(ulong)
IOLWPoolBase::~IOLWPoolBase()
IOLittleMemoryCursor::withSpecification(ulong long,ulong long,ulong long)
IOMFB::AP::SwapRequestMixin::clear(void)
IOMFB::APTM3Hal_v1::init(bool)
IOMFB::APTM3Hal_v1::instantiate(bool)
IOMFB::APTM3Hal_v1::instantiate(bool)
IOMFB::AppleRegisterStream::AppleRegisterStream(IOMFBPIODMAManager::MemMap *)
IOMFB::AppleRegisterStream::beginPinnedBuffer(uint,uint)
IOMFB::AppleRegisterStream::close(void)
IOMFB::AppleRegisterStream::endPinnedBuffer(void)
IOMFB::AppleRegisterStream::flush(void (*)(void *,void *,bool),void *,void *)
IOMFB::AppleRegisterStream::rewrite(IOMFBAppleRegStmAPIODMA::PinnedBuffer *)
IOMFB::AppleRegisterStream::setBypass(bool)
IOMFB::AppleRegisterStream::withAPIODMA(IOMFBAppleRegStmAPIODMA *)
IOMFB::AppleRegisterStream::withAPIODMA(IOMFBAppleRegStmAPIODMA::Descriptor const*)
IOMFB::AppleRegisterStream::write(uint,uint)
IOMFB::AppleRegisterStream::writeBlock(uint,uint const*,uint,bool,bool)
IOMFB::AppleRegisterStream::writeBlock_impl(uint,uint const*,uint,bool,bool)
IOMFB::AppleRegisterStream::writeDirect(uint,uint)
IOMFB::BICGainProcessor::ads_dva(IOMFB::UPPipe::IOMemory *)
IOMFB::BICProcessor::BICProcessor(void)
IOMFB::BICProcessor::background(void)
IOMFB::BICProcessor::compress_bic(uint,uint,uint *,uchar *,ushort (*)(void *,uint),void *,uint *)
IOMFB::BICProcessor::compress_bic(uint,uint,uint *,uchar *,ushort (*)(void *,uint),void *,uint *,IOMFB::BICGainProcessor::Scale *,IOMFB_Dim16 *,IOMFB::Layout,uint)
IOMFB::BICProcessor::compute_bim(void *,void (*)(void *,IOMFBStatus),IOMFBBurnInMetric *)
IOMFB::BICProcessor::compute_bim(void *,void (*)(void *,IOMFBStatus),IOMFBBurnInMetric *)::$_10::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::compute_tiled_bim(void *,void (*)(void *,IOMFBStatus),IOMFBTiledBIM *)::$_11::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::create(IOMFB::UPPipe::BICSMode,IOMFB::UPPipe*,bool)
IOMFB::BICProcessor::do_resample(uint *)
IOMFB::BICProcessor::export_gain_map(void *,void (*)(void *,IOMFBStatus,double *,uint *),IOMFB::BICGainProcessor::BICData *)
IOMFB::BICProcessor::export_gain_map(void *,void (*)(void *,IOMFBStatus,double *,uint *),IOMFB::BICGainProcessor::Scale *,IOMFB_Dim16 *,IOMFB::BICGainProcessor::BICData *)
IOMFB::BICProcessor::export_gain_map(void *,void (*)(void *,IOMFBStatus,double *,uint *),IOMFB::BICGainProcessor::Scale *,IOMFB_Dim16 *,IOMFB::BICGainProcessor::BICData *)::$_12::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::export_saved_history(void *,void (*)(void *,IOMFBStatus,uint),IOMFB::UPPipe::IOMemory *,IOMFB::BICGainProcessor::Scale,bool,bool)
IOMFB::BICProcessor::export_saved_history(void *,void (*)(void *,IOMFBStatus,uint),IOMFB::UPPipe::IOMemory *,IOMFB::BICGainProcessor::Scale,bool,bool)::$_14::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::init(void *,void (*)(void *,IOMFBStatus),IOMFB::UPPipe::IOMemory *,IOMFB::BICGainProcessor::Scale)
IOMFB::BICProcessor::init(void *,void (*)(void *,IOMFBStatus),IOMFB::UPPipe::IOMemory *,IOMFB::BICGainProcessor::Scale)::$_7::__invoke(void *,void *,void *,void *)
IOMFB::BICProcessor::init_gate(void)
IOMFB::BICProcessor::release(void)
IOMFB::BICProcessor::resample_gain_map(void *,void (*)(void *,IOMFBStatus,uint *),IOMFB::BICGainProcessor::BICData const*,IOMFB::BICGainProcessor::BICData*,IOMFB::BICGainProcessor::Scale,IOMFB_Dim16 *)
IOMFB::BICProcessor::resample_gain_map(void *,void (*)(void *,IOMFBStatus,uint *),IOMFB::BICGainProcessor::BICData const*,IOMFB::BICGainProcessor::BICData*,IOMFB::BICGainProcessor::Scale,IOMFB_Dim16 *)::$_13::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::rewrite_history(void *,void (*)(void *,IOMFBStatus),IOMFB::UPPipe::IOMemory *,bool)
IOMFB::BICProcessor::rewrite_history(void *,void (*)(void *,IOMFBStatus),IOMFB::UPPipe::IOMemory *,bool)::$_8::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::set_background_state(IOMFB::BICProcessor::State)
IOMFB::BICProcessor::set_background_state_gated(IOMFB::BICProcessor::State)
IOMFB::BICProcessor::setup(IOMFB::BICGainProcessor::Params const*,IOMFB::BICGainProcessor::Config const*)
IOMFB::BICProcessor::supports_scaled_bic_generation(IOMFB::BICGainProcessor::Scale *)
IOMFB::BICProcessor::update_history(void *,void (*)(void *,IOMFBStatus),IOMFB::BICSAccumBuf *,uint)
IOMFB::BICProcessor::update_history(void *,void (*)(void *,IOMFBStatus),IOMFB::BICSAccumBuf *,uint)::$_9::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::BICProcessor::~BICProcessor()
IOMFB::BWRHandler::dcs_rt_enable(IOMFB::BWRHandler::dcs_rt_block_t,IOMFB::BWRHandler::dcs_rt_dir_t,bool)
IOMFB::BWRHandler::dcs_rt_finalize(uint *,uint *,bool)
IOMFB::BWRHandler::dcs_rt_update(IOMFB::BWRHandler::dcs_rt_block_t,IOMFB::BWRHandler::dcs_rt_dir_t,float)
IOMFB::BWRHandler::get_bic_bw(uint const*,uint const*,uint *)
IOMFB::BWRHandler::get_bis_bw(uint *,uint)
IOMFB::BWRHandler::get_blm_bw(uint *,uint *,uint,uint,uint,uint,uint)
IOMFB::BWRHandler::get_gp_bw(uint,IOSurface *,IOMFBRect const*,IOMFBRect const*,_IOMobileFramebufferTransformOptions,uint *,uint *)
IOMFB::BWRHandler::get_pdc_bw(uint *,IOMFB::BWRHandler::dcs_rt_pdc_params_t *)
IOMFB::BWRHandler::get_psf_bw(uint *,uint *,uint,uint,uint,uint)
IOMFB::BWRHandler::get_ratio_bw(uint const*,uint const*,float,uint *)
IOMFB::BWRHandler::get_replay_bw(uint *,uint)
IOMFB::BWRHandler::get_spuc_bw(uint const*,uint const*,uint *)
IOMFB::BrightnessScale::BrightnessScale(IOMFB::PropMgr *)
IOMFB::BrightnessScale::BrightnessScale(IOMFB::PropMgr *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::BrightnessScale::compute(void)
IOMFB::BrightnessScale::will_power_off(bool)
IOMFB::BrightnessUpdates::set_brightness(int,bool)
IOMFB::BufferDescriptor::withOptions(uint,ulong long,uint)
IOMFB::DBSRHandler::cur_rrate(void)
IOMFB::DBSRHandler::enable(bool)
IOMFB::DBSRHandler::get(IOMFBDBSRLUT *)
IOMFB::DBSRHandler::init(IOMFB::UPIOSvcProxy *)
IOMFB::DBSRHandler::init(uint *,uint)
IOMFB::DBSRHandler::set_dbv(uint)
IOMFB::EventSource::disable(void)
IOMFB::EventSource::enable(void)
IOMFB::EventSource::free(void)
IOMFB::EventSource::init(OSObject *)
IOMFB::EventSource::init(OSObject *,bool (*)(void *))
IOMFB::EventSource::isEnabled(void)
IOMFB::EventSource::~EventSource()
IOMFB::FrameInfoBuffer::free(void)
IOMFB::FrameInfoBuffer::log_write(IOMFB::FrameInfoBuffer::FrameInfoData const*)
IOMFB::FrameInfoBuffer::save_trace(IOMFB::FrameInfoBuffer::Buffer *,char const*)
IOMFB::FrameInfoBuffer::setupTracing(bool,char const*,void *)
IOMFB::FrameInfoBuffer::start_tracing(void)
IOMFB::FrameInfoBuffer::upload_trace(char const*,void *)
IOMFB::FrameInfoBuffer::upload_trace_chunk(IOMFB::FrameInfoBuffer::FrameInfoData const*,uint)
IOMFB::FrameInfoBuffer::upload_trace_start(IOMFB::FrameInfoBuffer::FrameInfoConstants const*)
IOMFB::FrameInfoBuffer::~FrameInfoBuffer()
IOMFB::GammaCompensator::copy_from_lut(IOMFB::IOFBSAWritableGammaLUT const*,IOMFB::RGB)
IOMFB::GammaCompensator::copy_to_lut(IOMFB::IOFBSAWritableGammaLUT *,IOMFB::RGB)
IOMFB::GammaCompensator::get(IOMFBGammaTable *)
IOMFB::GammaCompensator::set(IOMFBGammaTable const*)
IOMFB::Gate::create(OSObject *)
IOMFB::Gate::createWrapper(OSObject *,IOCommandGate *)
IOMFB::Gate::free(void)
IOMFB::Gate::init(OSObject *)
IOMFB::GateInstance::init(OSObject *)
IOMFB::GateInstance::operator delete(void *,ulong)
IOMFB::GateInstance::operator new(ulong)
IOMFB::GateManager::commandSleep(void *,IOMFB::Lock::Interruptible)
IOMFB::GateManager::commandSleep(void *,ulong long,IOMFB::Lock::Interruptible)
IOMFB::GateManager::commandWakeup(void *,bool)
IOMFB::GateManager::runAction(IOMFBStatus (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
IOMFB::GateManager::runAction(IOMFBStatus (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)::$_1::operator()(OSObject *,void *,void *,void *,void *)
IOMFB::GateManager::~GateManager()
IOMFB::GateWrapper::free(void)
IOMFB::GateWrapper::init(OSObject *,IOCommandGate *)
IOMFB::GateWrapper::operator delete(void *,ulong)
IOMFB::GateWrapper::operator new(ulong)
IOMFB::GateWrapper::~GateWrapper()
IOMFB::HDRRegamma::HDRRegamma(IOMFB::HDRRegamma::Client *)
IOMFB::HDRRegamma::alpha(void)
IOMFB::HDRRegamma::compute(uint,bool,IOMFB::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOMFB::HDRRegamma::hgod_active(void)
IOMFB::HDRRegamma::hgod_edr_changed(float)
IOMFB::HDRRegamma::hgod_write(IOMFB::AppleRegisterStream *)
IOMFB::HDRRegamma::set_brightness(int)
IOMFB::HDRRegamma::set_edr_factor(float)
IOMFB::HDRRegamma::set_od_threshold(int)
IOMFB::HTPC_reader::read(void)
IOMFB::HTPC_reader::start_plane(uint *,uchar *,uint,uint,uint)
IOMFB::HTPC_writer::end_plane(uint *,uint)
IOMFB::HTPC_writer::start_plane(uint *,uchar *,uint,uint,uint,float,uint)
IOMFB::HTPC_writer::write(ushort)
IOMFB::HighGrayOverdrive::backlight_factor(void)
IOMFB::HighGrayOverdrive::compose(IOMFB::AppleRegisterStream *,bool,int)
IOMFB::HighGrayOverdrive::enable(bool)
IOMFB::HighGrayOverdrive::get(IOMFBHGODSettings *)
IOMFB::HighGrayOverdrive::set(float,uint,uint,int)
IOMFB::HighGrayOverdrive::update(bool,int)
IOMFB::Hsort(uint *,uint)
IOMFB::ICCHandler::ICCHandler(IOMFB::UPPipe *,IOMFB::ICCHandler::CSCFetcher *,float,float)
IOMFB::ICCHandler::apply_default(IOMFB::MatAccum *,IOMFBICCMatLoc,uint,IOMFBSwapIORequest *)
IOMFB::ICCHandler::apply_pq_contrast(void)
IOMFB::ICCHandler::check_completeness(bool,uint)
IOMFB::ICCHandler::curve_evaluator(IOMFB::ICCHandler::Curve const*)
IOMFB::ICCHandler::dirty_notify(bool,uint)
IOMFB::ICCHandler::eval_sandwich(IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::ICCHandler::get_dst_mat(IOMFB::MatAccum *)
IOMFB::ICCHandler::get_src_mat(uint,IOMFB::MatAccum *,IOMFBSwapIORequest *)
IOMFB::ICCHandler::get_src_scales(float *,float *)
IOMFB::ICCHandler::get_useradjust_mat(IOMFB::MatAccum *)
IOMFB::ICCHandler::invert_degamma(uint,float)
IOMFB::ICCHandler::lut_invert(IOMFB::ICCHandler::Curve const*,float)
IOMFB::ICCHandler::process_curves(IOMFB::AppleRegisterStream *,IOMFB::ICCHandler::Curve const*,IOMFB::ICCHandler::CurveSpec const*,IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::ICCHandler::program_swap(IOMFBSwapIORequest *)
IOMFB::ICCHandler::render_curve(IOMFB::ICCHandler::CurveSpec const*,IOMFB::ICCHandler::Curve const*,IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::ICCHandler::set(IOMFB::PBTBlockMgr *)
IOMFB::ICCHandler::set(IOMFB::PBTBlockMgr *)::$_0::__invoke(void *,IOMFBICCMatrix *,ulong long const*,uint,void *,uint)
IOMFB::ICCHandler::set(IOMFB::PBTBlockMgr *)::$_1::__invoke(void *,IOMFBICCMatrix const*,ulong long const*,uint,void const*,uint)
IOMFB::ICCHandler::set(IOMFB::PBTBlockMgr *)::$_2::__invoke(void *,IOMFBICCCurve *,ulong long const*,uint,void *,uint)
IOMFB::ICCHandler::set(IOMFB::PBTBlockMgr *)::$_3::__invoke(void *,IOMFBICCCurve const*,ulong long const*,uint,void const*,uint)
IOMFB::ICCHandler::set_sclCP(uint,IOMFBSwapIORequest *)
IOMFB::ICCHandler::src_profile_set(uint)
IOMFB::ICCHandler::src_profile_update(uint)
IOMFB::ICCHandler::src_scale_required(void)
IOMFB::ICCHandler::valid_icc_curve(uint,IOMFBCurveLoc)
IOMFB::ICCHandler::write_curve(IOMFB::AppleRegisterStream *,uint,IOMFB::ICCHandler::CurveSpec const*,IOMFB::IOFBSAGammaLUT *)
IOMFB::ICCHandler::write_dst_curve(IOMFB::AppleRegisterStream *,IOMFB::ICCHandler::CurveLoc,IOMFB::ICCHandler::CurveSpec const*,float,IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::ICCHandler::write_src_curve(IOMFB::AppleRegisterStream *,uint,IOMFB::ICCHandler::CurveLoc,IOMFB::ICCHandler::CurveSpec const*,float,IOMFB::IOFBSAGammaLUT::Evaluator *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::IOFBSAGammaLUT::IOFBSAGammaLUT(IOMFB::IOFBSAGammaLUT::Evaluator *,uint,bool,IOMFB::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOMFB::IOFBSAGammaLUT::IOFBSAGammaLUT(IOMFB::IOFBSAGammaLUT::Function,uint,bool,IOMFB::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOMFB::IOFBSAGammaLUT::IOFBSAGammaLUT(void)
IOMFB::IOFBSAGammaLUT::do_init(IOMFB::IOFBSAGammaLUT::Evaluator *,uint,bool,IOMFB::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOMFB::IOFBSAGammaLUT::entry(uint)
IOMFB::IOFBSAGammaLUT::release(void)
IOMFB::IOFBSAGammaLUT::~IOFBSAGammaLUT()
IOMFB::IOFBSAWritableGammaLUT::IOFBSAWritableGammaLUT(IOMFB::IOFBSAGammaLUT *)
IOMFB::IOFBSAWritableGammaLUT::IOFBSAWritableGammaLUT(bool,uint,uint *)
IOMFB::IOFBSAWritableGammaLUT::dup_data(void)
IOMFB::IOFBSAWritableGammaLUT::set_entry(uint,uint)
IOMFB::IOFBSAWritableGammaLUT::writable_entries(void)
IOMFB::IOFBSAWritableGammaLUT::~IOFBSAWritableGammaLUT()
IOMFB::InstanceTracker::InstanceTracker(IOMFB::InstanceTracker::tracked_entity_t,uint)
IOMFB::InstanceTracker::track_instance(IOMFB::InstanceTracker::tracked_entity_t,uint)
IOMFB::InstanceTracker::~InstanceTracker()
IOMFB::InterleaveBICProcessor::LTH_column_maxima(uint *)
IOMFB::InterleaveBICProcessor::LTH_column_minima(uint *)
IOMFB::InterleaveBICProcessor::LTH_comb(uint,IOMFB::NonSEP_BICProcessor::Comb *)
IOMFB::InterleaveBICProcessor::LTH_comb(uint,IOMFB::NonSEP_BICProcessor::Comb *,IOMFB::BICGainProcessor::Rect const*)
IOMFB::InterleaveBICProcessor::LTH_extrema(uint *,uint *)
IOMFB::InterleaveBICProcessor::LTH_extrema(uint *,uint *,IOMFB::BICGainProcessor::Rect const*)
IOMFB::InterleaveBICProcessor::LTH_median(uint,uint,uint,IOMFB::BICGainProcessor::Rect const*)
IOMFB::InterleaveBICProcessor::do_bim(void)
IOMFB::InterleaveBICProcessor::do_export(uint *)
IOMFB::InterleaveBICProcessor::do_gain(double *,uint *)
IOMFB::InterleaveBICProcessor::do_gain(double *,uint *)::$_0::__invoke(void *,uint)
IOMFB::InterleaveBICProcessor::do_init(void)
IOMFB::InterleaveBICProcessor::do_resample(uint *)
IOMFB::InterleaveBICProcessor::do_rewrite(void)
IOMFB::InterleaveBICProcessor::do_rewrite(void)
IOMFB::InterleaveBICProcessor::do_setup(IOMFB::MemBlockAllocator *)
IOMFB::InterleaveBICProcessor::hist_width(uint)
IOMFB::InterleaveBICProcessor::saved_history_bytes(IOMFB::BICGainProcessor::Scale,bool,bool)
IOMFB::InterleaveBICProcessor::scale_supported(IOMFB::BICGainProcessor::Scale)
IOMFB::InterleaveBICProcessor::scan_for_corruption(void)
IOMFB::InterleaveBICProcessor::supports_scaled_bic_generation(IOMFB::BICGainProcessor::Scale *)
IOMFB::InterleaveBICProcessor::~InterleaveBICProcessor()
IOMFB::InterpolationRange::InterpolationRange(int,int const*,uint,IOMFB::LateralLeakageHandler::Bint const*,uint)
IOMFB::Interpolator::lerp(int,float *,uint *)
IOMFB::InterruptEventSource::create(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource*,int),IOMFB::UPIOSvcProxy *,uint)
IOMFB::InterruptEventSource::create(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource*,int),bool (*)(OSObject *,IOMFB::InterruptEventSource*),IOMFB::UPIOSvcProxy *,uint)
IOMFB::InterruptEventSource::free(void)
IOMFB::InterruptEventSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource*,int),void (*)(OSObject *,IOInterruptEventSource *,int),IOMFB::UPIOSvcProxy *,uint)
IOMFB::InterruptEventSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource*,int),void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOMFB::InterruptEventSource*),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOMFB::UPIOSvcProxy *,uint)
IOMFB::InterruptEventSource::interruptOccurred(void *,IOMFB::UPIOSvcProxy *,int)
IOMFB::KSFCompHandler::Adaptor::brightness_lut_changed(void)
IOMFB::KSFCompHandler::clip_nits(int)
IOMFB::KSFCompHandler::current_gains(int *)
IOMFB::KSFCompHandler::enable(bool)
IOMFB::KSFCompHandler::get(IOMFBKSFLUT *)
IOMFB::KSFCompHandler::init(IOMFB::UPIOSvcProxy *,IOMFB::UPIOSvcProxy *)
IOMFB::KSFCompHandler::on_brightness_change(int)
IOMFB::KSFCompHandler::override_enable(bool)
IOMFB::KSFCompHandler::reload(IOMFB::UPIOSvcProxy *,IOMFB::UPIOSvcProxy *,bool)
IOMFB::KSFCompHandler::set_bright_scale(int)
IOMFB::KSFCompHandler::use_test_gains(bool)
IOMFB::KSFCompHandler::~KSFCompHandler()
IOMFB::LZFSECompressor::decompress(uchar *,ulong,uchar *,ulong)
IOMFB::LZFSECompressor::init(void)
IOMFB::LZFSECompressor::~LZFSECompressor()
IOMFB::LateralLeakageHandler::CurveEvaluator::operator()(double)
IOMFB::LateralLeakageHandler::CurveEvaluator::~CurveEvaluator()
IOMFB::LateralLeakageHandler::compose_post(uint const*,uint *)
IOMFB::LateralLeakageHandler::compose_pre(uint *,IOMFB::IOFBSAGammaLUT::Evaluator *)
IOMFB::LateralLeakageHandler::find_node(ushort,ushort)
IOMFB::LateralLeakageHandler::free_state(void)
IOMFB::LateralLeakageHandler::get(IOMFBLatLeakStatus *)
IOMFB::LateralLeakageHandler::set(IOMFBLatLeakConfig const*,void const*,uint)
IOMFB::LateralLeakageHandler::set_brightness(int)
IOMFB::LateralLeakageHandler::set_interp_results(int,uint,float,int,uint,float,uint,float)
IOMFB::LateralLeakageHandler::set_temp(int)
IOMFB::LateralLeakageHandler::write(IOMFB::RegIO const*)
IOMFB::LateralLeakageHandler::write_1_axis(IOMFB::RegIO const*)
IOMFB::LateralLeakageHandler::write_2_axis(IOMFB::RegIO const*)
IOMFB::LateralLeakageHandler::write_clut(IOMFB::RegIO const*,IOMFB::LateralLeakageHandler::CLUT *,uint)
IOMFB::LateralLeakageHandler::write_curve(IOMFB::RegIO const*,IOMFB::LateralLeakageHandler::Curve *,uint)
IOMFB::LateralLeakageHandler::write_nearest_neighbor(IOMFB::RegIO const*)
IOMFB::Lock::Lock(void)
IOMFB::Lock::create(void)
IOMFB::Lock::lock(void)
IOMFB::Lock::operator delete(void *,ulong)
IOMFB::Lock::operator new(ulong)
IOMFB::Lock::~Lock()
IOMFB::M3Hal::init(IOMFB::M3Hal::descriptor const&)
IOMFB::M3Hal::ints_filter::operator()(IOMFB::AppleRegisterStream *)
IOMFB::M3Hal_v1::clear_mems(IOMFB::AppleRegisterStream *)
IOMFB::M3Hal_v1::get_state(IOMFB::AppleRegisterStream *,bool)
IOMFB::M3Hal_v1::init(IOMFB::M3Hal::descriptor const&)
IOMFB::M3Hal_v1::ints_change(IOMFB::MailboxHal::Interrupts,IOMFB::AppleRegisterStream *)
IOMFB::M3Hal_v1::program_mems(IOMFB::AppleRegisterStream *,bool)
IOMFB::M3Hal_v1::set_state(IOMFB::AppleRegisterStream *,IOMFB::M3Hal::state,bool)
IOMFB::M3Hal_v1::~M3Hal_v1()
IOMFB::MailboxHal_v1::MailboxHal_v1(IOMFB::MailboxHal_v1::Mailbox,IOMFB::MailboxHal_v1::descriptor const&)
IOMFB::MailboxHal_v1::get_state(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::MatAccum::MatAccum(IOMFB::MatAccum const*)
IOMFB::MatAccum::MatAccum(void)
IOMFB::MatAccum::apply(IOMFB::MatAccum::OffsetMatrix<Fx64_t> const*)
IOMFB::MatAccum::apply(IOMFB::MatAccum::OffsetMatrix<float> const*)
IOMFB::MatAccum::apply(IOMFB::MatrixHandler const*)
IOMFB::MatAccum::invert(void)
IOMFB::MatAccum::max_row(void)
IOMFB::MatAccum::plus_offs(uint const*,IOFBSA::FxPrecision)
IOMFB::MatAccum::row_normalize(IOMFB::MatrixHandler *)
IOMFB::MatAccum::times_3x3(float const*)
IOMFB::MatAccum::times_3x3(uint const*,IOFBSA::FxPrecision)
IOMFB::MatAccum::times_3x3(ulong long const*,IOFBSA::FxPrecision)
IOMFB::MatAccum::times_gain(float const*)
IOMFB::MatAccum::times_gain(uint const*,IOFBSA::FxPrecision)
IOMFB::MatAccum::times_gain(uint,IOFBSA::FxPrecision)
IOMFB::MatAccum::times_gain(ulong long const*,IOFBSA::FxPrecision)
IOMFB::MatAccum::transform(float const*,float *)
IOMFB::MatAccum::transform(uint const*,uint *,IOFBSA::FxPrecision)
IOMFB::MatAccum::yields(IOMFB::MatAccum::OffsetMatrix<float> *)
IOMFB::MatAccum::yields(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::MatrixHandler::MatrixHandler(IOMFB::MatrixHandler::Function,IOMFB::MatrixHandler::Adaptor *)
IOMFB::MatrixHandler::add_watcher(void *,void (*)(void *))
IOMFB::MatrixHandler::enable(bool)
IOMFB::MatrixHandler::get(IOMFB::MatAccum::OffsetMatrix<Fx64_t> *)
IOMFB::MatrixHandler::get(IOMFBColorFixedMatrix *)
IOMFB::MatrixHandler::get_inv(IOMFB::MatAccum::OffsetMatrix<Fx64_t> const**)
IOMFB::MatrixHandler::init(uint const*,uint,bool)
IOMFB::MatrixHandler::notify_watchers(void)
IOMFB::MatrixHandler::override_enable(bool)
IOMFB::MatrixHandler::remove_watcher(void *)
IOMFB::MatrixHandler::set(IOMFBColorFixedMatrix const*)
IOMFB::MatrixHandler::set_testing(bool)
IOMFB::MemoryDescriptor::create(IOMemoryDescriptor *)
IOMFB::MemoryDescriptor::map_physical(ulong long,ulong long,uint)
IOMFB::MemoryDescriptor::withAddressRange(ulong long,ulong long,uint,task *)
IOMFB::MemoryMap::MemoryMap(void)
IOMFB::MemoryMap::cache_assume_rw(void const volatile*,ulong)
IOMFB::MemoryMap::cache_release_rw(void const volatile*,ulong,bool)
IOMFB::MemoryMap::create(IOMemoryMap *)
IOMFB::MemoryMap::do_release(void)
IOMFB::MemoryMap::do_retain(void)
IOMFB::NonSEP_BICProcessor::LTH_median(uint,uint,uint)
IOMFB::NonSEP_BICProcessor::bim_stat(uint,uint,bool)
IOMFB::NonSEP_BICProcessor::do_tbim(void)
IOMFB::NonSEP_BICProcessor::do_update(void)
IOMFB::NonSEP_BICProcessor::scale_supported(IOMFB::BICGainProcessor::Scale)
IOMFB::PBTBlockHandler<IOMFBDBSRLUT>::get(void *,ulong,ulong long const*,uint,IOMFB::Gate *,void *,uint)
IOMFB::PBTBlockHandler<IOMFBDBSRLUT>::get(void *,ulong,ulong long const*,uint,IOMFB::Gate *,void *,uint)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::PBTBlockHandler<IOMFBDBSRLUT>::get_buf(void const*,ulong,ulong long const*,uint,IOMFB::Gate *,void const*,uint)
IOMFB::PBTBlockHandler<IOMFBDBSRLUT>::get_buf(void const*,ulong,ulong long const*,uint,IOMFB::Gate *,void const*,uint)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::PBTBlockHandler<IOMFBDBSRLUT>::set(void const*,ulong,ulong long const*,uint,IOMFB::Gate *,void const*,uint)
IOMFB::PBTBlockHandlerGeneric::get_mapped_buf(task *,void const*,ulong,ulong long *,uint *)
IOMFB::PBTBlockMgr::add(IOMFB::PBTBlockHandlerGeneric *)
IOMFB::PBTBlockMgr::exec(IOMFB_Parameter_Block_Type,IOMFB::PBTBlockMgr::Op,task *,void const*,ulong,IOMFBStatus ( {block_pointer})(IOMFB::PBTBlockHandlerGeneric *,void *,uint),bool)
IOMFB::PBTBlockMgr::get_block(task *,IOMFB_Parameter_Block_Type,void *,ulong,ulong long const*,uint)
IOMFB::PBTBlockMgr::get_buf_block(task *,IOMFB_Parameter_Block_Type,void const*,ulong,ulong long const*,uint,bool)
IOMFB::PBTBlockMgr::init(IOMFB::Gate *)
IOMFB::PBTBlockMgr::remove(IOMFB::PBTBlockHandlerGeneric *)
IOMFB::PBTBlockMgr::set_block(task *,IOMFB_Parameter_Block_Type,void const*,ulong,ulong long const*,uint,bool)
IOMFB::PBTBlockMgr::~PBTBlockMgr()
IOMFB::PCCM3Hal_v1::init(void)
IOMFB::PCCM3Hal_v1::instantiate(void)
IOMFB::PLCHandler::PLCHandler(void)
IOMFB::PLCHandler::completion_callback(void *,int,void *)
IOMFB::PLCHandler::completion_callback_async(void *)
IOMFB::PLCHandler::completion_callback_async(void *)::$_0::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::PLCHandler::init(IOSurfaceRoot *,IOSurfaceAcceleratorClient *,IOService *,IOCommandGate *,uint,uint)
IOMFB::PLCHandler::init_buffer(void)
IOMFB::PLCHandler::init_request(void)
IOMFB::PLCHandler::is_supported(void)
IOMFB::PLCHandler::process(IOMFBSwapIORequest const*)
IOMFB::PLCHandler::update_service_property(IOService *,uint *,uint)
IOMFB::PLCHandler::~PLCHandler()
IOMFB::PinnedBuffer_Impl::PinnedBuffer_Impl(IOMFBAppleRegStmAPIODMA *)
IOMFB::PinnedBuffer_Impl::init(uint,uint,bool)
IOMFB::PinnedBuffer_Impl::realloc(uint)
IOMFB::PinnedBuffer_Impl::~PinnedBuffer_Impl()
IOMFB::PowerAssertion::PowerAssertion(UnifiedPipeline *,IOMFB::UPPipe *)
IOMFB::PowerAssertion::init(void)
IOMFB::PowerAssertion::~PowerAssertion()
IOMFB::Prop::add_watcher(void (*)(void *,IOMFB::Prop*),void *)
IOMFB::Prop::~Prop()
IOMFB::PropMgr::addBool(IOMFB::RuntimeProperty,bool,IOMFBStatus (*)(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *),void *,void *)
IOMFB::PropMgr::addFx(IOMFB::RuntimeProperty,int,IOMFBStatus (*)(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *),void *,void *)
IOMFB::PropMgr::addInt(IOMFB::RuntimeProperty,uint,IOMFBStatus (*)(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *),void *,void *)
IOMFB::PropMgr::addProp(IOMFB::Prop *)
IOMFB::PropMgr::getBool(IOMFB::RuntimeProperty)
IOMFB::PropMgr::getFx(IOMFB::RuntimeProperty)
IOMFB::PropMgr::getInt(IOMFB::RuntimeProperty)
IOMFB::PropMgr::getProp(IOMFB::RuntimeProperty)
IOMFB::PropMgr::init(void)
IOMFB::PropMgr::setBool(IOMFB::RuntimeProperty,bool)
IOMFB::PropMgr::setFx(IOMFB::RuntimeProperty,int)
IOMFB::PropMgr::setInt(IOMFB::RuntimeProperty,uint)
IOMFB::PropMgr::setPropDynamic(IOMFB::RuntimeProperty,uint)
IOMFB::PropMgr::~PropMgr()
IOMFB::PropRelay::getBool(IOMFB::RuntimeProperty)
IOMFB::PropRelay::getFx(IOMFB::RuntimeProperty)
IOMFB::PropRelay::getInt(IOMFB::RuntimeProperty)
IOMFB::PropRelay::getProp(IOMFB::RuntimeProperty,uint *)
IOMFB::PropRelay::publish(IOMFB::RuntimeProperty,uint)
IOMFB::PropRelay::setBool(IOMFB::RuntimeProperty,bool)
IOMFB::PropRelay::setFx(IOMFB::RuntimeProperty,int)
IOMFB::PropRelay::setInt(IOMFB::RuntimeProperty,uint)
IOMFB::PropRelay::~PropRelay()
IOMFB::SEPBICSProxy::MetaClass::alloc(void)
IOMFB::SEPBICSProxy::SEPBICSProxy(OSMetaClass const*)
IOMFB::SEPBICSProxy::SEPBICSProxy(void)
IOMFB::SEPBICSProxy::accumulate(IOMFB::BufferDescriptor const*,uint *,hilo_bis_bpsp_t)
IOMFB::SEPBICSProxy::calculateGainsAlphasAndBims(IOMFB::BufferDescriptor const*,uint *,double *,hilo_bim_v1_t *,hilo_tiled_bim_v1_t *)
IOMFB::SEPBICSProxy::getLthBackup(IOMFB::BufferDescriptor const*)
IOMFB::SEPBICSProxy::init(uint)
IOMFB::SEPBICSProxy::setup(HiloDisplayParams)
IOMFB::SEPBICSProxy::~SEPBICSProxy()
IOMFB::SPUCProcessor::background(void)
IOMFB::SPUCProcessor::init(IOMFB::UPBlock_SPUC *)
IOMFB::SPUCProcessor::init(IOMFB::UPBlock_SPUC *)::$_1::__invoke(void *,void *,void *,void *)
IOMFB::SPUCProcessor::set_background_state(IOMFB::SPUCState)
IOMFB::SPUCProcessor::set_background_state_gated(IOMFB::SPUCState)
IOMFB::SecureBICProcessor::do_bim(void)
IOMFB::SecureBICProcessor::do_export(uint *)
IOMFB::SecureBICProcessor::do_gain(double *,uint *)
IOMFB::SecureBICProcessor::do_init(void)
IOMFB::SecureBICProcessor::do_tbim(void)
IOMFB::SecureBICProcessor::do_update(void)
IOMFB::SecureBICProcessor::make_sep(void)
IOMFB::SecureBICProcessor::powerStateWillChangeTo(ulong,void *)
IOMFB::SecureBICProcessor::powerStateWillChangeTo(ulong,void *)::$_4::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::SecureBICProcessor::saved_history_bytes(IOMFB::BICGainProcessor::Scale,bool,bool)
IOMFB::SecureBICProcessor::scale_supported(IOMFB::BICGainProcessor::Scale)
IOMFB::ServiceRelay::ServiceRelay(uint)
IOMFB::ServiceRelay::init(void)
IOMFB::ServiceRelay::operator delete(void *,ulong)
IOMFB::ServiceRelay::register_service(IOMFB::UPIOSvcProxy *,uint)
IOMFB::ServiceRelay::~ServiceRelay()
IOMFB::Swap::checkTimestamp(ulong long,ulong long,ulong long)
IOMFB::Swap::programmed(void)
IOMFB::TableCompensator::BilerpGainTable::get_row(uint,int *,int *)
IOMFB::TableCompensator::BilerpGainTable::new_from_data(IOMFBLUTTableState const*,int,uint,int const*,int const*,int)
IOMFB::TableCompensator::BilerpGainTable::new_from_data(uint *,ulong,bool)
IOMFB::TableCompensator::BilerpGainTable::set_table(uint,IOMFBLUTTableState const*,int)
IOMFB::TableCompensator::BilerpGainTable::set_table_index(int)
IOMFB::TableCompensator::BilerpGainTable::~BilerpGainTable()
IOMFB::TableCompensator::GainTable::dealloc(void *)
IOMFB::TableCompensator::GainTable::delta(bool)
IOMFB::TableCompensator::GainTable::fill_in_entries(IOMFBLUTTableState const*)
IOMFB::TableCompensator::GainTable::get_row(uint,int *,int *)
IOMFB::TableCompensator::GainTable::limit(bool)
IOMFB::TableCompensator::GainTable::new_from_data(IOMFBDBSRLUT const*)
IOMFB::TableCompensator::GainTable::new_from_data(IOMFBLUTTableState const*)
IOMFB::TableCompensator::GainTable::new_from_data(uint *,ulong,IOMFB::TableCompensator::VersionMap const*)
IOMFB::TableCompensator::GainTable::new_from_data(uint *,ulong,bool,IOMFB::TableType)
IOMFB::TableCompensator::GainTable::pop_state(void)
IOMFB::TableCompensator::GainTable::primary_normalize(IOMFB::MatrixHandler *)
IOMFB::TableCompensator::GainTable::push_state(void)
IOMFB::TableCompensator::GainTable::read_dbsr_table(uint const*,uint,bool)
IOMFB::TableCompensator::GainTable::read_gains(uint *,uint,IOFBSA::FxPrecision,bool)
IOMFB::TableCompensator::GainTable::~GainTable()
IOMFB::TableCompensator::LimitGainTable::new_from_data(IOMFBLUTTableState const*,int const*,int const*,int)
IOMFB::TableCompensator::LimitGainTable::new_from_data(uint *,ulong,bool)
IOMFB::TableCompensator::default_table(void)
IOMFB::TableCompensator::enable(bool)
IOMFB::TableCompensator::get_LUT_line(uint,int *,int *)
IOMFB::TableCompensator::get_table(IOMFBLUTTableState *,uint)
IOMFB::TableCompensator::lut_index_to_gain(IOMFB::TableCompensator::GainTable const*,int,int *)
IOMFB::TableCompensator::setup_table(IOMFB::UPIOSvcProxy *,char const*,IOMFB::TableCompensator::VersionMap const*)
IOMFB::TableCompensator::~TableCompensator()
IOMFB::TempComp2DHandler::TempComp2DHandler(IOMFB::TempComp2DHandler::Adaptor *,IOMFB::MatrixHandler *)
IOMFB::TempComp2DHandler::add_adaptor(IOMFB::TempComp2DHandler::Adaptor *)
IOMFB::TempComp2DHandler::compute_center_coordinates(void)
IOMFB::TempComp2DHandler::current_gains(uint,uint,int *)
IOMFB::TempComp2DHandler::get(IOMFB_2D_Temp_State *)
IOMFB::TempComp2DHandler::grid_values(IOMFB::TempComp2DHandler::Axis,uint const**,uint *)
IOMFB::TempComp2DHandler::init(IOMFB::UPIOSvcProxy *)
IOMFB::TempComp2DHandler::initial_guess(int)
IOMFB::TempComp2DHandler::remove_adaptor(IOMFB::TempComp2DHandler::Adaptor *)
IOMFB::TempComp2DHandler::set(IOMFB_2D_Temp_State const*)
IOMFB::TempComp2DHandler::state_changed(IOMFB::TempHandler::ChangeThing)
IOMFB::TempComp2DHandler::update_temps(void)
IOMFB::TempComp2DHandler::~TempComp2DHandler()
IOMFB::TempCompHandler::TempCompHandler(IOMFB::TempCompHandler::Adaptor *,IOMFB::MatrixHandler *)
IOMFB::TempCompHandler::add_adaptor(IOMFB::TempCompHandler::Adaptor *)
IOMFB::TempCompHandler::center_temp(void)
IOMFB::TempCompHandler::current_temps(void)
IOMFB::TempCompHandler::get(IOMFB_0D_Temp_State *,uint)
IOMFB::TempCompHandler::has_calibration_data(void)
IOMFB::TempCompHandler::init(IOMFB::UPIOSvcProxy *,IOMFB::UPIOSvcProxy *)
IOMFB::TempCompHandler::initial_guess(int)
IOMFB::TempCompHandler::remove_adaptor(IOMFB::TempCompHandler::Adaptor *)
IOMFB::TempCompHandler::set(IOMFB_0D_Temp_State const*,uint)
IOMFB::TempCompHandler::set_corner_temps(int const*)
IOMFB::TempCompHandler::state_changed(IOMFB::TempHandler::ChangeThing)
IOMFB::TempCompHandler::use_test_gains(bool)
IOMFB::TempHandler::TempHandler(IOMFB::MatrixHandler *)
IOMFB::TempHandler::TempHandler(IOMFB::MatrixHandler *)::$_5::__invoke(void *)
IOMFB::TempHandler::enable(bool)
IOMFB::TempHandler::on_brightness_change(int)
IOMFB::TempHandler::reload_calib(IOMFB::UPIOSvcProxy *)
IOMFB::TempHandler::set_PMU_service(IOMFB::UPIOSvcProxy *)
IOMFB::TempHandler::setup_table(IOMFB::UPIOSvcProxy *,char const*,IOMFB::TableCompensator::VersionMap const*)
IOMFB::TempHandler::~TempHandler()
IOMFB::TimerEventSource::action_wrapper(OSObject *,IOTimerEventSource *)
IOMFB::TimerEventSource::cancelTimeout(void)
IOMFB::TimerEventSource::create(OSObject *,void (*)(OSObject *,IOMFB::TimerEventSource*))
IOMFB::TimerEventSource::free(void)
IOMFB::TimerEventSource::init(OSObject *,void (*)(OSObject *,IOMFB::TimerEventSource*))
IOMFB::TimerEventSource::native(void)
IOMFB::TimerEventSource::operator delete(void *,ulong)
IOMFB::TimerEventSource::operator new(ulong)
IOMFB::TimerEventSource::setTimeoutMS(uint)
IOMFB::TimerEventSource::setTimeoutUS(uint)
IOMFB::TimerEventSource::wakeAtTime(ulong long)
IOMFB::TimerEventSource::~TimerEventSource()
IOMFB::TraceBuffer::log_write(uint,uint)
IOMFB::TraceBuffer::save_trace(void *,void *)
IOMFB::TraceBuffer::setupTracing(bool,char const*)
IOMFB::TraceBuffer::start_tracing(void)
IOMFB::TraceBuffer::stop_tracing(char const*)
IOMFB::TraceBuffer::trace_reg_write(uint,uint)
IOMFB::TraceBuffer::~TraceBuffer()
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0>::notify(IOMFB::PropNotification)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0>::publish(void)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0>::setVal(bool)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0>::setVal(bool)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1>::publish(void)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2>::setVal(int)
IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2>::setVal(int)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPAAFProxy::init(uint)
IOMFB::UPAAFProxy::withService(IOMFB::UPIOSvcProxy *,char const*)
IOMFB::UPAAFProxy::withService(IOMFB::UPIOSvcProxy *,char const*,uint)
IOMFB::UPAAFProxy::withServiceAsync(IOMFB::UPIOSvcProxy *,char const*,uint,void (*)(IOMFB::UPAAFProxy*,void *,void *,void *),void *,void *,void *)
IOMFB::UPAAFProxy::withServiceAsync(IOMFB::UPIOSvcProxy *,char const*,uint,void (*)(IOMFB::UPAAFProxy*,void *,void *,void *),void *,void *,void *)::$_0::__invoke(void *,void *,void *,void *)
IOMFB::UPAAFProxy::withServiceAsync(IOMFB::UPIOSvcProxy *,char const*,uint,void (*)(IOMFB::UPAAFProxy*,void *,void *,void *),void *,void *,void *)::$_0::operator IOMFBStatus (*)(void *,void *,void *,void *)(void)
IOMFB::UPAAFProxy::withServiceAsync(IOMFB::UPIOSvcProxy *,char const*,uint,void (*)(IOMFB::UPAAFProxy*,void *,void *,void *),void *,void *,void *)::$_0::operator()(void *,void *,void *,void *)
IOMFB::UPBlock::operator delete(void *,ulong)
IOMFB::UPBlock::set_crc_enable(bool)
IOMFB::UPBlock::set_int_enabled(bool)
IOMFB::UPBlock_ABG::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_ABG_Base_ABG::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_ABG_Base_ABG::block_disabled(void)
IOMFB::UPBlock_ABG_Base_ABG::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_ABG_Base_ABG::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG_Base_ABG::enable_allowed(void)
IOMFB::UPBlock_ABG_Base_ABG::init(IOMFB::UPPipe *)
IOMFB::UPBlock_ABG_Base_ABG::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG_Base_ABG::program_regs(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG_Base_ABG::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_ABG_Base_ABG::~UPBlock_ABG_Base_ABG()
IOMFB::UPBlock_ABG_Base_DBM::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_ABG_Base_DBM::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG_Base_DBM::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ABG_Base_DBM::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_ALSS::alss_handler(IOAOPFramebufferMessage,IOAOPALSSConfiguration const*)
IOMFB::UPBlock_ALSS::configure(IOMFBALSSConfig const*,bool)
IOMFB::UPBlock_ALSS::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ALSS::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFBALSSConfig *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_ALSS::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFBALSSConfig const*,ulong long const*,uint,void const*,uint)
IOMFB::UPBlock_ALSS::did_boot(IOMFB::AppleRegisterStream *)::$_2::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_ALSS::get_block(IOMFBALSSConfig *)
IOMFB::UPBlock_ALSS::init(IOMFB::UPPipe *)
IOMFB::UPBlock_ALSS::send_data(ulong long,uint)
IOMFB::UPBlock_ALSS::send_data(ulong long,uint)::$_3::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_ALSS::send_data(ulong long,uint)::$_4::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_ALSS::set_block(IOMFBALSSConfig const*)
IOMFB::UPBlock_ALSS::set_window(uchar,IOMFBRect const*,bool)
IOMFB::UPBlock_ALSS::~UPBlock_ALSS()
IOMFB::UPBlock_ALSS_v3::capture_snapshot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ALSS_v3::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ALSS_v3::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ALSS_v3::frame_processed(IOMFB::AppleRegisterStream *,uint)
IOMFB::UPBlock_ALSS_v3::get_window_sum(uchar,IOMFB::UPBlock_ALSS::Channel)
IOMFB::UPBlock_ALSS_v3::init(IOMFB::UPPipe *)
IOMFB::UPBlock_ALSS_v3::process(IOMFB::AppleRegisterStream *,ulong long,uint)
IOMFB::UPBlock_ALSS_v3::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_ALSS_v3::~UPBlock_ALSS_v3()
IOMFB::UPBlock_BICS::BICDataImpl::release(void)
IOMFB::UPBlock_BICS::BICDataImpl::validate_for_partial(uint const*)
IOMFB::UPBlock_BICS::BICDataImpl::~BICDataImpl()
IOMFB::UPBlock_BICS::BICDataPool::free(void)
IOMFB::UPBlock_BICS::BICDataPool::get(void)
IOMFB::UPBlock_BICS::BICDataPool::init(IOMFB::UPBlock_BICS*,IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::BICDataPool::manage(IOMFB::UPBlock_BICS::BICDataImpl *)
IOMFB::UPBlock_BICS::BICDataPool::~BICDataPool()
IOMFB::UPBlock_BICS::Lpwm(void)
IOMFB::UPBlock_BICS::UPBlock_BICS(void)
IOMFB::UPBlock_BICS::accum_alloc(IOMFB::BICSAccumBuf *,bool,IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::accum_free(IOMFB::BICSAccumBuf *)
IOMFB::UPBlock_BICS::accum_full(IOMFB::UPBlock_BICS::AccumBuf const*)
IOMFB::UPBlock_BICS::accum_limit(IOMFB::UPBlock_BICS::AccumBuf const*)
IOMFB::UPBlock_BICS::alloc_buffers(IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::alloc_early_buffers(IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::alloc_late_buffers(IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_BICS::bgp_setup(IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_BICS::bic_header_alloc(bool)
IOMFB::UPBlock_BICS::bic_header_verify(void)
IOMFB::UPBlock_BICS::bis_per_update(IOMFB::UPBlock_BICS::AccumBuf const*)
IOMFB::UPBlock_BICS::bis_update_16(IOMFB::BICSAccumBuf *,uint,bool)
IOMFB::UPBlock_BICS::bis_update_32(IOMFB::BICSAccumBuf *,uint,bool,uint)
IOMFB::UPBlock_BICS::calculate_normalization(void)
IOMFB::UPBlock_BICS::chan_sizes(uint *,uint *)
IOMFB::UPBlock_BICS::clear_data_xfer(void)
IOMFB::UPBlock_BICS::copy_bic_seg(uint *,IOMFB::UPBlock_BICS::XferDeets *,uint,bool)
IOMFB::UPBlock_BICS::copy_iBoot_bic(ulong long const*,uint const*,ulong long const*,uint const*,IOMFB::BICGainProcessor::Scale *)
IOMFB::UPBlock_BICS::d_l0(void)
IOMFB::UPBlock_BICS::deploy_bic(ulong,void const*,uint)
IOMFB::UPBlock_BICS::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_BICS::did_boot(IOMFB::AppleRegisterStream *)::$_2::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_BICS::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS::finish_new_bic(ulong long,uint const*)
IOMFB::UPBlock_BICS::free_buffers(void)
IOMFB::UPBlock_BICS::get_bic_data(IOMFBPBMemoryBlock *,uint,IOMFB::BICGainProcessor::Scale,uint)
IOMFB::UPBlock_BICS::get_bic_data(IOMFBPBMemoryBlock *,uint,IOMFB::BICGainProcessor::Scale,uint)::$_18::__invoke(void *,IOMFBStatus,double *,uint *)
IOMFB::UPBlock_BICS::get_bic_data(IOMFBPBMemoryBlock *,uint,IOMFB::BICGainProcessor::Scale,uint)::$_20::operator() const(void *,IOMFBStatus,uint *)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::get_bic_data(IOMFBPBMemoryBlock *,uint,uint,uint,uint)::$_18::__invoke(void *,IOMFBStatus,uint *)
IOMFB::UPBlock_BICS::get_bics_params(IOMFBBicsParams *)
IOMFB::UPBlock_BICS::get_bics_status(IOMFBPBBICSStatus *)
IOMFB::UPBlock_BICS::get_bim(IOMFBBurnInMetric *)
IOMFB::UPBlock_BICS::get_bim(IOMFBBurnInMetric *)::$_26::operator() const(void *,IOMFBStatus)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::get_bis_data(IOMFBPBMemoryBlock *,uint,IOMFB::BICGainProcessor::Scale,uint)
IOMFB::UPBlock_BICS::get_bis_data(IOMFBPBMemoryBlock *,uint,IOMFB::BICGainProcessor::Scale,uint)::$_25::operator() const(void *,IOMFBStatus,uint)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::get_bis_data(IOMFBPBMemoryBlock *,uint,uint,uint,uint)::$_24::__invoke(void *,IOMFBStatus,uint)
IOMFB::UPBlock_BICS::get_frame_size(uint *,uint *)
IOMFB::UPBlock_BICS::get_max_bright(bool *)
IOMFB::UPBlock_BICS::get_normalization_factor(double *)
IOMFB::UPBlock_BICS::get_panel_id(IOMFBBICSPanelID *)
IOMFB::UPBlock_BICS::get_sbim_ungated(IOMFBShortTermBIM *,bool)
IOMFB::UPBlock_BICS::get_striping_info(void)
IOMFB::UPBlock_BICS::get_tbim(IOMFBTiledBIM *)
IOMFB::UPBlock_BICS::handle_any_new_bic(bool)
IOMFB::UPBlock_BICS::init(IOMFB::UPPipe *)
IOMFB::UPBlock_BICS::invalidate_mcache_buffer(void)
IOMFB::UPBlock_BICS::is_supported(void)
IOMFB::UPBlock_BICS::mcache_size(uint *,uint *)
IOMFB::UPBlock_BICS::new_bic_xfer_init(void)
IOMFB::UPBlock_BICS::notify_swap_done(uint)
IOMFB::UPBlock_BICS::on_bis_data_available(IOMFB::BICSAccumBuf *,bool,uint)
IOMFB::UPBlock_BICS::on_bis_done(IOMFB::AppleRegisterStream *,uint,uint)
IOMFB::UPBlock_BICS::on_bis_interleave(IOMFB::BICSAccumBuf *,bool)
IOMFB::UPBlock_BICS::on_bis_interleave(IOMFB::BICSAccumBuf *,bool)
IOMFB::UPBlock_BICS::on_brightness_change(int)
IOMFB::UPBlock_BICS::on_history_data_available(bool)::$_13::__invoke(void *,IOMFBStatus)
IOMFB::UPBlock_BICS::on_history_data_available(bool,bool)
IOMFB::UPBlock_BICS::on_history_data_available(bool,bool)::$_13::operator() const(void *,IOMFBStatus)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::on_new_bic(bool)
IOMFB::UPBlock_BICS::on_vsh_hist_data_available(uchar *)
IOMFB::UPBlock_BICS::panel_id(IOMFB::UPIOSvcProxy::DataBuffer *)
IOMFB::UPBlock_BICS::powerStateWillChangeTo(ulong,void *)
IOMFB::UPBlock_BICS::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_BICS::rebuild_bic_table(void)
IOMFB::UPBlock_BICS::scaled_bic_dim(uint,uint,IOMFB::BICGainProcessor::Scale,ushort *,ushort *)
IOMFB::UPBlock_BICS::set_allocator(ulong long,void *,uint)
IOMFB::UPBlock_BICS::set_apl(double)
IOMFB::UPBlock_BICS::set_bic_data(IOMFBPBMemoryBlock const*,uint)
IOMFB::UPBlock_BICS::set_bis_data(IOMFBPBMemoryBlock const*,uint,IOMFB::BICGainProcessor::Scale)
IOMFB::UPBlock_BICS::set_ps_state(IOMFB::UPBlock_BICS::ProcState)
IOMFB::UPBlock_BICS::set_ps_state(IOMFB::UPBlock_BICS::ProcState)::$_0::__invoke(void *,IOMFBStatus,double *,uint *)
IOMFB::UPBlock_BICS::set_ps_state(IOMFB::UPBlock_BICS::ProcState)::$_0::operator() const(void *,IOMFBStatus,double *,uint *)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::set_sbim_enabled(bool)
IOMFB::UPBlock_BICS::setup_block_callbacks(void)
IOMFB::UPBlock_BICS::setup_block_callbacks(void)::$_3::__invoke(void *,IOMFBPBMemoryBlock *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_BICS::start_bis_accum(uint,uint)
IOMFB::UPBlock_BICS::start_bis_accum(uint,uint)::$_15::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::start_bis_accum(uint,uint)::$_15::operator() const(void *,void *,void *,void *)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::temperature_table_changed(void)
IOMFB::UPBlock_BICS::update_history(void)
IOMFB::UPBlock_BICS::update_history(void)::$_14::operator() const(void *,IOMFBStatus)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_BICS::update_setup(IOMFB::BICGainProcessor::Params *)
IOMFB::UPBlock_BICS::validate_xfer(IOMFBPBMemoryBlock const*,uint,IOMFB::BICGainProcessor::Scale,IOMFB::UPBlock_BICS::XferState,IOMFB::UPBlock_BICS::XferDeets *)
IOMFB::UPBlock_BICS::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS::with_tbim_tiles(IOMFB::BICGainProcessor::Rect const*,uint)
IOMFB::UPBlock_BICS::~UPBlock_BICS()
IOMFB::UPBlock_BICS_v4::calc_R_factor(double,int)
IOMFB::UPBlock_BICS_v4::calculate_aging_lut(void)
IOMFB::UPBlock_BICS_v4::convert_to_full_bic(uint)
IOMFB::UPBlock_BICS_v4::convert_to_lpm_bic(uint)
IOMFB::UPBlock_BICS_v4::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::find_temp_xform(uint,uint,IOMFB::UPBlock_BICS_v4::TempXform *)
IOMFB::UPBlock_BICS_v4::get_coord_calc_opef(IOMFB::AppleRegisterStream *,uint *)
IOMFB::UPBlock_BICS_v4::get_striping_info(void)
IOMFB::UPBlock_BICS_v4::global_norm(int,double)
IOMFB::UPBlock_BICS_v4::header_count(void)
IOMFB::UPBlock_BICS_v4::init(IOMFB::UPPipe *)
IOMFB::UPBlock_BICS_v4::init_bic_config(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::init_bic_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::init_bis_luts(void)
IOMFB::UPBlock_BICS_v4::normal_mode(bool)
IOMFB::UPBlock_BICS_v4::normalization_fn(float const*,float)
IOMFB::UPBlock_BICS_v4::on_new_bic(bool)
IOMFB::UPBlock_BICS_v4::process_alpha_max(double *)
IOMFB::UPBlock_BICS_v4::program_bic_config(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bic_norm(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bic_table(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bic_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bis_brightness(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bis_norm(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bis_table(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bis_temps(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_bis_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_BICS_v4::read_bic(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::read_bic_norm(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::read_bis(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::read_block(IOMFB::AppleRegisterStream *,uint *,uint,uint)
IOMFB::UPBlock_BICS_v4::resample_temp_lut(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_BICS_v4::TempXform *)
IOMFB::UPBlock_BICS_v4::rt_bandwidth_requirements(IOMFBSwapIORequest *,float *,float *,bool)
IOMFB::UPBlock_BICS_v4::update_bic_norm(double,double *)
IOMFB::UPBlock_BICS_v4::update_bis_norm(double)
IOMFB::UPBlock_BICS_v4::update_emission_dc(void)
IOMFB::UPBlock_BICS_v4::update_setup(IOMFB::BICGainProcessor::Params *)
IOMFB::UPBlock_BICS_v4::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_BICS_v4::~UPBlock_BICS_v4()
IOMFB::UPBlock_Blend::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Blend::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Blend::fetch_iBoot_bg(void)
IOMFB::UPBlock_Blend::set_bg(uint)
IOMFB::UPBlock_Blend_v1::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_Blend_v1::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_Blend_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Blend_v1::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Blend_v1::program_degamma(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Blend_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::LayerCrossbar *,bool)
IOMFB::UPBlock_Blend_v1::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_CDFD::enable_cas(bool)
IOMFB::UPBlock_CDFD::enable_cdfd(bool)
IOMFB::UPBlock_CDFD::init(IOMFB::UPPipe *)
IOMFB::UPBlock_CDFD_v1::configure_hw(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_CDFD_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_CDFD_v1::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_CDFD_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_CDFD_v1::enable_hw(IOMFB::AppleRegisterStream *,bool,bool,bool)
IOMFB::UPBlock_CDFD_v1::flush(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_CDFD_v1::get(IOMFBCDFDConfig *)
IOMFB::UPBlock_CDFD_v1::get(IOMFBColorHistogram *)
IOMFB::UPBlock_CDFD_v1::get(uint,IOMFBCDFDTheta *)
IOMFB::UPBlock_CDFD_v1::get(uint,IOMFBCDFDThresholds *)
IOMFB::UPBlock_CDFD_v1::get_histogram(IOMFB::AppleRegisterStream *,IOMFBColorHistogram *)
IOMFB::UPBlock_CDFD_v1::get_stats(IOMFB::AppleRegisterStream *,uint *,uint *,uint *)
IOMFB::UPBlock_CDFD_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_CDFD_v1::program_hw(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_CDFD_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_CDFD_v1::set(IOMFBCDFDConfig const*)
IOMFB::UPBlock_CDFD_v1::set(uint,IOMFBCDFDTheta const*)
IOMFB::UPBlock_CDFD_v1::set(uint,IOMFBCDFDThresholds const*)
IOMFB::UPBlock_ColorManager::compose_ctm(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::UPBlock_ColorManager::compose_ctm(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::UPBlock_ColorManager::ctm_is_active(void)
IOMFB::UPBlock_ColorManager::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFBHCAState *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_ColorManager::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager::get_matrix(IOMFBColorFixedMatrix *)
IOMFB::UPBlock_ColorManager::latleak_register(IOMFB::LateralLeakageHandler *)
IOMFB::UPBlock_ColorManager::matrix_changed(IOMFB::MatrixHandler::Function)
IOMFB::UPBlock_ColorManager::register_matrix_handler(IOMFB::MatrixHandler *)
IOMFB::UPBlock_ColorManager::set_clut_flag(bool)
IOMFB::UPBlock_ColorManager_v4::UPBlock_ColorManager_v4(void)
IOMFB::UPBlock_ColorManager_v4::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_ColorManager_v4::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_ColorManager_v4::compose_ctm(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::UPBlock_ColorManager_v4::compute_config(void)
IOMFB::UPBlock_ColorManager_v4::compute_degamma(void)
IOMFB::UPBlock_ColorManager_v4::compute_gamma(void)
IOMFB::UPBlock_ColorManager_v4::ctm_is_active(void)
IOMFB::UPBlock_ColorManager_v4::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_ColorManager_v4::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_ColorManager_v4::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::did_program_static(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_ColorManager_v4::get_hca_state(IOMFBHCAState *)
IOMFB::UPBlock_ColorManager_v4::hdr_regamma_set_dirty(void)
IOMFB::UPBlock_ColorManager_v4::hgod_active(void)
IOMFB::UPBlock_ColorManager_v4::ll_reg_offsets(void)
IOMFB::UPBlock_ColorManager_v4::matrix_changed(IOMFB::MatrixHandler::Function)
IOMFB::UPBlock_ColorManager_v4::on_brightness_change(int)
IOMFB::UPBlock_ColorManager_v4::program_clut(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_degamma(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_gamma_3x3(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_iccdegamma(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_iccregamma(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_post_clut_3x3(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_pre_clut_3x3(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_regamma(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_ColorManager_v4::read_state(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::register_matrix_handler(IOMFB::MatrixHandler *)
IOMFB::UPBlock_ColorManager_v4::reload_color_accuracy_param(void)
IOMFB::UPBlock_ColorManager_v4::set_contrast(float)
IOMFB::UPBlock_ColorManager_v4::setup_3D_ID_LUT(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_ColorManager_v4::~UPBlock_ColorManager_v4()
IOMFB::UPBlock_Config::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config::init(IOMFB::UPPipe *)
IOMFB::UPBlock_Config::pio_trace_dump_config(char const*)
IOMFB::UPBlock_Config::pio_trace_init(void)
IOMFB::UPBlock_Config::pio_trace_init(void)::$_1::__invoke(IOMFB::UPBlock_Config*,char const*,void *,int)
IOMFB::UPBlock_Config::pio_trace_init_impl(bool (*)(IOMFB::UPBlock_Config*,char const*,void *,int))
IOMFB::UPBlock_Config::qos_callback(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_Config::set_frame_size(uint,uint)
IOMFB::UPBlock_Config_H11P::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::gather_qos_stats(IOMFB::AppleRegisterStream *,IOMFBQoSStats *)
IOMFB::UPBlock_Config_H11P::init(IOMFB::UPPipe *)
IOMFB::UPBlock_Config_H11P::program_frame_size(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::program_ocla(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::program_pio_trace(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_Config_H11P::report_latency_stats(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Config_H11P::setup_power_gating(void)
IOMFB::UPBlock_Config_H11P::~UPBlock_Config_H11P()
IOMFB::UPBlock_Dither::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_Dither::init(IOMFB::UPPipe *)
IOMFB::UPBlock_Dither::set_out_depth(uint)
IOMFB::UPBlock_Dither_v3::UPBlock_Dither_v3(void)
IOMFB::UPBlock_Dither_v3::block_enabled(void)
IOMFB::UPBlock_Dither_v3::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_Dither_v3::configure_ST(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::configure_eST(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::configure_eST(IOMFB::AppleRegisterStream *,int)
IOMFB::UPBlock_Dither_v3::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::init(IOMFB::UPPipe *)
IOMFB::UPBlock_Dither_v3::program_active(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::program_depth(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_Dither_v3::read_out_depth(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::read_state(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::reg_addr(uint)
IOMFB::UPBlock_Dither_v3::reg_save(IOMFB::AppleRegisterStream *,uint,uint)
IOMFB::UPBlock_Dither_v3::restore_state(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Dither_v3::set_active_region(uint,uint)
IOMFB::UPBlock_Dither_v3::~UPBlock_Dither_v3()
IOMFB::UPBlock_GenPipe::apply_CSC(IOMFB_CSCMode,IOMFB::MatAccum *)
IOMFB::UPBlock_GenPipe::effectiveSurface(IOMFBSwapIORequest const*,uint,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe::get_CSC_data(IOMFB_CSCMode,IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::UPBlock_GenPipe::init(IOMFB::UPPipe *)
IOMFB::UPBlock_GenPipe::layerEnabled(IOMFBSwapIORequest const*,uint)
IOMFB::UPBlock_GenPipe::ponderCSCMethod(IOSurface *,IOMFB::PixelDef const*)
IOMFB::UPBlock_GenPipe::updateGenPipeIdx(IOMFBSwapIORequest *,uint)
IOMFB::UPBlock_GenPipe::update_hdr_metadata(IOSurface *)
IOMFB::UPBlock_GenPipe_v2::agx_particulars(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,int)
IOMFB::UPBlock_GenPipe_v2::build_od_matrix(IOMFB::MatAccum *,bool,bool)
IOMFB::UPBlock_GenPipe_v2::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_GenPipe_v2::decompression_failure(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_GenPipe_v2::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_GenPipe_v2::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_GenPipe_v2::figure_pix_fmt(IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*)
IOMFB::UPBlock_GenPipe_v2::figure_pix_size(IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*)
IOMFB::UPBlock_GenPipe_v2::get_dfb_info(IOMFB::AppleRegisterStream *,uint *,ulong long *,uint *)
IOMFB::UPBlock_GenPipe_v2::get_enable(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_GenPipe_v2::get_frame_size(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::UPBlock_GenPipe_v2::hgod_write(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_GenPipe_v2::htpc_particulars(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,int)
IOMFB::UPBlock_GenPipe_v2::htpc_particulars(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,int)
IOMFB::UPBlock_GenPipe_v2::init(IOMFB::UPPipe *)
IOMFB::UPBlock_GenPipe_v2::need_eco(IOSurface *)
IOMFB::UPBlock_GenPipe_v2::od_composite(IOMFBColorFixedMatrix *)
IOMFB::UPBlock_GenPipe_v2::pmgr_fast_gating(uint)
IOMFB::UPBlock_GenPipe_v2::pmgr_fast_gating_new_swap(uint,bool)
IOMFB::UPBlock_GenPipe_v2::ponderCSCMethod(IOSurface *,IOMFB::PixelDef const*)
IOMFB::UPBlock_GenPipe_v2::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_GenPipe_v2::program_bwr(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe_v2::program_colorman(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool,bool)
IOMFB::UPBlock_GenPipe_v2::program_crc_particulars(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe_v2::program_dst_particulars(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe_v2::program_misc(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe_v2::program_scale(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool *,bool)
IOMFB::UPBlock_GenPipe_v2::program_src_particulars(IOMFB::AppleRegisterStream *,IOMFB::PixelDef const*,IOMFB::UPBlock_GenPipe::GPSurface *)
IOMFB::UPBlock_GenPipe_v2::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,uint,uint *,IOMFBRect const**,bool,bool)
IOMFB::UPBlock_GenPipe_v2::rt_bandwidth_requirements(IOMFBSwapIORequest *,float *,float *,bool)
IOMFB::UPBlock_GenPipe_v2::setup_3x3(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool,bool)
IOMFB::UPBlock_GenPipe_v2::setup_csc(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool,bool)
IOMFB::UPBlock_GenPipe_v2::setup_degamma(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool)
IOMFB::UPBlock_GenPipe_v2::setup_od(IOMFB::MatAccum::OffsetMatrix<uint> *,IOMFB::UPBlock_GenPipe::GPSurface const*,IOFBSA::FxPrecision,IOFBSA::FxPrecision,bool,bool)
IOMFB::UPBlock_GenPipe_v2::setup_regamma(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_GenPipe::GPSurface *,IOMFB::PixelDef const*,bool)
IOMFB::UPBlock_GenPipe_v2::~UPBlock_GenPipe_v2()
IOMFB::UPBlock_OutConv_v1::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_OutConv_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_OutConv_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_OutConv_v1::figure_meta(IOMFBSwapIORequest *)
IOMFB::UPBlock_OutConv_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_OutConv_v1::program_3x3(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_OutConv_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_OutConv_v1::~UPBlock_OutConv_v1()
IOMFB::UPBlock_PCC::UPBlock_PCC(void)
IOMFB::UPBlock_PCC::backlight_off(void)
IOMFB::UPBlock_PCC::cabal_enabled(void)
IOMFB::UPBlock_PCC::cabal_supported(void)
IOMFB::UPBlock_PCC::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PCC::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PCC::did_boot(IOMFB::AppleRegisterStream *)::$_2::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PCC::did_boot(IOMFB::AppleRegisterStream *)::$_4::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PCC::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC::display_edr_factor_changed(float)
IOMFB::UPBlock_PCC::get_max_bright(bool *)
IOMFB::UPBlock_PCC::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PCC::is_trinity_active(void)
IOMFB::UPBlock_PCC::on_brightness_change(int)
IOMFB::UPBlock_PCC::pcc_enabled(void)
IOMFB::UPBlock_PCC::pcc_supported(void)
IOMFB::UPBlock_PCC::report_change(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC::set_backlight_property(bool)
IOMFB::UPBlock_PCC::set_mailbox_handler(PCCMailboxHandler *)
IOMFB::UPBlock_PCC::trinity_enabled(void)
IOMFB::UPBlock_PCC::trinity_needed(IOMFBSwapIORequest *,bool,bool,bool)
IOMFB::UPBlock_PCC::trinity_supported(void)
IOMFB::UPBlock_PCC::~UPBlock_PCC()
IOMFB::UPBlock_PCC_v1::UPBlock_PCC_v1(void)
IOMFB::UPBlock_PCC_v1::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_PCC_v1::did_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::did_program_static(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PCC_v1::direct_strength_update(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PCC_v1::dmem_init(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::get_data(IOMFBPCCData *)
IOMFB::UPBlock_PCC_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PCC_v1::irq_mask(void)
IOMFB::UPBlock_PCC_v1::irq_process(IOMFB::AppleRegisterStream *,uint,uint)
IOMFB::UPBlock_PCC_v1::program_dynamic_regs(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool,bool,bool)
IOMFB::UPBlock_PCC_v1::program_sdc_luma_gamma_lut(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::program_static_regs(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool,bool,bool)
IOMFB::UPBlock_PCC_v1::read_bright_out(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::read_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::set_active_size(uint,uint)
IOMFB::UPBlock_PCC_v1::set_data(IOMFBPCCData const*)
IOMFB::UPBlock_PCC_v1::set_mcpu_power(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PCC_v1::set_sdc_luma_gamma_lut(void)
IOMFB::UPBlock_PCC_v1::soft_reset(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::temporal_filter_stable(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::write_edr_factor(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::write_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PCC_v1::~UPBlock_PCC_v1()
IOMFB::UPBlock_PDC::UPBlock_PDC(void)
IOMFB::UPBlock_PDC::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PDC::get_bwr_value(uint *)
IOMFB::UPBlock_PDC::get_frame_size(uint *,uint *)
IOMFB::UPBlock_PDC::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PDC::register_2D_temp_comp(IOMFB::TempComp2DHandler *)
IOMFB::UPBlock_PDC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_PDC::~UPBlock_PDC()
IOMFB::UPBlock_PDC_v2::UPBlock_PDC_v2(void)
IOMFB::UPBlock_PDC_v2::allocate_buffers(IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_PDC_v2::build_pinned_buffer(IOMFBAppleRegStmAPIODMA::PinnedBuffer *,IOMFB::AppleRegisterStream *,uint,uint const*,uint)
IOMFB::UPBlock_PDC_v2::build_pinned_buffer_async(IOMFBPIODMAPinnedAsync *,uint,uint const*,uint,bool)
IOMFB::UPBlock_PDC_v2::build_pinned_buffer_async(IOMFBPIODMAPinnedAsync *,uint,uint const*,uint,bool)::$_9::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_PDC_v2::check_enable_status(void)
IOMFB::UPBlock_PDC_v2::construct_lut(uint *,float,uint,uint,uint,uint)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFBPDCLUTs const*,ulong long const*,uint,void const*,uint)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFBPDCLUTs *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)::$_4::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)::$_5::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PDC_v2::did_boot(IOMFB::AppleRegisterStream *)::$_8::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_PDC_v2::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::figure_sizes(uint *,uint *,uint,uint *)
IOMFB::UPBlock_PDC_v2::free_buffers(void)
IOMFB::UPBlock_PDC_v2::free_scratch_luts(void)
IOMFB::UPBlock_PDC_v2::free_tables(void)
IOMFB::UPBlock_PDC_v2::generate_missing_luts(void)
IOMFB::UPBlock_PDC_v2::get_LUT(IOMFBPDCLUTs *,uint,uint)
IOMFB::UPBlock_PDC_v2::get_brightness(void)
IOMFB::UPBlock_PDC_v2::get_lut_entry(uint,uint,uint,uint)
IOMFB::UPBlock_PDC_v2::get_tab_config(IOMFBPDCTableConfig *)
IOMFB::UPBlock_PDC_v2::harmony_changed(void)
IOMFB::UPBlock_PDC_v2::hgod_register(IOMFB::HighGrayOverdrive *)
IOMFB::UPBlock_PDC_v2::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PDC_v2::init_pdc_bwr(void)
IOMFB::UPBlock_PDC_v2::init_scratch_luts(void)
IOMFB::UPBlock_PDC_v2::mix_value_to_dmem(IOMFB::AppleRegisterStream *,uint)
IOMFB::UPBlock_PDC_v2::on_brightness_change(void)
IOMFB::UPBlock_PDC_v2::on_lux_change(int)
IOMFB::UPBlock_PDC_v2::program_luts(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PDC_v2::program_luts_index(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PDC_v2::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_PDC_v2::program_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::read_pixel_capture(IOMFB::AppleRegisterStream *,uint)
IOMFB::UPBlock_PDC_v2::read_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::reload_color_accuracy_param(void)
IOMFB::UPBlock_PDC_v2::rt_bandwidth_requirements(IOMFBSwapIORequest *,float *,float *,bool)
IOMFB::UPBlock_PDC_v2::scale_bright(int,float)
IOMFB::UPBlock_PDC_v2::set_actual_brightness(int)
IOMFB::UPBlock_PDC_v2::set_compressed_buffers(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::set_entry_time(int)
IOMFB::UPBlock_PDC_v2::set_exit_time(int)
IOMFB::UPBlock_PDC_v2::set_panel_size(uint,uint,IOMFB::MemBlockAllocator *)
IOMFB::UPBlock_PDC_v2::set_sdc_luts(void)
IOMFB::UPBlock_PDC_v2::set_sdc_luts(void)
IOMFB::UPBlock_PDC_v2::set_tab_config(IOMFBPDCTableConfig const*)
IOMFB::UPBlock_PDC_v2::temperature_changed(void)
IOMFB::UPBlock_PDC_v2::time_to_frame_count(int)
IOMFB::UPBlock_PDC_v2::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PDC_v2::~UPBlock_PDC_v2()
IOMFB::UPBlock_PRC::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC::did_boot(IOMFB::AppleRegisterStream *)::$_2::__invoke(void *,IOMFBPRCConfig *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_PRC::did_boot(IOMFB::AppleRegisterStream *)::$_3::__invoke(void *,IOMFBPRCConfig const*,ulong long const*,uint,void const*,uint)
IOMFB::UPBlock_PRC::did_boot(IOMFB::AppleRegisterStream *)::$_4::__invoke(void *,IOMFBPRCTableConfig *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_PRC::did_boot(IOMFB::AppleRegisterStream *)::$_5::__invoke(void *,IOMFBPRCTableConfig const*,ulong long const*,uint,void const*,uint)
IOMFB::UPBlock_PRC::get_LUTs(IOMFBPRCLUTs *,ulong long const*,uint)
IOMFB::UPBlock_PRC::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PRC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_PRC::set_LUTs(IOMFBPRCLUTs const*,ulong long const*,uint)
IOMFB::UPBlock_PRC_v2::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_PRC_v2::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_PRC_v2::compute_regamma(void)
IOMFB::UPBlock_PRC_v2::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::did_program_static(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_PRC_v2::get_LUTs(IOMFBPRCLUTs *,bool,uint)
IOMFB::UPBlock_PRC_v2::get_config(IOMFBPRCConfig *)
IOMFB::UPBlock_PRC_v2::get_gamma_calib_data(IOMFB::UPIOSvcProxy::DataBuffer *)
IOMFB::UPBlock_PRC_v2::get_regamma_lut_cp(IOMFB::IOFBSAGammaLUT::ControlPoint const**,int *,uint *)
IOMFB::UPBlock_PRC_v2::hdr_regamma_write(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::init(IOMFB::UPPipe *)
IOMFB::UPBlock_PRC_v2::normal_mode(bool)
IOMFB::UPBlock_PRC_v2::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_PRC_v2::read_luts(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::read_polarity_luts(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::set_LUTs(IOMFBPRCLUTs const*,bool,uint)
IOMFB::UPBlock_PRC_v2::set_active_size(uint,uint)
IOMFB::UPBlock_PRC_v2::set_config(IOMFBPRCConfig const*)
IOMFB::UPBlock_PRC_v2::set_contrast(float)
IOMFB::UPBlock_PRC_v2::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_PRC_v2::~UPBlock_PRC_v2()
IOMFB::UPBlock_SPLR_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPLR_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_SPLR_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_SPLR_v1::~UPBlock_SPLR_v1()
IOMFB::UPBlock_SPUC::alloc_loader_mem(uint,uint)
IOMFB::UPBlock_SPUC::alloc_maps(IOMFB::UPBlock_SPUC::spuc_decomp_dataset_info_t *)
IOMFB::UPBlock_SPUC::buf_size(uint,uint,IOMFB::UPBlock_SPUC::SPUCBufType)
IOMFB::UPBlock_SPUC::check_spuc_data(uchar const*,uint)
IOMFB::UPBlock_SPUC::compress_spuc(uint,uint *,uchar *,uint,uint,uchar (*)(void *),void *,uint *)
IOMFB::UPBlock_SPUC::compress_spuc_map(void)
IOMFB::UPBlock_SPUC::compress_spuc_map(void)::$_4::__invoke(void *)
IOMFB::UPBlock_SPUC::decompress_edt_data(void)
IOMFB::UPBlock_SPUC::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC::did_boot(IOMFB::AppleRegisterStream *)::$_3::__invoke(void *,IOMFBPBMemoryBlock const*,ulong long const*,uint,void const*,uint)
IOMFB::UPBlock_SPUC::free_loader_mem(void)
IOMFB::UPBlock_SPUC::free_maps(IOMFB::UPBlock_SPUC::spuc_decomp_dataset_info_t *)
IOMFB::UPBlock_SPUC::get_edt_data(void)
IOMFB::UPBlock_SPUC::init(IOMFB::UPPipe *)
IOMFB::UPBlock_SPUC::is_supported(void)
IOMFB::UPBlock_SPUC::parse_decompressed_data(void)
IOMFB::UPBlock_SPUC::set_any_valid(bool)
IOMFB::UPBlock_SPUC::set_spuc_data(IOMFBPBMemoryBlock const*,uint,uint)
IOMFB::UPBlock_SPUC::~UPBlock_SPUC()
IOMFB::UPBlock_SPUC_v1::check_dataset_update(IOMFB::UPBlock_SPUC::spuc_decomp_dataset_info_t **)
IOMFB::UPBlock_SPUC_v1::default_luts(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPBlock_SPUC_v1::export_spuc_info(IOMFBSPUCInfo *)
IOMFB::UPBlock_SPUC_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_SPUC_v1::modify_luts(IOMFB::decomp_v2 *,LutType)
IOMFB::UPBlock_SPUC_v1::program_brightness(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_bwr(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_config(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_luts(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_luts_v1(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_luts_v3(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_maps(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_SPUC_v1::program_v2g(IOMFB::AppleRegisterStream *,uint,uint,uint *,uint *,uint (*)[17],uint (*)[17],uint (*)[16])
IOMFB::UPBlock_SPUC_v1::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SPUC_v1::write_data(IOMFB::AppleRegisterStream *,uint *,uint,uint)
IOMFB::UPBlock_SPUC_v1::~UPBlock_SPUC_v1()
IOMFB::UPBlock_SWMPR::auto_mode(void)
IOMFB::UPBlock_SWMPR::call_swmpr_enable(bool *)
IOMFB::UPBlock_SWMPR::dbsr_dbv_changed(void)
IOMFB::UPBlock_SWMPR::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SWMPR::find_enable_func(void)
IOMFB::UPBlock_SWMPR::find_enable_func(void)::$_1::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_SWMPR::find_enable_func(void)::$_1::operator() const(void *,void *,void *,void *)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_SWMPR::find_handoff_func(void)
IOMFB::UPBlock_SWMPR::find_handoff_func(void)::$_0::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_SWMPR::find_handoff_func(void)::$_0::operator() const(void *,void *,void *,void *)::{lambda(void *,void *,void *,void *)#1}::__invoke(void *,void *,void *,void *)
IOMFB::UPBlock_SWMPR::handoff_dbv(void)
IOMFB::UPBlock_SWMPR::init(IOMFB::UPPipe *)
IOMFB::UPBlock_SWMPR::program_dmem(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SWMPR::register_dbsr_hand(IOMFB::DBSRHandler *)
IOMFB::UPBlock_SWMPR::register_vp_hand(IOMFB::VPHandler *)
IOMFB::UPBlock_SWMPR::set_temp(int)
IOMFB::UPBlock_SWMPR::swap_done(void)
IOMFB::UPBlock_SWMPR::vp_dbv_changed(void)
IOMFB::UPBlock_SWMPR::~UPBlock_SWMPR()
IOMFB::UPBlock_SWMPR_v1::program_dbv(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_SWMPR_v1::program_vp(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Tunables::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Tunables::init(IOMFB::UPPipe *)
IOMFB::UPBlock_Tunables_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Tunables_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Tunables_v1::write_all_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_Tunables_v1::~UPBlock_Tunables_v1()
IOMFB::UPBlock_VFTG::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG::get_frame_size(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::UPBlock_VFTG::get_line_time_us(IOMFB::AppleRegisterStream *,ulong long)
IOMFB::UPBlock_VFTG::get_total_size(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::UPBlock_VFTG::init(IOMFB::UPPipe *)
IOMFB::UPBlock_VFTG::set_color_channels(IOMFB::UPBlock_VFTG::Channel,IOMFB::UPBlock_VFTG::Channel,IOMFB::UPBlock_VFTG::Channel)
IOMFB::UPBlock_VFTG::set_idle_subframe_count(uint)
IOMFB::UPBlock_VFTG::set_timings(IOAVVideoTimingElement *)
IOMFB::UPBlock_VFTG::set_timings(IOMFB::UPBlock_VFTG::Timings const*)
IOMFB::UPBlock_VFTG::set_underrun_color(uint)
IOMFB::UPBlock_VFTG_v1::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::get_active_subframe_count(void)
IOMFB::UPBlock_VFTG_v1::get_auto_idle_subframe_count(void)
IOMFB::UPBlock_VFTG_v1::get_vbi_pulse_lines(void)
IOMFB::UPBlock_VFTG_v1::init(IOMFB::UPPipe *)
IOMFB::UPBlock_VFTG_v1::is_running(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::populate_command_mode(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_VFTG_v1::program_timings(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::program_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::program_underrun_color(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::read_timings(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_VFTG::Timings *)
IOMFB::UPBlock_VFTG_v1::read_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::set_cmdmode_control(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_VFTG_v1::set_cmdmode_type(IOMFB::AppleRegisterStream *,IOMFB::UPBlock_VFTG::CMModeType)
IOMFB::UPBlock_VFTG_v1::set_fsync_enabled(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_VFTG_v1::set_timings(IOMFB::UPBlock_VFTG::Timings const*)
IOMFB::UPBlock_VFTG_v1::set_timings_enabled(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPBlock_VFTG_v1::set_ycbcr_black(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::write_timings(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_VFTG_v1::~UPBlock_VFTG_v1()
IOMFB::UPBlock_WPC::LUT_Remap::compute(IOMFB::TableCompensator const*)
IOMFB::UPBlock_WPC::LUT_Remap::map_lut(IOMFB::TableCompensator const*,uint *)
IOMFB::UPBlock_WPC::LUT_Remap::map_val(int)
IOMFB::UPBlock_WPC::LUT_Remap::set_range(int)
IOMFB::UPBlock_WPC::LUT_Remap::~LUT_Remap()
IOMFB::UPBlock_WPC::UPBlock_WPC(void)
IOMFB::UPBlock_WPC::bscale_changed(void)
IOMFB::UPBlock_WPC::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFBWPCHWState *,ulong long const*,uint,void *,uint)
IOMFB::UPBlock_WPC::disable_calibration(bool)
IOMFB::UPBlock_WPC::init(IOMFB::UPPipe *)
IOMFB::UPBlock_WPC::matrix_changed(IOMFB::MatrixHandler::Function)
IOMFB::UPBlock_WPC::register_2D_temp_comp(IOMFB::TempComp2DHandler *)
IOMFB::UPBlock_WPC::register_handler(IOMFB::BrightnessScale *)
IOMFB::UPBlock_WPC::register_ksf_comp(IOMFB::KSFCompHandler *)
IOMFB::UPBlock_WPC::register_matrix_handler(IOMFB::MatrixHandler *)
IOMFB::UPBlock_WPC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_WPC::register_uniform_comp(IOMFB::UniformityCompensator *)
IOMFB::UPBlock_WPC::temp_2D_table_changed(void)
IOMFB::UPBlock_WPC::wp_matrix_changed(void)
IOMFB::UPBlock_WPC_v5::UPBlock_WPC_v5(void)
IOMFB::UPBlock_WPC_v5::analyze_partial_frame(IOMFB::UPBlock::PartialFrameConstraints *)
IOMFB::UPBlock_WPC_v5::capture_pixel(IOMFB::AppleRegisterStream *,IOMFBPixCapPixel *)
IOMFB::UPBlock_WPC_v5::compute_ctl(bool,IOMFB::UPBlock_WPC_v5::TempCompMode *)
IOMFB::UPBlock_WPC_v5::compute_xform(uint *,IOMFB::MatAccum::OffsetMatrix<uint> *,uint *,IOMFB::MatAccum::OffsetMatrix<float> *)
IOMFB::UPBlock_WPC_v5::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::direct_matrix_apply(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::dmem_get_index(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::dmem_init(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::dmem_mark_valid(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::get_last_matrix(double *)
IOMFB::UPBlock_WPC_v5::get_matrix(IOMFBColorFixedMatrix *)
IOMFB::UPBlock_WPC_v5::get_state(IOMFBWPCHWState *)
IOMFB::UPBlock_WPC_v5::icc_dest_profile_changed(void)
IOMFB::UPBlock_WPC_v5::init(IOMFB::UPPipe *)
IOMFB::UPBlock_WPC_v5::program_2d_grid(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_2d_temps(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_brightness(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_ksf_lut(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,bool)
IOMFB::UPBlock_WPC_v5::program_temp_gains(IOMFB::AppleRegisterStream *,IOMFB::TempHandler const*)
IOMFB::UPBlock_WPC_v5::program_temperature(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::program_xform(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::read_initial_state(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::register_handler(IOMFB::ICCHandler *)
IOMFB::UPBlock_WPC_v5::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPBlock_WPC_v5::~UPBlock_WPC_v5()
IOMFB::UPEventManager::UPEventManager(IOMFB::WorkLoop *,IOMFB::Gate *)
IOMFB::UPEventManager::add(IOMFB::UPEventMonitor *)
IOMFB::UPEventManager::add(IOMFB::UPEventMonitor *)::$_2::operator()(OSObject *,void *,void *,void *,void *)
IOMFB::UPEventManager::remove(IOMFB::UPEventMonitor *)
IOMFB::UPEventManager::remove(IOMFB::UPEventMonitor *)::$_3::operator()(OSObject *,void *,void *,void *,void *)
IOMFB::UPEventManager::~UPEventManager()
IOMFB::UPEventMonitor::cancel(void)
IOMFB::UPEventMonitor::init(IOMFB::UPEventMonitor::Name,void *,void (*)(void *,IOMFB::UPEventMonitor*,IOMFB::UPEventMonitor::State,void *),void *)
IOMFB::UPEventMonitor::operator delete(void *,ulong)
IOMFB::UPEventMonitor::restart(void)
IOMFB::UPEventMonitor::set_state(IOMFB::UPEventMonitor::State)
IOMFB::UPEventMonitor::set_state(IOMFB::UPEventMonitor::State)::$_0::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPEventMonitor::set_state(IOMFB::UPEventMonitor::State)::$_0::operator IOMFBStatus (*)(OSObject *,void *,void *,void *,void *)(void)
IOMFB::UPEventMonitor::set_state(IOMFB::UPEventMonitor::State)::$_0::operator()(OSObject *,void *,void *,void *,void *)
IOMFB::UPEventMonitor::set_state(IOMFB::UPEventMonitor::State)::$_1::operator()(OSObject *,void *,void *,void *,void *)
IOMFB::UPEventMonitor::timer_expired(IOMFB::TimerEventSource *)
IOMFB::UPEventMonitor::~UPEventMonitor()
IOMFB::UPIOSvcProxy::DataBuffer::set_data(void const*,ulong)
IOMFB::UPIOSvcProxy::create(IOService *)
IOMFB::UPPipe::CIEtoX(IOMFB::MatAccum::OffsetMatrix<float> *,float const*,float const(*)[2])
IOMFB::UPPipe::ISS_to_sRGB(IOMFB::IdealScreenSpace,IOMFB::MatAccum *)
IOMFB::UPPipe::acquire_aot_assertion(IOMFB::UPPipe::AOTAssertsIndex)
IOMFB::UPPipe::active_subframes_count(void)
IOMFB::UPPipe::aot_supported_peek(void)
IOMFB::UPPipe::auto_subframes_count(void)
IOMFB::UPPipe::backlight_service_matched(void)::$_45::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPPipe::backlight_update_fn_setup(void)::$_54::__invoke(IOMFB::UPAAFProxy *,void *,void *,void *)
IOMFB::UPPipe::bics_param_index(void)
IOMFB::UPPipe::bitsPerPixel(IOSurface *)
IOMFB::UPPipe::blend_to_sRGB(IOMFB::MatAccum *)
IOMFB::UPPipe::brightness_changed(int)
IOMFB::UPPipe::ca_update_pmu_async(uint,uint,uint,uint,uint)
IOMFB::UPPipe::calculate_backlight_denom(IOMFB::MatAccum const*)
IOMFB::UPPipe::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOMFB::UPPipe::can_program_swap(IOMFBSwapIORequest *)
IOMFB::UPPipe::did_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_0::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_10::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_11::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_12::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_13::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_14::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_15::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_16::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_17::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_18::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_18::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_19::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_1::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_21::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_22::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_2::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_3::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_4::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_5::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_6::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_7::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)2> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_boot(IOMFB::AppleRegisterStream *)::$_8::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_23::__invoke(void *,IOMFB_2D_Uniformity_State *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_24::__invoke(void *,IOMFB_2D_Uniformity_State const*,ulong long const*,uint,void const*,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_29::__invoke(void *,IOMFBKSFLUT *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_30::__invoke(void *,IOMFB_2D_Temp_State *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_31::__invoke(void *,IOMFB_2D_Temp_State const*,ulong long const*,uint,void const*,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_35::__invoke(void *,IOMFBVSHInfo *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_36::__invoke(void *,IOMFBSPUCInfo *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::did_power_on(IOMFB::AppleRegisterStream *)::$_37::__invoke(void *,IOMFBScreenOnTimeInfo *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe::disable_wpc_calibration(bool)
IOMFB::UPPipe::display_edr_factor_changed(float)
IOMFB::UPPipe::edr_info(IOMFBEDRInfo *)
IOMFB::UPPipe::final_gamma_block(void)
IOMFB::UPPipe::frame_done(ulong long)
IOMFB::UPPipe::frame_info_populate(FInfoQueueEntry *,IOMFBSwapIORequest const*)
IOMFB::UPPipe::get_block(ulong long,uint,uint,ulong long const*,uint,uchar *,ulong)
IOMFB::UPPipe::get_calendar_time_ms(void)
IOMFB::UPPipe::get_config_frame_size(uint *,uint *)
IOMFB::UPPipe::get_digdim_factor(void)
IOMFB::UPPipe::get_frame_size(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::UPPipe::get_gamma_table_gated(IOMFBGammaTable *)
IOMFB::UPPipe::get_harmony_scale(int,int)
IOMFB::UPPipe::get_internal_timing_attributes_gated(IOMFB::RefreshTimingAttributes *)
IOMFB::UPPipe::get_line_time_us(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::get_max_bright(bool *)
IOMFB::UPPipe::get_panel_serial_number(char *,uint *)
IOMFB::UPPipe::has_debugger(void)
IOMFB::UPPipe::hgod_update(void)
IOMFB::UPPipe::ideal_screen_space(void)
IOMFB::UPPipe::ideal_to_sRGB(IOMFB::MatAccum *)
IOMFB::UPPipe::init(UnifiedPipeline *)
IOMFB::UPPipe::init_PLCHandler(IOService *)
IOMFB::UPPipe::init_ca_pmu(void)
IOMFB::UPPipe::init_handlers(void)
IOMFB::UPPipe::init_handlers(void)::$_43::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::init_primary(IOMFB::MatrixHandler *,bool)
IOMFB::UPPipe::init_properties(IOMFB::PropMgr::Relay *)
IOMFB::UPPipe::init_properties(IOMFB::PropMgr::Relay *)::$_48::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::init_properties(IOMFB::PropMgr::Relay *)::$_49::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)0> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe::iomem_alloc(IOMFB::UPPipe::IOMemory *,uint,bool,bool,bool,IOMFB::MemBlockAllocator *,uint)
IOMFB::UPPipe::iomem_free(IOMFB::UPPipe::IOMemory *)
IOMFB::UPPipe::is_disp_external(void)
IOMFB::UPPipe::is_grgb(void)
IOMFB::UPPipe::is_programming_passthrough(IOMFBSwapIORequest *,uint *)
IOMFB::UPPipe::is_swap_passthrough(IOMFBSwapIORequest const*,uint *)
IOMFB::UPPipe::late_init(void)::$_41::__invoke(void *,IOMFB::UPEventMonitor *,IOMFB::UPEventMonitor::State,void *)
IOMFB::UPPipe::layer_active(IOMFBSwapIORequest *,uint)
IOMFB::UPPipe::layer_crossbar(IOMFBSwapIORequest *,IOMFB::LayerCrossbar *)
IOMFB::UPPipe::layer_valid(IOMFBSwapIORequest const*,uint)
IOMFB::UPPipe::lines_per_idle_sfm(void)
IOMFB::UPPipe::mapMemory(ulong long,uint,uint)
IOMFB::UPPipe::map_buf(IOMFB::BufferDescriptor *,ulong *,ulong long *,bool)
IOMFB::UPPipe::match_backlight_service(void)
IOMFB::UPPipe::match_backlight_service(void)::$_47::__invoke(void *,void *,IOService *,IONotifier *)
IOMFB::UPPipe::match_pmu_service(void)
IOMFB::UPPipe::match_pmu_service(void)::$_46::__invoke(void *,void *,IOService *,IONotifier *)
IOMFB::UPPipe::match_services_ios(void)
IOMFB::UPPipe::max_duration_sfm(void)
IOMFB::UPPipe::messageClients(uint,void *,ulong long)
IOMFB::UPPipe::min_duration_sfm(void)
IOMFB::UPPipe::mode_frame_dims(IOMFB::UPPipe::ModeSize *,bool)
IOMFB::UPPipe::needs_frame(void)
IOMFB::UPPipe::normal_mode_supported(void)
IOMFB::UPPipe::p3_to_disp_cs(float const*,float const(*)[2])
IOMFB::UPPipe::plc_init(void)
IOMFB::UPPipe::plc_init(void)::$_51::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe::plc_init(void)::$_51::operator() const(void *,void *,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPPipe::plc_init(void)::$_52::__invoke(void *,void *,IOService *,IONotifier *)
IOMFB::UPPipe::plc_init(void)::$_52::operator() const(void *,void *,IOService *,IONotifier *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPPipe::plc_lookup_done(IOService *,IOSurfaceAcceleratorClient *)
IOMFB::UPPipe::pmu_io_setup(void)
IOMFB::UPPipe::pmu_service_matched(void)
IOMFB::UPPipe::pmu_service_matched(void)::$_44::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPPipe::primary_conv(float const*,float const(*)[2],float const*,float const(*)[2],CSCData *,IOFBSA::FxPrecision)
IOMFB::UPPipe::program_config_frame_size(void)
IOMFB::UPPipe::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,uint,uchar *)
IOMFB::UPPipe::propertyDict(char const*,IOMFB::UPPipe::t_PDProp const*,uint)
IOMFB::UPPipe::publish_backlight_ratio(int)
IOMFB::UPPipe::publish_backlight_ratio(int)::$_55::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe::publish_charge_values(void)
IOMFB::UPPipe::read_blend_crc(void)
IOMFB::UPPipe::read_carveout_by_chunks(uchar *,ulong long,uint)
IOMFB::UPPipe::read_config_crc(void)
IOMFB::UPPipe::read_pmu_data_sync(void)
IOMFB::UPPipe::release_aot_assertion(IOMFB::UPPipe::AOTAssertsIndex)
IOMFB::UPPipe::reload_backlight_calib(void)
IOMFB::UPPipe::report_cas(IOMFB::UPBlock *,IOMFB::AppleRegisterStream *,uint)
IOMFB::UPPipe::reprogram_display_with_dummy_swap_gated(IOMFBSwapRequestIntent)
IOMFB::UPPipe::run_gated(IOMFBStatus (*)(void *,void *,void *,void *),void *,void *,void *,void *)
IOMFB::UPPipe::sRGB_to_ideal(IOMFB::MatAccum *)
IOMFB::UPPipe::save_pmu_data(bool)
IOMFB::UPPipe::save_pmu_data(bool)::$_59::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe::screen_on_time_info(IOMFBScreenOnTimeInfo *)
IOMFB::UPPipe::set_apl_weights(float const*,bool)
IOMFB::UPPipe::set_apl_weights(float const*,bool)::$_65::__invoke(float)
IOMFB::UPPipe::set_backlight_denom(IOMFB::MatAccum const*)
IOMFB::UPPipe::set_backlight_factor(IOMFB::UPPipe::BacklightFactor,int)
IOMFB::UPPipe::set_bics_mode(void)
IOMFB::UPPipe::set_block(ulong long,uint,uint,ulong long const*,uint,uchar const*,ulong,bool)
IOMFB::UPPipe::set_bpp_limit(IOMFB::PropMgr *,IOMFB::RuntimeProperty,char const*)
IOMFB::UPPipe::set_color_filter_scale(int)
IOMFB::UPPipe::set_config_frame_size(uint,uint)
IOMFB::UPPipe::set_corner_temps(int const*)
IOMFB::UPPipe::set_ffr_index(void)
IOMFB::UPPipe::set_hgod_enable(void)
IOMFB::UPPipe::set_matrix(IOMFB_MatrixLocation,IOMFBColorFixedMatrix const*)
IOMFB::UPPipe::set_od_threshold(int)
IOMFB::UPPipe::set_panel_id(void)
IOMFB::UPPipe::set_timings_enabled(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPPipe::set_vsh_phase_gated(IOMFB_VSH_Phase_Type,ulong long)
IOMFB::UPPipe::setup_aot_watcher(void)
IOMFB::UPPipe::setup_aot_watcher(void)::$_53::__invoke(void *,IOMFB::Prop *)
IOMFB::UPPipe::swap_flush_stream_replay(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::syncRate(void)
IOMFB::UPPipe::test_control(IOMFB_TC_Cmd,uint)
IOMFB::UPPipe::unmap_buf(IOMFB::BufferDescriptor *,ulong,ulong long,bool)
IOMFB::UPPipe::unmap_cmd_buf(IOMFB::BufferDescriptor *,ulong,ulong long)
IOMFB::UPPipe::update_backlight_factor(void)
IOMFB::UPPipe::update_backlight_factor_prop(int)
IOMFB::UPPipe::update_backlight_factor_prop__iboot(int)
IOMFB::UPPipe::update_charge_value(int)
IOMFB::UPPipe::verify_agx_surface(IOSurface const*,int)
IOMFB::UPPipe::verify_agx_surface(IOSurface const*,int)
IOMFB::UPPipe::verify_downscaling(IOMFBSwapIORequest *)
IOMFB::UPPipe::verify_passthrough(IOMFBSwapIORequest *)
IOMFB::UPPipe::verify_swap(IOMFBSwapIORequest *)
IOMFB::UPPipe::vftg_debug(IOMFB::AppleRegisterStream *,uint)
IOMFB::UPPipe::vftg_is_running(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::vftg_set_2dbl_sync_config(IOMFB2DBLVFTGConfig const*)
IOMFB::UPPipe::vi_powered_off(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::vsh_info(IOMFBVSHInfo *)
IOMFB::UPPipe::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe::~UPPipe()
IOMFB::UPPipe_H11P::absolute_time_to_ns(ulong long,ulong long *)
IOMFB::UPPipe_H11P::accumulate_power(double,int,int)
IOMFB::UPPipe_H11P::accumulate_subframe_stats(IOMFB::UPPipe_H11P::stat_snapshot_t *,ulong long)
IOMFB::UPPipe_H11P::actual_brightness_changed(int)
IOMFB::UPPipe_H11P::apt_default_gray_changed(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::apt_default_gray_value_changed(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::apt_fixed_rr_changed(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::apt_normal_mode_changed(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::bics_params(void)
IOMFB::UPPipe_H11P::brightness_changed(int)
IOMFB::UPPipe_H11P::build_prc_LUTs(IOMFB::AppleRegisterStream *,uint const*,uint,uchar)
IOMFB::UPPipe_H11P::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOMFB::UPPipe_H11P::can_program_swap(void)
IOMFB::UPPipe_H11P::cancel_fast_update(void)
IOMFB::UPPipe_H11P::cdc_setup(void)
IOMFB::UPPipe_H11P::cdc_setup(void)::$_2::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe_H11P::check_for_ecos(void)
IOMFB::UPPipe_H11P::compute_prc_pinned_buffers(IOMFB::AppleRegisterStream *,uint *)
IOMFB::UPPipe_H11P::dapf_call_func(void)
IOMFB::UPPipe_H11P::dapf_call_func(void)::$_3::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe_H11P::dapf_setup_range(void)
IOMFB::UPPipe_H11P::dapf_setup_slice(ulong long,ulong long,IOMFB::UPPipe_H11P::DAPF_Slice)
IOMFB::UPPipe_H11P::did_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::did_boot(IOMFB::AppleRegisterStream *)::$_10::__invoke(void *,uint,uint,uint)
IOMFB::UPPipe_H11P::did_boot(IOMFB::AppleRegisterStream *)::$_11::__invoke(void *,IOMFBDBSRLUT *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe_H11P::did_boot(IOMFB::AppleRegisterStream *)::$_12::__invoke(void *,IOMFBDBSRLUT const*,ulong long const*,uint,void const*,uint)
IOMFB::UPPipe_H11P::did_boot(IOMFB::AppleRegisterStream *)::$_13::__invoke(void *,IOMFB::TypedProp<(IOMFB::RuntimePropertyType)1> *,IOMFB::PropNotification,void *)
IOMFB::UPPipe_H11P::did_boot(IOMFB::AppleRegisterStream *)::$_18::__invoke(void *,IOMFBMaxAPLPowerData *,ulong long const*,uint,void *,uint)
IOMFB::UPPipe_H11P::did_power_on(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::display_edr_factor_changed(float)
IOMFB::UPPipe_H11P::early_power_off_warning(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::exportFrequencies(void)
IOMFB::UPPipe_H11P::export_m3_timing_parameters(void)
IOMFB::UPPipe_H11P::external_normal_mode_calc_params(void)
IOMFB::UPPipe_H11P::fast_layer_update(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,IOMFB::UPPipe::fast_update_complete_info *)
IOMFB::UPPipe_H11P::figure_blend_mode(IOMFBSwapIORequest *,IOMFB::LayerCrossbar const*)
IOMFB::UPPipe_H11P::figure_plconfig(IOMFBSwapIORequest const*,IOMFB::LayerCrossbar const*,uint *)
IOMFB::UPPipe_H11P::get_ca_data(IOMFBCAData *)
IOMFB::UPPipe_H11P::get_current_absolute_time(void)
IOMFB::UPPipe_H11P::get_dfb_compression_info(uint *)
IOMFB::UPPipe_H11P::get_dfb_info(uint *,ulong long *,uint *)
IOMFB::UPPipe_H11P::get_frame_size(IOMFB::AppleRegisterStream *,uint *,uint *)
IOMFB::UPPipe_H11P::get_matrix(IOMFB_MatrixLocation,IOMFBColorFixedMatrix *)
IOMFB::UPPipe_H11P::get_max_frame_size(uint *,uint *)
IOMFB::UPPipe_H11P::get_pixcap_data(IOMFBPixCapData *)
IOMFB::UPPipe_H11P::get_subframe_count(IOMFB::UPPipe_H11P::stat_snapshot_t *)
IOMFB::UPPipe_H11P::get_tunables_lpm_target(void)
IOMFB::UPPipe_H11P::get_tunables_target(void)
IOMFB::UPPipe_H11P::handlers_finished(void)
IOMFB::UPPipe_H11P::hgod_busy(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::hgod_set_buffer(IOMFB::AppleRegisterStream *,IOMFBAppleRegStmAPIODMA::PinnedBuffer *)
IOMFB::UPPipe_H11P::ideal_screen_space(void)
IOMFB::UPPipe_H11P::info_mask(void)
IOMFB::UPPipe_H11P::init(UnifiedPipeline *)
IOMFB::UPPipe_H11P::init_m3_timing_parameters(void)
IOMFB::UPPipe_H11P::init_pinned_buffers(void)
IOMFB::UPPipe_H11P::init_power_lut(void)
IOMFB::UPPipe_H11P::init_prc_config(void)
IOMFB::UPPipe_H11P::init_timebase(void)
IOMFB::UPPipe_H11P::init_timing_mode_params(void)
IOMFB::UPPipe_H11P::int_filter(void)
IOMFB::UPPipe_H11P::int_handler(void)
IOMFB::UPPipe_H11P::is_hilo(void)
IOMFB::UPPipe_H11P::ksf_needs_scale(void)
IOMFB::UPPipe_H11P::late_init(void)
IOMFB::UPPipe_H11P::m3_active_callback_gated(void *,uint)
IOMFB::UPPipe_H11P::m3_active_callback_gated(void *,uint)
IOMFB::UPPipe_H11P::m3_event_callback_gated(CtrlMailboxHandler::event_descriptor_t const*)
IOMFB::UPPipe_H11P::m3_event_callback_gated(CtrlMailboxHandler::event_descriptor_t const*)
IOMFB::UPPipe_H11P::m3_info_callback_gated(CtrlMailboxHandler::InfoCallback::InfoType,void *)
IOMFB::UPPipe_H11P::mcc_report_bics(bool,uint)
IOMFB::UPPipe_H11P::mcc_report_replay(bool,uint)
IOMFB::UPPipe_H11P::mcc_setup(void)
IOMFB::UPPipe_H11P::mcc_setup(void)::$_4::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe_H11P::mode_frame_dims(IOMFB::UPPipe::ModeSize *,bool)
IOMFB::UPPipe_H11P::next_state(IOMFB::UPPipe_H11P::RunMode,IOMFB::UPPipe_H11P::RunMode)
IOMFB::UPPipe_H11P::normal_mode_bis_update(IOMFB::AppleRegisterStream *,bool,bool,ushort,uchar)
IOMFB::UPPipe_H11P::ns_to_absolute_time(ulong long,ulong long *)
IOMFB::UPPipe_H11P::pcc_supported(void)
IOMFB::UPPipe_H11P::pdc_active(void)
IOMFB::UPPipe_H11P::performance_feedback(double)
IOMFB::UPPipe_H11P::power_lut_energy(double,int)
IOMFB::UPPipe_H11P::power_up_ctrl_cpu(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPPipe_H11P::prc_set_normal_mode_LUTs(IOMFBPRCLUTs const*,uint,uint,uint,bool)
IOMFB::UPPipe_H11P::prc_set_tab_config(IOMFBPRCTableConfig const*)
IOMFB::UPPipe_H11P::process_stats(IOMFB::AppleRegisterStream *,bool,uint)
IOMFB::UPPipe_H11P::process_stats(IOMFB::AppleRegisterStream *,bool,uint)::$_5::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe_H11P::program_M3_CA_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_CA_idle_time(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_PRC_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_SW_regs(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_bics_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_event_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_framerepeat(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_gen_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_rt_config(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_M3_tsq_layer_config(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,ushort)
IOMFB::UPPipe_H11P::program_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::program_swap(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,uint,uchar *)
IOMFB::UPPipe_H11P::publish_backlight_ratio(int)
IOMFB::UPPipe_H11P::publish_backlight_ratio(int)::$_0::__invoke(void *,void *,void *,void *)
IOMFB::UPPipe_H11P::push_black_frame(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::read_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::ready_for_run_mode_change(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::release_pending_luts(void)
IOMFB::UPPipe_H11P::release_pinned_buffers(void)
IOMFB::UPPipe_H11P::replay_enable(IOMFB::AppleRegisterStream *,IOSurface *,ulong long)
IOMFB::UPPipe_H11P::request_normal_mode(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::rt_bandwidth_setup(void)
IOMFB::UPPipe_H11P::rt_bandwidth_update(IOMFB::AppleRegisterStream *,float,float,bool,bool)
IOMFB::UPPipe_H11P::rt_bandwidth_update_downgrade(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::rt_bandwidth_write_update(IOMFB::AppleRegisterStream *,RealtimeBandwithWritebackBlock,bool)
IOMFB::UPPipe_H11P::setAlignmentProperties(void)
IOMFB::UPPipe_H11P::setFeatureProps(void)
IOMFB::UPPipe_H11P::setFlipProperties(void)
IOMFB::UPPipe_H11P::setPlaneBaseAlignmentProperties(void)
IOMFB::UPPipe_H11P::setScalingProperties(void)
IOMFB::UPPipe_H11P::setSizeProperties(void)
IOMFB::UPPipe_H11P::setSourceLimitationProperties(void)
IOMFB::UPPipe_H11P::setStrideRequirementsProperties(void)
IOMFB::UPPipe_H11P::set_SOATS_info(void)
IOMFB::UPPipe_H11P::set_block_int_enabled(IOMFB::UPBlock *,bool)
IOMFB::UPPipe_H11P::set_ca_data(IOMFBCAData const*)
IOMFB::UPPipe_H11P::set_contrast(float)
IOMFB::UPPipe_H11P::set_corner_temps(int const*)
IOMFB::UPPipe_H11P::set_crc_client_enable(bool)
IOMFB::UPPipe_H11P::set_csc_mode(IOMFB_CSCMode)
IOMFB::UPPipe_H11P::set_dbv(uint)
IOMFB::UPPipe_H11P::set_dbv(uint)::$_1::__invoke(OSObject *,void *,void *,void *,void *)
IOMFB::UPPipe_H11P::set_depth(IOAVVideoColorElement *)
IOMFB::UPPipe_H11P::set_frame_info_constants(void)
IOMFB::UPPipe_H11P::set_frame_info_notification_state(IOMFBNotifyRequest *,bool)
IOMFB::UPPipe_H11P::set_idle_caching_buffer(IOMFB::AppleRegisterStream *,IOSurface const*,ulong long)
IOMFB::UPPipe_H11P::set_idle_caching_method(IdleCachingMethod)
IOMFB::UPPipe_H11P::set_int_enable(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPPipe_H11P::set_meta_allowed(bool)
IOMFB::UPPipe_H11P::set_notify_tag_mask(IOMFB_NotificationType,IOMFBNotifyRequest *,uint)
IOMFB::UPPipe_H11P::set_op_gamma_mode(IOMFB_TFMode)
IOMFB::UPPipe_H11P::set_pixcap_config(IOMFBPixCapConfig const*)
IOMFB::UPPipe_H11P::set_prc_pinned_buffer(uint,uint,uint,IOMFBAppleRegStmAPIODMA::PinnedBuffer *)
IOMFB::UPPipe_H11P::set_run_mode(IOMFB::AppleRegisterStream *,IOMFB::UPPipe_H11P::RunMode)
IOMFB::UPPipe_H11P::set_run_mode(IOMFB::AppleRegisterStream *,IOMFB::UPPipe_H11P::RunMode)::$_16::__invoke(void *,IOMFB::BufferDescriptor *,void **,ulong long *)
IOMFB::UPPipe_H11P::set_run_mode_safe(IOMFB::AppleRegisterStream *,IOMFB::UPPipe_H11P::RunMode)
IOMFB::UPPipe_H11P::set_run_mode_safe(IOMFB::AppleRegisterStream *,IOMFB::UPPipe_H11P::RunMode)
IOMFB::UPPipe_H11P::set_thermal_throttle_cap(uint)
IOMFB::UPPipe_H11P::set_timing(IOAVVideoTimingElement *)
IOMFB::UPPipe_H11P::set_timing_mode(IOMFB::UPPipe::TimingMode)
IOMFB::UPPipe_H11P::set_video_out_mode(IOMFB_Output_Mode)
IOMFB::UPPipe_H11P::setup_tunables_base_target(void)
IOMFB::UPPipe_H11P::setup_video_limits(void)
IOMFB::UPPipe_H11P::shadow_FIFO_empty(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::start_accum(void)
IOMFB::UPPipe_H11P::subframe_duration_ns(void)
IOMFB::UPPipe_H11P::supported_frame_info(uint,uint *,char (*)[64])
IOMFB::UPPipe_H11P::swap_flush_stream(IOMFB::AppleRegisterStream *,IOMFBSwapIORequest *,uint,ulong long,uint,bool)
IOMFB::UPPipe_H11P::swmpr_create(IOMFB::UPBlock_SWMPR **,IOMFB::UPPipe *)
IOMFB::UPPipe_H11P::toggle_apt_logs(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::toggle_pcc_logs(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::tunables_managed(void)
IOMFB::UPPipe_H11P::updateFrequencies(void)
IOMFB::UPPipe_H11P::update_durations_sfm(IOMFB::AppleRegisterStream *,bool)
IOMFB::UPPipe_H11P::update_notify_clients(uint,uint)
IOMFB::UPPipe_H11P::use_m3_for_ce_strength_updates(void)
IOMFB::UPPipe_H11P::use_m3_for_wpc_matrix_updates(void)
IOMFB::UPPipe_H11P::verify_active_regions(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_active_surface_count(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_bandwidth(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_hdr_swap(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_scaling(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_source_dimensions(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_surfaces(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::verify_swap(IOMFBSwapIORequest *)
IOMFB::UPPipe_H11P::will_power_off(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::write_ecos(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::write_tunables(IOMFB::AppleRegisterStream *)
IOMFB::UPPipe_H11P::~UPPipe_H11P()
IOMFB::UPReporterMgr::create(IOMFB::UPIOSvcProxy *,ulong long)
IOMFB::UPReporterMgr::get_cdfd_ch_id(IOMFBColorStatsIndex,ulong long *)
IOMFB::UPReporterMgr::get_cdfd_ch_id(IOMFBColorStatsIndex,ulong long *)
IOMFB::UPReporterMgr::get_scanout_ch_id(IOMFBScanoutStatsIndex,ulong long *)
IOMFB::UPReporterMgr::get_scanout_ch_id(IOMFBScanoutStatsIndex,ulong long *)
IOMFB::UPReporterMgr::init(IOMFB::UPIOSvcProxy *,ulong long)
IOMFB::UPReporterMgr::init_hist(IOMFB::UPReporterMgr::Histo *,IOReportLegend *,ulong long,char const*,char const*)
IOMFB::UPReporterMgr::init_simple(IOMFBSimpleReporter **,IOReportLegend *,char const*,ulong long,ulong long *,char const**)
IOMFB::UPReporterMgr::report_cdfd_stats(IOMFBColorStats const*)
IOMFB::UPReporterMgr::report_scanout_stats(IOMFBScanoutStatsIndex,ulong long)
IOMFB::UPReporterMgr::report_simple_value(IOMFBSimpleReporter *,int,IOMFB::ch_info_t *)
IOMFB::UPReporterMgr::tally(IOMFB::UPReporterMgr::Histo *,ulong long)
IOMFB::UPReporterMgr::~UPReporterMgr()
IOMFB::UPTSQManager::init(void)
IOMFB::UPTSQManager::instantiate(UnifiedPipeline *,IOMFB::UPPipe *)
IOMFB::UPTSQManager::power_down_M3(IOMFB::AppleRegisterStream *,IOMFB::UPTSQManager::ModeChangeWaiter *)
IOMFB::UPTSQManager::power_up_M3(IOMFB::AppleRegisterStream *,IOMFB::UPTSQManager::ModeChangeWaiter *)
IOMFB::UPTSQManager::request_normal_mode(IOMFB::AppleRegisterStream *,IOMFB::UPTSQManager::ModeChangeWaiter *)
IOMFB::UPTSQManager::submit_entry(IOMFB::AppleRegisterStream *,ulong long,uint,uint,uint,uint,uint,uint,uint,bool,bool)
IOMFB::UPTSQManager::~UPTSQManager()
IOMFB::UPTSQ_Hal_v1::UPTSQ_Hal_v1(void)
IOMFB::UPTSQ_Hal_v1::auto_mode_change(bool,IOMFB::AppleRegisterStream *,IOMFB::UPTSQManager::ModeChangeWaiter *)
IOMFB::UPTSQ_Hal_v1::detect_timebase_offset(IOMFB::AppleRegisterStream *)
IOMFB::UPTSQ_Hal_v1::detect_timebase_offset_fast(IOMFB::AppleRegisterStream *)
IOMFB::UPTSQ_Hal_v1::init(void)
IOMFB::UPTSQ_Hal_v1::instantiate(void)
IOMFB::UPTSQ_Hal_v1::start_timebase(IOMFB::AppleRegisterStream *)
IOMFB::UPTSQ_Hal_v1::submit_entry(IOMFB::AppleRegisterStream *,ulong long,uint,uint,uint,uint,uint,uint,uint,bool,bool)
IOMFB::UPTSQ_Hal_v1::~UPTSQ_Hal_v1()
IOMFB::UniformityCompensator::get(IOMFB::UniformityCompensator::State *)
IOMFB::UniformityCompensator::get(IOMFB::UniformityCompensator::Steps *)
IOMFB::UniformityCompensator::get_data(IOMFB_2D_Uniformity_State *,uint,void *,uint)
IOMFB::UniformityCompensator::get_v1(IOMFB_2D_Uniformity_State *,uint)
IOMFB::UniformityCompensator::get_v2(IOMFB_2D_Uniformity_State *,uint,void *,uint)
IOMFB::UniformityCompensator::grid_values(IOMFB::UniformityCompensator::Axis,uint const**,uint *)
IOMFB::UniformityCompensator::read(IOMFB::RegIO const*,IOMFB::UniformityCompensator::RegOffsets const*,bool)
IOMFB::UniformityCompensator::reload_2duc_calib(IOMFB::UPIOSvcProxy *,uint,uint)
IOMFB::UniformityCompensator::set(IOMFB::UniformityCompensator::State const*)
IOMFB::UniformityCompensator::set(IOMFB::UniformityCompensator::Steps const*)
IOMFB::UniformityCompensator::set_data(IOMFB_2D_Uniformity_State const*,uint,uint,uint,void const*,uint)
IOMFB::UniformityCompensator::set_v1(IOMFB_2D_Uniformity_State const*,uint,uint,uint)
IOMFB::UniformityCompensator::set_v2(IOMFB_2D_Uniformity_State const*,uint,uint,uint,void const*,uint)
IOMFB::UniformityCompensator::verify_panel(IOMFB::UPIOSvcProxy *,char *,uint)
IOMFB::UniformityCompensator::write(IOMFB::RegIO const*,IOMFB::UniformityCompensator::RegOffsets const*)
IOMFB::UnsecureBICProcessor::LTH_column_maxima(uint,uint *)
IOMFB::UnsecureBICProcessor::LTH_column_minima(uint,uint *)
IOMFB::UnsecureBICProcessor::LTH_comb(uint,IOMFB::NonSEP_BICProcessor::Comb *)
IOMFB::UnsecureBICProcessor::LTH_comb(uint,IOMFB::NonSEP_BICProcessor::Comb *,IOMFB::BICGainProcessor::Rect const*)
IOMFB::UnsecureBICProcessor::LTH_extrema(uint *,uint *)
IOMFB::UnsecureBICProcessor::LTH_extrema(uint *,uint *,IOMFB::BICGainProcessor::Rect const*)
IOMFB::UnsecureBICProcessor::LTH_median(uint,uint,uint,IOMFB::BICGainProcessor::Rect const*)
IOMFB::UnsecureBICProcessor::do_bim(void)
IOMFB::UnsecureBICProcessor::do_export(uint *)
IOMFB::UnsecureBICProcessor::do_gain(double *,uint *)
IOMFB::UnsecureBICProcessor::do_gain(double *,uint *)::$_2::__invoke(void *,uint)
IOMFB::UnsecureBICProcessor::do_init(void)
IOMFB::UnsecureBICProcessor::saved_history_bytes(IOMFB::BICGainProcessor::Scale,bool,bool)
IOMFB::UnsecureBICProcessor::~UnsecureBICProcessor()
IOMFB::VPHandler::cur_vp(void)
IOMFB::VPHandler::enable(bool)
IOMFB::VPHandler::init(IOMFB::UPIOSvcProxy *)
IOMFB::VPHandler::set_dbv(uint,bool)
IOMFB::VPHandler::setup_panel_table(IOMFB::UPIOSvcProxy *,char const*,IOMFB::TableCompensator::VersionMap const*,uchar *)
IOMFB::VPHandler::setup_panel_table(IOMFB::UPIOSvcProxy *,char const*,IOMFB::TableCompensator::VersionMap const*,uchar *)
IOMFB::VSHProcessor::alloc_loader_mem(uint,uint)
IOMFB::VSHProcessor::calc_expected_voltage(short *)
IOMFB::VSHProcessor::calculate_update_vsh(void)
IOMFB::VSHProcessor::check_vsh_data(uchar *,uint)
IOMFB::VSHProcessor::export_vsh_hist_data(uchar *)
IOMFB::VSHProcessor::find_aafs(void)
IOMFB::VSHProcessor::free_loader_mem(void)
IOMFB::VSHProcessor::get_edt_data(void)
IOMFB::VSHProcessor::get_time_zero_vsh_from_iboot(uchar *)
IOMFB::VSHProcessor::hist_valid(void)
IOMFB::VSHProcessor::init(UnifiedPipeline *,IOMFB::UPIOSvcProxy *,IOMFB::Gate *,IOMFB::VSHProcessor::HistVersion)
IOMFB::VSHProcessor::log_params(void)
IOMFB::VSHProcessor::on_brightness_change(int)
IOMFB::VSHProcessor::on_vsh_hist_data_available(uchar *)
IOMFB::VSHProcessor::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::VSHProcessor::report_post_pipe_apl(float)
IOMFB::VSHProcessor::set_harmony(bool)
IOMFB::VSHProcessor::set_hifa(bool)
IOMFB::VSHProcessor::set_phase_gated(IOMFB_VSH_Phase_Type,ulong long)
IOMFB::VSHProcessor::set_vsh_data(IOMFBPBMemoryBlock const*,uint,uint)
IOMFB::VSHProcessor::set_vsh_hist(uchar)
IOMFB::VSHProcessor::start_calib(void)
IOMFB::VSHProcessor::stop_calib(void)
IOMFB::VSHProcessor::temperature_changed(void)
IOMFB::VSHProcessor::update_aggd_vsh_properties(uchar,uchar,bool,bool)
IOMFB::VSHProcessor::update_time_zero_vsh(void)
IOMFB::VSHProcessor::update_vsh(uchar)
IOMFB::VSHProcessor::~VSHProcessor()
IOMFB::WPMatrixHandler::WPMatrixHandler(void)
IOMFB::WPMatrixHandler::active(void)
IOMFB::WPMatrixHandler::add(IOMFB::WPMatrixHandler::Adaptor *)
IOMFB::WPMatrixHandler::bscale_changed(void)
IOMFB::WPMatrixHandler::compute(void)
IOMFB::WPMatrixHandler::do_twilight_matrix(IOMFB::MatAccum *)
IOMFB::WPMatrixHandler::get(IOMFB::MatAccum::OffsetMatrix<float> *)
IOMFB::WPMatrixHandler::get(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::WPMatrixHandler::get(IOMFB::MatAccum::OffsetMatrix<uint> *,IOFBSA::FxPrecision,IOFBSA::FxPrecision,IOFBSA::FxPrecision)
IOMFB::WPMatrixHandler::icc_dest_profile_changed(void)
IOMFB::WPMatrixHandler::matrix_changed(IOMFB::MatrixHandler::Function)
IOMFB::WPMatrixHandler::notify_listeners(void)
IOMFB::WPMatrixHandler::register_matrix_handler(IOMFB::MatrixHandler *)
IOMFB::WorkLoop::WorkLoop(void)
IOMFB::WorkLoop::addEventSource(IOMFB::EventSource *)
IOMFB::WorkLoop::create(IOWorkLoop *)
IOMFB::WorkLoop::create(char const*,ulong,ulong,uint)
IOMFB::WorkLoop::free(void)
IOMFB::WorkLoop::init(IOWorkLoop *)
IOMFB::WorkLoop::init(char const*,ulong,ulong,uint)
IOMFB::WorkLoop::operator delete(void *,ulong)
IOMFB::WorkLoop::operator new(ulong)
IOMFB::WorkLoop::removeEventSource(IOMFB::EventSource *)
IOMFB::apq_degamma(double)
IOMFB::channelBits(IOMFB::PixelDef const*,uint)
IOMFB::channelBits(IOSurface const*,uint)
IOMFB::find_product_service(IOService *)
IOMFB::getAddressOffsets(IOSurface const*,uint *,uint *,uint *,uint *,uint *)
IOMFB::getBlockTypeString(IOMFB::BlockType)
IOMFB::getColorPrimariesIndex(IOSurface const*)
IOMFB::getContentLightLevelInfo(IOSurface const*)
IOMFB::getEDRFactor(IOSurface const*)
IOMFB::getGamutConversionLocationFromRTP(IOMFB::RuntimeProperty)
IOMFB::getIdleDetectorFromRTP(IOMFB::RuntimeProperty)
IOMFB::getIdleDetectorRTPTypeForIdleDetectorRTP(IOMFB::RuntimeProperty)
IOMFB::getMediaTileSrcFmt(IOMFB::PixelDef const*,int)
IOMFB::getPixelDef(IOSurface const*)
IOMFB::getPixelDef(uint)
IOMFB::getPreMultAlpha(IOSurface const*)
IOMFB::getRuntimePropertyName(IOMFB::RuntimeProperty)
IOMFB::getRuntimePropertyString(IOMFB::RuntimeProperty)
IOMFB::getRuntimePropertyType(IOMFB::RuntimeProperty)
IOMFB::getTransferFunctionIndex(IOSurface const*)
IOMFB::get_CSC(IOMFB_CSCMode)
IOMFB::get_RTP_boot_arg_name(IOMFB::RuntimeProperty)
IOMFB::get_ideal_screen_space(IOService *)
IOMFB::has2020Primaries(IOSurface const*)
IOMFB::hasAlpha(IOMFB::PixelDef const*)
IOMFB::hasAlpha(IOSurface const*)
IOMFB::hasAlphaYcc(IOMFB::PixelDef const*)
IOMFB::hasHdrRange(IOSurface const*)
IOMFB::hasP3Primaries(IOSurface const*)
IOMFB::hasPQTransferFunction(IOSurface const*)
IOMFB::htpc_entropy::get_bits(int)
IOMFB::htpc_entropy::put_bits(int,int)
IOMFB::iomfb_copy_device_mem(uint *,uint const*,uint)
IOMFB::isARGB(IOSurface const*)
IOMFB::isAgxCompressed(IOSurface const*,int)
IOMFB::isCIF(IOMFB::PixelDef const*)
IOMFB::isCIF(IOSurface const*)
IOMFB::isCompressed(IOSurface const*,int)
IOMFB::isFP16(IOSurface const*)
IOMFB::isGammaSpace(IOSurface const*)
IOMFB::isGraphicsTile(IOSurface const*,int)
IOMFB::isIdleDetectorRTP(IOMFB::RuntimeProperty)
IOMFB::isInterchangeLarge(IOSurface const*,int)
IOMFB::isInterchangeTile(IOSurface const*,int)
IOMFB::isLossyCompressed(IOSurface const*,int)
IOMFB::isMediaTile(IOSurface const*,int)
IOMFB::isPassthrough(IOSurface const*)
IOMFB::isPreMult(IOSurface const*)
IOMFB::isRTPGamutConversionLocation(IOMFB::RuntimeProperty)
IOMFB::isUCCompressed(IOSurface const*,int)
IOMFB::isVideoRange(IOMFB::PixelDef const*)
IOMFB::isVideoRange(IOSurface const*)
IOMFB::isYCCExtended(IOSurface const*)
IOMFB::isYCbCrPacked(IOMFB::PixelDef const*)
IOMFB::matrix_invert(Fx64_t (*)[3],Fx64_t const(*)[3])
IOMFB::service_from_path(IOService *,char const*)
IOMFB::swap_down(uint *,uint,uint)
IOMFBAppleRegStmAPIODMA::MetaClass::MetaClass(void)
IOMFBAppleRegStmAPIODMA::MetaClass::alloc(void)
IOMFBAppleRegStmAPIODMA::add_callback_descriptor(void (*)(void *,void *,bool),void *,void *)
IOMFBAppleRegStmAPIODMA::cb_complete_gated(uint,bool)
IOMFBAppleRegStmAPIODMA::class_init(void)
IOMFBAppleRegStmAPIODMA::flush(void (*)(void *,void *,bool),void *,void *)
IOMFBAppleRegStmAPIODMA::flush(void (*)(void *,void *,bool),void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
IOMFBAppleRegStmAPIODMA::flushWait(void)
IOMFBAppleRegStmAPIODMA::flushWait_gated(void)
IOMFBAppleRegStmAPIODMA::flushWait_gated(void)
IOMFBAppleRegStmAPIODMA::flushWait_gated(void)::$_10::__invoke(void *,void *,bool)
IOMFBAppleRegStmAPIODMA::flush_gated(void (*)(void *,void *,bool),void *,void *)
IOMFBAppleRegStmAPIODMA::free(void)
IOMFBAppleRegStmAPIODMA::free(void)
IOMFBAppleRegStmAPIODMA::init(IOMFBAppleRegStmAPIODMA::Descriptor const*)
IOMFBAppleRegStmAPIODMA::mem_move(IOMFBPIODMAManager::MemMap *,uint,IOMFBPIODMAManager::MemMap *,uint,uint,void (*)(void *,void *,bool),void *,void *)
IOMFBAppleRegStmAPIODMA::mem_move_gated(IOMFB::t_MemMoveRequest *)
IOMFBAppleRegStmAPIODMA::mem_move_gated(IOMFB::t_MemMoveRequest *)
IOMFBAppleRegStmAPIODMA::pinned_buf_complete(void)
IOMFBAppleRegStmAPIODMA::pinned_buf_start(IOMFBAppleRegStmAPIODMA::PinnedBuffer *,uint,uint)
IOMFBAppleRegStmAPIODMA::pinned_buf_start(uint,uint)
IOMFBAppleRegStmAPIODMA::reallocate_pinned_buffer(uint)
IOMFBAppleRegStmAPIODMA::release_instances(void)
IOMFBAppleRegStmAPIODMA::remove_pinned_buffer(IOMFBAppleRegStmAPIODMA::PinnedBuffer *)
IOMFBAppleRegStmAPIODMA::restore_state(void)
IOMFBAppleRegStmAPIODMA::withDesc(IOMFBAppleRegStmAPIODMA::Descriptor const*)
IOMFBAppleRegStmAPIODMA::~IOMFBAppleRegStmAPIODMA()
IOMFBColorManagerDriver::IOMFBColorManagerDriver(OSMetaClass const*)
IOMFBColorManagerDriver::with(IOService *,IOMFBSoCProfile *,IOService *,ADBE0Driver *)
IOMFBEvtMonTrampoline::MetaClass::MetaClass(void)
IOMFBEvtMonTrampoline::MetaClass::alloc(void)
IOMFBEvtMonTrampoline::eventSource(void)
IOMFBEvtMonTrampoline::eventSource(void)::{lambda(OSObject *,IOMFB::TimerEventSource *)#1}::__invoke(OSObject *,IOMFB::TimerEventSource *)
IOMFBEvtMonTrampoline::eventSource(void)::{lambda(OSObject *,IOMFB::TimerEventSource *)#1}::operator void (*)(OSObject *,IOMFB::TimerEventSource *)(void)
IOMFBEvtMonTrampoline::eventSource(void)::{lambda(OSObject *,IOMFB::TimerEventSource *)#1}::operator()(OSObject *,IOMFB::TimerEventSource *)
IOMFBEvtMonTrampoline::init(IOMFB::UPEventMonitor *)
IOMFBEvtMonTrampoline::~IOMFBEvtMonTrampoline()
IOMFBPIODMAConfig::MetaClass::MetaClass(void)
IOMFBPIODMAConfig::ensure_pack_room_gated(uint)
IOMFBPIODMAConfig::ensure_pack_room_gated(uint)
IOMFBPIODMAConfig::ensure_regval_room_gated(uint,uint *)
IOMFBPIODMAConfig::ensure_regval_room_gated(uint,uint *)
IOMFBPIODMAConfig::getStats(IOMFBPIODMAConfig::piodma_stats_t *)
IOMFBPIODMAConfig::getStatsInc(IOMFBPIODMAConfig::piodma_stats_t *)
IOMFBPIODMAConfig::restore_cfg_state(void)
IOMFBPIODMAConfig::use_generic_packets(void)
IOMFBPIODMAConfig::writeBlock(IOMFBPIODMAManager::MemMap *,uint,uint const*,uint,bool,bool)
IOMFBPIODMAConfig::writeBlock_gated(IOMFB::t_WriteRequest *)
IOMFBPIODMAConfig::writeBlock_gated(IOMFB::t_WriteRequest *)
IOMFBPIODMAManager::MemMap::MemMap(void)
IOMFBPIODMAManager::MetaClass::MetaClass(void)
IOMFBPIODMAManager::base_addr_val(uint,bool)
IOMFBPIODMAManager::base_addr_val(uint,bool)
IOMFBPIODMAManager::createWithDesc(IOMFBPIODMAManager::Descriptor const*)
IOMFBPIODMAManager::deregister_piodma(IOMFBPIODMAConfig *)
IOMFBPIODMAManager::end_async_writes(void)::$_6::__invoke(OSObject *,void *,void *,void *,void *)
IOMFBPIODMAManager::figure_hw_version(void)
IOMFBPIODMAManager::find_base_address(IOMFBPIODMAConfig *,uint,uint,bool)
IOMFBPIODMAManager::find_base_address(IOMFBPIODMAConfig *,uint,uint,bool)::$_4::__invoke(OSObject *,void *,void *,void *,void *)
IOMFBPIODMAManager::find_base_address_gated(IOMFBPIODMAConfig *,uint,bool)
IOMFBPIODMAManager::find_base_address_gated(IOMFBPIODMAConfig *,uint,bool)
IOMFBPIODMAManager::finish_cmd_gated(IOMFBPIODMAConfig *)
IOMFBPIODMAManager::free(void)
IOMFBPIODMAManager::init(IOMFBPIODMAManager::Descriptor const*)
IOMFBPIODMAManager::interruptFilter(void)
IOMFBPIODMAManager::interruptHandler(void)
IOMFBPIODMAManager::interruptHandler(void)
IOMFBPIODMAManager::map_packet_buf(IOMFB::BufferDescriptor *,IOMFBPIODMAManager::MemMap *,void **,ulong long *)
IOMFBPIODMAManager::register_piodma(IOMFBPIODMAConfig *)
IOMFBPIODMAManager::reset_gated(void)
IOMFBPIODMAManager::restore_state(void)
IOMFBPIODMAManager::restore_state_gated(void)
IOMFBPIODMAManager::set_async_pending_gated(bool)
IOMFBPIODMAManager::setup_interrupt(IOMFBPIODMAManager::Descriptor const*)
IOMFBPIODMAManager::sleep(void *)
IOMFBPIODMAManager::sleep_gated(void *)
IOMFBPIODMAManager::sleep_on_done_counter(void)
IOMFBPIODMAManager::start_async_writes(void)::$_5::__invoke(OSObject *,void *,void *,void *,void *)
IOMFBPIODMAManager::transfer_completed(IOMFBPIODMAConfig *,uint)
IOMFBPIODMAManager::transfer_completed(IOMFBPIODMAConfig *,uint)
IOMFBPIODMAManager::wait_async_pending_gated(void)
IOMFBPIODMAManager::will_power_off(void)
IOMFBPIODMAPinnedAsync::MetaClass::MetaClass(void)
IOMFBPIODMAPinnedAsync::complete(void)
IOMFBPIODMAPinnedAsync::createWithDesc(IOMFBPIODMAPinnedAsync::Descriptor const*)
IOMFBPIODMAPinnedAsync::free(void)
IOMFBPIODMAPinnedAsync::init(IOMFBPIODMAPinnedAsync::Descriptor const*)
IOMFBPIODMAPinnedAsync::reallocate_pinned_buffer(uint)
IOMFBPIODMAPinnedAsync::round_size(uint)
IOMFBPIODMAPinnedAsync::start(void)
IOMFBPIODMAPinnedAsync::use_generic_packets(void)
IOMFBPIODMAPinnedAsync::writeBlockUngated(uint,uint const*,uint,bool,bool)
IOMFBSimpleReporter::initWith(IOMFB::UPIOSvcProxy *,ushort,ulong long,char const*)
IOMFBSimpleReporter::set_multiple_channel_values(IOMFB::ch_info_t *,int)
IOMFBSimpleReporter::with(IOMFB::UPIOSvcProxy *,ushort,ulong long,char const*)
IOMFBSwapIORequest::MetaClass::MetaClass(void)
IOMFBSwapIORequest::MetaClass::alloc(void)
IOMFBSwapIORequest::create(IOUserClient *)
IOMFBSwapIORequest::free(void)
IOMFBSwapIORequest::init(IOUserClient *)
IOMFBSwapIORequest::~IOMFBSwapIORequest()
IOMFB__DBSRHandler__set
IOMFB__PBTBlockMgr__find
IOMachPort::MetaClass::MetaClass(void)
IOMachPort::bucketForObject(OSObject *,uint)
IOMachPort::noMoreSendersForObject(OSObject *,uint,uint *)
IOMachPort::portForObjectInBucket(IOMachPortHashList *,OSObject *,uint)
IOMachPort::setHoldDestroy(OSObject *,uint)
IOMachPortInitialize(void)
IOMachPort__free
IOMallocArraySize(ulong,ulong,ulong)
IOMapper::MetaClass::MetaClass(void)
IOMapper::setMapperRequired(bool)
IOMapper::waitForSystemMapper(void)
IOMapper__start_IOService
IOMbufMemoryCursor::MetaClass::alloc(void)
IOMbufMemoryCursor::initWithSpecification(void (*)(IOMemoryCursor::PhysicalSegment,void *,uint),uint,uint)
IOMbufMemoryCursor::~IOMbufMemoryCursor()
IOMedia::IOMedia(void)
IOMedia::MetaClass::alloc(void)
IOMedia::attachToChild(IORegistryEntry *,IORegistryPlane const*)
IOMedia::close(IOService *,uint)
IOMedia::copyPhysicalExtent(IOService *,ulong long *,ulong long *)
IOMedia::detachFromChild(IORegistryEntry *,IORegistryPlane const*)
IOMedia::free(void)
IOMedia::getContent(void)
IOMedia::getProvisionStatus(IOService *,ulong long,ulong long,uint *,IOStorageProvisionExtent *,ulong long)
IOMedia::handleClose(IOService *,uint)
IOMedia::handleIsOpen(IOService const*)
IOMedia::handleOpen(IOService *,uint,void *)
IOMedia::init(ulong long,ulong long,ulong long,uint,bool,bool,char const*,OSDictionary *)
IOMedia::isFormatted(void)
IOMedia::lockPhysicalExtents(IOService *)
IOMedia::matchPropertyTable(OSDictionary *,int *)
IOMedia::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOMedia::scheduleProbe(IOService *)
IOMedia::setPriority(IOService *,IOStorageExtent *,uint,uchar)
IOMedia::synchronize(IOService *,ulong long,ulong long,uint)
IOMedia::unlockPhysicalExtents(IOService *)
IOMedia::unmap(IOService *,IOStorageExtent *,uint,uint)
IOMedia::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,IOStorageCompletion *)
IOMedia::~IOMedia()
IOMediaBSDClient::MetaClass::alloc(void)
IOMediaBSDClient::createNodes(IOMedia *)
IOMediaBSDClient::getWholeMedia(IOMedia *,uint *,char *)
IOMediaBSDClient::init(OSDictionary *)
IOMediaBSDClient::start(IOService *)
IOMediaBSDClient::terminate(uint)
IOMediaBSDClientGlobals::IOMediaBSDClientGlobals(void)
IOMediaBSDClientGlobals::~IOMediaBSDClientGlobals()
IOMemoryCursor::withSpecification(void (*)(IOMemoryCursor::PhysicalSegment,void *,uint),ulong long,ulong long,ulong long)
IOMemoryDescriptor::CreateMapping(ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryMap **,int (*)(OSMetaClassBase *,IORPC))
IOMemoryDescriptor::CreateMapping_Impl(ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryMap **)
IOMemoryDescriptor::CreateMapping_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long,ulong long,ulong long,ulong long,IOMemoryMap **))
IOMemoryDescriptor::CreateSubMemoryDescriptor(ulong long,ulong long,ulong long,IOMemoryDescriptor*,IOMemoryDescriptor**)
IOMemoryDescriptor::CreateSubMemoryDescriptor_Impl(ulong long,ulong long,ulong long,IOMemoryDescriptor*,IOMemoryDescriptor**)
IOMemoryDescriptor::CreateSubMemoryDescriptor_Invoke(IORPC,int (*)(ulong long,ulong long,ulong long,IOMemoryDescriptor*,IOMemoryDescriptor**))
IOMemoryDescriptor::CreateWithMemoryDescriptors(ulong long,uint,IOMemoryDescriptor**,IOMemoryDescriptor**)
IOMemoryDescriptor::CreateWithMemoryDescriptors_Impl(ulong long,uint,IOMemoryDescriptor**,IOMemoryDescriptor**)
IOMemoryDescriptor::CreateWithMemoryDescriptors_Invoke(IORPC,int (*)(ulong long,uint,IOMemoryDescriptor**,IOMemoryDescriptor**))
IOMemoryDescriptor::GetLength(ulong long *)
IOMemoryDescriptor::MetaClass::Dispatch(IORPC)
IOMemoryDescriptor::_CopyState(_IOMDPrivateState *,int (*)(OSMetaClassBase *,IORPC))
IOMemoryDescriptor::_CopyState_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,_IOMDPrivateState *))
IOMemoryDescriptor::_Dispatch(IOMemoryDescriptor*,IORPC)
IOMemoryDescriptor::addMapping(IOMemoryMap *)
IOMemoryDescriptor::copyContext(void)
IOMemoryDescriptor::getPhysicalAddress(void)
IOMemoryDescriptor::getVMTag(_vm_map *)
IOMemoryDescriptor::initialize(void)
IOMemoryDescriptor::map(uint)
IOMemoryDescriptor::removeMapping(IOMemoryMap *)
IOMemoryDescriptor::setMapping(task *,ulong long,uint)
IOMemoryDescriptor::withAddress(void *,ulong long,uint)
IOMemoryDescriptor::withAddressRange(ulong long,ulong long,uint,task *)
IOMemoryDescriptor::withAddressRanges(IOVirtualRange *,uint,uint,task *)
IOMemoryDescriptor::withOptions(void *,uint,uint,task *,uint,IOMapper *)
IOMemoryDescriptor::withPersistentMemoryDescriptor(IOMemoryDescriptor*)
IOMemoryDescriptor::withPhysicalAddress(ulong long,ulong long,uint)
IOMemoryDescriptor__performOperation_unsigned_int__unsigned_long_long__unsigned_long_long
IOMemoryDescriptor__readBytes_unsigned_long_long__void___unsigned_long_long
IOMemoryMap::Dispatch(IORPC)
IOMemoryMap::IOMemoryMap(OSMetaClass const*)
IOMemoryMap::IOMemoryMap(void)
IOMemoryMap::MetaClass::MetaClass(void)
IOMemoryMap::_CopyState(_IOMemoryMapPrivateState *,int (*)(OSMetaClassBase *,IORPC))
IOMemoryMap::_CopyState_Impl(_IOMemoryMapPrivateState *)
IOMemoryMap::_CopyState_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,_IOMemoryMapPrivateState *))
IOMemoryMap::_Dispatch(IOMemoryMap*,IORPC)
IOMemoryMap::getAddressTask(void)
IOMemoryMap::getPhysicalAddress(void)
IOMemoryMap::setMemoryDescriptor(IOMemoryDescriptor *,ulong long)
IOMemoryMap::taggedRelease(void const*)
IOMemoryMap::wireRange(uint,ulong long,ulong long)
IOMemoryMap::~IOMemoryMap()
IOMemoryMap__free
IOMemoryMap__getPhysicalSegment_unsigned_long_long__unsigned_long_long___unsigned_int
IOMemoryMap__taskDied
IOMemoryMap__unmap
IOMikeyBusAudioDevice::_loadConfigData(void)
IOMikeyBusAudioDevice::copyDeviceManufacturer(void)
IOMikeyBusAudioDevice::copyDeviceName(void)
IOMikeyBusAudioDevice::copyDeviceUID(void)
IOMikeyBusAudioDevice::free(void)
IOMikeyBusAudioDevice::getControlStart(void)
IOMikeyBusAudioDevice::init(IOMikeyBusDevice *)
IOMikeyBusAudioDevice::notifyAudioDisconnect(void)
IOMikeyBusAudioDevice::reloadConfig(void)
IOMikeyBusAudioDevice::stop(IOService *)
IOMikeyBusBulkPipe::ReceiveData(void *,ulong long *,ulong long)
IOMikeyBusBulkPipe::ResetPipe(void)
IOMikeyBusBulkPipe::SendData(void const*,ulong long,void *,ulong long)
IOMikeyBusBulkPipe::SendDataWait(void const*,ulong long,ulong long)
IOMikeyBusBulkPipe::SetAllocation(ushort,ushort)
IOMikeyBusBulkPipe::WaitSendDone(ulong long)
IOMikeyBusBulkPipe::_checkForWorkGated(void)
IOMikeyBusBulkPipe::_deviceDetachedGated(void)
IOMikeyBusBulkPipe::_disableGated(void)
IOMikeyBusBulkPipe::_receivePacketGated(IOMikeyBusBulkPayloadPacket const*)
IOMikeyBusBulkPipe::checkForWork(void)
IOMikeyBusBulkPipe::disable(void)
IOMikeyBusBulkPipe::enable(void)
IOMikeyBusBulkPipe::free(void)
IOMikeyBusBulkPipe::init(OSObject *,IOMikeyBusController *,uchar,uchar)
IOMikeyBusBulkPipe::setCompletionAction(void (*)(OSObject *,IOMikeyBusBulkPipe*,void *,int))
IOMikeyBusBulkPipe::setNotifyDataAction(void (*)(OSObject *,IOMikeyBusBulkPipe*))
IOMikeyBusBulkPipe::setReceiveAction(void (*)(OSObject *,IOMikeyBusBulkPipe*,void const*,ulong long))
IOMikeyBusBulkPipeUserClient::_completionAction(IOMikeyBusBulkPipe *,void *,int)
IOMikeyBusBulkPipeUserClient::extEnable(IOExternalMethodArguments *)
IOMikeyBusBulkPipeUserClient::extSetTrafficAllocation(IOExternalMethodArguments *)
IOMikeyBusBulkPipeUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOMikeyBusBulkPipeUserClient::free(void)
IOMikeyBusBulkPipeUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOMikeyBusBulkPipeUserClient::start(IOService *,IOMikeyBusBulkPipe *)
IOMikeyBusBulkPipeUserClient::stop(IOService *)
IOMikeyBusController::AllocateTrafficChannels(IOMikeyBusTrafficChannel *)
IOMikeyBusController::AudioDeviceCopySupportedBitsPerSampleList(IOAudio2Device *,uint *)
IOMikeyBusController::AudioDeviceCopySupportedChannelCountList(IOAudio2Device *,uint,uint *)
IOMikeyBusController::AudioDeviceCopySupportedDataFormatList(IOAudio2Device *,uint *)
IOMikeyBusController::AudioDeviceCopySupportedSampleRateList(IOAudio2Device *,IOMikeyBusSampleRate *)
IOMikeyBusController::AudioDeviceGetBlockControlBuffer(IOAudio2Device *,uint,uint *,IOMemoryDescriptor **)
IOMikeyBusController::AudioDeviceGetDataExchangeBlock(IOAudio2Device *,uint,uint *,IOMemoryDescriptor **)
IOMikeyBusController::AudioDeviceGetTerminalType(IOAudio2Device *,uint)
IOMikeyBusController::AudioDeviceMoveBlockControlData(IOAudio2Device *,uint,uint,uint)
IOMikeyBusController::AudioDevicePerformConfigChange(IOAudio2Device *,IOAudio2Notification *)
IOMikeyBusController::AudioDeviceSetControlValue(IOAudio2Device *,uint,uint,uint *)
IOMikeyBusController::AudioDeviceSetDeviceDataFormat(IOAudio2Device *,uint,uint)
IOMikeyBusController::AudioDeviceSetDeviceFormat(IOAudio2Device *,uint,uint,uint,uchar *)
IOMikeyBusController::AudioDeviceSetDeviceSampleRate(IOAudio2Device *,IOMikeyBusSampleRate,uint *,uint *)
IOMikeyBusController::AudioDeviceSetMultiControlValue(IOAudio2Device *,uint *,ulong long,uint *,ulong long *)
IOMikeyBusController::AudioDeviceStart(IOAudio2Device *,uint)
IOMikeyBusController::AudioDeviceStop(IOAudio2Device *,uint)
IOMikeyBusController::CancelBulkPacket(IOMikeyBusBulkPipe *,int)
IOMikeyBusController::CreateBulkPipe(uchar,uchar,OSObject *)
IOMikeyBusController::CreateTrafficChannel(uchar,uint)
IOMikeyBusController::CreateTrafficChannel(uchar,uint,uchar)
IOMikeyBusController::DetachDevice(IOMikeyBusPort *,uchar)
IOMikeyBusController::GetEnabled(void)
IOMikeyBusController::GetSupportedDiffAmp(void)
IOMikeyBusController::LineOutStart(uint,IOMikeyBusSampleRate)
IOMikeyBusController::LineOutStop(void)
IOMikeyBusController::LineOutSupportedSampleRate(IOMikeyBusSampleRate)
IOMikeyBusController::PortStatusChanged(IOMikeyBusPort *,bool)
IOMikeyBusController::ReceiveBroadcastPacketComplete(void)
IOMikeyBusController::ReceiveBulkDataError(void)
IOMikeyBusController::ReceiveDownlinkDataBufferAvailable(void)
IOMikeyBusController::ReceiveLinkLock(void)
IOMikeyBusController::ReceiveLinkUnlock(void)
IOMikeyBusController::ReceiveTrafficDataError(void)
IOMikeyBusController::ReceiveUplinkBulkData(IOMikeyBusBulkPayloadPacket const*)
IOMikeyBusController::ReceiveUplinkPacketError(uint)
IOMikeyBusController::RegisterAudioDevice(IOMikeyBusAudioDevice *)
IOMikeyBusController::RegisterSystemLineOut(IOMikeyBusDevice *,IOMikeyBusTrafficChannel *,IOMikeyBusTrafficChannel *,OSArray *)
IOMikeyBusController::ReleaseBus(void)
IOMikeyBusController::RemoveBulkPipe(IOMikeyBusBulkPipe *)
IOMikeyBusController::RemoveTrafficChannel(IOMikeyBusTrafficChannel *)
IOMikeyBusController::RetainBus(void)
IOMikeyBusController::SendBulkPacket(IOMikeyBusBulkPipe *,void const*,ulong long,void *,ulong long,ulong long *)
IOMikeyBusController::SetFixedSlotAssignment(bool)
IOMikeyBusController::SpecifyChannelAssignment(IOMikeyBusBroadcastPacket const*)
IOMikeyBusController::UnregisterAudioDevice(IOMikeyBusAudioDevice *)
IOMikeyBusController::UnregisterSystemLineOut(IOMikeyBusDevice *)
IOMikeyBusController::_audioDeviceCopySupportedBitsPerSampleListGated(IOAudio2Device *,OSArray **,uint *)
IOMikeyBusController::_audioDeviceCopySupportedChannelCountListGated(IOAudio2Device *,uint,OSArray **,uint *)
IOMikeyBusController::_audioDeviceCopySupportedDataFormatListGated(IOAudio2Device *,OSArray **,uint *)
IOMikeyBusController::_audioDeviceCopySupportedSampleRateListGated(IOAudio2Device *,OSArray **,IOMikeyBusSampleRate *)
IOMikeyBusController::_audioDeviceGetBlockControlBuffer(IOAudio2Device *,uint,uint *,IOMemoryDescriptor **)
IOMikeyBusController::_audioDeviceGetDataExchangeBlock(IOAudio2Device *,uint,uint *,IOMemoryDescriptor **)
IOMikeyBusController::_audioDeviceGetTerminalTypeGated(IOAudio2Device *,uint,uint *)
IOMikeyBusController::_audioDeviceMoveBlockControlData(IOAudio2Device *,uint,uint,uint)
IOMikeyBusController::_audioDevicePerformConfigChange(IOAudio2Device *,IOAudio2Notification *)
IOMikeyBusController::_audioDeviceSetControlValueGated(IOAudio2Device *,uint,uint,uint *)
IOMikeyBusController::_audioDeviceSetDeviceDataFormatGated(IOAudio2Device *,uint,uint)
IOMikeyBusController::_audioDeviceSetMultiControlValueGated(IOAudio2Device *,void **)
IOMikeyBusController::_cancelBulkPacketGated(void *,int)
IOMikeyBusController::_cancelBulkPacketPredicatedGated(bool (IOMikeyBusController::*)(void *,IOMikeyBusController::PendingBulkSendPacket const*),void *,int)
IOMikeyBusController::_cancelBulkPacketTimedOut(void *,IOMikeyBusController::PendingBulkSendPacket const*)
IOMikeyBusController::_createBulkPipeGated(uchar,uchar,OSObject *,IOMikeyBusBulkPipe **)
IOMikeyBusController::_createTrafficChannelGated(uchar,uint,uchar const*,IOMikeyBusTrafficChannel **)
IOMikeyBusController::_findLastBulkPacketGated(IOMikeyBusBulkPipe *,ulong long *)
IOMikeyBusController::_freezeBroadcastPacketGated(bool)
IOMikeyBusController::_getAudioDevice(IOAudio2Device *)
IOMikeyBusController::_getControllerEnabledGated(bool *)
IOMikeyBusController::_getDeviceAttachedGated(uchar)
IOMikeyBusController::_initForPM(IOService *)
IOMikeyBusController::_lineoutStartGated(uint,IOMikeyBusSampleRate const*)
IOMikeyBusController::_lineoutStopGated(void)
IOMikeyBusController::_lineoutSupportedSampleRateGated(IOMikeyBusSampleRate const*)
IOMikeyBusController::_linkValidationTimeoutHandler(void)
IOMikeyBusController::_portStatusChangedGated(IOMikeyBusPort *,bool,bool)
IOMikeyBusController::_receiveBroadcastPacketCompleteGated(void)
IOMikeyBusController::_receiveLinkStatusGated(bool)
IOMikeyBusController::_receiveTrafficDataErrorGated(void)
IOMikeyBusController::_registerAudioDeviceGated(IOMikeyBusAudioDevice *)
IOMikeyBusController::_registerLineoutDeviceGated(IOMikeyBusDevice *,IOMikeyBusTrafficChannel *,IOMikeyBusTrafficChannel *,OSArray *)
IOMikeyBusController::_releaseBusGated(void)
IOMikeyBusController::_removeBulkPipeGated(IOMikeyBusBulkPipe *)
IOMikeyBusController::_removeTrafficChannelGated(IOMikeyBusTrafficChannel *)
IOMikeyBusController::_resetChannelState(void)
IOMikeyBusController::_retainBusGated(void)
IOMikeyBusController::_sendBulkPacketGated(IOMikeyBusBulkPipe *,IOMikeyBusController::SendBulkPacketArgs const*,ulong long *)
IOMikeyBusController::_sendBulkPacketInternal(IOMikeyBusBulkPipe *,void const*,ulong long,void *,ulong long,bool,ulong long *)
IOMikeyBusController::_serializeGetControllerEnabled(void *,OSSerialize *)
IOMikeyBusController::_serializeGetIsLowPowerState(void *,OSSerialize *)
IOMikeyBusController::_serializeGetNeedPowerUpOnRetain(void *,OSSerialize *)
IOMikeyBusController::_serializeGetRetainBusCount(void *,OSSerialize *)
IOMikeyBusController::_serializeGetSuspend(void *,OSSerialize *)
IOMikeyBusController::_setFixedSlotAssignmentGated(bool)
IOMikeyBusController::_setPowerStateGated(ulong,bool)
IOMikeyBusController::_unregisterAudioDeviceGated(IOMikeyBusAudioDevice *)
IOMikeyBusController::_unregisterLineoutDeviceGated(IOMikeyBusDevice *)
IOMikeyBusController::free(void)
IOMikeyBusController::setPowerState(ulong,IOService *)
IOMikeyBusController::start(IOService *)
IOMikeyBusController::stop(IOService *)
IOMikeyBusController::stringFromReturn(int)
IOMikeyBusDevice::CreateBulkPipe(OSObject *)
IOMikeyBusDevice::CreateBulkPipe(uchar,OSObject *)
IOMikeyBusDevice::CreateStringFromUTF16LE(void const*,ulong)
IOMikeyBusDevice::CreateTrafficChannel(uint)
IOMikeyBusDevice::CreateTrafficChannel(uint,uchar)
IOMikeyBusDevice::GetConfigurationClass(uchar,uchar *)
IOMikeyBusDevice::GetConfigurationSubclass(uchar,uchar *)
IOMikeyBusDevice::GetInterfaceChipSerialNumber(void)
IOMikeyBusDevice::GetInterfaceChipVendorID(void)
IOMikeyBusDevice::GetNumConfigurations(void)
IOMikeyBusDevice::GetVendorName(void)
IOMikeyBusDevice::IsWakeSupported(void)
IOMikeyBusDevice::RegisterSystemLineOut(IOMikeyBusTrafficChannel *,IOMikeyBusTrafficChannel *,OSArray *)
IOMikeyBusDevice::ReleaseBus(void)
IOMikeyBusDevice::RetainBus(void)
IOMikeyBusDevice::SetConfiguration(uchar)
IOMikeyBusDevice::SetDifferentialAmplitude(diffAmpValue)
IOMikeyBusDevice::SetDifferentialAmplitude(void)
IOMikeyBusDevice::SetFixedSlotAssignment(bool)
IOMikeyBusDevice::SpecifyChannelAssignment(IOMikeyBusBroadcastPacket const*)
IOMikeyBusDevice::UnregisterSystemLineOut(void)
IOMikeyBusDevice::UpdateErrorStatus(void)
IOMikeyBusDevice::_copyStringFromDesignator(void const*,ulong,uchar *)
IOMikeyBusDevice::_deviceErrorStatus(IOTimerEventSource *)
IOMikeyBusDevice::_deviceInfoCallback(IOMikeyBusBulkPipe *,void const*,ulong long)
IOMikeyBusDevice::_getConfigurationInfoGated(uchar,uchar *,uchar *)
IOMikeyBusDevice::_setPendingInfoString(uchar,OSSymbol const*)
IOMikeyBusDevice::_updateErrorStatusGated(void)
IOMikeyBusDevice::free(void)
IOMikeyBusDevice::init(uchar)
IOMikeyBusDevice::message(uint,IOService *,void *)
IOMikeyBusDevice::start(IOService *)
IOMikeyBusDevice::stop(IOService *)
IOMikeyBusDevice::stringFromReturn(int)
IOMikeyBusDevice::terminate(uint)
IOMikeyBusDeviceUserClient::extAllocateTrafficChannel(IOExternalMethodArguments *)
IOMikeyBusDeviceUserClient::extDeallocateTrafficChannel(IOExternalMethodArguments *)
IOMikeyBusDeviceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOMikeyBusDeviceUserClient::free(void)
IOMikeyBusDeviceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOMikeyBusDeviceUserClient::start(IOService *)
IOMikeyBusDockPort::ConnectStatusChanged(bool)
IOMikeyBusDockPort::CopyDeviceInfo(OSSymbol const*)
IOMikeyBusDockPort::DisablePortPower(void)
IOMikeyBusDockPort::GetConnectStatus(void)
IOMikeyBusDockPort::NotifyDeviceConnected(bool)
IOMikeyBusDockPort::SetPortSuspend(bool)
IOMikeyBusDockPort::SetPortSuspendAsync(bool)
IOMikeyBusDockPort::SetWakePowerReset(ulong long)
IOMikeyBusDockPort::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOMikeyBusDockPort::connectChangeAction(IOInterruptEventSource *,int)
IOMikeyBusDockPort::free(void)
IOMikeyBusDockPort::getAllowedFeatures(void)
IOMikeyBusDockPort::init(IOAccessoryManager *)
IOMikeyBusDockPort::receiveNotification(void *,uint,IOService *,void *,ulong)
IOMikeyBusDockPort::start(IOService *)
IOMikeyBusEAInterface::copyDeviceFirmwareRevision(void)
IOMikeyBusEAInterface::copyDeviceHardwareRevision(void)
IOMikeyBusEAInterface::copyDeviceModelNumber(void)
IOMikeyBusEAInterface::copyDeviceName(void)
IOMikeyBusEAInterface::copyDeviceSerialNumber(void)
IOMikeyBusEAInterface::copyDeviceVendorName(void)
IOMikeyBusEAInterface::copyProtocolString(void)
IOMikeyBusEAInterface::sendData(void const*,ulong long)
IOMikeyBusEAInterface::sessionClose(void)
IOMikeyBusEAInterface::sessionOpen(void)
IOMikeyBusEAInterface::start(IOService *)
IOMikeyBusEAInterface::stop(IOService *)
IOMikeyBusFunctionGroup::CopyPropertyInfo(uchar)
IOMikeyBusFunctionGroup::CreateBulkPipe(OSObject *)
IOMikeyBusFunctionGroup::SetPropertyInfo(uchar,OSData const*,ulong long)
IOMikeyBusFunctionGroup::SetPropertyInfo(uchar,void const*,ulong,ulong long)
IOMikeyBusFunctionGroup::init(uchar,uchar)
IOMikeyBusFunctionGroup::matchPropertyTable(OSDictionary *)
IOMikeyBusFunctionGroup::start(IOService *)
IOMikeyBusFunctionGroupUserClient::extSetPropertyInfo(IOExternalMethodArguments *)
IOMikeyBusFunctionGroupUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOMikeyBusFunctionGroupUserClient::start(IOService *)
IOMikeyBusHIDDevice::_getReportGated(IOMemoryDescriptor *,IOHIDReportType,uint)
IOMikeyBusHIDDevice::free(void)
IOMikeyBusHIDDevice::getReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOMikeyBusHIDDevice::handleStart(IOService *)
IOMikeyBusHIDDevice::handleStop(IOService *)
IOMikeyBusHIDDevice::newCountryCodeNumber(void)
IOMikeyBusHIDDevice::newLocationIDNumber(void)
IOMikeyBusHIDDevice::newManufacturerString(void)
IOMikeyBusHIDDevice::newProductIDNumber(void)
IOMikeyBusHIDDevice::newProductString(void)
IOMikeyBusHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
IOMikeyBusHIDDevice::newSerialNumberString(void)
IOMikeyBusHIDDevice::newVendorIDNumber(void)
IOMikeyBusHIDDevice::willTerminate(IOService *,uint)
IOMikeyBusPort::ConnectStatusChanged(bool)
IOMikeyBusPort::Reset(void)
IOMikeyBusPort::_clearErrors(void)
IOMikeyBusPort::_deviceWillTerminate(IOMikeyBusDevice *)
IOMikeyBusPort::_handleBulkError(void)
IOMikeyBusPort::_handleDeviceError(IOMikeyBusDesignatorPacketRetErrorStatus const*)
IOMikeyBusPort::_handleLinkStatus(bool)
IOMikeyBusPort::_handlePacketError(uint)
IOMikeyBusPort::_handleTrafficError(void)
IOMikeyBusPort::_incrementError(char const*,char const*,uint)
IOMikeyBusPort::_linkStatusChangedAction(IOTimerEventSource *)
IOMikeyBusPort::_resetLinkStatus(void)
IOMikeyBusPort::_setEnumerationComplete(void)
IOMikeyBusPort::_setLinkSOUPLost(uint)
IOMikeyBusPort::_sleepWakeNotification(void *,uint,IOService *,void *,ulong)
IOMikeyBusPort::_terminateDevice(void)
IOMikeyBusPort::free(void)
IOMikeyBusPort::init(OSDictionary *)
IOMikeyBusPort::message(uint,IOService *,void *)
IOMikeyBusPort::start(IOService *)
IOMikeyBusPort::stop(IOService *)
IOMikeyBusTrafficChannel::AllocateChannel(void)
IOMikeyBusTrafficChannel::DeallocateChannel(void)
IOMikeyBusTrafficChannel::GetAudioDataSourceSelector(void)
IOMikeyBusTrafficChannel::SetSampleRate(IOMikeyBusSampleRate)
IOMikeyBusTrafficChannel::SetSampleSize(uint)
IOMikeyBusTrafficChannel::free(void)
IOMikeyBusTrafficChannel::init(IOMikeyBusController *,uchar,uchar,uint)
IOMobileFramebufferLegacy::MetaClass::MetaClass(void)
IOMobileFramebufferLegacy::abort_swap_gated(IOMFBSwapIORequest *,IOMFBSwapIORequestHeadName *,IOMFBSwapCompletionState)
IOMobileFramebufferLegacy::abort_swaps_gated(IOMobileFramebufferUserClient *)
IOMobileFramebufferLegacy::add_notification(IOMFB_NotificationType,IOMFBNotifyRequest *,IOMFBNotifyRequestArgs *)
IOMobileFramebufferLegacy::add_notification_gated(void *,IOMFBNotifyRequest *,IOMFBNotifyRequestArgs *)
IOMobileFramebufferLegacy::allocate_carveout(IOSurface *,uint,uint)
IOMobileFramebufferLegacy::benchmark_timer_gated(IOTimerEventSource *)
IOMobileFramebufferLegacy::carveout_region(void)
IOMobileFramebufferLegacy::check_passthrough_swap_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::clearCommand(IODMACommand *,IOCommandPool *)
IOMobileFramebufferLegacy::clear_default_surface(IOSurface *)
IOMobileFramebufferLegacy::clear_up_swap_queue_gated(void)
IOMobileFramebufferLegacy::computeFinalSurfaces_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::crc_notify(uint,uint,uint)
IOMobileFramebufferLegacy::create_default_fb_surface(void)
IOMobileFramebufferLegacy::deallocate_default_fb_surface(void)
IOMobileFramebufferLegacy::deallocate_default_fb_surface_gated(void)
IOMobileFramebufferLegacy::default_absolute_time_to_ns(ulong long,ulong long *)
IOMobileFramebufferLegacy::default_fb_surface(uint,uint)
IOMobileFramebufferLegacy::default_fb_surface_gated(uint,uint)
IOMobileFramebufferLegacy::disp_has_no_clients_gated(void)
IOMobileFramebufferLegacy::displayWillBeReprogrammed_gated(void)
IOMobileFramebufferLegacy::displayed_data_layer_state(uint)
IOMobileFramebufferLegacy::do_power_state_change_action_gated(IOMobileFramebufferLegacy::pstatechgreq *,bool)
IOMobileFramebufferLegacy::do_power_state_change_default_action_gated(bool)
IOMobileFramebufferLegacy::dropAbortedSwaps_gated(void)
IOMobileFramebufferLegacy::dropAsyncSwaps_gated(void)
IOMobileFramebufferLegacy::dropDummySwaps_gated(void)
IOMobileFramebufferLegacy::dropNoOpSwaps_gated(void)
IOMobileFramebufferLegacy::dropObsoleteSwaps_gated(void)
IOMobileFramebufferLegacy::dropSwap_gated(IOMFBSwapIORequest *,bool)
IOMobileFramebufferLegacy::dummySwapAlreadyQueued_gated(IOMFBSwapRequestIntent)
IOMobileFramebufferLegacy::edr_factor(IOSurface const*,float)
IOMobileFramebufferLegacy::enable_power_gated(void)
IOMobileFramebufferLegacy::enable_stats_gated(uint)
IOMobileFramebufferLegacy::find_swap_function_gated(void)
IOMobileFramebufferLegacy::find_swap_function_gated(void)::$_0::__invoke(void *,int)
IOMobileFramebufferLegacy::find_swap_function_gated(void)::$_0::operator void (*)(void *,int)(void)
IOMobileFramebufferLegacy::find_swap_function_gated(void)::$_0::operator()(void *,int)
IOMobileFramebufferLegacy::getCurrentSurface_gated(uint)
IOMobileFramebufferLegacy::getFirstValidSwapOrLastObsolete(ulong long)
IOMobileFramebufferLegacy::getFutureLayerStates_gated(IOMFBSwapIORequest *,IOMFB_LayerState *)
IOMobileFramebufferLegacy::get_HDCP_downstream_state(UpstreamHeader *)
IOMobileFramebufferLegacy::get_HDCP_downstream_state_gated(UpstreamHeader *)
IOMobileFramebufferLegacy::get_color_remap_mode(DisplayColorRemapMode *)
IOMobileFramebufferLegacy::get_current_absolute_time(void)
IOMobileFramebufferLegacy::get_current_refresh_rate_period_ns(void)
IOMobileFramebufferLegacy::get_default_surface(task *,uint *)
IOMobileFramebufferLegacy::get_digital_out_state(uint *)
IOMobileFramebufferLegacy::get_digital_out_state_gated(uint *)
IOMobileFramebufferLegacy::get_display_area(DisplayArea *)
IOMobileFramebufferLegacy::get_display_size(uint *,uint *)
IOMobileFramebufferLegacy::get_displayed_surface(task *,uint *,uint)
IOMobileFramebufferLegacy::get_dot_pitch(uint *)
IOMobileFramebufferLegacy::get_protection_options_gated(ulong long *)
IOMobileFramebufferLegacy::get_timing_attributes_gated(IOMFB::RefreshTimingAttributes *,bool)
IOMobileFramebufferLegacy::get_wanted_refresh_rate_divisor_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::get_wanted_refresh_rate_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::hdcp_client_will_stop(IOMobileFramebufferUserClient *)
IOMobileFramebufferLegacy::hdcp_get_reply(IOMemoryMap *,ulong *)
IOMobileFramebufferLegacy::hdcp_send_request(uchar const*,ulong,IOMFBNotifyRequestArgs *)
IOMobileFramebufferLegacy::hdcp_send_request_gated(uchar const*,ulong,IOMFBNotifyRequestArgs *)
IOMobileFramebufferLegacy::hotPlug_notify(ulong long)
IOMobileFramebufferLegacy::hotPlug_notify(ulong long)::$_7::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::idle_surface_release(void)
IOMobileFramebufferLegacy::init(OSDictionary *)
IOMobileFramebufferLegacy::init_swap_infos(void)
IOMobileFramebufferLegacy::intentRequiresSwap(IOMFBSwapRequestIntent)
IOMobileFramebufferLegacy::io_fence_notify(IOMFBSwapIORequest *,IOSurface *,int)
IOMobileFramebufferLegacy::io_fence_notify_gated(IOMFBSwapIORequest *,IOSurface *,int)
IOMobileFramebufferLegacy::isCABenchmarkOn(void)
IOMobileFramebufferLegacy::isCurrentPendingSwapEnabled_gated(uint)
IOMobileFramebufferLegacy::isDFBAllocated(void)
IOMobileFramebufferLegacy::isEntitlementSetOnTask(char const*,task *)
IOMobileFramebufferLegacy::isFormatPassthrough(uint)
IOMobileFramebufferLegacy::isFormatPassthroughV1(uint)
IOMobileFramebufferLegacy::isFormatPassthroughV2(uint)
IOMobileFramebufferLegacy::isKeepOnScreen(void)
IOMobileFramebufferLegacy::isKeepOnScreen_gated(void)
IOMobileFramebufferLegacy::isLayerValidForSwap(uint,IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::isSwapLayerEnabled_gated(IOMFBSwapIORequest *,uint)
IOMobileFramebufferLegacy::is_main_display(void)
IOMobileFramebufferLegacy::memcpy_reg(uint *,uint const*,uint)
IOMobileFramebufferLegacy::newUserClient(task *,void *,uint,IOUserClient **)
IOMobileFramebufferLegacy::parse_RTP_boot_args(void)
IOMobileFramebufferLegacy::powerUpDART(bool)
IOMobileFramebufferLegacy::powerUpDART_gated(bool)
IOMobileFramebufferLegacy::powerUpDART_impl_gated(bool,IOMapper *)
IOMobileFramebufferLegacy::power_state_change_interrupt(IOInterruptEventSource *,int)
IOMobileFramebufferLegacy::powerstate_notify(bool,bool)
IOMobileFramebufferLegacy::presentation_time_info(IOMFBSwapIORequest *,presentation_time_transaction *)
IOMobileFramebufferLegacy::printRegs(void)
IOMobileFramebufferLegacy::printRegs_gated(void)
IOMobileFramebufferLegacy::probe(IOService *,int *)
IOMobileFramebufferLegacy::queue_find_retain_swap_gated(IOMFBSwapIORequestHeadName *,uint,IOMFBSwapIORequest **)
IOMobileFramebufferLegacy::queue_move_entry_gated(IOMFBSwapIORequestHeadName *,IOMFBSwapIORequestHeadName *,IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::queue_remove_release_swap_gated(IOMFBSwapIORequestHeadName *,uint)
IOMobileFramebufferLegacy::readDataInEDT(IOService *,bool,char const*,uint,uint *)
IOMobileFramebufferLegacy::record_swap_info_gated(IOMFBSwapIORequest *,IOMFBSwapCompletionState)
IOMobileFramebufferLegacy::remove_notification_gated(void *,IOMFBNotifyRequest *)
IOMobileFramebufferLegacy::reprogramDisplayWithDummySwapAPT_gated(IOMFBSwapRequestIntent,IOMFBSwapRec *,ulong long)
IOMobileFramebufferLegacy::reprogramDisplayWithDummySwap_gated(IOMFBSwapRequestIntent,IOMFBSwapRec *)
IOMobileFramebufferLegacy::resize_default_fb_surface_gated(void)
IOMobileFramebufferLegacy::rotate_surface(uint,uint,uint)
IOMobileFramebufferLegacy::serializeDebugInfo(void *,void *,OSSerialize *)
IOMobileFramebufferLegacy::serializePerformanceStats(void *,void *,OSSerialize *)
IOMobileFramebufferLegacy::setAPIPowerState(ulong,IOService *)
IOMobileFramebufferLegacy::setBootFailure(char const*,...)
IOMobileFramebufferLegacy::setDisplayRefreshProperties(void)
IOMobileFramebufferLegacy::setPowerState(ulong,IOService *)
IOMobileFramebufferLegacy::setProperties(OSObject *)
IOMobileFramebufferLegacy::setSystemConsoleMode(bool)
IOMobileFramebufferLegacy::setSystemConsoleMode_gated(bool)
IOMobileFramebufferLegacy::set_api_power_state_gated(ulong,IOService *)
IOMobileFramebufferLegacy::set_block(task *,uint,uint,ulong long const*,uint,uchar const*,ulong)
IOMobileFramebufferLegacy::set_canvas_size(uint,uint)
IOMobileFramebufferLegacy::set_debug_flags(uint,uint,uint *)
IOMobileFramebufferLegacy::set_debug_flags_gated(uint,uint,uint *)
IOMobileFramebufferLegacy::set_flags(uint,uint,uint *)
IOMobileFramebufferLegacy::set_flags_gated(ulong,ulong,uint *)
IOMobileFramebufferLegacy::set_hotPlug_state_gated(uint)
IOMobileFramebufferLegacy::set_matrix(uint,ulong long const(*)[3][3])
IOMobileFramebufferLegacy::set_notify_tag_mask(IOMFB_NotificationType,IOMFBNotifyRequest *,uint)
IOMobileFramebufferLegacy::set_notify_tag_mask(IOMFB_NotificationType,IOMFBNotifyRequest *,uint)::$_4::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_parameter(IOMFBParameterName,ulong long const*,uint)::$_10::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_parameter(IOMFBParameterName,ulong long const*,uint)::$_11::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_parameter(IOMFBParameterName,ulong long const*,uint)::$_12::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_parameter(IOMFBParameterName,ulong long const*,uint)::$_8::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_parameter(IOMFBParameterName,ulong long const*,uint)::$_9::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::set_power_state_gated(ulong,IOService *)
IOMobileFramebufferLegacy::set_version_info(void)
IOMobileFramebufferLegacy::set_white_on_black_mode(uint)
IOMobileFramebufferLegacy::shutdownNotification(void *,void *,uint,IOService *,void *,ulong)
IOMobileFramebufferLegacy::spinner_setup(void)
IOMobileFramebufferLegacy::spinner_surface_alloc(IOSurface **)
IOMobileFramebufferLegacy::spinner_surface_alloc(IOSurface **)::$_5::operator()(OSDictionary *,char const*,ulong long)
IOMobileFramebufferLegacy::spinner_teardown(void)
IOMobileFramebufferLegacy::start(IOService *)
IOMobileFramebufferLegacy::stop(IOService *)
IOMobileFramebufferLegacy::surface_complete(IOMFB::AP::DisplayedData *,uint)
IOMobileFramebufferLegacy::surface_complete(IOMFBSwapIORequest *,uint,bool)
IOMobileFramebufferLegacy::surface_is_replaceable(uint,bool *)
IOMobileFramebufferLegacy::surface_is_replaceable_gated(uint,bool *)
IOMobileFramebufferLegacy::surface_is_replaceable_gated(uint,bool *)::$_3::operator()(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::surface_layer_map(IOMFB::AP::DisplayedData *,uint,IOSurface *)
IOMobileFramebufferLegacy::surface_layer_unmap(IOMFB::AP::DisplayedData *,uint)
IOMobileFramebufferLegacy::surface_map(IOSurface *,IODMACommand **,ulong long *)
IOMobileFramebufferLegacy::surface_unmap(IOSurface **,IODMACommand **,ulong long *)
IOMobileFramebufferLegacy::swapWillChangeDisplayedData(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_apply_fences_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_begin_async_gated(void)
IOMobileFramebufferLegacy::swap_cancel(uint)
IOMobileFramebufferLegacy::swap_cancel_all(ulong long)
IOMobileFramebufferLegacy::swap_cancel_all(ulong long)::$_13::operator()(IOMobileFramebufferLegacy*,IOMFBSwapIORequestHeadName *,IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_cancel_all(ulong long)::$_1::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::swap_cancel_gated(uint)
IOMobileFramebufferLegacy::swap_complete_gated(bool)
IOMobileFramebufferLegacy::swap_complete_gated(void)
IOMobileFramebufferLegacy::swap_expiration_timeout_gated(IOTimerEventSource *)
IOMobileFramebufferLegacy::swap_get_next_id_gated(void)
IOMobileFramebufferLegacy::swap_info_notify_dispatch(IOMobileFramebufferLegacy::SwapInfoBlob *)
IOMobileFramebufferLegacy::swap_info_notify_dispatch(IOMobileFramebufferLegacy::SwapInfoBlob *)::$_6::operator()(OSObject *,void *,void *,void *,void *)
IOMobileFramebufferLegacy::swap_info_notify_dispatch_gated(IOMobileFramebufferLegacy::SwapInfoBlob *)
IOMobileFramebufferLegacy::swap_layer_map(IOMFBSwapIORequest *,uint)
IOMobileFramebufferLegacy::swap_layer_state(IOMFBSwapIORequest *,uint)
IOMobileFramebufferLegacy::swap_notify_dispatch_gated(ulong long,ulong long,ulong long)
IOMobileFramebufferLegacy::swap_notify_gated(ulong long,ulong long,ulong long)
IOMobileFramebufferLegacy::swap_queue(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_queue_finalize_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_set_color_matrix(IOMFBColorFixedMatrix *,IOMFBColorMatrixFunction,uint)
IOMobileFramebufferLegacy::swap_signal(uint,uint)
IOMobileFramebufferLegacy::swap_signal_gated(uint,uint)
IOMobileFramebufferLegacy::swap_start(uint *,IOUserClient *)
IOMobileFramebufferLegacy::swap_start_gated(uint *,IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::swap_submit(IOMFBSwapRec *,IOUserClient *)
IOMobileFramebufferLegacy::swap_wait(IOMobileFramebufferUserClient *,uint,uint,uint)
IOMobileFramebufferLegacy::swap_wait_gated(IOMobileFramebufferUserClient *,uint,uint,uint)
IOMobileFramebufferLegacy::swap_wait_gated(IOMobileFramebufferUserClient *,uint,uint,uint)::$_2::operator()(void)
IOMobileFramebufferLegacy::swapping_client_did_start(IOMobileFramebufferUserClient *)
IOMobileFramebufferLegacy::swapping_client_will_stop(IOMobileFramebufferUserClient *)
IOMobileFramebufferLegacy::syncRate(void)
IOMobileFramebufferLegacy::systemWillShutdown(uint)
IOMobileFramebufferLegacy::updateBufferMappingCount_gated(bool)
IOMobileFramebufferLegacy::updateDisplayedDataFromPendingSwap_gated(void)
IOMobileFramebufferLegacy::update_refresh_stats_gated(void)
IOMobileFramebufferLegacy::update_swap_completed_state_gated(IOMFBSwapIORequest *,IOMFBSwapRec *)
IOMobileFramebufferLegacy::update_swap_info_state_gated(IOMFBSwapIORequest *,IOMFBSwapCompletionState)
IOMobileFramebufferLegacy::verifyKeepOnScreen_gated(IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::waitForAPIPowerStateChanges(void)
IOMobileFramebufferLegacy::writeDebugInfo(OSDictionary *)
IOMobileFramebufferLegacy::writeDebugInfo_gated(OSDictionary *)
IOMobileFramebufferLegacy::writeLayerDebugInfo(OSDictionary *,IOSurface *,IOMFBRect *,IOMFBRect *)
IOMobileFramebufferLegacy::writePerformanceStats(OSDictionary *)
IOMobileFramebufferLegacy::writeSwapDebugInfo(OSArray *,IOMFBSwapIORequest *)
IOMobileFramebufferLegacy::write_last_swap_infos_gated(OSDictionary *)
IOMobileFramebufferLegacy::write_power_infos(OSDictionary *)
IOMobileFramebufferUserClient::MetaClass::MetaClass(void)
IOMobileFramebufferUserClient::MetaClass::alloc(void)
IOMobileFramebufferUserClient::clientClose(void)
IOMobileFramebufferUserClient::default_fb_surface(uint *,uint,uint)
IOMobileFramebufferUserClient::enableInternalToExternalMirroring(bool)
IOMobileFramebufferUserClient::enable_disable_dithering_client(uint)
IOMobileFramebufferUserClient::enable_disable_video_power_savings_client(uint)
IOMobileFramebufferUserClient::enable_stats(uint)
IOMobileFramebufferUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOMobileFramebufferUserClient::free(void)
IOMobileFramebufferUserClient::getExternalMirroringCapability(IOMFBMirroringCapability *)
IOMobileFramebufferUserClient::get_HDCP_downstream_state(UpstreamHeader *)
IOMobileFramebufferUserClient::get_color_remap_mode(DisplayColorRemapMode *)
IOMobileFramebufferUserClient::get_current_aboslute_time(ulong long *)
IOMobileFramebufferUserClient::get_default_surface(uint *)
IOMobileFramebufferUserClient::get_digital_out_state(uint *)
IOMobileFramebufferUserClient::get_display_area(DisplayArea *)
IOMobileFramebufferUserClient::get_display_size(uint *,uint *)
IOMobileFramebufferUserClient::get_displayed_surface(uint *,uint)
IOMobileFramebufferUserClient::get_dot_pitch(uint *)
IOMobileFramebufferUserClient::get_framebuffer_id(uint *)
IOMobileFramebufferUserClient::get_gamma_table(IOMFBGammaTable *)
IOMobileFramebufferUserClient::get_link_quality(ulong long *)
IOMobileFramebufferUserClient::get_matrix(IOMFB_MatrixLocation,ulong long (*)[3][3])
IOMobileFramebufferUserClient::get_protection_options(ulong long *)
IOMobileFramebufferUserClient::hdcp_get_reply(uchar const*,ulong *)
IOMobileFramebufferUserClient::hdcp_send_request(uchar const*,ulong,void *,void *)
IOMobileFramebufferUserClient::init(task *,uint,OSDictionary *)
IOMobileFramebufferUserClient::isEntitlementSet(char const*,task *)
IOMobileFramebufferUserClient::is_main_display(uint *)
IOMobileFramebufferUserClient::kernel_tests(IOMFBKernelTestsArguments *,uint)
IOMobileFramebufferUserClient::printDisplayRegs(void)
IOMobileFramebufferUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOMobileFramebufferUserClient::request_power_change(uint)
IOMobileFramebufferUserClient::rotate_surface(uint,uint,uint)
IOMobileFramebufferUserClient::s_default_fb_surface(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_displayed_fb_surface(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_enableInternalToExternalMirroring(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_getExternalMirroringCapability(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_HDCP_downstream_state(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_block(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_buf_block(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_color_remap_mode(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_current_absolute_time(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_display_size(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_matrix(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_get_protection_options(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_hdcp_get_reply(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_hdcp_send_request(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_is_main_display(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_printDisplayRegs(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_rotate_surface(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_setOverscanSafeRegion(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_setRenderingAngle(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_block(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_canvas_size(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_contrast(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_flags(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_gamma_table(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_matrix(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_notify(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_parameter(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_tag_mask(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_set_wss_info(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_splc_get_brightness(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_splc_set_brightness(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_supported_frame_info(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_surface_is_replaceable(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_swap_cancel(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_swap_cancel_all(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_swap_set_color_matrix(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_swap_start(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::s_swap_submit(IOMobileFramebufferUserClient*,void *,IOExternalMethodArguments *)
IOMobileFramebufferUserClient::sendAsyncResult64WithOptions(ulong long *,int,ulong long *,uint,uint)
IOMobileFramebufferUserClient::setAsyncReference64(ulong long *,ipc_port *,ulong long,ulong long,task *)
IOMobileFramebufferUserClient::setOverscanSafeRegion(IOMFBOverscanSafeRect *)
IOMobileFramebufferUserClient::setRenderingAngle(float *)
IOMobileFramebufferUserClient::set_brightness_correction(uint)
IOMobileFramebufferUserClient::set_canvas_size(uint,uint)
IOMobileFramebufferUserClient::set_color_remap_mode(DisplayColorRemapMode)
IOMobileFramebufferUserClient::set_contrast(float *)
IOMobileFramebufferUserClient::set_debug_flags(uint,uint,uint *)
IOMobileFramebufferUserClient::set_digital_out_mode(uint,uint)
IOMobileFramebufferUserClient::set_display_device(uint)
IOMobileFramebufferUserClient::set_flags(uint,uint,uint *)
IOMobileFramebufferUserClient::set_gamma_table(IOMFBGammaTable *)
IOMobileFramebufferUserClient::set_line21_data(uint)
IOMobileFramebufferUserClient::set_matrix(IOMFB_MatrixLocation,ulong long const(*)[3][3])
IOMobileFramebufferUserClient::set_notify(void *,void *,IOMFB_NotificationType,uint)
IOMobileFramebufferUserClient::set_tag_mask(IOMFB_NotificationType,uint)
IOMobileFramebufferUserClient::set_tvout_mode(uint)
IOMobileFramebufferUserClient::set_tvout_signaltype(uint)
IOMobileFramebufferUserClient::set_underrun_color_client(uint)
IOMobileFramebufferUserClient::set_video_dac_gain(uint)
IOMobileFramebufferUserClient::set_white_on_black_mode(uint)
IOMobileFramebufferUserClient::set_wss_info(uint,uint)
IOMobileFramebufferUserClient::splc_get_brightness(uint *)
IOMobileFramebufferUserClient::splc_set_brightness(uint)
IOMobileFramebufferUserClient::start(IOService *)
IOMobileFramebufferUserClient::stop(IOService *)
IOMobileFramebufferUserClient::supported_frame_info(uint,ulong long *,char (*)[64])
IOMobileFramebufferUserClient::surface_is_replaceable(uint,bool *)
IOMobileFramebufferUserClient::swap_cancel(uint)
IOMobileFramebufferUserClient::swap_set_color_matrix(IOMFBColorFixedMatrix *,IOMFBColorMatrixFunction,uint)
IOMobileFramebufferUserClient::swap_signal(uint,uint)
IOMobileFramebufferUserClient::swap_start(uint *)
IOMobileFramebufferUserClient::swap_submit(IOMFBSwapRec *,uint)
IOMobileFramebufferUserClient::swap_wait(uint,uint,uint)
IOMobileFramebufferUserClient::~IOMobileFramebufferUserClient()
IOMultiMemoryDescriptor::MetaClass::MetaClass(void)
IOMultiMemoryDescriptor::getPageCounts(ulong long *,ulong long *)
IOMultiMemoryDescriptor::setOwnership(task *,int,uint)
IOMultiMemoryDescriptor::setPurgeable(uint,uint *)
IOMultiMemoryDescriptor::~IOMultiMemoryDescriptor()
IOMultiMemoryDescriptor__complete_unsigned_int
IOMultiMemoryDescriptor__getPhysicalSegment_unsigned_long_long__unsigned_long_long___unsigned_int
IOMultiMemoryDescriptor__prepare_unsigned_int
IONVMeBlockStorageDevice::AllocateResources(void)
IONVMeBlockStorageDevice::CompleteAsyncRequest(AppleNVMeRequest *)
IONVMeBlockStorageDevice::CreateIOReporters(void)
IONVMeBlockStorageDevice::DeAllocateResources(void)
IONVMeBlockStorageDevice::DeleteIOReporters(void)
IONVMeBlockStorageDevice::ExportStats(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::ExportStatsSnapshot(uint,IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetAlgorithmCounters(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetAlgorithmCountersV2(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetCriticalWarning(uint *)
IONVMeBlockStorageDevice::GetDefectEntries(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetDeviceProperties(void)
IONVMeBlockStorageDevice::GetErrorPayloads(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetFieldCounters(IOMemoryDescriptor *,uint)
IONVMeBlockStorageDevice::GetFieldCountersSnapshot(uint,IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetFieldCountersV2(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetIOLogLevel(uint *)
IONVMeBlockStorageDevice::GetIdentifyData(IOMemoryDescriptor *,uint)
IONVMeBlockStorageDevice::GetLogPage(IOMemoryDescriptor *,uint,uint)
IONVMeBlockStorageDevice::GetMSPCounters(uint,IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetNANDGeometry(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetSMARTData(IOMemoryDescriptor *)
IONVMeBlockStorageDevice::GetSystemCounters(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::GetSystemCountersV2(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::IOLogExport(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::IOLogExportHeader(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::QueueCompleteRequest(AppleNVMeRequest *,AppleNVMeSWQEntryType)
IONVMeBlockStorageDevice::QueueCompleteRequest(AppleNVMeRequest *,AppleNVMeSWQEntryType)
IONVMeBlockStorageDevice::QueueCreate(uint)
IONVMeBlockStorageDevice::QueueGetToken(AppleNVMeSWQEntryType,bool)
IONVMeBlockStorageDevice::QueueGetToken(AppleNVMeSWQEntryType,bool)
IONVMeBlockStorageDevice::QueueSubmitRequest(AppleNVMeRequest *,AppleNVMeSWQEntryType,bool)
IONVMeBlockStorageDevice::QueueTerminate(void)
IONVMeBlockStorageDevice::ReadBandStats(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::ReadStats(IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::ReadStatsSnapshot(uint,IOMemoryDescriptor *,uint *,uint)
IONVMeBlockStorageDevice::ScheduleBGRefresh(void)
IONVMeBlockStorageDevice::SetIOLogLevel(uint)
IONVMeBlockStorageDevice::SetNVMeProperties(void)
IONVMeBlockStorageDevice::UpdateBWLimitReporterState(void)
IONVMeBlockStorageDevice::ValidateEntitlement(char const*)
IONVMeBlockStorageDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IONVMeBlockStorageDevice::configureReport(IOReportChannelList *,uint,void *,void *)
IONVMeBlockStorageDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IONVMeBlockStorageDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IONVMeBlockStorageDevice::doGetFormatCapacities(ulong long *,uint)
IONVMeBlockStorageDevice::doSetPriority(IOBlockStorageDeviceExtent *,uint,uchar)
IONVMeBlockStorageDevice::doSynchronize(ulong long,ulong long,uint)
IONVMeBlockStorageDevice::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
IONVMeBlockStorageDevice::doUnmapNVMe(AppleNVMeRequest *,IOBlockStorageDeviceExtent *,uint,NVMeLBARangeEntry *)
IONVMeBlockStorageDevice::finalize(uint)
IONVMeBlockStorageDevice::free(void)
IONVMeBlockStorageDevice::getProductString(void)
IONVMeBlockStorageDevice::getWriteCacheState(bool *)
IONVMeBlockStorageDevice::handleClose(IOService *,uint)
IONVMeBlockStorageDevice::handleIsOpen(IOService const*)
IONVMeBlockStorageDevice::handleOpen(IOService *,uint,void *)
IONVMeBlockStorageDevice::initWithNamespace(uint)
IONVMeBlockStorageDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IONVMeBlockStorageDevice::setProperties(OSObject *)
IONVMeBlockStorageDevice::setWriteCacheState(bool)
IONVMeBlockStorageDevice::start(IOService *)
IONVMeBlockStorageDevice::stop(IOService *)
IONVMeBlockStorageDevice::terminate(uint)
IONVMeBlockStorageDevice::updateReport(IOReportChannelList *,uint,void *,void *)
IONVMeBlockStorageDevice::willTerminate(IOService *,uint)
IONVMeController::AbortAllRequests(int)
IONVMeController::AbortAsyncEventRequests(uint)
IONVMeController::AddReportingChannels(void)
IONVMeController::AllocateResources(void)
IONVMeController::AsyncPolledExecute(IOPolledCompletion)
IONVMeController::CheckANSTagFifoWorkaround(void)
IONVMeController::CheckCFS(void)
IONVMeController::CheckForTimeout(IOTimerEventSource *)
IONVMeController::CheckProviderProperties(void)
IONVMeController::CheckWriteProtection(void)
IONVMeController::ClampLowPowerState(void)
IONVMeController::CommandTimeout(AppleNVMeRequest *)
IONVMeController::CommandTimeout(AppleNVMeRequest *)
IONVMeController::CompleteAsyncEvent(AppleNVMeRequest *)
IONVMeController::CopyAndResetQDArray(ulong long *)
IONVMeController::CreateBlockStorageDevice(uint)
IONVMeController::CreateCompletionQueue(ushort)
IONVMeController::CreateCompletionQueues(void)
IONVMeController::CreateControllerLocks(void)
IONVMeController::CreateDeviceInterrupt(void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOService *)
IONVMeController::CreateIOReporter(void)
IONVMeController::CreatePanicString(void)
IONVMeController::CreateQDArray(void)
IONVMeController::CreateSubmissionQueue(ushort,uchar)
IONVMeController::CreateSubmissionQueues(void)
IONVMeController::CreateTimers(void)
IONVMeController::CreateWorkLoop(IOService *)
IONVMeController::DeleteAllQueues(void)
IONVMeController::DeleteCompletionQueue(ushort)
IONVMeController::DeleteCompletionQueues(void)
IONVMeController::DeleteControllerLocks(void)
IONVMeController::DeleteIOReporter(void)
IONVMeController::DeleteQDArray(void)
IONVMeController::DeleteSubmissionQueue(ushort)
IONVMeController::DeleteSubmissionQueues(void)
IONVMeController::DeleteWorkLoop(void)
IONVMeController::DetermineSystemSleepType(void)
IONVMeController::DisableCompletionQueue(ushort)
IONVMeController::DisableSubmissionQueue(ushort)
IONVMeController::DisableSubmissionQueues(void)
IONVMeController::DisableTimers(void)
IONVMeController::DoANSTagFifoWorkaround(ushort)
IONVMeController::EnableCompletionQueue(ushort)
IONVMeController::EnableController(void)
IONVMeController::EnableDeviceInterrupt(void)
IONVMeController::EnablePCIPowerManagement(void)
IONVMeController::EnableSubmissionQueue(ushort)
IONVMeController::EnableSubmissionQueues(void)
IONVMeController::FatalHandling(void)
IONVMeController::FatalHandling(void)
IONVMeController::FilterInterruptRequest(IOFilterInterruptEventSource *)
IONVMeController::GetAsyncEventRequests(uint)
IONVMeController::GetChipInfo(uint *,uint *)
IONVMeController::GetDefaultRequestTimeout(void)
IONVMeController::GetFatalErrorDescription(void)
IONVMeController::GetFatalErrorType(void)
IONVMeController::GetIOMappers(void)
IONVMeController::GetOveragedRequest(ulong long)
IONVMeController::GetPolledRequest(void)
IONVMeController::GetRequest(uint,uchar)
IONVMeController::GetSMARTData(IOMemoryDescriptor *,bool)
IONVMeController::GetSaturationByteCountKey(void)
IONVMeController::GetTagFIFOCount(void)
IONVMeController::GetTimedoutCommandDescription(void)
IONVMeController::HandleAbruptShutdown(void)
IONVMeController::HandleCompletionErrors(AppleNVMeRequest *,uint)
IONVMeController::HandleControllerPowerOff(void)
IONVMeController::HandleInterruptRequest(IOInterruptEventSource *,int)
IONVMeController::IdentifyController(void)
IONVMeController::InitializeController(void)
IONVMeController::InitializeNVMe(bool)
IONVMeController::InitializeNVMeQueue(AppleNVMeQueue *,ushort,int,uint,uint)
IONVMeController::InitializePCI(void)
IONVMeController::InitializePowerManagement(void)
IONVMeController::IsFullInit(void)
IONVMeController::IssueIdentifyCommand(IOMemoryDescriptor *,uint,bool)
IONVMeController::PollCSTS(uint,uint,uint,uint)
IONVMeController::PollEntry(void)
IONVMeController::PollRegister(uint,uint,uint,uint,uint,uint,uint *)
IONVMeController::PolledCommandCompletion(AppleNVMeRequest *)
IONVMeController::PolledDisableCompletionQueue(uint)
IONVMeController::PolledDisableSubmissionQueue(uint)
IONVMeController::PolledDisableSubmissionQueues(void)
IONVMeController::PolledEnableCompletionQueue(ushort)
IONVMeController::PolledEnableSubmissionQueue(ushort)
IONVMeController::PolledEnableSubmissionQueues(void)
IONVMeController::PolledFlush(void)
IONVMeController::PolledIO(uchar,IOMemoryDescriptor *,uint,ulong long,ulong long,IOPolledCompletion,uint,uchar const*,ulong)
IONVMeController::PolledSetNumQueues(ushort,ushort)
IONVMeController::PowerManagerLockLock(bool)
IONVMeController::PreTransitionFixup(void)
IONVMeController::PreparePolledNVMeRequest(IOMemoryDescriptor *)
IONVMeController::PrintErrorString(void)
IONVMeController::ProcessCompletionQueue(AppleNVMeCompletionQueue *)
IONVMeController::ProcessNVMeRequest(AppleNVMeRequest *,bool)
IONVMeController::ProcessNVMeRequestPolled(AppleNVMeRequest *)
IONVMeController::ProcessSyncNVMeRequest(AppleNVMeRequest *)
IONVMeController::RebuildRequestPool(uchar)
IONVMeController::ReleaseResources(void)
IONVMeController::ReleaseTimers(void)
IONVMeController::ReportPowerState(void)
IONVMeController::RequestAsyncEvents(uint)
IONVMeController::RequestProcessLockLock(AppleNVMeLockType)
IONVMeController::ResetAllQueues(void)
IONVMeController::ReturnAsyncEventRequests(uint)
IONVMeController::ReturnRequest(AppleNVMeRequest *)
IONVMeController::ScanCompletionQueue(AppleNVMeCompletionQueue *)
IONVMeController::SendShutdownNotification(bool)
IONVMeController::SetControllerProperty(char const*,uchar *,uint,uchar *)
IONVMeController::SetFatalErrorString(char *,uint)
IONVMeController::SetNVMeProperties(void)
IONVMeController::SetNumQueues(ushort,ushort)
IONVMeController::SetQueueFrozen(bool)
IONVMeController::SetSQEntry(AppleNVMeRequest *,ushort,ushort,uchar *)
IONVMeController::SetSystemRequirements(uchar)
IONVMeController::SetupAdminQueue(void)
IONVMeController::ShutdownNVMe(bool,bool)
IONVMeController::StartController(void)
IONVMeController::SubmitCommand(AppleNVMeSubmissionQueue *,AppleNVMeRequest *)
IONVMeController::TerminateBlockStorageDevice(void)
IONVMeController::ThreadEntry(void)
IONVMeController::UninitializeController(void)
IONVMeController::UninitializeNVMeQueue(AppleNVMeQueue *)
IONVMeController::UninitializePCI(void)
IONVMeController::UpdateQDCounters(uint)
IONVMeController::WaitForOutstandingCommands(void)
IONVMeController::WaitForPowerChange(void)
IONVMeController::__DISK_IS_ASLEEP__(void)
IONVMeController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IONVMeController::configureReport(IOReportChannelList *,uint,void *,void *)
IONVMeController::didTerminate(IOService *,uint,bool *)
IONVMeController::finalize(uint)
IONVMeController::free(void)
IONVMeController::initialPowerStateForDomainState(ulong)
IONVMeController::performNVMeShutdownTasks(void)
IONVMeController::setPowerState(ulong,IOService *)
IONVMeController::setProperties(OSObject *)
IONVMeController::start(IOService *)
IONVMeController::stop(IOService *)
IONVMeController::systemWillShutdown(uint)
IONVMeController::terminate(uint)
IONVMeController::updateReport(IOReportChannelList *,uint,void *,void *)
IONVMeController::willTerminate(IOService *,uint)
IONVMeControllerPolledAdapter::InitWithOwnerAndRequest(IONVMeController *,AppleNVMeRequest *)
IONVMeControllerPolledAdapter::WithOwnerAndRequest(IONVMeController *,AppleNVMeRequest *)
IONVMeControllerPolledAdapter::checkForWork(void)
IONVMeControllerPolledAdapter::close(uint)
IONVMeControllerPolledAdapter::open(uint,IOMemoryDescriptor *)
IONVMeControllerPolledAdapter::setEncryptionKey(uchar const*,ulong)
IONVMeControllerPolledAdapter::startIO(uint,uint,ulong long,ulong long,IOPolledCompletion)
IONVMeController__fn_0x6a8
IONVMeController__fn_0x7b8
IONVMeController__fn_0x7c0
IONVMeController__fn_0x7d8
IONVMeEffaceableDevice::Create(uint,uchar)
IONVMeEffaceableDevice::reportBlockSize(ulong long *)
IONVMeLifeboatBlockDevice::Create(uint,uchar)
IONVMeLifeboatBlockDevice::GetDeviceProperties(void)
IONVMeLifeboatBlockDevice::start(IOService *)
IONVRAMCHRPHandler::IONVRAMCHRPHandler(OSSharedPtr<OSDictionary> &,OSSharedPtr<OSDictionary> &)
IONVRAMCHRPHandler::convertObjectToProp(uchar *,uint *,OSSymbol const*,OSObject *)
IONVRAMCHRPHandler::convertObjectToProp(uchar *,uint *,char const*,OSObject *)
IONVRAMCHRPHandler::convertPropToObject(uchar const*,uint,uchar const*,uint,OSSharedPtr<OSSymbol const> &,OSSharedPtr&<OSObject>)
IONVRAMCHRPHandler::convertPropToObject(uchar const*,uint,uchar const*,uint,OSSymbol const**,OSObject **)
IONVRAMCHRPHandler::escapeDataToData(OSData *)
IONVRAMCHRPHandler::unescapeBytesToData(uchar const*,uint)
IONVRAMController::registerService(uint)
IONVRAMV3Handler::IONVRAMV3Handler(OSSharedPtr<OSDictionary> &,OSSharedPtr<OSDictionary> &)
IONVRAMV3Handler::convertPropToObject(uchar const*,uint,uchar const*,uint,OSSharedPtr<OSSymbol const> &,OSSharedPtr&<OSObject>)
IONVRAMV3Handler::isValidImage(uchar const*,ulong long)
IONVRAMV3Handler::~IONVRAMV3Handler()
IONaturalMemoryCursor::getPhysicalSegments(IOMemoryDescriptor *,ulong long,IOMemoryCursor::PhysicalSegment *,uint,uint,ulong long *)
IONaturalMemoryCursor::withSpecification(ulong long,ulong long,ulong long)
IONaturalMemoryCursor__initWithSpecification_unsigned_long_long__unsigned_long_long__unsigned_long_long
IONaturalMemoryCursor__initWithSpecification_unsigned_long_long__unsigned_long_long__unsigned_long_long_0
IONaturalMemoryCursor__initWithSpecification_unsigned_long_long__unsigned_long_long__unsigned_long_long_1
IONetworkController::_broadcastEvent(uint,void *)
IONetworkController::attachDebuggerClient(IOKernelDebugger **)
IONetworkController::attachInterface(IONetworkInterface **,bool)
IONetworkController::configureInterface(IONetworkInterface *)
IONetworkController::copyMediumDictionary(void)
IONetworkController::copyPacket(__mbuf *,uint)
IONetworkController::debugLinkStatusHandler(IOService *)
IONetworkController::debugRxHandler(IOService *,void *,uint *,uint)
IONetworkController::debugSetModeHandler(IOService *,bool)
IONetworkController::debugTxHandler(IOService *,void *,uint)
IONetworkController::detachDebuggerClient(IOKernelDebugger *)
IONetworkController::detachInterface(IONetworkInterface *,bool)
IONetworkController::disable(IOService *)
IONetworkController::doDisable(IOService *)
IONetworkController::doEnable(IOService *)
IONetworkController::enable(IONetworkInterface *)
IONetworkController::enable(IOService *)
IONetworkController::executeCommand(OSObject *,int (*)(void *,void *,void *,void *,void *),void *,void *,void *,void *,void *)
IONetworkController::executeCommandAction(OSObject *,void *,void *,void *,void *)
IONetworkController::free(void)
IONetworkController::freePacket(__mbuf *,uint)
IONetworkController::getChecksumDemand(__mbuf *,uint,uint *,void *,void *)
IONetworkController::getCommandClient(void)
IONetworkController::getCurrentMedium(void)
IONetworkController::getDebuggerLinkStatus(void)
IONetworkController::getMediumDictionary(void)
IONetworkController::getSelectedMedium(void)
IONetworkController::handleClose(IOService *,uint)
IONetworkController::handleCommand(void *,void *,void *,void *,void *)
IONetworkController::handleIsOpen(IOService const*)
IONetworkController::handleOpen(IOService *,uint,void *)
IONetworkController::init(OSDictionary *)
IONetworkController::message(uint,IOService *,void *)
IONetworkController::outputPacket(__mbuf *,void *)
IONetworkController::prepare(void)
IONetworkController::publishMediumDictionary(OSDictionary const*)
IONetworkController::publishProperties(void)
IONetworkController::receivePacket(void *,uint *,uint)
IONetworkController::releaseFreePackets(void)
IONetworkController::replaceOrCopyPacket(__mbuf **,uint,bool *)
IONetworkController::replacePacket(__mbuf **,uint)
IONetworkController::selectMediumWithName(OSSymbol const*)
IONetworkController::setAggressiveness(ulong,ulong)
IONetworkController::setChecksumResult(__mbuf *,uint,uint,uint,uint,uint)
IONetworkController::setCurrentMedium(IONetworkMedium const*)
IONetworkController::setLinkStatus(uint,IONetworkMedium const*,ulong long,OSData *)
IONetworkController::setSelectedMedium(IONetworkMedium const*)
IONetworkController::start(IOService *)
IONetworkController::systemWillShutdown(uint)
IONetworkControllerGlobals::IONetworkControllerGlobals(void)
IONetworkControllerGlobals::~IONetworkControllerGlobals()
IONetworkData::MetaClass::alloc(void)
IONetworkData::clearBuffer(void)
IONetworkData::free(void)
IONetworkData::init(char const*,uint,uint,void *,uint,void *,int (*)(void *,void *,IONetworkData*,uint,void *,uint *,uint),void *)
IONetworkData::read(void *,uint *,uint)
IONetworkData::readBytes(void *,uint *,uint)
IONetworkData::serialize(OSSerialize *)
IONetworkData::setAccessTypes(uint)
IONetworkData::setNotificationTarget(void *,int (*)(void *,void *,IONetworkData*,uint,void *,uint *,uint),void *)
IONetworkData::withExternalBuffer(char const*,uint,void *,uint,void *,int (*)(void *,void *,IONetworkData*,uint,void *,uint *,uint),void *)
IONetworkData::withInternalBuffer(char const*,uint,uint,void *,int (*)(void *,void *,IONetworkData*,uint,void *,uint *,uint),void *)
IONetworkData::writeBytes(void const*,uint,uint)
IONetworkData::~IONetworkData()
IONetworkDataGlobals::IONetworkDataGlobals(void)
IONetworkDataGlobals::~IONetworkDataGlobals()
IONetworkInterface::_syncNetworkDataDict(void)
IONetworkInterface::actionInputCtl(IONetworkController *,uint,uint,void *)
IONetworkInterface::addNetworkData(IONetworkData *)
IONetworkInterface::attachToDataLinkLayer(uint,void *)
IONetworkInterface::clearInputQueue(void)
IONetworkInterface::configureInputPacketPolling(uint,uint)
IONetworkInterface::configureOutputPullModel(uint,uint,uint,uint,uint)
IONetworkInterface::configureOutputStartDelay(ushort,ushort)
IONetworkInterface::controllerDidChangePowerState(IONetworkController *,ulong,uint,IOService *)
IONetworkInterface::controllerWillChangePowerState(IONetworkController *,ulong,uint,IOService *)
IONetworkInterface::debuggerRegistered(void)
IONetworkInterface::dequeueOutputPackets(uint,__mbuf **,__mbuf **,uint *,ulong long *)
IONetworkInterface::dequeueOutputPacketsWithServiceClass(uint,IOMbufServiceClass,__mbuf **,__mbuf **,uint *,ulong long *)
IONetworkInterface::detachFromDataLinkLayer(uint,void *)
IONetworkInterface::drainOutputQueue(__ifnet *,IONetworkController *)
IONetworkInterface::enqueueInputPacket(__mbuf *,IOMbufQueue *,uint)
IONetworkInterface::errnoToIOReturn(int)
IONetworkInterface::flushInputQueue(void)
IONetworkInterface::flushOutputQueue(uint)
IONetworkInterface::free(void)
IONetworkInterface::getFlags(void)
IONetworkInterface::getInterfaceState(void)
IONetworkInterface::getMediaAddressLength(void)
IONetworkInterface::getMediaHeaderLength(void)
IONetworkInterface::getNetworkData(OSSymbol const*)
IONetworkInterface::getNetworkData(char const*)
IONetworkInterface::getParameter(char const*)
IONetworkInterface::getUnitNumber(void)
IONetworkInterface::haltOutputThread(uint)
IONetworkInterface::handleClose(IOService *,uint)
IONetworkInterface::handleNetworkInputEvent(void *,void *)
IONetworkInterface::handleOpen(IOService *,uint,void *)
IONetworkInterface::if_detach(__ifnet *)
IONetworkInterface::if_input_ctl(__ifnet *,uint,uint,void *)
IONetworkInterface::if_input_poll(__ifnet *,uint,uint,__mbuf **,__mbuf **,uint *,uint *)
IONetworkInterface::if_input_poll_gated(__ifnet *,uint,uint,__mbuf **,__mbuf **,uint *,uint *)
IONetworkInterface::if_ioctl(__ifnet *,ulong,void *)
IONetworkInterface::if_output(__ifnet *,__mbuf *)
IONetworkInterface::if_output_ctl(__ifnet *,uint,uint,void *)
IONetworkInterface::if_output_pre_enqueue(__ifnet *,__mbuf *)
IONetworkInterface::if_set_bpf_tap(__ifnet *,uint,int (*)(__ifnet *,__mbuf *))
IONetworkInterface::if_start(__ifnet *)
IONetworkInterface::if_start_gated(__ifnet *)
IONetworkInterface::if_start_precheck(__ifnet *)
IONetworkInterface::init(IONetworkController *)
IONetworkInterface::initIfnetParams(ifnet_init_params *)
IONetworkInterface::inputPacket(__mbuf *,uint,uint,void *)
IONetworkInterface::isPrimaryInterface(void)
IONetworkInterface::isRegistered(void)
IONetworkInterface::message(uint,IOService *,void *)
IONetworkInterface::newUserClient(task *,void *,uint,IOUserClient **)
IONetworkInterface::performCommand(IONetworkController *,ulong,void *,void *)
IONetworkInterface::performGatedCommand(void *,void *,void *,void *,void *)
IONetworkInterface::powerChangeHandler(void *,void *,void *)
IONetworkInterface::powerStateDidChangeTo(ulong,ulong,IOService *)
IONetworkInterface::powerStateWillChangeTo(ulong,ulong,IOService *)
IONetworkInterface::pushInputPacket(__mbuf *,uint)
IONetworkInterface::pushInputQueue(IOMbufQueue *)
IONetworkInterface::registerOutputHandler(OSObject *,uint (OSObject::*)(__mbuf *,void *))
IONetworkInterface::removeNetworkData(OSSymbol const*)
IONetworkInterface::removeNetworkData(char const*)
IONetworkInterface::reportDataTransferRates(ulong long,ulong long,ulong long,ulong long)
IONetworkInterface::reportDatapathIssue(int,void *,ulong long)
IONetworkInterface::serializeProperties(OSSerialize *)
IONetworkInterface::setFlags(ushort,ushort)
IONetworkInterface::setInterfaceState(uint,uint)
IONetworkInterface::setInterfaceType(uchar)
IONetworkInterface::setMaxTransferUnit(uint)
IONetworkInterface::setMediaAddressLength(uchar)
IONetworkInterface::setMediaHeaderLength(uchar)
IONetworkInterface::setUnitNumber(ushort)
IONetworkInterface::signalOutputThread(uint)
IONetworkInterface::startOutputThread(uint)
IONetworkInterface::syncSIOCGIFMEDIA(IONetworkController *,ifreq *,ulong)
IONetworkInterface::syncSIOCSIFMEDIA(IONetworkController *,ifreq *)
IONetworkInterface::syncSIOCSIFMTU(IONetworkController *,ifreq *)
IONetworkInterface::willTerminate(IOService *,uint)
IONetworkMedium::addMedium(OSDictionary *,IONetworkMedium const*)
IONetworkMedium::free(void)
IONetworkMedium::getKey(void)
IONetworkMedium::getMediumWithType(OSDictionary const*,uint,uint)
IONetworkMedium::init(uint,ulong long,uint,uint,char const*)
IONetworkMedium::isEqualTo(IONetworkMedium const*)
IONetworkMedium::isEqualTo(OSMetaClassBase const*)
IONetworkMedium::medium(uint,ulong long,uint,uint,char const*)
IONetworkMedium::nameForType(uint)
IONetworkMedium::serialize(OSSerialize *)
IONetworkStack::asyncWork(void)
IONetworkStack::attachNetworkInterfaceToBSD(IONetworkInterface *)
IONetworkStack::didTerminate(IOService *,uint,bool *)
IONetworkStack::free(void)
IONetworkStack::getNextAvailableUnitNumber(char const*,uint)
IONetworkStack::handleSystemSleep(void *,void *,uint,IOService *,void *,ulong)
IONetworkStack::insertNetworkInterface(IONetworkInterface *)
IONetworkStack::interfacePublished(void *,IOService *,IONotifier *)
IONetworkStack::orderNetworkInterfaces(OSMetaClassBase const*,OSMetaClassBase const*,void *)
IONetworkStack::registerAllNetworkInterfaces(void)
IONetworkStack::registerNetworkInterface(IONetworkInterface *,uint,bool)
IONetworkStack::removeNetworkInterface(IONetworkInterface *)
IONetworkStack::reserveInterfaceUnitNumber(IONetworkInterface *,uint,bool,bool *)
IONetworkStack::setProperties(OSObject *)
IONetworkStack::start(IOService *)
IONetworkStack::stop(IOService *)
IONetworkStackUserClient::clientClose(void)
IONetworkStackUserClient::clientDied(void)
IONetworkStackUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IONetworkStackUserClient::setProperties(OSObject *)
IONetworkStackUserClient::start(IOService *)
IONetworkUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IONetworkUserClient::free(void)
IONetworkUserClient::getNetworkDataCapacity(uint,ulong long *)
IONetworkUserClient::getNetworkDataHandle(char const*,uint *,uint,uint *)
IONetworkUserClient::readNetworkData(uint,void *,uint *)
IONetworkUserClient::resetNetworkData(uint)
IONetworkUserClient::setProperties(OSObject *)
IONetworkUserClient::start(IOService *)
IONetworkUserClient::withTask(task *)
IONetworkUserClient::writeNetworkData(uint,void *,uint)
IONotifyOrdering(OSMetaClassBase const*,OSMetaClassBase const*,void *)
IOOutputQueue::cancelServiceThread(void)
IOOutputQueue::free(void)
IOOutputQueue::init(void)
IOOutputQueue::runServiceThread(void *,void *)
IOOutputQueue::scheduleServiceThread(void *)
IOPCI2PCIBridge::addPowerChild(IOService *)
IOPCI2PCIBridge::allocateBridgeInterrupts(IOService *)
IOPCI2PCIBridge::configRead16(IOPCIAddressSpace,uchar)
IOPCI2PCIBridge::configRead32(IOPCIAddressSpace,uchar)
IOPCI2PCIBridge::configRead8(IOPCIAddressSpace,uchar)
IOPCI2PCIBridge::configWrite16(IOPCIAddressSpace,uchar,ushort)
IOPCI2PCIBridge::configWrite32(IOPCIAddressSpace,uchar,uint)
IOPCI2PCIBridge::configWrite8(IOPCIAddressSpace,uchar,uchar)
IOPCI2PCIBridge::configure(IOService *)
IOPCI2PCIBridge::configure(IOService *)
IOPCI2PCIBridge::createEventSource(IOPCIDevice *,OSObject *,void (*)(OSObject *,IOPCIEventSource *,IOPCIEvent const*),uint)
IOPCI2PCIBridge::enableLTR(IOPCIDevice *,bool)
IOPCI2PCIBridge::ioDeviceMemory(void)
IOPCI2PCIBridge::probe(IOService *,int *)
IOPCI2PCIBridge::publishNub(IOPCIDevice *,uint)
IOPCI2PCIBridge::saveDeviceState(IOPCIDevice *,uint)
IOPCI2PCIBridge::setDeviceASPMState(IOPCIDevice *,IOService *,uint)
IOPCI2PCIBridge::stop(IOService *)
IOPCI2PCIBridge::systemWillShutdown(uint)
IOPCI2PCIBridge__fn_0x638
IOPCIBridge::_restoreDeviceState(IOPCIDevice *,uint)
IOPCIBridge::addBridgeMemoryRange(ulong long,ulong long,bool)
IOPCIBridge::checkProperties(IOPCIDevice *)
IOPCIBridge::compareAddressCell(uint,uint *,uint *)
IOPCIBridge::constructRange(IOPCIAddressSpace *,ulong long,ulong long,OSArray *)
IOPCIBridge::createEventSource(OSObject *,void (*)(OSObject *,IOPCIEventSource *,IOPCIEvent const*),uint)
IOPCIBridge::createNub(OSDictionary *)
IOPCIBridge::extendedFindPCICapability(IOPCIAddressSpace,uint,ulong long *)
IOPCIBridge::extendedFindPCICapability(IOPCIConfigEntry *,uint,ulong long *)
IOPCIBridge::findPCICapability(IOPCIAddressSpace,uchar,uchar *)
IOPCIBridge::free(void)
IOPCIBridge::getDTNubAddressing(IOPCIDevice *)
IOPCIBridge::init(OSDictionary *)
IOPCIBridge::initialPowerStateForDomainState(ulong)
IOPCIBridge::initialize(void)
IOPCIBridge::initializeNub(IOPCIDevice *,OSDictionary *)
IOPCIBridge::matchKeys(IOPCIDevice *,char const*,uint,uchar)
IOPCIBridge::matchNubWithPropertyTable(IOService *,OSDictionary *,int *)
IOPCIBridge::maxCapabilityForDomainState(ulong)
IOPCIBridge::pciMatchNub(IOPCIDevice *,OSDictionary *,int *)
IOPCIBridge::probeBus(IOService *,uchar)
IOPCIBridge::relocate(IOPCIDevice *,uint)
IOPCIBridge::removeDevice(IOPCIDevice *,uint)
IOPCIBridge::resolveInterrupts(IOPCIDevice *)
IOPCIBridge::resolveMSIInterrupts(IOService *,IOPCIDevice *,uint,uint)
IOPCIBridge::restoreMachineState(uint,IOPCIDevice *)
IOPCIBridge::restoreQRemove(IOPCIDevice *)
IOPCIBridge::setDeviceASPMBits(IOPCIDevice *,uint)
IOPCIBridge::setDeviceASPML1Bit(IOPCIDevice *,uint)
IOPCIBridge::setDeviceASPMState(IOPCIDevice *,IOService *,uint)
IOPCIBridge::setDeviceCLKREQBits(IOPCIDevice *,uint)
IOPCIBridge::setDeviceL1PMBits(IOPCIDevice *,uint)
IOPCIBridge::setDevicePowerState(IOPCIDevice *,ulong)
IOPCIBridge::setDevicePowerState(IOPCIDevice *,ulong)
IOPCIBridge::setProperties(OSObject *)
IOPCIBridge::setProperties(OSObject *)
IOPCIBridge::slotControlWrite(IOPCIDevice *,ushort,ushort)
IOPCIBridge::spaceFromProperties(IORegistryEntry *,IOPCIAddressSpace *)
IOPCIBridge::spaceFromProperties(OSDictionary *,IOPCIAddressSpace *)
IOPCIBridge::stop(IOService *)
IOPCIBridge::terminateChild(IOPCIDevice *)
IOPCIBridge::updateWakeReason(IOPCIDevice *)
IOPCIConfigurator::addHostBridge(IOPCIHostBridge *)
IOPCIConfigurator::applyConfiguration(IOPCIConfigEntry *,uint,bool)
IOPCIConfigurator::bridgeAllocateResources(IOPCIConfigEntry *,uint)
IOPCIConfigurator::bridgeConnectDeviceTree(IOPCIConfigEntry *)
IOPCIConfigurator::bridgeDeallocateChildRanges(IOPCIConfigEntry *,IOPCIConfigEntry *)
IOPCIConfigurator::bridgeProbeBusRange(IOPCIConfigEntry *,uint)
IOPCIConfigurator::bridgeRemoveChild(IOPCIConfigEntry *,IOPCIConfigEntry *)
IOPCIConfigurator::cardbusProbeRanges(IOPCIConfigEntry *,uint)
IOPCIConfigurator::configOp(IOService *,ulong,void *,void *)
IOPCIConfigurator::configure(uint)
IOPCIConfigurator::constructAddressingProperties(IOPCIConfigEntry *,OSDictionary *)
IOPCIConfigurator::constructProperties(IOPCIConfigEntry *)
IOPCIConfigurator::createRoot(void)
IOPCIConfigurator::findEntry(IORegistryEntry *,IOPCIAddressSpace)
IOPCIConfigurator::findPCICapability(IORegistryEntry *,IOPCIAddressSpace,uint,uint *)
IOPCIConfigurator::init(IOWorkLoop *,uint)
IOPCIConfigurator::markChanged(IOPCIConfigEntry *)
IOPCIConfigurator::safeProbeBaseAddressRegister(IOPCIConfigEntry *,uint,uint,bool)
IOPCIDevice::ConfigureInterrupts_Impl(uint,uint,uint,uint)
IOPCIDevice::ConfigureInterrupts_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint,uint,uint))
IOPCIDevice::EnablePCIPowerManagement_Impl(ulong long)
IOPCIDevice::FindPCICapability_Impl(uint,ulong long,ulong long *)
IOPCIDevice::GetBusDeviceFunction_Impl(uchar *,uchar *,uchar *)
IOPCIDevice::HasPCIPowerManagement_Impl(ulong long)
IOPCIDevice::RestoreDeviceState_Impl(uint)
IOPCIDevice::SaveDeviceState_Impl(uint)
IOPCIDevice::_CopyDeviceMemoryWithIndex_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,IOMemoryDescriptor **,IOService *))
IOPCIDevice::_Dispatch(IOPCIDevice*,IORPC)
IOPCIDevice::_ManageSession_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,bool,uint))
IOPCIDevice::_MemoryAccess_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long,ulong long,ulong long *,IOService *,uint))
IOPCIDevice::addPowerChild(IOService *)
IOPCIDevice::attach(IOService *)
IOPCIDevice::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOPCIDevice::checkLink(uint)
IOPCIDevice::compareName(OSString *,OSString **)
IOPCIDevice::configAccess(bool)
IOPCIDevice::configRead16(IOPCIAddressSpace,uchar)
IOPCIDevice::configRead32(IOPCIAddressSpace,uchar)
IOPCIDevice::configRead8(IOPCIAddressSpace,uchar)
IOPCIDevice::configWrite16(IOPCIAddressSpace,uchar,ushort)
IOPCIDevice::configWrite32(IOPCIAddressSpace,uchar,uint)
IOPCIDevice::configWrite8(IOPCIAddressSpace,uchar,uchar)
IOPCIDevice::configureInterrupts(uint,uint,uint,uint)
IOPCIDevice::copyAERErrorDescriptionForBit(bool,uint,char *,ulong)
IOPCIDevice::createEventSource(OSObject *,void (*)(OSObject *,IOPCIEventSource *,IOPCIEvent const*),uint)
IOPCIDevice::detach(IOService *)
IOPCIDevice::detachAbove(IORegistryPlane const*)
IOPCIDevice::enableACS(IOPCIDevice*,bool)
IOPCIDevice::enableLTR(IOPCIDevice*,bool)
IOPCIDevice::enablePCIPowerManagement(uint)
IOPCIDevice::extendedConfigRead16(ulong long)
IOPCIDevice::extendedConfigRead32(ulong long)
IOPCIDevice::extendedConfigRead8(ulong long)
IOPCIDevice::extendedConfigWrite16(ulong long,ushort)
IOPCIDevice::extendedConfigWrite32(ulong long,uint)
IOPCIDevice::extendedConfigWrite8(ulong long,uchar)
IOPCIDevice::extendedFindPCICapability(uint,ulong long *)
IOPCIDevice::findPCICapability(uchar,uchar *)
IOPCIDevice::free(void)
IOPCIDevice::getDeviceMemoryWithIndex(uint)
IOPCIDevice::getDeviceMemoryWithRegister(uchar)
IOPCIDevice::getProperty(OSSymbol const*)
IOPCIDevice::getResources(void)
IOPCIDevice::handleOpen(IOService *,uint,void *)
IOPCIDevice::init(IORegistryEntry *,IORegistryPlane const*)
IOPCIDevice::init(OSDictionary *)
IOPCIDevice::initReserved(void)
IOPCIDevice::ioDeviceMemory(void)
IOPCIDevice::ioRead16(ushort,IOMemoryMap *)
IOPCIDevice::ioRead32(ushort,IOMemoryMap *)
IOPCIDevice::ioRead8(ushort,IOMemoryMap *)
IOPCIDevice::ioWrite16(ushort,ushort,IOMemoryMap *)
IOPCIDevice::ioWrite32(ushort,uint,IOMemoryMap *)
IOPCIDevice::ioWrite8(ushort,uchar,IOMemoryMap *)
IOPCIDevice::mapDeviceMemoryWithRegister(uchar,uint)
IOPCIDevice::matchPropertyTable(OSDictionary *,int *)
IOPCIDevice::removePowerChild(IOPowerConnection *)
IOPCIDevice::requestProbe(uint)
IOPCIDevice::saveDeviceState(uint)
IOPCIDevice::setASPMState(IOService *,uint)
IOPCIDevice::setBusMasterEnable(bool)
IOPCIDevice::setConfigBits(uchar,uint,uint)
IOPCIDevice::setIOEnable(bool,bool)
IOPCIDevice::setLatencyTolerance(uint,ulong long)
IOPCIDevice::setMemoryEnable(bool)
IOPCIDevice::setPowerState(ulong,IOService *)
IOPCIDevice::setProperties(OSObject *)
IOPCIDevice::setTunnelL1Enable(IOService *,bool)
IOPCIDevice::updateWakeReason(ushort)
IOPCIDeviceDMAOriginator(IOPCIDevice *)
IOPCIDevice__powerStateWillChangeTo_unsigned_long__unsigned_long__IOService
IOPCIEventSource::MetaClass::alloc(void)
IOPCIEventSource::checkForWork(void)
IOPCIEventSource::disable(void)
IOPCIEventSource::enable(void)
IOPCIEventSource::free(void)
IOPCIEventSource::getHostBridgeData(void)
IOPCIEventSource::getHostBridgeData(void)
IOPCIEventSource::~IOPCIEventSource()
IOPCIHostBridge::configure(IOService *)
IOPCIHostBridge::free(void)
IOPCIHostBridge::probe(IOService *,int *)
IOPCIHostBridgeData::free(void)
IOPCIHostBridgeData::init(void)
IOPCIMessagedInterruptController::addDeviceInterruptProperties(IORegistryEntry *,uint,uint,int *)
IOPCIMessagedInterruptController::allocVectors(uint)
IOPCIMessagedInterruptController::allocateDeviceInterrupts(IOService *,uint,uint,ulong long *,uint *,uint,uint)
IOPCIMessagedInterruptController::allocateInterruptVectors(IOService *,uint,ulong long *)
IOPCIMessagedInterruptController::deallocateDeviceInterrupts(IOService *)
IOPCIMessagedInterruptController::deallocateInterrupt(uint)
IOPCIMessagedInterruptController::disableDeviceMSI(IOPCIDevice *)
IOPCIMessagedInterruptController::disableInterrupt(IOService *,int)
IOPCIMessagedInterruptController::disableVectorHard(int,IOInterruptVector *)
IOPCIMessagedInterruptController::enableDeviceMSI(IOPCIDevice *)
IOPCIMessagedInterruptController::enableInterrupt(IOService *,int)
IOPCIMessagedInterruptController::enableVector(int,IOInterruptVector *)
IOPCIMessagedInterruptController::getInterruptType(IOService *,int,int *)
IOPCIMessagedInterruptController::initDevice(IOPCIDevice *,IOPCIConfigSave *)
IOPCIMessagedInterruptController::registerInterrupt(IOService *,int,void *,void (*)(void *,void *,void *,int),void *)
IOPCIMessagedInterruptController::unregisterInterrupt(IOService *,int)
IOPCIRangeAppendSubRange(IOPCIRange **,IOPCIRange *)
IOPCIRangeCollapse(IOPCIRange *,ulong long)
IOPCIRangeInit(IOPCIRange *,uint,ulong long,ulong long,ulong long)
IOPCIRangeInitAlloc(IOPCIRange *,uint,ulong long,ulong long,ulong long)
IOPCIRangeListAddRange(IOPCIRange **,uint,ulong long,ulong long,ulong long)
IOPCIRangeListAllocateSubRange(IOPCIRange *,IOPCIRange *,ulong long)
IOPCIRangeListAllocateSubRange(IOPCIRange *,IOPCIRange *,ulong long)
IOPCIRangeListCollapse(IOPCIRange *,ulong long)
IOPCIRangeListDeallocateSubRange(IOPCIRange *,IOPCIRange *)
IOPCIRangeListLastFree(IOPCIRange *,ulong long)
IOPCIRangeListOptimize(IOPCIRange *)
IOPCIRangeOptimize(IOPCIRange *)
IOPCIRegisterPowerDriver(IOService *,bool)
IOPMCompletionQueue::MetaClass::MetaClass(void)
IOPMCompletionQueue::create(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMCompletionQueue*))
IOPMCompletionQueue::init(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMCompletionQueue*))
IOPMGR::enableCPUCore(uint)
IOPMGR::enableCPUCore(uint,ulong long)
IOPMPowerSource::MetaClass::MetaClass(void)
IOPMPowerSource::adapterInfo(void)
IOPMPowerSource::amperage(void)
IOPMPowerSource::atCriticalLevel(void)
IOPMPowerSource::atWarnLevel(void)
IOPMPowerSource::batteryInstalled(void)
IOPMPowerSource::capacityPercentRemaining(void)
IOPMPowerSource::currentCapacity(void)
IOPMPowerSource::cycleCount(void)
IOPMPowerSource::errorCondition(void)
IOPMPowerSource::externalChargeCapable(void)
IOPMPowerSource::externalConnected(void)
IOPMPowerSource::free(void)
IOPMPowerSource::getPSProperty(OSSymbol const*)
IOPMPowerSource::init(void)
IOPMPowerSource::isCharging(void)
IOPMPowerSource::legacyIOBatteryInfo(void)
IOPMPowerSource::location(void)
IOPMPowerSource::manufacturer(void)
IOPMPowerSource::maxCapacity(void)
IOPMPowerSource::model(void)
IOPMPowerSource::serial(void)
IOPMPowerSource::setAdapterInfo(int)
IOPMPowerSource::setAmperage(int)
IOPMPowerSource::setAtCriticalLevel(bool)
IOPMPowerSource::setAtWarnLevel(bool)
IOPMPowerSource::setBatteryInstalled(bool)
IOPMPowerSource::setCurrentCapacity(uint)
IOPMPowerSource::setCycleCount(uint)
IOPMPowerSource::setErrorCondition(OSSymbol *)
IOPMPowerSource::setExternalChargeCapable(bool)
IOPMPowerSource::setIsCharging(bool)
IOPMPowerSource::setLegacyIOBatteryInfo(OSDictionary *)
IOPMPowerSource::setLocation(int)
IOPMPowerSource::setManufacturer(OSSymbol *)
IOPMPowerSource::setMaxCapacity(uint)
IOPMPowerSource::setModel(OSSymbol *)
IOPMPowerSource::setPSProperty(OSSymbol const*,OSObject *)
IOPMPowerSource::setSerial(OSSymbol *)
IOPMPowerSource::setTimeRemaining(int)
IOPMPowerSource::setVoltage(uint)
IOPMPowerSource::timeRemaining(void)
IOPMPowerSource::voltage(void)
IOPMPowerSourceList::addToList(IOPMPowerSource *)
IOPMPowerSourceList::removeFromList(IOPMPowerSource *)
IOPMPowerSourceList__free
IOPMPowerSource__updateStatus
IOPMPowerStateQueue::checkForWork(void)
IOPMPowerStateQueue::init(OSObject *,void (*)(OSObject *,...))
IOPMRequest::attachNextRequest(IOPMRequest*)
IOPMRequest::attachRootRequest(IOPMRequest*)
IOPMRequestQueue::MetaClass::MetaClass(void)
IOPMRequestQueue::create(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMRequestQueue*))
IOPMRequestQueue::init(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMRequestQueue*))
IOPMServiceInterestNotifier::IOPMServiceInterestNotifier(OSMetaClass const*)
IOPMServiceInterestNotifier::IOPMServiceInterestNotifier(void)
IOPMServiceInterestNotifier::~IOPMServiceInterestNotifier()
IOPMWorkQueue::MetaClass::MetaClass(void)
IOPMWorkQueue::attachQuiesceRequest(IOPMRequest *)
IOPMWorkQueue::create(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMWorkQueue*),bool (*)(IOService *,IOPMRequest *,IOPMWorkQueue*))
IOPMWorkQueue::init(IOService *,bool (*)(IOService *,IOPMRequest *,IOPMWorkQueue*),bool (*)(IOService *,IOPMRequest *,IOPMWorkQueue*))
IOPMWorkQueue::signalWorkAvailable(void)
IOPMinformee::MetaClass::MetaClass(void)
IOPMinformee::initialize(IOService *)
IOPMinformeeList::addToList(IOPMinformee *)
IOPMinformeeList::findItem(IOService *)
IOPMinformeeList::getSharedRecursiveLock(void)
IOPMinformeeList__free
IOPMinformee__free
IOPMrootDomain::IOPMrootDomain(OSMetaClass const*)
IOPMrootDomain::IOPMrootDomain(void)
IOPMrootDomain::MetaClass::MetaClass(void)
IOPMrootDomain::aotEvaluate(IOTimerEventSource *)
IOPMrootDomain::aotShouldExit(bool,bool)
IOPMrootDomain::broadcastAggressives(AggressivesRecord const*,int)
IOPMrootDomain::checkSystemCanSleep(uint)
IOPMrootDomain::copyPMSetting(OSSymbol *)
IOPMrootDomain::copyProperty(char const*)
IOPMrootDomain::copySleepPreventersList(OSArray **,OSArray **)
IOPMrootDomain::copySleepPreventersListWithID(OSArray **,OSArray **)
IOPMrootDomain::copyWakeReasonString(char *,ulong)
IOPMrootDomain::createPMAssertion(ulong long,uint,IOService *,char const*)
IOPMrootDomain::getNotificationClientName(OSObject *)
IOPMrootDomain::getPMAssertionLevel(ulong long)
IOPMrootDomain::getRUN_STATE(void)
IOPMrootDomain::getWatchdogTimeout(void)
IOPMrootDomain::idleSleepPreventersCount(void)
IOPMrootDomain::kdebugTrace(uint,ulong long,ulong,ulong,ulong)
IOPMrootDomain::pmStatsRecordEvent(int,ulong long)
IOPMrootDomain::privateSleepSystem(uint)
IOPMrootDomain::publishFeature(char const*,uint,uint *)
IOPMrootDomain::publishPMSetting(OSSymbol const*,uint,uint *)
IOPMrootDomain::receivePowerNotification(uint)
IOPMrootDomain::releasePMAssertion(ulong long)
IOPMrootDomain::removePublishedFeature(uint)
IOPMrootDomain::reportUserInput(void)
IOPMrootDomain::restartWithStackshot(void)
IOPMrootDomain::sendClientClamshellNotification(void)
IOPMrootDomain::serializeProperties(OSSerialize *)
IOPMrootDomain::setMaintenanceWakeCalendar(IOPMCalendarStruct const*)
IOPMrootDomain::setPMAssertionLevel(ulong long,uint)
IOPMrootDomain::setPMAssertionUserLevels(ulong long)
IOPMrootDomain::setSleepSupported(uint)
IOPMrootDomain::setThermalState(OSObject *)
IOPMrootDomain::shouldSleepOnClamshellClosed(void)
IOPMrootDomain::shouldSleepOnRTCAlarmWake(void)
IOPMrootDomain::sleepSystem(void)
IOPMrootDomain::sleepSystemOptions(OSDictionary *)
IOPMrootDomain::sleepWakeDebugTrig(bool)
IOPMrootDomain::startSpinDump(uint)
IOPMrootDomain::synchronizeAggressives(queue_entry *,AggressivesRecord const*,int)
IOPMrootDomain::systemPowerEventOccurred(OSSymbol const*,OSObject *)
IOPMrootDomain::systemPowerEventOccurred(OSSymbol const*,uint)
IOPMrootDomain::updatePreventIdleSleepList(IOService *,bool)
IOPMrootDomain::updateTasksSuspend(void)
IOPMrootDomain::~IOPMrootDomain()
IOPMrootDomain__configureReport_IOReportChannelList___unsigned_int__void___void
IOPMrootDomain__updateReport_IOReportChannelList___unsigned_int__void___void
IOPRxCommand::MetaClass::alloc(void)
IOPTxCommand::IOPTxCommand(void)
IOPTxCommand::MetaClass::alloc(void)
IOPTxCommand::init(void)
IOPacketQueue::dequeue(void)
IOPacketQueue::enqueue(IOPacketQueue*)
IOPacketQueue::enqueue(__mbuf *)
IOPacketQueue::enqueueWithDrop(__mbuf *)
IOPacketQueue::free(void)
IOPacketQueue::initWithCapacity(uint)
IOPacketQueue::lockDequeue(void)
IOPacketQueue::lockDequeueAll(void)
IOPacketQueue::lockEnqueue(__mbuf *)
IOPacketQueue::lockEnqueueWithDrop(__mbuf *)
IOPacketQueue::lockFlush(void)
IOPacketQueue::lockPrepend(__mbuf *)
IOPacketQueue::prepend(IOPacketQueue*)
IOPacketQueue::prepend(__mbuf *)
IOPacketQueue::withCapacity(uint)
IOPanicPlatform::start(IOService *)
IOPartitionScheme::attachMediaObjectToDeviceTree(IOMedia *)
IOPartitionScheme::detachMediaObjectFromDeviceTree(IOMedia *)
IOPartitionScheme::free(void)
IOPartitionScheme::handleClose(IOService *,uint)
IOPartitionScheme::handleIsOpen(IOService const*)
IOPartitionScheme::handleOpen(IOService *,uint,void *)
IOPartitionScheme::init(OSDictionary *)
IOPartitionScheme::juxtaposeMediaObjects(OSSet *,OSSet *)
IOPearlCameraContext::free(void)
IOPearlCameraContext::isFrameDebugLoggingInitialized(void)
IOPearlCameraContext::isLoggingFramesEnabled(void)
IOPearlCameraContext::startNewFrameSequence(PearlCamSequenceType)
IOPearlCameraFrame::equalsFrameId(frame_id_t)
IOPearlCameraFrame::setFrameForProcessing(void)
IOPearlFrameDebug::free(void)
IOPearlSharedMemoryTransferQueue::free(void)
IOPearlSharedMemoryTransferQueue::releaseAllObjects(void)
IOPerfControlClient::markEntryStarted(ulong long,bool)
IOPerfControlClient__registerPerformanceController_IOPerfControlClient__PerfControllerInterface
IOPerfControlWorkContext__init
IOPlatformActionsInitialize(void)
IOPlatformDevice::compareName(OSString *,OSString **)
IOPlatformDevice::getResources(void)
IOPlatformExpert::MetaClass::MetaClass(void)
IOPlatformExpert::PMRegisterDevice(IOService *,IOService *)
IOPlatformExpert::RegisterServiceInTree(IOService *,OSDictionary *,OSDictionary *,IOService *)
IOPlatformExpert::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOPlatformExpert::compareNubName(IOService const*,OSString *,OSSharedPtr<OSString> &)
IOPlatformExpert::configure(IOService *)
IOPlatformExpert::deregisterInterruptController(OSSymbol *)
IOPlatformExpert::getConsoleInfo(PE_Video *)
IOPlatformExpert::getPhysicalRangeAllocator(void)
IOPlatformExpert::getUTCTimeOfDay(ulong *,uint *)
IOPlatformExpert::haltRestart(uint)
IOPlatformExpert::lookUpInterruptController(OSSymbol *)
IOPlatformExpert::registerInterruptController(OSSymbol *,IOInterruptController *)
IOPlatformExpert::setCPUInterruptProperties(IOService *)
IOPlatformExpert::setConsoleInfo(PE_Video *,uint)
IOPlatformExpert::setUTCTimeOfDay(ulong,uint)
IOPlatformExpertDevice::configureDefaults(void)
IOPlatformExpertDevice::free(void)
IOPlatformExpertDevice::generatePlatformUUID(void)
IOPlatformExpertDevice::init(void *)
IOPlatformExpertDevice::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOPlatformExpertDevice::startIOServiceMatching(void)
IOPlatformExpert__lookUpInterruptController_OSSymbol
IOPlatformExpert__lookUpInterruptController_OSSymbol_0
IOPlatformExpert__platformAdjustService_IOService
IOPlatformExpert__start_IOService
IOPlatformIO::start(IOService *)
IOPolledFileClose(IOPolledFileIOVars **,long long,void *,ulong,long long,long long)
IOPolledFileOpen(char const*,uint,ulong long,ulong long,void *,ulong,IOPolledFileIOVars **,OSSharedPtr<OSData> &,uchar *,ulong *)
IOPolledFilePollers::copyPollers(IOService *)
IOPort::MetaClass::alloc(void)
IOPort::_copyPortForService(IOService const*,bool,bool,ulong long)
IOPort::_createPortDescription(void)
IOPort::_createSupportedTransportsArray(void)
IOPort::_findPortNumberReservation(IOPortType,IOPortNumber,IOPortNumber,IOPortNumber,bool,uint *)
IOPort::_getConnectionActive(void)
IOPort::_handleNotification(void *,int,AppleNotificationQueue *)
IOPort::_releasePortNumber(IOPortType,IOPortNumber)
IOPort::_requestPortNumber(IOPortType,IOPortNumber *)
IOPort::_reservePortNumber(IOPortType,IOPortNumber)
IOPort::_setSupportedFeaturesForRegistryEntry(IORegistryEntry *)
IOPort::_setSupportedTransportsForRegistryEntry(IORegistryEntry *)
IOPort::_updateProvisionedTransports(void)
IOPort::_validatePortNumber(uint)
IOPort::addTransport(IOPortTransportState *)
IOPort::copyParentPort(void)
IOPort::copyPortWithTypeAndNumber(IOPortType,uint,bool,ulong long)
IOPort::copyTransport(IOPortTransportStateTransportType)
IOPort::free(void)
IOPort::getPortDescription(void)
IOPort::getPortTypeString(IOPortType)
IOPort::init(OSDictionary *)
IOPort::initPortType(IOPortType)
IOPort::initWithPortTypeAndNumber(IOPortType,IOPortNumber,OSDictionary *)
IOPort::isFeatureSupported(IOPortFeature)
IOPort::isTransportProvisioned(IOPortTransportStateTransportType)
IOPort::isTransportSupported(IOPortTransportStateTransportType)
IOPort::messageClients(uint,void *,ulong)
IOPort::portMatching(IOPortType,uint)
IOPort::removeTransport(IOPortTransportStateTransportType)
IOPort::removeTransports(void)
IOPort::setLDCMLiquidDetected(bool)
IOPort::setLDCMMeasurementStatus(IOPortLDCMMeasurementStatus)
IOPort::setLDCMMitigationsEnabled(bool)
IOPort::setLDCMState(IOPortLDCMState)
IOPort::setLDCMUserOverrideActive(bool)
IOPort::start(IOService *)
IOPort::stop(IOService *)
IOPort::updateAllProperties(void)
IOPort::~IOPort()
IOPortTransportState::_addHashToCache(void)
IOPortTransportState::_createSHA256Hash(OSData *)
IOPortTransportState::_createTransportDescription(void)
IOPortTransportState::_getACMTRMState(IOPortTransportStateTRMState *,IOPortTransportStateTRMGracePeriodReason *,bool *)
IOPortTransportState::_handleNotification(void *,int,AppleNotificationQueue *)
IOPortTransportState::_initIndex(void)
IOPortTransportState::_serialize(void *,OSSerialize *)
IOPortTransportState::_updatePreDefinedMetadataProperties(void)
IOPortTransportState::_updateTRMState(void)
IOPortTransportState::free(void)
IOPortTransportState::getTransportTypeString(void)
IOPortTransportState::handleMetadataChanges(OSDictionary *,OSDictionary *,bool)
IOPortTransportState::handlePropertyChanges(void)
IOPortTransportState::handleServiceReregistration(void)
IOPortTransportState::handleStateChange(void)
IOPortTransportState::init(OSDictionary *)
IOPortTransportState::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportState::isTRMSupported(void)
IOPortTransportState::mergeMetadata(OSDictionary *)
IOPortTransportState::messageClients(uint,void *,ulong)
IOPortTransportState::propertyChanged(void)
IOPortTransportState::queueServiceReregistration(void)
IOPortTransportState::registerService(uint)
IOPortTransportState::removeMetadata(OSSet *)
IOPortTransportState::removeMetadata(char const*,OSObject *)
IOPortTransportState::setActive(bool)
IOPortTransportState::setAuthenticationRequired(bool)
IOPortTransportState::setAuthenticationStatus(IOPortTransportStateAuthenticationStatus)
IOPortTransportState::setAuthenticationTimeout(ushort)
IOPortTransportState::setDriverStatus(IOPortTransportStateDriverStatus)
IOPortTransportState::setHash(OSData const*)
IOPortTransportState::setMetadata(OSDictionary *)
IOPortTransportState::setMetadata(char const*,OSObject *)
IOPortTransportState::start(IOService *)
IOPortTransportState::stop(IOService *)
IOPortTransportState::transportMatching(IOPortTransportStateTransportType,IOPortType,uint,IOPortType,uint,int)
IOPortTransportState::transportMatchingForService(IOService const*,IOPortTransportStateTransportType)
IOPortTransportState::updateAllProperties(void)
IOPortTransportState::withTransportType(IOPortTransportStateTransportType)
IOPortTransportStateCC::free(void)
IOPortTransportStateCC::init(OSDictionary *)
IOPortTransportStateCC::start(IOService *)
IOPortTransportStateCIO::MetaClass::alloc(void)
IOPortTransportStateCIO::init(OSDictionary *)
IOPortTransportStateCIO::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportStateCIO::isTunneledTransportSupported(IOPortTransportStateTransportType)
IOPortTransportStateCIO::updateAllProperties(void)
IOPortTransportStateCIO::~IOPortTransportStateCIO()
IOPortTransportStateDisplayPort::free(void)
IOPortTransportStateDisplayPort::init(OSDictionary *)
IOPortTransportStateDisplayPort::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportStateDisplayPort::start(IOService *)
IOPortTransportStateDisplayPort::stop(IOService *)
IOPortTransportStateDisplayPort::transport(void)
IOPortTransportStateDisplayPort::updateAllProperties(void)
IOPortTransportStateOrderedSet::orderFunction(OSMetaClassBase const*,OSMetaClassBase const*,void *)
IOPortTransportStateOrderedSet::withCapacity(uint)
IOPortTransportStateUSB2::init(OSDictionary *)
IOPortTransportStateUSB2::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportStateUSB2::updateAllProperties(void)
IOPortTransportStateUSB3::init(OSDictionary *)
IOPortTransportStateUSB3::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportStateUSB3::updateAllProperties(void)
IOPortTransportStateUSB::getDataRoleString(void)
IOPortTransportStateUSB::getGenerationString(void)
IOPortTransportStateUSB::initWithTransportType(IOPortTransportStateTransportType,OSDictionary *)
IOPortTransportStateUSB::setDataRole(IOPortTransportStateUSBDataRole)
IOPortTransportStateUSB::setLegacy30PinAccessory(bool)
IOPortTransportStateUSB::start(IOService *)
IOPortTransportStateUSB::updateAllProperties(void)
IOPortTransportUserClient::clientClose(void)
IOPortTransportUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOPortTransportUserClient::setAuthenticationStatus(IOPortTransportUserClient*,void *,IOExternalMethodArguments *)
IOPortTransportUserClient::start(IOService *)
IOPortTransportUserClient::stop(IOService *)
IOPortTransportUserClient::willTerminate(IOService *,uint)
IOPortTunnelingTransportState::_createTunneledTransportsProvisionedArray(bool)
IOPortTunnelingTransportState::_createTunneledTransportsSupportedArray(void)
IOPortTunnelingTransportState::_updateTunneledTransportsProvisioned(void)
IOPortTunnelingTransportState::copyTunneledTransports(IOPortTransportStateTransportType)
IOPortTunnelingTransportState::messageClients(uint,void *,ulong)
IOPortTunnelingTransportState::removeTunneledTransport(IOPortTransportState *)
IOPortTunnelingTransportState::removeTunneledTransports(void)
IOPortTunnelingTransportState::start(IOService *)
IOPortTunnelingTransportState::stop(IOService *)
IOPortTunnelingTransportState::updateAllProperties(void)
IOPowerConnection::MetaClass::MetaClass(void)
IORTC::getUTCTimeOfDay(ulong *,uint *)
IORTC::setUTCTimeOfDay(ulong,uint)
IORangeAllocator::allocate(ulong long,ulong long *,ulong long)
IORangeAllocator::allocateRange(ulong long,ulong long)
IORangeAllocator::deallocElement(uint)
IORangeAllocator::deallocate(ulong long,ulong long)
IORangeAllocator::getFreeCount(void)
IORangeAllocator::serialize(OSSerialize *)
IORangeAllocator__free
IORangeAllocator__init_unsigned_long_long__unsigned_long_long__unsigned_int__unsigned_int
IORecursiveLockLock
IORegFlex::ioRegFlexWriteBlock(M2ScalerCSCRequest *,registerGroup_t,IORegFlexBase_t,uint,uint,uint const*,uint,bool,bool)
IORegistryEntry::applyToChildren(void (*)(IORegistryEntry*,void *),void *,IORegistryPlane const*)
IORegistryEntry::applyToParents(void (*)(IORegistryEntry*,void *),void *,IORegistryPlane const*)
IORegistryEntry::compareName(OSString *,OSSharedPtr<OSString> &)
IORegistryEntry::compareName(OSString *,OSString **)
IORegistryEntry::compareNames(OSObject *,OSSharedPtr<OSString> &)
IORegistryEntry::compareNames(OSObject *,OSString **)
IORegistryEntry::copyChildEntry(IORegistryPlane const*)
IORegistryEntry::copyLocation(IORegistryPlane const*)
IORegistryEntry::copyName(IORegistryPlane const*)
IORegistryEntry::copyParentEntry(IORegistryPlane const*)
IORegistryEntry::copyProperty(OSString const*,IORegistryPlane const*,uint)
IORegistryEntry::copyProperty(OSSymbol const*,IORegistryPlane const*,uint)
IORegistryEntry::copyProperty(char const*,IORegistryPlane const*,uint)
IORegistryEntry::copyPropertyKeys(void)
IORegistryEntry::dealiasPath(char const**,IORegistryPlane const*)
IORegistryEntry::detachAbove(IORegistryPlane const*)
IORegistryEntry::detachAll(IORegistryPlane const*)
IORegistryEntry::getChildCount(IORegistryPlane const*)
IORegistryEntry::getChildEntry(IORegistryPlane const*)
IORegistryEntry::getChildFromComponent(char const**,IORegistryPlane const*)
IORegistryEntry::getChildIterator(IORegistryPlane const*)
IORegistryEntry::getChildSetReference(IORegistryPlane const*)
IORegistryEntry::getDepth(IORegistryPlane const*)
IORegistryEntry::getIndexedProperty(uint)
IORegistryEntry::getLocation(IORegistryPlane const*)
IORegistryEntry::getName(IORegistryPlane const*)
IORegistryEntry::getParentEntry(IORegistryPlane const*)
IORegistryEntry::getParentIterator(IORegistryPlane const*)
IORegistryEntry::getParentSetReference(IORegistryPlane const*)
IORegistryEntry::getPlane(char const*)
IORegistryEntry::getProperty(OSString const*,IORegistryPlane const*,uint)
IORegistryEntry::getProperty(OSSymbol const*,IORegistryPlane const*,uint)
IORegistryEntry::getProperty(char const*)
IORegistryEntry::getProperty(char const*,IORegistryPlane const*,uint)
IORegistryEntry::hasAlias(IORegistryPlane const*,char *,int *)
IORegistryEntry::inPlane(IORegistryPlane const*)
IORegistryEntry::matchPathLocation(char const*,IORegistryPlane const*)
IORegistryEntry::propertyExists(OSString const*)
IORegistryEntry::propertyExists(OSString const*,IORegistryPlane const*,uint)
IORegistryEntry::propertyExists(OSSymbol const*)
IORegistryEntry::propertyExists(OSSymbol const*,IORegistryPlane const*,uint)
IORegistryEntry::propertyExists(char const*)
IORegistryEntry::propertyExists(char const*,IORegistryPlane const*,uint)
IORegistryEntry::propertyHasValue(OSString const*,OSObject const*)
IORegistryEntry::propertyHasValue(OSString const*,OSObject const*,IORegistryPlane const*,uint)
IORegistryEntry::propertyHasValue(OSSymbol const*,OSObject const*)
IORegistryEntry::propertyHasValue(OSSymbol const*,OSObject const*,IORegistryPlane const*,uint)
IORegistryEntry::propertyHasValue(char const*,OSObject const*)
IORegistryEntry::propertyHasValue(char const*,OSObject const*,IORegistryPlane const*,uint)
IORegistryEntry::removeProperty(char const*)
IORegistryEntry::runPropertyActionBlock(int ( {block_pointer})(void))
IORegistryEntry::setLocation(char const*,IORegistryPlane const*)
IORegistryEntry::setName(char const*,IORegistryPlane const*)
IORegistryEntry::setProperty(char const*,OSObject *)
IORegistryEntry::setProperty(char const*,bool)
IORegistryEntry::setProperty(char const*,char const*)
IORegistryEntry::setProperty(char const*,ulong long,uint)
IORegistryEntry::setProperty(char const*,void *,uint)
IORegistryEntry__attachToChild_IORegistryEntry___IORegistryPlane_const
IORegistryEntry__attachToParent_IORegistryEntry___IORegistryPlane_const
IORegistryEntry__copyProperty_OSString_const___const
IORegistryEntry__copyProperty_OSSymbol_const___const
IORegistryEntry__copyProperty_char_const___const
IORegistryEntry__detachFromChild_IORegistryEntry___IORegistryPlane_const
IORegistryEntry__detachFromParent_IORegistryEntry___IORegistryPlane_const
IORegistryEntry__dictionaryWithProperties___const
IORegistryEntry__getPathComponent_char___int___IORegistryPlane_const___const
IORegistryEntry__getProperty_OSSymbol_const___const
IORegistryEntry__isChild_IORegistryEntry___IORegistryPlane_const___bool__const
IORegistryEntry__isParent_IORegistryEntry___IORegistryPlane_const___bool__const
IORegistryEntry__removeProperty_OSSymbol_const
IORegistryEntry__runPropertyAction_int_____OSObject___void___void___void___void____OSObject___void___void___void___void
IORegistryEntry__serializeProperties_OSSerialize___const
IORegistryEntry__setLocation_OSSymbol_const___IORegistryPlane_const
IORegistryEntry__setName_OSSymbol_const___IORegistryPlane_const
IORegistryEntry__setPropertyTable_OSDictionary
IORegistryEntry__setProperty_OSSymbol_const___OSObject
IORegistryIterator::enterEntry(void)
IORegistryIterator::exitEntry(void)
IORegistryIterator::getCurrentEntry(void)
IORegistryIterator::getNextObject(void)
IORegistryIterator::getNextObjectFlat(void)
IORegistryIterator::getNextObjectRecursive(void)
IORegistryIterator::isValid(void)
IORegistryIterator::iterateAll(void)
IORegistryIterator::reset(void)
IORegistryIterator__free
IORegistryPlane::MetaClass::MetaClass(void)
IORegistryPlane::serialize(OSSerialize *)
IORemoveServicePlatformActions(IOService *)
IOReportHub::callConfigureReport(OSDictionary *,uint,int *)
IOReportHub::getValues(OSDictionary *,IOBufferMemoryDescriptor *)
IOReportHub::start(IOService *)
IOReportLegend::addLegendEntry(OSDictionary *,char const*,char const*)
IOReportLegend::addReporterLegend(IOReporter *,char const*,char const*)
IOReportLegend::addReporterLegend(IOService *,IOReporter *,char const*,char const*)
IOReportLegend::initWith(OSArray *)
IOReportLegend::organizeLegend(OSDictionary *,OSSymbol const*,OSSymbol const*)
IOReportLegend::with(OSArray *)
IOReportLegend::~IOReportLegend()
IOReportUserClient::MetaClass::alloc(void)
IOReportUserClient::_close(IOReportUserClient*,void *,IOExternalMethodArguments *)
IOReportUserClient::_configureInterests(IOReportInterestList *,ulong long *)
IOReportUserClient::_getInterests(ulong long,OSDictionary **,IOBufferMemoryDescriptor **)
IOReportUserClient::_getValues(ulong long)
IOReportUserClient::_open(IOReportUserClient*,void *,IOExternalMethodArguments *)
IOReportUserClient::clientClose(void)
IOReportUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOReportUserClient::close(void)
IOReportUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOReportUserClient::free(void)
IOReportUserClient::goto_configureInterests(IOReportUserClient*,void *,IOExternalMethodArguments *)
IOReportUserClient::goto_getValues(IOReportUserClient*,void *,IOExternalMethodArguments *)
IOReportUserClient::initWithTask(task *,void *,uint)
IOReportUserClient::start(IOService *)
IOReportUserClient::stop(IOService *)
IOReportUserClient::~IOReportUserClient()
IOReporter::IOReporter(OSMetaClass const*)
IOReporter::IOReporter(void)
IOReporter::configureAllReports(OSSet *,IOReportChannelList *,uint,void *,void *)
IOReporter::configureReport(IOReportChannelList *,uint,void *,void *)
IOReporter::copyElementValues(int,IOReportElementValues *)
IOReporter::createLegend(void)
IOReporter::getChannelIndex(ulong long,int *)
IOReporter::getElementValues(int)
IOReporter::getFirstElementIndex(ulong long,int *)
IOReporter::handleCreateLegend(void)
IOReporter::handleUpdateReport(IOReportChannelList *,uint,void *,void *)
IOReporter::initialize(void)
IOReporter::legendWith(OSArray *,OSArray *,IOReportChannelType,ulong long)
IOReporter::legendWith(ulong long const*,char const**,int,IOReportChannelType,ulong long)
IOReporter::lockReporterConfig(void)
IOReporter::~IOReporter()
IORequest::complete(int,ulong long)
IORequest::deinit(void)
IORequest::prepare(IOStorageCompletion *,IOMemoryDescriptor *,ulong long *,ulong long *)
IORequest::reset(void)
IORequest::signalCompleted(int)
IORequest::waitForCompletion(void)
IORequestsPool::deinit(void)
IORequestsPool::getReguest(void)
IORequestsPool::init(uint,uint,uchar,uint,IOMapper *)
IORequestsPool::putRequest(IORequest *)
IOResources::getWorkLoop(void)
IOResourcesMatchPropertyTable(IOService *,OSDictionary *)
IORootParent::initialize(void)
IORootParent::start(IOService *)
IOSA::IOFBSAGammaLUT::IOFBSAGammaLUT(IOSA::IOFBSAGammaLUT::Function,uint,bool,IOSA::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOSA::IOFBSAGammaLUT::IOFBSAGammaLUT(uint,uint,uint,IOSA::IOFBSAGammaLUT::ControlPoint const*,uint,bool,IOSA::IOFBSAGammaLUT::Function)
IOSA::IOFBSAGammaLUT::do_init(IOSA::IOFBSAGammaLUT::Evaluator *,uint,bool,IOSA::IOFBSAGammaLUT::ControlPoint const*,uint,uint,uint)
IOSA::IOFBSAGammaLUT::release(void)
IOSA::IOFBSAGammaLUT::~IOFBSAGammaLUT()
IOSA::pq_degamma(double)
IOSA::sRGB_degamma(double)
IOSA::sRGB_engamma(double)
IOSARTMapper::MetaClass::alloc(void)
IOSARTMapper::_addRegion(ulong,uint,bool)
IOSARTMapper::_addRegion(ulong,uint,bool)
IOSARTMapper::_findRegion(ulong)
IOSARTMapper::_removeRegion(int)
IOSARTMapper::_setActive(bool)
IOSARTMapper::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOSARTMapper::iovmInsert(uint,ulong long,ulong long,ulong long,ulong long)
IOSARTMapper::iovmInsert(uint,ulong long,ulong long,ulong long,ulong long)
IOSARTMapper::iovmMapMemory(IOMemoryDescriptor *,ulong long,ulong long,uint,IODMAMapSpecification const*,IODMACommand *,IODMAMapPageList const*,ulong long *,ulong long *)
IOSARTMapper::iovmUnmapMemory(IOMemoryDescriptor *,IODMACommand *,ulong long,ulong long)
IOSARTMapper::start(IOService *)
IOSARTMapper::~IOSARTMapper()
IOSCSIBlockCommandsDevice::AsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,ulong long,IOStorageAttributes *,void *)
IOSCSIBlockCommandsDevice::AsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,ulong long,void *)
IOSCSIBlockCommandsDevice::AsyncReadWriteComplete(OSObject *)
IOSCSIBlockCommandsDevice::AsyncReadWriteCompletion(OSObject *)
IOSCSIBlockCommandsDevice::CheckMediumCapacityData(void)
IOSCSIBlockCommandsDevice::CreateStorageServiceNub(void)
IOSCSIBlockCommandsDevice::DetermineMediumCapacity(ulong long *,ulong long *)
IOSCSIBlockCommandsDevice::DetermineMediumGeometry(void)
IOSCSIBlockCommandsDevice::DisablePolling(void)
IOSCSIBlockCommandsDevice::EnablePolling(void)
IOSCSIBlockCommandsDevice::GET_LBA_STATUS(OSObject *,IOMemoryDescriptor *,ulong long,uint,uchar)
IOSCSIBlockCommandsDevice::GetProvisionStatus(ulong long,ulong long,uint *,IOBlockStorageProvisionDeviceExtent *)
IOSCSIBlockCommandsDevice::GetWriteCacheState(IOMemoryDescriptor *,uchar)
IOSCSIBlockCommandsDevice::GetWriteCacheState(bool *)
IOSCSIBlockCommandsDevice::HandleCheckPowerState(void)
IOSCSIBlockCommandsDevice::InitializePowerManagement(IOService *)
IOSCSIBlockCommandsDevice::IssueRead(IOMemoryDescriptor *,ulong long,ulong long,void *)
IOSCSIBlockCommandsDevice::IssueUnmap(IOBlockStorageDeviceExtent *,uint)
IOSCSIBlockCommandsDevice::IssueWrite(IOMemoryDescriptor *,ulong long,ulong long,void *)
IOSCSIBlockCommandsDevice::PollForMediaRemoval(void)
IOSCSIBlockCommandsDevice::PollForNewMedia(void)
IOSCSIBlockCommandsDevice::PreventMediumRemoval(void)
IOSCSIBlockCommandsDevice::ProcessPoll(void)
IOSCSIBlockCommandsDevice::READ_CAPACITY(OSObject *,IOMemoryDescriptor *,uchar,uint,uchar,uchar)
IOSCSIBlockCommandsDevice::READ_CAPACITY_16(OSObject *,IOMemoryDescriptor *,ulong long,uint,uchar,uchar)
IOSCSIBlockCommandsDevice::REPORT_PROVISIONING_INITIALIZATION_PATTERN(OSObject *,IOMemoryDescriptor *,uint,uchar)
IOSCSIBlockCommandsDevice::ReportDeviceMaxBlocksReadTransfer(void)
IOSCSIBlockCommandsDevice::ReportDeviceMaxBlocksWriteTransfer(void)
IOSCSIBlockCommandsDevice::ReportProvisioningInitializationPattern(IOMemoryDescriptor *)
IOSCSIBlockCommandsDevice::ResumeDeviceSupport(void)
IOSCSIBlockCommandsDevice::START_STOP_UNIT(OSObject *,uchar,uchar,uchar,uchar,uchar)
IOSCSIBlockCommandsDevice::SYNCHRONIZE_CACHE(OSObject *,uchar,uchar,uint,ushort,uchar)
IOSCSIBlockCommandsDevice::SetMediumCharacteristics(ulong long,ulong long)
IOSCSIBlockCommandsDevice::SetWriteCacheState(bool)
IOSCSIBlockCommandsDevice::StartDeviceSupport(void)
IOSCSIBlockCommandsDevice::StopDeviceSupport(void)
IOSCSIBlockCommandsDevice::SuspendDeviceSupport(void)
IOSCSIBlockCommandsDevice::TerminateDeviceSupport(void)
IOSCSIBlockCommandsDevice::UNMAP(OSObject *,IOMemoryDescriptor *,uchar,uchar,ushort,uchar)
IOSCSIBlockCommandsDevice::VerifyMediumPresence(void)
IOSCSIBlockCommandsDevice::WRITE_SAME_10(OSObject *,IOMemoryDescriptor *,uint,uchar,uchar,uchar,uint,uchar,ushort,uchar)
IOSCSIBlockCommandsDevice::WRITE_SAME_16(OSObject *,IOMemoryDescriptor *,uint,uchar,uchar,uchar,uchar,ulong long,uint,uchar,uchar)
IOSCSIBlockCommandsDevice::WriteSame(IOMemoryDescriptor *,ulong long,ulong long,uchar,uint)
IOSCSIBlockCommandsDevice::sProcessPoll(void *,void *)
IOSCSIBlockCommandsDevicePowerDownHandler(void *,void *,uint,IOService *,void *,ulong)
IOSCSIHierarchicalLogicalUnit::ExecuteCommand(OSObject *)
IOSCSIHierarchicalLogicalUnit::HLUNTaskCompletion(OSObject *)
IOSCSIHierarchicalLogicalUnit::InitializePowerManagement(IOService *)
IOSCSIHierarchicalLogicalUnit::SetLogicalUnitBytes(uchar *)
IOSCSIHierarchicalLogicalUnit::message(uint,IOService *,void *)
IOSCSIHierarchicalLogicalUnit::start(IOService *)
IOSCSILogicalUnitHashTable::DestroyHashReference(void *)
IOSCSILogicalUnitHashTable::IsProviderPathToExistingLogicalUnit(IOSCSIMultipathedLogicalUnit *,IOService *,uint)
IOSCSILogicalUnitNub::ExecuteCommand(OSObject *)
IOSCSILogicalUnitNub::SetLogicalUnitNumber(uchar)
IOSCSIMultipathedLogicalUnit::ActivatePath(IOService *)
IOSCSIMultipathedLogicalUnit::AddPath(IOService *)
IOSCSIMultipathedLogicalUnit::AddPathToInaccessiblePathsList(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::CheckDisabledPaths(uint)
IOSCSIMultipathedLogicalUnit::CopyNextPath(queue_entry *,SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::CreateMPLogicalUnitOrPath(IOService *)
IOSCSIMultipathedLogicalUnit::ExecuteCommand(OSObject *)
IOSCSIMultipathedLogicalUnit::FreeSCSILogicalUnitPath(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::GetInterfaceDomainIdentifier(IOService *)
IOSCSIMultipathedLogicalUnit::GetLogicalUnitPathAccessCharacteristics(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::GetLogicalUnitPaths(SCSILogicalUnitPath **,uint,bool)
IOSCSIMultipathedLogicalUnit::GetRequestedDataTransferCount(OSObject *)
IOSCSIMultipathedLogicalUnit::GetSCSITask(void)
IOSCSIMultipathedLogicalUnit::GetTargetPortGroup(uint)
IOSCSIMultipathedLogicalUnit::GetTargetPortGroupSupportForPath(IOService *)
IOSCSIMultipathedLogicalUnit::GetUniqueTargetPortIdentifier(IOService *)
IOSCSIMultipathedLogicalUnit::InactivatePath(IOService *)
IOSCSIMultipathedLogicalUnit::InitWait(void)
IOSCSIMultipathedLogicalUnit::InitializePowerManagement(IOService *)
IOSCSIMultipathedLogicalUnit::IsNewLogicalUnit(IOService *)
IOSCSIMultipathedLogicalUnit::IsReceive(OSObject *,ulong long *)
IOSCSIMultipathedLogicalUnit::IsTransmit(OSObject *,ulong long *)
IOSCSIMultipathedLogicalUnit::LogicalUnitPathRelease(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::LogicalUnitPathRelease(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::PortBandwidthGlobals::AddSCSIPort(uint)
IOSCSIMultipathedLogicalUnit::PortBandwidthGlobals::AllocateBandwidth(IOSCSIMultipathedLogicalUnit*,ulong long,uint)
IOSCSIMultipathedLogicalUnit::PortBandwidthGlobals::PortBandwidthGlobals(void)
IOSCSIMultipathedLogicalUnit::PortBandwidthGlobals::~PortBandwidthGlobals()
IOSCSIMultipathedLogicalUnit::ReorganizeTargetPortGroupLists(char *,uint)
IOSCSIMultipathedLogicalUnit::RetrieveRTPGData(IOService *,uchar *,uint)
IOSCSIMultipathedLogicalUnit::SendTaskOnPath(SCSITask *,IOService *)
IOSCSIMultipathedLogicalUnit::SetPathAccessState(SCSILogicalUnitPath *,uchar)
IOSCSIMultipathedLogicalUnit::SetTPGAccessState(SCSITargetPortGroup *,uchar)
IOSCSIMultipathedLogicalUnit::SetTargetPortGroups(IOService *,uchar *,uint)
IOSCSIMultipathedLogicalUnit::TPGRescan(void)
IOSCSIMultipathedLogicalUnit::TaskCompletion(OSObject *)
IOSCSIMultipathedLogicalUnit::ThreadEntry(SCSILogicalUnitPath *)
IOSCSIMultipathedLogicalUnit::UpdateTargetPortGroup(ushort,uchar)
IOSCSIMultipathedLogicalUnit::WaitForActivePath(void)
IOSCSIMultipathedLogicalUnit::WaitForPowerStateOn(void)
IOSCSIMultipathedLogicalUnit::free(void)
IOSCSIMultipathedLogicalUnit::message(uint,IOService *,void *)
IOSCSIMultipathedLogicalUnit::requestTerminate(IOService *,uint)
IOSCSIMultipathedLogicalUnit::start(IOService *)
IOSCSIMultipathedLogicalUnit::willTerminate(IOService *,uint)
IOSCSIPeripheralDeviceNub::AbortCommand(OSObject *)
IOSCSIPeripheralDeviceNub::AbortTask(uchar,ulong long)
IOSCSIPeripheralDeviceNub::AbortTaskSet(uchar)
IOSCSIPeripheralDeviceNub::ClearACA(uchar)
IOSCSIPeripheralDeviceNub::ClearTaskSet(uchar)
IOSCSIPeripheralDeviceNub::ExecuteCommand(OSObject *)
IOSCSIPeripheralDeviceNub::HandleProtocolServiceFeature(uint,void *)
IOSCSIPeripheralDeviceNub::InterrogateDevice(void)
IOSCSIPeripheralDeviceNub::IsProtocolServiceSupported(uint,void *)
IOSCSIPeripheralDeviceNub::LogicalUnitReset(uchar)
IOSCSIPeripheralDeviceNub::SendTask(SCSITask *)
IOSCSIPeripheralDeviceNub::TargetReset(void)
IOSCSIPeripheralDeviceNub::TaskCallback(OSObject *)
IOSCSIPeripheralDeviceNub::free(void)
IOSCSIPeripheralDeviceNub::message(uint,IOService *,void *)
IOSCSIPeripheralDeviceNub::sWaitForTask(void *,SCSITask *)
IOSCSIPeripheralDeviceNub::start(IOService *)
IOSCSIPeripheralDeviceType00::free(void)
IOSCSIPeripheralDeviceType00::handleIsOpen(IOService const*)
IOSCSIPeripheralDeviceType00::start(IOService *)
IOSCSIPrimaryCommandsDevice::AbortCommand(OSObject *)
IOSCSIPrimaryCommandsDevice::AbortTask(uchar,ulong long)
IOSCSIPrimaryCommandsDevice::AbortTaskSet(uchar)
IOSCSIPrimaryCommandsDevice::ClampPowerState(void)
IOSCSIPrimaryCommandsDevice::ClearACA(uchar)
IOSCSIPrimaryCommandsDevice::ClearTaskSet(uchar)
IOSCSIPrimaryCommandsDevice::ExecuteCommand(OSObject *)
IOSCSIPrimaryCommandsDevice::GetAutoSenseData(OSObject *,SCSI_Sense_Data *)
IOSCSIPrimaryCommandsDevice::GetAutoSenseData(OSObject *,SCSI_Sense_Data *,uchar)
IOSCSIPrimaryCommandsDevice::GetModeSense(IOMemoryDescriptor *,uchar,ushort,bool *)
IOSCSIPrimaryCommandsDevice::GetProtocolCharacteristicsDictionary(void)
IOSCSIPrimaryCommandsDevice::GetSCSITask(void)
IOSCSIPrimaryCommandsDevice::GetTaskStatus(OSObject *)
IOSCSIPrimaryCommandsDevice::GetVendorString(void)
IOSCSIPrimaryCommandsDevice::HandleProtocolServiceFeature(uint,void *)
IOSCSIPrimaryCommandsDevice::IsProtocolServiceSupported(uint,void *)
IOSCSIPrimaryCommandsDevice::LogicalUnitReset(uchar)
IOSCSIPrimaryCommandsDevice::REQUEST_SENSE(OSObject *,IOMemoryDescriptor *,uchar,uchar)
IOSCSIPrimaryCommandsDevice::ReleaseSCSITask(OSObject *)
IOSCSIPrimaryCommandsDevice::RetrieveINQUIRYData(uchar,uchar,uchar *,ushort *)
IOSCSIPrimaryCommandsDevice::SendCommand(OSObject *,uint)
IOSCSIPrimaryCommandsDevice::SendCommand(OSObject *,uint,void (*)(OSObject *))
IOSCSIPrimaryCommandsDevice::SetCommandDescriptorBlock(OSObject *,uchar,uchar,uchar,uchar,uchar,uchar)
IOSCSIPrimaryCommandsDevice::SetCommandDescriptorBlock(OSObject *,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
IOSCSIPrimaryCommandsDevice::SetCommandDescriptorBlock(OSObject *,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
IOSCSIPrimaryCommandsDevice::SetCommandDescriptorBlock(OSObject *,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
IOSCSIPrimaryCommandsDevice::SetTaskAttribute(OSObject *,SCSITaskAttribute)
IOSCSIPrimaryCommandsDevice::TEST_UNIT_READY(OSObject *,uchar)
IOSCSIPrimaryCommandsDevice::TargetReset(void)
IOSCSIPrimaryCommandsDevice::TaskCallback(OSObject *)
IOSCSIPrimaryCommandsDevice::free(void)
IOSCSIPrimaryCommandsDevice::message(uint,IOService *,void *)
IOSCSIPrimaryCommandsDevice::sGetOwnerForTask(OSObject *)
IOSCSIPrimaryCommandsDevice::setAggressiveness(ulong,ulong)
IOSCSIPrimaryCommandsDevice::stop(IOService *)
IOSCSIProtocolInterface::CheckForSufficientTimeForPMCommand(uint)
IOSCSIProtocolInterface::CheckPowerState(void)
IOSCSIProtocolInterface::GetUserClientExclusivityState(void)
IOSCSIProtocolInterface::HandleCheckPowerState(uint)
IOSCSIProtocolInterface::HandleSetPowerState(uint)
IOSCSIProtocolInterface::InitializePowerManagement(IOService *)
IOSCSIProtocolInterface::SetUserClientExclusivityState(IOService *,bool)
IOSCSIProtocolInterface::TicklePowerManager(uint)
IOSCSIProtocolInterface::__DISK_IS_ASLEEP__(void)
IOSCSIProtocolInterface::finalize(uint)
IOSCSIProtocolInterface::free(void)
IOSCSIProtocolInterface::init(OSDictionary *)
IOSCSIProtocolInterface::initialPowerStateForDomainState(ulong)
IOSCSIProtocolInterface::sGetUserClientExclusivityState(IOSCSIProtocolInterface*,bool *)
IOSCSIProtocolInterface::sHandleCheckPowerState(IOSCSIProtocolInterface*)
IOSCSIProtocolInterface::sHandleSetPowerState(IOSCSIProtocolInterface*,uint)
IOSCSIProtocolInterface::sPowerManagement(void *)
IOSCSIProtocolInterface::sSetUserClientExclusivityState(IOSCSIProtocolInterface*,int *,IOService *,bool)
IOSCSIProtocolInterface::start(IOService *)
IOSCSIProtocolInterface::willTerminate(IOService *,uint)
IOSCSIProtocolServices::AbortTask(uchar,ulong long)
IOSCSIProtocolServices::AbortTaskSet(uchar)
IOSCSIProtocolServices::AddSCSITaskToHeadOfQueue(SCSITask *)
IOSCSIProtocolServices::AddSCSITaskToQueue(OSObject *)
IOSCSIProtocolServices::ClearACA(uchar)
IOSCSIProtocolServices::ClearTaskSet(uchar)
IOSCSIProtocolServices::CommandCompleted(OSObject *,SCSIServiceResponse,SCSITaskStatus)
IOSCSIProtocolServices::ExecuteCommand(OSObject *)
IOSCSIProtocolServices::GetCommandDescriptorBlock(OSObject *,uchar (*)[16])
IOSCSIProtocolServices::GetCommandDescriptorBlockSize(OSObject *)
IOSCSIProtocolServices::InitializePowerManagement(IOService *)
IOSCSIProtocolServices::LogicalUnitReset(uchar)
IOSCSIProtocolServices::RejectSCSITasksCurrentlyQueued(void)
IOSCSIProtocolServices::RejectTask(OSObject *)
IOSCSIProtocolServices::RetrieveNextSCSITaskFromQueue(void)
IOSCSIProtocolServices::SendNotification_VerifyDeviceState(void)
IOSCSIProtocolServices::SendSCSITasksFromQueue(void)
IOSCSIProtocolServices::TargetReset(void)
IOSCSIProtocolServices::free(void)
IOSCSIProtocolServices::init(OSDictionary *)
IOSCSIProtocolServices::start(IOService *)
IOSCSITargetDevice::CopyLUNObject(uchar *)
IOSCSITargetDevice::DetermineTargetCharacteristics(void)
IOSCSITargetDevice::ExecuteCommand(OSObject *)
IOSCSITargetDevice::HandleDynamicLUNChange(void)
IOSCSITargetDevice::HandlePowerChange(void)
IOSCSITargetDevice::InitializeDeviceSupport(void)
IOSCSITargetDevice::PerformREPORTLUNS(void)
IOSCSITargetDevice::Ping(void)
IOSCSITargetDevice::ProcessIndividualLUN(uchar *)
IOSCSITargetDevice::ProcessIndividualLUN(ulong long)
IOSCSITargetDevice::PublishDefaultINQUIRYInformation(void)
IOSCSITargetDevice::PublishDeviceIdentification(IOService *,uchar *)
IOSCSITargetDevice::PublishINQUIRYVitalProductDataInformation(IOService *,uchar *)
IOSCSITargetDevice::RetrieveDefaultINQUIRYData(uchar *,uchar *,uchar)
IOSCSITargetDevice::RetrieveINQUIRYDataPage(uchar *,IOMemoryDescriptor *,uchar,ushort)
IOSCSITargetDevice::RetrieveReportLUNsData(uchar *,uchar *,uint)
IOSCSITargetDevice::RetrieveUnitSerialNumber(IOService *,uchar *)
IOSCSITargetDevice::SetLogicalUnitBytes(OSObject *,uchar *)
IOSCSITargetDevice::TargetTaskCompletion(OSObject *)
IOSCSITargetDevice::VerifyLogicalUnitPresence(uchar *)
IOSCSITargetDevice::didTerminate(IOService *,uint,bool *)
IOSCSITargetDevice::free(void)
IOSCSITargetDevice::handleClose(IOService *,uint)
IOSCSITargetDevice::handleIsOpen(IOService const*)
IOSCSITargetDevice::handleOpen(IOService *,uint,void *)
IOSCSITargetDevice::message(uint,IOService *,void *)
IOSCSITargetDevice::requestProbe(uint)
IOSCSITargetDevice::systemWillShutdown(uint)
IOSEPBiometricService::handleSEPMessage(ulong long)
IOSEPBiometricService::powerOff(void)
IOSEPBiometricService::powerOn(void)
IOSEPBiometricService::sepMessageHandler(void *,void *)
IOSEPBiometricService::sksLockStateChangeHandler(IOTimerEventSource *)
IOSEPBiometricService::sksQueueDequeue(lock_state_data_v1_t *)
IOSEPBiometricService::sksQueueEnqueue(lock_state_data_v1_t *)
IOSEPBiometricService::sksQueueInit(void)
IOSEPBiometricService::sksQueueProcess(void)
IOSEPBiometricService::sksQueueProcessAsync(void)
IOSEPBiometricService::start(IOService *)
IOSEPBiometricService::stop(IOService *)
IOSKMemoryBuffer::MetaClass::MetaClass(void)
IOSKMemoryBuffer::free(void)
IOSKMemoryBuffer::getBytesNoCopy(ulong,ulong)
IOSKMemoryBuffer::taggedRelease(void const*)
IOSKRegion::setSegmentBuffer(uint,IOSKMemoryBuffer *)
IOSKRegionMapper::mapOverwrite(ulong long,ulong long,int)
IOSerialBSDClient::cleanupResources(void)
IOSerialBSDClient::close(int,int,int,proc *)
IOSerialBSDClient::convertFlowCtrl(IOSerialBSDClient::Session *,termios *)
IOSerialBSDClient::createDevNodes(bool)
IOSerialBSDClient::createThread(void (*)(void *),void *)
IOSerialBSDClient::didTerminate(IOService *,uint,bool *)
IOSerialBSDClient::free(void)
IOSerialBSDClient::init(OSDictionary *)
IOSerialBSDClient::initSession(IOSerialBSDClient::Session *)
IOSerialBSDClient::iossclose(int,int,int,proc *)
IOSerialBSDClient::iossdcddelay(void *,void *)
IOSerialBSDClient::iossopen(int,int,int,proc *)
IOSerialBSDClient::iossparam(tty *,termios *)
IOSerialBSDClient::iossread(int,uio *,int)
IOSerialBSDClient::iossselect(int,int,void *,proc *)
IOSerialBSDClient::iossstart(tty *)
IOSerialBSDClient::iossstop(tty *,int)
IOSerialBSDClient::iosswrite(int,uio *,int)
IOSerialBSDClient::killThreads(void)
IOSerialBSDClient::launchThreads(void)
IOSerialBSDClient::matchPropertyTable(OSDictionary *)
IOSerialBSDClient::mctl(uint,int)
IOSerialBSDClient::open(int,int,int,proc *)
IOSerialBSDClient::optimiseInput(termios *)
IOSerialBSDClient::preemptActive(void)
IOSerialBSDClient::procEvent(IOSerialBSDClient::Session *)
IOSerialBSDClient::requestTerminate(IOService *,uint)
IOSerialBSDClient::rxFunc(void)
IOSerialBSDClient::setBaseTypeForDev(void)
IOSerialBSDClient::setProperties(OSObject *)
IOSerialBSDClient::start(IOService *)
IOSerialBSDClient::startConnectTransit(void)
IOSerialBSDClient::txFunc(void)
IOSerialBSDClient::waitForIdle(void)
IOSerialBSDClient::waitOutDelay(void *,timeval const*,timeval const*)
IOSerialBSDClient::willTerminate(IOService *,uint)
IOSerialStreamSync::acquirePort(bool)
IOSerialStreamSync::attach(IOService *)
IOSerialStreamSync::dequeueData(uchar *,uint,uint *,uint)
IOSerialStreamSync::dequeueEvent(uint *,uint *,bool)
IOSerialStreamSync::enqueueData(uchar *,uint,uint *,bool)
IOSerialStreamSync::enqueueEvent(uint,uint,bool)
IOSerialStreamSync::executeEvent(uint,uint)
IOSerialStreamSync::getState(void)
IOSerialStreamSync::init(OSDictionary *,void *)
IOSerialStreamSync::nextEvent(void)
IOSerialStreamSync::releasePort(void)
IOSerialStreamSync::requestEvent(uint,uint *)
IOSerialStreamSync::setState(uint,uint)
IOSerialStreamSync::watchState(uint *,uint)
IOService::AdjustBusy(int,int (*)(OSMetaClassBase *,IORPC))
IOService::AdjustBusy_Impl(int)
IOService::ChangePowerState(uint,int (*)(OSMetaClassBase *,IORPC))
IOService::ChangePowerState_Impl(uint)
IOService::ClientCrashed(IOService*,ulong long,int (*)(OSMetaClassBase *,IORPC))
IOService::ClientCrashed_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService*,ulong long))
IOService::ConfigureReport(OSData *,uint,uint *,int (*)(OSMetaClassBase *,IORPC))
IOService::ConfigureReport_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSData *,uint,uint *))
IOService::CopyDispatchQueue_Impl(char const*,IODispatchQueue **)
IOService::CopyName(OSString **,int (*)(OSMetaClassBase *,IORPC))
IOService::CopyName_Impl(OSString **)
IOService::CopyProperties(OSDictionary **,int (*)(OSMetaClassBase *,IORPC))
IOService::CopyProperties_Impl(OSDictionary **)
IOService::CopyProperties_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSDictionary **))
IOService::CopyProviderProperties(OSArray *,OSArray **,int (*)(OSMetaClassBase *,IORPC))
IOService::CopyProviderProperties_Impl(OSArray *,OSArray **)
IOService::CopyProviderProperties_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSArray *,OSArray **))
IOService::CopySystemStateNotificationService(IOService**,int (*)(OSMetaClassBase *,IORPC))
IOService::CopySystemStateNotificationService_Impl(IOService**)
IOService::CoreAnalyticsSendEvent(ulong long,OSString *,OSDictionary *,int (*)(OSMetaClassBase *,IORPC))
IOService::CoreAnalyticsSendEvent_Impl(ulong long,OSString *,OSDictionary *)
IOService::CoreAnalyticsSendEvent_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,OSString *,OSDictionary *))
IOService::Create(IOService*,char const*,IOService**,int (*)(OSMetaClassBase *,IORPC))
IOService::CreateDefaultDispatchQueue(IODispatchQueue **,int (*)(OSMetaClassBase *,IORPC))
IOService::CreateDefaultDispatchQueue_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IODispatchQueue **))
IOService::CreateKernelClassMatchingDictionary(OSString *,OSDictionary *)
IOService::CreateKernelClassMatchingDictionary(char const*,OSDictionary *)
IOService::CreatePropertyMatchingDictionary(char const*,OSObject *,OSDictionary *)
IOService::CreatePropertyMatchingDictionary(char const*,char const*,OSDictionary *)
IOService::CreateUserClassMatchingDictionary(OSString *,OSDictionary *)
IOService::CreateUserClassMatchingDictionary(char const*,OSDictionary *)
IOService::Create_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService*,char const*,IOService**))
IOService::Dispatch(IORPC)
IOService::GetBusyState(uint *,int (*)(OSMetaClassBase *,IORPC))
IOService::GetBusyState_Impl(uint *)
IOService::GetProvider(void)
IOService::GetRegistryEntryID(ulong long *,int (*)(OSMetaClassBase *,IORPC))
IOService::GetRegistryEntryID_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long *))
IOService::MetaClass::MetaClass(void)
IOService::NewUserClient(uint,IOUserClient **,int (*)(OSMetaClassBase *,IORPC))
IOService::NewUserClient_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,IOUserClient **))
IOService::OurChangeNotifyInterestedDriversDidChange(void)
IOService::OurChangeNotifyInterestedDriversWillChange(void)
IOService::OurChangeTellCapabilityDidChange(void)
IOService::OurChangeTellCapabilityWillChange(void)
IOService::OurChangeTellClientsPowerDown(void)
IOService::OurChangeTellPriorityClientsPowerDown(void)
IOService::OurChangeTellUserPMPolicyPowerDown(void)
IOService::ParentChangeAcknowledgePowerChange(void)
IOService::ParentChangeTellCapabilityDidChange(void)
IOService::ParentChangeTellCapabilityWillChange(void)
IOService::ParentChangeTellPriorityClientsPowerDown(void)
IOService::RegisterService(int (*)(OSMetaClassBase *,IORPC))
IOService::RegisterService_Impl(void)
IOService::RegisterService_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *))
IOService::RemoveProperty(OSString *,int (*)(OSMetaClassBase *,IORPC))
IOService::RequireMaxBusStall(ulong long,int (*)(OSMetaClassBase *,IORPC))
IOService::RequireMaxBusStall_Impl(ulong long)
IOService::SearchProperty(char const*,char const*,ulong long,OSObject **,int (*)(OSMetaClassBase *,IORPC))
IOService::SearchProperty_Impl(char const*,char const*,ulong long,OSObject **)
IOService::SearchProperty_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*,char const*,ulong long,OSObject **))
IOService::SetDispatchQueue_Impl(char const*,IODispatchQueue *)
IOService::SetLegend(OSArray *,bool,int (*)(OSMetaClassBase *,IORPC))
IOService::SetLegend_Impl(OSArray *,bool)
IOService::SetLegend_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSArray *,bool))
IOService::SetName(char const*,int (*)(OSMetaClassBase *,IORPC))
IOService::SetName_Impl(char const*)
IOService::SetName_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*))
IOService::SetPowerState(uint,int (*)(OSMetaClassBase *,IORPC))
IOService::SetPowerState_Impl(uint)
IOService::SetPowerState_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOService::SetProperties(OSDictionary *,int (*)(OSMetaClassBase *,IORPC))
IOService::SetProperties_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSDictionary *))
IOService::Start(IOService*,int (*)(OSMetaClassBase *,IORPC))
IOService::Start_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService*))
IOService::StateNotificationItemCopy(OSString *,OSDictionary **,int (*)(OSMetaClassBase *,IORPC))
IOService::StateNotificationItemCopy_Impl(OSString *,OSDictionary **)
IOService::StateNotificationItemCreate(OSString *,OSDictionary *,int (*)(OSMetaClassBase *,IORPC))
IOService::StateNotificationItemCreate_Impl(OSString *,OSDictionary *)
IOService::StateNotificationItemCreate_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSString *,OSDictionary *))
IOService::StateNotificationItemSet(OSString *,OSDictionary *,int (*)(OSMetaClassBase *,IORPC))
IOService::StateNotificationItemSet_Impl(OSString *,OSDictionary *)
IOService::Stop(IOService*,int (*)(OSMetaClassBase *,IORPC))
IOService::Stop_async(IOService*,int (*)(OSMetaClassBase *,IORPC))
IOService::Stop_async_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,IOService*))
IOService::StringFromReturn(int,OSString **,int (*)(OSMetaClassBase *,IORPC))
IOService::StringFromReturn_Impl(int,OSString **)
IOService::StringFromReturn_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,int,OSString **))
IOService::Terminate(ulong long,int (*)(OSMetaClassBase *,IORPC))
IOService::Terminate_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long))
IOService::UpdateReport(OSData *,uint,uint *,ulong long,ulong long,IOMemoryDescriptor *,int (*)(OSMetaClassBase *,IORPC))
IOService::UpdateReport_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,OSData *,uint,uint *,ulong long,ulong long,IOMemoryDescriptor *))
IOService::UserSetProperties(OSObject *,int (*)(OSMetaClassBase *,IORPC))
IOService::_ClaimSystemWakeEvent(IOService*,ulong long,char const*,OSObject *,int (*)(OSMetaClassBase *,IORPC))
IOService::_ClaimSystemWakeEvent_Impl(IOService*,ulong long,char const*,OSObject *)
IOService::_ClaimSystemWakeEvent_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService*,ulong long,char const*,OSObject *))
IOService::_ConfigureReport(IOReportChannelList *,uint,void *,void *)
IOService::_NewUserClient(uint,OSDictionary *,IOUserClient **,int (*)(OSMetaClassBase *,IORPC))
IOService::_NewUserClient_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,OSDictionary *,IOUserClient **))
IOService::_UpdateReport(IOReportChannelList *,uint,void *,void *)
IOService::acknowledgePowerChange(IOService*)
IOService::acknowledgeSetPowerState(void)
IOService::actionAckTimerExpired(OSObject *,void *,void *,void *,void *)
IOService::activityTickle(ulong,ulong)
IOService::addLocation(OSDictionary *)
IOService::addMatchingNotification(OSSymbol const*,OSDictionary *,int,bool ( {block_pointer})(IOService*,IONotifier *))
IOService::addNeededResource(char const*)
IOService::addNotification(OSSymbol const*,OSDictionary *,bool (*)(void *,void *,IOService*),void *,void *,int)
IOService::adjustBusy(int)
IOService::allowPowerChange(ulong)
IOService::applyToClients(void ( {block_pointer})(IOService*))
IOService::applyToClients(void (*)(IOService*,void *),void *)
IOService::applyToInterested(OSSymbol const*,void (*)(OSObject *,void *),void *)
IOService::applyToProviders(void ( {block_pointer})(IOService*))
IOService::applyToProviders(void (*)(IOService*,void *),void *)
IOService::assertPMDriverCall(IOPMDriverCallEntry *,uint,IOPMinformee const*,uint)
IOService::callPlatformFunction(char const*,bool,void *,void *,void *,void *)
IOService::cancelIdlePowerDown(IOService*)
IOService::causeInterrupt(int)
IOService::checkResources(void)
IOService::close(IOService*,uint)
IOService::compareProperties(OSDictionary *,OSCollection *)
IOService::compareProperty(OSDictionary *,OSString const*)
IOService::compareProperty(OSDictionary *,char const*)
IOService::copyClientWithCategory(OSSymbol const*)
IOService::copyExistingServices(OSDictionary *,uint,uint)
IOService::copyMatchingService(OSDictionary *)
IOService::deRegisterInterestedDriver(IOService*)
IOService::deassertPMDriverCall(IOPMDriverCallEntry *)
IOService::deliverNotification(OSSymbol const*,uint,uint)
IOService::didTerminate(IOService*,uint,bool *)
IOService::disableInterrupt(int)
IOService::doInstallNotification(OSSymbol const*,OSDictionary *,bool (*)(void *,void *,IOService*,IONotifier *),void *,void *,int,OSIterator **)
IOService::enableInterrupt(int)
IOService::errnoFromReturn(int)
IOService::getAggressiveness(ulong,ulong *)
IOService::getBlockingDriverCall(thread **,void const**)
IOService::getClient(void)
IOService::getClientIterator(void)
IOService::getClientWithCategory(OSSymbol const*)
IOService::getDeviceMemory(void)
IOService::getDeviceMemoryCount(void)
IOService::getDeviceMemoryWithIndex(uint)
IOService::getIOMessageString(uint)
IOService::getInterruptType(int,int *)
IOService::getMatchingServices(OSDictionary *)
IOService::getPowerStateForClient(OSSymbol const*)
IOService::getProvider(void)
IOService::getProviderIterator(void)
IOService::getWorkLoop(void)
IOService::handleInterestChanged(IOPMRequest *)
IOService::handleIsOpen(IOService const*)
IOService::handleOpen(IOService*,uint,void *)
IOService::hasParent(IOService*)
IOService::hasUserServer(void)
IOService::idleTimerExpired(void)
IOService::initialPowerStateForDomainState(ulong)
IOService::instanceMatch(OSObject const*,void *)
IOService::invokeNotifiers(OSArray **)
IOService::isInactive(void)
IOService::isOpen(IOService const*)
IOService::lookupInterrupt(int,bool,IOInterruptController **)
IOService::mapDeviceMemoryWithIndex(uint,uint)
IOService::matchInternal(OSDictionary *,uint,uint *)
IOService::matchLocation(IOService*)
IOService::matchPropertyTable(OSDictionary *,int *)
IOService::maxCapabilityForDomainState(ulong)
IOService::messageClients(uint,void *,ulong)
IOService::nameMatching(OSString const*,OSDictionary *)
IOService::nameMatching(OSString const*,OSSharedPtr<OSDictionary>)
IOService::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOService::newUserClient(task *,void *,uint,OSDictionary *,OSSharedPtr<IOUserClient> &)
IOService::newUserClient(task *,void *,uint,OSSharedPtr<IOUserClient> &)
IOService::nextIdleTimeout(ulong long,ulong long,uint)
IOService::notifyAll(uint)
IOService::notifyRootDomain(void)
IOService::open(IOService*,uint,void *)
IOService::powerOverrideOffPriv(void)
IOService::powerOverrideOnPriv(void)
IOService::propertyMatching(OSSymbol const*,OSObject const*,OSDictionary *)
IOService::propertyMatching(OSSymbol const*,OSObject const*,OSSharedPtr<OSDictionary>)
IOService::registerInterest(OSSymbol const*,int ( {block_pointer})(uint,IOService*,void *,ulong))
IOService::registerInterrupt(int,OSObject *,void (*)(OSObject *,void *,IOService*,int),void *)
IOService::registerInterruptBlock(int,OSObject *,void ( {block_pointer})(IOService*,int))
IOService::registryEntryIDMatching(ulong long,OSDictionary *)
IOService::registryEntryIDMatching(ulong long,OSSharedPtr<OSDictionary>)
IOService::releasePMRequest(IOPMRequest *)
IOService::removePowerClient(OSSymbol const*)
IOService::requestPowerState(OSSymbol const*,ulong,uint)
IOService::requestTerminate(IOService*,uint)
IOService::resetRematchProperties(void)
IOService::resourceMatching(OSString const*,OSDictionary *)
IOService::resourceMatching(OSString const*,OSSharedPtr<OSDictionary>)
IOService::resourceMatching(char const*,OSDictionary *)
IOService::restartIdleTimer(void)
IOService::serviceMatching(OSString const*,OSDictionary *)
IOService::serviceMatching(OSString const*,OSSharedPtr<OSDictionary>)
IOService::serviceMatching(char const*,OSDictionary *)
IOService::serviceMatching(char const*,OSSharedPtr<OSDictionary>)
IOService::setAuthorizationID(ulong long)
IOService::setDeviceMemory(OSArray *)
IOService::setTerminateDefer(IOService*,bool)
IOService::startDeferredMatches(void)
IOService::startMatching(uint)
IOService::stateNotificationItemCopy(OSString *,OSDictionary *)
IOService::stateNotificationListenerAdd(OSArray *,void **,int ( {block_pointer})(void))
IOService::stateNotificationListenerRemove(void *)
IOService::stop(IOService*)
IOService::stop_ack_timer(void)
IOService::stringFromReturn(int)
IOService::tellChangeDown1(ulong)
IOService::tellChangeDown2(ulong)
IOService::tellSystemCapabilityChange(uint)
IOService::terminateClient(IOService*,uint)
IOService::trackSystemSleepPreventers(ulong,ulong,uint)
IOService::unlockForArbitration(void)
IOService::unregisterAllInterest(void)
IOService::unregisterInterrupt(int)
IOService::updateReport(IOReportChannelList *,uint,void *,void *)
IOService::userSpaceDidReboot(void)
IOService::userSpaceWillReboot(void)
IOService::waitForService(OSDictionary *,mach_timespec *)
IOService::waitForState(uint,uint,mach_timespec *)
IOService::waitQuiet(mach_timespec *)
IOService::waitToBecomeTerminateThread(void)
IOService::willShutdown(void)
IOService::willTerminate(IOService*,uint)
IOServiceInterestHandlerToBlock(void *,void *,uint,IOService *,void *,ulong)
IOServiceMessageUserNotification::_handler(void *,void *,uint,IOService *,void *,ulong)
IOServiceMessageUserNotification::handler(void *,uint,IOService *,void *,ulong)
IOServiceNotificationDispatchSource::CopyNextNotification(ulong long *,IOService **,ulong long *,int (*)(OSMetaClassBase *,IORPC))
IOServiceNotificationDispatchSource::CopyNextNotification_Impl(ulong long *,IOService **,ulong long *)
IOServiceNotificationDispatchSource::CopyNextNotification_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long *,IOService **,ulong long *))
IOServiceNotificationDispatchSource::Create_Call(OSDictionary *,ulong long,IODispatchQueue *,IOServiceNotificationDispatchSource**)
IOServiceNotificationDispatchSource::Create_Invoke(IORPC,int (*)(OSDictionary *,ulong long,IODispatchQueue *,IOServiceNotificationDispatchSource**))
IOServiceNotificationDispatchSource::MetaClass::Dispatch(IORPC)
IOServiceNotificationDispatchSource::SetEnableWithCompletion_Impl(bool,void ( {block_pointer})(void))
IOServiceNotificationDispatchSource::SetHandler(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOServiceNotificationDispatchSource::SetHandler_Impl(OSAction *)
IOServiceNotificationDispatchSource::_Dispatch(IOServiceNotificationDispatchSource*,IORPC)
IOServiceOrdering(OSMetaClassBase const*,OSMetaClassBase const*,void *)
IOServicePH::matchingEnd(IOService *)
IOServicePH::matchingStart(IOService *)
IOServicePH::serverAck(IOUserServer *)
IOServicePH::serverAdd(IOUserServer *)
IOServicePH::serverRemove(IOUserServer *)
IOServicePH::serverSlept(void)
IOServicePH::systemPowerChange(void *,void *,uint,IOService *,void *,ulong)
IOServicePM::MetaClass::MetaClass(void)
IOServicePM::pmPrint(uint,ulong,ulong)
IOServicePM::pmTrace(uint,uint,ulong,ulong)
IOServicePM::serialize(OSSerialize *)
IOServicePlatformAction(void *,void *,uint,void *,void *,void *,char const*,ulong long)
IOServiceStateNotificationDispatchSource::Create_Call(IOService *,OSArray *,IODispatchQueue *,IOServiceStateNotificationDispatchSource**)
IOServiceStateNotificationDispatchSource::Create_Impl(IOService *,OSArray *,IODispatchQueue *,IOServiceStateNotificationDispatchSource**)
IOServiceStateNotificationDispatchSource::Create_Invoke(IORPC,int (*)(IOService *,OSArray *,IODispatchQueue *,IOServiceStateNotificationDispatchSource**))
IOServiceStateNotificationDispatchSource::MetaClass::Dispatch(IORPC)
IOServiceStateNotificationDispatchSource::SetEnableWithCompletion_Impl(bool,void ( {block_pointer})(void))
IOServiceStateNotificationDispatchSource::SetHandler(OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOServiceStateNotificationDispatchSource::SetHandler_Impl(OSAction *)
IOServiceStateNotificationDispatchSource::StateNotificationBegin(int (*)(OSMetaClassBase *,IORPC))
IOServiceStateNotificationDispatchSource::StateNotificationBegin_Impl(void)
IOServiceStateNotificationDispatchSource::_Dispatch(IOServiceStateNotificationDispatchSource*,IORPC)
IOServiceStateNotificationEventSource::checkForWork(void)
IOServiceStateNotificationEventSource::free(void)
IOServiceStateNotificationEventSource::serviceStateNotificationEventSource(IOService *,OSArray *,void ( {block_pointer})(void))
IOServiceUserNotification::_handler(void *,void *,IOService *,IONotifier *)
IOServiceUserNotification::copyNextObject(void)
IOServiceUserNotification::handler(void *,IOService *)
IOService__PMstop
IOService__attach_IOService
IOService__joinPMtree_IOService
IOService__removePowerChild_IOPowerConnection
IOService__requestPowerDomainState_unsigned_long__IOPowerConnection___unsigned_long
IOService__setIdleTimerPeriod_unsigned_long
IOSharedDataQueue::dequeue(void *,uint *)
IOSharedDataQueue::enqueue(void *,uint)
IOSharedDataQueue::getMemoryDescriptor(void)
IOSharedDataQueue::peek(void)
IOSharedInterruptController::getInterruptHandlerAddress(void)
IOSharedInterruptController::getInterruptType(IOService *,int,int *)
IOShutdownNotificationsTimedOut(void *,void *)
IOSimpleMbufMemoryDescriptor::clearMbuf(bool)
IOSimpleMbufMemoryDescriptor::free(void)
IOSimpleMbufMemoryDescriptor::getPhysicalSegment(ulong long,ulong long *,uint)
IOSimpleMbufMemoryDescriptor::getPreparationID(void)
IOSimpleMbufMemoryDescriptor::getVirtualSegment(ulong long,ulong long *)
IOSimpleMbufMemoryDescriptor::setMbuf(__mbuf *,bool)
IOSimpleMbufMemoryDescriptor::withMbuf(__mbuf *)
IOSimpleReporter::IOSimpleReporter(OSMetaClass const*)
IOSimpleReporter::IOSimpleReporter(void)
IOSimpleReporter::with(IOService *,ushort,ulong long)
IOSkywalkBSDClient::MetaClass::MetaClass(void)
IOSkywalkBSDClient::checkServiceClassForQueues(OSArray *,uint const*,uint)
IOSkywalkBSDClient::computeRingSizeForQueue(IOSkywalkPacketQueue const*)
IOSkywalkBSDClient::configCapability(kern_nexus_capab_t,void *,uint *)
IOSkywalkBSDClient::configureReport(IOReportChannelList *,uint,void *,void *)
IOSkywalkBSDClient::copyAllReporters(void)
IOSkywalkBSDClient::findQueueWithRing(__kern_channel_ring *,bool)
IOSkywalkBSDClient::finiSlot(__kern_channel_ring *,__slot_desc *,uint)
IOSkywalkBSDClient::free(void)
IOSkywalkBSDClient::getRxPoolHandle(IOSkywalkInterface const*)
IOSkywalkBSDClient::getTxPoolHandle(IOSkywalkInterface const*)
IOSkywalkBSDClient::handleDoorbell(IOSkywalkPacketQueue *,uint)
IOSkywalkBSDClient::start(IOService *)
IOSkywalkBSDClient::stop(IOService *)
IOSkywalkCloneableNetworkPacket::getMemoryDescriptor(void)
IOSkywalkCloneableNetworkPacket::withPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketDescriptor *,uint)
IOSkywalkCloneableNetworkPacket__fn_0x118
IOSkywalkCloneableNetworkPacket__fn_0x88
IOSkywalkCloneableNetworkPacket__free
IOSkywalkController::IOSkywalkController(OSMetaClass const*)
IOSkywalkController::IOSkywalkController(void)
IOSkywalkController::MetaClass::MetaClass(void)
IOSkywalkController::MetaClass::alloc(void)
IOSkywalkController::MetaClass::~MetaClass()
IOSkywalkController::attachInterface(IOSkywalkInterface *,uint)
IOSkywalkController::detachInterface(IOSkywalkInterface *,uint)
IOSkywalkController::free(void)
IOSkywalkController::handleClose(IOService *,uint)
IOSkywalkController::handleIsOpen(IOService const*)
IOSkywalkController::handleOpen(IOService *,uint,void *)
IOSkywalkController::operator delete(void *,ulong)
IOSkywalkController::operator new(ulong)
IOSkywalkController::start(IOService *)
IOSkywalkController::~IOSkywalkController()
IOSkywalkEthernetInterface::IOSkywalkEthernetInterface(OSMetaClass const*)
IOSkywalkEthernetInterface::MetaClass::MetaClass(void)
IOSkywalkEthernetInterface::deregisterEthernetInterface(uint)
IOSkywalkEthernetInterface::free(void)
IOSkywalkEthernetInterface::getPacketTapInfo(uint *,uint *)
IOSkywalkEthernetInterface::inet_mask_to_len(uchar *,ulong)
IOSkywalkEthernetInterface::initBSDInterfaceParameters(ifnet_init_eparams *,sockaddr_dl **)
IOSkywalkEthernetInterface::ioctl_sifflags(__ifnet *)
IOSkywalkEthernetInterface::prepareBSDInterface(__ifnet *,uint)
IOSkywalkEthernetInterface::setMulticastAddresses(ether_addr const*,uint)
IOSkywalkEthernetInterface::setPromiscuousModeEnable(bool,uint)
IOSkywalkEthernetInterface::~IOSkywalkEthernetInterface()
IOSkywalkIOReturnFromErrno(int)
IOSkywalkInterface::MetaClass::MetaClass(void)
IOSkywalkInterface::clientConnectWithTask(task *,IOService *,uint)
IOSkywalkInterface::deregisterInterfaceWithQueues(void)
IOSkywalkInterface::handleClose(IOService *,uint)
IOSkywalkInterface::handleIsOpen(IOService const*)
IOSkywalkInterface::handleOpen(IOService *,uint,void *)
IOSkywalkInterface::start(IOService *)
IOSkywalkKernelPipeBSDClient::MetaClass::MetaClass(void)
IOSkywalkKernelPipeBSDClient::MetaClass::alloc(void)
IOSkywalkKernelPipeBSDClient::connected(void)
IOSkywalkKernelPipeBSDClient::didTerminate(IOService *,uint,bool *)
IOSkywalkKernelPipeBSDClient::preConnect(task *,kern_nexus *)
IOSkywalkKernelPipeBSDClient::preDisconnectGated(void *,void *,void *,void *)
IOSkywalkKernelPipeBSDClient::probe(IOService *,int *)
IOSkywalkKernelPipeBSDClient::~IOSkywalkKernelPipeBSDClient()
IOSkywalkLegacyEthernet::MetaClass::MetaClass(void)
IOSkywalkLegacyEthernet::MetaClass::alloc(void)
IOSkywalkLegacyEthernet::createInterface(void)
IOSkywalkLegacyEthernet::getFeatures(void)
IOSkywalkLegacyEthernet::getHardwareAddress(IOEthernetAddress *)
IOSkywalkLegacyEthernet::getIfnet(void)
IOSkywalkLegacyEthernet::getProperty(OSSymbol const*)
IOSkywalkLegacyEthernet::handleClose(IOService *,uint)
IOSkywalkLegacyEthernet::handleOpen(IOService *,uint,void *)
IOSkywalkLegacyEthernet::probe(IOService *,int *)
IOSkywalkLegacyEthernet::redirectCopyProperty(OSSymbol const*)
IOSkywalkLegacyEthernet::redirectGetProperty(OSSymbol const*)
IOSkywalkLegacyEthernet::setInterfaceUnitNumber(uint)
IOSkywalkLegacyEthernet::~IOSkywalkLegacyEthernet()
IOSkywalkLegacyEthernetGlobals::isRedirectKey(OSSymbol const*)
IOSkywalkLegacyEthernetGlobals::isValid(void)
IOSkywalkLegacyEthernetGlobals::~IOSkywalkLegacyEthernetGlobals()
IOSkywalkLegacyEthernetInterface::MetaClass::MetaClass(void)
IOSkywalkLegacyEthernetInterface::MetaClass::alloc(void)
IOSkywalkLegacyEthernetInterface::attachToDataLinkLayer(uint,void *)
IOSkywalkLegacyEthernetInterface::copyProperty(OSSymbol const*)
IOSkywalkLegacyEthernetInterface::free(void)
IOSkywalkLegacyEthernetInterface::getIfnet(void)
IOSkywalkLegacyEthernetInterface::getNamePrefix(void)
IOSkywalkLegacyEthernetInterface::getProperty(OSSymbol const*)
IOSkywalkLegacyEthernetInterface::init(IONetworkController *)
IOSkywalkLegacyEthernetInterface::serializeProperties(OSSerialize *)
IOSkywalkLegacyEthernetInterface::setProperties(OSObject *)
IOSkywalkLegacyEthernetInterface::~IOSkywalkLegacyEthernetInterface()
IOSkywalkMemorySegment::complete(uint)
IOSkywalkMemorySegment::initWithPool(IOSkywalkPacketBufferPool *,IOSkywalkMemorySegmentDescriptor *,uint)
IOSkywalkMemorySegment::prepare(uint)
IOSkywalkMemorySegment::setDMACommand(IODMACommand *,uint)
IOSkywalkMemorySegment::withPool(IOSkywalkPacketBufferPool *,IOSkywalkMemorySegmentDescriptor *,uint)
IOSkywalkNetworkBSDClient::MetaClass::MetaClass(void)
IOSkywalkNetworkBSDClient::MetaClass::alloc(void)
IOSkywalkNetworkBSDClient::closeInterface(IOSkywalkNetworkInterface *)
IOSkywalkNetworkBSDClient::computeRingSizeForQueue(IOSkywalkPacketQueue const*)
IOSkywalkNetworkBSDClient::configCapability(kern_nexus_capab_t,void *,uint *)
IOSkywalkNetworkBSDClient::connectedAction(IOSkywalkNetworkInterface *,void *,void *,void *)
IOSkywalkNetworkBSDClient::disconnected(void)
IOSkywalkNetworkBSDClient::init(OSDictionary *)
IOSkywalkNetworkBSDClient::message(uint,IOService *,void *)
IOSkywalkNetworkBSDClient::openInterface(IOSkywalkNetworkInterface *)
IOSkywalkNetworkBSDClient::preConnectAction(IOSkywalkNetworkInterface *,void *,void *,void *)
IOSkywalkNetworkBSDClient::preDisconnect(void)
IOSkywalkNetworkBSDClient::preDisconnectAction(IOSkywalkNetworkInterface *,void *,void *,void *)
IOSkywalkNetworkBSDClient::prepareNexusCallback(kern_nexus *,__ifnet *)
IOSkywalkNetworkBSDClient::setAggressiveness(ulong,ulong)
IOSkywalkNetworkBSDClient::setPowerState(ulong,IOService *)
IOSkywalkNetworkBSDClient::~IOSkywalkNetworkBSDClient()
IOSkywalkNetworkBSDClient__free
IOSkywalkNetworkInterface::MetaClass::MetaClass(void)
IOSkywalkNetworkInterface::_bpfTap(__ifnet *,uint,uint)
IOSkywalkNetworkInterface::bpfAttach(uint,uint)
IOSkywalkNetworkInterface::deregisterNetworkInterface(uint)
IOSkywalkNetworkInterface::finalizeBSDInterface(__ifnet *,uint)
IOSkywalkNetworkInterface::getMaxTransferUnit(void)
IOSkywalkNetworkInterface::getMinPacketSize(void)
IOSkywalkNetworkInterface::getPacketTapInfo(uint *,uint *)
IOSkywalkNetworkInterface::getServiceClassIndex(uint,uint *)
IOSkywalkNetworkInterface::getUnsentDataByteCount(uint *,uint *,uint)
IOSkywalkNetworkInterface::handleDoorbellForQueue(IOSkywalkPacketQueue *,uint)
IOSkywalkNetworkInterface::handleLinkStatusEvent(void)
IOSkywalkNetworkInterface::interfaceAdvisoryEnable(bool)
IOSkywalkNetworkInterface::joinPMtree(IOService *)
IOSkywalkNetworkInterface::prepareBSDInterface(__ifnet *,uint)
IOSkywalkNetworkInterface::reportDataBandwidths(ulong long,ulong long,ulong long,ulong long)
IOSkywalkNetworkInterface::reportEventType(uint,void *,ulong)
IOSkywalkNetworkInterface::reportInterfaceAdvisory(ifnet_interface_advisory const*)
IOSkywalkNetworkInterface::reportLinkQuality(uint)
IOSkywalkNetworkInterface::setAggressiveness(ulong,ulong)
IOSkywalkNetworkInterface::setBSDName(char const*)
IOSkywalkNetworkInterface::setInterfaceAdvisoryNotice(void *,int (*)(void *,ifnet_interface_advisory const*))
IOSkywalkNetworkKDPPoller::MetaClass::MetaClass(void)
IOSkywalkNetworkKDPPoller::poller_get_link(void)
IOSkywalkNetworkKDPPoller::poller_receive(void *,uint *,uint)
IOSkywalkNetworkKDPPoller::poller_send(void *,uint)
IOSkywalkNetworkKDPPoller::poller_set_mode(int)
IOSkywalkNetworkPacket::MetaClass::MetaClass(void)
IOSkywalkNetworkPacket::MetaClass::alloc(void)
IOSkywalkNetworkPacket::getExpiryTime(ulong long *)
IOSkywalkNetworkPacket::getHeadroom(void)
IOSkywalkNetworkPacket::getLinkHeaderOffset(uint *)
IOSkywalkNetworkPacket::getTimestamp(ulong long *)
IOSkywalkNetworkPacket::isHighPriority(void)
IOSkywalkNetworkPacket::isTimestampRequested(void)
IOSkywalkNetworkPacket::setCompletionStatus(int)
IOSkywalkNetworkPacket::setHeadroom(uchar)
IOSkywalkNetworkPacket::setLinkHeaderOffset(uint)
IOSkywalkNetworkPacket::setNetworkHeaderOffset(uint)
IOSkywalkNetworkPacket::setTimestamp(ulong long)
IOSkywalkNetworkPacket::setTraceID(uint)
IOSkywalkNetworkPacket::withPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketDescriptor *,uint)
IOSkywalkNetworkPacket::~IOSkywalkNetworkPacket()
IOSkywalkPacket::MetaClass::MetaClass(void)
IOSkywalkPacket::MetaClass::alloc(void)
IOSkywalkPacket::complete(IOSkywalkPacketQueue *,uint)
IOSkywalkPacket::getBufferSize(void)
IOSkywalkPacket::getDataLength(void)
IOSkywalkPacket::getDataOffset(void)
IOSkywalkPacket::getMemoryDescriptor(void)
IOSkywalkPacket::getPacketBuffers(IOSkywalkPacketBuffer **,uint)
IOSkywalkPacket::initWithPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketDescriptor *,uint)
IOSkywalkPacket::prepare(IOSkywalkPacketQueue *,ulong long,uint)
IOSkywalkPacket::setDataLength(uint)
IOSkywalkPacket::setDataOffset(ushort)
IOSkywalkPacket::setSlotReference(void *)
IOSkywalkPacket::withPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketDescriptor *,uint)
IOSkywalkPacket::~IOSkywalkPacket()
IOSkywalkPacketBuffer::MetaClass::MetaClass(void)
IOSkywalkPacketBuffer::MetaClass::alloc(void)
IOSkywalkPacketBuffer::completeWithMemorySegment(IOSkywalkMemorySegment *,ulong long,uint)
IOSkywalkPacketBuffer::getBufferSize(void)
IOSkywalkPacketBuffer::initWithPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketBufferDescriptor *,uint)
IOSkywalkPacketBuffer::prepareWithMemorySegment(IOSkywalkMemorySegment *,ulong long,uint)
IOSkywalkPacketBuffer::setDataLength(uint)
IOSkywalkPacketBuffer::setDataOffset(ushort)
IOSkywalkPacketBuffer::setDataOffsetAndLength(ushort,uint)
IOSkywalkPacketBuffer::setPacket(IOSkywalkPacket *,uint)
IOSkywalkPacketBuffer::withPool(IOSkywalkPacketBufferPool *,IOSkywalkPacketBufferDescriptor *,uint)
IOSkywalkPacketBuffer::~IOSkywalkPacketBuffer()
IOSkywalkPacketBufferPool::MetaClass::MetaClass(void)
IOSkywalkPacketBufferPool::MetaClass::alloc(void)
IOSkywalkPacketBufferPool::PoolIODMAOptions::PoolIODMAOptions(void)
IOSkywalkPacketBufferPool::addPoolReporter(IOService *,OSSet *)
IOSkywalkPacketBufferPool::allocatePacket(IOSkywalkPacket **,uint)
IOSkywalkPacketBufferPool::checkInReportingService(IOService *,IOSkywalkInterface const*)
IOSkywalkPacketBufferPool::checkOutReportingService(IOService const*)
IOSkywalkPacketBufferPool::copyReportersForService(IOService const*)
IOSkywalkPacketBufferPool::destroySegmentBuffers(IOSkywalkMemorySegment *)
IOSkywalkPacketBufferPool::disposeAllBuffers(void)
IOSkywalkPacketBufferPool::disposeAllPackets(void)
IOSkywalkPacketBufferPool::free(void)
IOSkywalkPacketBufferPool::getPoolName(void)
IOSkywalkPacketBufferPool::getReportChannelValue(ulong long)
IOSkywalkPacketBufferPool::initWithName(char const*,void *,uint,IOSkywalkPacketBufferPool::PoolOptions const*)
IOSkywalkPacketBufferPool::newPacket(IOSkywalkPacketDescriptor *,IOSkywalkPacket **)
IOSkywalkPacketBufferPool::newPacketBuffer(IOSkywalkPacketBufferDescriptor *,IOSkywalkPacketBuffer **)
IOSkywalkPacketBufferPool::release(void)
IOSkywalkPacketBufferPool::releaseAllMemorySegments(void)
IOSkywalkPacketBufferPool::releaseAllPackets(void)
IOSkywalkPacketBufferPool::reportingChangeNotification(void)
IOSkywalkPacketBufferPool::~IOSkywalkPacketBufferPool()
IOSkywalkPacketBuffer__acquireWithBufferHandle_unsigned_long_long
IOSkywalkPacketBuffer__acquireWithBufletHandle___kern_buflet
IOSkywalkPacketBuffer__disposePacketBuffer
IOSkywalkPacketPoller::applyPollerParameters(_IOSkywalkPacketPollerParameters const*)
IOSkywalkPacketPoller::disable(void)
IOSkywalkPacketPoller::enable(void)
IOSkywalkPacketPoller::free(void)
IOSkywalkPacketPoller::initPoller(OSObject *,int (*)(OSObject *,IOSkywalkPacketPoller*,void *),int (*)(OSObject *,IOSkywalkPacketPoller*,uint,void *),uint,uint,void *)
IOSkywalkPacketQueue::MetaClass::MetaClass(void)
IOSkywalkPacketQueue::bufferCompletion(IOSkywalkPacketBuffer *,IOSkywalkPacketQueue*,uint)
IOSkywalkPacketQueue::deliverQueueNotifications(void (*)(IOSkywalkPacketQueue*,void *),void *)
IOSkywalkPacketQueue::finalize(void)
IOSkywalkPacketQueue::free(void)
IOSkywalkPacketQueue::getDataByteCount(uint *)
IOSkywalkPacketQueue::initialize(void *)
IOSkywalkPacketQueue::packetCompletion(IOSkywalkPacket *,IOSkywalkPacketQueue*,uint)
IOSkywalkPacketQueue::scheduleQueueNotification(IOSkywalkPacketQueue*)
IOSkywalkPacketQueue::statGetElapsedTime(ulong long const*)
IOSkywalkPacketQueue::syncPackets(ulong long *,uint *,uint)
IOSkywalkPacketTable::IOSkywalkPacketTable(uint,bool,bool)
IOSkywalkPacketTable::getDataByteCount(void)
IOSkywalkPacketTable::getPacketCount(void)
IOSkywalkPacketTable::isEmpty(void)
IOSkywalkPacketTable::isFull(void)
IOSkywalkPacketTable::isValid(bool)
IOSkywalkPacketTable::~IOSkywalkPacketTable()
IOSkywalkPacket__fn_0x118
IOSkywalkRing::MetaClass::MetaClass(void)
IOSkywalkRing::MetaClass::alloc(void)
IOSkywalkRing::free(void)
IOSkywalkRing::getRingState(void)
IOSkywalkRing::getSlotWithIndex(uint)
IOSkywalkRing::resetRingState(void)
IOSkywalkRing::setRingHandle(__kern_channel_ring *)
IOSkywalkRing::withQueue(IOSkywalkPacketQueue *,uint)
IOSkywalkRing::~IOSkywalkRing()
IOSkywalkRingSlot::IOSkywalkRingSlot(IOSkywalkRing *,uint)
IOSkywalkRingSlot::setBusy(bool)
IOSkywalkRingSlot::setSlotHandle(__slot_desc *)
IOSkywalkRxCompletionQueue::MetaClass::MetaClass(void)
IOSkywalkRxCompletionQueue::MetaClass::alloc(void)
IOSkywalkRxCompletionQueue::addReporters(IOService *,OSSet *)
IOSkywalkRxCompletionQueue::checkForWork(void)
IOSkywalkRxCompletionQueue::getReportChannelValue(ulong long)
IOSkywalkRxCompletionQueue::setPacketPoller(IOSkywalkPacketPoller *)
IOSkywalkRxCompletionQueue::withPool(IOSkywalkPacketBufferPool *,uint,uint,OSObject *,uint (*)(OSObject *,IOSkywalkRxCompletionQueue*,IOSkywalkPacket **,uint,void *),void *,uint)
IOSkywalkRxCompletionQueue::~IOSkywalkRxCompletionQueue()
IOSkywalkRxSubmissionQueue::MetaClass::MetaClass(void)
IOSkywalkRxSubmissionQueue::MetaClass::alloc(void)
IOSkywalkRxSubmissionQueue::addReporters(IOService *,OSSet *)
IOSkywalkRxSubmissionQueue::checkForWork(void)
IOSkywalkRxSubmissionQueue::getPacketCount(void)
IOSkywalkRxSubmissionQueue::getReportChannelValue(ulong long)
IOSkywalkRxSubmissionQueue::packetCompletion(IOSkywalkPacket *,IOSkywalkPacketQueue *,uint)
IOSkywalkRxSubmissionQueue::withPool(IOSkywalkPacketBufferPool *,uint,uint,uint,OSObject *,uint (*)(OSObject *,IOSkywalkRxSubmissionQueue*,IOSkywalkPacket * const*,uint,void *),void *,uint)
IOSkywalkRxSubmissionQueue::~IOSkywalkRxSubmissionQueue()
IOSkywalkRxSubmissionQueue__disable
IOSkywalkRxSubmissionQueue__disable_0
IOSkywalkRxSubmissionQueue__disable_1
IOSkywalkRxSubmissionQueue__disable_2
IOSkywalkRxSubmissionQueue__disable_3
IOSkywalkStatisticsReporter::MetaClass::MetaClass(void)
IOSkywalkStatisticsReporter::MetaClass::alloc(void)
IOSkywalkStatisticsReporter::free(void)
IOSkywalkStatisticsReporter::handleUpdateReport(IOReportChannelList *,uint,void *,void *)
IOSkywalkStatisticsReporter::setValueLocked(ulong long,long long)
IOSkywalkStatisticsReporter::withTarget(OSObject *,ulong long (*)(OSObject *,ulong long),IOService *,ushort,ulong long)
IOSkywalkStatisticsReporter::~IOSkywalkStatisticsReporter()
IOSkywalkTxCompletionQueue::MetaClass::MetaClass(void)
IOSkywalkTxCompletionQueue::MetaClass::alloc(void)
IOSkywalkTxCompletionQueue::addReporters(IOService *,OSSet *)
IOSkywalkTxCompletionQueue::checkForWork(void)
IOSkywalkTxCompletionQueue::getReportChannelValue(ulong long)
IOSkywalkTxCompletionQueue::withPool(IOSkywalkPacketBufferPool *,uint,uint,OSObject *,uint (*)(OSObject *,IOSkywalkTxCompletionQueue*,IOSkywalkPacket **,uint,void *),void *,uint)
IOSkywalkTxCompletionQueue::~IOSkywalkTxCompletionQueue()
IOSkywalkTxSubmissionQueue::MetaClass::MetaClass(void)
IOSkywalkTxSubmissionQueue::MetaClass::alloc(void)
IOSkywalkTxSubmissionQueue::addReporters(IOService *,OSSet *)
IOSkywalkTxSubmissionQueue::checkForWork(void)
IOSkywalkTxSubmissionQueue::defaultQueryFreeSpace(uint *)
IOSkywalkTxSubmissionQueue::defaultQueryFreeSpaceHandler(OSObject *,IOSkywalkTxSubmissionQueue*,uint *)
IOSkywalkTxSubmissionQueue::getDataByteCount(uint *)
IOSkywalkTxSubmissionQueue::getPacketCount(void)
IOSkywalkTxSubmissionQueue::getReportChannelValue(ulong long)
IOSkywalkTxSubmissionQueue::purgePackets(void)
IOSkywalkTxSubmissionQueue::withPool(IOSkywalkPacketBufferPool *,uint,uint,OSObject *,uint (*)(OSObject *,IOSkywalkTxSubmissionQueue*,IOSkywalkPacket * const*,uint,void *),void *,uint)
IOSkywalkTxSubmissionQueue::withPool(IOSkywalkPacketBufferPool *,uint,uint,OSObject *,uint (*)(OSObject *,IOSkywalkTxSubmissionQueue*,uint *),uint (*)(OSObject *,IOSkywalkTxSubmissionQueue*,IOSkywalkPacket * const*,uint,void *),void *,uint)
IOSkywalkTxSubmissionQueue::~IOSkywalkTxSubmissionQueue()
IOSlaveCPU::startCPUWithOptions(IOSlaveFirmware *,uint)
IOSlaveEndpoint::checkForWork(void)
IOSlaveEndpoint::disable(void)
IOSlaveEndpoint::enable(void)
IOSlaveEndpoint::free(void)
IOSlaveEndpoint::initWithOptions(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint)
IOSlaveMemoryBuffer::clean(ulong long,ulong long)
IOSlaveMemoryBuffer::cleanflush(ulong long,ulong long)
IOSlaveMemoryBuffer::free(void)
IOSlaveMemoryBuffer::initWithOptions(uint,ulong long,ulong long,IOMapper *,uchar)
IOSlaveMemoryBuffer::withOptions(uint,ulong long,ulong long,IOMapper *,uchar)
IOSlaveProcessor::_endpointEnable(void *)
IOSlaveProcessor::free(void)
IOSlaveProcessor::notifyEndpointEnabled(uint,bool)
IOSlaveProcessor::slaveMemoryAlignment(void)
IOSlaveProcessor::start(IOService *)
IOSlaveProcessor::startWithOptions(IOService *,uint)
IOSlowAdaptiveClockingDomain::MetaClass::alloc(void)
IOSlowAdaptiveClockingDomain::_addVictim(ulong long,uint,uint)
IOSlowAdaptiveClockingDomain::_allocateVictims(void)
IOSlowAdaptiveClockingDomain::_findIndexList(void)
IOSlowAdaptiveClockingDomain::_findIndexListGated(void)
IOSlowAdaptiveClockingDomain::_getIndexList(uint *,uint *)
IOSlowAdaptiveClockingDomain::_getIndexListGated(uint *,uint *)
IOSlowAdaptiveClockingDomain::_maskEnable(uint *,uint,bool)
IOSlowAdaptiveClockingDomain::_maskFindAll(uint *,uint *)
IOSlowAdaptiveClockingDomain::_maskFindFirst(uint *)
IOSlowAdaptiveClockingDomain::_removeVictim(ulong long)
IOSlowAdaptiveClockingDomain::addVictims(uint,IOSACVictimFrequency *)
IOSlowAdaptiveClockingDomain::clearVictims(void)
IOSlowAdaptiveClockingDomain::free(void)
IOSlowAdaptiveClockingDomain::getLeastAggressors(uint *,uint *)
IOSlowAdaptiveClockingDomain::initWithAggressor(void *,IOSACActionCallback_t const&,uint,ulong long *,uint *)
IOSlowAdaptiveClockingDomain::removeVictims(uint,IOSACVictimFrequency *)
IOSlowAdaptiveClockingDomain::withAggressor(void *,IOSACActionCallback_t const&,uint,ulong long *,uint *)
IOSlowAdaptiveClockingDomain::~IOSlowAdaptiveClockingDomain()
IOSlowAdaptiveClockingManager::IOSlowAdaptiveClockingManager(OSMetaClass const*)
IOSlowAdaptiveClockingManager::_addDomain(uint,IOSlowAdaptiveClockingDomain *)
IOSlowAdaptiveClockingManager::_addDomainGated(uint,IOSlowAdaptiveClockingDomain *)
IOSlowAdaptiveClockingManager::_findDomain(uint,bool)
IOSlowAdaptiveClockingManager::_findDomainGated(uint,bool,IOSlowAdaptiveClockingDomain **)
IOSlowAdaptiveClockingManager::_getDomainSymbol(uint)
IOSlowAdaptiveClockingManager::addVictims(uint,uint *,uint,IOSACVictimFrequency *)
IOSlowAdaptiveClockingManager::clearVictims(uint,uint *)
IOSlowAdaptiveClockingManager::free(void)
IOSlowAdaptiveClockingManager::getLeastAggressors(uint,uint *,uint *)
IOSlowAdaptiveClockingManager::initAggressor(uint,void *,IOSACActionCallback_t const&,uint,ulong long *,uint *)
IOSlowAdaptiveClockingManager::removeVictims(uint,uint *,uint,IOSACVictimFrequency *)
IOSlowAdaptiveClockingManager::start(IOService *)
IOSlowAdaptiveClockingManager::~IOSlowAdaptiveClockingManager()
IOSocketEventSource::checkForWork(void)
IOSocketEventSource::handleUpcall(void)
IOSocketEventSource::init(OSObject *,__socket *,void *,void (*)(OSObject *,IOSocketEventSource*,__socket *,void *))
IOSocketEventSource::socketEventSource(OSObject *,__socket *,void *,void (*)(OSObject *,IOSocketEventSource*,__socket *,void *))
IOSortableConfigurationDescriptor::withValues(uchar,uchar)
IOStateNotificationListener__free
IOStateReporter::MetaClass::MetaClass(void)
IOStateReporter::handleAddChannelSwap(ulong long,OSSymbol const*)
IOStateReporter::initWith(IOService *,ushort,short,ulong long)
IOStateReporter::with(IOService *,ushort,int,ulong long)
IOStateReporter::~IOStateReporter()
IOStorage::complete(IOStorageCompletion *,int,ulong long)
IOStorage::open(IOService *,uint,uint)
IOStorage::read(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,ulong long *)
IOStorage::write(IOService *,ulong long,IOMemoryDescriptor *,IOStorageAttributes *,ulong long *)
IOStorageSyncer::wait(void)
IOStream::addBuffer(IOStreamBuffer *)
IOStream::addBuffers(OSArray *)
IOStream::createQueues(uint,uint)
IOStream::dequeueInputEntry(IOStreamBufferQueueEntry *)
IOStream::destroyQueues(void)
IOStream::enqueueOutputBuffer(IOStreamBuffer *,ulong long,ulong long,ulong long,ulong long)
IOStream::enqueueOutputEntry(IOStreamBufferQueueEntry *)
IOStream::free(void)
IOStream::getBufferWithID(uint)
IOStream::handleClose(IOService *,uint)
IOStream::handleOpen(IOService *,uint,void *)
IOStream::init(OSDictionary *)
IOStream::initWithBuffers(OSArray *,IOStreamMode,uint,OSDictionary *)
IOStream::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOStream::removeAllBuffers(void)
IOStream::removeBuffer(IOStreamBuffer *)
IOStream::removeBuffer(uint)
IOStream::sendOutputNotification(void)
IOStreamBuffer::free(void)
IOStreamBuffer::initWithMemoryDescriptors(IOMemoryDescriptor *,IOMemoryDescriptor *,uint)
IOStreamBuffer::setControlBuffer(IOMemoryDescriptor *)
IOStreamBuffer::setDataBuffer(IOMemoryDescriptor *)
IOStreamUserClient::clientClose(void)
IOStreamUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOStreamUserClient::clientMemoryForTypeGated(uint,uint *,IOMemoryDescriptor **)
IOStreamUserClient::closeMethod(void)
IOStreamUserClient::free(void)
IOStreamUserClient::getBufferCountMethod(char *,ulong long *)
IOStreamUserClient::getModeMethod(char *,ulong long *)
IOStreamUserClient::getTargetAndMethodForIndex(IOService **,uint)
IOStreamUserClient::getTargetAndMethodForIndexGated(IOService **,uint,IOExternalMethod **)
IOStreamUserClient::getTargetAndTrapForIndex(IOService **,uint)
IOStreamUserClient::initWithTask(task *,void *,uint)
IOStreamUserClient::inputSyncTrap(uint)
IOStreamUserClient::inputTrap(uint)
IOStreamUserClient::openMethod(char *,char *,ulong long,ulong long *)
IOStreamUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOStreamUserClient::setModeMethod(char *,ulong long)
IOStreamUserClient::start(IOService *)
IOStreamUserClient::startMethod(void)
IOStreamUserClient::stop(IOService *)
IOStreamUserClient::stopMethod(void)
IOStreamUserClient::suspendMethod(void)
IOStreamUserClientInit::MergeDictionaryIntoDictionary(OSDictionary *,OSDictionary *)
IOStreamUserClientInit::MergeDictionaryIntoProvider(IOService *,OSDictionary *)
IOStreamUserClientInit::start(IOService *)
IOSubMemoryDescriptor::complete(uint)
IOSubMemoryDescriptor::free(void)
IOSubMemoryDescriptor::makeMapping(IOMemoryDescriptor *,task *,ulong long,uint,ulong long,ulong long)
IOSubMemoryDescriptor::prepare(uint)
IOSubMemoryDescriptor::redirect(task *,bool)
IOSubMemoryDescriptor::setOwnership(task *,int,uint)
IOSubMemoryDescriptor::setPurgeable(uint,uint *)
IOSubMemoryDescriptor__initSubRange_IOMemoryDescriptor___unsigned_long_long__unsigned_long_long__unsigned_int
IOSurface::IOSurface(void)
IOSurface::MetaClass::alloc(void)
IOSurface::allocate(void)
IOSurface::bindAccel(uint,uint)
IOSurface::canFenceBeCoalescedWithEarlierFence(IOFence *,IOFence *,bool)
IOSurface::cleanProcessorCaches(void)
IOSurface::clientRelease(void)
IOSurface::complete(void)
IOSurface::copyIOAVHDRStaticMetadataDictionary(void)
IOSurface::copyTimingInfo(IOSurface const*)
IOSurface::copyValue(OSSymbol const*,uint *)
IOSurface::copyValue(char const*,uint *)
IOSurface::createFence(IOFence **,uint,uint,void (*)(void *,void *,IOSurface*,int),void *,void *,uint)
IOSurface::createFence(uint,uint)
IOSurface::createFenceDebugDictionary(void)
IOSurface::createFenceWithTransaction(IOFenceTransaction *,IOFence **,uint,uint,void (*)(void *,void *,IOSurface*,int),void *,void *,uint)
IOSurface::createFenceWithTransaction(OSSharedPtr<IOFenceTransaction>,OSSharedPtr&<IOFence>,uint,uint,void (*)(void *,void *,IOSurface*,int),void *,void *,uint)
IOSurface::deallocate(void)
IOSurface::decrement_use_count(void)
IOSurface::deviceCacheForAccelerator(void *,uint,uint)
IOSurface::deviceLockSurface(uint)
IOSurface::deviceUnlockSurface(uint)
IOSurface::fenceCompleted(IOFence *)
IOSurface::fenceCompletedDispatch(void)
IOSurface::fenceDebug(void)
IOSurface::fencePrint(IOFence *)
IOSurface::finalize(void)
IOSurface::flushProcessorCaches(void)
IOSurface::free(void)
IOSurface::gatherDependentTransactions(IOFence *,OSSharedPtr<OSSet>)
IOSurface::getBulkAttachments(IOSurfaceColorAndSpatialKeysStruct *)
IOSurface::getBulkAttachments(IOSurfaceColorAndSpatialKeysStruct *,ulong *)
IOSurface::getBytesPerRowOfTileDataOfPlane(uint)
IOSurface::getBytesPerRowOfTileHeaderGroupsOfPlane(uint)
IOSurface::getBytesPerTileHeaderOfPlane(uint)
IOSurface::getCompressedPlaneInfo(uint)
IOSurface::getCompressionFootprintOfPlane(uint)
IOSurface::getCompressionTypeOfPlane(uint)
IOSurface::getHTPCPredictionSelectorOfPlane(uint)
IOSurface::getHTPCVerticalHeaderGroupingModeOfPlane(uint)
IOSurface::getHeightInTilesOfPlane(uint)
IOSurface::getHorizontalPixelOffsetWithinTileArrayOfPlane(uint)
IOSurface::getPlaneAddressFormat(uint)
IOSurface::getPlaneBase(uint)
IOSurface::getPlaneBytesPerElement(uint)
IOSurface::getPlaneBytesPerRow(uint)
IOSurface::getPlaneElementHeight(uint)
IOSurface::getPlaneElementWidth(uint)
IOSurface::getPlaneExtendedPixelsBottom(uint)
IOSurface::getPlaneExtendedPixelsRight(uint)
IOSurface::getPlaneHeight(uint)
IOSurface::getPlaneOffset(uint)
IOSurface::getPlaneSize(uint)
IOSurface::getPlaneWidth(uint)
IOSurface::getTileDataRegionOffsetOfPlane(uint)
IOSurface::getTileHeaderRegionOffsetOfPlane(uint)
IOSurface::getTileHeightOfPlane(uint)
IOSurface::getTileWidthOfPlane(uint)
IOSurface::getTypeOfComponentOfPlane(uint,uint)
IOSurface::getVerticalPixelOffsetWithinTileArrayOfPlane(uint)
IOSurface::getWidthInTilesOfPlane(uint)
IOSurface::increment_use_count(void)
IOSurface::init(IOSurfaceRoot *,task *,OSDictionary *,IOSurface*)
IOSurface::init_values(void)
IOSurface::internalSetMemoryDescriptor(IOMemoryDescriptor *)
IOSurface::ktraceEmitDebugInfo(bool)
IOSurface::lockSurface(uint,uint *)
IOSurface::parse_properties(OSDictionary *)
IOSurface::prepare(void)
IOSurface::processorDataUpdated(bool,bool)
IOSurface::purge(void)
IOSurface::registerSurface(void)
IOSurface::release(int)
IOSurface::release(int)
IOSurface::release(void)
IOSurface::removeDeviceCache(IOSurfaceDeviceCache *)
IOSurface::removeValue(OSString const*,uint *)
IOSurface::removeValue(OSSymbol const*,uint *)
IOSurface::resetLayout(void)
IOSurface::setBulkAttachments(IOSurfaceColorAndSpatialKeysStruct *,ulong)
IOSurface::setCompressedTileDataRegionMemoryUsedOfPlane(uint,uint)
IOSurface::setCurrentDeviceCache(IOSurfaceDeviceCache *)
IOSurface::setDetachModeCode(ulong long,ulong long,ulong long)
IOSurface::setIndexedTimestamp(ulong long,ulong long)
IOSurface::setLayoutFromDescriptor(IOSurfaceDescriptor const*)
IOSurface::setMemoryDescriptor(IOMemoryDescriptor *)
IOSurface::setOwnership(task *,int,uint)
IOSurface::setTiled(bool)
IOSurface::setTimestamp(char const*,char const*,OSNumber *)
IOSurface::setValue(OSSymbol const*,OSMetaClassBase const*,uint *)
IOSurface::setValue(char const*,OSMetaClassBase const*,uint *)
IOSurface::setYCbCrMatrix(uint)
IOSurface::signalSharedEventOperation(ulong long,IOSurfaceSharedEvent *,ulong long)
IOSurface::synchronizeDeviceCaches(uint,uint,bool)
IOSurface::taggedRelease(void const*,int)
IOSurface::taggedRelease(void const*,int)
IOSurface::traceCurrentFence(IOFence *)
IOSurface::unlockSurface(uint,uint *)
IOSurface::unregisterSurface(void)
IOSurface::writeDebugInfoWithOptions(OSDictionary *,uint,ulong long)
IOSurface::~IOSurface()
IOSurfaceAcceleratorClient::IOSurfaceAcceleratorKernelClient(void)
IOSurfaceAcceleratorClient::IOSurfaceAcceleratorUserClient(AppleM2ScalerCSCDriver *,task *,void *,uint,OSDictionary *)
IOSurfaceAcceleratorClient::asynchronousKernelClientCompletionCallback(void *,void *,void *,void *)
IOSurfaceAcceleratorClient::asynchronousUserClientCompletionCallback(void *,void *)
IOSurfaceAcceleratorClient::clientClose(void)
IOSurfaceAcceleratorClient::findScalerDriver(AppleM2ScalerCSCDriver **)
IOSurfaceAcceleratorClient::getTargetAndMethodForIndex(IOService **,uint)
IOSurfaceAcceleratorClient::initClient(AppleM2ScalerCSCDriver *,IOSurfaceAcceleratorClient::ClientType)
IOSurfaceAcceleratorClient::k2k_get_histogram(ScalerHistogramDatav2 *)
IOSurfaceAcceleratorClient::k2k_get_histogram(ScalerHistogramDatav2 *)
IOSurfaceAcceleratorClient::k2k_transformSurface(IOSurface *,IOSurface *,OSDictionary *,IOSurfaceAcceleratorTransformRectangles *,IOSurfaceAcceleratorCompletion *,IOSurfaceAcceleratorSwap *,uint *)
IOSurfaceAcceleratorClient::k2k_transformSurface(IOSurface *,IOSurface *,OSDictionary *,IOSurfaceAcceleratorTransformRectangles *,IOSurfaceAcceleratorCompletion *,IOSurfaceAcceleratorSwap *,uint *)
IOSurfaceAcceleratorClient::setCustomFilter(SetFilterArgs *)
IOSurfaceAcceleratorClient::stopClient(void)
IOSurfaceAcceleratorClient::transformSurface_asynchronous(TransformSurfaceData *)
IOSurfaceAcceleratorClient::transformSurface_asynchronous(TransformSurfaceData *)
IOSurfaceAcceleratorClient::transformSurface_synchronous(TransformSurfaceData *)
IOSurfaceAcceleratorClient::transformSurface_synchronous(TransformSurfaceData *)
IOSurfaceAcceleratorClient::user_configure_performance_stats(uint,ulong long)
IOSurfaceAcceleratorClient::user_configure_performance_stats(uint,ulong long)
IOSurfaceAcceleratorClient::user_get_histogram(void *,ulong long)
IOSurfaceAcceleratorClient::user_get_histogram(void *,ulong long)
IOSurfaceAcceleratorClient::user_get_iosurfaceaccelerator_id(uint *)
IOSurfaceAcceleratorClient::user_get_iosurfaceaccelerator_id(uint *)
IOSurfaceAcceleratorClient::user_get_profiler_database(void *,ulong long)
IOSurfaceAcceleratorClient::user_get_profiler_database(void *,ulong long)
IOSurfaceAcceleratorClient::user_kernel_tests(IOSAKernelTestsArguments *,ulong long)
IOSurfaceAcceleratorClient::user_kernel_tests(IOSAKernelTestsArguments *,ulong long)
IOSurfaceAcceleratorClient::user_set_filter(SetFilterArgs *,ulong long)
IOSurfaceAcceleratorClient::user_set_filter(SetFilterArgs *,ulong long)
IOSurfaceAcceleratorClient::user_transform_surface(TransformSurfaceData *,ulong long)
IOSurfaceAcceleratorClient::wireMemoryToKernel(ulong,uint)
IOSurfaceBufferMemoryDescriptorPool::IOSurfaceBufferMemoryDescriptorPool(void)
IOSurfaceBufferMemoryDescriptorPool::MetaClass::alloc(void)
IOSurfaceBufferMemoryDescriptorPool::disposeMemoryDescriptor(IOMemoryDescriptor *)
IOSurfaceBufferMemoryDescriptorPool::free(void)
IOSurfaceBufferMemoryDescriptorPool::init(void)
IOSurfaceBufferMemoryDescriptorPool::newWiredMemoryDescriptorWithLength(ulong long,uint,uint,task *)
IOSurfaceBufferMemoryDescriptorPool::releaseSuperBufferWhenUnused(IOMemoryDescriptor *)
IOSurfaceBufferMemoryDescriptorPool::setSuperBuffer(IOMemoryDescriptor *,uint,uint,task *)
IOSurfaceBufferMemoryDescriptorPool::setSuperBuffer(uint,IOMemoryDescriptor *,uint,uint,task *)
IOSurfaceBufferMemoryDescriptorPool::~IOSurfaceBufferMemoryDescriptorPool()
IOSurfaceClient::MetaClass::alloc(void)
IOSurfaceClient::free(void)
IOSurfaceClient::getLockResult(IOSurfaceLockResult *)
IOSurfaceClient::getYCbCrMatrix(uint *)
IOSurfaceClient::increment_use_count(void)
IOSurfaceClient::init(IOSurfaceRootUserClient *,IOSurface *,bool)
IOSurfaceClient::mapInTask(task *,uint,bool)
IOSurfaceClient::withBuffer(IOSurfaceRootUserClient *,IOSurface *,bool)
IOSurfaceClient::writeDebugInfoWithOptions(OSDictionary *,uint)
IOSurfaceClient::~IOSurfaceClient()
IOSurfaceDescriptor::free(void)
IOSurfaceDescriptor::getPlaneAddressFormat(uint)
IOSurfaceDescriptor::getPlaneBase(uint)
IOSurfaceDescriptor::getPlaneBytesPerCompressedTileHeader(uint)
IOSurfaceDescriptor::getPlaneBytesPerElement(uint)
IOSurfaceDescriptor::getPlaneBytesPerRow(uint)
IOSurfaceDescriptor::getPlaneBytesPerRowOfCompressedTileHeaderGroups(uint)
IOSurfaceDescriptor::getPlaneBytesPerRowOfTileData(uint)
IOSurfaceDescriptor::getPlaneBytesPerTileData(uint)
IOSurfaceDescriptor::getPlaneCompressedTileDataRegionOffset(uint)
IOSurfaceDescriptor::getPlaneCompressedTileHeaderRegionOffset(uint)
IOSurfaceDescriptor::getPlaneCompressedTileHeight(uint)
IOSurfaceDescriptor::getPlaneCompressedTileWidth(uint)
IOSurfaceDescriptor::getPlaneCompressionFootprint(uint)
IOSurfaceDescriptor::getPlaneCompressionType(uint)
IOSurfaceDescriptor::getPlaneElementHeight(uint)
IOSurfaceDescriptor::getPlaneElementWidth(uint)
IOSurfaceDescriptor::getPlaneHeight(uint)
IOSurfaceDescriptor::getPlaneHeightInCompressedTiles(uint)
IOSurfaceDescriptor::getPlaneOffset(uint)
IOSurfaceDescriptor::getPlaneSize(uint)
IOSurfaceDescriptor::getPlaneWidth(uint)
IOSurfaceDescriptor::getPlaneWidthInCompressedTiles(uint)
IOSurfaceDescriptor::init(void)
IOSurfaceDeviceCache::accelRelease(void)
IOSurfaceDeviceCache::free(void)
IOSurfaceDeviceCache::init(IOSurface *,void *,uint,uint,uint,bool,IOSurfaceDeviceCacheList *)
IOSurfaceDeviceCache::pageOff(void)
IOSurfaceDeviceCache::processorDataUpdated(bool)
IOSurfaceDeviceCache::purge(void)
IOSurfaceDeviceCache::release(void)
IOSurfaceDeviceCache::setCurrent(void)
IOSurfaceDeviceCache::setPurgeable(uint)
IOSurfaceDeviceCache::signalEventOperation(ulong long,IOSurfaceSharedEvent *,ulong long)
IOSurfaceDeviceCache::sync(void)
IOSurfaceDeviceCache::testpurgeable(void)
IOSurfaceDeviceCache::unpurge(bool)
IOSurfaceDeviceCache::wait(void)
IOSurfaceDeviceCache::withSurfaceBufferOnAccelerator(IOSurface *,void *,uint,uint,IOSurfaceDeviceCacheList *)
IOSurfaceDeviceMemoryRegion::MetaClass::alloc(void)
IOSurfaceDeviceMemoryRegion::allocateSurfaceBuffer(IOSurface *)
IOSurfaceDeviceMemoryRegion::deallocateSurfaceBuffer(IOSurface *)
IOSurfaceDeviceMemoryRegion::free(void)
IOSurfaceDeviceMemoryRegion::init(IOSurfaceRoot *,OSDictionary *,char const*,uint,uint)
IOSurfaceDeviceMemoryRegion::readSubregion(void *,ulong,ulong)
IOSurfaceDeviceMemoryRegion::reserveSurfaceBuffer(IOSurface *)
IOSurfaceDeviceMemoryRegion::writeDebugInfo(OSDictionary *)
IOSurfaceDeviceMemoryRegion::~IOSurfaceDeviceMemoryRegion()
IOSurfaceMemoryRegion::IOSurfaceMemoryRegion(OSMetaClass const*)
IOSurfaceMemoryRegion::MetaClass::alloc(void)
IOSurfaceMemoryRegion::free(void)
IOSurfaceMemoryRegion::init(IOSurfaceRoot *,OSDictionary *)
IOSurfaceMemoryRegion::writeDebugInfo(OSDictionary *)
IOSurfaceMemoryRegion::~IOSurfaceMemoryRegion()
IOSurfaceRoot::IOSurfaceRoot(void)
IOSurfaceRoot::MetaClass::alloc(void)
IOSurfaceRoot::addMemoryRegion(IOSurfaceMemoryRegion *)
IOSurfaceRoot::add_display_footprint_changed_callback(void (*)(void *),void *)
IOSurfaceRoot::add_surface_buffer(IOSurface *)
IOSurfaceRoot::alloc_handles(void)
IOSurfaceRoot::alloc_shared_handle(uint *)
IOSurfaceRoot::alloc_shared_handle(uint *)
IOSurfaceRoot::alloc_shared_handles(void)
IOSurfaceRoot::alloc_surface_shared(uint,IOSurfaceSharedRO **,IOSurfaceSharedRW **)
IOSurfaceRoot::alloc_surfaceid(uint *)
IOSurfaceRoot::alloc_surfaceid(uint *)
IOSurfaceRoot::async_release_thread(void)
IOSurfaceRoot::clientTaskStopped(task *)
IOSurfaceRoot::copyMemoryDescriptorPool(void)
IOSurfaceRoot::copyPortNameForSurfaceInTaskWithOptions(task *,IOSurface *,ulong long,uint *)
IOSurfaceRoot::createSurface(task *,OSDictionary *,IOSurface *)
IOSurfaceRoot::createSurfacePtr(task *,OSSharedPtr<OSDictionary>,IOSurface *)
IOSurfaceRoot::create_surface_internal(task *,OSDictionary *,IOSurface *)
IOSurfaceRoot::describeAllocations(void *,void (*)(void *,IOMemoryDescriptor *,uint,int *,int))
IOSurfaceRoot::fenceCompleted(IOFence *)
IOSurfaceRoot::fenceDispatch(IOInterruptEventSource *,int)
IOSurfaceRoot::find_surface(uint,task *,IOSurfaceRootUserClient *)
IOSurfaceRoot::free(void)
IOSurfaceRoot::free_handles(void)
IOSurfaceRoot::free_shared_handle(uint)
IOSurfaceRoot::free_surface_handle(IOSurface *,uint)
IOSurfaceRoot::free_surface_shared(void)
IOSurfaceRoot::generateUniqueAcceleratorID(void *)
IOSurfaceRoot::init(OSDictionary *)
IOSurfaceRoot::installMemoryRegions(void)
IOSurfaceRoot::log_client_surface_creation_counts(void)
IOSurfaceRoot::lookupMemoryRegion(OSString *)
IOSurfaceRoot::lookupMemoryRegion(char const*)
IOSurfaceRoot::lookupSurface(uint,task *)
IOSurfaceRoot::lookupSurfaceFromClient(uint,task *,IOSurfaceRootUserClient *)
IOSurfaceRoot::newUserClient(task *,void *,uint,IOUserClient **)
IOSurfaceRoot::notifySurface(uint,IOSurface *)
IOSurfaceRoot::purge_iomd_from_mappers(IOMemoryDescriptor *)
IOSurfaceRoot::registerMapper(IOMapper *)
IOSurfaceRoot::releaseSuperbufferMatchingSurface(IOSurface *)
IOSurfaceRoot::release_surface_async(IOSurface *)
IOSurfaceRoot::removeSurfaceNotify(IOSurfaceNotifyArgs *,IOSurfaceRootUserClient *)
IOSurfaceRoot::remove_display_footprint_changed_callback(void (*)(void *),void *)
IOSurfaceRoot::remove_surface_buffer(IOSurface *)
IOSurfaceRoot::setSurfaceNotify(ulong long *,IOSurfaceNotifyArgs *,IOSurfaceRootUserClient *)
IOSurfaceRoot::set_surfaceid_with_handle(IOSurface *,uint)
IOSurfaceRoot::start(IOService *)
IOSurfaceRoot::stop(IOService *)
IOSurfaceRoot::unregisterMapper(IOMapper *)
IOSurfaceRoot::updateLimits(uint,uint,uint,uint,uint)
IOSurfaceRoot::update_display_surface(IOService *,uint,IOSurface *)
IOSurfaceRoot::userClientForTask(task *)
IOSurfaceRoot::waitForFence(IOFence *)
IOSurfaceRoot::waitForFence_gated(IOFence *)
IOSurfaceRoot::wakeFence(IOFence *)
IOSurfaceRoot::writeDebugInfoWithOptions(OSDictionary *,uint)
IOSurfaceRoot::~IOSurfaceRoot()
IOSurfaceRootUserClient::MetaClass::alloc(void)
IOSurfaceRootUserClient::add_client_buffer(IOSurfaceClient *,bool)
IOSurfaceRootUserClient::add_shared_event_notification_port(ulong long *)
IOSurfaceRootUserClient::alloc_handles(void)
IOSurfaceRootUserClient::alloc_surface_client_shared(uint,ulong long *,ulong long *)
IOSurfaceRootUserClient::bind_accel(uint,uint,uint)
IOSurfaceRootUserClient::create_port_from_surface(uint,ulong long,uint *)
IOSurfaceRootUserClient::create_shared_event(uint *)
IOSurfaceRootUserClient::create_surface(void *,uint,IOSurfaceLockResult *,uint,uint *)
IOSurfaceRootUserClient::create_surface_client_mem(ulong long,ulong long,IOSurfaceLockResult *,uint *)
IOSurfaceRootUserClient::create_surface_fast_path(_IOSurfaceFastCreateArgs *,IOSurfaceLockResult *,uint,uint *)
IOSurfaceRootUserClient::free(void)
IOSurfaceRootUserClient::free_surface_client_shared(void)
IOSurfaceRootUserClient::free_surface_handle(IOSurfaceClient *,uint)
IOSurfaceRootUserClient::gather_iosurface_data(ulong long,OSSerialize *)
IOSurfaceRootUserClient::getSurfaceClient(uint,IOSurfaceClient **)
IOSurfaceRootUserClient::get_bulk_attachments(uint,IOSurfaceColorAndSpatialKeysArgs *,uint *)
IOSurfaceRootUserClient::get_data_value(IOSurfaceValueArgs *,void *,uint,uint *)
IOSurfaceRootUserClient::get_surface_use_count(uint,uint *)
IOSurfaceRootUserClient::get_tile_format(uint,uint *)
IOSurfaceRootUserClient::get_value(IOSurfaceValueArgs *,IOSurfaceValueArgs *,uint,uint *)
IOSurfaceRootUserClient::increment_surface_use_count(uint)
IOSurfaceRootUserClient::init(IOSurfaceRoot *,task *,OSDictionary *)
IOSurfaceRootUserClient::is_tiled(uint,bool *)
IOSurfaceRootUserClient::knows_surface(IOSurface *)
IOSurfaceRootUserClient::lock_surface(IOSurfaceLockData *,IOSurfaceLockResult *,uint,uint *)
IOSurfaceRootUserClient::log_surface_creation_count(void)
IOSurfaceRootUserClient::lookup_surface(uint,IOSurfaceLockResult *,uint *)
IOSurfaceRootUserClient::lookup_surface_from_port(uint,IOSurfaceLockResult *,uint *)
IOSurfaceRootUserClient::notify_shared_event(uint,ulong long,ulong long,ulong long,ulong long)
IOSurfaceRootUserClient::notify_surface(IOSurfaceNotifyRequest *,uint,uint)
IOSurfaceRootUserClient::prefetch_pages(uint,uint)
IOSurfaceRootUserClient::query_shared_event(uint,ulong long *,ulong long *)
IOSurfaceRootUserClient::release_surface(uint)
IOSurfaceRootUserClient::remove_shared_event_notification_port(ulong long)
IOSurfaceRootUserClient::remove_value(IOSurfaceValueArgs *,uint,IOSurfaceValueResultArgs *)
IOSurfaceRootUserClient::s_create_surface(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_gather_iosurface_data(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_get_data_value(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_get_graphics_comm_page_address(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_get_limits(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_get_value(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_get_ycbcrmatrix(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_log(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_ownership(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_ownership_identity(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_purgeable(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_surface_notify(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_timestamp(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::s_set_value(IOSurfaceRootUserClient*,void *,IOExternalMethodArguments *)
IOSurfaceRootUserClient::set_bulk_attachments(IOSurfaceColorAndSpatialKeysArgs *)
IOSurfaceRootUserClient::set_compressed_tile_data_region_memory_used_of_plane(uint,uint,uint)
IOSurfaceRootUserClient::set_detach_mode_code(uint,ulong long,ulong long,ulong long)
IOSurfaceRootUserClient::set_indexed_timestamp(uint,ulong long,ulong long)
IOSurfaceRootUserClient::set_ownership(uint,task *,int,uint)
IOSurfaceRootUserClient::set_surface_handle(IOSurfaceClient *,uint)
IOSurfaceRootUserClient::set_surface_handle(IOSurfaceClient *,uint)
IOSurfaceRootUserClient::set_tiled(uint,bool)
IOSurfaceRootUserClient::set_timestamp(IOSurfaceSetTimestampArgs *,uint)
IOSurfaceRootUserClient::set_value(IOSurfaceValueArgs *,uint,IOSurfaceValueResultArgs *)
IOSurfaceRootUserClient::set_ycbcrmatrix(uint,uint)
IOSurfaceRootUserClient::signal_shared_event(uint,ulong long)
IOSurfaceRootUserClient::signal_shared_event_operation(uint,ulong long,uint,ulong long)
IOSurfaceRootUserClient::start(IOService *)
IOSurfaceRootUserClient::stop(IOService *)
IOSurfaceRootUserClient::taskHasEntitlement(task *,char const*)
IOSurfaceRootUserClient::unlock_surface(IOSurfaceUnlockData *,IOSurfaceUnlockResult *,uint,uint *)
IOSurfaceRootUserClient::wait_shared_event(uint,ulong long,ulong long)
IOSurfaceRootUserClient::writeDebugInfoWithOptions(OSDictionary *,uint)
IOSurfaceRootUserClient::~IOSurfaceRootUserClient()
IOSurfaceSendRight::MetaClass::alloc(void)
IOSurfaceSendRight::free(void)
IOSurfaceSendRight::init(IOSurfaceRoot *,IOSurface *)
IOSurfaceSendRight::init(IOSurfaceRoot *,IOSurface *,ulong long)
IOSurfaceSendRight::withSurface(IOSurfaceRoot *,IOSurface *,ulong long)
IOSurfaceSendRight::~IOSurfaceSendRight()
IOSurfaceSharedEvent::add_notification(IOSurfaceSharedEventNotification *)
IOSurfaceSharedEvent::free(void)
IOSurfaceSharedEvent::free(void)
IOSurfaceSharedEvent::init(void)
IOSurfaceSharedEvent::notifyPort(IOSurfaceSharedEventNotificationPort *,ulong long,ulong long,ulong long)
IOSurfaceSharedEvent::signalCompleted(ulong long)
IOSurfaceSharedEvent::waitCompleted(ulong long,ulong long)
IOSurfaceSharedEventListener::event_notification_thread(void)
IOSurfaceSharedEventListener::free(void)
IOSurfaceSharedEventListener::free(void)
IOSurfaceSharedEventListener::init(thread_call_priority_t)
IOSurfaceSharedEventListener::schedule_event_notification(IOSurfaceSharedEventNotification *)
IOSurfaceSharedEventNotification::MetaClass::alloc(void)
IOSurfaceSharedEventNotification::free(void)
IOSurfaceSharedEventNotification::initWithEvent(IOSurfaceSharedEvent *,IOSurfaceSharedEventListener *,ulong long,ulong long,OSObject *,void (*)(OSObject *,IOSurfaceSharedEvent *,ulong long,ulong long))
IOSurfaceSharedEventNotification::initWithEvent(IOSurfaceSharedEvent *,IOSurfaceSharedEventNotificationPort *,ulong long,ulong long,ulong long)
IOSurfaceSharedEventNotification::sendNotification(void)
IOSurfaceSharedEventNotification::withEventListener(IOSurfaceSharedEvent *,IOSurfaceSharedEventListener *,ulong long,ulong long,OSObject *,void (*)(OSObject *,IOSurfaceSharedEvent *,ulong long,ulong long))
IOSurfaceSharedEventNotification::~IOSurfaceSharedEventNotification()
IOSurfaceSharedEventNotificationPort::free(void)
IOSurfaceSharedEventNotificationPort::initWithAsyncReference64(ulong long *)
IOSurfaceSharedEventReference::MetaClass::alloc(void)
IOSurfaceSharedEventReference::free(void)
IOSurfaceSharedEventReference::withSharedEvent(IOSurfaceSharedEvent *)
IOSurfaceSharedEventReference::~IOSurfaceSharedEventReference()
IOSurfaceWiredSendRight::MetaClass::alloc(void)
IOSurfaceWiredSendRight::free(void)
IOSurfaceWiredSendRight::init(IOSurfaceRoot *,IOSurface *,ulong long)
IOSystemStateNotification::serializeProperties(OSSerialize *)
IOSystemStateNotification::setProperties(OSObject *)
IOTS_U128::operator*(IOTS_U128 const&)
IOTS_U128::operator/(IOTS_U128 const&)
IOTS_U256::operator+(IOTS_U256 const&)
IOTS_uint64mul(ulong long,ulong long)
IOTextCrypter::createSession(pager_crypt_info *,char const*,void *)
IOTextCrypter::decryptPage(void const*,void *,ulong long,void *)
IOTextCrypter::decryptPage(void const*,void *,ulong long,void *)
IOTextCrypter::endCryptSession(void *)
IOTextCrypter::endCryptSession(void *)
IOTextCrypter::findCrypter(char const*)
IOTextCrypter::registerCrypter(char const*)
IOTimeSyncAWDLInterfaceAdapter::getHardwareAddress(IOEthernetAddress *)
IOTimeSyncAWDLInterfaceAdapter::start(IOService *)
IOTimeSyncAWDLInterfaceAdapter::stop(IOService *)
IOTimeSyncClockManager::MetaClass::alloc(void)
IOTimeSyncClockManager::addMappingForClockID(ulong long,uint *)
IOTimeSyncClockManager::addTSNCaptureServices(void)
IOTimeSyncClockManager::addUserFilteredClock(ulong long,ulong long,uchar,bool,ulong long *)
IOTimeSyncClockManager::addgPTPServices(void)
IOTimeSyncClockManager::airPlayDomainClockID(ulong long *)
IOTimeSyncClockManager::avbDomainClockID(ushort,ulong long *)
IOTimeSyncClockManager::copresenceDomainClockID(ulong long *)
IOTimeSyncClockManager::createTranslationService(void)
IOTimeSyncClockManager::delayedClockIDLookup(void *)
IOTimeSyncClockManager::dynamicClockIDInUse(ulong long)
IOTimeSyncClockManager::findMachAbsoluteClockID(void)
IOTimeSyncClockManager::free(void)
IOTimeSyncClockManager::init(OSDictionary *)
IOTimeSyncClockManager::interfaceMatched(IOService *,IONotifier *)
IOTimeSyncClockManager::mappingInUse(uint)
IOTimeSyncClockManager::nextAvailableDynamicClockID(ulong long *)
IOTimeSyncClockManager::probe(IOService *,int *)
IOTimeSyncClockManager::releaseDynamicClockID(ulong long)
IOTimeSyncClockManager::removeMappingForClockID(ulong long)
IOTimeSyncClockManager::removeTSNCaptureServices(void)
IOTimeSyncClockManager::removeUserFilteredClock(ulong long)
IOTimeSyncClockManager::removegPTPServices(void)
IOTimeSyncClockManager::sharedClockManager(void)
IOTimeSyncClockManager::start(IOService *)
IOTimeSyncClockManager::stop(IOService *)
IOTimeSyncClockManager::systemDomainClockID(ulong long *)
IOTimeSyncClockManager::timeSyncTimeClockID(ulong long *)
IOTimeSyncClockManager::~IOTimeSyncClockManager()
IOTimeSyncClockManagerUserClient::MetaClass::alloc(void)
IOTimeSyncClockManagerUserClient::addMappingForClockID(ulong long,uint *)
IOTimeSyncClockManagerUserClient::addUserFilteredClock(ulong long,ulong long,uchar,bool,ulong long *)
IOTimeSyncClockManagerUserClient::authorizedForExternalMethod(uint)
IOTimeSyncClockManagerUserClient::cleanupClientReferences(void)
IOTimeSyncClockManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncClockManagerUserClient::free(void)
IOTimeSyncClockManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncClockManagerUserClient::nextAvailableDynamicClockID(ulong long *)
IOTimeSyncClockManagerUserClient::releaseDynamicClockID(ulong long)
IOTimeSyncClockManagerUserClient::removeMappingForClockID(ulong long)
IOTimeSyncClockManagerUserClient::removeUserFilteredClock(ulong long)
IOTimeSyncClockManagerUserClient::start(IOService *)
IOTimeSyncClockManagerUserClient::stop(IOService *)
IOTimeSyncClockManagerUserClient::~IOTimeSyncClockManagerUserClient()
IOTimeSyncClockMapping::init(ulong long,uint)
IOTimeSyncClockTestUserClient::MetaClass::alloc(void)
IOTimeSyncClockTestUserClient::clockPCR1Measurement(ulong long,IOTimeSyncClockPCR1Measurement *)
IOTimeSyncClockTestUserClient::clockPCR2Measurement(ulong long *,ulong long &,ulong long &,ulong long &)
IOTimeSyncClockTestUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncClockTestUserClient::free(void)
IOTimeSyncClockTestUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncClockTestUserClient::start(IOService *)
IOTimeSyncClockTestUserClient::stop(IOService *)
IOTimeSyncClockTestUserClient::~IOTimeSyncClockTestUserClient()
IOTimeSyncDomain::IOTimeSyncDomain(void)
IOTimeSyncDomain::MetaClass::alloc(void)
IOTimeSyncDomain::addDomainUserClient(IOTimeSyncDomainUserClient *)
IOTimeSyncDomain::addLinkLayerPortOnInterface(OSString *,ushort *)
IOTimeSyncDomain::addReverseSync(OSString *,uchar,uint)
IOTimeSyncDomain::addTimeSyncPort(IOTimeSyncPort *)
IOTimeSyncDomain::addUnicastLinkLayerEtEPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomain::addUnicastLinkLayerPtPPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomain::addUnicastUDPv4EtEPortOnInterface(OSString *,uint,ushort *)
IOTimeSyncDomain::addUnicastUDPv4PtPPortOnInterface(OSString *,uint,ushort *)
IOTimeSyncDomain::addUnicastUDPv6EtEPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomain::addUnicastUDPv6PtPPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomain::becomeGrandmaster(void)
IOTimeSyncDomain::free(void)
IOTimeSyncDomain::fromDomainTime128ToMachAbsoluteTime(IOTS_U128,ulong long *,ushort *)
IOTimeSyncDomain::fromDomainTime128ToTimeSyncTime(IOTS_U128,ulong long *,ushort *)
IOTimeSyncDomain::fromDomainTime32ToMachAbsoluteTime(uint,ulong long *,ushort *)
IOTimeSyncDomain::fromDomainTime32ToTimeSyncTime(uint,ulong long *,ushort *)
IOTimeSyncDomain::fromDomainTimeIntervalToTimeSyncTimeInterval(ulong long)
IOTimeSyncDomain::fromDomainTimeToMachAbsoluteTime(ulong long)
IOTimeSyncDomain::fromDomainTimeToMachAbsoluteTimeWithGMID(ulong long,ulong long *,ushort *)
IOTimeSyncDomain::fromDomainTimeToTimeSyncTime(ulong long)
IOTimeSyncDomain::fromDomainTimeToTimeSyncTimeWithGMID(ulong long,ulong long *,ushort *)
IOTimeSyncDomain::fromMachAbsoluteTimeToDomainTime(ulong long)
IOTimeSyncDomain::fromMachAbsoluteTimeToDomainTime128(ulong long,ulong long *,ushort *,ulong long *)
IOTimeSyncDomain::fromMachAbsoluteTimeToDomainTimeWithGMID(ulong long,ulong long *,ushort *)
IOTimeSyncDomain::fromTimeSyncTimeIntervalToDomainTimeInterval(ulong long)
IOTimeSyncDomain::fromTimeSyncTimeToDomainTime(ulong long)
IOTimeSyncDomain::fromTimeSyncTimeToDomainTime128(ulong long,ulong long *,ushort *,ulong long *)
IOTimeSyncDomain::fromTimeSyncTimeToDomainTimeWithGMID(ulong long,ulong long *,ushort *)
IOTimeSyncDomain::getMachAbsoluteRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncDomain::getMachAbsoluteRateRatioAndAnchorsWithGMID(ulong long *,ulong long *,ulong long *,ulong long *,ulong long *,ushort *)
IOTimeSyncDomain::getTimeSyncTimeRateRatio(ulong long *,ulong long *)
IOTimeSyncDomain::getTimeSyncTimeRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncDomain::getTimeSyncTimeRateRatioAndAnchorsWithGMID(ulong long *,ulong long *,ulong long *,ulong long *,ulong long *,ushort *)
IOTimeSyncDomain::init(ulong long,IOTimeSyncDomainLocalClockType,OSDictionary *)
IOTimeSyncDomain::interfaceTerminated(OSString *)
IOTimeSyncDomain::portSetASCapable(IOTimeSyncPort *,bool)
IOTimeSyncDomain::receivedAnnounceOnPort(IOTimeSyncPort *,IOTimeSyncgPTPPriorityVector *,IOTimeSyncDomainAnnounce *,ulong long *,ulong)
IOTimeSyncDomain::receivedSyncOnPort(IOTimeSyncPort *,IOTimeSyncDomainSync *)
IOTimeSyncDomain::removeDomainUserClient(IOTimeSyncDomainUserClient *)
IOTimeSyncDomain::removeLinkLayerPortFromInterface(OSString *)
IOTimeSyncDomain::removeReverseSync(OSString *,uchar)
IOTimeSyncDomain::removeTimeSyncPort(IOTimeSyncPort *)
IOTimeSyncDomain::removeUnicastLinkLayerEtEPortFromInterface(OSString *,uchar *)
IOTimeSyncDomain::removeUnicastLinkLayerPtPPortFromInterface(OSString *,uchar *)
IOTimeSyncDomain::removeUnicastUDPv4EtEPortFromInterface(OSString *,uint)
IOTimeSyncDomain::removeUnicastUDPv4PtPPortFromInterface(OSString *,uint)
IOTimeSyncDomain::removeUnicastUDPv6EtEPortFromInterface(OSString *,uchar *)
IOTimeSyncDomain::removeUnicastUDPv6PtPPortFromInterface(OSString *,uchar *)
IOTimeSyncDomain::sendDelayStatisticsToUserland(ushort,ulong long,ulong long,ulong long,ulong long,ulong long,uint)
IOTimeSyncDomain::start(IOService *)
IOTimeSyncDomain::stop(IOService *)
IOTimeSyncDomain::syncReceiptTimeoutOnPort(IOTimeSyncPort *)
IOTimeSyncDomain::triggerUpdateOfSystemAnnounceInformation(void)
IOTimeSyncDomain::updatePathTrace(void)
IOTimeSyncDomain::updatePortRolesAndVariables(bool,IOTimeSyncPort *,IOTimeSyncDomainAnnounce *)
IOTimeSyncDomain::~IOTimeSyncDomain()
IOTimeSyncDomainUserClient::addLinkLayerPortOnInterface(OSString *,ushort *)
IOTimeSyncDomainUserClient::addReverseSync(OSString *,uchar,uint)
IOTimeSyncDomainUserClient::addUnicastLinkLayerEtEPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomainUserClient::addUnicastLinkLayerPtPPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomainUserClient::addUnicastUDPv4EtEPortOnInterface(OSString *,uint,ushort *)
IOTimeSyncDomainUserClient::addUnicastUDPv4PtPPortOnInterface(OSString *,uint,ushort *)
IOTimeSyncDomainUserClient::addUnicastUDPv6EtEPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomainUserClient::addUnicastUDPv6PtPPortOnInterface(OSString *,uchar *,ushort *)
IOTimeSyncDomainUserClient::authorizedForExternalMethod(uint)
IOTimeSyncDomainUserClient::cleanupClientPorts(void)
IOTimeSyncDomainUserClient::clientClose(void)
IOTimeSyncDomainUserClient::free(void)
IOTimeSyncDomainUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncDomainUserClient::interfaceTerminated(OSString *)
IOTimeSyncDomainUserClient::removeLinkLayerPortFromInterface(OSString *)
IOTimeSyncDomainUserClient::removeReverseSync(OSString *,uchar)
IOTimeSyncDomainUserClient::removeUnicastLinkLayerEtEPortFromInterface(OSString *,uchar *)
IOTimeSyncDomainUserClient::removeUnicastLinkLayerPtPPortFromInterface(OSString *,uchar *)
IOTimeSyncDomainUserClient::removeUnicastUDPv4EtEPortFromInterface(OSString *,uint)
IOTimeSyncDomainUserClient::removeUnicastUDPv4PtPPortFromInterface(OSString *,uint)
IOTimeSyncDomainUserClient::removeUnicastUDPv6EtEPortFromInterface(OSString *,uchar *)
IOTimeSyncDomainUserClient::removeUnicastUDPv6PtPPortFromInterface(OSString *,uchar *)
IOTimeSyncDomainUserClient::sendDelayStatisticsToUserland(ushort,ulong long,ulong long,ulong long,ulong long,ulong long,uint)
IOTimeSyncDomainUserClient::start(IOService *)
IOTimeSyncDomainUserClient::stop(IOService *)
IOTimeSyncEdgeTimeCapture::MetaClass::alloc(void)
IOTimeSyncEdgeTimeCapture::disableCapture(void)
IOTimeSyncEdgeTimeCapture::enableCapture(void)
IOTimeSyncEdgeTimeCapture::free(void)
IOTimeSyncEdgeTimeCapture::getTimestamp(uint,ulong long *,ulong long *)
IOTimeSyncEdgeTimeCapture::init(OSDictionary *)
IOTimeSyncEdgeTimeCapture::numberOfTimestamps(void)
IOTimeSyncEdgeTimeCapture::resetCapture(void)
IOTimeSyncEdgeTimeCapture::start(IOService *)
IOTimeSyncEdgeTimeCapture::~IOTimeSyncEdgeTimeCapture()
IOTimeSyncEdgeTimeCaptureUserClient::authorizedForExternalMethod(uint)
IOTimeSyncEdgeTimeCaptureUserClient::clientClose(void)
IOTimeSyncEdgeTimeCaptureUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncEdgeTimeCaptureUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncEdgeTimeCaptureUserClient::start(IOService *)
IOTimeSyncEdgeTimeCaptureUserClient::stop(IOService *)
IOTimeSyncEthernetConcreteControllerAdapter::start(IOService *)
IOTimeSyncEthernetControllerAdapter::addInterfaceAdapter(IOTimeSyncEthernetInterfaceAdapter *)
IOTimeSyncEthernetControllerAdapter::avbStateCallback(IOEthernetControllerAVBState,IOEthernetControllerAVBState)
IOTimeSyncEthernetControllerAdapter::free(void)
IOTimeSyncEthernetControllerAdapter::getHardwareAddress(IOEthernetAddress *)
IOTimeSyncEthernetControllerAdapter::init(OSDictionary *)
IOTimeSyncEthernetControllerAdapter::message(uint,IOService *,void *)
IOTimeSyncEthernetControllerAdapter::removeInterfaceAdapter(IOTimeSyncEthernetInterfaceAdapter *)
IOTimeSyncEthernetControllerAdapter::start(IOService *)
IOTimeSyncEthernetControllerAdapter::stop(IOService *)
IOTimeSyncEthernetControllerAdapter::terminate(uint)
IOTimeSyncEthernetControllerAdapter::timeSyncPacketSupport(void)
IOTimeSyncEthernetInterfaceAdapter::addTimeSyncReceivePacketHandler(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOTimeSyncEthernetInterfaceAdapter::avbPacketFromMbuf(__mbuf *)
IOTimeSyncEthernetInterfaceAdapter::avbPacketMapper(void)
IOTimeSyncEthernetInterfaceAdapter::free(void)
IOTimeSyncEthernetInterfaceAdapter::getHardwareAddress(IOEthernetAddress *)
IOTimeSyncEthernetInterfaceAdapter::getIfnet(void)
IOTimeSyncEthernetInterfaceAdapter::getNamePrefix(void)
IOTimeSyncEthernetInterfaceAdapter::getNumberOfRealtimeReceiveQueues(uint *)
IOTimeSyncEthernetInterfaceAdapter::getNumberOfRealtimeTransmitQueues(uint *)
IOTimeSyncEthernetInterfaceAdapter::getUnitNumber(void)
IOTimeSyncEthernetInterfaceAdapter::init(OSDictionary *)
IOTimeSyncEthernetInterfaceAdapter::linkDown(void)
IOTimeSyncEthernetInterfaceAdapter::linkUp(void)
IOTimeSyncEthernetInterfaceAdapter::lookupMACAddressForIPv4Address(uint,uchar *,int &)
IOTimeSyncEthernetInterfaceAdapter::mbufFromAVBPacket(IOEthernetController::IOEthernetAVBPacket *,bool,bool)
IOTimeSyncEthernetInterfaceAdapter::message(uint,IOService *,void *)
IOTimeSyncEthernetInterfaceAdapter::myIPv4AddressForAddress(uint,uint *,uint *)
IOTimeSyncEthernetInterfaceAdapter::myIPv6AddressForAddress(uchar const*,uchar *)
IOTimeSyncEthernetInterfaceAdapter::receivedTimeSyncPacket(__mbuf *,ulong long,bool)
IOTimeSyncEthernetInterfaceAdapter::removeTimeSyncReceivePacketHandler(void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOTimeSyncEthernetInterfaceAdapter::setGPTPPresent(bool)
IOTimeSyncEthernetInterfaceAdapter::setPortManager(IOTimeSyncPortManager *)
IOTimeSyncEthernetInterfaceAdapter::start(IOService *)
IOTimeSyncEthernetInterfaceAdapter::stop(IOService *)
IOTimeSyncEthernetInterfaceAdapter::timeSyncPacketSupport(void)
IOTimeSyncEthernetInterfaceAdapter::transmitTimeSyncPacket(IOEthernetController::IOEthernetAVBPacket *,ulong long)
IOTimeSyncEthernetInterfaceAdapter::transmittedTimeSyncPacket(uint,__mbuf *,ulong long,bool)
IOTimeSyncEthernetLegacyInterfaceAdapter::start(IOService *)
IOTimeSyncEthernetModernInterfaceAdapter::addRealtimeReceiveDestinationMAC(uint,uchar *)
IOTimeSyncEthernetModernInterfaceAdapter::avbPacketBufferOptions(void)
IOTimeSyncEthernetModernInterfaceAdapter::cleanupTransmitQueue(uint)
IOTimeSyncEthernetModernInterfaceAdapter::free(void)
IOTimeSyncEthernetModernInterfaceAdapter::getRealtimeReceiveQueueFilter(uint,ushort *,ushort *,uchar *)
IOTimeSyncEthernetModernInterfaceAdapter::getTransmitQueuePacketLatency(uint,ulong long *)
IOTimeSyncEthernetModernInterfaceAdapter::init(OSDictionary *)
IOTimeSyncEthernetModernInterfaceAdapter::removeRealtimeReceiveDestinationMAC(uint,uchar *)
IOTimeSyncEthernetModernInterfaceAdapter::setRealtimeReceiveQueueFilter(uint,ushort,ushort,uchar)
IOTimeSyncEthernetModernInterfaceAdapter::setRealtimeReceiveQueuePacketHandler(uint,void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOTimeSyncEthernetModernInterfaceAdapter::start(IOService *)
IOTimeSyncEthernetModernInterfaceAdapter::transmitRealtimePackets(uint,IOEthernetController::IOEthernetAVBPacket **,uint,bool,uint *)
IOTimeSyncEthernetPort::MetaClass::alloc(void)
IOTimeSyncEthernetPort::buildPacket(void *,ulong,uchar)
IOTimeSyncEthernetPort::init(ushort,OSDictionary *)
IOTimeSyncEthernetPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncEthernetPort::start(IOService *)
IOTimeSyncEthernetPort::~IOTimeSyncEthernetPort()
IOTimeSyncEthernetSoftDMAInterfaceAdapter::avbStateCallback(IOEthernetControllerAVBState,IOEthernetControllerAVBState)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::free(void)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::getTransmitQueuePacketLatency(uint,ulong long *)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::getTransmitQueuePrefetchDelay(uint,ulong long *)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::init(OSDictionary *)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::start(IOService *)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::stop(IOService *)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::terminate(uint)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::transmitDMAThread(void)
IOTimeSyncEthernetSoftDMAInterfaceAdapter::transmitRealtimePackets(uint,IOEthernetController::IOEthernetAVBPacket **,uint,bool,uint *)
IOTimeSyncFDEtEPort::IOTimeSyncFDEtEPort(OSMetaClass const*)
IOTimeSyncFDEtEPort::IOTimeSyncFDEtEPort(void)
IOTimeSyncFDEtEPort::MetaClass::alloc(void)
IOTimeSyncFDEtEPort::attach(IOService *)
IOTimeSyncFDEtEPort::calculateDelayStatistics(uint,uint,long long &,long long &,ulong long &,long long &,long long &)
IOTimeSyncFDEtEPort::delayTimeoutTimerFire(IOTimerEventSource *)
IOTimeSyncFDEtEPort::enablePort(long long &)
IOTimeSyncFDEtEPort::init(ushort,OSDictionary *)
IOTimeSyncFDEtEPort::linkDown(void)
IOTimeSyncFDEtEPort::linkUp(void)
IOTimeSyncFDEtEPort::processReceivedDelayRequestMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncFDEtEPort::processReceivedDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncFDEtEPort::processReceivedFollowUpMessage(IOTimeSyncgPTPFollowUpPayload const*,ulong)
IOTimeSyncFDEtEPort::processReceivedSyncMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncFDEtEPort::processSync(IOTimeSyncFDEtEPortSyncInfo *)
IOTimeSyncFDEtEPort::processTransmittedDelayRequestMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncFDEtEPort::processTransmittedDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncFDEtEPort::sendDelayRequest(ushort)
IOTimeSyncFDEtEPort::sendDelayResponse(ushort,IOTimeSyncgPTPPortIdentity,ulong long)
IOTimeSyncFDEtEPort::setDelayResponsePayload(ushort,ushort,IOTimeSyncgPTPPortIdentity,ulong long)
IOTimeSyncFDEtEPort::setPortRole(IOTimeSyncPortRole)
IOTimeSyncFDEtEPort::start(IOService *)
IOTimeSyncFDEtEPort::syncTimeoutNotification(void)
IOTimeSyncFDEtEPort::updateParametersForLink(IOTimeSyncNetworkPort::IOTSNPLinkInfo *,IOTimeSyncNetworkPort::IOTSNPLinkInfo *)
IOTimeSyncFDEtEPort::~IOTimeSyncFDEtEPort()
IOTimeSyncFDPtPPort::MetaClass::alloc(void)
IOTimeSyncFDPtPPort::attach(IOService *)
IOTimeSyncFDPtPPort::disablePort(long long &)
IOTimeSyncFDPtPPort::enablePort(long long &)
IOTimeSyncFDPtPPort::free(void)
IOTimeSyncFDPtPPort::init(ushort,OSDictionary *)
IOTimeSyncFDPtPPort::linkDown(void)
IOTimeSyncFDPtPPort::linkUp(void)
IOTimeSyncFDPtPPort::pDelayTimerFire(IOTimerEventSource *)
IOTimeSyncFDPtPPort::processPDelay(void)
IOTimeSyncFDPtPPort::processReceivedFollowUpMessage(IOTimeSyncgPTPFollowUpPayload const*,ulong)
IOTimeSyncFDPtPPort::processReceivedMessageIntervalTLV(IOTimeSyncgPTPMessageIntervalTLV const*,uchar)
IOTimeSyncFDPtPPort::processReceivedPDelayRequestMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncFDPtPPort::processReceivedPDelayResponseFollowUpMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncFDPtPPort::processReceivedPDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncFDPtPPort::processReceivedSyncMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncFDPtPPort::processTransmittedPDelayRequestMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncFDPtPPort::processTransmittedPDelayResponseFollowUpMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncFDPtPPort::processTransmittedPDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncFDPtPPort::resetPDelay(void)
IOTimeSyncFDPtPPort::sendFollowUp(ushort,ulong long)
IOTimeSyncFDPtPPort::sendPDelayRequest(void)
IOTimeSyncFDPtPPort::sendPDelayResponse(ushort,IOTimeSyncgPTPPortIdentity,ulong long)
IOTimeSyncFDPtPPort::sendPDelayResponseFollowUp(ushort,IOTimeSyncgPTPPortIdentity,ulong long)
IOTimeSyncFDPtPPort::setFollowUpPeerValidationPayload(ushort,ulong long)
IOTimeSyncFDPtPPort::setPDelayPayload(uchar,ushort,ushort,IOTimeSyncgPTPPortIdentity,ulong long,signed char)
IOTimeSyncFDPtPPort::start(IOService *)
IOTimeSyncFDPtPPort::stop(IOService *)
IOTimeSyncFDPtPPort::updateParametersForLink(IOTimeSyncNetworkPort::IOTSNPLinkInfo *,IOTimeSyncNetworkPort::IOTSNPLinkInfo *)
IOTimeSyncFDPtPPort::~IOTimeSyncFDPtPPort()
IOTimeSyncFilteredService::addTimestamps(ulong long,ulong long)
IOTimeSyncFilteredService::free(void)
IOTimeSyncFilteredService::fromTimeSyncTimeToDomainTime(ulong long)
IOTimeSyncFilteredService::getTimeSyncTimeRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncFilteredService::init(OSDictionary *,bool)
IOTimeSyncFilteredService::reinitializFilter(ulong long,ulong long)
IOTimeSyncFilteredService::resetFilter(bool)
IOTimeSyncFilteredService::resetSyncService(void)
IOTimeSyncFilteredService::start(IOService *)
IOTimeSyncFilteredService::updateClockLockState(void)
IOTimeSyncIntervalFilter128::initFilter(ulong long,uint)
IOTimeSyncIntervalFilter128::newTimePosition(IOTS_U128,uint *)
IOTimeSyncIntervalFilter128::reInitialiseFilter(ulong long,uint,uint *)
IOTimeSyncIntervalFilter::filterCount(uint)
IOTimeSyncIntervalFilter::free(void)
IOTimeSyncIntervalFilter::getMultiIntervalTime(uint)
IOTimeSyncIntervalFilter::initFilter(ulong long,uint)
IOTimeSyncIntervalFilter::newTimePosition(ulong long,uint *)
IOTimeSyncIntervalFilter::reInitialiseFilter(ulong long,uint,uint *)
IOTimeSyncIntervalFilterIIR128::IIR(IOTS_U256 *,IOTS_U256,int)
IOTimeSyncIntervalFilterIIR128::IOTimeSyncIntervalFilterIIR128(void)
IOTimeSyncIntervalFilterIIR128::MetaClass::alloc(void)
IOTimeSyncIntervalFilterIIR128::calculateNewTimePosition(IOTS_U128)
IOTimeSyncIntervalFilterIIR128::changeFilterToNewCoefficient(ushort)
IOTimeSyncIntervalFilterIIR128::initFilter(ulong long,uint,ushort,bool)
IOTimeSyncIntervalFilterIIR128::reInitialiseFilter(ulong long,uint,uint *)
IOTimeSyncIntervalFilterIIR::IIR(IOTS_U128 *,IOTS_U128,int)
IOTimeSyncIntervalFilterIIR::IOTimeSyncIntervalFilterIIR(void)
IOTimeSyncIntervalFilterIIR::MetaClass::alloc(void)
IOTimeSyncIntervalFilterIIR::calculateNewTimePosition(ulong long)
IOTimeSyncIntervalFilterIIR::initFilter(ulong long,uint,ushort,bool)
IOTimeSyncIntervalFilterIIR::reInitialiseFilter(ulong long,uint,uint *)
IOTimeSyncLocalClockPort::attach(IOService *)
IOTimeSyncLocalClockPort::calculatePriorities(void)
IOTimeSyncLocalClockPort::free(void)
IOTimeSyncLocalClockPort::getSyncPPMLimit(uint &,ulong long &,ulong long &)
IOTimeSyncLocalClockPort::handleGeneralNotification(void *,uint,IOService *,void *,ulong)
IOTimeSyncLocalClockPort::init(ulong long,ushort,OSDictionary *)
IOTimeSyncLocalClockPort::recalculateAnnounceInfo(void)
IOTimeSyncLocalClockPort::receivedPathTrace(ulong long *,ulong *)
IOTimeSyncLocalClockPort::setPortRole(IOTimeSyncPortRole)
IOTimeSyncLocalClockPort::setSystemPriorityVector(IOTimeSyncgPTPPriorityVector &)
IOTimeSyncLocalClockPort::start(IOService *)
IOTimeSyncLocalClockPort::stop(IOService *)
IOTimeSyncLocalClockPort::syncTimerFire(IOTimerEventSource *)
IOTimeSyncLocalClockPort::updateUTCParameters(void)
IOTimeSyncNanosecondSnapshotService::MetaClass::alloc(void)
IOTimeSyncNanosecondSnapshotService::free(void)
IOTimeSyncNanosecondSnapshotService::fromMachAbsolute(ulong long,uint *)
IOTimeSyncNanosecondSnapshotService::fromMachAbsoluteNanosecond(ulong long)
IOTimeSyncNanosecondSnapshotService::init(OSDictionary *)
IOTimeSyncNanosecondSnapshotService::resetSyncService(void)
IOTimeSyncNanosecondSnapshotService::start(IOService *)
IOTimeSyncNanosecondSnapshotService::startSnapshotting(void)
IOTimeSyncNanosecondSnapshotService::stop(IOService *)
IOTimeSyncNanosecondSnapshotService::stopSnapshotting(void)
IOTimeSyncNanosecondSnapshotService::takeCrossTimestamp(ulong long &,ulong long &,ulong long &)
IOTimeSyncNanosecondSnapshotService::takeDomainTime(void)
IOTimeSyncNanosecondSnapshotService::takeSnapshot(void)
IOTimeSyncNanosecondSnapshotService::timeDomainSnapshotTimer(OSObject *,IOTimerEventSource *)
IOTimeSyncNanosecondSnapshotService::timeDomainSnapshotTimerFire(void)
IOTimeSyncNanosecondSnapshotService::toMachAbsolute(ulong long,uint *)
IOTimeSyncNanosecondSnapshotService::toMachAbsoluteNanosecond(ulong long)
IOTimeSyncNanosecondSnapshotService::~IOTimeSyncNanosecondSnapshotService()
IOTimeSyncNetworkPort::IOTimeSyncNetworkPort(OSMetaClass const*)
IOTimeSyncNetworkPort::IOTimeSyncNetworkPort(void)
IOTimeSyncNetworkPort::MetaClass::alloc(void)
IOTimeSyncNetworkPort::addUserClientForAsyncNotifications(IOTimeSyncNetworkPortUserClient *)
IOTimeSyncNetworkPort::announceRateTimeoutTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::announceTimeoutTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::announceTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::attach(IOService *)
IOTimeSyncNetworkPort::disablePort(long long &)
IOTimeSyncNetworkPort::disablePort(void)
IOTimeSyncNetworkPort::dispatchTLV(IOTimeSyncgPTPGenericTLV const*,uchar)
IOTimeSyncNetworkPort::enablePort(long long &)
IOTimeSyncNetworkPort::enablePort(void)
IOTimeSyncNetworkPort::findTLVsInBuffer(uchar const*,ulong,IOTimeSyncNetworkPort::IOTSNPTLVInfo *,ulong)
IOTimeSyncNetworkPort::followUpTimeoutTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::free(void)
IOTimeSyncNetworkPort::getSyncPPMLimit(uint &,ulong long &,ulong long &)
IOTimeSyncNetworkPort::init(ushort,OSDictionary *)
IOTimeSyncNetworkPort::linkDown(void)
IOTimeSyncNetworkPort::linkUp(void)
IOTimeSyncNetworkPort::logMeanIntervalToTimerPeriod(signed char)
IOTimeSyncNetworkPort::logPacket(uchar const*,ulong)
IOTimeSyncNetworkPort::nominalSyncIntervalForLogMeanInterval(signed char)
IOTimeSyncNetworkPort::overrideReceiveMatching(bool,ulong long,ushort)
IOTimeSyncNetworkPort::parseReceivedPDU(uchar const*,ulong,ulong long,bool)
IOTimeSyncNetworkPort::parseTransmittedPDU(uchar const*,ulong,ulong long,bool)
IOTimeSyncNetworkPort::preprocessReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncNetworkPort::processReceivedAnnounceMessage(IOTimeSyncgPTPAnnouncePayload const*,ulong)
IOTimeSyncNetworkPort::processReceivedAppleClockSignallingV0TLV(IOTimeSyncgPTPAppleClockSignallingV0TLV const*,uchar)
IOTimeSyncNetworkPort::processReceivedAppleClockSignallingV1TLV(IOTimeSyncgPTPAppleClockSignallingV1TLV const*,uchar)
IOTimeSyncNetworkPort::processReceivedDelayRequestMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncNetworkPort::processReceivedDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncNetworkPort::processReceivedFollowUpMessage(IOTimeSyncgPTPFollowUpPayload const*,ulong)
IOTimeSyncNetworkPort::processReceivedMessageIntervalTLV(IOTimeSyncgPTPMessageIntervalTLV const*,uchar)
IOTimeSyncNetworkPort::processReceivedPDelayRequestMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncNetworkPort::processReceivedPDelayResponseFollowUpMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncNetworkPort::processReceivedPDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncNetworkPort::processReceivedSignalMessage(IOTimeSyncgPTPGenericSignalPayload const*,ulong)
IOTimeSyncNetworkPort::processReceivedSyncMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncNetworkPort::processTransmittedAnnounceMessage(IOTimeSyncgPTPAnnouncePayload const*,ulong)
IOTimeSyncNetworkPort::processTransmittedDelayRequestMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncNetworkPort::processTransmittedDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncNetworkPort::processTransmittedPDelayRequestMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncNetworkPort::processTransmittedPDelayResponseFollowUpMessage(IOTimeSyncgPTPPDelayPayload const*)
IOTimeSyncNetworkPort::processTransmittedPDelayResponseMessage(IOTimeSyncgPTPPDelayPayload const*,ulong long)
IOTimeSyncNetworkPort::processTransmittedSyncMessage(IOTimeSyncgPTPSyncPayload const*,ulong long)
IOTimeSyncNetworkPort::processUnknownTLV(IOTimeSyncgPTPGenericTLV const*,uchar)
IOTimeSyncNetworkPort::qualifyAnnounce(IOTimeSyncgPTPPortIdentity *,IOTimeSyncDomainAnnounce *,ulong long *,ulong)
IOTimeSyncNetworkPort::receivedPathTrace(ulong long *,ulong *)
IOTimeSyncNetworkPort::receivedSync(IOTimeSyncDomainSync *)
IOTimeSyncNetworkPort::removeUserClientForAsyncNotifications(IOTimeSyncNetworkPortUserClient *)
IOTimeSyncNetworkPort::sendAnnounce(void)
IOTimeSyncNetworkPort::sendAppleClockSignal(void)
IOTimeSyncNetworkPort::sendFollowUp(ushort,ulong long)
IOTimeSyncNetworkPort::sendMessageIntervalSignal(signed char,signed char,signed char)
IOTimeSyncNetworkPort::sendNotification(uint,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long)
IOTimeSyncNetworkPort::sendSync(void)
IOTimeSyncNetworkPort::setASCapableNotification(bool)
IOTimeSyncNetworkPort::setAdminEnabledNotification(bool)
IOTimeSyncNetworkPort::setAnnounceInfo(IOTimeSyncDomainAnnounce *)
IOTimeSyncNetworkPort::setAnnouncePayload(ulong)
IOTimeSyncNetworkPort::setFollowUpPayload(ushort,ulong long)
IOTimeSyncNetworkPort::setMessageHeader(uchar,ushort,ushort,ushort,uchar,signed char)
IOTimeSyncNetworkPort::setPortRole(IOTimeSyncPortRole)
IOTimeSyncNetworkPort::start(IOService *)
IOTimeSyncNetworkPort::stop(IOService *)
IOTimeSyncNetworkPort::syncTimeoutNotification(void)
IOTimeSyncNetworkPort::syncTimeoutTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::syncTimerFire(IOTimerEventSource *)
IOTimeSyncNetworkPort::terminate(uint)
IOTimeSyncNetworkPort::terminationAction(void *,void *,void *,void *)
IOTimeSyncNetworkPort::timeSyncReceiveCallback(IOEthernetController::IOEthernetAVBPacket *)
IOTimeSyncNetworkPort::timeSyncTransmitCallback(IOEthernetController::IOEthernetAVBPacket *)
IOTimeSyncNetworkPort::updateParametersForLink(IOTimeSyncNetworkPort::IOTSNPLinkInfo *,IOTimeSyncNetworkPort::IOTSNPLinkInfo *)
IOTimeSyncNetworkPort::~IOTimeSyncNetworkPort()
IOTimeSyncNetworkPortUserClient::disablePort(void)
IOTimeSyncNetworkPortUserClient::enablePort(void)
IOTimeSyncNetworkPortUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncNetworkPortUserClient::free(void)
IOTimeSyncNetworkPortUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncNetworkPortUserClient::releaseAsyncDCLCallback(void)
IOTimeSyncNetworkPortUserClient::sendAsyncNotification(uint,ulong long,ulong long,ulong long,ulong long,ulong long,ulong long)
IOTimeSyncNetworkPortUserClient::start(IOService *)
IOTimeSyncNetworkPortUserClient::stop(IOService *)
IOTimeSyncNotifier::MetaClass::alloc(void)
IOTimeSyncNotifier::~IOTimeSyncNotifier()
IOTimeSyncPort::attach(IOService *)
IOTimeSyncPort::detach(IOService *)
IOTimeSyncPort::free(void)
IOTimeSyncPort::init(ushort,OSDictionary *)
IOTimeSyncPort::logAnnounceInfo(void)
IOTimeSyncPort::logMessagePriorityVector(void)
IOTimeSyncPort::messagePriorityVector(void)
IOTimeSyncPort::setAnnounceInfo(IOTimeSyncDomainAnnounce *)
IOTimeSyncPort::setPathTrace(ulong long *,ulong)
IOTimeSyncPort::setPortPriorityVector(IOTimeSyncgPTPPriorityVector *)
IOTimeSyncPort::setPortRole(IOTimeSyncPortRole)
IOTimeSyncPort::start(IOService *)
IOTimeSyncPortManager::addLinkLayerPort(IOTimeSyncPort **)
IOTimeSyncPortManager::addPortOfType(IOTimeSyncPortType,IOTimeSyncPort **)
IOTimeSyncPortManager::addUnicastLinkLayerPort(IOTimeSyncPortType,IOTimeSyncPort **)
IOTimeSyncPortManager::addUnicastUDPv4Port(IOTimeSyncPortType,IOTimeSyncPort **)
IOTimeSyncPortManager::addUnicastUDPv6Port(IOTimeSyncPortType,IOTimeSyncPort **)
IOTimeSyncPortManager::filterDetachedCallback(void *,__ifnet *)
IOTimeSyncPortManager::filterReceivedEvent(kev_msg const*)
IOTimeSyncPortManager::free(void)
IOTimeSyncPortManager::init(OSDictionary *)
IOTimeSyncPortManager::macAddressForIPv4Address(uint,uint,uint,uchar *)
IOTimeSyncPortManager::macAddressForIPv6Address(uchar *,uchar *)
IOTimeSyncPortManager::myIPv4AddressForAddress(uint,uint *,uint *)
IOTimeSyncPortManager::myIPv6AddressForAddress(uchar *,uchar *)
IOTimeSyncPortManager::removePort(IOTimeSyncPort *)
IOTimeSyncPortManager::removeUnicastLinkLayerPort(IOTimeSyncPort *)
IOTimeSyncPortManager::removeUnicastUDPv4Port(IOTimeSyncPort *)
IOTimeSyncPortManager::start(IOService *)
IOTimeSyncPortManager::stop(IOService *)
IOTimeSyncPseudoStreamingInterfaceAdapter::addRealtimeReceiveDestinationMAC(uint,uchar *)
IOTimeSyncPseudoStreamingInterfaceAdapter::avbStateCallback(IOEthernetControllerAVBState,IOEthernetControllerAVBState)
IOTimeSyncPseudoStreamingInterfaceAdapter::filterDetachedCallback(void *,__ifnet *)
IOTimeSyncPseudoStreamingInterfaceAdapter::filterInputCallback(void *,__ifnet *,uint,__mbuf **,char **)
IOTimeSyncPseudoStreamingInterfaceAdapter::filterReceivedFrame(__mbuf **,char **)
IOTimeSyncPseudoStreamingInterfaceAdapter::free(void)
IOTimeSyncPseudoStreamingInterfaceAdapter::getNumberOfRealtimeTransmitQueues(uint *)
IOTimeSyncPseudoStreamingInterfaceAdapter::getRealtimeReceiveQueueFilter(uint,ushort *,ushort *,uchar *)
IOTimeSyncPseudoStreamingInterfaceAdapter::getTransmitQueuePacketLatency(uint,ulong long *)
IOTimeSyncPseudoStreamingInterfaceAdapter::init(OSDictionary *)
IOTimeSyncPseudoStreamingInterfaceAdapter::mbufTransmitCallback(uint,__mbuf *,ulong long,int,ulong long,ulong long,bool)
IOTimeSyncPseudoStreamingInterfaceAdapter::setRealtimeReceiveQueueFilter(uint,ushort,ushort,uchar)
IOTimeSyncPseudoStreamingInterfaceAdapter::setRealtimeReceiveQueuePacketHandler(uint,void (*)(void *,IOEthernetController::IOEthernetAVBPacket *),void *)
IOTimeSyncPseudoStreamingInterfaceAdapter::start(IOService *)
IOTimeSyncPseudoStreamingInterfaceAdapter::startTimeSyncReception(void)
IOTimeSyncPseudoStreamingInterfaceAdapter::stopTimeSyncReception(void)
IOTimeSyncPseudoStreamingInterfaceAdapter::terminate(uint)
IOTimeSyncPseudoStreamingInterfaceAdapter::transmitRealtimePackets(uint,IOEthernetController::IOEthernetAVBPacket **,uint,bool,uint *)
IOTimeSyncPseudoStreamingInterfaceAdapter::transmitThread(void)
IOTimeSyncPseudoStreamingInterfaceAdapter::transmitTimeSyncPacket(IOEthernetController::IOEthernetAVBPacket *,ulong long)
IOTimeSyncReverseSync::announceTimerFire(IOTimerEventSource *)
IOTimeSyncReverseSync::attach(IOService *)
IOTimeSyncReverseSync::buildPacket(void *,ulong,uchar)
IOTimeSyncReverseSync::detach(IOService *)
IOTimeSyncReverseSync::free(void)
IOTimeSyncReverseSync::init(ushort,uchar,uint,OSDictionary *)
IOTimeSyncReverseSync::linkDown(void)
IOTimeSyncReverseSync::linkUp(void)
IOTimeSyncReverseSync::message(uint,IOService *,void *)
IOTimeSyncReverseSync::parseTransmittedPDU(uchar const*,ulong,ulong long,bool)
IOTimeSyncReverseSync::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncReverseSync::sendAnnounce(void)
IOTimeSyncReverseSync::sendFollowUp(ushort,ulong long)
IOTimeSyncReverseSync::sendSync(void)
IOTimeSyncReverseSync::setMessageHeader(uchar,ushort,ushort,ushort,uchar,signed char)
IOTimeSyncReverseSync::start(IOService *)
IOTimeSyncReverseSync::stop(IOService *)
IOTimeSyncReverseSync::syncTimerFire(IOTimerEventSource *)
IOTimeSyncReverseSync::timeSyncReceiveCallback(IOEthernetController::IOEthernetAVBPacket *)
IOTimeSyncReverseSync::timeSyncTransmitCallback(IOEthernetController::IOEthernetAVBPacket *)
IOTimeSyncService::addUserClientForAsyncNotifications(IOTimeSyncUserClient *)
IOTimeSyncService::free(void)
IOTimeSyncService::fromDomainTimeToMachAbsoluteTime(ulong long)
IOTimeSyncService::fromDomainTimeToMachAbsoluteTimeInterval(ulong long)
IOTimeSyncService::fromMachAbsoluteTimeToDomainTime(ulong long)
IOTimeSyncService::fromMachAbsoluteTimeToDomainTimeInterval(ulong long)
IOTimeSyncService::getMachAbsoluteRateRatio(ulong long *,ulong long *)
IOTimeSyncService::getMachAbsoluteRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncService::getTimeSyncTimeRateRatio(ulong long *,ulong long *)
IOTimeSyncService::getTimeSyncTimeRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncService::init(OSDictionary *)
IOTimeSyncService::removeUserClientForAsyncNotifications(IOTimeSyncUserClient *)
IOTimeSyncService::resetSyncService(void)
IOTimeSyncService::sendNotification(uint,ulong long,ulong long)
IOTimeSyncService::setClockLockState(IOTimeSyncClockLockState)
IOTimeSyncService::start(IOService *)
IOTimeSyncTimeGlobals::IOTimeSyncTimeGlobals(void)
IOTimeSyncTimeGlobals::setupTimeSyncTime(void)
IOTimeSyncTimeGlobals::timeSyncTimeMode(void)
IOTimeSyncTimeGlobals::timesyncMatched(IOService *,IONotifier *)
IOTimeSyncTimeGlobals::timesyncMatchedNotification(void *,void *,IOService *,IONotifier *)
IOTimeSyncTimeGlobals::timesyncTimeoutThread(void *,void *)
IOTimeSyncTimeGlobals::~IOTimeSyncTimeGlobals()
IOTimeSyncTimeLineFilter128::IOTimeSyncTimeLineFilter128(OSMetaClass const*)
IOTimeSyncTimeLineFilter128::addTimestamps(IOTS_U128,IOTS_U128)
IOTimeSyncTimeLineFilter128::canConvertTime(void)
IOTimeSyncTimeLineFilter128::domainAIntervalFromDomainBInterval(ulong long)
IOTimeSyncTimeLineFilter128::domainBIntervalFromDomainAInterval(ulong long)
IOTimeSyncTimeLineFilter128::domainBTimeFromDomainATime(IOTS_U128)
IOTimeSyncTimeLineFilter128::free(void)
IOTimeSyncTimeLineFilter128::getAnchorsAndRateRatio(IOTS_U128 &,IOTS_U128 &,ulong long &,ulong long &)
IOTimeSyncTimeLineFilter128::getRateRatio(ulong long &,ulong long &)
IOTimeSyncTimeLineFilter128::init(void)
IOTimeSyncTimeLineFilter128::reInitialiseFilter(ulong long,ulong long,uint)
IOTimeSyncTimeLineFilter128::setDebugIdentifier(OSString *)
IOTimeSyncTimeLineFilter128::~IOTimeSyncTimeLineFilter128()
IOTimeSyncTimeLineFilter::addTimestamps(ulong long,ulong long)
IOTimeSyncTimeLineFilter::canConvertTime(void)
IOTimeSyncTimeLineFilter::domainAIntervalFromDomainBInterval(ulong long)
IOTimeSyncTimeLineFilter::domainATimeFromDomainBTime(ulong long)
IOTimeSyncTimeLineFilter::domainBIntervalFromDomainAInterval(ulong long)
IOTimeSyncTimeLineFilter::domainBTimeFromDomainATime(ulong long)
IOTimeSyncTimeLineFilter::free(void)
IOTimeSyncTimeLineFilter::getAnchorsAndRateRatio(ulong long &,ulong long &,ulong long &,ulong long &)
IOTimeSyncTimeLineFilter::getRateRatio(ulong long &,ulong long &)
IOTimeSyncTimeLineFilter::init(void)
IOTimeSyncTimeLineFilter::reInitialiseFilter(ulong long,ulong long,uint)
IOTimeSyncTimeLineFilter::setDebugIdentifier(OSString *)
IOTimeSyncTimeLineFilter::timestampCount(void)
IOTimeSyncTimeLineFilterIIR128::MetaClass::alloc(void)
IOTimeSyncTimeLineFilterIIR128::changeFilterToNewCoefficient(ushort)
IOTimeSyncTimeLineFilterIIR128::initFilter(ulong long,ulong long,uint,ushort,bool)
IOTimeSyncTimeLineFilterIIR128::~IOTimeSyncTimeLineFilterIIR128()
IOTimeSyncTimeLineFilterIIR::MetaClass::alloc(void)
IOTimeSyncTimeLineFilterIIR::initFilter(ulong long,ulong long,uint,ushort,bool)
IOTimeSyncTimeLineFilterIIR::~IOTimeSyncTimeLineFilterIIR()
IOTimeSyncTimeOfDayPort::IOTimeSyncTimeOfDayPort(void)
IOTimeSyncTimeOfDayPort::MetaClass::alloc(void)
IOTimeSyncTimeOfDayPort::calculatePriorities(void)
IOTimeSyncTimeOfDayPort::free(void)
IOTimeSyncTimeOfDayPort::init(ulong long,ushort,OSDictionary *)
IOTimeSyncTimeOfDayPort::start(IOService *)
IOTimeSyncTimeOfDayPort::synthesizeSync(void)
IOTimeSyncTimeOfDayPort::~IOTimeSyncTimeOfDayPort()
IOTimeSyncTimeSyncTimePort::calculatePriorities(void)
IOTimeSyncTimeSyncTimePort::receivedSync(IOTimeSyncDomainSync *)
IOTimeSyncTimeSyncTimePort::synthesizeSync(void)
IOTimeSyncTimedEdgeGenerator::beginExclusiveAccess(IOService *)
IOTimeSyncTimedEdgeGenerator::cancelRepeatingPulse(IOService *)
IOTimeSyncTimedEdgeGenerator::endExclusiveAccess(IOService *)
IOTimeSyncTimedEdgeGenerator::free(void)
IOTimeSyncTimedEdgeGenerator::init(bool,uint,uint,OSDictionary *)
IOTimeSyncTimedEdgeGenerator::scheduleNativePulse(IOService *,ulong long,uint)
IOTimeSyncTimedEdgeGenerator::scheduleNativeRepeatingPulse(IOService *,ulong long,uint,ulong long)
IOTimeSyncTimedEdgeGenerator::schedulePulse(IOService *,ulong long,uint)
IOTimeSyncTimedEdgeGenerator::scheduleRepeatingPulse(IOService *,ulong long,uint,ulong long)
IOTimeSyncTimedEdgeGenerator::start(IOService *)
IOTimeSyncTimedEdgeGenerator::stop(IOService *)
IOTimeSyncTimedEdgeGeneratorUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncTimedEdgeGeneratorUserClient::stop(IOService *)
IOTimeSyncTranslationMach::fromMachAbsoluteTimeToDomainTime(ulong long)
IOTimeSyncTranslationMach::getMachAbsoluteRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncTranslationMach::getTimeSyncTimeRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncTranslationMach::start(IOService *)
IOTimeSyncTranslationPMGR::MetaClass::alloc(void)
IOTimeSyncTranslationPMGR::getMachAbsoluteRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncTranslationPMGR::init(OSDictionary *)
IOTimeSyncTranslationPMGR::resetSyncService(void)
IOTimeSyncTranslationPMGR::start(IOService *)
IOTimeSyncTranslationPMGR::startSnapshotting(void)
IOTimeSyncTranslationPMGR::stopSnapshotting(void)
IOTimeSyncTranslationPMGR::takeCrossTimestamp(ulong long &,ulong long &,ulong long &)
IOTimeSyncTranslationPMGR::takeSnapshot(void)
IOTimeSyncTranslationPMGR::timeDomainSnapshotTimerFire(void)
IOTimeSyncTranslationPMGR::~IOTimeSyncTranslationPMGR()
IOTimeSyncUnicastLinkLayerEtEPort::MetaClass::alloc(void)
IOTimeSyncUnicastLinkLayerEtEPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastLinkLayerEtEPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastLinkLayerEtEPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastLinkLayerEtEPort::setDestinationAddress(uchar *)
IOTimeSyncUnicastLinkLayerEtEPort::start(IOService *)
IOTimeSyncUnicastLinkLayerEtEPort::~IOTimeSyncUnicastLinkLayerEtEPort()
IOTimeSyncUnicastLinkLayerPtPPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastLinkLayerPtPPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastLinkLayerPtPPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastLinkLayerPtPPort::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastLinkLayerPtPPort::setDestinationAddress(uchar *)
IOTimeSyncUnicastLinkLayerPtPPort::start(IOService *)
IOTimeSyncUnicastUDPv4EtEPort::MetaClass::alloc(void)
IOTimeSyncUnicastUDPv4EtEPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastUDPv4EtEPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastUDPv4EtEPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv4EtEPort::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv4EtEPort::setDestinationAddress(uint)
IOTimeSyncUnicastUDPv4EtEPort::start(IOService *)
IOTimeSyncUnicastUDPv4EtEPort::~IOTimeSyncUnicastUDPv4EtEPort()
IOTimeSyncUnicastUDPv4PtPPort::MetaClass::alloc(void)
IOTimeSyncUnicastUDPv4PtPPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastUDPv4PtPPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastUDPv4PtPPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv4PtPPort::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv4PtPPort::setDestinationAddress(uint)
IOTimeSyncUnicastUDPv4PtPPort::start(IOService *)
IOTimeSyncUnicastUDPv4PtPPort::~IOTimeSyncUnicastUDPv4PtPPort()
IOTimeSyncUnicastUDPv6EtEPort::MetaClass::alloc(void)
IOTimeSyncUnicastUDPv6EtEPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastUDPv6EtEPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastUDPv6EtEPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv6EtEPort::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv6EtEPort::setDestinationAddress(uchar *)
IOTimeSyncUnicastUDPv6EtEPort::~IOTimeSyncUnicastUDPv6EtEPort()
IOTimeSyncUnicastUDPv6PtPPort::MetaClass::alloc(void)
IOTimeSyncUnicastUDPv6PtPPort::buildPacket(void *,ulong,uchar)
IOTimeSyncUnicastUDPv6PtPPort::init(ushort,OSDictionary *)
IOTimeSyncUnicastUDPv6PtPPort::ipv6AddressesMatch(uchar const*,uchar const*)
IOTimeSyncUnicastUDPv6PtPPort::processReceivedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv6PtPPort::processTransmittedPacket(uchar const*,ulong,ulong long,bool)
IOTimeSyncUnicastUDPv6PtPPort::setDestinationAddress(uchar *)
IOTimeSyncUnicastUDPv6PtPPort::start(IOService *)
IOTimeSyncUnicastUDPv6PtPPort::~IOTimeSyncUnicastUDPv6PtPPort()
IOTimeSyncUserClient::MetaClass::alloc(void)
IOTimeSyncUserClient::clientClose(void)
IOTimeSyncUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncUserClient::free(void)
IOTimeSyncUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncUserClient::releaseAsyncCallback(void)
IOTimeSyncUserClient::sendAsyncNotification(uint,ulong long,ulong long)
IOTimeSyncUserClient::start(IOService *)
IOTimeSyncUserClient::stop(IOService *)
IOTimeSyncUserClient::~IOTimeSyncUserClient()
IOTimeSyncUserFilteredService::fromDomainTimeToMachAbsoluteTime(ulong long)
IOTimeSyncUserFilteredService::fromDomainTimeToMachAbsoluteTimeInterval(ulong long)
IOTimeSyncUserFilteredService::fromMachAbsoluteTimeToDomainTime(ulong long)
IOTimeSyncUserFilteredService::fromMachAbsoluteTimeToDomainTimeInterval(ulong long)
IOTimeSyncUserFilteredService::getMachAbsoluteRateRatioAndAnchors(ulong long *,ulong long *,ulong long *,ulong long *)
IOTimeSyncUserFilteredService::init(ulong long,ulong long,uchar,bool,OSDictionary *)
IOTimeSyncUserFilteredService::start(IOService *)
IOTimeSyncUserFilteredServiceUserClient::start(IOService *)
IOTimeSyncUserFilteredServiceUserClient::stop(IOService *)
IOTimeSyncUserFilteredServiceUserClient__externalMethod_unsigned_int__IOExternalMethodArguments___IOExternalMethodDispatch___OSObject___void
IOTimeSyncWiFiControllerAdapter::activateAVB(void)
IOTimeSyncWiFiControllerAdapter::deactivateAVB(void)
IOTimeSyncWiFiControllerAdapter::start(IOService *)
IOTimeSyncWiFiControllerAdapter::stop(IOService *)
IOTimeSyncWiFiControllerAdapter::timeSyncPacketSupport(void)
IOTimeSyncWiFiInterfaceAdapter::init(OSDictionary *)
IOTimeSyncWiFiInterfaceAdapter::start(IOService *)
IOTimeSyncWiFiInterfaceAdapter::timeSyncPacketSupport(void)
IOTimeSyncgPTPManager::addAVBDomain(ushort,ulong long *)
IOTimeSyncgPTPManager::addAirPlayDomain(ulong long *)
IOTimeSyncgPTPManager::addControllerAdapterForController(IOEthernetController *)
IOTimeSyncgPTPManager::addControllerAdapterForInterface(OSString *)
IOTimeSyncgPTPManager::addCopresenceDomain(ulong long *)
IOTimeSyncgPTPManager::addDomain(ulong long *)
IOTimeSyncgPTPManager::addInterfaceAdapterForInterface(OSString *)
IOTimeSyncgPTPManager::addMbufCallback(void)
IOTimeSyncgPTPManager::addPortManagerToInterface(OSString *)
IOTimeSyncgPTPManager::addTimeOfDayDomain(ulong long *)
IOTimeSyncgPTPManager::addUDPSocket(void)
IOTimeSyncgPTPManager::controllerAdapterForController(IOEthernetController *)
IOTimeSyncgPTPManager::controllerTerminated(IOService *,IONotifier *)
IOTimeSyncgPTPManager::createDomain(ulong long,IOTimeSyncDomainLocalClockType,IOTimeSyncDomain **)
IOTimeSyncgPTPManager::destroyDomain(IOTimeSyncDomain *)
IOTimeSyncgPTPManager::free(void)
IOTimeSyncgPTPManager::getFrequencyInfo(int &,bool &,int &,bool &,uint &,bool &,int &,bool &,int &,bool &,uint &,bool &,uchar &)
IOTimeSyncgPTPManager::getTemperature(bool &)
IOTimeSyncgPTPManager::handlePowerSourceNotification(void *,uint,IOService *,void *,ulong)
IOTimeSyncgPTPManager::init(OSDictionary *)
IOTimeSyncgPTPManager::interfaceAdapterForInterface(OSString *)
IOTimeSyncgPTPManager::interfaceTerminated(IOService *,IONotifier *)
IOTimeSyncgPTPManager::linkLayerPortNumberInUse(ushort)
IOTimeSyncgPTPManager::linkStatusForService(IOService *)
IOTimeSyncgPTPManager::mbufTXCallback(ulong,__ifnet *,ulong long,ulong,ulong,int)
IOTimeSyncgPTPManager::message(uint,IOService *,void *)
IOTimeSyncgPTPManager::modelName(void)
IOTimeSyncgPTPManager::nextAvailableLinkLayerPortNumber(ushort *)
IOTimeSyncgPTPManager::nextAvailableUDPPortNumber(ushort *,uchar)
IOTimeSyncgPTPManager::portManagerForInterface(OSString *)
IOTimeSyncgPTPManager::priorityCalculationInputs(bool &,bool &,bool &)
IOTimeSyncgPTPManager::releaseLinkLayerPortNumber(ushort)
IOTimeSyncgPTPManager::releaseUDPPortNumber(ushort,uchar)
IOTimeSyncgPTPManager::removeAVBDomain(ushort)
IOTimeSyncgPTPManager::removeAirPlayDomain(void)
IOTimeSyncgPTPManager::removeControllerAdapterForController(IOEthernetController *)
IOTimeSyncgPTPManager::removeControllerAdapterForInterface(OSString *)
IOTimeSyncgPTPManager::removeCopresenceDomain(void)
IOTimeSyncgPTPManager::removeDomain(ulong long)
IOTimeSyncgPTPManager::removeInterfaceAdapterForInterface(OSString *)
IOTimeSyncgPTPManager::removeMbufCallback(void)
IOTimeSyncgPTPManager::removePortManagerFromInterface(OSString *)
IOTimeSyncgPTPManager::removeUDPSocket(void)
IOTimeSyncgPTPManager::sharedgPTPManager(void)
IOTimeSyncgPTPManager::start(IOService *)
IOTimeSyncgPTPManager::stop(IOService *)
IOTimeSyncgPTPManager::temperatureSensorName(void)
IOTimeSyncgPTPManager::temperatureTimer(IOTimerEventSource *)
IOTimeSyncgPTPManager::triggerUDPv6Lookup(uchar const*,uint)
IOTimeSyncgPTPManager::udpPortNumberInUse(ushort)
IOTimeSyncgPTPManager::utcOffsetForEpoch(ulong long,bool &,bool &)
IOTimeSyncgPTPManager::utcOffsetsLoaded(void)
IOTimeSyncgPTPManagerInterfaceWithName(OSString *)
IOTimeSyncgPTPManagerSocketUpcall(__socket *,void *,int)
IOTimeSyncgPTPManagerUserClient::addAVBDomain(ushort,ulong long *)
IOTimeSyncgPTPManagerUserClient::addAirPlayDomain(ulong long *)
IOTimeSyncgPTPManagerUserClient::addCopresenceDomain(ulong long *)
IOTimeSyncgPTPManagerUserClient::addDomain(ulong long *)
IOTimeSyncgPTPManagerUserClient::authorizedForExternalMethod(uint)
IOTimeSyncgPTPManagerUserClient::clientClose(void)
IOTimeSyncgPTPManagerUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOTimeSyncgPTPManagerUserClient::free(void)
IOTimeSyncgPTPManagerUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOTimeSyncgPTPManagerUserClient::removeAVBDomain(ushort)
IOTimeSyncgPTPManagerUserClient::removeAirPlayDomain(void)
IOTimeSyncgPTPManagerUserClient::removeCopresenceDomain(void)
IOTimeSyncgPTPManagerUserClient::removeDomain(ulong long)
IOTimeSyncgPTPManagerUserClient::start(IOService *)
IOTimeSyncgPTPManagerUserClient::stop(IOService *)
IOTimerEventSource::enable(void)
IOTimerEventSource::init(uint,OSObject *,void (*)(OSObject *,IOTimerEventSource*))
IOTimerEventSource::setTimeoutMS(uint)
IOTimerEventSource::setTimeoutTicks(uint)
IOTimerEventSource::setTimeoutUS(uint)
IOTimerEventSource::setWorkLoop(IOWorkLoop *)
IOTimerEventSource::timeoutSignaled(void *,void *)
IOTimerEventSource::wakeAtTime(uint,uint)
IOTimerEventSource::wakeAtTime(ulong long)
IOTimerEventSource::wakeAtTimeMS(uint)
IOTimerEventSource::wakeAtTimeTicks(uint)
IOTimerEventSource::wakeAtTimeUS(uint)
IOTimerEventSource__cancelTimeout
IOTimerEventSource__checkForWork
IOTimerEventSource__disable
IOTimerEventSource__setTimeout_unsigned_int__unsigned_int
IOTimerEventSource__setTimeout_unsigned_int__unsigned_long_long__unsigned_long_long
IOTimerEventSource__setTimeout_unsigned_long_long
IOUSBArbitratorCommandGate::commandGate(OSObject *,int (*)(OSObject *,void *,void *,void *,void *))
IOUSBDevice::start(IOService *)
IOUSBDevice::stop(IOService *)
IOUSBDeviceConfigurator::start(IOService *)
IOUSBDeviceControlRequest::addPotentialOwner(OSObject *)
IOUSBDeviceControlRequest::dataStageWriteCompletion(void *,int,uint)
IOUSBDeviceControlRequest::findPotentialOwner(OSObject *)
IOUSBDeviceControlRequest::free(void)
IOUSBDeviceControlRequest::getScratchBufferPtr(ulong long *)
IOUSBDeviceControlRequest::initWithControllerOptions(IOUSBDeviceController *,int,int,uint)
IOUSBDeviceControlRequest::inputDataPacket(uchar *,ulong long)
IOUSBDeviceControlRequest::inputDataPacket(uchar *,ulong long)
IOUSBDeviceControlRequest::inputSetupPacket(uchar *)
IOUSBDeviceControlRequest::inputSetupPacket(uchar *)
IOUSBDeviceControlRequest::packetFilterAddPacket(int,void *,ulong long,int,bool)
IOUSBDeviceControlRequest::processSetupPacket(void)
IOUSBDeviceControlRequest::receiveControlOutData(ulong long,IOUSBDeviceControlCompletion const*,IOMemoryDescriptor *)
IOUSBDeviceControlRequest::removePotentialOwner(OSObject *)
IOUSBDeviceControlRequest::reset(void)
IOUSBDeviceControlRequest::reset(void)
IOUSBDeviceControlRequest::resetSetupPacket(void)
IOUSBDeviceControlRequest::sendControlInData(ulong long,IOUSBDeviceControlCompletion const*,IOMemoryDescriptor *,IOUSBDeviceCompletion const*)
IOUSBDeviceControlRequest::sendControlInDataGated(ulong long,IOUSBDeviceControlCompletion const*,IOMemoryDescriptor *,IOUSBDeviceCompletion const*)
IOUSBDeviceControlRequest::sendControlOutStatus(void *)
IOUSBDeviceControlRequest::stallSetupRequest(void)
IOUSBDeviceControlRequest::statusStageWriteCompletion(void *,int,uint)
IOUSBDeviceControlRequest::stop(void)
IOUSBDeviceControlRequest::withControllerOptions(IOUSBDeviceController *,int,int,uint)
IOUSBDeviceController::_cleanupDeviceDescription(void)
IOUSBDeviceController::_getOrCreate(OSDictionary *,char const*,uchar,OSDictionary *)
IOUSBDeviceController::_setValue(OSDictionary *,char const*,char const*)
IOUSBDeviceController::_setValue(OSDictionary *,char const*,ulong long,uint)
IOUSBDeviceController::abortEndpoint(int)
IOUSBDeviceController::activatePipe(IOUSBDevicePipe *)
IOUSBDeviceController::activatePipeGated(IOUSBDevicePipe *)
IOUSBDeviceController::addDevCapabilityDescriptors(void)
IOUSBDeviceController::addString(OSString *)
IOUSBDeviceController::allocateRequest(void)
IOUSBDeviceController::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
IOUSBDeviceController::completeEndpointIO(_IOUSBDeviceIORequestTag *)
IOUSBDeviceController::controlOutDataReadyCallback(ulong long,int)
IOUSBDeviceController::controlRequestDriverCallback(IOUSBDeviceInterface *,ulong long,bool,int,IOMemoryDescriptor *,ulong long,IOUSBDeviceControlCompletion *)
IOUSBDeviceController::createPipe(tCreatePipeParameters &)
IOUSBDeviceController::createPipeGated(tCreatePipeParameters &,IOUSBDevicePipe *&)
IOUSBDeviceController::createUSBDevice(OSDictionary *)
IOUSBDeviceController::deactivatePipe(IOUSBDevicePipe *)
IOUSBDeviceController::deactivatePipeGated(IOUSBDevicePipe *)
IOUSBDeviceController::deselectCurrentConfiguration(void)
IOUSBDeviceController::destroyUSBDevice(void)
IOUSBDeviceController::disablePacketFilter(void)
IOUSBDeviceController::doPostSetupAction(void *)
IOUSBDeviceController::enablePacketFilter(void (*)(IOUSBDeviceController*,_IOUSBDeviceIORequestTag *,tAppleUSBDevicePacketFilterRequestType,int))
IOUSBDeviceController::filterPacket(_IOUSBDeviceIORequestTag *,tAppleUSBDevicePacketFilterRequestType,int)
IOUSBDeviceController::findConfigurationForFunction(OSArray *,uint)
IOUSBDeviceController::findDevCapabilityDescriptor(uchar,uint *)
IOUSBDeviceController::findIOInterfaceByEndpointID(int,bool)
IOUSBDeviceController::findPipeByAddress(uchar)
IOUSBDeviceController::forceControllerReinit(void)
IOUSBDeviceController::forceControllerReinitThreadCall(OSObject *,thread_call *)
IOUSBDeviceController::forceControllerReinitThreadCallGated(void)
IOUSBDeviceController::free(void)
IOUSBDeviceController::gated_abortEndpoint(int)
IOUSBDeviceController::gated_addString(OSString *,uint *)
IOUSBDeviceController::gated_handleUSBCableConnect(void)
IOUSBDeviceController::gated_handleUSBCableDisconnect(void)
IOUSBDeviceController::gated_registerFunction(OSString *)
IOUSBDeviceController::gated_setProperties(OSDictionary *)
IOUSBDeviceController::getCurMinServiceInterval(uint &)
IOUSBDeviceController::getCurrentLimit(uint)
IOUSBDeviceController::getDMACommand(void)
IOUSBDeviceController::getInterfaceIndexForPipe(int)
IOUSBDeviceController::gotoAddressedState(void)
IOUSBDeviceController::gotoConfiguredState(int)
IOUSBDeviceController::gotoDefaultState(void)
IOUSBDeviceController::gotoDeviceState(IOUSBDeviceController::kDeviceState)
IOUSBDeviceController::gotoDisconnectedState(void)
IOUSBDeviceController::gotoPoweredState(void)
IOUSBDeviceController::handleTestMode(uchar)
IOUSBDeviceController::handleUSBCableDisconnect(void)
IOUSBDeviceController::handleUSBEnumerationTimeout(IOTimerEventSource *)
IOUSBDeviceController::handleUSBEnumerationTimeout(IOTimerEventSource *)
IOUSBDeviceController::handleUSBReset(void)
IOUSBDeviceController::handleUSBResume(void)
IOUSBDeviceController::handleUSBSetupPacket(void)
IOUSBDeviceController::handleUSBSoftDisconnect(void)
IOUSBDeviceController::handleUSBSuspend(void)
IOUSBDeviceController::handleUserlandCommand(OSString *,OSObject *)
IOUSBDeviceController::handleVendorRequestCompletion(void *,int,uint)
IOUSBDeviceController::hardwareException(int,char const*)
IOUSBDeviceController::io(int,IOMemoryDescriptor *,uint,IOUSBDeviceIsocFrame *,IOUSBDeviceIsocCompletion *)
IOUSBDeviceController::io(int,IOMemoryDescriptor *,ulong long,IOUSBDeviceCompletion *,ulong long *,uint)
IOUSBDeviceController::io(int,IOMemoryDescriptor *,ulong long,IOUSBDeviceCompletion *,ulong long *,uint)
IOUSBDeviceController::prepareDefaults(IOService *)
IOUSBDeviceController::readyForHost(void)
IOUSBDeviceController::sendBOSDescriptor(void)
IOUSBDeviceController::sendConfigurationDescriptor(void)
IOUSBDeviceController::sendDeviceDescriptor(void)
IOUSBDeviceController::serializeCurrentState(void *,OSSerialize *)
IOUSBDeviceController::setCurrentLimit(uint)
IOUSBDeviceController::setProperties(OSObject *)
IOUSBDeviceController::setupDeviceClearFeature(void)
IOUSBDeviceController::setupDeviceGetConfiguration(void)
IOUSBDeviceController::setupDeviceGetDescriptor(void)
IOUSBDeviceController::setupDeviceGetStatus(void)
IOUSBDeviceController::setupDeviceSetAddress(void)
IOUSBDeviceController::setupDeviceSetConfiguration(void)
IOUSBDeviceController::setupDeviceSetFeature(void)
IOUSBDeviceController::setupDeviceSetIsocDelay(void)
IOUSBDeviceController::setupDeviceSetSEL(void)
IOUSBDeviceController::setupDeviceSetSELDataCompletion(void *,int,ulong long,IOMemoryDescriptor *)
IOUSBDeviceController::setupDriverRequest(void)
IOUSBDeviceController::setupEndpointClearFeature(void)
IOUSBDeviceController::setupEndpointGetStatus(void)
IOUSBDeviceController::setupEndpointSetFeature(void)
IOUSBDeviceController::setupInterfaceGetDescriptor(void)
IOUSBDeviceController::setupInterfaceGetInterface(void)
IOUSBDeviceController::setupInterfaceGetStatus(void)
IOUSBDeviceController::setupInterfaceSetFeature(void)
IOUSBDeviceController::setupInterfaceSetInterface(void)
IOUSBDeviceController::stallEndpoint(int,bool)
IOUSBDeviceController::start(IOService *)
IOUSBDeviceController::startUSBStack(void)
IOUSBDeviceController::stop(IOService *)
IOUSBDeviceController::systemPowerDownHandler(void *,uint,IOService *,void *,ulong)
IOUSBDeviceController::tryRemoteWake(long long)
IOUSBDeviceController::tryRemoteWakeThreadCall(OSObject *)
IOUSBDeviceController::tryRemoteWakeThreadCallGated(void)
IOUSBDeviceController::unlockConfiguration(IOUSBDeviceInterface *,uint)
IOUSBDeviceDMACommand::clearMemoryDescriptor(bool)
IOUSBDeviceDMACommand::complete(bool,bool)
IOUSBDeviceDMACommand::free(void)
IOUSBDeviceDMACommand::initWithSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
IOUSBDeviceDMACommand::prepare(ulong long,ulong long,bool,bool)
IOUSBDeviceDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool)
IOUSBDeviceDMACommand::setMemoryDescriptor(IOMemoryDescriptor const*,bool,uint,ulong long,bool)
IOUSBDeviceDMACommand::withSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
IOUSBDeviceInterface::MetaClass::alloc(void)
IOUSBDeviceInterface::activateInterface(int)
IOUSBDeviceInterface::activateInterfaceGated(int)
IOUSBDeviceInterface::addAlternateSetting(int,int,int)
IOUSBDeviceInterface::addAlternateSettingGated(int,int,int,int &)
IOUSBDeviceInterface::addDevCapabilityDescriptor(OSData const*)
IOUSBDeviceInterface::appendDescriptor(uint,uchar *,uint,uint,int)
IOUSBDeviceInterface::appendDescriptorGated(IOUSBDeviceInterface::tInternalAppendDescriptorParameters *,int)
IOUSBDeviceInterface::close(IOService *,uint)
IOUSBDeviceInterface::closeGated(IOService *,uint)
IOUSBDeviceInterface::controlOutDataReadyCallback(ulong long,int)
IOUSBDeviceInterface::controlRequestDriverCallback(ulong long,bool,int,IOMemoryDescriptor *,ulong long,IOUSBDeviceControlCompletion *)
IOUSBDeviceInterface::copyAllStandardClassOrVendorDescriptors(uchar *,uint,int,int)
IOUSBDeviceInterface::copyClassOrVendorDescriptor(uchar *,uint,uint,int,int,int)
IOUSBDeviceInterface::copyClassOrVendorDescriptorGated(IOUSBDeviceInterface::tInternalClassOrVendorDescriptorParameters *,int &)
IOUSBDeviceInterface::copyDescriptor(uchar *,uint,int,uchar *,int)
IOUSBDeviceInterface::copyDescriptorGated(IOUSBDeviceInterface::tInternalCopyDescriptorParameters *,int &)
IOUSBDeviceInterface::createIOBuffer(uint,ulong long)
IOUSBDeviceInterface::createPipe(int,int,int,int,int,int)
IOUSBDeviceInterface::createPipeGated(tCreatePipeParameters *,int,IOUSBDevicePipe *&)
IOUSBDeviceInterface::deActivateInterface(void)
IOUSBDeviceInterface::deActivateInterfaceGated(void)
IOUSBDeviceInterface::finalizeConfiguration(void)
IOUSBDeviceInterface::finalizeConfigurationGated(void)
IOUSBDeviceInterface::findPipe(int,int,int)
IOUSBDeviceInterface::findPipeByAddress(uchar)
IOUSBDeviceInterface::findPipeByAddressGated(uchar,IOUSBDevicePipe *&)
IOUSBDeviceInterface::findPipeGated(int,int,int,IOUSBDevicePipe *&)
IOUSBDeviceInterface::free(void)
IOUSBDeviceInterface::getAlternateSettingCount(void)
IOUSBDeviceInterface::getAlternateSettingCountGated(int &)
IOUSBDeviceInterface::getBufferOptions(uint &)
IOUSBDeviceInterface::getClassForAlternateSetting(uchar)
IOUSBDeviceInterface::getCurrentAlternateSetting(void)
IOUSBDeviceInterface::getDescription(void)
IOUSBDeviceInterface::getDevCapabilityDescriptors(OSArray *)
IOUSBDeviceInterface::getMinServiceInterval(void)
IOUSBDeviceInterface::getPipeCountForAlternateSetting(uchar)
IOUSBDeviceInterface::getPipeCountForAlternateSettingGated(uchar,int &)
IOUSBDeviceInterface::getPipeForAlternateSetting(int,uchar)
IOUSBDeviceInterface::getPipeForAlternateSettingGated(int,uchar,IOUSBDevicePipe *&)
IOUSBDeviceInterface::getProtocolForAlternateSetting(uchar)
IOUSBDeviceInterface::getSubclassForAlternateSetting(uchar)
IOUSBDeviceInterface::getTotalPipeCount(void)
IOUSBDeviceInterface::getTotalPipeCountGated(int &)
IOUSBDeviceInterface::handleDriverControlRequest(IOUSBDeviceSetupPacket *,ulong long,int *,bool *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *)
IOUSBDeviceInterface::isActive(int *)
IOUSBDeviceInterface::isActiveGated(int *,bool &)
IOUSBDeviceInterface::isFinalized(void)
IOUSBDeviceInterface::isSuspended(void)
IOUSBDeviceInterface::registerCopyDescriptorCallback(int (*)(IOUSBDeviceInterface const*,uchar *,uint,int,int,int,int,void *),void *)
IOUSBDeviceInterface::registerCopyDescriptorCallbackGated(void *,void *)
IOUSBDeviceInterface::registerDriverRequestAction(void *,bool (*)(void *,IOUSBDeviceSetupPacket *,int *,IOMemoryDescriptor **,ulong long *,IOUSBDeviceControlCompletion *))
IOUSBDeviceInterface::registerDriverRequestActionGated(void *,void *)
IOUSBDeviceInterface::registerDriverRequestNotify(void *,bool (*)(void *,IOUSBDeviceSetupPacket *,ulong long))
IOUSBDeviceInterface::registerDriverRequestNotifyGated(void *,void *)
IOUSBDeviceInterface::resetDataToggles(void)
IOUSBDeviceInterface::resume(void)
IOUSBDeviceInterface::setActivationNotifyPort(ipc_port *)
IOUSBDeviceInterface::setDescription(char const*)
IOUSBDeviceInterface::setDescriptionGated(char const*)
IOUSBDeviceInterface::start(IOService *)
IOUSBDeviceInterface::stop(IOService *)
IOUSBDeviceInterface::suspend(void)
IOUSBDeviceInterface::switchToAlternateSetting(int)
IOUSBDeviceInterface::unlockConfiguration(uint)
IOUSBDeviceInterface::unregisterDriverRequestTarget(OSObject *)
IOUSBDeviceInterface::unregisterDriverRequestTargetGated(OSObject *)
IOUSBDeviceInterface::updateDeviceRemoteWakePolicy(bool)
IOUSBDeviceInterface::updateRemoteWakeEnable(bool)
IOUSBDeviceInterface::withFunction(OSString *)
IOUSBDeviceInterfaceReserved::start(IOService *)
IOUSBDeviceInterfaceUserClient::_abortPipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_appendNonStandardClassOrVendorDescriptor(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_appendStandardClassOrVendorDescriptor(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_close(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_commitConfiguration(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_completeClassCommandCallback(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_createBuffer(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_createPipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_findPipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_getPipeCurrentMaxPacketSize(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_isActivated(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_isActive(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_mapBuffer(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_open(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_readPipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_readPipeIsoc(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_releaseBuffer(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setAlternateSetting(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setClass(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setClassCommandCallbacks(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setDescription(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setPipeProperty(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setProtocol(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_setSubClass(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_stallPipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_unlockConfiguration(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_writePipe(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::_writePipeIsoc(IOUSBDeviceInterfaceUserClient*,void *,IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::abortPipes(bool)
IOUSBDeviceInterfaceUserClient::appendNonStandardClassOrVendorDescriptor(uint,void *,uint,uint)
IOUSBDeviceInterfaceUserClient::appendStandardClassOrVendorDescriptor(uint,void *,uint,uint)
IOUSBDeviceInterfaceUserClient::asyncReadCompletion(void *,int,uint)
IOUSBDeviceInterfaceUserClient::asyncReadWriteCompletionIsoc(void *,int,IOUSBDeviceIsocFrame *)
IOUSBDeviceInterfaceUserClient::asyncWriteCompletion(void *,int,uint)
IOUSBDeviceInterfaceUserClient::classCommandDataFinishHandler(IOUSBDeviceSetupPacket *,int,ulong long,IOMemoryDescriptor *)
IOUSBDeviceInterfaceUserClient::classCommandNotifyHandler(IOUSBDeviceSetupPacket *,ulong long)
IOUSBDeviceInterfaceUserClient::classCommandTimerExpired(IOTimerEventSource *)
IOUSBDeviceInterfaceUserClient::clientClose(void)
IOUSBDeviceInterfaceUserClient::clientCloseGated(void)
IOUSBDeviceInterfaceUserClient::close(uint)
IOUSBDeviceInterfaceUserClient::commitConfiguration(void)
IOUSBDeviceInterfaceUserClient::completeClassCommandCallbackGated(IOExternalMethodArguments *)
IOUSBDeviceInterfaceUserClient::copyMemoryMap(ulong long)
IOUSBDeviceInterfaceUserClient::createAlternateSettings(void)
IOUSBDeviceInterfaceUserClient::createBuffer(ulong long *,ulong long *)
IOUSBDeviceInterfaceUserClient::createPipe(int,int,int,int,int,int,ulong long *)
IOUSBDeviceInterfaceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOUSBDeviceInterfaceUserClient::findPipe(int,int,int,ulong long *)
IOUSBDeviceInterfaceUserClient::free(void)
IOUSBDeviceInterfaceUserClient::getPipeCurrentMaxPacketSize(IOUSBDevicePipe *,int *)
IOUSBDeviceInterfaceUserClient::initWithTask(task *,void *,uint)
IOUSBDeviceInterfaceUserClient::isActivated(bool *,bool *)
IOUSBDeviceInterfaceUserClient::isActive(bool *,int *)
IOUSBDeviceInterfaceUserClient::mapBuffer(ulong long *,ulong long *)
IOUSBDeviceInterfaceUserClient::message(uint,IOService *,void *)
IOUSBDeviceInterfaceUserClient::open(uint)
IOUSBDeviceInterfaceUserClient::readPipe(IOUSBDevicePipe *,IOMemoryDescriptor *,ulong long *,IOUSBDeviceCompletion *,uint)
IOUSBDeviceInterfaceUserClient::readPipeIsoc(IOUSBDevicePipe *,IOMemoryDescriptor *,ulong long,uint,IOUSBDeviceIsocFrame *,IOUSBDeviceIsocCompletion *)
IOUSBDeviceInterfaceUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOUSBDeviceInterfaceUserClient::releaseBuffer(ulong long)
IOUSBDeviceInterfaceUserClient::setAlternateSetting(uchar)
IOUSBDeviceInterfaceUserClient::setClass(uchar,uchar)
IOUSBDeviceInterfaceUserClient::setClassCommandCallbacks(ipc_port *,ulong long *,uint,bool,bool,bool)
IOUSBDeviceInterfaceUserClient::setDescription(char const*)
IOUSBDeviceInterfaceUserClient::setPipeProperty(IOUSBDevicePipe *,tIOUSBDeviceInterfacePipeProperty)
IOUSBDeviceInterfaceUserClient::setProtocol(uchar,uchar)
IOUSBDeviceInterfaceUserClient::setSubClass(uchar,uchar)
IOUSBDeviceInterfaceUserClient::stallPipe(IOUSBDevicePipe *)
IOUSBDeviceInterfaceUserClient::start(IOService *)
IOUSBDeviceInterfaceUserClient::stop(IOService *)
IOUSBDeviceInterfaceUserClient::unlockConfiguration(uint)
IOUSBDeviceInterfaceUserClient::willTerminate(IOService *,uint)
IOUSBDevicePipe::Abort(void)
IOUSBDevicePipe::Read(IOMemoryDescriptor *,ulong long,IOUSBDeviceCompletion *,ulong long *,uint)
IOUSBDevicePipe::Read(IOMemoryDescriptor *,ulong long,uint,IOUSBDeviceIsocFrame *,IOUSBDeviceIsocCompletion *)
IOUSBDevicePipe::Stall(void)
IOUSBDevicePipe::abortGated(void)
IOUSBDevicePipe::activateEndpoint(void)
IOUSBDevicePipe::activateEndpointGated(void)
IOUSBDevicePipe::allowableMaxPacketSizeForType(int,int)
IOUSBDevicePipe::appendClassSpecificDescriptor(uint,uchar *,uint,uint)
IOUSBDevicePipe::configureEndpoint(int,int)
IOUSBDevicePipe::copyAppendedStandardDescriptor(uchar *,uint,int)
IOUSBDevicePipe::copyDescriptor(uchar *,uint,int,int)
IOUSBDevicePipe::copyDescriptor(uchar *,uint,int,int)
IOUSBDevicePipe::deactivateEndpoint(void)
IOUSBDevicePipe::deactivateEndpointGated(void)
IOUSBDevicePipe::destroy(void)
IOUSBDevicePipe::destroyGated(void)
IOUSBDevicePipe::free(void)
IOUSBDevicePipe::getAppendedStandardDescriptorSize(int)
IOUSBDevicePipe::getInterval(int)
IOUSBDevicePipe::getMaxPacketSize(void)
IOUSBDevicePipe::initWithControllerAndSettings(IOUSBDeviceController *,int,int,int,int,int)
IOUSBDevicePipe::io(IOMemoryDescriptor *,ulong long,IOUSBDeviceCompletion *,ulong long *,uint)
IOUSBDevicePipe::io(IOMemoryDescriptor *,ulong long,uint,IOUSBDeviceIsocFrame *,IOUSBDeviceIsocCompletion *)
IOUSBDevicePipe::isochronousIoGated(IOUSBDevicePipe::tInternalDataTransferIsocParameters &)
IOUSBDevicePipe::resetDataToggle(void)
IOUSBDevicePipe::resetDataToggleGated(void)
IOUSBDevicePipe::stallGated(void)
IOUSBDevicePipe::synchronousCompletion(void *,int,uint)
IOUSBDevicePipe::withControllerAndSettings(IOUSBDeviceController *,int,int,int,int,int)
IOUSBHostDevice::AbortDeviceRequests_Impl(IOService *,uint,int)
IOUSBHostDevice::AbortDeviceRequests_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uint,int))
IOUSBHostDevice::AsyncDeviceRequest_Impl(IOService *,uchar,uchar,ushort,ushort,ushort,IOMemoryDescriptor *,OSAction *,uint)
IOUSBHostDevice::AsyncDeviceRequest_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uchar,uchar,ushort,ushort,ushort,IOMemoryDescriptor *,OSAction *,uint))
IOUSBHostDevice::CompleteAsyncDeviceRequest(OSAction *,int,uint,int (*)(OSMetaClassBase *,IORPC))
IOUSBHostDevice::CopyInterface_Impl(ulong,IOUSBHostInterface **)
IOUSBHostDevice::CopyInterface_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong,IOUSBHostInterface **))
IOUSBHostDevice::CreateIOBuffer_Impl(uint,ulong long,IOBufferMemoryDescriptor **)
IOUSBHostDevice::CreateIOBuffer_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,ulong long,IOBufferMemoryDescriptor **))
IOUSBHostDevice::CreateInterfaceIterator_Impl(ulong *)
IOUSBHostDevice::DeviceRequest_Impl(IOService *,uchar,uchar,ushort,ushort,ushort,IOMemoryDescriptor *,ushort *,uint)
IOUSBHostDevice::DeviceRequest_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uchar,uchar,ushort,ushort,ushort,IOMemoryDescriptor *,ushort *,uint))
IOUSBHostDevice::GetAddress_Impl(uchar *)
IOUSBHostDevice::GetFrameNumber_Impl(ulong long *,ulong long *)
IOUSBHostDevice::GetPortStatus_Impl(uint *)
IOUSBHostDevice::GetSpeed(uchar *,int (*)(OSMetaClassBase *,IORPC))
IOUSBHostDevice::GetSpeed_Impl(uchar *)
IOUSBHostDevice::Open_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uint,ulong))
IOUSBHostDevice::PMstop(void)
IOUSBHostDevice::Reset_Impl(void)
IOUSBHostDevice::SetConfiguration_Impl(uchar,bool)
IOUSBHostDevice::_Dispatch(IOUSBHostDevice*,IORPC)
IOUSBHostDevice::_GetDescriptor_Impl(uchar,uchar,ushort,uchar,uchar,IOMemoryDescriptor *,ushort *)
IOUSBHostDevice::_GetDescriptor_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uchar,uchar,ushort,uchar,uchar,IOMemoryDescriptor *,ushort *))
IOUSBHostDevice::abortDeviceRequests(IOService *,uint,int)
IOUSBHostDevice::abortDeviceRequestsGated(IOService *,uint,int)
IOUSBHostDevice::addPowerChild(IOService *)
IOUSBHostDevice::addPowerChildGated(void)
IOUSBHostDevice::addPowerChildThreadCall(thread_call *)
IOUSBHostDevice::allocateDownstreamBusCurrent(uint &,uint &)
IOUSBHostDevice::allocateDownstreamBusCurrentGated(uint &,uint &)
IOUSBHostDevice::asyncDeviceRequestCompletionCallback(void *,void *,int,uint)
IOUSBHostDevice::attach(IOService *)
IOUSBHostDevice::cacheDescriptor(StandardUSB::Descriptor const*,ushort,uchar,ushort)
IOUSBHostDevice::close(IOService *,uint)
IOUSBHostDevice::close(IOService *,uint)
IOUSBHostDevice::closeGated(IOService *,uint)
IOUSBHostDevice::createIOBuffer(uint,ulong long)
IOUSBHostDevice::createPipe(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,IOUSBHostInterface *)
IOUSBHostDevice::createPipeGated(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,IOUSBHostInterface *,IOUSBHostPipe *&)
IOUSBHostDevice::deviceRequest(IOService *,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
IOUSBHostDevice::deviceRequest(IOService *,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
IOUSBHostDevice::deviceRequest(IOService *,StandardUSB::DeviceRequest &,void *,IOMemoryDescriptor *,uint &,IOUSBHostCompletion *,uint)
IOUSBHostDevice::deviceRequest(IOService *,StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *,uint)
IOUSBHostDevice::deviceRequest(IOService *,StandardUSB::DeviceRequest &,void *,uint &,uint)
IOUSBHostDevice::forcePower(IOUSBHostDevice::tPowerState,bool,uint)
IOUSBHostDevice::forcePowerGated(IOUSBHostDevice::tPowerState,bool,uint)
IOUSBHostDevice::free(void)
IOUSBHostDevice::getCapabilityDescriptors(void)
IOUSBHostDevice::getConfigurationDescriptor(uchar)
IOUSBHostDevice::getConfigurationDescriptor(void)
IOUSBHostDevice::getConfigurationDescriptorWithValue(uchar)
IOUSBHostDevice::getDescriptor(uchar,ushort &,uchar,ushort,tDeviceRequestType,tDeviceRequestRecipient)
IOUSBHostDevice::getDeviceDescriptor(void)
IOUSBHostDevice::getFrameNumber(ulong long *)
IOUSBHostDevice::getLPMExitLatency(tUSBLinkState,tUSBLPMExitLatency,uint &)
IOUSBHostDevice::getLPMExitLatencyGated(tUSBLinkState,tUSBLPMExitLatency,uint &)
IOUSBHostDevice::getPortStatus(void)
IOUSBHostDevice::getStringDescriptor(uchar,ushort)
IOUSBHostDevice::handleClose(IOService *,uint)
IOUSBHostDevice::handleIsOpen(IOService const*)
IOUSBHostDevice::handleOpen(IOService *,uint,void *)
IOUSBHostDevice::idleAssertion(IOService *,IOUSBHostDevice::tIdleAssertion)
IOUSBHostDevice::initWithController(AppleUSBHostController *,uchar,ushort)
IOUSBHostDevice::internalDeviceRequest(IOService *,StandardUSB::DeviceRequest &,void *,IOMemoryDescriptor *,uint &,IOUSBHostCompletion *,uint)
IOUSBHostDevice::internalDeviceRequestGated(IOUSBHostPipe::tInternalControlRequestParameters &)
IOUSBHostDevice::matchPropertyTable(OSDictionary *)
IOUSBHostDevice::matchPropertyTable(OSDictionary *,int *)
IOUSBHostDevice::message(uint,IOService *,void *)
IOUSBHostDevice::newUserClient(task *,void *,uint,IOUserClient **)
IOUSBHostDevice::open(IOService *,uint,void *)
IOUSBHostDevice::openGated(IOService *,uint,void *)
IOUSBHostDevice::powerChangeDone(ulong)
IOUSBHostDevice::powerStateDidChangeTo(ulong,ulong,IOService *)
IOUSBHostDevice::powerStateDidChangeToGated(ulong,ulong,IOService *)
IOUSBHostDevice::powerStateWillChangeTo(ulong,ulong,IOService *)
IOUSBHostDevice::powerStateWillChangeToGated(ulong,ulong,IOService *)
IOUSBHostDevice::registerPowerService(void)
IOUSBHostDevice::removePowerChild(IOPowerConnection *)
IOUSBHostDevice::reset(void)
IOUSBHostDevice::setConfiguration(uchar,bool)
IOUSBHostDevice::setConfigurationGated(uchar,bool)
IOUSBHostDevice::setConfigurationGated(uchar,bool)
IOUSBHostDevice::setPowerState(ulong,IOService *)
IOUSBHostDevice::setPowerStateGated(ulong,IOService *)
IOUSBHostDevice::setProperties(OSObject *)
IOUSBHostDevice::setProperty(OSSymbol const*,OSObject *)
IOUSBHostDevice::start(IOService *)
IOUSBHostDevice::stop(IOService *)
IOUSBHostDevice::terminate(uint)
IOUSBHostDevice::terminateGated(uint)
IOUSBHostDevice::terminateGated(uint)
IOUSBHostDevice::updateIdlePolicy(bool)
IOUSBHostDevice::updateIdlePolicyAsync(thread_call *)
IOUSBHostDevice::updateIdlePolicyGated(void)
IOUSBHostDevice::updateLPMPolicyGated(void)
IOUSBHostDevice::withController(AppleUSBHostController *,uchar,ushort)
IOUSBHostHIDDevice::free(void)
IOUSBHostHIDDevice::getHidDescriptor(uchar,uchar,uchar *,uint *)
IOUSBHostHIDDevice::getMaxReportSize(void)
IOUSBHostHIDDevice::getStringAtIndex(uchar,ushort)
IOUSBHostHIDDevice::handleStart(IOService *)
IOUSBHostHIDDevice::interruptReadComplete(void *,int,uint)
IOUSBHostHIDDevice::interruptRetry(IOTimerEventSource *)
IOUSBHostHIDDevice::newCountryCodeNumber(void)
IOUSBHostHIDDevice::newIndexedString(uchar)
IOUSBHostHIDDevice::newLocationIDNumber(void)
IOUSBHostHIDDevice::newManufacturerString(void)
IOUSBHostHIDDevice::newProductIDNumber(void)
IOUSBHostHIDDevice::newProductString(void)
IOUSBHostHIDDevice::newReportDescriptor(IOMemoryDescriptor **)
IOUSBHostHIDDevice::newReportIntervalNumber(void)
IOUSBHostHIDDevice::newSerialNumberString(void)
IOUSBHostHIDDevice::newVendorIDNumber(void)
IOUSBHostHIDDevice::newVersionNumber(void)
IOUSBHostHIDDevice::readInterruptPipeAsync(void)
IOUSBHostHIDDevice::readInterruptPipeAsyncGated(void)
IOUSBHostHIDDevice::setProperty(OSSymbol const*,OSObject *)
IOUSBHostHIDDevice::setReport(IOMemoryDescriptor *,IOHIDReportType,uint)
IOUSBHostHIDDevice::setReportComplete(void *,int,uint)
IOUSBHostHIDDevice::start(IOService *)
IOUSBHostHIDDevice::stop(IOService *)
IOUSBHostHIDDevice::willTerminate(IOService *,uint)
IOUSBHostIOSource::abort(uint,int,IOService *)
IOUSBHostIOSource::abortGated(uint,int,IOService *)
IOUSBHostIOSource::abortGated(uint,int,IOService *)
IOUSBHostIOSource::adjustOutstandingIO(IOService *,int)
IOUSBHostIOSource::close(void)
IOUSBHostIOSource::closeGated(void)
IOUSBHostIOSource::destroy(void)
IOUSBHostIOSource::destroyGated(void)
IOUSBHostIOSource::free(void)
IOUSBHostIOSource::getState(void)
IOUSBHostIOSource::initWithOwners(AppleUSBHostController *,IOUSBHostDevice *)
IOUSBHostIOSource::io(IOMemoryDescriptor *,uint,IOUSBHostBundledCompletion *,uint)
IOUSBHostIOSource::io(IOMemoryDescriptor *,uint,IOUSBHostCompletion *,uint)
IOUSBHostIOSource::io(IOMemoryDescriptor *,uint,uint &,uint)
IOUSBHostIOSource::ioGated(IOUSBHostIOSource::tInternalDataTransferParameters &)
IOUSBHostIOSource::open(void)
IOUSBHostIOSource::openGated(void)
IOUSBHostIOSource::synchronousCompletion(void *,int,uint)
IOUSBHostIOSource::synchronousIsochronousCompletion(void *,int,IOUSBHostIsochronousFrame *)
IOUSBHostIOSource::timerCompletion(IOTimerEventSource *)
IOUSBHostInterface::CopyDevice_Impl(IOUSBHostDevice **)
IOUSBHostInterface::CopyPipe_Impl(uchar,IOUSBHostPipe **)
IOUSBHostInterface::CopyPipe_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uchar,IOUSBHostPipe **))
IOUSBHostInterface::GetFrameNumber_Impl(ulong long *,ulong long *)
IOUSBHostInterface::GetIdlePolicy_Impl(uint *)
IOUSBHostInterface::GetPortStatus_Impl(uint *)
IOUSBHostInterface::Open_Impl(IOService *,uint,uchar *)
IOUSBHostInterface::Open_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOService *,uint,uchar *))
IOUSBHostInterface::SelectAlternateSetting_Impl(uchar)
IOUSBHostInterface::SetIdlePolicy_Impl(uint)
IOUSBHostInterface::_Dispatch(IOUSBHostInterface*,IORPC)
IOUSBHostInterface::_GetInterfaceDescriptorHeader_Impl(IOUSBInterfaceDescriptor *)
IOUSBHostInterface::abortDeviceRequests(uint,int)
IOUSBHostInterface::attach(IOService *)
IOUSBHostInterface::close(IOService *,uint)
IOUSBHostInterface::closeGated(IOService *,uint)
IOUSBHostInterface::closePipes(void)
IOUSBHostInterface::closePipesGated(void)
IOUSBHostInterface::compareProperty(OSDictionary *,OSString const*)
IOUSBHostInterface::compareProperty(OSDictionary *,char const*)
IOUSBHostInterface::copyPipe(uchar)
IOUSBHostInterface::copyPipeGated(uchar,IOUSBHostPipe *&)
IOUSBHostInterface::createIOBuffer(uint,ulong long)
IOUSBHostInterface::destroyPipes(uint)
IOUSBHostInterface::destroyPipesGated(uint)
IOUSBHostInterface::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
IOUSBHostInterface::deviceRequest(StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
IOUSBHostInterface::deviceRequest(StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *,uint)
IOUSBHostInterface::deviceRequest(StandardUSB::DeviceRequest &,void *,uint &,uint)
IOUSBHostInterface::free(void)
IOUSBHostInterface::getFrameNumber(ulong long *)
IOUSBHostInterface::getInterfaceDescriptor(void)
IOUSBHostInterface::getPortStatus(void)
IOUSBHostInterface::getStringDescriptor(uchar,ushort)
IOUSBHostInterface::initWithDescriptors(StandardUSB::ConfigurationDescriptor const*,StandardUSB::InterfaceDescriptor const*)
IOUSBHostInterface::matchPropertyTable(OSDictionary *)
IOUSBHostInterface::matchPropertyTable(OSDictionary *,int *)
IOUSBHostInterface::message(uint,IOService *,void *)
IOUSBHostInterface::newUserClient(task *,void *,uint,IOUserClient **)
IOUSBHostInterface::open(IOService *,uint,void *)
IOUSBHostInterface::openGated(IOService *,uint,void *)
IOUSBHostInterface::pipeLockLock(void)
IOUSBHostInterface::pipeLockUnlock(void)
IOUSBHostInterface::selectAlternateSetting(uchar)
IOUSBHostInterface::selectAlternateSettingGated(uchar)
IOUSBHostInterface::setIdlePolicy(uint)
IOUSBHostInterface::start(IOService *)
IOUSBHostInterface::stop(IOService *)
IOUSBHostInterface::stringFromReturn(int)
IOUSBHostInterface::terminate(uint)
IOUSBHostInterface::updateMatchingProperties(void)
IOUSBHostInterface::withDescriptors(StandardUSB::ConfigurationDescriptor const*,StandardUSB::InterfaceDescriptor const*)
IOUSBHostInterfaceIterator::free(void)
IOUSBHostInterfaceIterator::getNextObject(void)
IOUSBHostInterfaceIterator::initWithDevice(IOUSBHostDevice *,IOUSBFindInterfaceRequest *)
IOUSBHostInterfaceIterator::isValid(void)
IOUSBHostInterfaceIterator::reset(void)
IOUSBHostInterfaceIterator::withDevice(IOUSBHostDevice *,IOUSBFindInterfaceRequest *)
IOUSBHostPipe::Abort_Impl(uint,int,IOService *)
IOUSBHostPipe::Abort_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,int,IOService *))
IOUSBHostPipe::AdjustPipe_Impl(IOUSBStandardEndpointDescriptors const*)
IOUSBHostPipe::AsyncIOBundled_Impl(uint,uint,uint *,uint const*,int,OSAction *,uint)
IOUSBHostPipe::AsyncIOBundled_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint,uint *,uint const*,int,OSAction *,uint))
IOUSBHostPipe::AsyncIO_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor *,uint,OSAction *,uint))
IOUSBHostPipe::ClearStall_Impl(bool)
IOUSBHostPipe::CompleteAsyncIO(OSAction *,int,uint,ulong long,int (*)(OSMetaClassBase *,IORPC))
IOUSBHostPipe::CompleteAsyncIOBundled(OSAction *,uint,uint,uint const*,int,int const*,int,int (*)(OSMetaClassBase *,IORPC))
IOUSBHostPipe::CompleteAsyncIsochIO(OSAction *,int,int (*)(OSMetaClassBase *,IORPC))
IOUSBHostPipe::GetDescriptors_Impl(IOUSBStandardEndpointDescriptors *,IOUSBGetEndpointDescriptorOptions)
IOUSBHostPipe::GetDeviceAddress_Impl(uchar *)
IOUSBHostPipe::IO_Impl(IOMemoryDescriptor *,uint,uint *,uint)
IOUSBHostPipe::IO_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor *,uint,uint *,uint))
IOUSBHostPipe::IsochIO_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor *,IOMemoryDescriptor *,ulong long,OSAction *))
IOUSBHostPipe::SetIdlePolicy_Impl(uint)
IOUSBHostPipe::_Dispatch(IOUSBHostPipe*,IORPC)
IOUSBHostPipe::abort(uint,int,IOService *)
IOUSBHostPipe::abortGated(uint,int,IOService *)
IOUSBHostPipe::adjustOutstandingIO(IOService *,int)
IOUSBHostPipe::adjustOutstandingIO(IOService *,int)
IOUSBHostPipe::adjustPipe(IOUSBHostPipe::StandardUSBDescriptors *)
IOUSBHostPipe::adjustPipe(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*)
IOUSBHostPipe::adjustPipeGated(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*)
IOUSBHostPipe::adjustPipeGatedV2(IOUSBHostPipe::StandardUSBDescriptors *)
IOUSBHostPipe::asyncIOCompletionCallback(void *,void *,int,uint)
IOUSBHostPipe::asyncIOCompletionCallbackBundled(void *,uint,IOMemoryDescriptor **,void **,int *,uint *)
IOUSBHostPipe::asyncIsochIOTransactionCompletionCallback(void *,void *,int,IOUSBHostIsochronousTransaction *)
IOUSBHostPipe::clearStall(bool)
IOUSBHostPipe::clearStallGated(bool)
IOUSBHostPipe::closeGated(void)
IOUSBHostPipe::controlRequest(IOService *,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,IOUSBHostCompletion *,uint)
IOUSBHostPipe::controlRequest(IOService *,StandardUSB::DeviceRequest &,IOMemoryDescriptor *,uint &,uint)
IOUSBHostPipe::controlRequest(IOService *,StandardUSB::DeviceRequest &,void *,IOUSBHostCompletion *,uint)
IOUSBHostPipe::controlRequest(IOService *,StandardUSB::DeviceRequest &,void *,uint &,uint)
IOUSBHostPipe::controlRequestGated(IOUSBHostPipe::tInternalControlRequestParameters &)
IOUSBHostPipe::copyStream(uint)
IOUSBHostPipe::copyStreamGated(uint,IOUSBHostStream *&)
IOUSBHostPipe::destroyGated(void)
IOUSBHostPipe::destroyMemoryDescriptorRing(void)
IOUSBHostPipe::disableStreams(void)
IOUSBHostPipe::disableStreamsGated(void)
IOUSBHostPipe::enableStreams(void)
IOUSBHostPipe::enableStreamsGated(void)
IOUSBHostPipe::free(void)
IOUSBHostPipe::getDescriptors(IOUSBHostPipe::StandardUSBDescriptors *,IOUSBHostPipe::tGetEndpointDescriptorOptions)
IOUSBHostPipe::getDeviceAddress(void)
IOUSBHostPipe::getEndpointDescriptor(IOUSBHostPipe::tGetEndpointDescriptorOptions)
IOUSBHostPipe::getIdlePolicy(void)
IOUSBHostPipe::getOutstandingIO(IOService *)
IOUSBHostPipe::getSuperSpeedEndpointCompanionDescriptor(IOUSBHostPipe::tGetEndpointDescriptorOptions)
IOUSBHostPipe::initWithDescriptorsAndOwners(StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,AppleUSBHostController *,IOUSBHostDevice *,IOUSBHostInterface *,uchar,ushort)
IOUSBHostPipe::io(IOMemoryDescriptor *,IOUSBHostIsochronousFrame *,uint,ulong long,IOUSBHostIsochronousCompletion *)
IOUSBHostPipe::io(IOMemoryDescriptor *,IOUSBHostIsochronousTransaction *,uint,ulong long,uint,IOUSBHostIsochronousTransactionCompletion *,IOUSBHostIsochronousFrame *)
IOUSBHostPipe::io(IOMemoryDescriptor *,uint,IOUSBHostBundledCompletion *,uint)
IOUSBHostPipe::io(IOMemoryDescriptor *,uint,IOUSBHostCompletion *,uint)
IOUSBHostPipe::io(IOMemoryDescriptor *,uint,uint &,uint)
IOUSBHostPipe::isochIOTransactionCompatCallback(void *,void *,int,IOUSBHostIsochronousTransaction *)
IOUSBHostPipe::isochronousIoGated(IOUSBHostIOSource::tInternalDataTransferParameters &)
IOUSBHostPipe::openGated(void)
IOUSBHostPipe::rawBufferControlRequestCompletion(void *,void *,int,uint)
IOUSBHostPipe::setIdlePolicy(uint)
IOUSBHostPipe::setIdlePolicyGated(uint)
IOUSBHostStream::abortGated(uint,int,IOService *)
IOUSBHostStream::closeGated(void)
IOUSBHostStream::destroyGated(void)
IOUSBHostStream::free(void)
IOUSBHostStream::initWithOwnersAndStreamID(AppleUSBHostController *,IOUSBHostDevice *,IOUSBHostPipe *,uint)
IOUSBMassStorageDriver::BeginProvidedServicesFinished(void)
IOUSBMassStorageDriver::BulkOnlyReceiveCSWPacket(BulkOnlyRequest *,uint)
IOUSBMassStorageDriver::BulkOnlyTransferData(BulkOnlyRequest *,uint)
IOUSBMassStorageDriver::ClearFeatureEndpointStall(IOUSBHostPipe *)
IOUSBMassStorageDriver::ClearPipeStall(bool)
IOUSBMassStorageDriver::GetEndpointStatus(IOUSBHostPipe *,void *,IOUSBHostCompletion *)
IOUSBMassStorageDriver::GetIOUSBHostInterface(void)
IOUSBMassStorageDriver::HandlePowerOn(void)
IOUSBMassStorageDriver::InitializePowerManagement(IOService *)
IOUSBMassStorageDriver::IsProtocolServiceSupported(uint,void *)
IOUSBMassStorageDriver::PrintCDBLogging(void)
IOUSBMassStorageDriver::ResetDevice(void)
IOUSBMassStorageDriver::ResetDeviceAsync(void)
IOUSBMassStorageDriver::SendSCSICommandForBulkOnlyProtocol(OSObject *)
IOUSBMassStorageDriver::SendSCSICommandForProtocol(OSObject *)
IOUSBMassStorageDriver::UpdateCDBLogging(void)
IOUSBMassStorageDriver::WaitForCommandCompletionGated(void)
IOUSBMassStorageDriver::attach(IOService *)
IOUSBMassStorageDriver::close(IOService *,uint)
IOUSBMassStorageDriver::detach(IOService *)
IOUSBMassStorageDriver::free(void)
IOUSBMassStorageDriver::handleClose(IOService *,uint)
IOUSBMassStorageDriver::handleIsOpen(IOService const*)
IOUSBMassStorageDriver::init(OSDictionary *)
IOUSBMassStorageDriver::message(uint,IOService *,void *)
IOUSBMassStorageDriver::open(IOService *,uint,void *)
IOUSBMassStorageDriver::probe(IOService *,int *)
IOUSBMassStorageDriver::stop(IOService *)
IOUSBMassStorageDriver::terminate(uint)
IOUSBMassStorageDriver::willTerminate(IOService *,uint)
IOUSBMassStorageDriverNub::AttachToInterimParent(void)
IOUSBMassStorageDriverNub::DetachFromInterimParent(void)
IOUSBMassStorageDriverNub::DidWakeFromHibernationOrStandby(void)
IOUSBMassStorageDriverNub::FindUASPipes(void)
IOUSBMassStorageDriverNub::FindUSBPipes(void)
IOUSBMassStorageDriverNub::ForcePortMaxLinkSpeed(uint)
IOUSBMassStorageDriverNub::GetAppleARMIODevice(void)
IOUSBMassStorageDriverNub::GetIOPCIDevice(void)
IOUSBMassStorageDriverNub::HandleTermination(void)
IOUSBMassStorageDriverNub::InitializePowerManagement(IOService *)
IOUSBMassStorageDriverNub::MetaClass::alloc(void)
IOUSBMassStorageDriverNub::ReleasePipes(void)
IOUSBMassStorageDriverNub::ResetDevice(void)
IOUSBMassStorageDriverNub::ResetDeviceFinished(int)
IOUSBMassStorageDriverNub::ResetTimeOut(void)
IOUSBMassStorageDriverNub::WaitForResetCompletionGated(void)
IOUSBMassStorageDriverNub::WaitForTerminationGated(void)
IOUSBMassStorageDriverNub::attach(IOService *)
IOUSBMassStorageDriverNub::close(IOService *,uint)
IOUSBMassStorageDriverNub::detach(IOService *)
IOUSBMassStorageDriverNub::didTerminate(IOService *,uint,bool *)
IOUSBMassStorageDriverNub::free(void)
IOUSBMassStorageDriverNub::getWorkLoop(void)
IOUSBMassStorageDriverNub::handleClose(IOService *,uint)
IOUSBMassStorageDriverNub::open(IOService *,uint,void *)
IOUSBMassStorageDriverNub::powerStateWillChangeTo(ulong,ulong,IOService *)
IOUSBMassStorageDriverNub::setPowerState(ulong,IOService *)
IOUSBMassStorageDriverNub::terminate(uint)
IOUSBMassStorageDriverNub::updateResetCount(char const*)
IOUSBMassStorageDriverNub::willTerminate(IOService *,uint)
IOUSBMassStorageDriverNub::~IOUSBMassStorageDriverNub()
IOUSBMassStorageDriverNub__SwitchToInterimParent_void___IOService___IONotifier
IOUSBMassStorageDriverRequestTimer::CreateWithWorkLoop(OSObject *,void (*)(OSObject *,IOTimerEventSource *),IOWorkLoop *,ulong long)
IOUSBMassStorageDriverRequestTimer::GetExpiredCommand(void)
IOUSBMassStorageDriverRequestTimer::Init(OSObject *,void (*)(OSObject *,IOTimerEventSource *),ulong long)
IOUSBMassStorageDriverRequestTimer::Rearm(void)
IOUSBMassStorageDriverRequestTimer::RemoveRequest(IOUSBMassStorageUASDriverCommand *)
IOUSBMassStorageDriverRequestTimer::SetTimeout(IOUSBMassStorageUASDriverCommand *,uint)
IOUSBMassStorageDriverRequestTimer::SleepOnGate(void *,int)
IOUSBMassStorageDriverRequestTimer::SleepOnGateWithDeadline(void *,ulong long,int)
IOUSBMassStorageDriverRequestTimer::WakeupGate(void *,bool)
IOUSBMassStorageDriverUFIStorageServices::doSynchronizeCache(void)
IOUSBMassStorageInterfaceNub::CheckForAndEnableUAS(void)
IOUSBMassStorageInterfaceNub::HandleTermination(void)
IOUSBMassStorageInterfaceNub::InitializePowerManagement(IOService *)
IOUSBMassStorageInterfaceNub::close(IOService *,uint)
IOUSBMassStorageInterfaceNub::didTerminate(IOService *,uint,bool *)
IOUSBMassStorageInterfaceNub::free(void)
IOUSBMassStorageInterfaceNub::handleClose(IOService *,uint)
IOUSBMassStorageInterfaceNub::handleOpen(IOService *,uint,void *)
IOUSBMassStorageInterfaceNub::open(IOService *,uint,void *)
IOUSBMassStorageInterfaceNub::probe(IOService *,int *)
IOUSBMassStorageInterfaceNub::stop(IOService *)
IOUSBMassStorageInterfaceNub::terminate(uint)
IOUSBMassStorageInterfaceNub::willTerminate(IOService *,uint)
IOUSBMassStorageResource::IOMSRClose(IOService *,ushort,ushort)
IOUSBMassStorageResource::IOMSROpen(IOService *,ushort,ushort)
IOUSBMassStorageResource::IOMSRUpdateStat(uint,char const*,ulong long)
IOUSBMassStorageResource::handleClose(IOService *,uint)
IOUSBMassStorageResource::handleIsOpen(IOService const*)
IOUSBMassStorageResource::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOUSBMassStorageResource::start(IOService *)
IOUSBMassStorageResource::statsReported(void)
IOUSBMassStorageResourceUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOUSBMassStorageResourceUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOUSBMassStorageResourceUserClient::start(IOService *)
IOUSBMassStorageResourceUserClient::stop(IOService *)
IOUSBMassStorageUASDriver::AbortAllCommands(void)
IOUSBMassStorageUASDriver::AbortCommandPipe(IOUSBMassStorageUASDriverCommand *)
IOUSBMassStorageUASDriver::AbortCommands(uint,uchar (*)[8],ushort)
IOUSBMassStorageUASDriver::AbortStatusStream(IOUSBMassStorageUASDriverCommand *)
IOUSBMassStorageUASDriver::CompleteCommand(IOUSBMassStorageUASDriverCommand *,SCSIServiceResponse,SCSITaskStatus)
IOUSBMassStorageUASDriver::DeallocateRequests(void)
IOUSBMassStorageUASDriver::GetIOUSBHostInterface(void)
IOUSBMassStorageUASDriver::HandlePowerOn(void)
IOUSBMassStorageUASDriver::HandleResponseIU(IOUSBMassStorageUASDriverCommand *,AppleUASStatusRequest *,AppleUASResponseIU *)
IOUSBMassStorageUASDriver::HandleSenseIU(IOUSBMassStorageUASDriverCommand *,AppleUASStatusRequest *,AppleUASSenseIU *)
IOUSBMassStorageUASDriver::HandleStatusIU(IOUSBMassStorageUASDriverCommand *)
IOUSBMassStorageUASDriver::HandleStatusIU(IOUSBMassStorageUASDriverCommand *,AppleUASStatusRequest *)
IOUSBMassStorageUASDriver::InitializeCommandCallbacks(IOUSBMassStorageUASDriverCommand *)
IOUSBMassStorageUASDriver::IsProtocolServiceSupported(uint,void *)
IOUSBMassStorageUASDriver::ResetDevice(void)
IOUSBMassStorageUASDriver::ReturnStatusRequest(AppleUASStatusRequest *)
IOUSBMassStorageUASDriver::ScheduleRecovery(IOUSBMassStorageUASDriverCommand *,bool)
IOUSBMassStorageUASDriver::attach(IOService *)
IOUSBMassStorageUASDriver::close(IOService *,uint)
IOUSBMassStorageUASDriver::detach(IOService *)
IOUSBMassStorageUASDriver::didTerminate(IOService *,uint,bool *)
IOUSBMassStorageUASDriver::finalize(uint)
IOUSBMassStorageUASDriver::free(void)
IOUSBMassStorageUASDriver::handleClose(IOService *,uint)
IOUSBMassStorageUASDriver::handleOpen(IOService *,uint,void *)
IOUSBMassStorageUASDriver::init(OSDictionary *)
IOUSBMassStorageUASDriver::message(uint,IOService *,void *)
IOUSBMassStorageUASDriver::open(IOService *,uint,void *)
IOUSBMassStorageUASDriver::probe(IOService *,int *)
IOUSBMassStorageUASDriver::setProperties(OSObject *)
IOUSBMassStorageUASDriver::stop(IOService *)
IOUSBMassStorageUASDriver::terminate(uint)
IOUSBMassStorageUASDriver::~IOUSBMassStorageUASDriver()
IOUSBMassStorageUASDriverCommand::ClearCommandCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::ClearCompletionBitmap(void)
IOUSBMassStorageUASDriverCommand::ClearDataCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::ClearStatusCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::Create(IOUSBMassStorageUASDriver *,ulong long)
IOUSBMassStorageUASDriverCommand::GetTimeoutDuration(void)
IOUSBMassStorageUASDriverCommand::Init(ulong long)
IOUSBMassStorageUASDriverCommand::IsSynchronous(void)
IOUSBMassStorageUASDriverCommand::RequestReset(void)
IOUSBMassStorageUASDriverCommand::SetCommandCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::SetDataCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::SetStatusCompletionFlag(void)
IOUSBMassStorageUASDriverCommand::SetTimeoutDeadline(ulong long)
IOUSBMassStorageUASDriverCommand::free(void)
IOUnifiedAddressTranslator::MetaClass::MetaClass(void)
IOUnifiedAddressTranslator::createMappingInAperture(uint,IOMemoryDescriptor *,uint,ulong long,ulong)
IOUnifiedAddressTranslator::doUnmap(IOMemoryDescriptor *,ulong long,ulong long)
IOUnifiedAddressTranslator::getPageTableEntry(ulong long)
IOUnifiedAddressTranslator::getPageTablePhysicalBaseAddress(uint)
IOUnifiedAddressTranslator::getTotalPageTableMemory(void)
IOUnifiedAddressTranslator::isPageFaultExpected(ulong long,uint)
IOUnifiedAddressTranslator::map(IOMemoryMap *,uint)
IOUnifiedAddressTranslator::mapToPhysicalAddress(ulong long)
IOUnifiedAddressTranslator::prepareFWUnmap(ulong long,ulong long)
IOUnifiedAddressTranslator::releaseThread(void)
IOUnifiedAddressTranslator::removeClientContextID(void)
IOUnifiedAddressTranslator::setClientContextID(uint,bool)
IOUnifiedAddressTranslator::taskDied(void)
IOUnifiedAddressTranslator::unmap(IOMemoryMap *)
IOUserBlockStorageDevice::CompleteIO_Impl(uint,ulong long,int)
IOUserBlockStorageDevice::Complete_Impl(uint,int)
IOUserBlockStorageDevice::DoAsyncEjectMedia(uint,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::DoAsyncReadWrite(bool,uint,ulong long,ulong long,ulong long,ulong long,uint,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::DoAsyncSynchronize(uint,ulong long,ulong long,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::DoAsyncUnmap(uint,IOMemoryDescriptor *,uint,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::DoAsyncUnmap_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,IOMemoryDescriptor *,uint))
IOUserBlockStorageDevice::GetDeviceParams(DeviceParams *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::GetProductString(DeviceString *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::GetVendorString(DeviceString *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::MetaClass::Dispatch(IORPC)
IOUserBlockStorageDevice::MetaClass::alloc(void)
IOUserBlockStorageDevice::RegisterDext_Impl(void)
IOUserBlockStorageDevice::ReportEjectability(bool *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::ReportRemovability(bool *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::ReportWriteProtection(bool *,int (*)(OSMetaClassBase *,IORPC))
IOUserBlockStorageDevice::_Dispatch(IOUserBlockStorageDevice*,IORPC)
IOUserBlockStorageDevice::doAsyncReadWrite(IOMemoryDescriptor *,ulong long,ulong long,IOStorageAttributes *,IOStorageCompletion *)
IOUserBlockStorageDevice::doEjectMedia(void)
IOUserBlockStorageDevice::doGetFormatCapacities(ulong long *,uint)
IOUserBlockStorageDevice::doSynchronize(ulong long,ulong long,uint)
IOUserBlockStorageDevice::doUnmap(IOBlockStorageDeviceExtent *,uint,uint)
IOUserBlockStorageDevice::free(void)
IOUserBlockStorageDevice::getAdditionalDeviceInfoString(void)
IOUserBlockStorageDevice::getProductString(void)
IOUserBlockStorageDevice::getRevisionString(void)
IOUserBlockStorageDevice::getVendorString(void)
IOUserBlockStorageDevice::init(OSDictionary *)
IOUserBlockStorageDevice::start(IOService *)
IOUserBlockStorageDevice::stop(IOService *)
IOUserBlockStorageDevice::willTerminate(IOService *,uint)
IOUserBlockStorageDevice::~IOUserBlockStorageDevice()
IOUserClient::AsyncCompletion(OSAction *,int,ulong long const*,uint,int (*)(OSMetaClassBase *,IORPC))
IOUserClient::AsyncCompletion_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,int,ulong long const*,uint))
IOUserClient::AsyncCompletion_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,OSAction *,int,ulong long const*,uint),OSMetaClass const*)
IOUserClient::CopyClientEntitlements(OSDictionary **,int (*)(OSMetaClassBase *,IORPC))
IOUserClient::CopyClientMemoryForType(ulong long,ulong long *,IOMemoryDescriptor **,int (*)(OSMetaClassBase *,IORPC))
IOUserClient::CopyClientMemoryForType_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long *,IOMemoryDescriptor **))
IOUserClient::CreateActionKernelCompletion(ulong,OSAction **)
IOUserClient::CreateMemoryDescriptorFromClient(ulong long,uint,IOAddressSegment const*,IOMemoryDescriptor **,int (*)(OSMetaClassBase *,IORPC))
IOUserClient::CreateMemoryDescriptorFromClient_Impl(ulong long,uint,IOAddressSegment const*,IOMemoryDescriptor **)
IOUserClient::CreateMemoryDescriptorFromClient_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,uint,IOAddressSegment const*,IOMemoryDescriptor **))
IOUserClient::MetaClass::MetaClass(void)
IOUserClient::_ExternalMethod(ulong long,ulong long const*,uint,OSData *,IOMemoryDescriptor *,ulong long *,uint *,ulong long,OSData **,IOMemoryDescriptor *,OSAction *,int (*)(OSMetaClassBase *,IORPC))
IOUserClient::_ExternalMethod_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long const*,uint,OSData *,IOMemoryDescriptor *,ulong long *,uint *,ulong long,OSData **,IOMemoryDescriptor *,OSAction *))
IOUserClient::_sendAsyncResult64(ulong long *,int,ulong long *,uint,uint)
IOUserClient::clientDied(void)
IOUserClient::clientHasAuthorization(task *,IOService *)
IOUserClient::clientMemoryForType(uint,uint *,OSSharedPtr<IOMemoryDescriptor> &)
IOUserClient::copyClientEntitlementVnode(vnode *,long long,char const*)
IOUserClient::copyClientEntitlements(task *)
IOUserClient::copyClientEntitlementsVnode(vnode *,long long)
IOUserClient::copyPortNameForObjectInTask(task *,OSObject *,uint *)
IOUserClient::destroyUserReferences(OSObject *)
IOUserClient::exportObjectToClient(task *,OSObject *,OSObject **)
IOUserClient::finalizeUserReferences(OSObject *)
IOUserClient::getAsyncTargetAndMethodForIndex(IOService **,uint)
IOUserClient::getAsyncTargetAndMethodForIndex(OSSharedPtr<IOService> &,uint)
IOUserClient::getTargetAndMethodForIndex(IOService **,uint)
IOUserClient::getTargetAndMethodForIndex(OSSharedPtr<IOService> &,uint)
IOUserClient::getTargetAndTrapForIndex(IOService **,uint)
IOUserClient::initWithTask(task *,void *,uint,OSDictionary *)
IOUserClient::registerFilterCallbacks(io_filter_callbacks const*,ulong)
IOUserClient::registerNotificationPort(ipc_port *,uint,ulong long)
IOUserClient::releaseAsyncReference64(ulong long *)
IOUserClient::releaseNotificationPort(ipc_port *)
IOUserClient::removeMappingForDescriptor(IOMemoryDescriptor *)
IOUserClient::sendAsyncResult(uint *,int,void **,uint)
IOUserClient::setAsyncReference(uint *,ipc_port *,void *,void *)
IOUserEthernetController::MetaClass::alloc(void)
IOUserEthernetController::configureInterface(IONetworkInterface *)
IOUserEthernetController::createInterface(void)
IOUserEthernetController::free(void)
IOUserEthernetController::getChecksumSupport(uint *,uint,bool)
IOUserEthernetController::getMaxPacketSize(uint *)
IOUserEthernetController::getMinPacketSize(uint *)
IOUserEthernetController::getNamePrefix(void)
IOUserEthernetController::handleBSDAttach(IONetworkInterface *)
IOUserEthernetController::handleClientAttach(en_client *)
IOUserEthernetController::handleClientDetach(en_client *)
IOUserEthernetController::handleClientPackets(en_client *,__mbuf *)
IOUserEthernetController::handleClientReceive(en_client *,int)
IOUserEthernetController::initWithProperties(OSDictionary *)
IOUserEthernetController::initializeKernelControl(bool *)
IOUserEthernetController::invalidateStateEventCallback(void)
IOUserEthernetController::outputStart(IONetworkInterface *,uint)
IOUserEthernetController::publishMedium(void)
IOUserEthernetController::reportLinkUp(bool)
IOUserEthernetController::setEnableState(bool)
IOUserEthernetController::setIfpPowerSavingsMask(bool)
IOUserEthernetController::setLinkState(bool)
IOUserEthernetController::setRunningState(bool)
IOUserEthernetController::startWithStateEventCallback(IOService *,void (*)(OSObject *,IOUserEthernetController*,void *),OSObject *,void *)
IOUserEthernetController::stop(IOService *)
IOUserEthernetController::withProperties(OSDictionary *)
IOUserEthernetInterface::attachToDataLinkLayer(uint,void *)
IOUserEthernetInterface::getNamePrefix(void)
IOUserEthernetInterface::init(IONetworkController *)
IOUserEthernetInterface::registerService(uint)
IOUserEthernetResource::free(void)
IOUserEthernetResource::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOUserEthernetResource::start(IOService *)
IOUserEthernetResourceUserClient::_getEnableState(IOUserEthernetResourceUserClient*,void *,IOExternalMethodArguments *)
IOUserEthernetResourceUserClient::_setIfpPowerSavings(IOUserEthernetResourceUserClient*,void *,IOExternalMethodArguments *)
IOUserEthernetResourceUserClient::_setLinkStatus(IOUserEthernetResourceUserClient*,void *,IOExternalMethodArguments *)
IOUserEthernetResourceUserClient::createControllerGated(IOExternalMethodArguments *)
IOUserEthernetResourceUserClient::createMemoryDescriptorFromInputArguments(IOExternalMethodArguments *)
IOUserEthernetResourceUserClient::free(void)
IOUserEthernetResourceUserClient::initWithTask(task *,void *,uint)
IOUserEthernetResourceUserClient::registerNotificationPort(ipc_port *,uint,uint)
IOUserEthernetResourceUserClient::registerNotificationPortGated(ipc_port *)
IOUserEthernetResourceUserClient::start(IOService *)
IOUserEthernetResourceUserClient::stateEventCallback(IOUserEthernetController *,void *)
IOUserEthernetResourceUserClient::stop(IOService *)
IOUserIterator::copyNextObject(void)
IOUserIterator::init(void)
IOUserIterator__isValid
IOUserIterator__reset
IOUserNetworkEthernet::CreateAction_DataAvailable(ulong,OSAction **)
IOUserNetworkEthernet::Dispatch(IORPC)
IOUserNetworkEthernet::MetaClass::Dispatch(IORPC)
IOUserNetworkEthernet::MetaClass::MetaClass(void)
IOUserNetworkEthernet::MetaClass::alloc(void)
IOUserNetworkEthernet::ReleaseNicProxyData_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *))
IOUserNetworkEthernet::ReportDataBandwidths_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,ulong long,ulong long,ulong long))
IOUserNetworkEthernet::ReportLinkQuality_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOUserNetworkEthernet::ReportLinkStatus_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint))
IOUserNetworkEthernet::ReportNicProxyLimits_Impl(nicproxy_limits_info_s)
IOUserNetworkEthernet::ReportNicProxyLimits_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,nicproxy_limits_info_s))
IOUserNetworkEthernet::RetainNicProxyData_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long *))
IOUserNetworkEthernet::SetWakeOnMagicPacketEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_Dispatch(IOUserNetworkEthernet*,IORPC)
IOUserNetworkEthernet::_GetHardwareAddress(ether_addr *,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_GetHardwareAddress_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ether_addr *))
IOUserNetworkEthernet::_GetHardwareAssists(uint *,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_GetHardwareAssists_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint *))
IOUserNetworkEthernet::_GetMaxTransferUnit(uint *,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_GetMaxTransferUnit_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint *))
IOUserNetworkEthernet::_GetSupportedMediaArray(ulong long,uint *,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_GetSupportedMediaArray_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,uint *))
IOUserNetworkEthernet::_InterfaceAdvisoryEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_InterfaceAdvisoryEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IOUserNetworkEthernet::_ProcessInterfaceCommand(ifdrv *,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_ProcessInterfaceCommand_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ifdrv *))
IOUserNetworkEthernet::_RegisterEthernetInterface_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,_IOUserNetworkEthernetInterfaceDescriptor,IOUserNetworkPacketBufferPool *,IOUserNetworkPacketQueue **,uint))
IOUserNetworkEthernet::_ReportAvailableMediaTypes_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint const*,uint))
IOUserNetworkEthernet::_ReportDataBandwidths_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,ulong long,ulong long,ulong long,ulong long))
IOUserNetworkEthernet::_ReportInterfaceAdvisory_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ifnet_interface_advisory const*))
IOUserNetworkEthernet::_ReportLinkQuality_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,uint))
IOUserNetworkEthernet::_ReportLinkStatus_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *,uint,uint))
IOUserNetworkEthernet::_ReportNicProxyLimits_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,nicproxy_limits_info_s))
IOUserNetworkEthernet::_SelectMediaType(uint,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SelectMediaType_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOUserNetworkEthernet::_SetAllMulticastModeEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetAllMulticastModeEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IOUserNetworkEthernet::_SetBSDName_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*,ulong))
IOUserNetworkEthernet::_SetHardwareAddress(ether_addr,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetHardwareAddress_Impl(ether_addr)
IOUserNetworkEthernet::_SetHardwareAddress_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ether_addr))
IOUserNetworkEthernet::_SetHardwareAssists(uint,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetHardwareAssists_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOUserNetworkEthernet::_SetInterfaceEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetInterfaceEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IOUserNetworkEthernet::_SetMaxTransferUnit(uint,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetMaxTransferUnit_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOUserNetworkEthernet::_SetMulticastAddresses(ulong long,uint,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetMulticastAddresses_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,ulong long,uint))
IOUserNetworkEthernet::_SetPromiscuousModeEnable(bool,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_SetPromiscuousModeEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IOUserNetworkEthernet::_ShareTask_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *))
IOUserNetworkEthernet::_bpfAttach_Impl(uint,uint)
IOUserNetworkEthernet::_bpfAttach_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint))
IOUserNetworkEthernet::_bpfTap(uint,uint,int (*)(OSMetaClassBase *,IORPC))
IOUserNetworkEthernet::_bpfTapPacket_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool,uint,IOUserNetworkPacketState,ulong long,ulong))
IOUserNetworkEthernet::_bpfTap_Impl(uint,uint)
IOUserNetworkEthernet::_bpfTap_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,uint))
IOUserNetworkEthernet::bpfTap(uint,uint)
IOUserNetworkEthernet::setBSDName(char const*)
IOUserNetworkEthernet::setProperties(OSObject *)
IOUserNetworkEthernet::setProperties(OSObject *)::$_0::__invoke(void *,OSSymbol const*,OSObject *)
IOUserNetworkEthernet::setProperties(OSObject *)::$_0::operator bool (*)(void *,OSSymbol const*,OSObject *)(void)
IOUserNetworkEthernet::setProperties(OSObject *)::$_0::operator()(void *,OSSymbol const*,OSObject *)
IOUserNetworkEthernet::~IOUserNetworkEthernet()
IOUserNetworkEthernet__fn_0x5b8
IOUserNetworkEthernet__fn_0x630
IOUserNetworkEthernet__fn_0x630_0
IOUserNetworkEthernet__fn_0x660
IOUserNetworkEthernet__fn_0x660_0
IOUserNetworkEthernet__fn_0x668
IOUserNetworkEthernet__stop_IOService
IOUserNetworkMemorySegment::complete(uint)
IOUserNetworkMemorySegment::isDeviceMapped(void)
IOUserNetworkMemorySegment::isDextMapped(void)
IOUserNetworkMemorySegment::prepare(uint)
IOUserNetworkMemorySegment::withPool(IOSkywalkPacketBufferPool *,IOUserNetworkMemorySegment::SegmentDescriptor *,uint)
IOUserNetworkPacket::setPacketState(IOUserNetworkPacketState const*)
IOUserNetworkPacketBufferPool::CopyMemoryDescriptor_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOMemoryDescriptor **))
IOUserNetworkPacketBufferPool::GetBufferCount_Impl(uint *)
IOUserNetworkPacketBufferPool::GetBufferCount_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint *))
IOUserNetworkPacketBufferPool::GetPacketCount_Impl(uint *)
IOUserNetworkPacketBufferPool::GetPacketCount_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint *))
IOUserNetworkPacketBufferPool::MetaClass::Dispatch(IORPC)
IOUserNetworkPacketBufferPool::MetaClass::alloc(void)
IOUserNetworkPacketBufferPool::_AllocatePacket_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IOUserNetworkPacketState *,uint))
IOUserNetworkPacketBufferPool::_CopyPacketWithIndex_Impl(uint,IOUserNetworkPacket **)
IOUserNetworkPacketBufferPool::_CopyPacketWithIndex_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint,IOUserNetworkPacket **))
IOUserNetworkPacketBufferPool::_Create_Invoke(IORPC,int (*)(IOService *,char const*,IOUserNetworkPacketBufferPoolOptions const*,IOUserNetworkPacketBufferPool**))
IOUserNetworkPacketBufferPool::_DeallocatePacket_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,uint))
IOUserNetworkPacketBufferPool::_Dispatch(IOUserNetworkPacketBufferPool*,IORPC)
IOUserNetworkPacketBufferPool::free(void)
IOUserNetworkPacketBufferPool::newMemorySegment(IOSkywalkMemorySegmentDescriptor *,IOSkywalkMemorySegment **)
IOUserNetworkPacketBufferPool::newPacket(IOSkywalkPacketDescriptor *,IOSkywalkPacket **)
IOUserNetworkPacketBufferPool::withName(char const*,OSObject *,uint,IOSkywalkPacketBufferPool::PoolOptions const*)
IOUserNetworkPacketBufferPool::~IOUserNetworkPacketBufferPool()
IOUserNetworkPacketQueue::MetaClass::MetaClass(void)
IOUserNetworkPacketQueue::MetaClass::alloc(void)
IOUserNetworkPacketQueue::SetDataQueue_Impl(IODataQueueDispatchSource *)
IOUserNetworkPacketQueue::SetDataQueue_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,IODataQueueDispatchSource *))
IOUserNetworkPacketQueue::SetEnable_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,bool))
IOUserNetworkPacketQueue::_Dispatch(IOUserNetworkPacketQueue*,IORPC)
IOUserNetworkPacketQueue::free(void)
IOUserNetworkPacketQueue::initWithPool(IOSkywalkPacketBufferPool *,uint,uint,uint,uint,OSObject *,void (*)(OSObject *,...),void *)
IOUserNetworkPacketQueue::lock(void)
IOUserNetworkPacketQueue::setBusy(bool)
IOUserNetworkPacketQueue::setDataQueue(IODataQueueDispatchSource *)
IOUserNetworkPacketQueue::~IOUserNetworkPacketQueue()
IOUserNetworkRxCompletionQueue::Create_Invoke(IORPC,int (*)(IOUserNetworkPacketBufferPool *,OSObject *,uint,uint,IODispatchQueue *,IOUserNetworkRxCompletionQueue**))
IOUserNetworkRxCompletionQueue::MetaClass::Dispatch(IORPC)
IOUserNetworkRxCompletionQueue::addReporters(IOService *,OSSet *)
IOUserNetworkRxCompletionQueue::getReportChannelValue(ulong long)
IOUserNetworkRxCompletionQueue::withPool(IOSkywalkPacketBufferPool *,OSObject *,uint,uint)
IOUserNetworkRxSubmissionQueue::Create_Invoke(IORPC,int (*)(IOUserNetworkPacketBufferPool *,OSObject *,uint,uint,IODispatchQueue *,IOUserNetworkRxSubmissionQueue**))
IOUserNetworkRxSubmissionQueue::MetaClass::Dispatch(IORPC)
IOUserNetworkRxSubmissionQueue::SetEnable_Impl(bool)
IOUserNetworkRxSubmissionQueue::addReporters(IOService *,OSSet *)
IOUserNetworkRxSubmissionQueue::getReportChannelValue(ulong long)
IOUserNetworkRxSubmissionQueue::packetCompletion(IOSkywalkPacket *,IOSkywalkPacketQueue *,uint)
IOUserNetworkRxSubmissionQueue::withPool(IOSkywalkPacketBufferPool *,OSObject *,uint,uint)
IOUserNetworkTxCompletionQueue::Create_Invoke(IORPC,int (*)(IOUserNetworkPacketBufferPool *,OSObject *,uint,uint,IODispatchQueue *,IOUserNetworkTxCompletionQueue**))
IOUserNetworkTxCompletionQueue::MetaClass::Dispatch(IORPC)
IOUserNetworkTxCompletionQueue::addReporters(IOService *,OSSet *)
IOUserNetworkTxCompletionQueue::getReportChannelValue(ulong long)
IOUserNetworkTxCompletionQueue::withPool(IOSkywalkPacketBufferPool *,OSObject *,uint,uint)
IOUserNetworkTxSubmissionQueue::Create_Impl(IOUserNetworkPacketBufferPool *,OSObject *,uint,uint,IODispatchQueue *,IOUserNetworkTxSubmissionQueue**)
IOUserNetworkTxSubmissionQueue::Create_Invoke(IORPC,int (*)(IOUserNetworkPacketBufferPool *,OSObject *,uint,uint,IODispatchQueue *,IOUserNetworkTxSubmissionQueue**))
IOUserNetworkTxSubmissionQueue::MetaClass::Dispatch(IORPC)
IOUserNetworkTxSubmissionQueue::MetaClass::alloc(void)
IOUserNetworkTxSubmissionQueue::SetEnable_Impl(bool)
IOUserNetworkTxSubmissionQueue::_Dispatch(IOUserNetworkTxSubmissionQueue*,IORPC)
IOUserNetworkTxSubmissionQueue::addReporters(IOService *,OSSet *)
IOUserNetworkTxSubmissionQueue::getReportChannelValue(ulong long)
IOUserNetworkTxSubmissionQueue::withPool(IOSkywalkPacketBufferPool *,OSObject *,uint,uint)
IOUserNetworkTxSubmissionQueue__enable
IOUserNetworkTxSubmissionQueue__fn_0xe0
IOUserNotification__setNotification_IONotifier
IOUserResources::getWorkLoop(void)
IOUserResources::resources(void)
IOUserServer::Create(char const*,ulong long,ulong long,OSString *,IOUserServer**)
IOUserServer::Create_Invoke(IORPC,int (*)(char const*,ulong long,ulong long,OSString *,IOUserServer**))
IOUserServer::Exit(char const*,int (*)(OSMetaClassBase *,IORPC))
IOUserServer::Exit_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*))
IOUserServer::LoadModule(char const*,int (*)(OSMetaClassBase *,IORPC))
IOUserServer::MetaClass::Dispatch(IORPC)
IOUserServer::MetaClass::MetaClass(void)
IOUserServer::_Dispatch(IOUserServer*,IORPC)
IOUserServer::checkEntitlements(IOService *,IOService *)
IOUserServer::checkEntitlements(OSDictionary *,OSObject *,IOService *,IOService *)
IOUserServer::clientClose(void)
IOUserServer::consumeObjects(IORPCMessage *,ulong)
IOUserServer::copySendRightForObject(OSObject *,uint)
IOUserServer::exit(char const*)
IOUserServer::finalize(uint)
IOUserServer::kernelDispatch(OSObject *,IORPC)
IOUserServer::powerSourceChanged(bool)
IOUserServer::powerStateDidChangeTo(ulong,ulong,IOService *)
IOUserServer::queueForObject(OSObject *,ulong long)
IOUserServer::registerClass(OSClassDescription *,uint,OSSharedPtr<OSUserMetaClass> &)
IOUserServer::serviceClose(IOService *,IOService *)
IOUserServer::serviceDidStop(IOService *,IOService *)
IOUserServer::serviceDidTerminate(IOService *,IOService *,uint,bool *)
IOUserServer::serviceNewUserClient(IOService *,task *,void *,uint,OSDictionary *,OSSharedPtr<IOUserClient> &)
IOUserServer::serviceOpen(IOService *,IOService *)
IOUserServer::serviceSetPowerState(IOService *,IOService *,ulong,ulong)
IOUserServer::serviceWillTerminate(IOService *,IOService *,uint)
IOUserServer::setPowerState(ulong,IOService *)
IOUserServer::stringArrayIndex(IOPStrings *,char const*)
IOUserServer::systemHalt(int)
IOUserServer::systemPower(bool)
IOUserServer::target(OSAction *,IORPCMessage *)
IOUserServer::varsForObject(OSObject *)
IOUserServerCheckInToken::copyServerName(void)
IOUserServerCheckInToken::copyServerTag(void)
IOUserService::start(IOService *)
IOUserUserClient::MetaClass::MetaClass(void)
IOUserUserClient::clientClose(void)
IOUserUserClient::clientMemoryForType(uint,uint *,IOMemoryDescriptor **)
IOUserUserClient::init(OSDictionary *)
IOUserUserClient::setTask(task *)
IOWatchDogTimer::setProperties(OSObject *)
IOWatchDogTimer::start(IOService *)
IOWatchDogTimer::stop(IOService *)
IOWatchDogTimerSleepHandler(void *,void *,uint,IOService *,void *,ulong)
IOWatchdog::async_initialization_code(void)
IOWatchdog::checkWatchdog(void)
IOWatchdog::checkWatchdog(void)
IOWatchdog::handle_defang_sysctl(sysctl_oid *,void *,int,sysctl_req *)
IOWatchdog::newUserClient(task *,void *,uint,OSDictionary *,IOUserClient **)
IOWatchdog::start(IOService *,ulong long,ulong long)
IOWatchdog::stop(IOService *)
IOWatchdog::userClientClose(void)
IOWatchdog::userspaceCheckDefanged(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspaceCheckEnabled(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspaceCheckIOKitMonitoringEnabled(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspaceCheckin(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspaceDisableUserspaceMonitoring(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspacePanic(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspacePanic(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdog::userspaceReenableUserspaceMonitoring(OSObject *,void *,IOExternalMethodArguments *)
IOWatchdogUserClient::clientClose(void)
IOWatchdogUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
IOWatchdogUserClient::start(IOService *)
IOWatchdogUserClient::terminate(uint)
IOWorkGroup::Create_Call(OSString *,IOUserClient *,IOWorkGroup**)
IOWorkGroup::InvalidateKernel(IOUserClient *,int (*)(OSMetaClassBase *,IORPC))
IOWorkGroup::InvalidateKernel_Impl(IOUserClient *)
IOWorkGroup::MetaClass::Dispatch(IORPC)
IOWorkGroup::SetWorkGroupPort(ipc_port *,int (*)(OSMetaClassBase *,IORPC))
IOWorkGroup::_Dispatch(IOWorkGroup*,IORPC)
IOWorkLoop::disableAllEventSources(void)
IOWorkLoop::disableAllInterrupts(void)
IOWorkLoop::enableAllEventSources(void)
IOWorkLoop::enableAllInterrupts(void)
IOWorkLoop::eventSourcePerformsWork(IOEventSource *)
IOWorkLoop::openGate(void)
IOWorkLoop::releaseEventChain(IOEventSource *)
IOWorkLoop::removeEventSource(IOEventSource *)
IOWorkLoop::runAction(int (*)(OSObject *,void *,void *,void *,void *),OSObject *,void *,void *,void *,void *)
IOWorkLoop::runActionBlock(int ( {block_pointer})(void))
IOWorkLoop::setMaximumLockTime(ulong long,uint)
IOWorkLoop::sleepGate(void *,uint)
IOWorkLoop::sleepGate(void *,ulong long,uint)
IOWorkLoop___maintRequest_void___void___void___void
IOWorkLoop__closeGate
IOWrappedMemoryDescriptor::createMappingInTask(task *,ulong long,uint,ulong long,ulong long)
IOWrappedMemoryDescriptor::init(IOMemoryDescriptor *)
IO_COPY_MBUF(__mbuf *,__mbuf *,int)
IPCEndPoint_Base::GetPeerIOService(IOService *)
ISPCoredump::addRegion(void *,void *,ulong,bool)
ISPCoredump::addSWVersion(char *)
ISPCoredump::coredumpSaveSWVers(void *,int (*)(void *,ulong long,void *),void *)
ISPCoredump::initWithOptions(ISPCoredumpArch)
ISPCoredump::removeRegion(void *)
ISPCoredump::reset(void)
ISPCoredump::sCoredumpGetSummary(int (*)(ulong long,ulong long,ulong long,ulong long,ulong long,void *),void *)
ISPCoredump::sCoredumpInit(void *)
ISPCoredump::sCoredumpSaveSegmentData(int (*)(void *,ulong long,void *),void *)
ISPCoredump::sCoredumpSaveSegmentDescriptions(int (*)(ulong long,ulong long,void *),void *)
ISPCoredump::sCoredumpSaveThreadState(void *,int (*)(void *,void *),void *)
ISPCoredump::withOptions(ISPCoredumpArch,H10ISPVersion,void *)
IndividualChannelStream::ApplyPNS(void)
IndividualChannelStream::Deserialize(BitstreamReader &,ICSInfo const*)
IndividualChannelStream::IndividualChannelStream(SFBOffsetTable const*,uint,bool,bool)
InitializeDenylist(void)
InitializeDenylist(void)
InterruptEventSourceBridge::free(void)
InterruptEventSourceBridge::init(IOMFB::InterruptEventSource *)
InterruptSource::disable(void)
InterruptSource::enable(void)
InterruptSource::filter_wrapper(OSObject *,IOFilterInterruptEventSource *)
InterruptSource::free(void)
InterruptSource::handler_wrapper(OSObject *,IOInterruptEventSource *,int)
InterruptSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource *,int),IOMFB::UPIOSvcProxy *,uint)
InterruptSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource *,int),bool (*)(OSObject *,IOMFB::InterruptEventSource *),IOMFB::UPIOSvcProxy *,uint)
InterruptSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource *,int),void (*)(OSObject *,IOInterruptEventSource *,int),IOMFB::UPIOSvcProxy *,uint)
InterruptSource::init(OSObject *,void (*)(OSObject *,IOMFB::InterruptEventSource *,int),void (*)(OSObject *,IOInterruptEventSource *,int),bool (*)(OSObject *,IOMFB::InterruptEventSource *),bool (*)(OSObject *,IOFilterInterruptEventSource *),IOMFB::UPIOSvcProxy *,uint)
InterruptSource::operator delete(void *,ulong)
InterruptSource::operator new(ulong)
InterruptSource::~InterruptSource()
IntervalMapLRU::changeCacheSize(int)
IntervalMapLRU::clearAllNodes(void)
IntervalMapLRU::insertNode(IntervalMapLRU::Node *,bool,bool (*)(void *,ulong long,ulong),void *)
IntervalMapLRU::insertNodeLocked(IntervalMapLRU::Node *,IntervalMapLRU::Node *,bool)
IntervalMapLRU::invalidateByLRULocked(ulong,IntervalMapLRU::_nodes *)
IntervalMapLRU::invalidateRange(ulong long,ulong long)
IntervalMapLRU::removeNodeLocked(IntervalMapLRU::Node *)
IntervalMapLRU::searchForRange(ulong long,ulong long,IntervalMapLRU::NodeCompareRes *,IntervalMapLRU::NodeIterator *)
InvDegammaFunc::interp_cp(uint)
InvDegammaFunc::operator()(double)
IosaCSCPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaChromaDownsamplePipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaChromaDownsamplePipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaChromaUpsamplePipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaChromaUpsamplePipeUnitMSR9::active(pipeLocation_t,pipeUnitExchange *)
IosaColorManager::newIORegFlex(void)
IosaColorManagerMSR10::collectHistogram_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR10::commitDegamma_gatedContext(M2ScalerCSCRequest *,float *,int)
IosaColorManagerMSR10::commitToneMap_gatedContext(M2ScalerCSCRequest *,ChromaticAdaptation_t *)
IosaColorManagerMSR10::configureDeGammaLUTByIndex_gatedContext(M2ScalerCSCRequest *,uint,uint)
IosaColorManagerMSR10::convertToLinear_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR10::enableColorManager_gatedContext(M2ScalerCSCRequest *,bool)
IosaColorManagerMSR10::enableDegammaRegamma_gatedContext(M2ScalerCSCRequest *,bool)
IosaColorManagerMSR10::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaColorManagerMSR10::programDeGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR10::programHistogram(M2ScalerCSCRequest *)
IosaColorManagerMSR10::reset3x3Clips(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR10j::programHistogram(M2ScalerCSCRequest *)
IosaColorManagerMSR11::collectHistogram_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR11::configureMMR_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR2::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR2::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR2::cscArbiterConfigureEnables_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR4::checkColorManagementRequired(M2ScalerCSCRequest *)
IosaColorManagerMSR4::collectHistogram_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR4::colorManagementDecode(M2ScalerCSCRequest *)
IosaColorManagerMSR4::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR4::cscArbiterConfigureEnables_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR4::enableDegammaRegamma_gatedContext(M2ScalerCSCRequest *,bool)
IosaColorManagerMSR4::getColorspaceMatrix(IosaColorManagerMSR4::Colorspace,IosaColorManagerMSR4::Colorspace)
IosaColorManagerMSR4::getTransferFunction(IOSurfaceColorAndSpatialKeysStruct *)
IosaColorManagerMSR4::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaColorManagerMSR4::programDeGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR4::programDeGammaLinearLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint)
IosaColorManagerMSR4::programGammaLUT_gatedContext(M2ScalerCSCRequest *,GammaFunction)
IosaColorManagerMSR4::programGammaLUT_gatedContext(M2ScalerCSCRequest *,GammaFunction)
IosaColorManagerMSR4::programGamutConversionMatrix_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR4::programHistogram(M2ScalerCSCRequest *)
IosaColorManagerMSR4::programReGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR4::programReGammaLinearLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint)
IosaColorManagerMSR4::validateColorManagement(M2ScalerCSCRequest *)
IosaColorManagerMSR4::validateHistogram(M2ScalerCSCRequest *)
IosaColorManagerMSR5::programDeGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR5::programDeGammaLinearLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint)
IosaColorManagerMSR7::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR7::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR7::cscArbiterConfigureEnables_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR7::enableDegammaRegamma_gatedContext(M2ScalerCSCRequest *,bool)
IosaColorManagerMSR7::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaColorManagerMSR7::programDeGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR7::programGamutConversionMatrix_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR7::programHistogram(M2ScalerCSCRequest *)
IosaColorManagerMSR7::programReGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR8::IosaColorManagerMSR8(OSMetaClass const*)
IosaColorManagerMSR8::IosaColorManagerMSR8(void)
IosaColorManagerMSR8::MetaClass::alloc(void)
IosaColorManagerMSR8::Rgb2Ycc_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::a2Common_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::checkColorManagementRequired(M2ScalerCSCRequest *)
IosaColorManagerMSR8::chromaticAdaptation_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::cmControlConfig(M2ScalerCSCRequest *,kControlEnable_t,bool)
IosaColorManagerMSR8::cmValidation(M2ScalerCSCRequest *)
IosaColorManagerMSR8::collectHDRApiOutput_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::collectHistogram_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::colorManagementDecode(M2ScalerCSCRequest *)
IosaColorManagerMSR8::commitDegamma_gatedContext(M2ScalerCSCRequest *,uint const*,int)
IosaColorManagerMSR8::commitDetailPrsv_gatedContext(M2ScalerCSCRequest *,ChromaticAdaptation_t *)
IosaColorManagerMSR8::commitGamma_gatedContext(M2ScalerCSCRequest *,void const*,int,bool,int,int)
IosaColorManagerMSR8::commitToneMap_gatedContext(M2ScalerCSCRequest *,ChromaticAdaptation_t *)
IosaColorManagerMSR8::common2B_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::configureCMControl_gatedContext(M2ScalerCSCRequest *,uint)
IosaColorManagerMSR8::configureCSC_gatedContext(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR8::configureDeGammaLUTByIndex_gatedContext(M2ScalerCSCRequest *,uint,uint)
IosaColorManagerMSR8::convertToGamma_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::convertToLinear_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::cscArbiterConfigureEnables_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::getHDRStats_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::getTransferFunction(IOSurfaceColorAndSpatialKeysStruct *)
IosaColorManagerMSR8::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaColorManagerMSR8::programColorManager_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::programDeGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR8::programGamutConversionMatrix_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::programReGammaLUTValues_gatedContext(M2ScalerCSCRequest *,uint,uint,uint)
IosaColorManagerMSR8::reset3x3Clips(M2ScalerCSCRequest *,MatrixLocation)
IosaColorManagerMSR8::resetCM_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::scalePostCM(M2ScalerCSCRequest *,uint)
IosaColorManagerMSR8::src2Rgb_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_3x3_block_data(MSRCSC_t *,MatrixLocation)
IosaColorManagerMSR8::validate_Rgb2Ycc_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_a2Common_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_chromaticAdaptation_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_common2B_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_convertToGamma_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_src2Rgb_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR8::validate_toneMapping_gatedContext(ChromaticAdaptation_t *)
IosaColorManagerMSR9::collectHistogram_gatedContext(M2ScalerCSCRequest *)
IosaColorManagerMSR9::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaColorManagerMSR9::programHistogram(M2ScalerCSCRequest *)
IosaConvertPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaConvertPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaDPEControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaDPEControl::mapDPEMemory(IOService *)
IosaDPEControl::unmapDPEMemory(void)
IosaDPEControlMSR10::startDPE(void)
IosaDPEControlMSR10::stopDPE(void)
IosaDPEControlMSR10j::startDPE(void)
IosaDPEControlMSR10j::stopDPE(void)
IosaDPEControlMSR11::startDPE(void)
IosaDPEControlMSR11::stopDPE(void)
IosaDPEControlMSR8::startDPE(void)
IosaDPEControlMSR8::stopDPE(void)
IosaDegammaPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaDegammaPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaDirectionalScalingPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaEnhancementPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaInternalPipe::isCIFFormat(DestinationOrSource,pipeUnitExchange *)
IosaInternalPipeMSR10::commitRevertMapConfig_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR10::commitRevert_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR10::configureCIFRangeAdjust_gatedContext(M2ScalerCSCRequest *)
IosaInternalPipeMSR10::getMapConfigValue(uint)
IosaInternalPipeMSR10::programMapConfig_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *,DestinationOrSource,uint *)
IosaInternalPipeMSR6::configurePixelExpansion_gatedContext(M2ScalerCSCRequest *,CSCControlUnit *)
IosaInternalPipeMSR7::configureCIFRangeAdjust_gatedContext(M2ScalerCSCRequest *)
IosaInternalPipeMSR7::configureConvert_gatedContext(M2ScalerCSCRequest *)
IosaInternalPipeMSR7::msbReplicationWorkaroundSelect_gatedContext(CSCControlUnit *)
IosaInternalPipeMSR7::programInternalPipe_gatedContext(M2ScalerCSCRequest *)
IosaInternalPipeMSR8::commitConvertMapConfig_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR8::commitConvert_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR8::commitRevert_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR8::getMapConfigValue(uint)
IosaInternalPipeMSR8::getMapConfigValue(uint)
IosaInternalPipeMSR8::iARGBtoMapConfigChannel(RedLumaOrGreenCbOrBlueCrOrAlpha)
IosaInternalPipeMSR8::iARGBtoMapConfigChannel(RedLumaOrGreenCbOrBlueCrOrAlpha)
IosaInternalPipeMSR8::initPipeForTransform(M2ScalerCSCRequest *)
IosaInternalPipeMSR8::pipeUnitInitialize(M2ScalerCSCRequest *)
IosaInternalPipeMSR8::programInternalPipe_gatedContext(M2ScalerCSCRequest *)
IosaInternalPipeMSR8::programMapConfig_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *,DestinationOrSource,uint *)
IosaInternalPipeMSR8a::commitConvert_gatedContext(pipeUnitExchange *,M2ScalerCSCRequest *)
IosaInternalPipeMSR::getDisableMsbReplicationWAR(void)
IosaInternalPipeMSR::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaInternalPipeMSR::msbReplicationWorkaroundSelect_gatedContext(CSCControlUnit *)
IosaPipe::addPipeUnit(M2ScalerCSCRequest *,IosaPipeUnit *,pipeLocation_t)
IosaPipe::getPipeUnitActive(pipeUnitExchange *,pipeLocation_t,pipeLocation_t)
IosaPipe::init(AppleM2ScalerCSCHal const*)
IosaPipe::initializeExchange(pipeUnitExchange *,uint)
IosaPipe::releasePipeUnits(void)
IosaPipeUnit::getPixelDimensions(pipeUnitExchange *)
IosaPipeUnit::setChannelConfig(pipeUnitExchange *,DestinationOrSource,COLOR_FORMAT_CLASS,double *,COLOR_RANGE,CSCData_Space,CSCData_Range)
IosaPixelAveragingPipeUnitMSR6::active(pipeLocation_t,pipeUnitExchange *)
IosaPixelAveragingPipeUnitMSR6::active(pipeLocation_t,pipeUnitExchange *)
IosaPixelAveragingPipeUnitMSR6::initialize(pipeLocation_t,pipeUnitExchange *)
IosaPolyphaseScalingPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaPolyphaseScalingPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaPolyphaseScalingPipeUnit::prepareFilters(pipeUnitExchange *,bool)
IosaPolyphaseScalingPipeUnit::prepareFilters(pipeUnitExchange *,bool)
IosaPolyphaseScalingPipeUnit::upDownSamplingException(pipeUnitExchange *)
IosaPrescaler3x3PipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaPrescalerControl::initPipeForTransform(M2ScalerCSCRequest *)
IosaPrescalerControl::pipeUnitInitialize(M2ScalerCSCRequest *)
IosaPrescalerControlMSR8::commitChromaUpsampling_gatedContext(M2ScalerCSCRequest *,bool,pipeUnitExchange *)
IosaPrescalerControlMSR8::enablePrescaler3x3(M2ScalerCSCRequest *,bool)
IosaRdmaControl::checkRdma(M2ScalerCSCRequest *,pipeLocation_t,pipeUnitExchange *)
IosaRdmaControl::initPipeForTransform(M2ScalerCSCRequest *)
IosaRdmaControlMSR10::configureRDMA_gatedContext(M2ScalerCSCRequest *,SW_COLOR_FORMAT,InterchangeMode *,InterchangeTileSize *,InterchangeCompressionFootprint *,InterchangeComponentType *)
IosaRdmaControlMSR10::programDMA_gatedContext(SW_COLOR_FORMAT,InterchangeMode *,InterchangeTileSize *,uint,uint *,uint *,bool,InterchangeCompressionFootprint *,InterchangeComponentType *)
IosaRdmaControlMSR10::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *)
IosaRdmaControlMSR10::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaRdmaControlMSR10::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaRdmaControlMSR10::validateInterchangeTileSpan(pipeUnitExchange *,DestinationOrSource)
IosaRdmaControlMSR10::validateRdmaConfig(pipeUnitExchange *)
IosaRdmaControlMSR11::commitReshape_gatedContext(M2ScalerCSCRequest *,reshapePipeUnitState *,pipeUnitExchange *)
IosaRdmaControlMSR11::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaRdmaControlMSR6::initPipeForTransform(M2ScalerCSCRequest *)
IosaRdmaControlMSR8::commitReshape_gatedContext(M2ScalerCSCRequest *,reshapePipeUnitState *,pipeUnitExchange *)
IosaRdmaControlMSR8::initPipeForTransform(M2ScalerCSCRequest *)
IosaRdmaControlMSR8::programRdmaControl_gatedContext(M2ScalerCSCRequest *)
IosaRdmaControlMSR8::validateDma(pipeUnitExchange *,M2ScalerCSCRequest *,bool)
IosaRdmaPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaRdmaPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaRegammaPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaRegammaPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaRequestPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaRequestPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IosaReshapePipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaRevertPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaTiledCompressedMemMSR7::configureTiledBaseAddresses_gatedContext(DestinationOrSource,M2ScalerCSCRequest *)
IosaTiledCompressedMemMSR7::configureTiledCompression_gatedContext(M2ScalerCSCRequest *,DestinationOrSource)
IosaTiledCompressedMemMSR8::configureTiledBaseAddresses_gatedContext(DestinationOrSource,M2ScalerCSCRequest *)
IosaTiledCompressedMemMSR8::configureTiledCompression_gatedContext(M2ScalerCSCRequest *,DestinationOrSource)
IosaTiledCompressedMemMSR8::validateCompressedTileBuffers(DestinationOrSource,M2ScalerCSCRequest *)
IosaTiledCompressedMemMSR8::validateCompressionFormat(M2ScalerCSCRequest *)
IosaWdmaControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
IosaWdmaControl::initPipeForTransform(M2ScalerCSCRequest *)
IosaWdmaControlMSR10::configureWDMA_gatedContext(M2ScalerCSCRequest *,SW_COLOR_FORMAT,InterchangeMode *,InterchangeTileSize *,InterchangeCompressionFootprint *,InterchangeComponentType *)
IosaWdmaControlMSR10::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaWdmaControlMSR10::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaWdmaControlMSR10::validateWdmaConfig(pipeUnitExchange *)
IosaWdmaControlMSR11::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaWdmaControlMSR11::programFormat_gatedContext(InterchangeMode,uint,uint,uint,uint,uint *,InterchangeCompressionFootprint,InterchangeComponentType)
IosaWdmaPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaWdmaPipeUnit::active(pipeLocation_t,pipeUnitExchange *)
IosaWdmaPipeUnit::initialize(pipeLocation_t,pipeUnitExchange *)
IsCDHashDenylisted(uchar const*)
IsOSDataEmpty(OSData *)
IspAneIPCEndPoints::IPCEndPointTimerHandler(IOTimerEventSource *)
IspAneIPCEndPoints::IPC_initEndPoint(void)
IspAneIPCEndPoints::IspAneIPCEndPoints(char const*,char const*,AppleH10CamIn *)
IspAneIPCEndPoints::enableFWIPCEP_gated(AneIspEndpointIndex,bool)
IspAneIPCEndPoints::getPeerEPConfig(void)
IspAneIPCEndPoints::peerEPCtrlMsg(_IPC_EP_CMD_TYPE)
IspAneIPCEndPoints::processIPCServiceMsg_gated(OSString *,void *,void *)
IspAneIPCEndPoints::sendEPConfigToPeer(void)
IspAneIPCEndPoints::~IspAneIPCEndPoints()
JasperAgileClocking::ArgMax(JasperAgileClocking::Pri2 *,uint,uint,JasperAgileClocking::Pri2 **)
JasperAgileClocking::CreateFList2PllArray(uint const*,uint,JasperAgileClocking::JasperPllObject **,uint *)
JasperAgileClocking::CreateFList2Pri2Array(uint const*,JasperAgileClocking::JasperPllObject const*,JasperAgileClocking::Pri2 **,uint *)
JasperAgileClocking::GetScoreFromTable(uint,uint,uint,float *)
JasperAgileClocking::JasperAgileClocking(H10ISPJasperSACParams const*,uint,float,float,float,float,float,JasperScoreTableEntry const*,uint,JasperScoreTableEntry const*,uint)
JasperAgileClocking::JasperSACIndexSelect(uint const*,uint,uint (*)[2],JasperProjectionMode)
JasperAgileClocking::JasperSACIndexSelectInternal(uint const*,uint,uint (*)[2],bool)
JasperAgileClocking::PllScore(JasperAgileClocking::Pri2 const*,uint,JasperAgileClocking::JasperPllObject const*,float *)
JasperAgileClocking::ScoreFunction(JasperAgileClocking::Pri2 const*,uint,float *)
JasperAgileClocking::SearchPll(uint const*,uint,uint,JasperAgileClocking::JasperPllObject *)
JasperAgileClocking::SelectPll(uint const*,uint,float,JasperAgileClocking::JasperPllObject const*,JasperAgileClocking::JasperPllObject*)
JasperAgileClocking::SelectPri2(uint const*,uint,JasperAgileClocking::JasperPllObject const*,bool,JasperAgileClocking::Pri2 *)
JointStereo::ApplyIntensity(IndividualChannelStream const&,IndividualChannelStream&)
JointStereo::ApplyMidSide(IndividualChannelStream &,IndividualChannelStream &)
JointStereo::Deserialize(BitstreamReader &,ICSInfo const&)
K2KStressTestThreadAction(ThreadArgument *)
KDIBackingStore::_handleAttach(IOService *)
KDIBackingStore::_handleDetach(IOService *)
KDIBackingStore::_handleStart(IOService *)
KDIBackingStore::init(OSDictionary *)
KDIBackingStore::readBytes(long long,ulong,ulong *,void *,bool)
KDIBackingStore::setUnmatchable(bool)
KDIDiskImage::_handleAttach(IOService *)
KDIDiskImage::_handleStart(IOService *)
KDIDiskImage::flush(void)
KDIDiskImage::init(OSDictionary *)
KDIDiskImage::readSectorChunk(long long,long long *,long long *,void **,bool)
KDIDiskImage::reportStoredChecksum(HDIChecksumStruct *)
KDIDiskImageNub::attach(IOService *)
KDIDiskImageNub::detach(IOService *)
KDIDiskImageNub::flush(void)
KDIDiskImageNub::handleClose(IOService *,uint)
KDIDiskImageNub::handleOpen(IOService *,uint,void *)
KDIDiskImageNub::init(OSDictionary *)
KDIDiskImageNub::probe(IOService *,int *)
KDIDiskImageNub::readSectors(long long,long long,long long *,void *,bool)
KDIDiskImageNub::reportRemovable(bool *)
KDIDiskImageNub::reportSectorCount(long long *)
KDIDiskImageNub::reportWriteProtection(bool *)
KDIDiskImageNub::start(IOService *)
KDIDiskImageNub::writeSectors(long long,long long,long long *,void const*,bool)
KDIEncoding::_handleAttach(IOService *)
KDIEncoding::flush(void)
KDIEncoding::getURL(void)
KDIEncoding::setUnmatchable(bool)
KDIFileBackingStore::_handleStop(IOService *)
KDIFileBackingStore::flush(void)
KDIFileBackingStore::getUserVnode(OSObject *,vfs_context *)
KDIFileBackingStore::probe(IOService *,int *)
KDIFileBackingStore::readBytes(long long,ulong,ulong *,void *,bool)
KDIFileBackingStore::setEOF(long long)
KDIFileBackingStore::writeBytes(long long,ulong,ulong *,void const*,bool)
KDIObject::_handleClose(IOService *,uint)
KDIObject::_handleOpen(IOService *,uint,void *)
KDIObject::attach(IOService *)
KDIObject::detach(IOService *)
KDIObject::handleClose(IOService *,uint)
KDIObject::handleOpen(IOService *,uint,void *)
KDIObject::start(IOService *)
KDIObject::stop(IOService *)
KDIRAMBackingStore::_handleStart(IOService *)
KDIRAMBackingStore::free(void)
KDIRAMBackingStore::init(OSDictionary *)
KDIRAMBackingStore::probe(IOService *,int *)
KDIRAMBackingStore::readBytes(long long,ulong,ulong *,void *,bool)
KDIRAMBackingStore::writeBytes(long long,ulong,ulong *,void const*,bool)
KDIReadWriteDiskImage::_analyzeBackingStore(void)
KDIReadWriteDiskImage::probe(IOService *,int *)
KDIReadWriteDiskImage::readSectors(long long,long long,long long *,void *,bool)
KDIReadWriteDiskImage::writeSectors(long long,long long,long long *,void const*,bool)
KDISecondaryEncoding::_handleAttach(IOService *)
KDIUDIFCacheBuffer::free(void)
KDIUDIFCacheBuffer::init(long long)
KDIUDIFCacheBuffer::score(void)
KDIUDIFCacheBuffer::setLength(long long)
KDIUDIFCacheObject::cacheData(long long,long long,void const*)
KDIUDIFCacheObject::commitHariKari(void)
KDIUDIFCacheObject::displayCacheStatus(void)
KDIUDIFCacheObject::free(void)
KDIUDIFCacheObject::getCacheBuffer(long long)
KDIUDIFCacheObject::init(int)
KDIUDIFCacheObject::isCacheHit(long long,long long,long long *,void **)
KDIUDIFDiskImage::_analyzeBackingStore(void)
KDIUDIFDiskImage::_generateGlobalBLKX(UDIFFileHeader *,OSData **,short)
KDIUDIFDiskImage::_handleAttach(IOService *)
KDIUDIFDiskImage::_handleStart(IOService *)
KDIUDIFDiskImage::_lookupChunk(long long,uint *,uint *,long long *,long long *,long long *,long long *)
KDIUDIFDiskImage::enableCache(bool)
KDIUDIFDiskImage::free(void)
KDIUDIFDiskImage::init(OSDictionary *)
KDIUDIFDiskImage::probe(IOService *,int *)
KDIUDIFDiskImage::readSectorChunk(long long,long long *,long long *,void **,bool)
KDIUDIFDiskImage::readSectors(long long,long long,long long *,void *,bool)
KDIUDIFDiskImage::reportStoredChecksum(HDIChecksumStruct *)
KDIUDIFEncoding::MetaClass::MetaClass(void)
KDIUDIFEncoding::_handleStart(IOService *)
KDIUDIFEncoding::countResources(uint,short *)
KDIUDIFEncoding::free(void)
KDIUDIFEncoding::getMetaData(OSString *,OSObject **)
KDIUDIFEncoding::getResource(uint,short,OSData **)
KDIUDIFEncoding::headerIsUDIF(UDIFFileHeader const*)
KDIUDIFEncoding::init(OSDictionary *)
KDIUDIFEncoding::loadMetaData(void)
KDIUDIFEncoding::probe(IOService *,int *)
KDIUDIFEncoding::readBytes(long long,ulong,ulong *,void *,bool)
KDIUDIFEncoding::readUDIFHeader(KDIBackingStore *,UDIFFileHeader *,bool)
KDIUDIFEncoding::releaseMetaData(void)
KDIURL::_processPropertyList(void)
KDIURL::attach(IOService *)
KDIURL::free(void)
KDIURL::getSecret(char const*)
KDIURL::handleClose(IOService *,uint)
KDIURL::handleOpen(IOService *,uint,void *)
KDIURL::init(OSDictionary *)
KDIURL::isUnmatchable(void)
KDIURL::setClientContext(vfs_context *)
KDIURL::setSecrets(OSDictionary *)
KDIURL::setUnmatchable(bool)
KLDBootstrap::loadKernelComponentKexts(void)
KLDBootstrap::readBooterExtensions(void)
KLDBootstrap::readBuiltinPersonalities(void)
KLDBootstrap::readPrelinkedExtensions(mach_header_64 *,kc_kind)
KLDBootstrap::~KLDBootstrap()
KernelFrameQueue::Init(AVE_Surface *)
KernelFrameQueue::getRequestedSpot(uint)
KtraceFunctionTrace::KtraceFunctionTrace(uint,uint,uint,uint,uint)
KtraceFunctionTrace::~KtraceFunctionTrace()
LGH_RLM::LGH_RLM(uint,lgh_frame_buffer_pool_info *)
LGH_RLM::Rel_Disp_Buf(lgh_frame_buffer *)
LGH_RLM::Swap_Frame_Bufs(lgh_header const*)
LGH_RLM::Update_Frame_Bufs(lgh_header const*,void *)
LGH_RLM::dump_fb_info(void)
LGH_RLM::find_available_frame_buffer(void)
LGH_RLM::flush_RLM(void)
LGH_RLM::~LGH_RLM()
LGH_Syntax::LGH_Syntax(uint)
LGH_Syntax::Parse_Header(uchar const*,ulong,lgh_header *)
LGH_Syntax::Update_Frame_Context_Parallel(uint)
LGH_Syntax::adapt_coef_probs(void)
LGH_Syntax::adapt_noncoef_probs(void)
LGH_Syntax::color_config(void)
LGH_Syntax::compressed_header(void)
LGH_Syntax::diff_update_prob(uchar)
LGH_Syntax::frame_size(void)
LGH_Syntax::get_tile_info(uchar const*,ulong,lgh_header *)
LGH_Syntax::load_probs(uint)
LGH_Syntax::load_probs2(uint)
LGH_Syntax::merge_probs(int const*,uint,uchar *,uint const*,uint,uint)
LGH_Syntax::read_delta_q(void)
LGH_Syntax::refresh_probs(void)
LGH_Syntax::save_probs_default(uint)
LGH_Syntax::uncompressed_header(void)
LSKDKext_start(void)
LSKDKext_stop(void)
LUNRescan(OSObject *,IOTimerEventSource *)
LUTSampler::operator()(double)
LayoutDescriptor::init(IOMFB::Layout,uint *,ushort)
LogManager::allocateQueueNode(void)
LogManager::free(void)
LogManager::freeClient(log_client *)
LogManager::hlog(uchar *,ulong,char const*,char *)
LogManager::notifyAllDataReady(bool)
LogManager::queueData(uchar *,ulong)
LogManager::queueNodeRelease(log_q_node *)
LogManager::terminateWriteSleepers(void)
LogManager::vlog(char const*,char *)
LogManagerDevice::free(void)
M2ScalerCSCColorConversionControl::cscArbiter(M2ScalerCSCRequest *,uint,uint,CSCData const*,bool)
M2ScalerCSCColorConversionControl::cscArbiter(M2ScalerCSCRequest *,uint,uint,CSCData const*,bool)
M2ScalerCSCColorConversionControl::cscArbiter(M2ScalerCSCRequest *,uint,uint,MSRCSC_t *,bool)
M2ScalerCSCColorConversionControl::cscArbiter(M2ScalerCSCRequest *,uint,uint,MSRCSC_t *,bool)
M2ScalerCSCColorConversionControl::cscArbiterConfigureCSCs(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControl::getCSCMatrix_gatedContext(CSCData_Space,CSCData_Range,CSCData_Space,CSCData_Range,CSCData_Accessibility,CSCData_Variant)
M2ScalerCSCColorConversionControl::initPipeForTransform(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControl::pipeUnitInitialize(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR10::configureAlphaOverride_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR10::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR10::setSwizzling_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR10j::setSwizzling_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR4::configureAlphaOverride_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR4::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR4::validateAlphaOverride(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR7::configureAlphaOverride_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR7::getCSCMatrix_gatedContext(CSCData_Space,CSCData_Range,CSCData_Space,CSCData_Range,CSCData_Accessibility,CSCData_Variant)
M2ScalerCSCColorConversionControlMSR7::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR7::getSwizzleRegisterFields_gatedContext(transformData *,uint *)
M2ScalerCSCColorConversionControlMSR7::programCSC_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR7::setSwizzling_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR8::commitChromaDownsampling_gatedContext(M2ScalerCSCRequest *,bool *,kIOSurfaceAcceleratorOptionCositeControl,bool,pipeUnitExchange *)
M2ScalerCSCColorConversionControlMSR8::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR8::getSwizzleRegisterFields_gatedContext(transformData *,uint *)
M2ScalerCSCColorConversionControlMSR8::setSwizzling_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR::DisplayColorRemapMode_to_CSCData_Accessibility(DisplayColorRemapMode)
M2ScalerCSCColorConversionControlMSR::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR::getCSCPrecisions(uint,uint *,uint *,uint *,uint *)
M2ScalerCSCColorConversionControlMSR::getRequestFormatRange(pipeLocation_t,M2ScalerCSCRequest *,DestinationOrSource)
M2ScalerCSCColorConversionControlMSR::getRequestFormatSpace(pipeLocation_t,M2ScalerCSCRequest *,DestinationOrSource)
M2ScalerCSCColorConversionControlMSR::getSwizzleRegisterFields_gatedContext(transformData *,uint *)
M2ScalerCSCColorConversionControlMSR::prepareCSCForCM(M2ScalerCSCRequest *,uint,uint)
M2ScalerCSCColorConversionControlMSR::programCSC_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR::setDownsampling_gatedContext(M2ScalerCSCRequest *,bool)
M2ScalerCSCColorConversionControlMSR::setSwizzling_gatedContext(M2ScalerCSCRequest *)
M2ScalerCSCColorConversionControlMSR::setupCSCControlUnit(CSCControlUnit *,M2ScalerCSCRequest *)
M2ScalerCSCRequest::MetaClass::alloc(void)
M2ScalerCSCRequest::Request(IOSurfaceAcceleratorClient *,AppleM2ScalerCSCDriver *)
M2ScalerCSCRequest::Request(IOSurfaceAcceleratorClient *,AppleM2ScalerCSCDriver *)
M2ScalerCSCRequest::addChannelConfig(pipeLocation_t,COLOR_FORMAT_CLASS,COLOR_RANGE,uint *,CSCData_Space,CSCData_Range)
M2ScalerCSCRequest::checkForOverlappingRectangles(void)
M2ScalerCSCRequest::colorRangeToCSCRange(COLOR_RANGE)
M2ScalerCSCRequest::findApiParams(AppleM2ScalerCSCHal const*,hcuApiHwConfigurationUnitTypes_t,void *,void **,bool,bool)
M2ScalerCSCRequest::formatClassToSpace(COLOR_FORMAT_CLASS,DestinationOrSource)
M2ScalerCSCRequest::free(void)
M2ScalerCSCRequest::freeAPIParams(void)
M2ScalerCSCRequest::getChannelFormatClass(pipeLocation_t)
M2ScalerCSCRequest::getChannelFormatClass(pipeLocation_t)
M2ScalerCSCRequest::getChannelFormatRange(pipeLocation_t)
M2ScalerCSCRequest::getChannelFormatRange(pipeLocation_t)
M2ScalerCSCRequest::getChannelSubsampleFactor(pipeLocation_t,VerticalOrHorizontal)
M2ScalerCSCRequest::getChannelSubsampleFactor(pipeLocation_t,VerticalOrHorizontal)
M2ScalerCSCRequest::getITUVariant(DestinationOrSource)
M2ScalerCSCRequest::getTransformData(DestinationOrSource)
M2ScalerCSCRequest::initPipeForTransform(void)
M2ScalerCSCRequest::initializeScalingRatioLimits(void)
M2ScalerCSCRequest::isExtendedFormat(DestinationOrSource)
M2ScalerCSCRequest::isRotation(void)
M2ScalerCSCRequest::isUCCompressed(DestinationOrSource,ChromaLumaOrAlpha)
M2ScalerCSCRequest::isWideRangeYCbCr(DestinationOrSource)
M2ScalerCSCRequest::mapAPIParams(AppleM2ScalerCSCHal const*)
M2ScalerCSCRequest::mapAPIParams(AppleM2ScalerCSCHal const*)
M2ScalerCSCRequest::pipeUnitInitialize(void)
M2ScalerCSCRequest::pipeUnitValidate(pipeLocation_t)
M2ScalerCSCRequest::releaseChannelConfigs(void)
M2ScalerCSCRequest::resolveVHForRotation(VerticalOrHorizontal)
M2ScalerCSCRequest::setDimensionsProper(void)
M2ScalerCSCRequest::solveHalfDDAshiftWithDDAinit(VerticalOrHorizontal)
M2ScalerCSCRequest::solveHalfDDAshiftWithDDAstep(VerticalOrHorizontal)
M2ScalerCSCRequest::validateAndInitializeCommAPI(AppleM2ScalerCSCHal const*)
M2ScalerCSCRequest::validateAndInitializeCommAPI(AppleM2ScalerCSCHal const*)
M2ScalerCSCRequest::willRotationNegateFractionals(VerticalOrHorizontal)
M2ScalerCSCRequest::~M2ScalerCSCRequest()
M2ScalerDMACommand::initWithSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
M2ScalerDMACommand::withSpecification(bool (*)(IODMACommand *,IODMACommand::Segment64,void *,uint),uchar,ulong long,IODMACommand::MappingOptions,ulong long,uint,IOMapper *,void *)
M2ScalerScalingASEControl::M2ScalerScalingASEControl(OSMetaClass const*)
M2ScalerScalingASEControl::M2ScalerScalingASEControl(void)
M2ScalerScalingASEControl::MetaClass::alloc(void)
M2ScalerScalingASEControl::collectASEApiOutput_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::commitASEConfig_gatedContext(M2ScalerCSCRequest *,pipeUnitExchange *)
M2ScalerScalingASEControl::commitDirectionalScaling_gatedContext(M2ScalerCSCRequest *,COLOR_FORMAT_CLASS,bool,pipeUnitExchange *)
M2ScalerScalingASEControl::commitEnhancement_gatedContext(M2ScalerCSCRequest *,bool,pipeUnitExchange *)
M2ScalerScalingASEControl::configure3x1Transform_gatedContext(M2ScalerCSCRequest *,COLOR_FORMAT_CLASS,bool)
M2ScalerScalingASEControl::configureAngleDetect_gatedContext(M2ScalerCSCRequest *,bool)
M2ScalerScalingASEControl::configureAsecti_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::configureBlend_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::configureEBEE_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::configureInterpolationDownsample_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::configureInterpolation_gatedContext(M2ScalerCSCRequest *,COLOR_FORMAT_CLASS,bool)
M2ScalerScalingASEControl::configureNoiseEstimation_gatedContext(M2ScalerCSCRequest *,bool)
M2ScalerScalingASEControl::configurePeaking_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::configureToneStats_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::getASEStats_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingASEControl::initPipeForTransform(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::isASEEnabled(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::isDSEnabled(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::pipeCheckASEIssues(M2ScalerCSCRequest *,pipeUnitExchange *)
M2ScalerScalingASEControl::pipeUnitInitialize(M2ScalerCSCRequest *)
M2ScalerScalingASEControl::powerClockChangeASE(M2ScalerCSCRequest *,bool)
M2ScalerScalingASEControl::~M2ScalerScalingASEControl()
M2ScalerScalingASEControlMSR10::M2ScalerScalingASEControlMSR10(void)
M2ScalerScalingASEControlMSR10::MetaClass::alloc(void)
M2ScalerScalingASEControlMSR10::configureAngleDetect_gatedContext(M2ScalerCSCRequest *,bool)
M2ScalerScalingASEControlMSR10::configureBlend_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControlMSR10::configureInterpolationDownsample_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControlMSR10::configureInterpolation_gatedContext(M2ScalerCSCRequest *,COLOR_FORMAT_CLASS,bool)
M2ScalerScalingASEControlMSR10::configureNoiseEstimation_gatedContext(M2ScalerCSCRequest *,bool)
M2ScalerScalingASEControlMSR10::configureToneStats_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControlMSR10::getASEStats_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingASEControlMSR10::~M2ScalerScalingASEControlMSR10()
M2ScalerScalingControl::M2ScalerScalingControl(OSMetaClass const*)
M2ScalerScalingControl::M2ScalerScalingControl(void)
M2ScalerScalingControl::MetaClass::alloc(void)
M2ScalerScalingControl::calculateSrcToDstRatioIndex(M2ScalerCSCRequest *,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControl::checkForMaxDownscale(M2ScalerCSCRequest *,SCALER_PROPERTIES_EXTENTS const*,VerticalOrHorizontal)
M2ScalerScalingControl::checkPolyphaseScalingLimits(M2ScalerCSCRequest *,SCALER_PROPERTIES_EXTENTS const*,pipeUnitExchange *)
M2ScalerScalingControl::checkScaling(M2ScalerCSCRequest *,pipeLocation_t,pipeUnitExchange *,commit_t,bool)
M2ScalerScalingControl::doubleToFixedVra(double,uint,uint,uint)
M2ScalerScalingControl::getIndexFromSrcToDstRatio(double,bool)
M2ScalerScalingControl::getNumberOfCustomRatios(void)
M2ScalerScalingControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingControl::initDefaultFilters(void)
M2ScalerScalingControl::initPipeForTransform(M2ScalerCSCRequest *)
M2ScalerScalingControl::pipeUnitInitialize(M2ScalerCSCRequest *)
M2ScalerScalingControl::programAllScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControl::setCustomFilters_gatedContext(AppleM2ScalerCSCDriverFilters const*)
M2ScalerScalingControl::~M2ScalerScalingControl()
M2ScalerScalingControlMSR10::MetaClass::alloc(void)
M2ScalerScalingControlMSR10::commitFilters_gatedContext(M2ScalerCSCRequest *,uint (*)[3],uint *,FilterCoefficients const**,VerticalOrHorizontal,bool,uint *,uint *,uint *)
M2ScalerScalingControlMSR10::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR10::commitVerticalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR10::configureDDAInit_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal)
M2ScalerScalingControlMSR10::configureHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR10::configureVerticalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR10::~M2ScalerScalingControlMSR10()
M2ScalerScalingControlMSR2::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR2::configureDDAInit_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal)
M2ScalerScalingControlMSR2::configureHorizontalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR2::disableScaling(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR2::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR2::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingControlMSR4::commitFilters_gatedContext(M2ScalerCSCRequest *,uint (*)[3],uint *,FilterCoefficients const**,VerticalOrHorizontal,bool,uint *,uint *,uint *)
M2ScalerScalingControlMSR4::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR4::commitVRAFilters_gatedContext(M2ScalerCSCRequest *,uint (*)[3],VerticalOrHorizontal)
M2ScalerScalingControlMSR4::configureHorizontalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR4::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR4::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR4::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingControlMSR6::calculateDDASteps_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal,uint,double *)
M2ScalerScalingControlMSR6::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR6::commitPixelAveraging_gatedContext(M2ScalerCSCRequest *,uint)
M2ScalerScalingControlMSR6::commitPixelAveraging_gatedContext(M2ScalerCSCRequest *,uint)
M2ScalerScalingControlMSR6::commitPseudoLinearScaling_gatedContext(M2ScalerCSCRequest *,bool,bool)
M2ScalerScalingControlMSR6::commitVerticalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR6::configureDDAInit_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal)
M2ScalerScalingControlMSR6::configureHorizontalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::configurePseudoLinearScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::configureScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::configureVerticalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::disableScaling(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::initPipeForTransform(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::preparePixelAveragingFilter_gatedContext(transformData *,uint)
M2ScalerScalingControlMSR6::preparePixelAveragingFilter_gatedContext(transformData *,uint)
M2ScalerScalingControlMSR6::preparePixelAveraging_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::programPixelAveraging_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR6::validateScalingRatios(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR7::commitPixelAveraging_gatedContext(M2ScalerCSCRequest *,uint)
M2ScalerScalingControlMSR7::commitPixelAveraging_gatedContext(M2ScalerCSCRequest *,uint)
M2ScalerScalingControlMSR7::configurePseudoLinearScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR7::programPixelAveraging_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR8::applyChromaCustomFilter(pipeUnitExchange *)
M2ScalerScalingControlMSR8::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR8::commitPixelAveraging_gatedContext(M2ScalerCSCRequest *,uint)
M2ScalerScalingControlMSR8::commitVerticalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR8::configureDDAInit_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal)
M2ScalerScalingControlMSR8::disableScaling(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR8::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR8::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingControlMSR8::pipeCheckScalingIssues(M2ScalerCSCRequest *,pipeUnitExchange *)
M2ScalerScalingControlMSR8::preparePixelAveragingFilter_gatedContext(transformData *,uint)
M2ScalerScalingControlMSR8::preparePixelAveragingFilter_gatedContext(transformData *,uint)
M2ScalerScalingControlMSR8::programPixelAveraging_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR8::validateChromaCustomFilter(M2ScalerCSCRequest *,pipeUnitExchange *,bool)
M2ScalerScalingControlMSR::calculateSrcToDstRatiosAndRequirements(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::commitFilters_gatedContext(M2ScalerCSCRequest *,uint (*)[3],uint *,FilterCoefficients const**,VerticalOrHorizontal,bool,uint *,uint *,uint *)
M2ScalerScalingControlMSR::commitHorizontalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR::commitVerticalScaling_gatedContext(M2ScalerCSCRequest *,double *,pipeUnitExchange *)
M2ScalerScalingControlMSR::configureDDAInit_gatedContext(M2ScalerCSCRequest *,VerticalOrHorizontal)
M2ScalerScalingControlMSR::configureHorizontalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::configureScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::configureVerticalScaling_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::determineFilters(M2ScalerCSCRequest *,VerticalOrHorizontal,COLOR_FORMAT_CLASS,bool *,uint *,FilterCoefficients const**)
M2ScalerScalingControlMSR::disableScaling(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::getFilterCounts(M2ScalerCSCRequest *,FilterCoefficients const**,bool,VerticalOrHorizontal,bool *,uint *,uint *,uint *,uint *)
M2ScalerScalingControlMSR::getNumberOfCustomRatios(void)
M2ScalerScalingControlMSR::getNumberOfTaps(VerticalOrHorizontal)
M2ScalerScalingControlMSR::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR::getStaticDefaultFilterPtr(uint,VerticalOrHorizontal,ChromaLumaOrAlpha)
M2ScalerScalingControlMSR::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerScalingControlMSR::setSrcToDstCoef_gatedContext(VerticalOrHorizontal,ChromaLumaOrAlpha,M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::setSrcToDstRatio_gatedContext(M2ScalerCSCRequest *)
M2ScalerScalingControlMSR::validateScalingRatios(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControl::init(uint,uint *,socVersion,SCALER_PROPERTIES_EXTENTS const*,SCALER_RUNTIME_PROPERTIES const*,AppleM2ScalerCSCHal *)
M2ScalerSrcDestCfgControl::initHwColorFormats(void)
M2ScalerSrcDestCfgControl::setDimensions_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControl::validateBorderFill(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureBaseAddresses_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureBorderFill_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR10::configureOffsets_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureSizes_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureStrides_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureStrides_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::configureTunables(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::setCfg_gatedContext(M2ScalerCSCRequest *,DestinationOrSource,transformData *)
M2ScalerSrcDestCfgControlMSR10::setDimensions_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10::validateBorderFill(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureBaseAddresses_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR10j::configureOffsets_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureSizes_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureStrides_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureStrides_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR10j::configureTunables(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR2::setCfg_gatedContext(M2ScalerCSCRequest *,DestinationOrSource,transformData *)
M2ScalerSrcDestCfgControlMSR4::configureBorderFill_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR4::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR4::setCfg_gatedContext(M2ScalerCSCRequest *,DestinationOrSource,transformData *)
M2ScalerSrcDestCfgControlMSR4::validateBorderFill(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR6::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR7::configureBorderFill_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureBaseAddresses_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureBorderFill_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR8::configureOffsets_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureSizes_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureStrides_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::configureTextureSizes_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::initHwColorFormats(void)
M2ScalerSrcDestCfgControlMSR8::setDimensions_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR8::setTransformCfg(M2ScalerCSCRequest *,ScalerTransformFormatData *)
M2ScalerSrcDestCfgControlMSR8::validateBorderFill(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR9::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR9::configureTunables(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR::configureBaseAddresses_gatedContext(DestinationOrSource,M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR::configureCacheHints(M2ScalerCSCRequest *,ScalerTransformFormatData *,bool)
M2ScalerSrcDestCfgControlMSR::setCfg_gatedContext(M2ScalerCSCRequest *,DestinationOrSource,transformData *)
M2ScalerSrcDestCfgControlMSR::setDestDimensions_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR::setFlipRotateCfg(ScalerTransformFormatData *)
M2ScalerSrcDestCfgControlMSR::setSrcDimensions_gatedContext(M2ScalerCSCRequest *)
M2ScalerSrcDestCfgControlMSR::setTransformCfg(M2ScalerCSCRequest *,ScalerTransformFormatData *)
MCClient::initWithInfo(MCClientInfo *)
MCClient::updateClient(MCDataStreamId,uint)
MCClient::updateClient(MCDataStreamId,uint)
MCCommand::create(memcache_cmd_entry *,bool)
MCCommand::init(memcache_cmd_entry *)
MCCommandQueue::MetaClass::alloc(void)
MCCommandQueue::checkForWork(void)
MCCommandQueue::checkForWork(void)
MCCommandQueue::create(IOService *,bool (*)(IOService *,MCCommand *,MCCommandQueue*))
MCCommandQueue::free(void)
MCCommandQueue::init(IOService *,bool (*)(IOService *,MCCommand *,MCCommandQueue*))
MCCommandQueue::queueEvent(MCCommand *)
MCCommandQueue::queueEvent(MCCommand *)
MCCommandQueue::~MCCommandQueue()
MCDataMessaging::enqueueData(MCDataStruct *,ulong)
MCDataMessaging::initWithService(IOService *)
MCDataMessaging::messageClients(uint,uint,void *,ulong,void *,ulong long)
MCDataMessaging::messageClients(uint,void *,ulong,void *,ulong long)
MCDataMessaging::~MCDataMessaging()
MCDataStream::copyDSIDs(uint *,uint)
MCDataStream::getStreamName(void)
MCDataStream::initWithInfo(MCDataStreamId,uint)
MCDataStream::setInstanceRequestedSize(uint,uint)
MCDataStream::~MCDataStream()
MCDataStreamInfoObject::MetaClass::alloc(void)
MCDataStreamInfoObject::initWith(MCDataStreamId,uint)
MCDataStreamInfoObject::initWith(MCDataStreamId,uint)
MCDataStreamInfoObject::initWith(MCDataStreamId,uint,uint)
MCDataStreamInfoObject::~MCDataStreamInfoObject()
MCPolicyMgr::MCPolicyMgr(uint)
MCPolicyMgr::changeQuota(MCDataStream *,uint,bool)
MCPolicyMgr::changeQuota(MCDataStream *,uint,bool)
MCPolicyMgr::enableDataStreamForTest(MCDataStreamUCReq *)
MCPolicyMgr::evaluateDataStream(MCDataStream *)
MCPolicyMgr::handlePriorityBasedAllocation(MCDataStream *)
MCPolicyMgr::testMode(bool)
MCPolicyMgrPMP::MCPolicyMgrPMP(uint,IOService *)
MCPolicyMgrPMP::readPTD(uint,MCPolicyMgrPMP::PTDEntry *)
MCPolicyMgrT8030::MCPolicyMgrT8030(AppleT8030MemCacheController *,uint)
MCPolicyMgrT8030::MCPolicyMgrT8030(AppleT8030MemCacheController *,uint)
MCPolicyMgrT8030::deprioritizeDSID(uint)
MCPolicyMgrT8030::deprioritizeDSID(uint)
MCPolicyMgrT8030::getDataStreamCacheUsage(MCDataStream *,ulong long *)
MCPolicyMgrT8030::getDataStreamCacheUsage(MCDataStream *,ulong long *)
MCPolicyMgrT8030::postDataStreamEvaluateAction(MCDataStream *)
MCPolicyMgrT8030::updateDataStreamQuota(MCDataStream *,uint,bool)
MCPolicyMgrT8030::updateDataStreamQuota(MCDataStream *,uint,bool)
MP4AudioObjectType::Deserialize(CABitStreamReader &)
MP4AudioObjectType::IsAACObject(uint)
MP4AudioObjectType::IsAACObject(void)
MP4SampleRate::Deserialize(CABitStreamReader &,uchar)
MP4SampleRate::Index(void)
MP4SampleRate::NearestBoundaryIndex(void)
MP4SampleRate::SerializeCount(void)
MP4SampleRate::SetFromIndex(uint,uchar)
MTIODataQueue::enqueue(void *,uint)
MTIODataQueue::sendDataAvailableNotification(void)
MTRDecompressVector(double *,ulong long,double *,double *,double *,int,int)
MTRFreeMtx(double **,int,int)
MTRGetError(double **,double **,int,double **,int)
MTRGetPolynomT8030(uint const*,double *,int *,ulong,float,float,sensor_type,MTRGetPolynomInfo *)
MTRGetPolynomT8030(uint const*,double *,int *,ulong,float,float,sensor_type,MTRGetPolynomInfo *)
MTRInitMtx(int,int)
MTRMultiplyMatrix(double **,int,int,double **,int,int,double **)
MTRROCalibrate(int,uint const*,double *,float,float,sensor_type,MTRGetPolynomInfo *)
MTRROCalibrate(int,uint const*,double *,float,float,sensor_type,MTRGetPolynomInfo *)
MTRSolveLeastSquares(double **,double **,int,double **,int)
MTRecordRequestError(MTRequestErrorStatsStruct *,int)
MTSPIBootloader::_cacheDoomTimerInterval(OSDictionary *)
MTSPIBootloader::_cacheFirmwareBytes(OSDictionary *)
MTSPIBootloader::_cacheFirmwareName(OSDictionary *)
MTSPIBootloader::allocateTxAndRxBuffers(void)
MTSPIBootloader::bootloadDevice(void)
MTSPIBootloader::cacheCalibrationConfig(OSArray *)
MTSPIBootloader::cacheCalibrationConfigEntry(OSDictionary *)
MTSPIBootloader::cacheCalibrationData(OSDictionary *,OSDictionary *)
MTSPIBootloader::cacheFirmwareData(OSDictionary *)
MTSPIBootloader::constructBootloaderPacket(uchar *,uint,uchar *,ushort)
MTSPIBootloader::executeFirmware(void)
MTSPIBootloader::free(void)
MTSPIBootloader::freeTxAndRxBuffers(void)
MTSPIBootloader::getName(void)
MTSPIBootloader::init(void)
MTSPIBootloader::initWithOwner(AppleMultitouchSPI *,AppleARMSPIDevice *)
MTSPIBootloader::lastChecksumIsEqual(ushort)
MTSPIBootloader_N1::_checkForCalibrationParameterOverrides(void)
MTSPIBootloader_N1::_setDefaultCalibrationParameters(void)
MTSPIBootloader_N1::newBootloader(AppleMultitouchSPI *,AppleARMSPIDevice *)
MTSPIBootloader_N1::performCalibSeq(void)
MTSPIBootloader_TwoStage::beginBSpeedDownload(void)
MTSPIBootloader_TwoStage::bootloadDevice(void)
MTSPIBootloader_TwoStage::cacheFirmwareData(OSDictionary *)
MTSPIBootloader_TwoStage::free(void)
MTSPIBootloader_TwoStage::init(void)
MTSPIBootloader_TwoStage::loadASpeedFirmware(void)
MTSPIBootloader_TwoStage::loadBSpeedFirmware(void)
MTSPIBootloader_TwoStage::newBootloader(AppleMultitouchSPI *,AppleARMSPIDevice *)
MTSPIBootloader_Z2::_cacheCalibrationInformation(OSDictionary *)
MTSPIBootloader_Z2::_cacheFirmwareBytes(OSDictionary *)
MTSPIBootloader_Z2::_cacheFirmwareName(OSDictionary *)
MTSPIBootloader_Z2::_checkForCalibrationParameterOverrides(void)
MTSPIBootloader_Z2::bootloadDevice(void)
MTSPIBootloader_Z2::cacheFirmwareData(OSDictionary *)
MTSPIBootloader_Z2::constructBootloaderPacket(uchar *,uint,uchar *,ushort)
MTSPIBootloader_Z2::executeFirmware(void)
MTSPIBootloader_Z2::free(void)
MTSPIBootloader_Z2::init(void)
MTSPIBootloader_Z2::initWithOwner(AppleMultitouchSPI *,AppleARMSPIDevice *)
MTSPIBootloader_Z2::newBootloader(AppleMultitouchSPI *,AppleARMSPIDevice *)
MTSPIBootloader_Z2::performCalibSeq(void)
MTSPIBootloader_Z2::sendAdditionalCalibrationDataBytes(void)
MTSPIBootloader_Z2::sendCalibrationDataBytes(void)
MTSPIBootloader_Z2::sendFirmwareBytes(void)
MTSPIBootloader_Z2::sendMultiplePreconstructedFirmwareBytes(void)
MTSPIBootloader_Z2::sendOneBlockOfCalibrationData(uchar *,uint,uint)
MTSPIBootloader_Z2::sendPreconstructedFirmwareBytes(void)
MTSPIBootloader_Z2::sendProxCalibrationDataBytes(void)
MTSPIBootloader_Z2::sendUnconstructedFirmwareBytes(void)
MT_IsHBPPResponse(ushort)
MailboxChannel::cleanup_gated(void)
MailboxChannel::flush_gated(IOMFB::MailboxHal *)
MailboxChannel::free(void)
MailboxChannel::inbox_empty_irq_gated(void)
MailboxChannel::inbox_write(uint)
MailboxChannel::init(IOMFB::M3Hal *,IOMFB::AppleRegisterStream *,MailboxSet,MailboxChannel::ints_change_callback const*,UPAsynchronousScheduler *)
MailboxChannel::ints_handler_gated(uint)
MailboxChannel::outbox_flush_gated(void)
MailboxChannel::outbox_not_empty_irq_gated(void)
MailboxHandler::check_bounds(uint,uint,uint,uint)
MailboxHandler::cleanup_gated(void)
MailboxHandler::flush_gated(IOMFB::MailboxHal *)
MailboxHandler::free(void)
MailboxHandler::inbox_empty_irq_gated(void)
MailboxHandler::inbox_write(uint)
MailboxHandler::init(IOMFB::M3Hal *,IOMFB::UPIOSvcProxy *,uint,IOMFB::AppleRegisterStream *)
MailboxHandler::ints_change_gated(uint,bool)
MailboxHandler::ints_enable(bool)::$_2::__invoke(OSObject *,void *,void *,void *,void *)
MailboxHandler::ints_enable_gated(bool)
MailboxHandler::ints_filter(OSObject *,IOMFB::InterruptEventSource *)
MailboxHandler::ints_handler_gated(OSObject *,IOMFB::InterruptEventSource *,int)
MailboxHandler::outbox_flush_gated(void)
MailboxHandler::outbox_not_empty_irq_gated(void)
MailboxHandler::safe_strlen(char const*,ulong)
MailboxHandler::send_cmd_async_gated(void *,MailboxSet)
MailboxHandler::send_cmd_sync_gated(void *,MailboxSet)
MailboxHandler::set_power(bool)::$_1::__invoke(OSObject *,void *,void *,void *,void *)
MailboxHandler::set_response_callback(MailboxChannel::response_callback const*,MailboxSet)
MailboxHandler::setup_channel(MailboxChannel *,MailboxSet)
MailboxHandler::setup_ints(uint)
MailboxHandler::setup_ints(uint)::$_4::__invoke(OSObject *,IOMFB::InterruptEventSource *)
ManifestMap::getMonotonicExpirationTime(bool)
ManifestMap::validateManifest(void const*,ulong)
ManifestMap::validateTag(uint,Img4Property const*,uint,void *)
ManifestMap::~ManifestMap()
ManifestValue::description(void)
MapBuffer(IODMACommand **,ulong long *,IOMemoryDescriptor *,IOMapper *)
McacheDriverClient::enableDataStream(MCDataStreamInfoObject *,McacheDriverClient::McacheDriverStreamObject *)
McacheDriverClient::findStreamObjectByID(MCDataStreamId)
McacheDriverClient::mcacheEnableStream(MCDataStreamId,uint)
McacheDriverClient::mcacheReleaseStream(MCDataStreamId)
McacheDriverClient::mcacheUpdateRequest(MCDataStreamId,uint)
McacheDriverClient::powerOffMcacheRequest(void)
McacheDriverClient::powerOnMcacheRequest(void)
McacheDriverClient::registerMcacheClient(IOService *)
MemCacheManagerInterface::copyDataStreamInfo(MCDataStreamId,dataStreamInfo *)
MemCacheManagerInterface::disableAllDataStreams(void)
MemCacheManagerInterface::disableDataStream(MCDataStream *)
MemCacheManagerInterface::disableDataStream(MCDataStream *)
MemCacheManagerInterface::enableDataStream(MCDataStreamInfoObject *,MCDataStream **)
MemCacheManagerInterface::enableDataStream(MCDataStreamInfoObject *,MCDataStream **)
MemCacheManagerInterface::getCacheSize(uint *,uint *)
MemCacheManagerInterface::getDataStreamConfigEntry(MCDataStream *)
MemCacheManagerInterface::getDataStreamConfigEntry(MCDataStream *)
MemCacheManagerInterface::getDataStreamConfigEntry(uint)
MemCacheManagerInterface::getDataStreamConfigEntry(uint)
MemCacheManagerInterface::getDataStreamConfigEntryCount(void)
MemCacheManagerInterface::getDataStreamObject(MCDataStreamId)
MemCacheManagerInterface::getDataStreamObject(MCDataStreamId)
MemCacheManagerInterface::getStreamDefaultSize(MCDataStream *)
MemCacheManagerInterface::registerForStreamUpdates(void (*)(void *,void *,MCDataStreamId,uint),void *,void *)
MemCacheManagerInterface::setAvailableCacheSize(uint)
MemCacheManagerInterface::setDataStreamConfig(MCDataStreamConfig *,uint)
MemCacheManagerInterface::setDataStreamConfig(MCDataStreamConfig *,uint)
MemCacheManagerInterface::~MemCacheManagerInterface()
MikeyBusDebug::MikeyBusLog(IORegistryEntry *,char const*,char const*,uint,void *,void *,char const*,...)
MinorTable::getOpenCountForAnchorID(uint)
MinorTable::hasReferencesToAnchorID(uint,bool)
MinorTable::insert(IOMedia *,uint,IOMediaBSDClient *,char *)
MinorTable::locate(IOMedia *)
MinorTable::remove(uint)
MinorTable::update(IOMedia *,uint,IOMediaBSDClient *,char *)
MinorTable::~MinorTable()
MogulAuthI2CRelayInterface::_checkErrorCode(void)
MogulAuthI2CRelayInterface::_getCertSN(OSObject **)
MogulAuthI2CRelayInterface::_getDeviceInfo(OSObject **)
MogulAuthI2CRelayInterface::_getSignature(OSData *,OSObject **)
MogulAuthI2CRelayInterface::_read(uchar,ulong long,void *)
MogulAuthI2CRelayInterface::_transferData(uint,ulong long,uchar *,ulong long,void *)
MogulAuthI2CRelayInterface::_write(uchar,ulong long,void const*)
MogulAuthI2CRelayInterface::start(IOService *)
MsrAPIODMA::allocateBaseIndex_gatedContext(ulong long,bool *)
MsrAPIODMA::allocateBaseIndex_gatedContext(ulong long,bool *)
MsrAPIODMA::base_addr_val(ulong long)
MsrAPIODMA::base_addr_val(ulong long)
MsrAPIODMA::commandCompleted_gatedContext(uint)
MsrAPIODMA::completeTransform_gatedContext(M2ScalerCSCRequest *)
MsrAPIODMA::configureBaseAddress_gatedContext(uint,ulong long)
MsrAPIODMA::configureCommand_gatedContext(TransformTracker *)
MsrAPIODMA::configureSourceAddress_gatedContext(SequenceBuffer *)
MsrAPIODMA::createSequenceBuffer_gatedContext(M2ScalerCSCRequest *,uint,uint,uint,uint)
MsrAPIODMA::detectAPIODMAHwVersion(void)
MsrAPIODMA::disableInterruptsWithEventSource(void)
MsrAPIODMA::dumpSequences(M2ScalerCSCRequest *)
MsrAPIODMA::enableInterruptsWithEventSource(void)
MsrAPIODMA::executeCommand_gatedContext(TransformTracker *)
MsrAPIODMA::executeTransforms_gated(M2ScalerCSCRequest *)
MsrAPIODMA::free(void)
MsrAPIODMA::getApiodmaFree(void)
MsrAPIODMA::getFreeCommandCount_gatedContext(void)
MsrAPIODMA::getQueuedTransformTracker_gated(TransformTracker *)
MsrAPIODMA::getTransformTracker_gatedContext(bool *,M2ScalerCSCRequest *)
MsrAPIODMA::getTransformTracker_gatedContext(bool *,M2ScalerCSCRequest *)
MsrAPIODMA::halt_gatedContext(void)
MsrAPIODMA::init(APIODMAInitDescriptor const*)
MsrAPIODMA::interruptFilter(OSObject *,IOFilterInterruptEventSource *)
MsrAPIODMA::interruptHandler(IOInterruptEventSource *,int)
MsrAPIODMA::interruptHandler(IOInterruptEventSource *,int)
MsrAPIODMA::linkSequences(M2ScalerCSCRequest *)
MsrAPIODMA::linkTwoSequences_gatedContext(SequenceBuffer *,SequenceBuffer *)
MsrAPIODMA::mapSequences_gatedContext(M2ScalerCSCRequest *)
MsrAPIODMA::recoverFromErrorReset_gatedContext(bool)
MsrAPIODMA::reinstateInFlightTransforms_gatedContext(void)
MsrAPIODMA::resetSequenceBuffer_gated_context(M2ScalerCSCRequest *)
MsrAPIODMA::resetSequenceBuffer_gated_context(M2ScalerCSCRequest *)
MsrAPIODMA::reset_gatedContext(bool)
MsrAPIODMA::restoreState_gatedContext(void)
MsrAPIODMA::restoreState_gatedContext(void)
MsrAPIODMA::selectSequenceBuffer(MsrAPIODMA::PacketRequest *)
MsrAPIODMA::setTransformInFlight_gated(TransformTracker *)
MsrAPIODMA::setupInterrupt(APIODMAInitDescriptor const*)
MsrAPIODMA::unmapSequences_gatedContext(M2ScalerCSCRequest *)
MsrAPIODMA::write(M2ScalerCSCRequest *,registerGroup_t,uint,uint)
MsrAPIODMA::writeBlock(M2ScalerCSCRequest *,registerGroup_t,uint,uint const*,uint,bool,bool)
MsrAPIODMA::writeBlock(M2ScalerCSCRequest *,registerGroup_t,uint,uint const*,uint,bool,bool)
MsrAPIODMA::writeBlockByTransform(M2ScalerCSCRequest *,registerGroup_t,IOMemoryMap *,uint,uint const*,uint,bool,bool)
MsrAPIODMA::writeToPacket(MsrAPIODMA::PacketRequest *)
MsrAPIODMA::writeToPacket(MsrAPIODMA::PacketRequest *)
MsrAPIODMAMSR10::configureBaseAddress_gatedContext(uint,ulong long)
MsrAPIODMAMSR10::configureCommand_gatedContext(TransformTracker *)
MsrAPIODMAMSR10::detectAPIODMAHwVersion(void)
MsrAPIODMAMSR10::interruptHandler(IOInterruptEventSource *,int)
MsrAPIODMAMSR10::interruptHandler(IOInterruptEventSource *,int)
Mtc_CallGetStateInner(int)
MutableADTSHeader::MutableADTSHeader(MutableADTSHeader const&)
MutableADTSHeader::MutableADTSHeader(uint,uint,bool,bool,uint,bool)
MutableADTSHeader::Serialize(uchar *,uint &)
MutableADTSHeader::SetADTSBufferFulness(uint)
MutableADTSHeader::SetNumRawDataBlocks(uint)
MutableADTSHeader::SetPayloadFrameLength(uint)
NVMeGlobals::NVMeGlobals(void)
NVMeGlobals::~NVMeGlobals()
NVMeSEPNotifier::WaitForNVMe(void)
NVMeSEPNotifier::free(void)
NVMeSEPNotifier::message(uint,IOService *,void *)
NVMeSEPNotifier::start(IOService *)
NVMeSysctl(sysctl_oid *,void *,int,sysctl_req *)
NeighborCache::free(void)
NeighborCache::init(AppleChannelSpec_t *)
NewIODARTMapper(IOService *,IOService *,uint,char const*,OSDictionary *)
NewIODARTMapper(IOService *,IOService *,uint,char const*,OSDictionary *)
NullWrap::operator()(double)
OSAction::Aborted(int (*)(OSMetaClassBase *,IORPC))
OSAction::Aborted_Invoke(IORPC,OSMetaClassBase *,void (*)(OSMetaClassBase *))
OSAction::CreateWithTypeName_Call(OSObject *,ulong long,ulong long,ulong,OSString *,OSAction**)
OSAction::CreateWithTypeName_Invoke(IORPC,int (*)(OSObject *,ulong long,ulong long,ulong,OSString *,OSAction**))
OSAction::Create_Call(OSObject *,ulong long,ulong long,ulong,OSAction**)
OSAction::Create_Invoke(IORPC,int (*)(OSObject *,ulong long,ulong long,ulong,OSAction**))
OSAction::Dispatch(IORPC)
OSAction::MetaClass::Dispatch(IORPC)
OSAction::SetAbortedHandler(void ( {block_pointer})(void))
OSAction::_Dispatch(OSAction*,IORPC)
OSAction_IOHIDDevice__CompleteReport::Dispatch(IORPC)
OSAction_IOHIDDevice__CompleteReport::~OSAction_IOHIDDevice__CompleteReport()
OSAction_IOUserClient_KernelCompletion::Dispatch(IORPC)
OSAction_IOUserClient_KernelCompletion::MetaClass::MetaClass(void)
OSAction_IOUserClient_KernelCompletion::_Dispatch(OSAction_IOUserClient_KernelCompletion*,IORPC)
OSAction_IOUserNetworkEthernet__DataAvailable::MetaClass::MetaClass(void)
OSAction_IOUserNetworkEthernet__DataAvailable::MetaClass::alloc(void)
OSAction_IOUserNetworkEthernet__DataAvailable::_Dispatch(OSAction_IOUserNetworkEthernet__DataAvailable*,IORPC)
OSAction_IOUserNetworkEthernet__DataAvailable::~OSAction_IOUserNetworkEthernet__DataAvailable()
OSArray::MetaClass::MetaClass(void)
OSArray::OSArray(OSMetaClass const*)
OSArray::OSArray(void)
OSArray::copyCollection(OSDictionary *)
OSArray::flushCollection(void)
OSArray::getLastObject(void)
OSArray::getNextIndexOfObject(OSMetaClassBase const*,uint)
OSArray::getNextObjectForIterator(void *,OSObject **)
OSArray::getObject(uint)
OSArray::initWithArray(OSArray const*,uint)
OSArray::initWithObjects(OSObject const**,uint,uint)
OSArray::isEqualTo(OSArray const*)
OSArray::isEqualTo(OSMetaClassBase const*)
OSArray::merge(OSArray const*)
OSArray::operator delete(void *,ulong)
OSArray::operator new(ulong)
OSArray::removeObject(uint)
OSArray::replaceObject(uint,OSMetaClassBase const*)
OSArray::replaceObject(uint,OSSharedPtr<OSMetaClassBase const> const&)
OSArray::serialize(OSSerialize *)
OSArray::setObject(OSMetaClassBase const*)
OSArray::setObject(OSSharedPtr<OSMetaClassBase const> const&)
OSArray::setObject(uint,OSMetaClassBase const*)
OSArray::setObject(uint,OSSharedPtr<OSMetaClassBase const> const&)
OSArray::setOptions(uint,uint,void *)
OSArray::withArray(OSArray const*,uint)
OSArray::withCapacity(uint)
OSArray::withObjects(OSObject const**,uint,uint)
OSBoolean::MetaClass::MetaClass(void)
OSBoolean::isEqualTo(OSMetaClassBase const*)
OSBoolean::serialize(OSSerialize *)
OSBoolean::withBoolean(bool)
OSCollection::MetaClass::MetaClass(void)
OSCollection::copyCollection(OSDictionary *)
OSCollection::haveUpdated(void)
OSCollection::setOptions(uint,uint,void *)
OSCollectionIterator::MetaClass::MetaClass(void)
OSCollectionIterator::OSCollectionIterator(OSMetaClass const*)
OSCollectionIterator::OSCollectionIterator(void)
OSCollectionIterator::getIteratorStorage(void)
OSCollectionIterator::isSubclassed(void)
OSCollectionIterator::isValid(void)
OSCollectionIterator::reset(void)
OSCollectionIterator::withCollection(OSCollection const*)
OSCollectionIterator::~OSCollectionIterator()
OSCollectionIterator__free
OSCollectionIterator__getNextObject
OSCollectionIterator__initWithCollection_OSCollection_const
OSData::MetaClass::MetaClass(void)
OSData::appendByte(uchar,uint)
OSData::appendBytes(OSData const*)
OSData::appendBytes(void const*,uint)
OSData::getBytesNoCopy(uint,uint)
OSData::getBytesNoCopy(void)
OSData::initWithBytes(void const*,uint)
OSData::initWithBytesNoCopy(void *,uint)
OSData::initWithData(OSData const*)
OSData::initWithData(OSData const*,uint,uint)
OSData::isEqualTo(OSData const*)
OSData::isEqualTo(OSMetaClassBase const*)
OSData::isEqualTo(OSString const*)
OSData::isEqualTo(void const*,uint)
OSData::isSerializable(void)
OSData::serialize(OSSerialize *)
OSData::setDeallocFunction(void (*)(void *,uint))
OSData::setSerializable(bool)
OSData::withBytes(void const*,uint)
OSData::withBytesNoCopy(void *,uint)
OSData::withCapacity(uint)
OSData::withData(OSData const*)
OSData::withData(OSData const*,uint,uint)
OSDictionary::copyCollection(OSDictionary*)
OSDictionary::copyKeys(void)
OSDictionary::flushCollection(void)
OSDictionary::getNextObjectForIterator(void *,OSObject **)
OSDictionary::getObject(OSString const*)
OSDictionary::getObject(OSSymbol const*)
OSDictionary::initWithDictionary(OSDictionary const*,uint)
OSDictionary::initWithObjects(OSObject const**,OSString const**,uint,uint)
OSDictionary::initWithObjects(OSObject const**,OSSymbol const**,uint,uint)
OSDictionary::isEqualTo(OSDictionary const*)
OSDictionary::isEqualTo(OSDictionary const*,OSCollection const*)
OSDictionary::isEqualTo(OSMetaClassBase const*)
OSDictionary::iterateObjects(bool ( {block_pointer})(OSSymbol const*,OSObject *))
OSDictionary::iterateObjects(void *,bool (*)(void *,OSSymbol const*,OSObject *))
OSDictionary::merge(OSDictionary const*)
OSDictionary::removeObject(OSString const*)
OSDictionary::removeObject(OSSymbol const*)
OSDictionary::serialize(OSSerialize *)
OSDictionary::setObject(OSSharedPtr<OSSymbol const> const&,OSSharedPtr const&<OSMetaClassBase const>)
OSDictionary::setObject(OSString const*,OSSharedPtr<OSMetaClassBase const> const&)
OSDictionary::setObject(OSSymbol const*,OSMetaClassBase const*,bool)
OSDictionary::setObject(char const*,OSMetaClassBase const*)
OSDictionary::setObject(char const*,OSSharedPtr<OSMetaClassBase const> const&)
OSDictionary::setOptions(uint,uint,void *)
OSDictionary::sortBySymbol(void)
OSDictionary::withCapacity(uint)
OSDictionary::withDictionary(OSDictionary const*,uint)
OSDictionary::withObjects(OSObject const**,OSString const**,uint,uint)
OSDictionary::withObjects(OSObject const**,OSSymbol const**,uint,uint)
OSDictionarySetInteger(OSDictionary *,char const*,ulong long)
OSDynamicPtrCast<OSNumber,OSObject>(OSSharedPtr const&<OSObject>)
OSDynamicPtrCast<OSString,OSObject>(OSSharedPtr const&<OSObject>)
OSEntitlements::MetaClass::alloc(void)
OSEntitlements::OSEntitlements(void)
OSEntitlements::adjustContext(void)
OSEntitlements::adjustContext(void)
OSEntitlements::asDict(void)
OSEntitlements::copyIdentity(void)
OSEntitlements::free(void)
OSEntitlements::getEntitlementsFor(uchar const*)
OSEntitlements::getEntitlementsFor(uchar const*)
OSEntitlements::getTransmutedBlob(void)
OSEntitlements::getXMLBlob(void)
OSEntitlements::getXMLBlob(void)
OSEntitlements::initInvalid(char const*)
OSEntitlements::initInvalid(char const*)
OSEntitlements::initWithValidationResult(CEValidationResult,cs_blob *,bool)
OSEntitlements::initWithValidationResult(CEValidationResult,cs_blob *,bool)
OSEntitlements::invalidate(void)
OSEntitlements::makeInvalid(char const*)
OSEntitlements::queryEntitlementsFor(uchar const*,CEQueryOperation *,ulong)
OSEntitlements::queryEntitlementsFor(uchar const*,CEQueryOperation *,ulong)
OSEntitlements::withValidationResult(CEValidationResult,cs_blob *,bool)
OSEntitlements::~OSEntitlements()
OSEntitlementsHaveEntitlementBool(OSEntitlements *,uchar const*,char const*)
OSIterator::MetaClass::MetaClass(void)
OSKext::MetaClass::MetaClass(void)
OSKext::OSKext(OSMetaClass const*)
OSKext::OSKext(void)
OSKext::addKextsFromKextCollection(mach_header_64 *,OSDictionary *,char const*,OSSharedPtr<OSData> &,kc_kind)
OSKext::clearUserSpaceLogFilter(void)
OSKext::consumeDeferredKextCollection(kc_kind)
OSKext::createExcludeListFromBooterData(OSDictionary *,OSCollectionIterator *)
OSKext::createExcludeListFromPrelinkInfo(OSArray *)
OSKext::dequeueCallbackForRequestTag(OSNumber *,OSDictionary **)
OSKext::dequeueCallbackForRequestTag(OSNumber *,OSSharedPtr<OSDictionary> &)
OSKext::dequeueCallbackForRequestTag(uint,OSDictionary **)
OSKext::dequeueCallbackForRequestTag(uint,OSSharedPtr<OSDictionary> &)
OSKext::dropMatchingReferences(OSSet *)
OSKext::getExecutable(void)
OSKext::getIdentifierCString(void)
OSKext::getNumDependencies(void)
OSKext::getSizeInfo(uint *,uint *)
OSKext::getUserSpaceLogFilter(void)
OSKext::hasOSMetaClassInstances(void)
OSKext::invokeRequestCallback(OSDictionary *,int)
OSKext::isCompatibleWithVersion(long long)
OSKext::isDriverKit(void)
OSKext::loadKextWithIdentifier(OSString *,OSSharedPtr<OSObject> &,bool,bool,uchar,uchar,OSArray *)
OSKext::loadKextWithIdentifier(char const*,bool,bool,uchar,uchar,OSArray *)
OSKext::lookupSection(char const*,char const*)
OSKext::pendingIOKitDaemonRequests(void)
OSKext::pingIOKitDaemon(void)
OSKext::printKextPanicLists(int (*)(char const*,...))
OSKext::printKextsInBacktrace(ulong *,uint,int (*)(char const*,...),uint)
OSKext::printSummary(_loaded_kext_summary *,int (*)(char const*,...),uint)
OSKext::queueKextNotification(char const*,OSString *)
OSKext::registerDeferredKextCollection(mach_header_64 *,OSSharedPtr<OSObject> &,kc_kind)
OSKext::removeDaemonExitRequests(void)
OSKext::sendAllKextPersonalitiesToCatalog(bool)
OSKext::serializeLogInfo(OSArray *,char **,uint *)
OSKext::setAuxKCBundleAvailable(OSString *,OSDictionary *)
OSKext::setCPPInitialized(bool)
OSKext::setDriverKitUUID(OSData *)
OSKext::setMissingAuxKCBundles(OSDictionary *)
OSKext::setUserSpaceLogFilter(uint,bool)
OSKext::summaryForAddress(ulong)
OSKext::summaryIsInBacktrace(_loaded_kext_summary *,ulong *,uint)
OSKext::uniquePersonalityProperties(OSDictionary *,bool)
OSKext::withBooterData(OSString *,OSData *)
OSKext::withCodelessInfo(OSDictionary *)
OSKext::withPrelinkedInfoDict(OSDictionary *,bool,kc_kind)
OSKext::~OSKext()
OSKextGrabPgoDataLocked(OSKext *,bool,uchar *,ulong long *,char *,ulong long)
OSKextSavedMutableSegment::MetaClass::MetaClass(void)
OSKextSavedMutableSegment::free(void)
OSKext__fn_0x130
OSKext__fn_0x158
OSKext__fn_0x168
OSKext__fn_0x170
OSKext__fn_0x1a8
OSKext__fn_0x1d0
OSKext__fn_0x1f8
OSKext__fn_0x218
OSKext__fn_0x238
OSKext__fn_0x240
OSKext__fn_0x78
OSKext__fn_0x88
OSKext__fn_0xb0
OSKext__fn_0xb8
OSKext__fn_0xc0
OSKext__fn_0xc8
OSKext__start
OSLiveNumber::serialize(OSSerialize *)
OSLiveNumber::withNumberNoCopy(uint volatile*)
OSMetaClass::OSMetaClass(char const*,OSMetaClass const*,uint,zone **,char const*,zone_create_flags_t)
OSMetaClass::addInstance(OSObject const*,bool)
OSMetaClass::allocClassWithName(OSString const*)
OSMetaClass::allocClassWithName(OSSymbol const*)
OSMetaClass::applyToInstances(bool (*)(OSObject const*,void *),void *)
OSMetaClass::applyToInstancesOfClassName(OSSymbol const*,bool (*)(OSObject const*,void *),void *)
OSMetaClass::checkMetaCast(OSMetaClassBase const*)
OSMetaClass::checkMetaCastWithName(OSString const*,OSMetaClassBase const*)
OSMetaClass::checkMetaCastWithName(OSSymbol const*,OSMetaClassBase const*)
OSMetaClass::checkModLoad(void *)
OSMetaClass::copyMetaClassWithName(OSSymbol const*)
OSMetaClass::getClassDictionary(void)
OSMetaClass::getClassName(void)
OSMetaClass::getMetaClassWithName(OSSymbol const*)
OSMetaClass::instanceDestructed(void)
OSMetaClass::logError(int)
OSMetaClass::removeClasses(OSCollection *)
OSMetaClass::removeInstance(OSObject const*,bool)
OSMetaClass::reservedCalled(int)
OSMetaClass::serialize(OSSerialize *)
OSMetaClass::serializeClassDictionary(OSDictionary *)
OSMetaClassBase::OSMetaClassBase(void)
OSMetaClassBase::_ptmf2ptf(OSMetaClassBase const*,void (OSMetaClassBase::*)(void))
OSMetaClassBase::checkTypeInst(OSMetaClassBase const*,OSMetaClassBase const*)
OSMetaClassBase::initialize(void)
OSMetaClassBase::metaCast(OSMetaClass const*)
OSMetaClassBase::metaCast(OSString const*)
OSMetaClassBase::metaCast(OSSymbol const*)
OSMetaClassBase::requiredMetaCast(OSMetaClassBase const*,OSMetaClass const*)
OSMetaClassBase::safeMetaCast(OSMetaClassBase const*,OSMetaClass const*)
OSMetaClassMeta::OSMetaClassMeta(void)
OSNumber::MetaClass::MetaClass(void)
OSNumber::addValue(long long)
OSNumber::init(char const*,uint)
OSNumber::init(ulong long,uint)
OSNumber::isEqualTo(OSMetaClassBase const*)
OSNumber::serialize(OSSerialize *)
OSNumber::withNumber(char const*,uint)
OSNumber::withNumber(ulong long,uint)
OSObject::CopyDispatchQueue(char const*,IODispatchQueue **,int (*)(OSMetaClassBase *,IORPC))
OSObject::CopyDispatchQueue_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*,IODispatchQueue **))
OSObject::Dispatch(IORPC)
OSObject::MetaClass::MetaClass(void)
OSObject::OSObject(void)
OSObject::SetDispatchQueue(char const*,IODispatchQueue *,int (*)(OSMetaClassBase *,IORPC))
OSObject::SetDispatchQueue_Invoke(IORPC,OSMetaClassBase *,int (*)(OSMetaClassBase *,char const*,IODispatchQueue *))
OSObject::iterateObjects(bool ( {block_pointer})(OSObject*))
OSObject::iterateObjects(void *,bool (*)(void *,OSObject*))
OSObject::operator delete(void *,ulong)
OSObject::release(int)
OSObject::release(void)
OSObject::retain(void)
OSObject::serialize(OSSerialize *)
OSObject::taggedRelease(void const*)
OSObject::taggedRelease(void const*,int)
OSObject::taggedRetain(void const*)
OSObject::taggedTryRetain(void const*)
OSObject__free
OSObject__free_0
OSObject__free_1
OSObject__free_2
OSOrderedSet::MetaClass::MetaClass(void)
OSOrderedSet::containsObject(OSMetaClassBase const*)
OSOrderedSet::copyCollection(OSDictionary *)
OSOrderedSet::flushCollection(void)
OSOrderedSet::getLastObject(void)
OSOrderedSet::getNextObjectForIterator(void *,OSObject **)
OSOrderedSet::getObject(uint)
OSOrderedSet::isEqualTo(OSMetaClassBase const*)
OSOrderedSet::isEqualTo(OSOrderedSet const*)
OSOrderedSet::member(OSMetaClassBase const*)
OSOrderedSet::orderObject(OSMetaClassBase const*)
OSOrderedSet::removeObject(OSMetaClassBase const*)
OSOrderedSet::removeObject(OSSharedPtr<OSMetaClassBase const> const&)
OSOrderedSet::setFirstObject(OSMetaClassBase const*)
OSOrderedSet::setFirstObject(OSSharedPtr<OSMetaClassBase const> const&)
OSOrderedSet::setLastObject(OSMetaClassBase const*)
OSOrderedSet::setLastObject(OSSharedPtr<OSMetaClassBase const> const&)
OSOrderedSet::setObject(OSMetaClassBase const*)
OSOrderedSet::setObject(OSSharedPtr<OSMetaClassBase const> const&)
OSOrderedSet::setObject(uint,OSMetaClassBase const*)
OSOrderedSet::setObject(uint,OSSharedPtr<OSMetaClassBase const> const&)
OSOrderedSet::setOptions(uint,uint,void *)
OSOrderedSet::withCapacity(uint,int ( {block_pointer})(OSMetaClassBase const*,OSMetaClassBase const*))
OSOrderedSet::withCapacity(uint,int (*)(OSMetaClassBase const*,OSMetaClassBase const*,void *),void *)
OSSerialize::MetaClass::MetaClass(void)
OSSerialize::OSSerialize(OSMetaClass const*)
OSSerialize::OSSerialize(void)
OSSerialize::addBinary(void const*,ulong)
OSSerialize::addBinaryObject(OSMetaClassBase const*,uint,void const*,uint,uint *)
OSSerialize::addString(char const*)
OSSerialize::addXMLEndTag(char const*)
OSSerialize::binaryWithCapacity(uint,void *,void *)
OSSerialize::clearText(void)
OSSerialize::ensureCapacity(uint)
OSSerialize::previouslySerialized(OSMetaClassBase const*)
OSSerialize::withCapacity(uint)
OSSerialize::~OSSerialize()
OSSerialize__addChar_char
OSSerialize__addXMLStartTag_OSMetaClassBase_const___char_const
OSSerialize__free
OSSerializer::forTarget(void *,bool (*)(void *,void *,OSSerialize *),void *)
OSSerializer::withBlock(bool ( {block_pointer})(OSSerialize *))
OSSerializer__free
OSSet::MetaClass::MetaClass(void)
OSSet::OSSet(OSMetaClass const*)
OSSet::OSSet(void)
OSSet::containsObject(OSMetaClassBase const*)
OSSet::copyCollection(OSDictionary *)
OSSet::ensureCapacity(uint)
OSSet::flushCollection(void)
OSSet::getAnyObject(void)
OSSet::getNextObjectForIterator(void *,OSObject **)
OSSet::initWithArray(OSArray const*,uint)
OSSet::initWithObjects(OSObject const**,uint,uint)
OSSet::initWithSet(OSSet const*,uint)
OSSet::isEqualTo(OSMetaClassBase const*)
OSSet::isEqualTo(OSSet const*)
OSSet::merge(OSSet const*)
OSSet::removeObject(OSSharedPtr<OSMetaClassBase const> const&)
OSSet::setCapacityIncrement(uint)
OSSet::setObject(OSMetaClassBase const*)
OSSet::setObject(OSSharedPtr<OSMetaClassBase const> const&)
OSSet::setOptions(uint,uint,void *)
OSSet::withArray(OSArray const*,uint)
OSSet::withCapacity(uint)
OSSet::withObjects(OSObject const**,uint,uint)
OSSet::withSet(OSSet const*,uint)
OSSet::~OSSet()
OSSet__free
OSSet__initWithCapacity_unsigned_int
OSSet__member_OSMetaClassBase_const___const
OSSet__removeObject_OSMetaClassBase_const
OSSet__serialize_OSSerialize___const
OSString::getCStringNoCopy(void)
OSString::getChar(uint)
OSString::initWithCStringNoCopy(char const*)
OSString::initWithString(OSString const*)
OSString::isEqualTo(OSData const*)
OSString::isEqualTo(OSMetaClassBase const*)
OSString::isEqualTo(OSString const*)
OSString::isEqualTo(char const*)
OSString::serialize(OSSerialize *)
OSString::setChar(char,uint)
OSString::withCString(char const*)
OSString::withCString(char const*,ulong)
OSString::withCStringNoCopy(char const*)
OSString::withString(OSString const*)
OSSymbol::MetaClass::MetaClass(void)
OSSymbol::bsearch(void const*,void const*,uint,ulong)
OSSymbol::isEqualTo(OSMetaClassBase const*)
OSSymbol::withString(OSString const*)
OSSymbolPool::OSSymbolPool(OSSymbolPool const*)
OSSymbolPool::findSymbol(char const*)
OSSymbolPool::init(void)
OSSymbolPool::insertSymbol(OSSymbol *)
OSSymbolPool::log2(uint)
OSSymbolPool::nextHashState(OSSymbolPoolState *)
OSSymbolPool::removeSymbol(OSSymbol *)
OSSymbolPool::~OSSymbolPool()
OSUnserialize(char const*,OSString **)
OSUnserializeXML(char const*,OSSharedPtr<OSString> &)
OSUnserializeXML(char const*,ulong,OSSharedPtr<OSString> &)
OSUnserializeXML(char const*,ulong,OSString **)
OSUserMetaClass::Dispatch(IORPC)
OSUserMetaClass__free
OSValueObject<PMAssertStruct>::isEqualTo(OSMetaClassBase const*)
OSValueObject<PMAssertStruct>::isEqualTo(PMAssertStruct const&)
OSValueObject<void (*)(uint,int,void const*,uint,void *)>::isEqualTo(OSMetaClassBase const*)
OSValueObject<void *>::isEqualTo(OSMetaClassBase const*)
OSValueObject<void *>::isEqualTo(void * const&)
PCCMailboxHandler::ack_cmd_gated(uint)
PCCMailboxHandler::instantiate(IOMFB::M3Hal *,IOMFB::UPIOSvcProxy *,uint,IOMFB::AppleRegisterStream *)
PCCMailboxHandler::outbox_read_callback(uint)
PCCMailboxHandler::outbox_read_callback(uint)
PCIEventTest(OSObject *,IOPCIEventSource *,IOPCIEvent const*)
PEWriteNVRAMPropertyInternal(char const*,int,void const*,uint)
PE_consistent_debug_inherit
PMAssertionsTracker::PMAssertionsTracker(OSMetaClass const*)
PMAssertionsTracker::PMAssertionsTracker(void)
PMAssertionsTracker::copyAssertionsArray(void)
PMAssertionsTracker::createAssertion(ulong long,uint,IOService *,char const*,ulong long *)
PMAssertionsTracker::detailsForID(ulong long,int *)
PMAssertionsTracker::getAssertionLevel(ulong long)
PMAssertionsTracker::publishProperties(void)
PMAssertionsTracker::releaseAssertion(ulong long)
PMAssertionsTracker::setAssertionLevel(ulong long,uint)
PMAssertionsTracker::setUserAssertionLevels(ulong long)
PMAssertionsTracker::tabulate(void)
PMAssertionsTracker::~PMAssertionsTracker()
PMKSACache::add(AppleBCMWLANBSSBeacon &)
PMKSACache::free(void)
PMKSACache::getPMKID(uchar *,ulong long,ether_addr const&)
PMSettingHandle__free
PMSettingObject::PMSettingObject(OSMetaClass const*)
PMSettingObject::PMSettingObject(void)
PMSettingObject___PMSettingObject
PMSettingObject___PMSettingObject_0
PMTraceWorker::recordTopLevelPCIDevice(IOService *)
PMTraceWorker::serialize(OSSerialize *)
PMTraceWorker::~PMTraceWorker()
PMURTCNVRAMHelper::_getNVRAM(void)
PMURTCNVRAMHelper::nvramReadSI64(long long *)
PMURTCNVRAMHelper::nvramWriteSI64(long long,bool)
PNS::Apply(ICSInfo const&,SectionData const&,ScaleFactorData const&,SFBOffsetTable const&,valarray<float> &)
PNS::PNS(uint)
PQColorInverter::operator()(double)
PROCESS_OVERRIDING_SYSTEM_DEFAULTS
PacketMemoryDescriptorEx::free(void)
PacketMemoryDescriptorEx::initWithArgs(IONetworkController *,IOMemoryDescriptor *,__mbuf *,ulong)
ParseElementListInBitStream(CABitStreamReader &,MP4AudioElementList &,bool)
PassthruInterruptController::handleInterrupt(void *,IOService *,int)
PassthruInterruptController::init(void)
PassthruInterruptController::registerInterrupt(IOService *,int,void *,void (*)(void *,void *,void *,int),void *)
PassthruInterruptController::setCPUInterruptProperties(IOService *)
PassthruInterruptController::waitForChildController(void)
PearlCamAbortMessage::init(PearlCamErrorCode)
PearlCamDoBioCaptureMessage::free(void)
PearlCamDoBioCaptureMessage::init(OSDictionary *,uint)
PearlCamDoRetryMessage::init(PearlCamRetryMode)
PearlCamDoSecretPatternMessage::init(PearlCamSecretPatternType)
PearlCamErrorCodeToString(PearlCamErrorCode)
PearlCamEventSource::checkForWork(void)
PearlCamEventSource::disable(void)
PearlCamEventSource::enable(void)
PearlCamEventSource::free(void)
PearlCamEventSource::initWithOptions(AppleH10PearlCam *)
PearlCamEventSource::withOptions(AppleH10PearlCam *)
PearlCamFaceDetectStatusMessage::free(void)
PearlCamFaceDetectStatusMessage::init(bool,OSDictionary *)
PearlCamFrameReceiverFramesMessage::init(uint,ulong long *,uint)
PearlCamMessageTypeToString(PearlCamMessageType)
PearlCamNotificationMessage::create(PearlCamNotificationType,OSObject *)
PearlCamNotificationMessage::init(PearlCamNotificationType,OSObject *)
PearlCamPowerOffMessage::init(void)
PearlCamPowerOnMessage::create(int (*)(PearlCamMessage *))
PearlCamPowerOnMessage::init(int (*)(PearlCamMessage *))
PearlCamReportErrorMessage::init(PearlCamErrorCode)
PearlCamSendBuffersMessage::create(OSDictionary *,OSDictionary *)
PearlCamSendBuffersMessage::free(void)
PearlCamSendBuffersMessage::init(OSDictionary *,OSDictionary *)
PearlCamStartMessage::create(PearlCamSequenceType,OSData *,OSDictionary *)
PearlCamStartMessage::free(void)
PearlCamStartMessage::init(PearlCamSequenceType,OSData *,OSDictionary *)
PearlCamStopMessage::create(void)
PearlCamStopMessage::init(void)
PearlCamTimerTimeoutMessage::create(PearlCamTimerType,uint)
PearlCamTimerTimeoutMessage::init(PearlCamTimerType,uint)
PerfCtrCommandGen11::addRDECommandList(AGFIRDECommand *,uint,AGFIRDECommand *,uint)
PerfCtrCommandGen11::addRDESequenceHeader(AGFIRDECommand *,uint)
PerfCtrCommandGen11::addRDESequenceUSCProfileRegs(AGFIRDECommand *,uint)
PerfCtrCommandGen11::getBumperPerfCounters(void)
PerfCtrCommandGen11::getHWPerfCounters(void)
PerfCtrCommandGen11::getUSCPCCounters(void)
PerfCtrCommandGen11::resetSelectedCounterList(void)
PerfCtrCommandGen11::sortSelectedCounterList(void)
PingPongBufferInit(PingPongBuffer *,ulong,ulong)
PingPongBufferPull(PingPongBuffer *,ulong long *,void *,ulong *)
PowerFilterComplexity(double,double,double *,double *)
PowerLevelProfile::copyOSArray(void)
PowerLevelProfile::initWithOSArray(OSArray const*)
PriorityQueue::addClient(IOService *,uint)
PriorityQueue::frontOfQueue(sPQEntry &)
PriorityQueue::numOfClients(void)
PriorityQueue::numOfEntriesForClient(uint)
PriorityQueue::numOfEntriesInQueue(void)
PriorityQueue::peekFromQueue(sPQEntry &)
PriorityQueue::popFromQueue(sPQEntry &)
PriorityQueue::printQueue(void)
PriorityQueue::releaseAllResources(void)
PriorityQueue::removeClient(IOService *,uint)
PriorityQueue::removeFromQueue(sPQEntry &)
PriorityQueue::~PriorityQueue()
ProbeConfig::powerUp(void)
ProvInfoIOKit::Dqyxc6zf2Sv(_ProvInfoSeedVersion_ *,uchar const*,uchar *)
ProvInfoIOKit::Fd7DxKaV3(_ProvInfoSeedVersion_,uchar *,uchar *)
ProvInfoIOKit::GetDeviceProperty(char const*,char const*,void *,uint *)
ProvInfoIOKit::J8i0aN2gZ6hA3nG(_PUCryptoOperation_,uchar *,uint,uchar *,uint)
ProvInfoIOKit::KLzN(uchar const*,ulong,uchar *,ulong *)
ProvInfoIOKit::LDdKLPm0(_ProvInfoSeedVersion_,uint,uchar const*,uchar *,uchar *,uint)
ProvInfoIOKit::fDkV4Su(_PUCryptoOperation_,uchar *,uint)
ProvInfoIOKit::isJ42dDevice(bool *,uchar *)
ProvInfoIOKitUserClient::AEWpRs(uchar const*,uchar *,ulong,ulong *)
ProvInfoIOKitUserClient::afpHseTGo8s(ProvInfoIOKitUserGenerateInFieldSeedIO_ const*,ProvInfoIOKitUserGenerateInFieldSeedIO_*)
ProvInfoIOKitUserClient::clientDied(void)
ProvInfoIOKitUserClient::fpXqy2dxjQo7(ProvInfoIOKitUserGenerateSeedIO_ const*,ProvInfoIOKitUserGenerateSeedIO_*)
ProvInfoIOKitUserClient::getTargetAndMethodForIndex(IOService **,uint)
ProvInfoIOKitUserClient::initWithTask(task *,void *,uint)
ProvInfoIOKitUserClient::start(IOService *)
ProvInfoIOKitUserClient::stop(IOService *)
ProvInfoIOKitUserClient::ucEncryptSUInfo(ProvInfoIOKitUserEncryptSUInfoInput_ const*,ProvInfoIOKitUserEncryptSUInfoInput_*)
ProvInfoIOKitUserClient::ucEncryptWithWrappedKey(ProvInfoIOKitUserEncryptWithWrappedKeyInput_ const*,ProvInfoIOKitUserEncryptWithWrappedKeyInput_*)
ProvInfoIOKitUserClient::ucGetEncryptedSeedSegment(ProvInfoIOKitUserGetEncryptedSeedSegmentInput_ *,uchar *)
ProviderNotificationHandler(IOService *,void *,IONotifier *)
RSNSupplicant::authenticatorForAddr(ether_addr *)
RSNSupplicant::cachePMKSA(ether_addr *)
RSNSupplicant::clearKeys(void)
RSNSupplicant::decryptKeyData(RSNAuthenticator *,wpa_key *,ushort)
RSNSupplicant::free(void)
RSNSupplicant::freeAuthenticator(RSNAuthenticator *)
RSNSupplicant::ibssPeerArrived(ether_addr *,uchar *)
RSNSupplicant::ibssPeerLeft(ether_addr *)
RSNSupplicant::init(void)
RSNSupplicant::initWithInterfaceIEAndMode(IO80211Interface *,uchar *,int,bool)
RSNSupplicant::inputEAPOLFrame(__mbuf *)
RSNSupplicant::installGTK(RSNAuthenticator *,bool,bool)
RSNSupplicant::linkDown(void)
RSNSupplicant::micFailure(int)
RSNSupplicant::parseIE(uchar *)
RSNSupplicant::parseRSNIE(uchar *)
RSNSupplicant::parseWPAIE(uchar *)
RSNSupplicant::process1of2(RSNAuthenticator *,__mbuf *,wpa_key *,ushort)
RSNSupplicant::process1of4(RSNAuthenticator *,__mbuf *,wpa_key *,ushort)
RSNSupplicant::process3of4(RSNAuthenticator *,__mbuf *,wpa_key *,ushort)
RSNSupplicant::ptkThread(RSNAuthenticator *)
RSNSupplicant::reset(void)
RSNSupplicant::sendKeyRequest(RSNAuthenticator *,bool,bool)
RSNSupplicant::setAuthenticator(ether_addr const&)
RSNSupplicant::setCounterMeasures(bool)
RSNSupplicant::setPMK(uchar *,uchar *)
RSNSupplicant::setPSKPMK(uchar *)
RSNSupplicant::updateIE(uchar *)
RSNSupplicant::validateEAPOLMIC(RSNAuthenticator *,__mbuf *,wpa_key *,ushort,ulong)
RSNSupplicant::wpaIGTKToAppleIGTK(RSNAuthenticator *,wpa_key *,uchar *,int,int,uchar *)
RSNSupplicant::wpaPTKToApplePTK(RSNAuthenticator *,wpa_key *)
RTBKeyObjectPair::withOptions(ulong long,OSObject *)
RTBuddy::MetaClass::alloc(void)
RTBuddy::RTBuddy(OSMetaClass const*)
RTBuddy::RTBuddy(void)
RTBuddy::_acquireMailboxPower(bool)
RTBuddy::_allocateVisibleMemoryGated(RTBuddy::AllocateVisibleMemoryArguments const*,IOSlaveMemory **)
RTBuddy::_askForFirmwareGated(RTBuddyFirmware **)
RTBuddy::_attemptFirmwareLoad(void)
RTBuddy::_attemptFirmwareLoad(void)
RTBuddy::_commonServiceRegister(void)
RTBuddy::_commonServiceRegister(void)
RTBuddy::_commonStart(void)
RTBuddy::_commonStart(void)
RTBuddy::_createReporters(void)
RTBuddy::_createReporters(void)
RTBuddy::_foundFirmwareService(void *,IOService *,IONotifier *)
RTBuddy::_foundFirmwareService(void *,IOService *,IONotifier *)
RTBuddy::_getMailboxDebugInfo(AppleIOPBufferWriter &)
RTBuddy::_handlePreloadFirmware(void)
RTBuddy::_handleServiceFirmware(void)
RTBuddy::_hibernateState(void)
RTBuddy::_incomingMessageAction(void *,uint)
RTBuddy::_incomingMessageAction(void *,uint)
RTBuddy::_initConfig(void)
RTBuddy::_initConfigBootArgs(void)
RTBuddy::_initConfigEDT(void)
RTBuddy::_initConfigEDT(void)
RTBuddy::_initForwarding(void)
RTBuddy::_initForwarding(void)
RTBuddy::_initMapper(void)
RTBuddy::_initMapper(void)
RTBuddy::_iopValidateBlocking(void)
RTBuddy::_iopValidatePolling(void)
RTBuddy::_kdebugCallback(kd_callback_type,void *)
RTBuddy::_kdebugCallbackGated(kd_callback_type *,void *)
RTBuddy::_loadFirmwareGated(RTBuddyFirmware *)
RTBuddy::_loadFirmwareGated(RTBuddyFirmware *)
RTBuddy::_lockPowerStateGated(void)
RTBuddy::_makeMemoryVisibleGated(IOMemoryDescriptor *,RTBuddyVisibleMemory **)
RTBuddy::_notifyPowerStateChange(RTBuddyPowerState,RTBuddyPowerState)
RTBuddy::_notifyPowerStateChange(RTBuddyPowerState,RTBuddyPowerState)
RTBuddy::_performFirmwareLoad(void)
RTBuddy::_registerKdebug(void)
RTBuddy::_registerKdebug(void)
RTBuddy::_releaseMailboxPower(void)
RTBuddy::_segmentTokenizer(char *,char *,char **,char)
RTBuddy::_segmentTokenizer(char *,char *,char **,char)
RTBuddy::_setIopStatus(RtbIopStatus)
RTBuddy::_setManagedStateGated(RTBuddyPowerState)
RTBuddy::_setPowerStateGuardEntryGated(RTBuddyPowerState const*,bool const*)
RTBuddy::_setPowerStateGuardEntryGated(RTBuddyPowerState const*,bool const*)
RTBuddy::_setPowerStateGuardExitGated(RTBuddyPowerState const*,bool const*,bool const*)
RTBuddy::_setPowerStateGuardExitGated(RTBuddyPowerState const*,bool const*,bool const*)
RTBuddy::_setPowerStatePerformChangeGated(RTBuddyPowerState const*,bool const*)
RTBuddy::_setPowerStatePerformChangeGated(RTBuddyPowerState const*,bool const*)
RTBuddy::_setRole(void)
RTBuddy::_setRole(void)
RTBuddy::_signalApStateGated(RTBuddyPowerState)
RTBuddy::_signalNmi(RTBuddyNmiType,OSString *,bool)
RTBuddy::_signalNmi(RTBuddyNmiType,OSString *,bool)
RTBuddy::_slaveMemoryFromIOPPhysGated(ulong long const*,ulong long const*,RTBuddySlaveMemory **)
RTBuddy::_slaveMemoryFromIOPPhysGated(ulong long const*,ulong long const*,RTBuddySlaveMemory **)
RTBuddy::_unlockPowerStateGated(void)
RTBuddy::allocateBackupBuffers(void)
RTBuddy::allocateBackupBuffers(void)
RTBuddy::allocateContiguousMemory(uint,ulong long,ulong long)
RTBuddy::allocateVisibleMemory(uint,ulong long,ulong long)
RTBuddy::beginPolling(void)
RTBuddy::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
RTBuddy::configureReport(IOReportChannelList *,uint,void *,void *)
RTBuddy::createEndpoint(uint)
RTBuddy::enableSRAM(bool)
RTBuddy::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
RTBuddy::endpointForHandle(OSObject *,void (*)(OSObject *,void *,void *),uint,void *)
RTBuddy::getDebugInfo(void)
RTBuddy::getOSLogSegment(void)
RTBuddy::getRegion(void)
RTBuddy::getSegmentMap(void)
RTBuddy::getSegmentMap(void)
RTBuddy::getSegments(void)
RTBuddy::getSlaveAddress(IOSlaveMemory *)
RTBuddy::getTargetMemoryDescriptor(ulong long)
RTBuddy::init(OSDictionary *)
RTBuddy::initializePowerManagement(IOService *)
RTBuddy::isGoingToHibernate(void)
RTBuddy::isValidFirmware(void const*,uint,firmware_parameters const*)
RTBuddy::loadFirmware(RTBuddyFirmware *)
RTBuddy::lockPowerState(void)
RTBuddy::makeMemoryVisible(IOMemoryDescriptor *)
RTBuddy::notifyEndpointEnabled(uint,bool)
RTBuddy::parseBootArg64(char const*,ulong long)
RTBuddy::parseBootArgBool(char const*,bool)
RTBuddy::pollHardwareForMessage(void)
RTBuddy::powerOn(void)
RTBuddy::prefixIopRole(char const*)
RTBuddy::releaseBackupBufferAssertion(void)
RTBuddy::releaseBackupBufferAssertion(void)
RTBuddy::releaseEndpoint(uint)
RTBuddy::releaseEndpoint(uint)
RTBuddy::reloadFirmware(void)
RTBuddy::resizeEndpointList(uint)
RTBuddy::resizeEndpointList(uint)
RTBuddy::restoreSRAM(void)
RTBuddy::restoreSRAM(void)
RTBuddy::saveSRAM(void)
RTBuddy::saveSRAM(void)
RTBuddy::sendMessage(uint,void *,void *,bool)
RTBuddy::sendMessage(uint,void *,void *,bool)
RTBuddy::serviceEndpointPS(void)
RTBuddy::setDoorbellAction(void)
RTBuddy::setIopStatus(RtbIopStatus)
RTBuddy::setPowerState(ulong,IOService *)
RTBuddy::setPowerState(ulong,IOService *)
RTBuddy::signalNmi(RTBuddyNmiType,char const*,...)
RTBuddy::slaveMemoryFromIOPPhys(ulong long,ulong long)
RTBuddy::slaveMemoryFromIOPPhys(ulong long,ulong long)
RTBuddy::start(IOService *)
RTBuddy::start(IOService *)
RTBuddy::systemWillShutdown(uint)
RTBuddy::takeBackupBufferAssertion(void)
RTBuddy::takeBackupBufferAssertion(void)
RTBuddy::updateIOReportingPowerState(RTBuddyPowerState)
RTBuddy::updateReport(IOReportChannelList *,uint,void *,void *)
RTBuddy::~RTBuddy()
RTBuddyAcipcPerfEndpoint::MetaClass::alloc(void)
RTBuddyAcipcPerfEndpoint::_allocate_shared_buffer(ulong)
RTBuddyAcipcPerfEndpoint::_do_single_buffer_sync(acipc_perf_throughput_properties const*,ulong long *)
RTBuddyAcipcPerfEndpoint::_free_shared_buffer(ulong)
RTBuddyAcipcPerfEndpoint::_messageHandler(void *,void *)
RTBuddyAcipcPerfEndpoint::_messageHandler(void *,void *)
RTBuddyAcipcPerfEndpoint::_testLatencyGated(acipc_perf_stat_t *,acipc_perf_stat_t *,ulong long const*)
RTBuddyAcipcPerfEndpoint::_testThroughputGated(acipc_perf_throughput_properties const*,acipc_perf_throughput_results *)
RTBuddyAcipcPerfEndpoint::_wait_while_state(RTBuddyAcipcPerfEndpoint::acipc_perf_state,uint)
RTBuddyAcipcPerfEndpoint::_wait_while_state(RTBuddyAcipcPerfEndpoint::acipc_perf_state,uint)
RTBuddyAcipcPerfEndpoint::testLatency(acipc_perf_stat_t *,acipc_perf_stat_t *,ulong long)
RTBuddyAcipcPerfEndpoint::testThroughput(acipc_perf_throughput_properties const*,acipc_perf_throughput_results *)
RTBuddyAcipcPerfEndpoint::withOptions(IOSlaveProcessor *)
RTBuddyAscDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyAscDecoder::supported(uint,uint)
RTBuddyAutoBKPDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyBinaryLogEntryHandlerOSLog::processEntry(libkern::bounded_ptr<_log_entry const,os_detail::panic_trapping_policy>)
RTBuddyBinaryLogEntryHandlerOSLog::withOptions(RTBuddy *)
RTBuddyBinaryLogEntryHandlerSysLog::processEntry(libkern::bounded_ptr<_log_entry const,os_detail::panic_trapping_policy>)
RTBuddyBinaryLogEntryHandlerSysLog::withOptions(RTBuddy *)
RTBuddyBinaryLogEntryHandlerTraceKit::MetaClass::alloc(void)
RTBuddyBinaryLogEntryHandlerTraceKit::free(void)
RTBuddyBinaryLogEntryHandlerTraceKit::initWithOptions(RTBuddy *)
RTBuddyBinaryLogEntryHandlerTraceKit::processEntry(libkern::bounded_ptr<_log_entry const,os_detail::panic_trapping_policy>)
RTBuddyBinaryLogHandler::MetaClass::alloc(void)
RTBuddyBinaryLogHandler::addEntryHandler(RTBuddyBinaryLogEntryHandler *)
RTBuddyBinaryLogHandler::free(void)
RTBuddyBinaryLogHandler::handleEntry(uchar,libkern::bounded_ptr<_log_entry,os_detail::panic_trapping_policy>)
RTBuddyBinaryLogHandler::initWithOptions(RTBuddy *)
RTBuddyBuiltinEndpoint::free(void)
RTBuddyBuiltinEndpoint::initWithOptions(IOSlaveProcessor *,void (*)(OSObject *,void *,void *),void *,uint,char const*,uint)
RTBuddyBuiltinEndpoint::initWithOptions(IOSlaveProcessor *,void (*)(OSObject *,void *,void *),void *,uint,char const*,uint)
RTBuddyBuiltinEndpoint::start(IOService *)
RTBuddyBuiltinEndpoint::stop(IOService *)
RTBuddyCallStackDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCopyStringToBuffer(libkern::bounded_ptr<char,os_detail::panic_trapping_policy>,ulong,libkern::bounded_ptr<char const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCoreAnalyticsEndpoint::MetaClass::alloc(void)
RTBuddyCoreAnalyticsEndpoint::_handleEvent(ulong)
RTBuddyCoreAnalyticsEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyCoreAnalyticsEndpoint::_messageHandler(void *,void *)
RTBuddyCoreAnalyticsEndpoint::_messageHandler(void *,void *)
RTBuddyCoreAnalyticsEndpoint::attachCoreAnalyticsService(void *,IOService *,IONotifier *)
RTBuddyCoreAnalyticsEndpoint::attachCoreAnalyticsService(void *,IOService *,IONotifier *)
RTBuddyCoreAnalyticsEndpoint::free(void)
RTBuddyCoreAnalyticsEndpoint::start(IOService *)
RTBuddyCoredump::MetaClass::alloc(void)
RTBuddyCoredump::addRegion(void *,void *,ulong)
RTBuddyCoredump::addSWVersion(libkern::bounded_ptr<char const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCoredump::addThreadState(void const*,ulong)
RTBuddyCoredump::coredumpGetSummary(int (*)(ulong long,ulong long,ulong long,ulong long,ulong long,void *),void *)
RTBuddyCoredump::coredumpInit(void *)
RTBuddyCoredump::coredumpSaveSegmentData(int (*)(void *,ulong long,void *),void *)
RTBuddyCoredump::coredumpSaveSegmentDescriptions(int (*)(ulong long,ulong long,void *),void *)
RTBuddyCoredump::initWithOptions(RTBuddy *,RTBuddyCoredumpArch)
RTBuddyCoredump::initWithOptions(RTBuddy *,RTBuddyCoredumpArch)
RTBuddyCoredump::sCoredumpSaveSWVers(void *,int (*)(void *,ulong long,void *),void *)
RTBuddyCoredump::sCoredumpSaveThreadState(void *,void *,int (*)(void *,void *),void *)
RTBuddyCoredump::~RTBuddyCoredump()
RTBuddyCoredumpDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCoredumpMap::_addRegionGated(IOMemoryDescriptor *,ulong long *)
RTBuddyCoredumpMap::_removeRegionGated(ulong long *)
RTBuddyCoredumpMap::addRegion(IOMemoryDescriptor *,ulong long)
RTBuddyCoredumpMap::free(void)
RTBuddyCoredumpMap::indexOfPhys(ulong long)
RTBuddyCoredumpMap::indexOfVirt(ulong long)
RTBuddyCoredumpMap::indexOfVirt(ulong long)
RTBuddyCoredumpMap::initWithSegments(RTBuddy *,OSArray *)
RTBuddyCoredumpMap::iopVirtualBase(void)
RTBuddyCoredumpMap::physToVirt(ulong long,ulong long)
RTBuddyCoredumpMap::readwriteMapForIopVirtual(ulong long,ulong long *)
RTBuddyCoredumpMap::readwriteMapForIopVirtual(ulong long,ulong long *)
RTBuddyCoredumpMap::removeRegion(ulong long)
RTBuddyCoredumpMap::slaveMemoryForPhysicalRange(ulong long,ulong long,uint)
RTBuddyCoredumpMap::slaveMemoryForPhysicalRange(ulong long,ulong long,uint)
RTBuddyCoredumpMap::withMemoryDescriptor(RTBuddy *,IOMemoryDescriptor *)
RTBuddyCoredumpMapEntry::free(void)
RTBuddyCoredumpMapEntry::initWithCoredumpMap(RTBuddyCoredumpMap *,IOMemoryDescriptor *,ulong long)
RTBuddyCoredumpMapEntry::withCoredumpMap(RTBuddyCoredumpMap *,IOMemoryDescriptor *,ulong long)
RTBuddyCrashlogDecoder::MetaClass::alloc(void)
RTBuddyCrashlogDecoder::RTBuddyCrashlogDecoder(void)
RTBuddyCrashlogDecoder::_initDefaultSectionDecoders(void)
RTBuddyCrashlogDecoder::_initDefaultSectionDecoders(void)
RTBuddyCrashlogDecoder::copyStringToCrashlog(libkern::bounded_ptr<char const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCrashlogDecoder::copyStringToPanicString(libkern::bounded_ptr<char const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCrashlogDecoder::decodeLog(RTBuddyCrashlogDecodeResult &)
RTBuddyCrashlogDecoder::decodeLog(RTBuddyCrashlogDecodeResult &)
RTBuddyCrashlogDecoder::free(void)
RTBuddyCrashlogDecoder::initWithOptions(RTBuddy *,ulong)
RTBuddyCrashlogDecoder::withOptions(RTBuddy *,ulong)
RTBuddyCrashlogDecoder::writeCrashlog(char const*,char *)
RTBuddyCrashlogDecoder::writeCrashlog(char const*,char *)
RTBuddyCrashlogDecoder::writePanicString(char const*,char *)
RTBuddyCrashlogDecoder::writePanicString(char const*,char *)
RTBuddyCrashlogDecoder::~RTBuddyCrashlogDecoder()
RTBuddyCrashlogEndpoint::MetaClass::alloc(void)
RTBuddyCrashlogEndpoint::RTBuddyCrashlogEndpoint(void)
RTBuddyCrashlogEndpoint::_allocateLocalBuffer(void)
RTBuddyCrashlogEndpoint::_allocateLocalBuffer(void)
RTBuddyCrashlogEndpoint::_checkForCrashGated(ulong)
RTBuddyCrashlogEndpoint::_checkForCrashGated(ulong)
RTBuddyCrashlogEndpoint::_crashEventHandler(OSObject *,IOInterruptEventSource *,int)
RTBuddyCrashlogEndpoint::_handleCrashNotification(void *,uint)
RTBuddyCrashlogEndpoint::_handleCrashlog(bool)
RTBuddyCrashlogEndpoint::_initWithOptions(IOSlaveProcessor *,uint,RTBuddy *)
RTBuddyCrashlogEndpoint::_messageHandler(void *,void *)
RTBuddyCrashlogEndpoint::_messageHandler(void *,void *)
RTBuddyCrashlogEndpoint::_powerStateChange(ulong,ulong)
RTBuddyCrashlogEndpoint::_powerStateChangeGated(RTBuddyCrashlogEndpoint::powerStateArguments const*)
RTBuddyCrashlogEndpoint::_setNmiReasonGated(OSString *)
RTBuddyCrashlogEndpoint::_synchronize(RTBuddyCrashlogEndpoint::IsPolling,bool,int (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
RTBuddyCrashlogEndpoint::_synchronize(RTBuddyCrashlogEndpoint::IsPolling,bool,int (*)(OSObject *,void *,void *,void *,void *),void *,void *,void *,void *)
RTBuddyCrashlogEndpoint::checkForCrash(RTBuddyCrashlogEndpoint::IsPolling,bool,bool)
RTBuddyCrashlogEndpoint::forceCrashAndPoll(void)
RTBuddyCrashlogEndpoint::forceCrashlog(RTBuddyNmiType)
RTBuddyCrashlogEndpoint::forceCrashlog(RTBuddyNmiType)
RTBuddyCrashlogEndpoint::free(void)
RTBuddyCrashlogEndpoint::setNmiReason(OSString *,bool,bool)
RTBuddyCrashlogEndpoint::start(IOService *)
RTBuddyCrashlogEndpoint::stop(IOService *)
RTBuddyCrashlogEndpoint::withOptions(IOSlaveProcessor *,uint,RTBuddy *)
RTBuddyCrashlogSectionDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyCrashlogSectionDecoder::supported(uint,uint)
RTBuddyCrashlogSectionDecoder::writeCrashlog(char const*,...)
RTBuddyCrashlogSectionDecoder::writeCrashlogAndPanicString(char const*,...)
RTBuddyDictionaryDecoder::_decodeField(uchar const*,ulong,OSDictionary *)
RTBuddyDictionaryDecoder::_getObject(RTK_CAS_DictionaryCoderTypeSize_e,uchar const*,uint)
RTBuddyDictionaryDecoder::decodeBuffer(void const*,ulong,uint)
RTBuddyEndpoint::assumeControl(IOSlaveMemory *,ulong long,ulong long)
RTBuddyEndpoint::free(void)
RTBuddyEndpoint::initWithOptions(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint,char const*,uint)
RTBuddyEndpoint::isAsleep(ulong,ulong)
RTBuddyEndpoint::isGoingToSleep(ulong,ulong)
RTBuddyEndpoint::isWakingUp(ulong,ulong)
RTBuddyEndpoint::onPanic(void)
RTBuddyEndpoint::onPowerStateChange(ulong,ulong)
RTBuddyEndpoint::receiveMessage(ulong long *,bool)
RTBuddyEndpoint::receiveMessage(void **,bool)
RTBuddyEndpoint::releaseControl(IOSlaveMemory *,ulong long,ulong long,bool)
RTBuddyEndpoint::sendMessage(void *,void *,bool)
RTBuddyEndpoint::sendNMI(OSString *)
RTBuddyEndpoint::signalNewMessage(void *)
RTBuddyEndpoint::signalNewMessage(void *)
RTBuddyEndpoint::withOptions(IOSlaveProcessor *,OSObject *,void (*)(OSObject *,void *,void *),void *,uint,char const*,uint)
RTBuddyEndpoint::withOptions(IOSlaveProcessor *,uint,char const*)
RTBuddyEndpointPSEventSource::checkForWork(void)
RTBuddyEndpointPSEventSource::withBuddy(RTBuddy *)
RTBuddyEndpointService::createName(IOService *,uint)
RTBuddyEndpointService::start(IOService *)
RTBuddyEndpointService::withOptions(IOService *,RTBuddyEndpoint *)
RTBuddyEndpointService::withOptions(IOService *,uint)
RTBuddyFirmware::allocateHeap(RTBuddy *,uint,uint)
RTBuddyFirmware::allocateHeap(RTBuddy *,uint,uint)
RTBuddyFirmware::announce(void)
RTBuddyFirmware::buildMemoryDescriptor(OSArray *)
RTBuddyFirmware::copy32FromIopVirtual(ulong long,ulong)
RTBuddyFirmware::copy32FromIopVirtual(ulong long,ulong)
RTBuddyFirmware::copy32FromIopVirtual(ulong long,ulong,void *)
RTBuddyFirmware::copy32FromIopVirtualUnaligned(ulong long,char *,ulong)
RTBuddyFirmware::copyIdBlock(RTK_uuid_block_t *)
RTBuddyFirmware::copyPatchBayData(uint *)
RTBuddyFirmware::copySegmentDescriptorWithName(char const*,RTBuddySegmentDescriptor *)
RTBuddyFirmware::copySegmentDescriptorWithName(char const*,RTBuddySegmentDescriptor *)
RTBuddyFirmware::copyToTarget(RTBuddy *)
RTBuddyFirmware::copyToTarget(RTBuddy *)
RTBuddyFirmware::createCoredumpMap(RTBuddy *)
RTBuddyFirmware::findPatchBay(ulong long *,uint *,uint *)
RTBuddyFirmware::fixup(RTBuddy *,RTBuddyFirmwareService *)
RTBuddyFirmware::free(void)
RTBuddyFirmware::generatePrngSeed(void)
RTBuddyFirmware::generateStackGuard(void)
RTBuddyFirmware::getPatchBay(void)
RTBuddyFirmware::getRole(void)
RTBuddyFirmware::getSegmentForIopVirtual(ulong long)
RTBuddyFirmware::getSegmentForIopVirtual(ulong long)
RTBuddyFirmware::init(void)
RTBuddyFirmware::initData(OSData *,OSDictionary *)
RTBuddyFirmware::initData(OSData *,OSString *,OSString *,OSString *)
RTBuddyFirmware::initDictionary(OSDictionary *)
RTBuddyFirmware::initWithSegmentMap(OSArray *,OSString *)
RTBuddyFirmware::iopVirtualToApVirtual(ulong long,ulong)
RTBuddyFirmware::iopVirtualToApVirtual(ulong long,ulong)
RTBuddyFirmware::isDefaultConfiguration(void)
RTBuddyFirmware::mapFirmware(void)
RTBuddyFirmware::patchBayRead<uint>(uint,uint &)
RTBuddyFirmware::patchBayRead<uint>(uint,uint &)
RTBuddyFirmware::patchBayWrite<uchar>(uint,uchar const&)
RTBuddyFirmware::patchBayWrite<uchar>(uint,uchar const&)
RTBuddyFirmware::patchBayWrite<uint>(uint,uint const&)
RTBuddyFirmware::patchBayWrite<uint>(uint,uint const&)
RTBuddyFirmware::patchBayWrite<ulong long>(uint,ulong long const&)
RTBuddyFirmware::patchBayWrite<ulong long>(uint,ulong long const&)
RTBuddyFirmware::preloadedFirmware(OSArray *,OSString *)
RTBuddyFirmware::publishToIORegistry(RTBuddy *)
RTBuddyFirmware::releaseFirmware(void)
RTBuddyFirmware::setPropertyFromIopString(RTBuddy *,char const*,ulong long)
RTBuddyFirmware::updateCoredumpWithPatchBay(void)
RTBuddyFirmware::updatePatchBay(RTBuddy *)
RTBuddyFirmware::withData(OSData *,OSString *,OSString *,OSString *)
RTBuddyFirmware::writeBackPatchBay(void)
RTBuddyFirmware::writeBackPatchBay(void)
RTBuddyFirmwareBundle::getDefaultFirmwareForRole(OSString *)
RTBuddyFirmwareBundle::initWithData(OSData *)
RTBuddyFirmwareService::free(void)
RTBuddyFirmwareService::image4Tag(void)
RTBuddyFirmwareService::matchPropertyTable(OSDictionary *,int *)
RTBuddyFirmwareService::matchingDictionaryWithRole(OSString *)
RTBuddyFirmwareService::start(IOService *)
RTBuddyHexDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyHexDecoder::hexDataPrint(libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyIOReportingEndpoint::MetaClass::alloc(void)
RTBuddyIOReportingEndpoint::_addReporter(io_reporting_reporter_t const&,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>)
RTBuddyIOReportingEndpoint::_addReporter(io_reporting_reporter_t const&,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>)
RTBuddyIOReportingEndpoint::_apInitiatedUpdateGated(void)
RTBuddyIOReportingEndpoint::_apInitiatedUpdateGated(void)
RTBuddyIOReportingEndpoint::_decreaseBusyGated(void)
RTBuddyIOReportingEndpoint::_getReporter(ulong long)
RTBuddyIOReportingEndpoint::_getReporter(ulong long)
RTBuddyIOReportingEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyIOReportingEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyIOReportingEndpoint::_messageHandler(void *,void *)
RTBuddyIOReportingEndpoint::_messageHandler(void *,void *)
RTBuddyIOReportingEndpoint::_powerStateCallback(ulong,ulong)
RTBuddyIOReportingEndpoint::_powerStateCallbackGated(ulong const*,ulong const*)
RTBuddyIOReportingEndpoint::_updateRemoteReportersGated(void)
RTBuddyIOReportingEndpoint::_updateReportersGated(void)
RTBuddyIOReportingEndpoint::_verifyBufferGated(void)
RTBuddyIOReportingEndpoint::_verifyBufferGated(void)
RTBuddyIOReportingEndpoint::_waitForNotBusyGated(void)
RTBuddyIOReportingEndpoint::_waitOnOutstandingApUpdatesGated(void)
RTBuddyIOReportingEndpoint::start(IOService *)
RTBuddyIOReportingEndpoint::start(IOService *)
RTBuddyIOReportingEndpoint::updateReport(IOReportChannelList *,uint,void *,void *)
RTBuddyKdebugEndpoint::MetaClass::alloc(void)
RTBuddyKdebugEndpoint::_handleBufferRequest(ulong long)
RTBuddyKdebugEndpoint::_handleBufferRequest(ulong long)
RTBuddyKdebugEndpoint::_handleFlush(ulong long)
RTBuddyKdebugEndpoint::_handleFlush(ulong long)
RTBuddyKdebugEndpoint::_handleHereIsMyBuffer(ulong long)
RTBuddyKdebugEndpoint::_handleHereIsMyBuffer(ulong long)
RTBuddyKdebugEndpoint::_handleHereIsMyTypefilter(ulong long)
RTBuddyKdebugEndpoint::_handleHereIsMyTypefilter(ulong long)
RTBuddyKdebugEndpoint::_initWithOptions(IOSlaveProcessor *,uint)
RTBuddyKdebugEndpoint::_kdebugOnPowerStateGated(ulong *,ulong *)
RTBuddyKdebugEndpoint::_kdebugSendEnabledState(void)
RTBuddyKdebugEndpoint::_kdebugSendEnabledState(void)
RTBuddyKdebugEndpoint::_kdebugSendFlushRequest(void)
RTBuddyKdebugEndpoint::_kdebugSendFlushRequest(void)
RTBuddyKdebugEndpoint::_kdebugSendHostReadyAction(void)
RTBuddyKdebugEndpoint::_kdebugSendHostReadyAction(void)
RTBuddyKdebugEndpoint::_kdebugSendTypefilterChangedNotification(void)
RTBuddyKdebugEndpoint::_kdebugSendTypefilterChangedNotification(void)
RTBuddyKdebugEndpoint::_kdebugTypefilterChangedGated(void *)
RTBuddyKdebugEndpoint::_messageHandler(void *,void *)
RTBuddyKdebugEndpoint::_messageHandler(void *,void *)
RTBuddyKdebugEndpoint::enable(void)
RTBuddyKdebugEndpoint::enable(void)
RTBuddyKdebugEndpoint::kdebugCallback(kd_callback_type,void *)
RTBuddyKdebugEndpoint::kdebugCallback(kd_callback_type,void *)
RTBuddyMailboxDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyMakeString(char const*,...)
RTBuddyManagementEndpoint::MetaClass::alloc(void)
RTBuddyManagementEndpoint::_buildRollCall(uint)
RTBuddyManagementEndpoint::_handleEPRollCall(ulong long)
RTBuddyManagementEndpoint::_handleEPRollCall(ulong long)
RTBuddyManagementEndpoint::_handleHello(ulong long)
RTBuddyManagementEndpoint::_handleHello(ulong long)
RTBuddyManagementEndpoint::_handlePingAck(ulong long)
RTBuddyManagementEndpoint::_handlePingAck(ulong long)
RTBuddyManagementEndpoint::_handlePowerAck(ulong long)
RTBuddyManagementEndpoint::_handlePowerAck(ulong long)
RTBuddyManagementEndpoint::_incomingMsgAction(ulong long)
RTBuddyManagementEndpoint::_incomingMsgAction(ulong long)
RTBuddyManagementEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyManagementEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyManagementEndpoint::_messageHandler(void *,void *)
RTBuddyManagementEndpoint::_messageHandler(void *,void *)
RTBuddyManagementEndpoint::_onPowerState(ulong,ulong)
RTBuddyManagementEndpoint::_onPowerStateGated(ulong *,ulong *)
RTBuddyManagementEndpoint::_quiesceWatchdogGated(void)
RTBuddyManagementEndpoint::_signalApPowerGated(ulong)
RTBuddyManagementEndpoint::_waitForRemoteStateBlocking(uint)
RTBuddyManagementEndpoint::_waitForRemoteStateGated(uint)
RTBuddyManagementEndpoint::_waitForRemoteStatePolling(uint)
RTBuddyManagementEndpoint::_watchdogCheckTimeout(void)
RTBuddyManagementEndpoint::_watchdogFunction(IOTimerEventSource *)
RTBuddyManagementEndpoint::_watchdogSendPing(void)
RTBuddyManagementEndpoint::readyPowerNap(bool)
RTBuddyManagementEndpoint::requestPowerState(RTBuddyPowerState)
RTBuddyManagementEndpoint::setEndpointStatus(uint,bool)
RTBuddyManagementEndpoint::wakeQuiesced(void)
RTBuddyManagementEndpoint::watchdogRearm(void)
RTBuddyMessageQueue::RTBuddyMessageQueue(uint)
RTBuddyMessageQueue::pop(ulong long *)
RTBuddyMessageQueue::pull(ulong long **)
RTBuddyMessageQueue::push(ulong long)
RTBuddyMessageQueue::~RTBuddyMessageQueue()
RTBuddyNativeSlaveMemoryDescriptor::clean(ulong long,ulong long)
RTBuddyNativeSlaveMemoryDescriptor::free(void)
RTBuddyNativeSlaveMemoryDescriptor::getSlaveAddress(void)
RTBuddyNvramDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyOSLogEndpoint::MetaClass::alloc(void)
RTBuddyOSLogEndpoint::_copyEntriesToTempBuffer(uchar,ulong)
RTBuddyOSLogEndpoint::_initWithOptions(IOSlaveProcessor *)
RTBuddyOSLogEndpoint::_messageHandler(void *,void *)
RTBuddyOSLogEndpoint::_messageHandler(void *,void *)
RTBuddyOSLogEndpoint::_processEntries(libkern::bounded_ptr<uchar,os_detail::panic_trapping_policy>,ulong long)
RTBuddyOSLogEndpoint::copyOSLogSegment(ulong long,bool)
RTBuddyOSLogEndpoint::free(void)
RTBuddyOSLogEndpoint::sizeToProcess(uchar,ulong)
RTBuddyOSLogEndpoint::~RTBuddyOSLogEndpoint()
RTBuddyPatchBay::find(uint)
RTBuddyPatchBay::free(void)
RTBuddyPatchBay::getBytesNoCopy(void)
RTBuddyPatchBay::initWithData(OSData *,uint)
RTBuddyPatchBay::read<ulong long>(uint,ulong long &)
RTBuddyPatchBay::read<ulong long>(uint,ulong long &)
RTBuddyProductVersionDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyReadPropertyBytes(IORegistryEntry *,char const*,void *,ulong long)
RTBuddyRegisterFrameDecoder::MetaClass::alloc(void)
RTBuddyRegisterFrameDecoder::_decodeFSR(uint)
RTBuddyRegisterFrameDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyRegisterFrameDecoder::registerDecoderRtkArmV7ar(libkern::bounded_ptr<CrashLogRegisterData_t const,os_detail::panic_trapping_policy>)
RTBuddyRegisterFrameDecoder::registerDecoderRtkArmV8(libkern::bounded_ptr<CrashLogRegisterData_t const,os_detail::panic_trapping_policy>)
RTBuddyRegisterFrameDecoder::registerDecoderRtkArmVXm(libkern::bounded_ptr<CrashLogRegisterData_t const,os_detail::panic_trapping_policy>)
RTBuddyRegisterFrameDecoder::supported(uint,uint)
RTBuddyRegisterFrameDecoder::~RTBuddyRegisterFrameDecoder()
RTBuddyRemoteSlaveMemoryDescriptor::clean(ulong long,ulong long)
RTBuddyRemoteSlaveMemoryDescriptor::free(void)
RTBuddyRemoteSlaveMemoryDescriptor::getSlaveAddress(ulong long)
RTBuddyRtkitDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddySavedSegment::MetaClass::alloc(void)
RTBuddySavedSegment::initWithSegment(RTBuddySegment *)
RTBuddySavedSegment::restore(void)
RTBuddySavedSegment::save(void)
RTBuddySavedSegment::~RTBuddySavedSegment()
RTBuddyScmDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddySegment::containsRemap(ulong long)
RTBuddySegment::containsVirt(ulong long)
RTBuddySegment::createMemoryDescriptor(uint)
RTBuddySegment::free(void)
RTBuddySegment::initWithMemoryDescriptor(IOMemoryDescriptor *,ulong long,OSString *)
RTBuddySegment::isPhysicallyColocatedWith(RTBuddySegment*,ulong long)
RTBuddySegment::mapReadOnly(void)
RTBuddySegment::mapReadWrite(void)
RTBuddySegment::remapOffset(ulong long,ulong long,ulong long *)
RTBuddySegment::virtOffset(ulong long,ulong long,ulong long *)
RTBuddySegment::withPhysicalRange(ulong long,ulong long,ulong long,ulong long,OSString *,uint)
RTBuddyService::loadFirmware(OSData *,OSString *,OSString *,OSString *,ulong long)
RTBuddyService::loadFirmware(RTBuddyFirmware *)
RTBuddyService::poll(uint)
RTBuddyService::slaveMemoryFromIOPPhys(ulong long,ulong long,RTBuddySlaveMemory **)
RTBuddyService::start(IOService *)
RTBuddySlaveBuffer::clean(ulong long,ulong long)
RTBuddySlaveBuffer::cleanFlush(ulong long,ulong long)
RTBuddySlaveBuffer::free(void)
RTBuddySlaveBuffer::getLocalCopy(ulong long,ulong long)
RTBuddySlaveBuffer::getSlaveAddress(ulong long)
RTBuddySlaveBuffer::getVirtualAddress(ulong long)
RTBuddySlaveBuffer::initWithBuffer(IOSlaveMemory *)
RTBuddySlaveBuffer::readBytes(ulong long,void *,ulong long)
RTBuddySlaveBuffer::withBuffer(IOSlaveMemory *)
RTBuddySlaveBuffer::writeBytes(ulong long,void const*,ulong long)
RTBuddySlaveMemoryBuffer::initWithOptions(uint,ulong long,ulong long,RTBuddyCoredumpMap *,IOMapper *,ulong long,uchar)
RTBuddySlaveMemoryBuffer::withOptions(uint,ulong long,ulong long,RTBuddyCoredumpMap *,IOMapper *,ulong long,uchar)
RTBuddySlaveMemoryDescriptor::clean(ulong long,ulong long)
RTBuddySlaveMemoryDescriptor::cleanFlush(ulong long,ulong long)
RTBuddySlaveMemoryDescriptor::free(void)
RTBuddySlaveMemoryDescriptor::getLocalCopy(ulong long,ulong long)
RTBuddySlaveMemoryDescriptor::getLocalCopyNoAllocate(void)
RTBuddySlaveMemoryDescriptor::getSlaveAddress(ulong long)
RTBuddySlaveMemoryDescriptor::getVirtualAddress(ulong long)
RTBuddySlaveMemoryDescriptor::initWithMemoryDescriptor(IOMemoryDescriptor *,bool,uint)
RTBuddySlaveMemoryDescriptor::readBytes(ulong long,void *,ulong long)
RTBuddySlaveMemoryDescriptor::writeBytes(ulong long,void const*,ulong long)
RTBuddySmbDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyStatisticsDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyStringDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddySyslogEndpoint::MetaClass::alloc(void)
RTBuddySyslogEndpoint::_emergencyFlush(void)
RTBuddySyslogEndpoint::_get_facility_name(uint)
RTBuddySyslogEndpoint::_handleRequestSyslogBuffer(ulong long)
RTBuddySyslogEndpoint::_handleRequestSyslogBuffer(ulong long)
RTBuddySyslogEndpoint::_initWithOptions(IOSlaveProcessor *,uint)
RTBuddySyslogEndpoint::_messageHandler(void *,void *)
RTBuddySyslogEndpoint::_messageHandler(void *,void *)
RTBuddySyslogEndpoint::_powerStateChange(ulong,ulong)
RTBuddySyslogEndpoint::_printEntry(ulong)
RTBuddySyslogEndpoint::~RTBuddySyslogEndpoint()
RTBuddyTimeDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyTraceChunkEncoder::MetaClass::alloc(void)
RTBuddyTraceChunkEncoder::addDataEncoder(RTBuddyTraceDataEncoder *)
RTBuddyTraceChunkEncoder::encode(ushort,uint,ulong long,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong,libkern::bounded_ptr<uchar,os_detail::panic_trapping_policy>,ulong *)
RTBuddyTraceChunkEncoder::free(void)
RTBuddyTraceChunkEncoder::withOptions(void)
RTBuddyTraceKitEndpoint::MetaClass::alloc(void)
RTBuddyTraceKitEndpoint::_initWithOptions(IOSlaveProcessor *,uint)
RTBuddyTraceKitEndpoint::_messageHandler(void *,void *)
RTBuddyTraceKitEndpoint::_messageHandler(void *,void *)
RTBuddyTraceKitEndpoint::_powerStateCallbackGated(ulong const*,ulong const*)
RTBuddyTraceKitEndpoint::_tracekitSendEnabledState(void)
RTBuddyTraceKitEndpoint::_tracekitSendEnabledState(void)
RTBuddyTraceKitEndpoint::_tracekitSendFlushRequest(void)
RTBuddyTraceKitEndpoint::_tracekitSendFlushRequest(void)
RTBuddyTraceKitEndpoint::_tracekitSendHostReady(void)
RTBuddyTraceKitEndpoint::_tracekitSendHostReady(void)
RTBuddyTraceKitEndpoint::enable(void)
RTBuddyTraceKitEndpoint::kdebugCallback(kd_callback_type,void *)
RTBuddyTraceKitEndpoint::kdebugCallback(kd_callback_type,void *)
RTBuddyTraceKitMessageEncoder::encode(libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong,libkern::bounded_ptr<uchar,os_detail::panic_trapping_policy>,ulong *)
RTBuddyTraceKitMessageEncoder::identifier(libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyTraceKitMessageEncoder::type(libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyTraceKitMessageEncoder::withOptions(ushort,uint)
RTBuddyUnknownDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyUnknownDecoder::withDecoder(RTBuddyCrashlogDecoder *)
RTBuddyUserClient::acipcPerfLatency(acipc_perf_stat_t *,acipc_perf_stat_t *,ulong long)
RTBuddyUserClient::acipcPerfThroughput(acipc_perf_throughput_properties const*,acipc_perf_throughput_results *)
RTBuddyUserClient::clientClose(void)
RTBuddyUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
RTBuddyUserClient::getSyslogVerbosity(uint *)
RTBuddyUserClient::initWithTask(task *,void *,uint)
RTBuddyUserClient::sAcipcPerfThroughput(RTBuddyUserClient*,void *,IOExternalMethodArguments *)
RTBuddyUserClient::sGetSyslogVerbosity(RTBuddyUserClient*,void *,IOExternalMethodArguments *)
RTBuddyUserClient::sNMICoprocessor(RTBuddyUserClient*,void *,IOExternalMethodArguments *)
RTBuddyUserClient::sReloadFirmware(RTBuddyUserClient*,void *,IOExternalMethodArguments *)
RTBuddyUserClient::sSetPowerState(RTBuddyUserClient*,void *,IOExternalMethodArguments *)
RTBuddyUserClient::setSyslogVerbosity(uint)
RTBuddyUserClient::start(IOService *)
RTBuddyV2::MetaClass::alloc(void)
RTBuddyV2::_incomingMessageAction(void *,uint)
RTBuddyV2::_incomingMessageAction(void *,uint)
RTBuddyV2::sendMessage(uint,void *,void *,bool)
RTBuddyV2::sendMessage(uint,void *,void *,bool)
RTBuddyVersionDecoder::decode(uint,uint,libkern::bounded_ptr<uchar const,os_detail::panic_trapping_policy>,ulong)
RTBuddyVisibleMemoryImpl::free(void)
RTBuddyVisibleMemoryImpl::initWithMemoryDescriptor(IOMemoryDescriptor *,RTBuddyCoredumpMap *,IOMapper *,ulong long,uchar)
RTBuddyVisibleMemoryImpl::initWithMemoryDescriptor(IOMemoryDescriptor *,RTBuddyCoredumpMap *,IOMapper *,ulong long,uchar)
RTBuddyVisibleMemoryImpl::withMemoryDescriptor(IOMemoryDescriptor *,RTBuddyCoredumpMap *,IOMapper *,ulong long,uchar)
RTBuddyVisibleSlaveBuffer::free(void)
RTBuddyVisibleSlaveBuffer::getSlaveAddress(ulong long)
RTBuddyVisibleSlaveBuffer::initWithMemoryDescriptor(RTBuddy *,IOMemoryDescriptor *,uint)
RVRAScaler(uchar **,int *,int,int,uchar **,int *,int,int,uint,uint,uchar **,scaler_context_t,scaler_bilinear_buffers_t,uint *,uint *)
Reader::read8(void)
Reader::read_rational(void)
RefCounted::RefCounted(void)
RefCounted::operator delete(void *,ulong)
RefCounted::release(void)
RefCounted::retain(void)
RefCounted::~RefCounted()
RemoteDataQueue::_abort(char const*,int)
RemoteDataQueue::_release_subrange(ulong,ulong)
RemoteDataQueue::_send_rdptr(uint)
RemoteDataQueue::_signalDataAvailable(uint,uint,uint,uint)
RemoteDataQueue::init(RTBuddyEndpoint *,IOSlaveMemory *,RTBuddySlaveMemory *,ulong long,ulong long,ulong long,IOMemoryDescriptor *,RemoteDataQueue::direction)
RemoteDataQueue::init(RTBuddyEndpoint *,IOSlaveMemory *,ulong long,ulong long,ulong long,IOBufferMemoryDescriptor *,RemoteDataQueue::direction)
RemoteDataQueue::reset(void)
Ring<AHSCommandQueue::ActionAndArgs,8ul>::_item_at(ulong)
RootDomainUserClient::MetaClass::MetaClass(void)
RootDomainUserClient::externalMethod(uint,IOExternalMethodArguments *,IOExternalMethodDispatch *,OSObject *,void *)
RootDomainUserClient::secureGetSystemSleepType(uint *,uint *)
RootDomainUserClient::secureSetAggressiveness(ulong,ulong,int *)
RootDomainUserClient::secureSetMaintenanceWakeCalendar(IOPMCalendarStruct *,uint *)
RootDomainUserClient::secureSetUserAssertionLevels(uint)
RootDomainUserClient::secureSleepSystem(uint *)
RootDomainUserClient::secureSleepSystemOptions(void const*,ulong long,uint *)
RootDomainUserClient__initWithTask_task___void___unsigned_int__OSDictionary
RoseCoredump::MetaClass::alloc(void)
RoseCoredump::addRegion(ulong long,ulong long,uint)
RoseCoredump::appendCoredumpChunk(uchar const*,ulong)
RoseCoredump::getInfo(_rtkitCrashlogInfo *)
RoseCoredump::initWithOptions(OSObject *,IOWorkLoop *,ulong,uchar)
RoseCoredump::readCoredumpChunk(ulong long,uchar *,ulong,ulong *)
RoseCrashlog::_decodeCoredump(RoseCoredump *,void *,ulong)
RoseCrashlog::flush(void)
RoseCrashlog::getCoredumpRegions(RoseCoredump *)
RoseCrashlog::initWithOptions(OSObject *,void (*)(OSObject *,uchar *,ulong,uchar),IOWorkLoop *,uchar,uint)
RoseFirmwareLog::MetaClass::alloc(void)
RoseFirmwareLog::RoseFirmwareLog(void)
RoseFirmwareLog::abort(void *,char const*,int)
RoseFirmwareLog::free(void)
RoseFirmwareLog::getLogBufferSlaveAddress(void)
RoseFirmwareLog::initWithSlaveVisibleMemory(IOSlaveProcessor *,RTBuddyEndpoint *,ulong)
RoseFirmwareLog::populateLocalCache(uchar const*,ulong)
RoseFirmwareLog::populateLocalCache(uchar const*,ulong)
RoseFirmwareLog::readCachedLogs(uchar *,ulong *)
RoseFirmwareLog::readLocalCache(uchar *,ulong,ulong *)
RoseFirmwareLog::readLocalCache(uchar *,ulong,ulong *)
RoseFirmwareLog::release_subrange(void *,uint,ulong)
RoseFirmwareLog::~RoseFirmwareLog()
RoswellAuthI2CRelayInterface::_getCert(OSObject **)
RoswellAuthI2CRelayInterface::_getCertSN(OSObject **)
RoswellAuthI2CRelayInterface::_getDeviceInfo(OSObject **)
RoswellAuthI2CRelayInterface::_getSignature(OSData *,OSObject **)
RoswellAuthI2CRelayInterface::_readFromRoswell(uchar,ulong long,void *)
RoswellAuthI2CRelayInterface::_threadCallFunc(void *)
RoswellAuthI2CRelayInterface::_transferData(uint,ulong long,uchar *,ulong long,void *)
RoswellAuthI2CRelayInterface::authInit(OSObject *,void (*)(OSObject *,AppleAuthCPRelayInterface *,int,uchar,OSObject *))
RoswellAuthI2CRelayInterface::authSendData(uchar,OSData *)
RoswellAuthI2CRelayInterface::start(IOService *)
RoswellAuthI2CRelayInterface::stop(IOService *)
SAMSysctl(sysctl_oid *,void *,int,sysctl_req *)
SCSISubsystemGlobals::SCSISubsystemGlobals(void)
SCSISubsystemGlobals::~SCSISubsystemGlobals()
SCSITask::EnsureAutosenseDescriptorExists(void)
SCSITask::GetAutosenseDataBuffer(void)
SCSITask::InitWithOwner(OSObject *)
SCSITask::SetAutoSenseData(SCSI_Sense_Data *,uchar)
SCSITask::SetAutoSenseDataBuffer(ulong long,uchar,task *)
SCSITask::SetAutosenseCommand(uchar,uchar,uchar,uchar,uchar,uchar)
SCSITask::SetCommandDescriptorBlock(uchar,uchar,uchar,uchar,uchar,uchar)
SCSITask::SetCommandDescriptorBlock(uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
SCSITask::SetCommandDescriptorBlock(uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
SCSITask::SetCommandDescriptorBlock(uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
SCSITask::SetTargetLayerReference(void *)
SCSITask::SetTaskOwner(OSObject *)
SCSITask::TaskCompletedNotification(void)
SCSITask::free(void)
SEPBICS::_init(IOSlaveEndpoint *,HiloDisplayParams const*)
SEPBICS::sepBics(HiloDisplayParams const*)
SEPBICS::sepBics(IOSlaveEndpoint *,HiloDisplayParams const*)
SEPBICS::sepBics(IOSlaveEndpoint *,HiloDisplayParams const*)
SEPROMPanicBuffer::SEPROMPanicBuffer(ulong)
SEPROMPanicBuffer::SEPROMPanicBuffer(ulong)
SEPROMPanicBuffer::queueMessageWord(ulong long)
SEPROMPanicBuffer::queueMessageWord(ulong long)
SEPROMPanicBuffer::scrubPanicBuffer(void)
SEPROMPanicBuffer::scrubPanicBuffer(void)
SMEvent::create(char const*)
SMMachine::addTransition(SMState *,SMState *,SMEvent *,void ( {block_pointer})(SMState *,SMState *,SMEvent *),bool ( {block_pointer})(SMState *,SMState *,SMEvent *))
SMMachine::create(IOService *)
SMMachine::free(void)
SMState::create(char const*,void ( {block_pointer})(SMEvent *),void ( {block_pointer})(SMEvent *))
SMState::free(void)
SMTransition::create(OSObject *,SMState *,OSObject *,void ( {block_pointer})(SMState *,SMState *,SMEvent *),bool ( {block_pointer})(SMState *,SMState *,SMEvent *))
SMTransition::free(void)
SPUDataQueue::abort(void *,char const*,int)
SPUDataQueue::assume(void *)
SPUDataQueue::assume_subrange(void *,uint,ulong)
SPUDataQueue::barrier(void *)
SPUDataQueue::clear(void)
SPUDataQueue::dequeue_all(void (*)(void *,uint,uchar *,ulong,uint),void *)
SPUDataQueue::dequeue_all(void (*)(void *,uint,uchar *,ulong,uint),void *,uint *)
SPUDataQueue::enqueue_msg(uint,uint,AFK_iovec const*,ulong)
SPUDataQueue::enqueue_msg(uint,uint,SPU_iovec const*,uint)
SPUDataQueue::get_extended_info(uint,ulong *)
SPUDataQueue::init(uchar *,ulong,bool,uchar)
SPUDataQueue::is_empty(void)
SPUDataQueue::release(void *,bool)
SPUDataQueue::release_subrange(void *,uint,ulong)
SPUDataQueue::send_rdptr(void *,uint)
SPUDataQueue::signal(void *,uint,uint,uint,uint,uint,uint)
SYSCTLHelper::triggerFaultReport(void)
ScaleFactorData::Deserialize(BitstreamReader &,uint,ICSInfo const&,SectionData const&)
SectionData::Deserialize(BitstreamReader &,ICSInfo const&,bool)
SecureDTFindEntry
SequenceBuffer::init(uint,uint,uint,uint)
SequenceBuffer::mapSequenceToDart_gatedContext(void)
SequenceBuffer::programSequenceBaseAddress_gatedContext(void)
SequenceBuffer::unmapSequenceFromDart_gatedContext(void)
SequenceBuffer::~SequenceBuffer()
Serializer::AlignToNext16(char)
SetDBV::callFunction(void *,void *,void *)
SetDBV::callFunction(void *,void *,void *)::$_0::__invoke(void *,void *,void *,void *)
SetDBV::free(void)
SetDBV::init(IOMFB::UPPipe *)
SetupBackgroundLUNRescan(void)
ShouldPostDisplayActivityTickles(IOService *,OSSet *,bool)
ShouldPostDisplayActivityTicklesForWakeDevice(IOService *,OSSet *,bool)
SimpleCircularBuffer::cleanup(void)
SimpleCircularBuffer::init(uint)
SimpleCircularBuffer::popBack(void)
SimpleCircularBuffer::push(uint)
StandardUSB20::convertBESLIndexToNs(uint,uint &)
StandardUSB20::convertBESLNsToIndex(uint,uint &)
StandardUSB::getConfigurationMaxPowerMilliAmps(uint,StandardUSB::ConfigurationDescriptor const*)
StandardUSB::getEndpointBurstSize(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*)
StandardUSB::getEndpointBurstSize32(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,StandardUSB::SuperSpeedPlusIsochronousEndpointCompanionDescriptor const*)
StandardUSB::getEndpointDirection(StandardUSB::EndpointDescriptor const*)
StandardUSB::getEndpointIntervalEncodedMicroframes(uint,StandardUSB::EndpointDescriptor const*)
StandardUSB::getEndpointIntervalFrames(uint,StandardUSB::EndpointDescriptor const*)
StandardUSB::getEndpointIntervalMicroframes(uint,StandardUSB::EndpointDescriptor const*)
StandardUSB::getEndpointMaxStreams(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*)
StandardUSB::getEndpointMaxStreamsEncoded(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*)
StandardUSB::getEndpointMult(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,StandardUSB::SuperSpeedPlusIsochronousEndpointCompanionDescriptor const*)
StandardUSB::getNextAssociatedDescriptorWithType(StandardUSB::ConfigurationDescriptor const*,StandardUSB::Descriptor const*,StandardUSB::Descriptor const*,uchar)
StandardUSB::getNextCapabilityDescriptor(StandardUSB::BOSDescriptor const*,StandardUSB::DeviceCapabilityDescriptor const*)
StandardUSB::getNextCapabilityDescriptorWithType(StandardUSB::BOSDescriptor const*,StandardUSB::DeviceCapabilityDescriptor const*,uchar)
StandardUSB::getNextDescriptor(StandardUSB::ConfigurationDescriptor const*,StandardUSB::Descriptor const*)
StandardUSB::getNextDescriptorWithType(StandardUSB::ConfigurationDescriptor const*,StandardUSB::Descriptor const*,uchar)
StandardUSB::getNextInterfaceAssociationDescriptor(StandardUSB::ConfigurationDescriptor const*,StandardUSB::Descriptor const*)
StandardUSB::getNextInterfaceDescriptor(StandardUSB::ConfigurationDescriptor const*,StandardUSB::Descriptor const*)
StandardUSB::stringDescriptorToUTF8(StandardUSB::StringDescriptor const*,char *,ulong &)
StandardUSB::validateDeviceCapabilityDescriptors(StandardUSB::BOSDescriptor const*)
StandardUSB::validateEndpointBurstSize(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,StandardUSB::SuperSpeedPlusIsochronousEndpointCompanionDescriptor const*)
StandardUSB::validateEndpointDescriptor(uint,StandardUSB::EndpointDescriptor const*,StandardUSB::SuperSpeedEndpointCompanionDescriptor const*,StandardUSB::SuperSpeedPlusIsochronousEndpointCompanionDescriptor const*)
StandardUSB::validateEndpointInterval(uint,StandardUSB::EndpointDescriptor const*)
StandardUSB::validateEndpointMaxPacketSize(uint,StandardUSB::EndpointDescriptor const*)
StaticPlatformPolicy<true,true,false,false,false,false,true,true,false,true,false,false,false,false,true,true,2u,false,false>::check_signature(LazyPath *,int,cs_blob *,uint *,uint *,int,bool,bool,uint,char **,ulong *)
StaticPlatformPolicy<true,true,false,false,false,false,true,true,false,true,false,false,false,false,true,true,2u,false,false>::loadEntitlementsFromVnode(OSEntitlements **,vnode *,long long,proc *,char const**)
Stopwatch::free(void)
Stopwatch::start(void)
Stopwatch::withUptime(void)
StringForAwdlState(scheduleState)
StringForAwdlTlvType(uint)
StripEncrypting(uint)
SysGamma::operator()(double)
TCalSuperset::operator=(TCalSuperset&&)
TNSData::Apply(ICSInfo const&,SFBOffsetTable const&,valarray<float> &)
TNSData::ParseTNSData(BitstreamReader &,ICSInfo const&)
TNSData::TNSData(uint,uint)
TSNInterface::start(IOService *)
TSNWiFiControlInterface::start(IOService *)
TextCrypterSession::free(void)
TextCrypterSession::newCryptSession(IOTextCrypter *,void *,bool *)
TileRow_neon(uchar *,uchar *,int,int)
TimerEventSourceBridge::init(void)
TransducerState::newState(int,uint)
TransferCompletionArgs::allocate(IOAccessoryHSAIDBulkData *,uchar,uchar,TransferCompletionArgs::ResponseType,ulong long,uchar *,int)
TransferCompletionArgs::deallocate(void)
TransferWeightElement16(WeightInfoStruct const&,DvPtrWeight &,int,int,int,int,int,DvPtrWeight &,int)
TransferWeightElement8(WeightInfoStruct const&,DvPtrWeight &,int,int,int,int,int,DvPtrWeight &,int)
TranslateClockRateUHS1(uchar)
TranslateLimitationRclkUHS2(uchar)
UPAsynchronousScheduler::MetaClass::MetaClass(void)
UPAsynchronousScheduler::MetaClass::alloc(void)
UPAsynchronousScheduler::UPAsynchronousScheduler(void)
UPAsynchronousScheduler::checkAndQueueArgument(UPAsynchronousScheduler_::ArgumentEntry *)
UPAsynchronousScheduler::free(void)
UPAsynchronousScheduler::init(char const*,ulong,ulong,uint)
UPAsynchronousScheduler::performActions_gated(void)
UPAsynchronousScheduler::upAsynchronousScheduler(IOMFBStatus (*)(void *,void *,void *,void *),char const*,ulong,ulong,uint)
UPAsynchronousScheduler::upAsynchronousScheduler(char const*,ulong,ulong,uint)
UPAsynchronousScheduler::~UPAsynchronousScheduler()
UPAsynchronousScheduler_::UPAsynchronousScheduler_(void)
UPAsynchronousScheduler_::createArgumentEntry(void)
UPAsynchronousScheduler_::go(IOMFBStatus (*)(void *,void *,void *,void *),uint *,bool,void *,void *,void *,void *)
UPAsynchronousScheduler_::releaseArgumentEntry(UPAsynchronousScheduler_::ArgumentEntry *,bool)
UPAsynchronousScheduler_::softwareInterruptOccurred(void)
UPAsynchronousScheduler_::startThread(uint *,void *,void *,void *,void *)
UPAsynchronousScheduler_::startThreadWithAction(IOMFBStatus (*)(void *,void *,void *,void *),uint *,void *,void *,void *,void *)
UPPipe_H11P_Trampoline::ActiveCallback::operator()(VideoModeMailboxHandler::ActiveCallback::Args const*,uint)
UPPipe_H11P_Trampoline::EventCallback::operator()(CtrlMailboxHandler::event_descriptor_t const*)
UPPipe_H11P_Trampoline::InfoCallback::operator()(CtrlMailboxHandler::InfoCallback::InfoType,void *)
UPPipe_H11P_Trampoline::MetaClass::MetaClass(void)
UPPipe_H11P_Trampoline::MetaClass::alloc(void)
UPPipe_H11P_Trampoline::UPPipe_H11P_Trampoline(OSMetaClass const*)
UPPipe_H11P_Trampoline::UPPipe_H11P_Trampoline(void)
UPPipe_H11P_Trampoline::free(void)
UPPipe_H11P_Trampoline::m3_active_callback_gated(UPPipe_H11P_Trampoline*,VideoModeMailboxHandler::ActiveCallback::Args const*,uint)
UPPipe_H11P_Trampoline::wait_for_mode_change(bool)
UPPipe_H11P_Trampoline::wait_for_mode_change(bool)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
USBConfiguration::addInterface(IOUSBDeviceInterface *)
USBConfiguration::addInterfaceAssociation(USBInterfaceAssociation *)
USBConfiguration::allocateEndpointIDs(void)
USBConfiguration::assignEndpointIDs(int)
USBConfiguration::copyDescriptor(uchar *,uint,int,int,bool)
USBConfiguration::findPipeByAddress(uchar)
USBConfiguration::free(void)
USBConfiguration::getInterface(int)
USBConfiguration::getInterfaceByEndpoint(int,uint *)
USBConfiguration::getInterfaceCount(void)
USBConfiguration::getInterfaceIndex(IOUSBDeviceInterface *)
USBConfiguration::getInterfaceIndexByEndpoint(int)
USBConfiguration::getMaxPower(int)
USBConfiguration::getMinServiceInterval(void)
USBConfiguration::resetDataToggles(void)
USBConfiguration::withValues(int,int,int,bool,bool,bool)
USBHostLoggingBootArgs::USBHostLoggingBootArgs(void)
USBInterfaceAssociation::copyDescriptor(uchar *,uint,IOUSBDeviceInterface *)
USBInterfaceAssociation::createAssociation(uchar,uchar,int)
USBMassStorageDriverGlobals::Lock(void)
USBMassStorageDriverGlobals::USBMassStorageDriverGlobals(void)
USBMassStorageDriverGlobals::~USBMassStorageDriverGlobals()
USBMassStorageDriverSysctl(sysctl_oid *,void *,int,sysctl_req *)
USBStringIndex::addString(OSString *)
USBStringIndex::copyStringDescriptor(uchar *,uint,int,uint)
USBStringIndex::flush(void)
USBStringIndex::newUSBStringIndex(void)
UnifiedPipeline2::do_crc_notify(SwapInfoBlob *)
UnifiedPipeline2::match_pmu_service(void)::$_1::__invoke(void *,void *,IOService *,IONotifier *)
UnifiedPipeline::MetaClass::MetaClass(void)
UnifiedPipeline::MetaClass::alloc(void)
UnifiedPipeline::UnifiedPipeline(OSMetaClass const*)
UnifiedPipeline::UnifiedPipeline(void)
UnifiedPipeline::absolute_time_to_ns(ulong long,ulong long *)
UnifiedPipeline::applyProperty(uint,uint)
UnifiedPipeline::arm_fn_search(char const*,uint,IOMFB::UPAAFProxy **)
UnifiedPipeline::arm_fn_search(char const*,uint,IOMFB::UPAAFProxy **)::$_30::__invoke(IOMFB::UPAAFProxy *,void *,void *,void *)
UnifiedPipeline::asyncswap_supported(void)
UnifiedPipeline::backlight_service_proxy(void)
UnifiedPipeline::buffers_valid(void)
UnifiedPipeline::callPlatformFunction(OSSymbol const*,bool,void *,void *,void *,void *)
UnifiedPipeline::can_optimize_scaling(IOSurface const*,IOMFBRect const*,IOMFBRect const*,uint,IOMFBRect const*,IOMFB::ScaleOptimizer *)
UnifiedPipeline::check_drm(IOSurface *)
UnifiedPipeline::clear_up_displayed_data(void)
UnifiedPipeline::clear_up_pending_swap_gated(void)
UnifiedPipeline::clear_up_swap_queue_gated(void)
UnifiedPipeline::computeCanPowerGateDCS(IOMFBSwapIORequest *)
UnifiedPipeline::create_PMU_service(void)
UnifiedPipeline::create_backlight_service(void)
UnifiedPipeline::create_iomfb_service(void)
UnifiedPipeline::create_nvram_service(void)
UnifiedPipeline::create_product_service(void)
UnifiedPipeline::create_provider_service(void)
UnifiedPipeline::dart_map_mdesc_gated(IOMemoryDescriptor *,IODMACommand **,ulong long *,bool)
UnifiedPipeline::dart_unmap_mdesc_gated(IOMemoryDescriptor *,IODMACommand *,bool)
UnifiedPipeline::detect_fastsim(void)
UnifiedPipeline::disable_calibration_gated(bool)
UnifiedPipeline::displayHeight(void)
UnifiedPipeline::displayWidth(void)
UnifiedPipeline::display_edr_factor_changed(float)
UnifiedPipeline::do_power_state_change_action_gated(IOMobileFramebufferLegacy::pstatechgreq *,bool)
UnifiedPipeline::do_power_state_change_impl(void)
UnifiedPipeline::do_swap_info_notify_gated(IOMFBNotifyRequest *,IOMobileFramebufferLegacy::SwapInfoBlob const*)
UnifiedPipeline::emergency_shutdown_normal_mode(void)
UnifiedPipeline::enableForceSwapBeginEvent(void)
UnifiedPipeline::enable_backlight_gated(bool)
UnifiedPipeline::enable_backlight_message(bool,bool)
UnifiedPipeline::enable_backlight_message_gated(bool,bool)
UnifiedPipeline::enable_disable_video_power_savings(uint)
UnifiedPipeline::enable_timings_gated(bool)
UnifiedPipeline::exportProperty(uint,uint)
UnifiedPipeline::export_idle_method(uint)
UnifiedPipeline::export_idle_state(IOMFBIdleState)
UnifiedPipeline::export_modes_gated(void)
UnifiedPipeline::first_client_open(void)
UnifiedPipeline::first_client_open(void)::$_20::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::force_swap_begin_interrupt_gated(IOMFB::InterruptEventSource *,int)
UnifiedPipeline::frame_done_interrupt_ktrace(ulong long)
UnifiedPipeline::frame_info_get(uint)
UnifiedPipeline::frame_info_queue_push(IOMFBSwapIORequest const*)
UnifiedPipeline::free(void)
UnifiedPipeline::getActivePeriod_us(void)
UnifiedPipeline::getPropRTPForName(char const*,uint *)
UnifiedPipeline::get_PMU_service(void)
UnifiedPipeline::get_UP_pipe(void)
UnifiedPipeline::get_backlight_service(void)
UnifiedPipeline::get_color_remap_mode(DisplayColorRemapMode *)
UnifiedPipeline::get_current_absolute_time(void)
UnifiedPipeline::get_digital_out_mode(IOMFBGetDigitalOutMode *)
UnifiedPipeline::get_disp_base_phys(void)
UnifiedPipeline::get_display_power_state(void)
UnifiedPipeline::get_gamma_table(IOMFBGammaTable *)
UnifiedPipeline::get_gate(void)
UnifiedPipeline::get_link_quality(void)
UnifiedPipeline::get_matrix(uint,ulong long (*)[3][3])
UnifiedPipeline::get_matrix(uint,ulong long (*)[3][3])::$_0::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::get_nvram_service(void)
UnifiedPipeline::get_timebase_override(void)
UnifiedPipeline::get_timing_attributes_gated(IOMFB::RefreshTimingAttributes *,bool)
UnifiedPipeline::get_workloop(void)
UnifiedPipeline::headless(void)
UnifiedPipeline::idle_caching_retry(void)
UnifiedPipeline::init(OSDictionary *)
UnifiedPipeline::initARMFunctions(void)
UnifiedPipeline::iomfb_service_proxy(void)
UnifiedPipeline::isEdgeAlphaEnabled_gated(__VideoDestEdgeAlpha const*)
UnifiedPipeline::isReplaying(void)
UnifiedPipeline::is_dark_boot(void)
UnifiedPipeline::is_lpm_supported(void)
UnifiedPipeline::is_multi_sfm_display(void)
UnifiedPipeline::is_sfm_target_change(uint *,uint *)
UnifiedPipeline::is_timing_switch_supported(void)
UnifiedPipeline::kfp_event_gated(UnifiedPipeline::KSFPowerEvent)
UnifiedPipeline::kfp_ready_for_swap(void)
UnifiedPipeline::kfp_setup_gated(void)
UnifiedPipeline::kfp_setup_gated(void)::$_29::__invoke(void *,IOMFB::UPEventMonitor *,IOMFB::UPEventMonitor::State,void *)
UnifiedPipeline::last_client_close(void)
UnifiedPipeline::last_client_close(void)::$_21::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::match_pmu_service(void)
UnifiedPipeline::max_panel_brightness(void)
UnifiedPipeline::mode_set_gated(uint,uint)
UnifiedPipeline::multiple_external_dcp(void)
UnifiedPipeline::notify_swap_done_gated(uint,SwapInfoBlob *,uint *,uint)
UnifiedPipeline::ns_to_absolute_time(ulong long,ulong long *)
UnifiedPipeline::nvram_service_proxy(void)
UnifiedPipeline::on_swap_queued(void)
UnifiedPipeline::pipe_needs_frame(void)
UnifiedPipeline::powerUpDART_gated(bool)
UnifiedPipeline::power_gate_dcs(UnifiedPipeline::DCS_STATE)
UnifiedPipeline::power_gate_dcs(UnifiedPipeline::DCS_STATE)::$_19::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::power_gate_dcs_ok(void)
UnifiedPipeline::power_reset_gated(void)
UnifiedPipeline::presentation_time_feedback(double)
UnifiedPipeline::probe(IOService *,int *)
UnifiedPipeline::product_service_proxy(void)
UnifiedPipeline::program_pipe_gated(void)
UnifiedPipeline::program_pipe_gated(void)
UnifiedPipeline::protection_bits(void)
UnifiedPipeline::provider_proxy(void)
UnifiedPipeline::queue_power_state_change(UnifiedPipeline::PowerSeqType)
UnifiedPipeline::read_carveout(void *,ulong long,uint)
UnifiedPipeline::read_edt_data(char const*,uint,uint *)
UnifiedPipeline::read_edt_string(char const*,char *,uint *)
UnifiedPipeline::recordQoSStats(IOMFBSwapInfo *)
UnifiedPipeline::report_scanout_stats(IOMFBScanoutStatsIndex)
UnifiedPipeline::reset_core_analytics_data_gated(IOMFBCoreAnalyticsDataType)
UnifiedPipeline::reset_display_pipe_hardware(void)
UnifiedPipeline::reset_display_pipe_hardware(void)::$_10::__invoke(void *,void *,void *,void *)
UnifiedPipeline::reset_display_pipe_hardware(void)::$_10::operator() const(void *,void *,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::reset_lah_gated(void)
UnifiedPipeline::schedule_aot_wakeup(ulong long)
UnifiedPipeline::schedule_aot_wakeup(ulong long)::$_7::__invoke(void *,IOMFB::UPEventMonitor *,IOMFB::UPEventMonitor::State,void *)
UnifiedPipeline::setAPIPowerState(ulong,IOService *)
UnifiedPipeline::setDCPAVProp(char const*,OSObject *)
UnifiedPipeline::setDCPAVPropChunk(uchar const*,uint,uint)
UnifiedPipeline::setDCPAVPropEnd(char const*)
UnifiedPipeline::setDCPAVPropStart(uint)
UnifiedPipeline::setPowerState(ulong,IOService *)
UnifiedPipeline::setProperties(OSObject *)
UnifiedPipeline::set_aot_awake_time(bool)
UnifiedPipeline::set_aot_wake_timer(void)
UnifiedPipeline::set_api_power_state_gated(ulong,IOService *)
UnifiedPipeline::set_api_power_state_gated(ulong,IOService *)::$_8::__invoke(void *,void *,void *,void *)
UnifiedPipeline::set_api_power_state_gated(ulong,IOService *)::$_8::operator() const(void *,void *,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::set_async_timer_ms(ulong long)
UnifiedPipeline::set_block(task *,uint,uint,ulong long const*,uint,uchar const*,ulong)
UnifiedPipeline::set_boolean_property(char const*,bool)
UnifiedPipeline::set_brightness_gated(int)
UnifiedPipeline::set_color_remap_mode(DisplayColorRemapMode)
UnifiedPipeline::set_contrast(float *)
UnifiedPipeline::set_contrast(float *)::$_2::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::set_corner_temps_gated(int const*)
UnifiedPipeline::set_crc_notification_state_gated(bool)
UnifiedPipeline::set_create_DFB(void)
UnifiedPipeline::set_dbv__iboot(uint)
UnifiedPipeline::set_device_enabled_gated(bool)
UnifiedPipeline::set_digital_out_mode(uint,uint)
UnifiedPipeline::set_digital_out_mode_impl(uint,uint,bool)
UnifiedPipeline::set_digital_out_mode_impl(uint,uint,bool)::$_25::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::set_digital_out_mode_impl(uint,uint,bool)::$_26::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::set_display_device(uint)
UnifiedPipeline::set_frame_info_notification_state_gated(IOMFBNotifyRequest *,bool)
UnifiedPipeline::set_frame_size(uint,uint)
UnifiedPipeline::set_headless_info(bool)
UnifiedPipeline::set_idle_caching_buffer(IOSurface *)
UnifiedPipeline::set_idle_caching_buffer(IOSurface *)
UnifiedPipeline::set_idle_caching_state(IdleCachingState)
UnifiedPipeline::set_idle_caching_state_ap(IdleCachingState,uint,bool)
UnifiedPipeline::set_matrix(uint,ulong long const(*)[3][3])
UnifiedPipeline::set_matrix(uint,ulong long const(*)[3][3])::$_1::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::set_notify_tag_mask_gated(IOMFB_NotificationType,IOMFBNotifyRequest *,uint)
UnifiedPipeline::set_number_property(char const*,uint)
UnifiedPipeline::set_preset_mode(bool)
UnifiedPipeline::set_reference_preset(bool)
UnifiedPipeline::set_string_property(char const*,char const*)
UnifiedPipeline::set_thermal_throttle_cap_gated(uint)
UnifiedPipeline::set_timebase_override(mach_timebase_info const*)
UnifiedPipeline::set_vsh_hifa_enabled(bool)
UnifiedPipeline::set_vsh_phase_gated(IOMFB_VSH_Phase_Type,ulong long)
UnifiedPipeline::set_vsh_value(uchar)
UnifiedPipeline::set_wake_time(ulong long)
UnifiedPipeline::setup_async_monitor(void)
UnifiedPipeline::setup_async_monitor(void)::$_5::__invoke(void *,IOMFB::UPEventMonitor *,IOMFB::UPEventMonitor::State,void *)
UnifiedPipeline::setup_event_monitors(void)
UnifiedPipeline::setup_event_monitors(void)::$_4::__invoke(void *,IOMFB::UPEventMonitor *,IOMFB::UPEventMonitor::State,void *)
UnifiedPipeline::start(IOService *)
UnifiedPipeline::start_adc_function(void)
UnifiedPipeline::start_hardware(void)
UnifiedPipeline::start_hardware_gated(void)
UnifiedPipeline::start_hardware_root(void)
UnifiedPipeline::state_is_dirty(void)
UnifiedPipeline::stop(IOService *)
UnifiedPipeline::stop_adc_function(ulong long *,ulong long *,uint *)
UnifiedPipeline::stop_hardware_gated(void)
UnifiedPipeline::supported_frame_info(uint,uint *,char (*)[64])
UnifiedPipeline::supports_aot(void)
UnifiedPipeline::swapWillChangeDisplayedData(IOMFBSwapIORequest *)
UnifiedPipeline::swap_begin_async_gated(void)
UnifiedPipeline::swap_begin_gated(void)
UnifiedPipeline::swap_begin_gated(void)
UnifiedPipeline::swap_begin_idlecache(void)
UnifiedPipeline::swap_begin_idlecache(void)::$_18::operator()(void)
UnifiedPipeline::swap_complete_gated(void)
UnifiedPipeline::swap_request_complete(uint,ulong long)
UnifiedPipeline::swap_set_color_matrix(IOMFBColorFixedMatrix *,IOMFBColorMatrixFunction,uint)
UnifiedPipeline::syncRate(void)
UnifiedPipeline::test_control_gated(ulong long const*,uint)
UnifiedPipeline::timings_ok_gated(bool)
UnifiedPipeline::toggleFrameInfoTracing_gated(bool,IOMFB::PropNotification)
UnifiedPipeline::toggleRegTracing_gated(bool,IOMFB::PropNotification)
UnifiedPipeline::trigger_fdr_loader(void)
UnifiedPipeline::trigger_pswap_dependent_thread(void)
UnifiedPipeline::trigger_queued_power_state_changes(void)
UnifiedPipeline::updateDisplayedLayerGenPipe(uint,uint)
UnifiedPipeline::update_bic_gated(void)
UnifiedPipeline::update_lac_gated(void)
UnifiedPipeline::verify_swap(IOMFBSwapIORequest *)
UnifiedPipeline::verify_swap_surfaces(IOMFBSwapIORequest *)
UnifiedPipeline::vi_process_pmu(IOMFB::UPIOSvcProxy *)
UnifiedPipeline::vi_set_temperature_hint(void)
UnifiedPipeline::videointerface_clean_cm(void)
UnifiedPipeline::videointerface_clean_link(void)
UnifiedPipeline::videointerface_clean_mode(bool)
UnifiedPipeline::videointerface_filter_modes(void)
UnifiedPipeline::videointerface_init(void)
UnifiedPipeline::videointerface_init(void)::$_22::operator() const(void *,VideoInterface::Event,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::videointerface_init(void)::$_22::operator() const(void *,VideoInterface::Event,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#2}::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::videointerface_init(void)::$_22::operator() const(void *,VideoInterface::Event,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#5}::__invoke(OSObject *,void *,void *,void *,void *)
UnifiedPipeline::~UnifiedPipeline()
UnifiedPipeline__fn_0x9f8
UpdateDenylist(MISDenylistEntry *,ulong)
UpdateDiskParams(OSDictionary *,char const*,ulong long,uchar,bool)
UserClientArgHelper::UserClientArgHelper(IOExternalMethodArguments *)
UserClientArgHelper::~UserClientArgHelper()
UserTimerEventSource::init(OSObject *,UserTimerEventSource::timer_type_t,uint,void (*)(OSObject *,IOTimerEventSource *))
VADResourceArbiter::free(void)
VADResourceArbiter::grantResourceAccess(void)
VADResourceArbiter::newUserClient(task *,void *,uint,IOUserClient **)
VADResourceArbiter::releaseResource(ResourceArbiterClientPriority_t)
VADResourceArbiter::requestResource(ResourceArbiterClientPriority_t,bool)
VADResourceArbiter::resourceReleaseTimeout(void)
VADResourceArbiter::start(IOService *)
VADResourceArbiter::stop(IOService *)
VADResourceArbiter::userClientDisconnect(void)
VADResourceArbiterUserClient::clientClose(void)
VADResourceArbiterUserClient::extReleaseResource(VADResourceArbiter *,void *,IOExternalMethodArguments *)
VADResourceArbiterUserClient::extRequestResource(VADResourceArbiter *,void *,IOExternalMethodArguments *)
VADResourceArbiterUserClient::isClientTaskEntitled(char const*)
VM_PAGE_GET_PHYS_PAGE
VM_PAGE_GET_PHYS_PAGE_0
ValidateDenylist(MISDenylistEntry *,ulong)
VideoInterface::arm_fn_search(char const*,IOMFB::UPAAFProxy **,uint,bool)
VideoInterface::arm_fn_search(char const*,IOMFB::UPAAFProxy **,uint,bool)::$_0::__invoke(IOMFB::UPAAFProxy *,void *,void *,void *)
VideoInterface::arm_fn_search(char const*,IOMFB::UPAAFProxy **,uint,bool)::$_0::operator() const(IOMFB::UPAAFProxy *,void *,void *,void *)::{lambda(OSObject *,void *,void *,void *,void *)#1}::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterface::create(IOMFB::UPIOSvcProxy *,bool)
VideoInterface::find_ioav(IOMFB::UPIOSvcProxy *)
VideoInterface::find_mipi_ioav(IOMFB::UPIOSvcProxy *)
VideoInterface::init(void)
VideoInterface::read_edt_data(IOMFB::UPIOSvcProxy *,char const*,uint,uint *)
VideoInterfaceIOAV::auc_match(void *,IOService *)
VideoInterfaceIOAV::auc_match(void *,IOService *)::$_12::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::check_drm(IOSurface *)
VideoInterfaceIOAV::close(void)
VideoInterfaceIOAV::config_vid_clock(void)
VideoInterfaceIOAV::did_power_off(bool,bool)
VideoInterfaceIOAV::did_power_off(bool,bool)::$_3::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::did_power_on(void)
VideoInterfaceIOAV::did_power_on(void)::$_1::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::free(void)
VideoInterfaceIOAV::getDSCBitsPerPixel(ushort *)
VideoInterfaceIOAV::get_color_elements(void)
VideoInterfaceIOAV::get_display_attributes(void)
VideoInterfaceIOAV::get_display_primaries(float *,float (*)[2],bool)
VideoInterfaceIOAV::get_hpd_state(void)
VideoInterfaceIOAV::get_link_quality(void)
VideoInterfaceIOAV::get_link_status(void)::$_11::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::get_timing_element_for_id(uint,OSArray *)
VideoInterfaceIOAV::get_timing_elements(void)
VideoInterfaceIOAV::get_transport_type(void)
VideoInterfaceIOAV::get_uuid(void)
VideoInterfaceIOAV::init(IOMFB::UPIOSvcProxy *,IOMFBStatus (*)(void *,VideoInterface::Event,void *,void *),void *,bool)
VideoInterfaceIOAV::is_plug_notif_pending(void)
VideoInterfaceIOAV::open_ioav_gated(void)
VideoInterfaceIOAV::plug(void *,IOService *)
VideoInterfaceIOAV::plug(void *,IOService *)::$_4::__invoke(void *,void *,void *,void *)
VideoInterfaceIOAV::plug_gated(IOAVVideoInterface *)
VideoInterfaceIOAV::power_on(ulong long *,bool,bool)
VideoInterfaceIOAV::power_on(ulong long *,bool,bool)::$_0::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::protection_bits(void)
VideoInterfaceIOAV::setDSCParameters(IOAVDSCParameters)
VideoInterfaceIOAV::set_hdr_metadata(OSDictionary *)
VideoInterfaceIOAV::set_mode(uint,uint,uint *,uint *,OSArray *,OSArray *)
VideoInterfaceIOAV::set_mode(uint,uint,uint *,uint *,OSArray *,OSArray *)::$_8::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::set_temperature(int,bool)
VideoInterfaceIOAV::set_temperature(int,bool)::$_9::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::set_unplug_notif_pending(bool)
VideoInterfaceIOAV::set_unplug_notif_pending(bool)::$_7::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::shutdown_link_gated(void)
VideoInterfaceIOAV::unplug(void *,IOService *)::$_5::__invoke(void *,void *,void *,void *)
VideoInterfaceIOAV::unplug_gated(IOAVVideoInterface *)
VideoInterfaceIOAV::wait_for_unplug_notif(void)
VideoInterfaceIOAV::wait_for_unplug_notif(void)::$_6::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV::will_power_off(void)
VideoInterfaceIOAV::will_power_off(void)::$_2::__invoke(OSObject *,void *,void *,void *,void *)
VideoInterfaceIOAV__fn_0xd8
VideoInterfaceMipi::get_link_status(void)
VideoInterfaceMipi::init(IOMFB::UPIOSvcProxy *,IOMFBStatus (*)(void *,VideoInterface::Event,void *,void *),void *,bool)
VideoInterfaceMipi::lcd_callback(bool)
VideoInterfaceMipi::power_on(ulong long *,bool,bool)
VideoInterfaceMipi::set_temperature(int,bool)
VideoInterfaceMipi::set_temperature(int,bool)::$_0::__invoke(void *,void *,void *,void *)
VideoInterfaceMipi::will_power_off(void)
VideoInterfaceStub::free(void)
VideoInterfaceStub::power_on(ulong long *,bool,bool)
VideoInterfaceStub::set_mode(uint,uint,uint *,uint *,OSArray *,OSArray *)
VideoInterfaceStub__fn_0x130
VideoModeMailboxHandler::activeq_callback_notify_gated(uint)
VideoModeMailboxHandler::activeq_callback_notify_gated(uint)::$_1::__invoke(void *,void *,void *,void *)
VideoModeMailboxHandler::free(void)
VideoModeMailboxHandler::info_callback_notify_gated(uint)
VideoModeMailboxHandler::info_callback_notify_gated(uint)::$_0::__invoke(void *,void *,void *,void *)
VideoModeMailboxHandler::init(IOMFB::M3Hal *,IOMFB::UPIOSvcProxy *,uint,IOMFB::AppleRegisterStream *)
VideoModeMailboxHandler::instantiate(IOMFB::M3Hal *,IOMFB::UPIOSvcProxy *,uint,IOMFB::AppleRegisterStream *)
VnodeLazyPath::realize(void)
WLSE_iteration(uint,double,double *,uint,double (*)[3],double (*)[3],double (*)[3],double (*)[3])
WLSE_predict(uint,double *,uint,double (*)[3],double (*)[3],double (*)[3])
WaitForTask(OSObject *,IOCommandGate *,OSObject *)
WriteBits::align(void)
WriteBits::bytealign(void)
WriteBits::putbits(ulong long,uint)
WriteBits::startcode(uint)
WriteBits::write_u(uint,uint)
WriteBits::write_ue(uint)
WriteKernelValueRaw16(DvPtrWeight &,int &,void *,bool,int,uchar *)
WriteKernelValueRaw8(DvPtrWeight &,int &,void *,bool,int,uchar *)
ZinComputeNbrOfNe(ZinComputeProgramStruct const*)
ZinComputeProgramAneOperationTdCount(ZinComputeProgramStruct const*,ProcedureOperation const*)
ZinComputeProgramFindSection(ComputeProgramSegment const*,ulong,ulong long)
ZinComputeProgramMakePreCheck(void const*,ComputeProgramSegment *,ulong,ComputeProgramFvmlib *,ulong)
ZinIrDeserializer::Read(ulong)
ZinIrDeserializer::ReadInt32(int &)
ZinIrDeserializer::ReadPaddingUntilAlignedTo(int)
ZinIrDeserializer::ReadUint16(ushort &)
ZinIrDeserializer::ReadUint64(ulong long &)
ZinIrDeserializer::ReadUint8(uchar &)
_ACMKernPingOnDoubleClick
_ACMKernPingOnDoubleClick_0
_ACMKernPrivGetEnvironmentVariable
_ACMKernPrivGetEnvironmentVariable_0
_ACMKernPrivPing
_ACMKernPrivSetEnvironmentVariable
_ACMKernPrivTRMLoadState
_ACMKernSetEnvironmentVariable
_ACMKernelTransport
_ACMKernelTransport_0
_ACMKernelTransport_1
_AFKLog(void)
_ANECGetMutableOperationInfo
_ANECGetMutableWeightInfo
_ANECValidateMutableProcedureInfo
_APFS_FSYNC_ENTER
_APFS_FSYNC_ENTER_0
_APFS_WRITE_DRAIN
_APFS_WRITE_DRAIN_ALL
_APFS_WRITE_DRAIN_SECONDARY
_APFS_WRITE_ENTER
_APFS_WRITE_ENTER_0
_APFS_WRITE_ENTER_SECONDARY
_APFS_WRITE_ENTER_SECONDARY_0
_APFS_WRITE_IS_DRAIN_PENDING
_APFS_WRITE_RESUME_ALL
_AUCLog
_AVE_ComposePosStr
_AVE_ComposeStr_SVEMap
_AVE_FindByDevID
_AVE_FindByDevStr
_AVE_GetAbsTime
_AVE_Log_CheckConsole
_AVE_Log_CheckLevel
_AVE_Log_GetLevelStr
_AVE_Log_Init
_AVE_Log_PresetCfg
_AVE_Log_Set
_AVE_Order
_AVE_ParseDrvVersion
_AVE_Random
_AVE_RetCode2IOReturn
_AccelerateCrypto_AES_encrypt
_AccelerateCrypto_SHA1_compress
_AccelerateCrypto_SHA256_compress
_AccelerateCrypto_SHA256_compress_0
_AccelerateCrypto_SHA256_compress_arm64neon
_AccelerateCrypto_SHA512_compress
_AccelerateCrypto_ecb_AES_decrypt
_AccelerateCrypto_ecb_AES_encrypt
_AddFileExtent
_AddReferenceToRegistry
_AddToRegistry
_AllocateNode
_AppleIPCAudioServiceCommandAction_block_invoke_3
_AppleIPCAudioServiceReportAction_block_invoke
_AppleIPCAudioServiceResponseAction_block_invoke_2
_AppleNotificationQueueNotificationHandlerToBlock(void *,void *,int,AppleNotificationQueue *)
_AudioCodecGetProperty
_AudioCodecGetPropertyInfo
_AudioCodecInitialize
_AudioCodecProcessSinglePacket
_AudioCodecReset
_AudioCodecSetProperty
_AudioCodecUninitialize
_AudioComponentFindNext
_AudioComponentGetDescription
_AudioComponentGetVersion
_AudioComponentInstanceDispose
_AudioComponentInstanceNew
_BFirst8G
_BFirst8G_0
_BTClosePath
_BTGetUserData
_BTHasContiguousNodes
_BTInsertRecord
_BTIterateRecord
_BTIterateRecords
_BTOpenPath
_BTReleaseReserve
_BTReloadData
_BTReplaceRecord
_BTReserveSetup
_BTReserveSpace
_BTScanInitialize
_BTScanNextRecord
_BTSetUserData
_BTUpdateRecord
_BTUpdateReserve
_BTZeroUnusedNodes
_BestBlockSizeFit
_BilinearFilterH_chroma_vperm2_neon64
_BilinearFilterH_swift_chroma_neon
_BilinearFilterH_swift_neon
_BilinearFilterH_vperm2_neon64
_BilinearFilterV_neon64
_BlockDeallocate
_BlockFindAny
_BlockFindContiguous
_BlockFindKnown
_BlockMarkAllocatedInternal
_BlockMarkFreeInternal
_BlockMarkFreeUnused
_Block_size
_BuildCatalogKey
_BuildCatalogKeyUTF8
_CCEC_GENERATE_SCALAR_FIPS_EXTRABITS_WORKSPACE_N
_CCEC_GENERATE_SCALAR_PKA_WORKSPACE_N
_CCN_DIV_EUCLID_WORKSPACE_N
_CCRSA_CRT_POWER_BLINDED_WORKSPACE_N
_CCZP_GENERATE_NON_ZERO_ELEMENT_WORKSPACE_N
_CCZP_GENERATE_RANDOM_ELEMENT_WORKSPACE_N
_CCZP_MM_COMPUTE_R1R2_WORKSPACE_N
_CC_CAST_decrypt
_CC_CAST_encrypt
_CC_CAST_set_key
_CEBuffer_cmp
_CEContextIsSubset
_CEContextQuery
_CECreateStringOpInplace
_CEDeserialize
_CEGetErrorString
_CESizeDeserialization
_CESizeXMLSerialization
_CEValidate
_CLEAR_REINIT_BITS
_CMSAttributeParseAppleHashAgility
_CMSAttributeParseContentType
_CMSAttributeParseMessageDigest
_CMSAttributeParseSMIMECapabilities
_CMSAttributeParseSigningTime
_CMSParseContentInfoSignedData
_CMSParseSignerInfos
_CMSVerify
_CMSVerifyAndReturnSignedData
_CTEvaluateAMFICodeSignatureCMS
_CTEvaluateAMFICodeSignatureCMSPubKey
_CTEvaluateAMFICodeSignatureCMS_MaxDigestType
_CTEvaluateCertsForPolicy
_CTEvaluateProvisioningProfile
_CTImg4CreateContext
_CTImg4VerifyChain
_CTImg4VerifySignatureWithPublicKey
_CTParseContentInfoSignedData
_CTParseSignerInfos
_CalculateFinalWeightsFMA
_CheckInsertParams
_CheckUnmappedBytes
_CleanPoC_DcacheRegion_Force
_CleanPoC_DcacheRegion_Force_nopreempt
_CleanPoC_DcacheRegion_internal
_CompareDeviceUsage
_CompareDeviceUsagePairs
_CompareExtendedCatalogKeys
_CompareExtentKeysPlus
_CompareNumberPropertyArray
_CompareNumberPropertyArrayWithMask
_CompareNumberPropertyMask
_CompareProductID
_CompareProperty
_CompareProperty_0
_ConvertUnicodeToUTF8Mangled
_CopyCharacteristicsFromProvider
_CopyRegisteredExtendedIdentifier
_CopyVendorSpecificIdentifier
_CountFilenameExtensionChars
_CreateDecomposedURLWithStrictnessLevel
_CreateExtentRecord
_CreateFFTSetup
_CreatePFA128Setup
_CreatePFA128SetupStrided
_DERDecodeItemPartialBufferGetLength
_DERDecodeItemPartialBufferGetLength_0
_DERDecodeItemPartialBufferGetLength_1
_DERDecodeItemPartialBufferGetLength_2
_DERDecodeSeqContentInit
_DERDecodeSeqContentInit_0
_DERDecodeSeqContentInit_1
_DERDecodeSeqInit
_DERDecodeSeqInit_0
_DERDecodeSeqInit_1
_DERDecodeSeqNext
_DERDecodeSeqNext_0
_DERDecodeSeqNext_1
_DERDecodeSeqNext_2
_DERImg4Decode
_DERImg4DecodeContentFindItemWithTag
_DERImg4DecodeContentFindItemWithTag_0
_DERImg4DecodeContentFindItemWithTag_1
_DERImg4DecodeFindProperty
_DERImg4DecodeFindPropertyInSequence
_DERImg4DecodeFindPropertyInSequence_0
_DERImg4DecodeFindProperty_0
_DERImg4DecodeManifestCommon
_DERImg4DecodeManifestCommon_0
_DERImg4DecodeManifestCommon_1
_DERImg4DecodeParseManifestProperties
_DERImg4DecodeParseManifestProperties_0
_DERImg4DecodePayload
_DERImg4DecodePayloadCompression
_DERImg4DecodePayloadCompression_0
_DERImg4DecodePayloadProperties
_DERImg4DecodePayloadProperties_0
_DERImg4DecodePayloadWithProperties
_DERImg4DecodePayloadWithProperties_0
_DERImg4DecodePayload_0
_DERImg4DecodeProperty
_DERImg4DecodePropertyWithItem
_DERImg4DecodePropertyWithItem_0
_DERImg4DecodeProperty_0
_DERImg4DecodeProperty_1
_DERImg4DecodeRestoreInfo
_DERImg4DecodeRestoreInfo_0
_DERImg4DecodeTagCompare
_DERImg4DecodeTagCompare_0
_DERImg4DecodeTagCompare_1
_DERImg4Decode_0
_DEROidCompare
_DEROidCompare_0
_DERParseBitString
_DERParseBitString_0
_DERParseBoolean
_DERParseBoolean_0
_DERParseInteger
_DERParseInteger64
_DERParseInteger64_0
_DERParseInteger64_1
_DERParseInteger64_2
_DERParseInteger_0
_DERParseInteger_1
_DERParseInteger_2
_DERParseSequenceContentToObject
_DERParseSequenceContentToObject_0
_DERParseSequenceContentToObject_1
_DERParseSequenceToObject
_DERParseSequenceToObject_0
_DERParseSequenceToObject_1
_DFT60_Final4
_DFT60_Front5
_DFT60_Internal3
_DFT90_Final3
_DFT90_Front3
_DFT90_Internal2x5
_DFT90_Internal5x2
_DFTPermute
_DFTRSConvertBackward
_DFTRSConvertBackwardGenericUnitStride
_DFTRSConvertForward
_DFTRSConvertForwardGenericUnitStride
_DFT_zopFFTForward
_DFT_zopFFTInverse
_DFT_zopGeneral
_DFT_zopPFAForward
_DFT_zopPFAInverse
_DFT_zopPFAStrided
_DI_UDIFFileHeaderBigToHost
_DI_UDIFRunBigToHost
_DTFindEntry
_De20DmHh3jVChIyH
_DeleteExtentRecord
_DeleteExtents
_DeleteMultiFFT
_DeleteOffset
_DeleteRecord
_DeleteTree
_DerivePermissionSummary
_DeserializeAddCredentialType
_DestroyFFT
_DestroyGeneral
_DestroyPFA
_EQlZPp
_Env_GetRequiredClientEntitlementForSet
_ExchangeFileIDs
_Exec_ACMDeserializeEnvironmentVariableType
_ExtendBTree
_ExtendBTreeFile
_ExtendFileC
_F
_FFT1024_splitA
_FFT1Big
_FFT2048_splitA
_FFT256_splitA
_FFT256_splitA_0
_FFT512_splitA
_FFT64_splitA
_FFTCSExtendWeights
_FFTCSForPFAs
_FFTCSForPFAv
_FFTCyclone
_FFTCyclone_0
_FFTFastSeparated
_FFTFastSeparated_0
_FFTFastSeparated_1
_FFTGeneral
_FFTShort
_FFTTwister
_FFTvec4
_FPDebugDisplayStatusMsg
_F_0
_F_1
_FastUnicodeCompare
_Final4_1024_split
_Final4_128_split
_Final4_2048_split
_Final4_256_split
_Final4_32_split
_Final4_512_split
_Final4_64_split
_FinalPass
_FindExtentRecord
_FindIteratorPosition
_FindNextLeafNode
_FlushCatalog
_FlushExtentFile
_Flush_Dcache
_FreeNode
_Front4_1024_split
_Front4_128_split
_Front4_2048_split
_Front4_256_split
_Front4_512_split
_Front4_64_split
_Front8_32_split
_GLOBAL__sub_I_OSDebug.cpp
_GLOBAL__sub_I_bootstrap.cpp
_GetBTreeBlock
_GetCore
_GetEmbeddedFileID
_GetFileInfo
_GetLogicalBlockSize
_GetMapNode
_GetNewNode
_GetRecordByIndex
_HACK_RingBuffer::append(uchar *,uint)
_HACK_RingBuffer::free(void)
_HACK_RingBuffer::initWith(uint)
_HACK_RingBuffer::read(uio *)
_HACK_RingBuffer::withCapacity(uint)
_HIDCloseReportDescriptor
_HIDCountDescriptorItems
_HIDGetCapabilities
_HIDGetCollectionExtendedNodes
_HIDGetSpecificButtonCapabilities
_HIDGetSpecificValueCapabilities
_HIDHasUsage
_HIDIsButton
_HIDIsVariable
_HIDNextItem
_HIDOpenReportDescriptor
_HIDParseDescriptor
_HIDProcessCollection
_HIDProcessEndCollection
_HIDProcessGlobalItem
_HIDProcessLocalItem
_HIDProcessMainItem
_HIDProcessReportItem
_HIDUsageInRange
_HeadTailLog2
_HeadTruncateFile
_Hpu7ZBOFQYIwvPDYn9
_IO8Log
_IO8Loghv
_IOAVAudioGetChannelAllocationDefault
_IOAVAudioGetChannelLayoutData
_IOAVAudioGetSpeakerAllocationMask
_IOAVAudioLinkGetMaxStreamChannelCount
_IOAVAudioLinkGetTransferTime
_IOAVAudioLinkSampleRateForFormat
_IOAVAudioSampleRateEnum
_IOAVAudioSpeakerString
_IOAVCombinedCPCapabilities
_IOAVCommandString
_IOAVCompareVideoColorData
_IOAVCompareVideoLinkData
_IOAVCompareVideoTimingData
_IOAVContentProtectionProtocolString
_IOAVEDIDIsStandard
_IOAVEDIDIsStandard_0
_IOAVEventLogEventTypeString
_IOAVGetCEAVideoShortIDWithHDMIVIC
_IOAVGetCEAVideoTimingDataWithShortID
_IOAVGetGTFVideoTimingData
_IOAVGetVideoTimingDataByID
_IOAVGetVirtualVideoLinkData
_IOAVHDMICharacterRate
_IOAVHDMIClockRate
_IOAVInfoFrameTypeString
_IOAVLuminanceWithCTA861GCodeValue
_IOAVProtectionTypeString
_IOAVProtectionTypeString_0
_IOAVStandardTypeString
_IOAVTransportString
_IOAVVideoActiveFormatAspectRatio
_IOAVVideoColorBitDepth
_IOAVVideoColorBitDepthScalar
_IOAVVideoColorimetryIsValid
_IOAVVideoColorimetryString
_IOAVVideoColorimetryString_0
_IOAVVideoLinkIsDolbyVision
_IOAVVideoLinkModeString
_IOAVVideoLinkModeString_0
_IOAVVideoLinkRequiresHDMIScrambling
_IOAVVideoPixelEncodingIsDolbyVision
_IOAVVideoTimingGetActivePixelClock
_IOAVVideoTimingGetBlankingStyle
_IOAVVideoTimingGetITSource
_IOAVVideoTimingGetPixelClock
_IOAVVideoTimingIsVideoOptimized
_IOAVVideoTimingSetPixelClock
_IOAVVideoTimingSetSyncRate
_IOAVVideoTimingUpdateSyncRates
_IOAVVideoTimingUpdateTotals
_IOAVVideoTimingVideoOptimizedDelta
_IOAlignmentToSize
_IOBSDGetPlatformUUID
_IOBSDNameMatching
_IOBSDRegistryEntryGetData
_IOCatalogueMatchingDriversPresent
_IOCopyLogNameForPID
_IODTFreeLoaderInfo
_IODTGetDefault
_IODTGetLoaderInfo
_IOFindNameForValue
_IOFindValueForName
_IOFlushProcessorCache
_IOFree
_IOGetBootObjectsPath
_IOGetBootUUID
_IOGetBootUUID_0
_IOGetBootUUID_1
_IOGetVMMPresent
_IOHDCPReceiverIDToScalar
_IOIteratePageableMaps
_IOKitBSDInit
_IOKitKernelLogBuffer
_IOMappedRead16
_IOMappedRead32
_IOMappedRead64
_IOMappedRead8
_IOMappedWrite16
_IOMappedWrite32
_IOMappedWrite64
_IOMappedWrite8
_IOMapperIOVMAlloc
_IOMapperIOVMFree
_IOMapperInsertPage
_IOMediaBSDClientGetThrottleMask(IOMedia *)
_IOMediaWaitQuietOrInactive(IOMedia *)
_IOMemoryDescriptorMixedData::_IOMemoryDescriptorMixedData(OSMetaClass const*)
_IOMemoryDescriptorMixedData::_IOMemoryDescriptorMixedData(void)
_IOMemoryDescriptorMixedData::withCapacity(ulong)
_IOMemoryDescriptorMixedData__free
_IOMemoryTag
_IONVMeDebugAssert
_IONetworkNamePrefixMatching
_IOOpenServiceIterator::getNextObject(void)
_IOOpenServiceIterator::isValid(void)
_IOOpenServiceIterator::reset(void)
_IOOpenServiceIterator__free
_IOPMCopySleepWakeUUIDKey
_IOPageableMapForAddress
_IOPolledFileFlush
_IOProcessorChannelCreate
_IOProcessorChannelCreate_0
_IOProcessorChannelCreate_0_0
_IOProcessorChannelCreate_1
_IOProcessorChannelReceive
_IOProcessorChannelReceive64
_IOProcessorChannelReceive_0
_IOProcessorChannelReceive_0_0
_IOProcessorChannelSend
_IOProcessorChannelSend64
_IOProcessorChannelSend_0
_IOProcessorChannelSend_0_0
_IOProcessorChannelUnidirectionalReceive
_IOProcessorChannelUnidirectionalReceive64
_IOProcessorChannelUnidirectionalReceive_0
_IOProcessorChannelUnidirectionalReceive_0_0
_IOProcessorInit_0
_IOProcessorInit_0_0
_IOProcessorInit_0_1
_IOProcessorInit_0_2
_IORPCMessageFromMach
_IORamDiskBSDRoot
_IORecordProgressBackbuffer
_IORecursiveLockFree
_IORecursiveLockSleep
_IORecursiveLockSleepDeadline
_IORegistrySetOSBuildVersion
_IOSKMapperCreate
_IOSKMapperGetAddress
_IOServiceInterestNotifier__disable
_IOServiceInterestNotifier__enable_bool
_IOServiceInterestNotifier__free
_IOServiceInterestNotifier__remove
_IOServiceInterestNotifier__wait
_IOServiceNotifier::MetaClass::MetaClass(void)
_IOServiceNotifier__disable
_IOServiceNotifier__enable_bool
_IOServiceNotifier__free
_IOServiceNotifier__remove
_IOServiceNotifier__wait
_IOServicePublishResource
_IOServiceStateNotification::MetaClass::MetaClass(void)
_IOServiceWaitForMatchingResource
_IOSetCoreAnalyticsSendEventProc
_IOSetRecoveryBoot
_IOSizeToAlignment
_IOTimeSyncTimeMachAbsolute(void)
_IOTimeSyncTimePMGRArm(void)
_IOVnodeGetEntitlement
_IOVnodeHasEntitlement
_Img4DecodeComputeDigest
_Img4DecodeComputeDigest_0
_Img4DecodeComputeDigest_1
_Img4DecodeCopyPayloadDigest
_Img4DecodeEvaluateCertificatePropertiesInternal
_Img4DecodeEvaluateCertificatePropertiesInternal_0
_Img4DecodeEvaluateCertificatePropertiesInternal_1
_Img4DecodeEvaluateDictionaryProperties
_Img4DecodeEvaluateDictionaryProperties_0
_Img4DecodeGetObjectProperty
_Img4DecodeGetObjectPropertyBoolean
_Img4DecodeGetObjectPropertyData
_Img4DecodeGetObjectPropertyInteger
_Img4DecodeGetObjectPropertyInteger64
_Img4DecodeGetPayload
_Img4DecodeGetPropertyBoolean
_Img4DecodeGetPropertyBoolean_0
_Img4DecodeGetPropertyData
_Img4DecodeGetPropertyData_0
_Img4DecodeGetPropertyInteger
_Img4DecodeGetPropertyInteger64
_Img4DecodeGetPropertyInteger64_0
_Img4DecodeInit
_Img4DecodeInitManifestCommon
_Img4DecodeInitManifestCommon_0
_Img4DecodeInitPayload
_Img4DecodeInit_0
_Img4DecodePayloadExists
_Img4DecodePayloadExists_0
_Img4DecodePerformTrustEvaluatation
_InsertKeyRecord
_InsertLevel
_InsertNode
_InsertRecord
_InsertTree
_Internal128_Final4_split
_Internal128_Front4_split
_Internal128_Internal8_split
_Internal16_split
_Internal32_split
_Internal4_split
_Internal64_Final4_split
_Internal64_Front4_split
_Internal64_Internal4_split
_Internal8_split
_InvalidatePoU_IcacheRegion
_Inverse
_JmmzRQjC7QF6ZQbBA
_Kf8ganBFam76F
_LZFSEIBootBufferCopy
_LZFSEIBootBufferCopy_0
_LZFSEIBootBufferCopy_1
_LZFSEIBootBufferPush
_LZFSEIBootBufferPushN
_LZFSEIBootBufferPushN_0
_LZFSEIBootBufferPushN_1
_LZFSEIBootBufferPush_0
_LZFSEIBootBufferPush_1
_LibCall_ACMGetEnvironmentVariable
_LibCall_ACMPing
_LibCall_ACMPing_0
_LibCall_ACMPing_1
_LibCall_ACMSetEnvironmentVariable
_LibCall_ACMTRMLoadState
_LibCall_ACMTRMSaveState
_LibCall_BuildCommand
_LibCall_BuildCommand_0
_LibCall_BuildCommand_1
_LocateCatalogNodeByKey
_LocateCatalogRecord
_MD5Final
_MD5Init
_MD5Update
_MTBU_ConstructZ2BootloaderDATAPacket
_MTBinaryV4HeaderUnpack
_MTCompactV7HeaderUnpack
_MTPrintTransaction(uchar *,ushort,char const*)
_MT_checksum16
_MacToVFSError
_MapFileBlockC
_MatchPropertyTable
_MetaZoneFreeBlocks
_ModifyBlockStart
_MoveData
_MoveExtents
_NewMultiFFT
_NewRSWeights
_NodesAreContiguous
_NxUj27MuIpS68FLnG
_OSBacktrace
_OSKextCreateRequest(char const*,OSSharedPtr<OSDictionary> &)
_OSKextLog
_OSKextResetPgoCountersUnlock
_OSKextSetRequestArgument(OSDictionary *,char const*,OSMetaClassBase *)
_OSKextVersionGetString
_OSPrintBacktrace
_OSPrintMemory
_OSRuntimeSignStructors
_OSRuntimeSignStructorsInFileset
_OSRuntimeUnloadCPPForSegment
_OSSwapInt16(ushort)
_OSTestAndClear
_OSTestAndSet
_OSValueObject<H11ANEIntermediateBufferSurfaceParamsStruct>::free(void)
_OSValueObject<H11ANEIntermediateBufferSurfaceParamsStruct>::init(void)
_OSValueObjectWithValue<ANEIOReporterStruct *>(ANEIOReporterStruct * const&)
_OSValueObjectWithValue<H11ANEClientContextStruct>(H11ANEClientContextStruct const&)
_OSValueObjectWithValue<H11ANESharedClientBufferArgsStruct>(H11ANESharedClientBufferArgsStruct const&)
_PEGetMachineName
_PEGetModelName
_PEGetPlatformEpoch
_PEGetProductName
_PEGetTargetName
_PEReadNVRAMProperty
_PERemoveNVRAMProperty
_PESavePanicInfo
_PESetGMTTimeOfDay
_PESyncNVRAM
_PEWriteNVRAMBooleanProperty
_PE_call_timebase_callback
_PE_consistent_debug_register
_PE_cpu_halt
_PE_cpu_machine_init
_PE_cpu_machine_quiesce
_PE_cpu_perfmon_interrupt_enable
_PE_cpu_signal_cancel
_PE_cpu_signal_deferred
_PE_cpu_start
_PE_create_console
_PE_current_console
_PE_enter_debugger
_PE_get_default
_PE_get_kc_baseaddress
_PE_get_kc_header
_PE_get_kc_header_0
_PE_get_primary_kc_format
_PE_get_random_seed
_PE_handle_platform_error
_PE_i_can_has_debugger
_PE_init_kprintf
_PE_init_platform
_PE_init_printf
_PE_init_socd_client
_PE_parse_boot_argn_internal
_PE_register_timebase_callback
_PE_reset_all_kc_vp
_PE_reset_kc_header
_PE_save_buffer_to_vram
_PE_stub_poll_input
_PIKDecryptWithFixedSharedKey
_PIKDecryptWithFixedSharedKey_0
_PRF_EVAL
_Prn3cCdCvCjGlvZGIJqWqiZK
_QIWEiU
_RUD5XlDtQjk
_ReadBitmapBlock
_ReadBitmapRange
_RecomposeURL
_ReduceFull
_ReleaseBTreeBlock
_ReleaseBitmapBlock
_ReleaseExtents
_ReleaseMetaFileVNode
_ReleaseScanBitmapRange
_RemoveFromRegistry
_ReplaceBTreeRecord
_ResetVCBFreeExtCache
_Rh0FYVn9ULY2gWmEr4NwbNV
_RotateLeft
_SEPARTExtract
_SEPARTGetSize
_SEPARTPayloadDecode
_SEPART_decode
_SHA1Final
_SHA256_Final
_SHA256_Init
_SHA256_Update
_SHA384_Init
_SHA512_Init
_SMDLog
_ScaleBilinear_swift_neon
_ScanForMediumType
_ScanUnmapBlocks
_SearchExtentFile
_SearchNode
_SearchTree
_SecureDTEnterEntry
_SecureDTGetProperty
_SecureDTGetPropertyRegion
_SecureDTInit
_SecureDTInitEntryIterator
_SecureDTIterateEntries
_SecureDTIterateProperties
_SecureDTLookupEntry
_SetBTreeBlockSize
_TdtbU9WbbSyE1sdsj
_TruncateExtents
_TruncateFileC
_TrySimpleReplace
_UBCINFOEXISTS
_UPDATE_CVKWQ
_URLRemoveEscapes
_UeFdbi
_UngetCore
_UpdateAllocLimit
_UpdateExtentRecord
_UpdateHeader
_Util_KeybagLockStateToEnvVar
_V2F1SYee
_V9Z6DQ1D8vW2ehH1G1m
_VFS_FHTOVP
_VFS_GETATTR
_VFS_IOCTL
_VFS_QUOTACTL
_VFS_SETATTR
_VFS_START
_VFS_SYNC
_VFS_UNMOUNT
_VFS_VGET_SNAPDIR
_VFS_VPTOFH
_VM_PRESSURE_CRITICAL_TO_WARNING
_VM_PRESSURE_NORMAL_TO_WARNING
_VM_PRESSURE_WARNING_TO_CRITICAL
_VM_PRESSURE_WARNING_TO_NORMAL
_VerifyHeader
_WKdm_compress_16k
_WKdm_compress_4k
_WKdm_decompress_16k
_WKdm_decompress_4k
_WriteRSWeights
_X509CertificateCheckSignature
_X509CertificateCheckSignatureDigest
_X509CertificateCheckSignatureWithPublicKey
_X509CertificateParseImplicit
_X509CertificateParseKey
_X509CertificateParseSPKI
_X509CertificateParseWithExtension
_X509CertificateSubjectNameGetCommonName
_X509ChainBuildPath
_X509ChainCheckPathWithOptions
_X509ChainGetAppleRootUsingKeyIdentifier
_X509ChainGetBAARootUsingKeyIdentifier
_X509ChainGetCertificateUsingKeyIdentifier
_X509ChainParseCertificateSet
_X509MatchSignatureAlgorithm
_X509PolicySetFlagsForCommonNames
_X509PolicySetFlagsForRoots
_Xdeallocate
_Xhost_page_size
_Xhost_reboot
_Xhost_register_mach_voucher_attr_manager
_Xhost_register_well_known_mach_voucher_attr_manager
_Xhost_request_notification
_Xhost_set_exception_ports
_Xhost_set_special_port_from_user
_Xhost_virtual_physical_table_info
_Xinherit
_Xio_catalog_get_gen_count
_Xio_catalog_reset
_Xio_server_version
_Xmach_eventlink_destroy
_Xmach_eventlink_disassociate
_Xmach_zone_force_gc
_Xmach_zone_get_btlog_records
_Xmach_zone_get_zlog_zones
_Xprocessor_set_create
_Xprotect
_Xtask_resume2
_ZinComputeGetBufferType
_ZinComputeGetProgramSections
_ZinComputeInitGenericSection
_ZinComputeInitGenericSectionHeader
_ZinComputeInitOperationSection
_ZinComputeInitOperationSectionHeader
_ZinComputeInitProcedureSection
_ZinComputeInitProcedureSectionHeader
_ZinComputeInitSneProgram
_ZinComputeInitTextPropertySection
_ZinComputeInitTextPropertySectionHeader
_ZinComputeLookupBufferBySection
_ZinComputeProgramCompareCompilerVersion
_ZinComputeProgramDestroy
_ZinComputeProgramDestroyInitInfo
_ZinComputeProgramFindFvmlib
_ZinComputeProgramFindSectionByIndex
_ZinComputeProgramGetANEThreadFlavor
_ZinComputeProgramGetCpuSubtype
_ZinComputeProgramGetIndexOfCompilationUnitFromDebugInfo
_ZinComputeProgramGetInitSection
_ZinComputeProgramGetMCacheSize
_ZinComputeProgramGetModelIdent
_ZinComputeProgramGetNamesFromMultiPlaneLinear
_ZinComputeProgramGetNamesFromMultiPlaneTiledCompressed
_ZinComputeProgramGetNamesFromSinglePlaneTiledCompressed
_ZinComputeProgramGetNamesFromSinglePlaneUncompressed
_ZinComputeProgramGetProcedureEvents
_ZinComputeProgramGetProcedureNameFromThread
_ZinComputeProgramGetProcedureTDCount
_ZinComputeProgramGetSectionWithName
_ZinComputeProgramHasCompressedIOProcedure
_ZinComputeProgramHasMultiPlaneIOProcedure
_ZinComputeProgramHasMutableOperation
_ZinComputeProgramHasMutableProcedure
_ZinComputeProgramMake
_ZinComputeProgramMakeInitInfo
_ZinComputeProgramUpdateMutables
_ZinComputeProgramUpdatePrecheck
_ZinComputeProgramValidateNamesFromMultiPlaneLinear
_ZinComputeProgramValidateNamesFromMultiPlaneTiledCompressed
_ZinComputeProgramValidateNamesFromSinglePlaneTiledCompressed
_ZinComputeProgramValidateNamesFromSinglePlaneUncompressed
_ZinIsOutsideBounds
_ZinIsStringOutsideBounds
__Block_extended_layout
__Block_has_signature
__Block_layout
__Block_signature
__HIDLogCategory
__IOAVGetCEAVideoShortIDWithData(IOAVVideoTimingData const*,bool)
__IOAVGetStandardVideoTimingData(IOAVVideoTimingStandard,uint,uint,int,bool,IOAVVideoTimingData *,IOAVVideoBlankingStyle)
__IOAVLog::findClassDict(IOService *)
__IOAVLog::getEventLogCommandMask(IOService *,ulong long *)
__IOAVLog::getEventLogMaxCapacity(IOService *,uint *)
__IOAVLog::getLogLevel(IOService *)
__IOAVLog::getLogLevel(char const*)
__IOAVLog::getLogLevelMask(IOService *,IOAVLogLevel)
__IOAVLog::getLogLevelMask(char const*,IOAVLogLevel)
__IOAVLog::getMutableClassDict(char const*)
__IOAVLog::newClassDict(void)
__IOAVLog::setEventLogCommandMask(char const*,ulong long)
__IOAVLog::setLogLevel(char const*,uint)
__IOAVLog::setLogLevel(uint)
__IOAVLog::setLogLevelMask(char const*,uint,uint)
__IOAVLogMessage(os_log_type_t,uint,IORegistryEntry const*,char const*,void const*,ulong,char const*,...)
__IOHDCPLogMessage(os_log_type_t,char const*,char const*,...)
__Img4DecodeInitAsManifest
__Img4DecodePerformTrustEvaluationWithCallbacksInternal
__Img4DecodePerformTrustEvaluationWithCallbacksInternal_0
__KLDDATA_TermFunc_0
__LAST_InitFunc_0
__LAST_InitFunc_0_0
__OSHashTable::Hash(OSData *)
__OSHashTable::Hash(OSString *)
__OSHashTable::InsertHashEntry(__OSHashEntry *)
__OSHashTable::RemoveHashEntry(__OSHashEntry *)
__OSSwapInt32
__X_mach_make_memory_entry
__Xbehavior_set
__Xcopy
__Xexception_raise
__Xexception_raise_state
__Xexception_raise_state_identity
__Xhost_create_mach_voucher
__Xhost_default_memory_manager
__Xhost_get_UNDServer
__Xhost_get_boot_info
__Xhost_get_clock_control
__Xhost_get_clock_service
__Xhost_get_exception_ports
__Xhost_get_io_master
__Xhost_get_special_port_from_user
__Xhost_info
__Xhost_kernel_version
__Xhost_lockgroup_info
__Xhost_priv_statistics
__Xhost_processor_info
__Xhost_processor_sets
__Xhost_processors
__Xhost_set_UNDServer
__Xhost_set_atm_diagnostic_flag
__Xhost_set_multiuser_config_flags
__Xhost_statistics64_from_user
__Xhost_statistics_from_user
__Xhost_swap_exception_ports
__Xio_async_method_scalarI_scalarO
__Xio_async_method_scalarI_structureI
__Xio_async_method_scalarI_structureO
__Xio_async_method_structureI_structureO
__Xio_catalog_get_data
__Xio_catalog_module_loaded
__Xio_catalog_send_data
__Xio_connect_add_client
__Xio_connect_async_method
__Xio_connect_get_notification_semaphore
__Xio_connect_get_service
__Xio_connect_method
__Xio_connect_method_scalarI_scalarO
__Xio_connect_method_scalarI_structureI
__Xio_connect_method_scalarI_structureO
__Xio_connect_method_structureI_structureO
__Xio_connect_method_var_output
__Xio_connect_set_notification_port
__Xio_connect_set_notification_port_64
__Xio_connect_set_properties
__Xio_device_tree_entry_exists_with_name
__Xio_iterator_is_valid
__Xio_iterator_next
__Xio_iterator_reset
__Xio_object_conforms_to
__Xio_object_get_bundle_identifier
__Xio_object_get_class
__Xio_object_get_retain_count
__Xio_object_get_superclass
__Xio_registry_create_iterator
__Xio_registry_entry_create_iterator
__Xio_registry_entry_from_path
__Xio_registry_entry_from_path_ool
__Xio_registry_entry_get_child_iterator
__Xio_registry_entry_get_location_in_plane
__Xio_registry_entry_get_name
__Xio_registry_entry_get_name_in_plane
__Xio_registry_entry_get_parent_iterator
__Xio_registry_entry_get_path
__Xio_registry_entry_get_path_ool
__Xio_registry_entry_get_properties
__Xio_registry_entry_get_properties_bin
__Xio_registry_entry_get_properties_bin_buf
__Xio_registry_entry_get_property
__Xio_registry_entry_get_property_bin
__Xio_registry_entry_get_property_bin_buf
__Xio_registry_entry_get_property_bytes
__Xio_registry_entry_get_property_recursively
__Xio_registry_entry_get_registry_entry_id
__Xio_registry_entry_in_plane
__Xio_registry_entry_set_properties
__Xio_registry_get_root_entry
__Xio_registry_iterator_enter_entry
__Xio_registry_iterator_exit_entry
__Xio_service_acknowledge_notification
__Xio_service_add_interest_notification
__Xio_service_add_interest_notification_64
__Xio_service_add_notification
__Xio_service_add_notification_64
__Xio_service_add_notification_bin
__Xio_service_add_notification_bin_64
__Xio_service_add_notification_ool
__Xio_service_add_notification_ool_64
__Xio_service_close
__Xio_service_get_authorization_id
__Xio_service_get_busy_state
__Xio_service_get_matching_service
__Xio_service_get_matching_service_bin
__Xio_service_get_matching_service_ool
__Xio_service_get_matching_services
__Xio_service_get_matching_services_bin
__Xio_service_get_matching_services_ool
__Xio_service_get_state
__Xio_service_match_property_table
__Xio_service_match_property_table_bin
__Xio_service_match_property_table_ool
__Xio_service_request_probe
__Xio_service_set_authorization_id
__Xio_service_wait_quiet
__Xkext_request
__Xmach_exception_raise
__Xmach_exception_raise_identity_protected
__Xmach_exception_raise_state
__Xmach_exception_raise_state_identity
__Xmach_memory_entry_purgable_control
__Xmach_memory_info
__Xmach_memory_object_memory_entry
__Xmach_memory_object_memory_entry_64
__Xmach_port_get_attributes_from_user
__Xmach_port_get_context_from_user
__Xmach_port_get_set_status_from_user
__Xmach_port_kernel_object_from_user
__Xmach_port_kobject_description_from_user
__Xmach_port_kobject_from_user
__Xmach_port_space_info_from_user
__Xmach_vm_copy
__Xmach_vm_map_external
__Xmach_vm_msync
__Xmach_vm_page_info
__Xmach_vm_page_query
__Xmach_vm_page_range_query
__Xmach_vm_protect
__Xmach_vm_purgable_control_external
__Xmach_vm_read
__Xmach_vm_read_list
__Xmach_vm_read_overwrite
__Xmach_vm_region
__Xmach_vm_region_recurse
__Xmach_vm_remap_external
__Xmach_vm_remap_new_external
__Xmach_vm_write
__Xmach_voucher_attr_control_create_mach_voucher
__Xmach_zone_info
__Xmach_zone_info_for_largest_zone
__Xmach_zone_info_for_zone
__Xmake_memory_entry
__Xmake_memory_entry_64
__Xmap
__Xmap_64
__Xmap_page_query
__Xmapped_pages_info
__Xmemory_object_change_attributes
__Xmemory_object_cluster_size
__Xmemory_object_destroy
__Xmemory_object_get_attributes
__Xmemory_object_lock_request
__Xmemory_object_page_op
__Xmemory_object_range_op
__Xmemory_object_recover_named
__Xmemory_object_release_name
__Xmemory_object_synchronize_completed
__Xmsync
__Xprocessor_set_default
__Xpurgable_control
__Xread
__Xread_list
__Xread_overwrite
__Xregion
__Xregion_64
__Xregion_info
__Xregion_info_64
__Xregion_recurse
__Xregion_recurse_64
__Xremap
__Xtask_get_exception_ports_info
__Xtask_get_special_port_from_user
__Xtask_identity_token_get_task_port
__Xtask_info_from_user
__Xtask_threads_from_user
__Xthread_get_exception_ports_from_user
__Xthread_get_exception_ports_info
__Xthread_get_special_port_from_user
__Xupl_abort
__Xupl_abort_range
__Xupl_commit
__Xupl_commit_range
__Xvm_allocate_cpm
__Xvm_wire
__Xwrite
__Z16OSDynamicPtrCastI8OSString8OSObjectE11OSSharedPtrIT_ERKS2_IT0_E_0_0
__Z30priority_queue_entry_increasedP24priority_queue_sched_maxP26priority_queue_entry_sched_0_0
__Z30priority_queue_entry_increasedP24priority_queue_sched_maxP26priority_queue_entry_sched_0_1
__Z30priority_queue_entry_increasedP24priority_queue_sched_maxP26priority_queue_entry_sched_0_2
__Z30priority_queue_entry_increasedP24priority_queue_sched_maxP26priority_queue_entry_sched_0_3
__Z30priority_queue_entry_increasedP24priority_queue_sched_maxP26priority_queue_entry_sched_0_4
__ZL16_flushPeerQueuesP8OSObjectP22IO80211QueueDescriptorPvP13mapExtraParam_0_0
__ZL18getAssociateResultP17IO80211ControllerP16IO80211InterfaceP23IO80211VirtualInterfaceP21IO80211InfraInterfaceP13apple80211reqb_0_0
__ZL18getAssociateResultP17IO80211ControllerP16IO80211InterfaceP23IO80211VirtualInterfaceP21IO80211InfraInterfaceP13apple80211reqb_0_0_0
OSRuntimeSignStructorsInSegment(segment_command_64*)
initAMFI(AppleMobileFileIntegrity* __ptrauth<2u, true, 17928u>*)
__ZN10AppleA7IOP13_inboxHandlerEP22IOInterruptEventSource_vfpthunk_
__ZN10AppleA7IOP14_outboxHandlerEP22IOInterruptEventSource_vfpthunk_
AppleCT821::convertKey(ALSCalibrationData2_2*)
__ZN10AppleICA6018_powerNotificationEPvjP9IOServiceP30IOPowerStateChangeNotificationm_vfpthunk_
__ZN10AppleICA6023_powerNotificationGatedEjP9IOServiceP30IOPowerStateChangeNotification_vfpthunk_
__ZN10AppleICA6026_priorityPowerNotificationEPvjP9IOServiceP30IOPowerStateChangeNotificationm_vfpthunk_
__ZN10IOWorkLoop10threadMainEv_vfpthunk_
__ZN10IOWorkLoop13_maintRequestEPvS0_S0_S0__vfpthunk_
__ZN10MsrAPIODMA15interruptFilterEP8OSObjectP28IOFilterInterruptEventSource_vfpthunk_
__ZN10MsrAPIODMA16interruptHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN11AppleARMNMI15handleInterruptEPvP9IOServicei_vfpthunk_
__ZN11AppleSocHot23_internalSOCHOT0HandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN11AppleSocHot27_externalSOCHOT0ExitHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN11AppleUSBHub10closeGatedEP9IOServicej_vfpthunk_
__ZN11AppleUSBHub14interruptRetryEP18IOTimerEventSource_vfpthunk_
__ZN11AppleUSBHub17enableIdlingGatedEv_vfpthunk_
__ZN11AppleUSBHub17interruptOccurredEPvij_vfpthunk_
__ZN11AppleUSBHub18setPropertiesGatedEP8OSObject_vfpthunk_
__ZN11AppleUSBHub19setPortFeatureGatedEtt_vfpthunk_
__ZN11AppleUSBHub21clearPortFeatureGatedEjt_vfpthunk_
__ZN11AppleUSBHub21deviceResetThreadCallEP11thread_call_vfpthunk_
__ZN11AppleUSBHub21powerAssertionTimeoutEP18IOTimerEventSource_vfpthunk_
__ZN11AppleUSBHub22enableIdlingThreadCallEP11thread_call_vfpthunk_
__ZN11AppleUSBHub22firstMatchNotificationEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN11AppleUSBHub26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN11AppleUSBHub32firstMatchNotificationThreadCallEP11thread_call_vfpthunk_
__ZN11AppleUSBHub33allocateDownstreamBusCurrentGatedEP9IOServiceRjS2__vfpthunk_
__ZN11AppleUSBHub33systemPowerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN11AppleUSBHub37firstMatchNotificationThreadCallGatedEv_vfpthunk_
__ZN11AppleUSBHub9openGatedEP9IOServicejPv_vfpthunk_
IOAVService::processEDIDCEA1(_EDIDCEA_1*)
IOAVService::processEDIDCEA2(_EDIDCEA_2*)
__ZN11IOAVService18readI2CRegisterSetEPK15IOAVRegisterSetPKNS0_5RangeEPvS6__vfpthunk_
OSSharedPtr<OSData>::OSSharedPtr(std::nullptr_t)
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_0
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_1
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_2
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_3
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_4
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_5
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_6
__ZN11OSSharedPtrI6OSDataECI1N7libkern20intrusive_shared_ptrIS0_27intrusive_osobject_retainerEEEDn_7
__ZN12AppleBCM475016_interruptActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN12AppleOrionIC15interruptActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN12AppleUSBXDCI20enumDoneTimerExpiredEP18IOTimerEventSource_vfpthunk_
__ZN12AppleUSBXHCI21getCompanionPortGatedEP16AppleUSBHostPortjRS1__vfpthunk_
__ZN12Audio2Engine13_stopIOEngineEv_vfpthunk_
__ZN12Audio2Engine14_startIOEngineEv_vfpthunk_
__ZN12Audio2Engine16_setControlValueEjjPj_vfpthunk_
__ZN12Audio2Engine16_setStreamActiveEjj_vfpthunk_
__ZN12Audio2Engine19_handleConfigChangeEP20IOAudio2Notificationy_vfpthunk_
__ZN12Audio2Engine23_handleChangeSampleRateEPxy_vfpthunk_
__ZN12Audio2Engine25_handleChangeStreamFormatEjP30IOAudio2StreamBasicDescriptiony_vfpthunk_
__ZN13AppleSPUCT83610_copyEventERP10IOHIDEvent_vfpthunk_
__ZN13AppleSPUCT83620handleFrameBufferMsgEP15IOAOPALSMessageP13IOAOPALSFrame_vfpthunk_
__ZN13AppleTypeCPhy18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN13IOCommandPool15gatedGetCommandEPP9IOCommandb_vfpthunk_
__ZN13IOCommandPool18gatedReturnCommandEP9IOCommand_vfpthunk_
__ZN13IOOutputQueue7enqueueEP6__mbufPv_vfpthunk_
__ZN13IOUSBHostPipe15adjustPipeGatedEPKN11StandardUSB18EndpointDescriptorEPKNS0_37SuperSpeedEndpointCompanionDescriptorE_vfpthunk_
__ZN13IOUSBHostPipe15clearStallGatedEb_vfpthunk_
__ZN13IOUSBHostPipe15copyStreamGatedEjRP15IOUSBHostStream_vfpthunk_
__ZN13IOUSBHostPipe17adjustPipeGatedV2EPNS_22StandardUSBDescriptorsE_vfpthunk_
__ZN13IOUSBHostPipe18enableStreamsGatedEv_vfpthunk_
__ZN13IOUSBHostPipe18getIdlePolicyGatedERj_vfpthunk_
__ZN13IOUSBHostPipe18isochronousIoGatedERN17IOUSBHostIOSource31tInternalDataTransferParametersE_vfpthunk_
__ZN13IOUSBHostPipe18setIdlePolicyGatedEj_vfpthunk_
__ZN13IOUSBHostPipe19controlRequestGatedERNS_33tInternalControlRequestParametersE_vfpthunk_
__ZN13IOUSBHostPipe19disableStreamsGatedEv_vfpthunk_
__ZN14AGXAccelerator15filterInterruptEP28IOFilterInterruptEventSource_vfpthunk_
__ZN14AGXAccelerator15handleFWLoggingEP22IOInterruptEventSource_vfpthunk_
__ZN14AGXAccelerator15handleInterruptEP22IOInterruptEventSourcei_vfpthunk_
__ZN14AGXAccelerator18idleParameterEventEP22IOInterruptEventSourcei_vfpthunk_
__ZN14AGXAccelerator23ctxSwitchTelemetryEventEP22IOInterruptEventSourcei_vfpthunk_
__ZN14AGXAccelerator28setPropertyDefaultQoSTargetsEP12OSDictionaryP8OSObject_vfpthunk_
__ZN14AGXAccelerator47setPropertyNoiseSuppressionGPUIdlePowerOffStateEP12OSDictionaryP8OSObject_vfpthunk_
__ZN14AppleDialogPMU14_shutdownGatedEv_vfpthunk_
__ZN14AppleDialogPMU19_setPowerStateGatedEmP9IOService_vfpthunk_
__ZN14AppleSMCClient4openEv_vfpthunk_
__ZN14AppleSMCClient5closeEv_vfpthunk_
__ZN14AppleT803xPCIe13_readPhyIPRegEj_vfpthunk_
__ZN14AppleT803xPCIe14_readAxi2AfRegEj_vfpthunk_
__ZN14AppleT803xPCIe14_writePhyIPRegEjj_vfpthunk_
__ZN14AppleT803xPCIe15_writeAxi2AfRegEjj_vfpthunk_
__ZN14AppleTriStarIC15interruptActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN14IOAudio2Device12exchangeDataEjjj_vfpthunk_
__ZN14IOAudio2Device12stopIOEngineEv_vfpthunk_
__ZN14IOAudio2Device13startIOEngineEv_vfpthunk_
__ZN14IOAudio2Device15setControlValueEjjPj_vfpthunk_
__ZN14IOAudio2Device15setStreamActiveEjj_vfpthunk_
__ZN14IOAudio2Device18handleConfigChangeEP20IOAudio2Notificationy_vfpthunk_
__ZN14IOAudio2Device20moveBlockControlDataEjjj_vfpthunk_
__ZN14IOAudio2Device20setClientDescriptionEyx_vfpthunk_
__ZN14IOAudio2Device20setMultiControlValueEPjS0_yPy_vfpthunk_
__ZN14IOAudio2Device21stopIOEngineWithFlagsEjPy_vfpthunk_
__ZN14IOAudio2Device22handleChangeSampleRateEPxy_vfpthunk_
__ZN14IOAudio2Device22startIOEngineWithFlagsEjPy_vfpthunk_
__ZN14IOAudio2Device24handleChangeStreamFormatEjP30IOAudio2StreamBasicDescriptiony_vfpthunk_
__ZN15ACMP4BitStreams31GetChannelConfigFromNumChannelsEj_0_0
__ZN15AppleC26Charger15sendPacketGatedEhP14AppleC26Packet_vfpthunk_
__ZN15AppleC26Charger17resetCommsCalloutEv_vfpthunk_
__ZN15AppleC26Charger18sendAckPacketGatedEhP14AppleC26Packet_vfpthunk_
__ZN15AppleC26Charger20tearDownCommsCalloutEv_vfpthunk_
__ZN15AppleC26Charger23registerDataStreamGatedEP18AppleC26DataStream_vfpthunk_
__ZN15AppleC26Charger24setConnectionStatusGatedEb_vfpthunk_
__ZN15AppleC26Charger25unregisterDataStreamGatedEP18AppleC26DataStream_vfpthunk_
__ZN15AppleJPEGDriver17clientClosedGatedEP25AppleJPEGDriverUserClient_vfpthunk_
__ZN15AppleM68Buttons12_timerActionEP18IOTimerEventSource_vfpthunk_
__ZN15AppleM68Buttons13_filterActionEP28IOFilterInterruptEventSource_vfpthunk_
__ZN15AppleM68Buttons15_debounceActionEP18IOTimerEventSource_vfpthunk_
__ZN15AppleM68Buttons16_interruptActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN15AppleM68Buttons25_shutdownDebugTimerActionEP18IOTimerEventSource_vfpthunk_
__ZN15AppleM68Buttons29_shutdownNVRAMSyncTimerActionEP18IOTimerEventSource_vfpthunk_
__ZN15AppleUSBECMData16dataReadCompleteEPvij_vfpthunk_
__ZN15AppleUSBECMData16zlpWriteCompleteEPvij_vfpthunk_
__ZN15AppleUSBECMData17dataWriteCompleteEPvij_vfpthunk_
__ZN15AppleUSBNCMData16dataReadCompleteEPvij_vfpthunk_
__ZN15AppleUSBNCMData16zlpWriteCompleteEPvij_vfpthunk_
__ZN15AppleUSBNCMData17dataWriteCompleteEPvij_vfpthunk_
__ZN15AppleUSBXDCIARM16transportCreatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN15AppleUSBXDCIARM16transportMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN15AppleUSBXDCIARM19cableChangeOccurredEP18IOTimerEventSource_vfpthunk_
__ZN15AppleUSBXDCIARM37initCableChangeNotificationThreadCallEP11thread_call_vfpthunk_
__ZN15AppleUSBXHCIARM17systemPowerChangeEPvjP9IOServiceS0_m_vfpthunk_
__ZN15AppleUSBXHCIARM27systemPowerChangeThreadCallEPNS_24tSystemPowerNotifyParamsE_vfpthunk_
__ZN15IOAVAudioDriver14completeBufferEPviyy_vfpthunk_
__ZN15IOUSBDevicePipe10abortGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe10stallGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe12destroyGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe18isochronousIoGatedERNS_35tInternalDataTransferIsocParametersE_vfpthunk_
__ZN15IOUSBDevicePipe20resetDataToggleGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe21activateEndpointGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe21synchronousCompletionEPvij_vfpthunk_
__ZN15IOUSBDevicePipe22configureEndpointGatedERiS0__vfpthunk_
__ZN15IOUSBDevicePipe23deactivateEndpointGatedEv_vfpthunk_
__ZN15IOUSBDevicePipe7ioGatedERNS_31tInternalDataTransferParametersE_vfpthunk_
__ZN15IOUSBHostDevice10closeGatedEP9IOServicej_vfpthunk_
__ZN15IOUSBHostDevice14terminateGatedEj_vfpthunk_
__ZN15IOUSBHostDevice15createPipeGatedEPKN11StandardUSB18EndpointDescriptorEPKNS0_37SuperSpeedEndpointCompanionDescriptorEP18IOUSBHostInterfaceRP13IOUSBHostPipe_vfpthunk_
__ZN15IOUSBHostDevice15forcePowerGatedENS_11tPowerStateEbj_vfpthunk_
__ZN15IOUSBHostDevice16pmStopThreadCallEP11thread_call_vfpthunk_
__ZN15IOUSBHostDevice18addPowerChildGatedEv_vfpthunk_
__ZN15IOUSBHostDevice18getDescriptorGatedEhRtRNS_20tDescriptorSelectorsERPKN11StandardUSB10DescriptorE_vfpthunk_
__ZN15IOUSBHostDevice18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN15IOUSBHostDevice20cacheDescriptorGatedEPKN11StandardUSB10DescriptorEtht_vfpthunk_
__ZN15IOUSBHostDevice21setConfigurationGatedEhb_vfpthunk_
__ZN15IOUSBHostDevice21updateIdlePolicyAsyncEP11thread_call_vfpthunk_
__ZN15IOUSBHostDevice21updateIdlePolicyGatedEv_vfpthunk_
__ZN15IOUSBHostDevice22getLPMExitLatencyGatedE13tUSBLinkState18tUSBLPMExitLatencyRj_vfpthunk_
__ZN15IOUSBHostDevice23addPowerChildThreadCallEP11thread_call_vfpthunk_
__ZN15IOUSBHostDevice24abortDeviceRequestsGatedEP9IOServiceji_vfpthunk_
__ZN15IOUSBHostDevice26internalDeviceRequestGatedERN13IOUSBHostPipe33tInternalControlRequestParametersE_vfpthunk_
__ZN15IOUSBHostDevice26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN15IOUSBHostDevice27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN15IOUSBHostDevice33allocateDownstreamBusCurrentGatedERjS0__vfpthunk_
__ZN15IOUSBHostDevice9openGatedEP9IOServicejPv_vfpthunk_
bool RTBuddyFirmware::patchBayWrite<unsigned int>(unsigned int, unsigned int const&) (.cold.1_1_0)
bool RTBuddyFirmware::patchBayWrite<unsigned int>(unsigned int, unsigned int const&) (.cold.1_1_0_0)
__ZN15RTBuddyFirmware13patchBayWriteIjEEbjRKT__0_0
__ZN15RTBuddyFirmware13patchBayWriteIjEEbjRKT__0_1
__ZN16AppleBCMWLANCore12setWCI2TxIndEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore13setWlanRxProtEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore14setRC1CoexModeEPi_vfpthunk_
__ZN16AppleBCMWLANCore14setRC2CoexModeEPi_vfpthunk_
__ZN16AppleBCMWLANCore14setWCI2TxInd5GEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore15setScanJoinProtEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore16setPOWER_PROFILEEP16IO80211Interface_vfpthunk_
__ZN16AppleBCMWLANCore17setAutoProtParamsEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore17setMwsFrameConfigEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore18setSWDIV_RX_POLICYEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore18setSWDIV_TX_POLICYEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore18setWCI2TxDurThreshEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore19setLTE_TDD_CHANNELSEP16IO80211InterfacePj_vfpthunk_
__ZN16AppleBCMWLANCore20setANTENNA_SELECTIONEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore20setGPIOTxEnvelopeIndEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore20setSWDIV_CELL_POLICYEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore21setRC2CoexCTS2SconfigEPi_vfpthunk_
__ZN16AppleBCMWLANCore21setSCAN_FREQ_CHANNELSEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore23setANTENNA_SELECTION_V2EP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore23setMWS2GWiFiType7BitmapEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore23setMWS_NGC_COEX_BITMAPSEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore24setmwsActiveScanThrottleEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore26setRC2CoexPMProtectionModeEPi_vfpthunk_
__ZN16AppleBCMWLANCore26setWCI2TxEnvelopeIndEnableEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore27setMWS_NGC_TimerGranularityEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANCore28setWCI2TxEnvelopeIdleTimeoutEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore29setExternalPowerConfigurationEP9OSBoolean_vfpthunk_
__ZN16AppleBCMWLANCore33setmwsActiveScanThrottleDwellTimeEP16IO80211InterfacePi_vfpthunk_
__ZN16AppleBCMWLANCore36setMWS_NGC_ACTIVITY_LEVEL_THRESHOLDSEP16IO80211InterfacePh_vfpthunk_
__ZN16AppleBCMWLANUtil26AutoreleasedAllignedOSDataC1EP6OSDatam_0_0
__ZN16AppleBTMPMUAgent11readSamplesEv_vfpthunk_
__ZN16AppleMCA2Cluster25initClusterPreflightGatedEv_vfpthunk_
__ZN16AppleT8027USBPhy17systemPowerChangeEPvjP9IOServiceS0_m_vfpthunk_
__ZN16AppleT8027USBPhy27systemPowerChangeThreadCallEPvS0__vfpthunk_
__ZN16AppleUSBHostPort10closeGatedEP9IOServicej_vfpthunk_
__ZN16AppleUSBHostPort14portRegisteredEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN16AppleUSBHostPort14stopThreadCallEP11thread_call_vfpthunk_
__ZN16AppleUSBHostPort15forcePowerGatedENS_11tPowerStateEj_vfpthunk_
__ZN16AppleUSBHostPort17interruptOccurredEP22IOInterruptEventSourcei_vfpthunk_
__ZN16AppleUSBHostPort18getPortStatusGatedERj_vfpthunk_
__ZN16AppleUSBHostPort18portMonitorTimeoutEP18IOTimerEventSource_vfpthunk_
__ZN16AppleUSBHostPort18setPowerFloorGatedEm_vfpthunk_
__ZN16AppleUSBHostPort18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN16AppleUSBHostPort19cableChangeOccurredEP18IOTimerEventSource_vfpthunk_
__ZN16AppleUSBHostPort19serializePortStatusEPvP11OSSerialize_vfpthunk_
__ZN16AppleUSBHostPort19serializeStatisticsEPvP11OSSerialize_vfpthunk_
__ZN16AppleUSBHostPort19stopThreadCallGatedEv_vfpthunk_
__ZN16AppleUSBHostPort20updateLPMPolicyGatedE13tUSBLinkStateNS_14tPortLPMPolicyEj_vfpthunk_
__ZN16AppleUSBHostPort21getCompanionPortGatedEjRPS__vfpthunk_
__ZN16AppleUSBHostPort22didTerminateThreadCallEPNS_23tPortTerminateArgumentsE_vfpthunk_
__ZN16AppleUSBHostPort22getLPMExitLatencyGatedE13tUSBLinkState18tUSBLPMExitLatencyRj_vfpthunk_
__ZN16AppleUSBHostPort23willTerminateThreadCallEPNS_23tPortTerminateArgumentsE_vfpthunk_
__ZN16AppleUSBHostPort24portsCreatedMessageGatedEv_vfpthunk_
__ZN16AppleUSBHostPort24serializeStatisticsGatedEP12OSDictionaryP11OSSerialize_vfpthunk_
__ZN16AppleUSBHostPort26overCurrentTimeoutOccurredEP18IOTimerEventSource_vfpthunk_
__ZN16AppleUSBHostPort26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN16AppleUSBHostPort26registerCompanionPortGatedEPS_j_vfpthunk_
__ZN16AppleUSBHostPort27didTerminateThreadCallGatedEP9IOServicej_vfpthunk_
__ZN16AppleUSBHostPort27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN16AppleUSBHostPort27stopThreadCallCompleteGatedEv_vfpthunk_
__ZN16AppleUSBHostPort28unregisterCompanionPortGatedEPS_j_vfpthunk_
__ZN16AppleUSBHostPort28willTerminateThreadCallGatedEP9IOServicej_vfpthunk_
__ZN16AppleUSBHostPort36willTerminateThreadCallCompleteGatedEv_vfpthunk_
__ZN16AppleUSBHostPort9openGatedEP9IOServicejPv_vfpthunk_
__ZN16IO80211Interface12outputPacketEP6__mbufPv_vfpthunk_
__ZN16IOAESAccelerator12_queueLockedEP23IOAESAcceleratorCommand_vfpthunk_
__ZN16IOHIDEventDriver21handleInterruptReportEyP18IOMemoryDescriptor15IOHIDReportTypej_vfpthunk_
__ZN16IONVMeController11ThreadEntryEv_vfpthunk_
__ZN17AppleAOPAudioLEAP30externalClientRequestCallGatedEP12OSDictionaryy_vfpthunk_
__ZN17AppleARMPWMDevice12_timerActionEP18IOTimerEventSource_vfpthunk_
__ZN17AppleARMPWMDevice13_stopPWMGatedEb_vfpthunk_
__ZN17AppleARMPWMDevice14_startPWMGatedEPKyS1_S1_PKb_vfpthunk_
__ZN17AppleARMPWMDevice19_setPropertiesGatedEP8OSObject_vfpthunk_
__ZN17AppleCS46L0xAudio14StopAudioGatedEj_vfpthunk_
__ZN17AppleCS46L0xAudio15StartAudioGatedEj_vfpthunk_
__ZN17AppleConvergedPCI11mapBarGatedEPyS0_PjS1__vfpthunk_
__ZN17AppleConvergedPCI12flrHoldGatedEb_vfpthunk_
__ZN17AppleConvergedPCI12getChipGatedEPP9ACIPCChip_vfpthunk_
__ZN17AppleConvergedPCI13unmapBarGatedEv_vfpthunk_
__ZN17AppleConvergedPCI15enableL1SSGatedEv_vfpthunk_
__ZN17AppleConvergedPCI15flrReleaseGatedEv_vfpthunk_
__ZN17AppleConvergedPCI16openServiceGatedEP9IOService_vfpthunk_
__ZN17AppleConvergedPCI17closeServiceGatedEP9IOService_vfpthunk_
__ZN17AppleConvergedPCI18getInLowPowerGatedEv_vfpthunk_
__ZN17AppleConvergedPCI18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN17AppleConvergedPCI18willTerminateGatedEP9IOServicej_vfpthunk_
__ZN17AppleConvergedPCI20prepareShutDownGatedEv_vfpthunk_
__ZN17AppleConvergedPCI20saveDeviceStateGatedEj_vfpthunk_
__ZN17AppleConvergedPCI22notifyClientPowerGatedEP9IOServiceb_vfpthunk_
__ZN17AppleConvergedPCI23disableRestoreASPMGatedEb_vfpthunk_
__ZN17AppleConvergedPCI23isDeviceAccessibleGatedEv_vfpthunk_
__ZN17AppleConvergedPCI23notifyTerminateAckGatedEP9IOService_vfpthunk_
__ZN17AppleConvergedPCI23restoreDeviceStateGatedEj_vfpthunk_
__ZN17AppleConvergedPCI30setupVendorSpecificConfigGatedEv_vfpthunk_
__ZN17AppleConvergedPCI8flrGatedEv_vfpthunk_
__ZN17AppleEmbeddedPCIE11_readPhyRegEj_vfpthunk_
__ZN17AppleEmbeddedPCIE12_writePhyRegEjj_vfpthunk_
__ZN17AppleEmbeddedPCIE14_readCommonRegEj_vfpthunk_
__ZN17AppleEmbeddedPCIE14_readCommonRegEj_vfpthunk__0
__ZN17AppleEmbeddedPCIE15_writeCommonRegEjj_vfpthunk_
__ZN17AppleEmbeddedPCIE15_writeCommonRegEjj_vfpthunk__0
__ZN17AppleSPUHIDDriver18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN17AppleSPUHIDDriver18setPropertiesGatedEP12OSDictionary_vfpthunk_
__ZN17AppleSPUHIDDriver21handleInterruptReportEyP18IOMemoryDescriptor15IOHIDReportTypejPv_vfpthunk_
__ZN17AppleSPUHIDDriver26handleTimesyncNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN17AppleT8011USBXDCI12messageGatedEjP9IOServicePv_vfpthunk_
__ZN17AppleT8101USBXHCI33systemPowerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN17AppleUSB20HubPort19clearPipeStallGatedEP13IOUSBHostPipe_vfpthunk_
__ZN17AppleUSB30HubPort19clearPipeStallGatedEP13IOUSBHostPipe_vfpthunk_
__ZN17BTDebugUserClient16clientCloseGatedEv_vfpthunk_
__ZN17IO80211Controller17apple80211RequestEjiP16IO80211InterfacePv_vfpthunk_
__ZN17IO80211Controller24apple80211VirtualRequestEjiP23IO80211VirtualInterfacePv_vfpthunk_
__ZN17IOUSBHostIOSource10abortGatedEjiP9IOService_vfpthunk_
__ZN17IOUSBHostIOSource10closeGatedEv_vfpthunk_
__ZN17IOUSBHostIOSource12destroyGatedEv_vfpthunk_
__ZN17IOUSBHostIOSource13getStateGatedERNS_6tStateE_vfpthunk_
__ZN17IOUSBHostIOSource14ioBundledGatedERNS_31tInternalDataTransferParametersE_vfpthunk_
__ZN17IOUSBHostIOSource15timerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN17IOUSBHostIOSource21synchronousCompletionEPvij_vfpthunk_
__ZN17IOUSBHostIOSource32synchronousIsochronousCompletionEPviP25IOUSBHostIsochronousFrame_vfpthunk_
__ZN17IOUSBHostIOSource7ioGatedERNS_31tInternalDataTransferParametersE_vfpthunk_
__ZN17IOUSBHostIOSource9openGatedEv_vfpthunk_
__ZN18AppleARMPMUCharger21handleBacklightUpdateEPvjP9IOServiceS0_m_vfpthunk_
__ZN18AppleCS46L0xDevice15setupAudioGatedEbP12OSDictionary_vfpthunk_
__ZN18AppleDialogSPMIPMU14_shutdownGatedEv_vfpthunk_
__ZN18AppleDialogSPMIPMU19_setPowerStateGatedEmP9IOService_vfpthunk_
__ZN18AppleDialogSPMIPMU23handlePMSettingCallbackEPK8OSSymbolP8OSObjectm_vfpthunk_
__ZN18AppleEmbeddedAudio15_waitAwakeGatedEPKbS1__vfpthunk_
__ZN18AppleEmbeddedAudio16_iisNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN18AppleEmbeddedAudio17_changePowerStateEv_vfpthunk_
__ZN18AppleEmbeddedAudio18_changeIBootVolumeEv_vfpthunk_
__ZN18AppleEmbeddedAudio18_powerNotificationEPvjP9IOServiceP30IOPowerStateChangeNotificationm_vfpthunk_
__ZN18AppleEmbeddedAudio19_setPowerStateGatedEm_vfpthunk_
__ZN18AppleEmbeddedAudio23_powerNotificationGatedEjP9IOServiceP30IOPowerStateChangeNotification_vfpthunk_
__ZN18AppleEmbeddedAudio26_priorityPowerNotificationEPvjP9IOServiceP30IOPowerStateChangeNotificationm_vfpthunk_
__ZN18AppleEmbeddedAudio27_powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN18AppleEmbeddedAudio28_powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN18AppleEmbeddedAudio28canEnableSecondaryAudioGatedEPK8OSSymboljb_vfpthunk_
__ZN18AppleEmbeddedAudio30_iisActiveNotificationCallbackEPK8OSSymbol_vfpthunk_
__ZN18AppleEmbeddedAudio31notifySecondaryAudioEnableGatedEPK8OSSymboljb_vfpthunk_
__ZN18AppleEmbeddedAudio32matchingNotificationHandlerGatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN18AppleEmbeddedAudio32notifySecondaryActiveChangeGatedEPK8OSSymbol_vfpthunk_
__ZN18AppleEmbeddedAudio32notifySecondaryVolumeChangeGatedEPK8OSSymbolj_vfpthunk_
__ZN18AppleEmbeddedAudio32notifyStopTransportCompleteGatedEPK8OSSymbol_vfpthunk_
__ZN18AppleEmbeddedAudio33notifyStartTransportCompleteGatedEPK8OSSymbol_vfpthunk_
__ZN18AppleEmbeddedAudio34notifySecondaryAudioHWPreWarmGatedEPK8OSSymboljPy_vfpthunk_
__ZN18AppleEmbeddedAudio35handleSecondarySetControlValueGatedEPK8OSSymboljjPj_vfpthunk_
__ZN18AppleEmbeddedAudio36notifySecondaryDataSourceChangeGatedEPK8OSSymbolj_vfpthunk_
__ZN18AppleEmbeddedAudio38notifySecondaryStreamFormatChangeGatedEPK8OSSymbol_vfpthunk_
__ZN18AppleEmbeddedAudio46preflightSecondaryMultiControlValueChangeGatedEPK8OSSymboljPK7OSArrayS5__vfpthunk_
__ZN18AppleMultitouchSPI11resetDeviceEb_vfpthunk_
__ZN18AppleMultitouchSPI14bootloadDeviceEv_vfpthunk_
__ZN18AppleMultitouchSPI15deviceGetReportEP20MTDeviceReportStructP25MTRequestErrorStatsStructPKNS_20FeatureReportOptionsEh_vfpthunk_
__ZN18AppleMultitouchSPI15deviceSetReportEP20MTDeviceReportStructP25MTRequestErrorStatsStructPKNS_20FeatureReportOptionsEh_vfpthunk_
__ZN18AppleMultitouchSPI15setPowerEnabledEbb_vfpthunk_
__ZN18AppleMultitouchSPI17interruptOccurredEP8OSObjectP22IOInterruptEventSourcei_vfpthunk_
__ZN18AppleMultitouchSPI18readOneFrameOfDataEP25MTRequestErrorStatsStructbh_vfpthunk_
__ZN18AppleMultitouchSPI18registerPowerChildEP9IOService_vfpthunk_
__ZN18AppleMultitouchSPI19deviceGetReportInfoEhP18MTReportInfoStructhb_vfpthunk_
__ZN18AppleMultitouchSPI19scheduleBootloadingEj_vfpthunk_
__ZN18AppleMultitouchSPI20deviceIsInBootloaderEh_vfpthunk_
__ZN18AppleMultitouchSPI20deviceReadResultDataEth_vfpthunk_
__ZN18AppleMultitouchSPI20messagePowerChildrenEj_vfpthunk_
__ZN18AppleMultitouchSPI20unregisterPowerChildEP9IOService_vfpthunk_
__ZN18AppleMultitouchSPI21deviceGetResultLengthEPth_vfpthunk_
__ZN18AppleMultitouchSPI21doomTimerFiredHandlerEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN18AppleMultitouchSPI21updatePowerStatisticsEv_vfpthunk_
__ZN18AppleMultitouchSPI25bootloadTimerFiredHandlerEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN18AppleMultitouchSPI26initializeCachedReportInfoEv_vfpthunk_
__ZN18AppleMultitouchSPI34updateAndPublishIOReportPowerStatsEP19IOReportChannelListPjPvS3__vfpthunk_
__ZN18AppleMultitouchSPI39sendNotificationToRegisteredUserClientsE28MultitouchDriverNotificationj_vfpthunk_
__ZN18AppleStockholmSPMI19_rxInterruptHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN18AppleStockholmSPMI21_wakeInterruptHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN18AppleStockholmSPMI23_rxMbufInterruptHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN18AppleUSB30XHCIPort17serializePortLinkEPvP11OSSerialize_vfpthunk_
__ZN18AppleUSB30XHCIPort21enableComplianceGatedEv_vfpthunk_
__ZN18AppleUSBCDCControl21interruptReadCompleteEPvij_vfpthunk_
__ZN18IOAccessoryManager28configureDetectOverrideGatedEbb15IOAccResistorID_vfpthunk_
__ZN18IOAccessoryManager44configureAccessoryPowerLowVoltageSelectGatedEjj_vfpthunk_
__ZN18IOAccessoryPortUSB19receiveNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN18IOHIDLibUserClient12messageGatedEjP9IOServicePv_vfpthunk_
__ZN18IOHIDLibUserClient29registerNotificationPortGatedEP8ipc_portjj_vfpthunk_
__ZN18IOMikeyBusDockPort19SetPortSuspendAsyncEb_vfpthunk_
__ZN18IOMikeyBusDockPort19connectChangeActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN18IOMikeyBusDockPort19receiveNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN18IOStreamUserClient10openMethodEPcS0_yPy_vfpthunk_
__ZN18IOStreamUserClient10stopMethodEv_vfpthunk_
__ZN18IOStreamUserClient11closeMethodEv_vfpthunk_
__ZN18IOStreamUserClient11startMethodEv_vfpthunk_
__ZN18IOStreamUserClient13getModeMethodEPcPy_vfpthunk_
__ZN18IOStreamUserClient13inputSyncTrapEj_vfpthunk_
__ZN18IOStreamUserClient13setModeMethodEPcy_vfpthunk_
__ZN18IOStreamUserClient13suspendMethodEv_vfpthunk_
__ZN18IOStreamUserClient20getBufferCountMethodEPcPy_vfpthunk_
__ZN18IOStreamUserClient9inputTrapEj_vfpthunk_
__ZN18IOTimeSyncNotifierD0Ev_100
__ZN18IOTimeSyncNotifierD0Ev_101
__ZN18IOTimeSyncNotifierD0Ev_102
__ZN18IOTimeSyncNotifierD0Ev_103
__ZN18IOTimeSyncNotifierD0Ev_104
__ZN18IOTimeSyncNotifierD0Ev_105
__ZN18IOTimeSyncNotifierD0Ev_106
__ZN18IOTimeSyncNotifierD0Ev_107
__ZN18IOTimeSyncNotifierD0Ev_108
__ZN18IOTimeSyncNotifierD0Ev_109
__ZN18IOTimeSyncNotifierD0Ev_110
__ZN18IOTimeSyncNotifierD0Ev_111
__ZN18IOTimeSyncNotifierD0Ev_112
__ZN18IOTimeSyncNotifierD0Ev_113
__ZN18IOTimeSyncNotifierD0Ev_114
__ZN18IOTimeSyncNotifierD0Ev_115
__ZN18IOTimeSyncNotifierD0Ev_116
__ZN18IOTimeSyncNotifierD0Ev_117
__ZN18IOTimeSyncNotifierD0Ev_118
__ZN18IOTimeSyncNotifierD0Ev_119
__ZN18IOTimeSyncNotifierD0Ev_120
__ZN18IOTimeSyncNotifierD0Ev_121
__ZN18IOTimeSyncNotifierD0Ev_122
__ZN18IOTimeSyncNotifierD0Ev_123
__ZN18IOTimeSyncNotifierD0Ev_124
__ZN18IOTimeSyncNotifierD0Ev_125
__ZN18IOTimeSyncNotifierD0Ev_126
__ZN18IOTimeSyncNotifierD0Ev_127
__ZN18IOTimeSyncNotifierD0Ev_128
__ZN18IOTimeSyncNotifierD0Ev_129
__ZN18IOTimeSyncNotifierD0Ev_130
__ZN18IOTimeSyncNotifierD0Ev_131
__ZN18IOUSBHostHIDDevice14interruptRetryEP18IOTimerEventSource_vfpthunk_
__ZN18IOUSBHostHIDDevice16zlpWriteCompleteEPvij_vfpthunk_
__ZN18IOUSBHostHIDDevice17setReportCompleteEPvij_vfpthunk_
__ZN18IOUSBHostHIDDevice21interruptReadCompleteEPvij_vfpthunk_
__ZN18IOUSBHostHIDDevice27readInterruptPipeAsyncGatedEv_vfpthunk_
__ZN18IOUSBHostInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN18IOUSBHostInterface13copyPipeGatedEhRP13IOUSBHostPipe_vfpthunk_
__ZN18IOUSBHostInterface15closePipesGatedEv_vfpthunk_
__ZN18IOUSBHostInterface17destroyPipesGatedEj_vfpthunk_
__ZN18IOUSBHostInterface27getInterfaceDescriptorGatedERPKN11StandardUSB19InterfaceDescriptorE_vfpthunk_
__ZN18IOUSBHostInterface27selectAlternateSettingGatedEh_vfpthunk_
__ZN18IOUSBHostInterface9openGatedEP9IOServicejPv_vfpthunk_
__ZN19AGXDeviceUserClient13getDeviceInfoEP13AGXDeviceInfo_vfpthunk_
__ZN19AGXDeviceUserClient13getDriverInfoEP13AGXDriverInfo_vfpthunk_
__ZN19AGXDeviceUserClient15getDeviceConfigEP16AGXGPUCoreConfig_vfpthunk_
__ZN19AGXDeviceUserClient16getFrameDumpInfoEP16AGXFrameDumpInfo_vfpthunk_
__ZN19AGXDeviceUserClient16getVerbosityInfoEP16AGXVerbosityInfo_vfpthunk_
__ZN19AGXDeviceUserClient18getSettingsFromKMDEP18AGXSettingsFromKMD_vfpthunk_
__ZN19AGXDeviceUserClient20getDeviceUserVARangeER24AGXDeviceUserVARangeInfo_vfpthunk_
__ZN19AppleALSColorSensor10_copyEventERP10IOHIDEvent_vfpthunk_
__ZN19AppleAOPAudioLogApiL7LogInfoEPKcz_2_0
__ZN19AppleAOPAudioLogApiL7LogInfoEPKcz_2_1
__ZN19AppleAOPAudioLogApiL8LogDebugEPKcz_18_0
__ZN19AppleActuatorDevice12_setWaveformEP23AADDeviceWaveformStructh_vfpthunk_
__ZN19AppleActuatorDevice19_registerUserClientEP29AppleActuatorDeviceUserClient_vfpthunk_
__ZN19AppleActuatorDevice20_setHostClickControlEj_vfpthunk_
__ZN19AppleActuatorDevice21_unregisterUserClientEP29AppleActuatorDeviceUserClient_vfpthunk_
__ZN19AppleActuatorDevice22_cacheDevicePropertiesEv_vfpthunk_
__ZN19AppleActuatorDevice24_reclaimHostClickControlEv_vfpthunk_
__ZN19AppleActuatorDevice24systemPowerChangeHandlerEPvjP9IOServiceS0_m_vfpthunk_
__ZN19AppleActuatorDevice26_addHostClickControlClientEv_vfpthunk_
__ZN19AppleActuatorDevice26_deviceGetReportWithLookUpEP21AADDeviceReportStructh_vfpthunk_
__ZN19AppleActuatorDevice26_deviceSetReportWithLookUpEP21AADDeviceReportStructh_vfpthunk_
__ZN19AppleActuatorDevice27_initializeCachedReportInfoEv_vfpthunk_
__ZN19AppleActuatorDevice29_removeHostClickControlClientEv_vfpthunk_
__ZN19AppleEmbeddedUSBNub15forcePowerGatedENS_11tPowerStateEb_vfpthunk_
__ZN19AppleEmbeddedUSBNub26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN19AppleHapticsSupport15setTravelScalerEfPf_vfpthunk_
__ZN19AppleHapticsSupport18getDebugChannelMapEv_vfpthunk_
__ZN19AppleHapticsSupport31getSupportedHapticDebugChannelsEv_vfpthunk_
__ZN19AppleM2ScalerCSCHal30interruptOccurred_gatedContextEP22IOInterruptEventSourcei_vfpthunk_
__ZN19AppleM2ScalerCSCHal32interruptFilter_interruptContextEP8OSObjectP28IOFilterInterruptEventSource_vfpthunk_
__ZN19AppleNVMeController22HousekeepingTimerEventEv_vfpthunk_
__ZN19ApplePMGRTempSensor14enableAlarmIntEj_vfpthunk_
__ZN19ApplePMGRTempSensor15handleInterruptEPvP9IOServicei_vfpthunk_
__ZN19ApplePMGRTempSensor15timeoutOccurredEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN19AppleSPMIController19handleRespInterruptEP22IOInterruptEventSourcei_vfpthunk_
__ZN19AppleSPMIController20handleFaultInterruptEP22IOInterruptEventSourcei_vfpthunk_
__ZN19AppleSPMIController27handleFaultInterruptPrimaryEPvP9IOServicei_vfpthunk_
__ZN19AppleSecondaryAudio29externalSampleRateChangeGatedEPx_vfpthunk_
__ZN19AppleSecondaryAudio33notifyStartTransportCompleteGatedEi_vfpthunk_
__ZN19AppleUSBAudioDevice11UpdateTimerEP18IOTimerEventSource_vfpthunk_
__ZN19AppleUSBAudioDevice13WakeFromSleepEv_vfpthunk_
__ZN19AppleUSBAudioDevice21protectedInitHardwareEP9IOService_vfpthunk_
__ZN19AppleUSBAudioStream23protectedCloseInterfaceEP9IOServicePS1__vfpthunk_
__ZN19AppleUSBRequestPool9gatedStopEv_vfpthunk_
__ZN19DeviceMemoryManagerC1Ejj_0_0
__ZN19IOAccessoryDock9Pin16setGoldbondGatedEb_vfpthunk_
__ZN19IOAccessoryDock9Pin17selectEisPinGatedEb10IOAccPinIDPj_vfpthunk_
__ZN19IOAccessoryDock9Pin19getFreePinMaskGatedEPj_vfpthunk_
__ZN19IOAccessoryDock9Pin20challengeCryptoGatedEiPKhPh_vfpthunk_
__ZN19IOAccessoryDock9Pin20checkPinVoltageGatedE10IOAccPinID11IOAccMeasIDPj_vfpthunk_
__ZN19IOAccessoryDock9Pin26configureGoldbondModeGatedE21IOAccGoldbondModeMaskS0__vfpthunk_
__ZN19IOAppleConvergedPCI11mapBarGatedEPyS0_PjS1__vfpthunk_
__ZN19IOAppleConvergedPCI13unmapBarGatedEv_vfpthunk_
__ZN19IOAppleConvergedPCI14setLoggerGatedEP25IOAppleConvergedIPCLogger_vfpthunk_
__ZN19IOAppleConvergedPCI15enableASPMGatedEb_vfpthunk_
__ZN19IOAppleConvergedPCI16openServiceGatedEP9IOService_vfpthunk_
__ZN19IOAppleConvergedPCI17closeServiceGatedEP9IOService_vfpthunk_
__ZN19IOAppleConvergedPCI18getInLowPowerGatedEv_vfpthunk_
__ZN19IOAppleConvergedPCI18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN19IOAppleConvergedPCI18willTerminateGatedEP9IOServicej_vfpthunk_
__ZN19IOAppleConvergedPCI20saveDeviceStateGatedEj_vfpthunk_
__ZN19IOAppleConvergedPCI22enableL1SSPostROMGatedEv_vfpthunk_
__ZN19IOAppleConvergedPCI23isDeviceAccessibleGatedEv_vfpthunk_
__ZN19IOAppleConvergedPCI23notifyTerminateAckGatedEP9IOService_vfpthunk_
__ZN19IOAppleConvergedPCI23restoreDeviceStateGatedEj_vfpthunk_
__ZN19IOAppleConvergedPCI30setupVendorSpecificConfigGatedEv_vfpthunk_
__ZN19IOAppleConvergedPCI8flrGatedEv_vfpthunk_
__ZN19IONetworkController12outputPacketEP6__mbufPv_vfpthunk_
__ZN19IONetworkController16pollInputPacketsEP18IONetworkInterfacejP11IOMbufQueuePv_vfpthunk_
__ZN19IONetworkController6enableEP18IONetworkInterface_vfpthunk_
__ZN19IONetworkController7disableEP18IONetworkInterface_vfpthunk_
__ZN19IOSkywalkController9MetaClassC1Ev_100
__ZN19IOSkywalkController9MetaClassC1Ev_101
__ZN19IOSkywalkController9MetaClassC1Ev_102
__ZN19IOSkywalkController9MetaClassC1Ev_103
__ZN19IOSkywalkController9MetaClassC1Ev_104
__ZN19IOSkywalkController9MetaClassC1Ev_105
__ZN19IOSkywalkController9MetaClassC1Ev_106
__ZN19IOSkywalkController9MetaClassC1Ev_107
__ZN19IOSkywalkController9MetaClassC1Ev_108
__ZN19IOSkywalkController9MetaClassC1Ev_109
__ZN19IOSkywalkController9MetaClassC1Ev_110
__ZN19IOSkywalkController9MetaClassC1Ev_111
__ZN19IOSkywalkController9MetaClassC1Ev_112
__ZN19IOSkywalkController9MetaClassC1Ev_113
__ZN19IOSkywalkController9MetaClassC1Ev_114
__ZN19IOSkywalkController9MetaClassC1Ev_115
__ZN19IOSkywalkController9MetaClassC1Ev_116
__ZN19IOSkywalkController9MetaClassC1Ev_117
__ZN19IOSkywalkController9MetaClassC1Ev_118
__ZN19IOSkywalkController9MetaClassC1Ev_119
__ZN20AppleBluetoothModule16powerModuleGatedEbPKc_vfpthunk_
__ZN20AppleBluetoothModule18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN20AppleBluetoothModule19coredumpModuleGatedEPKc_vfpthunk_
__ZN20AppleBluetoothModule21pciDriverBlockerGatedEv_vfpthunk_
__ZN20AppleBluetoothModule21powerCycleModuleGatedEPKc_vfpthunk_
__ZN20AppleBluetoothModule27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN20AppleBluetoothModule30notifyPCIDeviceTransitionGatedEb_vfpthunk_
__ZN20AppleBluetoothModule31setInitialModulePowerStateGatedEv_vfpthunk_
__ZN20AppleBluetoothModule8flrGatedEPKc_vfpthunk_
__ZN20AppleCSCodecMikeyBus19_setPowerStateGatedEmP9IOService_vfpthunk_
__ZN20AppleCSCodecMikeyBus28_powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN20AppleMultitouchZ2SPI23_handlePowerStateChangeEm_vfpthunk_
__ZN20AppleSmartIOEndpoint18synchronousMessageEP19AppleSmartIOCommandPv_vfpthunk_
__ZN20IOMikeyBusController15_retainBusGatedEv_vfpthunk_
__ZN20IOMikeyBusController16_releaseBusGatedEv_vfpthunk_
__ZN20IOMikeyBusController16_sendBulkTimeoutEv_vfpthunk_
__ZN20IOMikeyBusController17_lineoutStopGatedEv_vfpthunk_
__ZN20IOMikeyBusController18_detachDeviceGatedEP14IOMikeyBusPorth_vfpthunk_
__ZN20IOMikeyBusController18_lineoutStartGatedEjPK20IOMikeyBusSampleRate_vfpthunk_
__ZN20IOMikeyBusController19_receivePacketGatedEPK27IOMikeyBusBulkPayloadPacket_vfpthunk_
__ZN20IOMikeyBusController19_setPowerStateGatedEmb_vfpthunk_
__ZN20IOMikeyBusController20_createBulkPipeGatedEhhP8OSObjectPP18IOMikeyBusBulkPipe_vfpthunk_
__ZN20IOMikeyBusController20_removeBulkPipeGatedEP18IOMikeyBusBulkPipe_vfpthunk_
__ZN20IOMikeyBusController20_sendBulkEngineGatedEv_vfpthunk_
__ZN20IOMikeyBusController20_sendBulkPacketGatedEP18IOMikeyBusBulkPipePKNS_18SendBulkPacketArgsEPy_vfpthunk_
__ZN20IOMikeyBusController20_serializeGetSuspendEPvP11OSSerialize_vfpthunk_
__ZN20IOMikeyBusController21_audioDeviceStopGatedEP14IOAudio2Devicej_vfpthunk_
__ZN20IOMikeyBusController22_audioDeviceStartGatedEP14IOAudio2Devicej_vfpthunk_
__ZN20IOMikeyBusController22_cancelBulkPacketGatedEPvi_vfpthunk_
__ZN20IOMikeyBusController23_portStatusChangedGatedEP14IOMikeyBusPortbb_vfpthunk_
__ZN20IOMikeyBusController23_receiveLinkStatusGatedEb_vfpthunk_
__ZN20IOMikeyBusController24_receivePacketErrorGatedEj_vfpthunk_
__ZN20IOMikeyBusController24_setBroadcastPacketGatedEbP24IOMikeyBusTrafficChannel_vfpthunk_
__ZN20IOMikeyBusController25_getSupportedDiffAmpGatedEP12diffAmpValue_vfpthunk_
__ZN20IOMikeyBusController25_registerAudioDeviceGatedEP21IOMikeyBusAudioDevice_vfpthunk_
__ZN20IOMikeyBusController26_createTrafficChannelGatedEhjPKhPP24IOMikeyBusTrafficChannel_vfpthunk_
__ZN20IOMikeyBusController26_getControllerEnabledGatedEPb_vfpthunk_
__ZN20IOMikeyBusController26_receiveBulkDataErrorGatedEv_vfpthunk_
__ZN20IOMikeyBusController26_removeTrafficChannelGatedEP24IOMikeyBusTrafficChannel_vfpthunk_
__ZN20IOMikeyBusController27_registerLineoutDeviceGatedEP16IOMikeyBusDeviceP24IOMikeyBusTrafficChannelS3_P7OSArray_vfpthunk_
__ZN20IOMikeyBusController27_serializeGetRetainBusCountEPvP11OSSerialize_vfpthunk_
__ZN20IOMikeyBusController27_unregisterAudioDeviceGatedEP21IOMikeyBusAudioDevice_vfpthunk_
__ZN20IOMikeyBusController28_serializeGetIsLowPowerStateEPvP11OSSerialize_vfpthunk_
__ZN20IOMikeyBusController28_setFixedSlotAssignmentGatedEb_vfpthunk_
__ZN20IOMikeyBusController29_linkValidationTimeoutHandlerEv_vfpthunk_
__ZN20IOMikeyBusController29_receiveTrafficDataErrorGatedEv_vfpthunk_
__ZN20IOMikeyBusController29_unregisterLineoutDeviceGatedEP16IOMikeyBusDevice_vfpthunk_
__ZN20IOMikeyBusController30_serializeGetControllerEnabledEPvP11OSSerialize_vfpthunk_
__ZN20IOMikeyBusController31_audioDevicePerformConfigChangeEP14IOAudio2DeviceP20IOAudio2Notification_vfpthunk_
__ZN20IOMikeyBusController32_audioDeviceGetDataExchangeBlockEP14IOAudio2DevicejPjPP18IOMemoryDescriptor_vfpthunk_
__ZN20IOMikeyBusController32_audioDeviceGetTerminalTypeGatedEP14IOAudio2DevicejPj_vfpthunk_
__ZN20IOMikeyBusController32_audioDeviceMoveBlockControlDataEP14IOAudio2Devicejjj_vfpthunk_
__ZN20IOMikeyBusController32_audioDeviceSetControlValueGatedEP14IOAudio2DevicejjPj_vfpthunk_
__ZN20IOMikeyBusController32_audioDeviceSetDeviceFormatGatedEP14IOAudio2Devicejjj_vfpthunk_
__ZN20IOMikeyBusController32_lineoutSupportedSampleRateGatedEPK20IOMikeyBusSampleRate_vfpthunk_
__ZN20IOMikeyBusController32_serializeGetNeedPowerUpOnRetainEPvP11OSSerialize_vfpthunk_
__ZN20IOMikeyBusController33_audioDeviceGetBlockControlBufferEP14IOAudio2DevicejPjPP18IOMemoryDescriptor_vfpthunk_
__ZN20IOMikeyBusController33_setTrafficChannelAssignmentGatedEPK25IOMikeyBusBroadcastPacket_vfpthunk_
__ZN20IOMikeyBusController36_audioDeviceSetDeviceDataFormatGatedEP14IOAudio2Devicejj_vfpthunk_
__ZN20IOMikeyBusController36_audioDeviceSetDeviceSampleRateGatedEP14IOAudio2DevicePK20IOMikeyBusSampleRatePjS5__vfpthunk_
__ZN20IOMikeyBusController36_receiveBroadcastPacketCompleteGatedEv_vfpthunk_
__ZN20IOMikeyBusController37_audioDeviceSetMultiControlValueGatedEP14IOAudio2DevicePPv_vfpthunk_
__ZN20IOMikeyBusController38_audioDeviceGetChannelAssignmentsGatedEP14IOAudio2DevicejPh_vfpthunk_
__ZN20IOMikeyBusController44_audioDeviceCopySupportedDataFormatListGatedEP14IOAudio2DevicePP7OSArrayPj_vfpthunk_
__ZN20IOMikeyBusController44_audioDeviceCopySupportedSampleRateListGatedEP14IOAudio2DevicePP7OSArrayP20IOMikeyBusSampleRate_vfpthunk_
__ZN20IOMikeyBusController46_audioDeviceCopySupportedChannelCountListGatedEP14IOAudio2DevicejPP7OSArrayPj_vfpthunk_
__ZN20IOMikeyBusController47_audioDeviceCopySupportedBitsPerSampleListGatedEP14IOAudio2DevicePP7OSArrayPj_vfpthunk_
__ZN20IOUSBDeviceInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN20IOUSBDeviceInterface13findPipeGatedEiiiRP15IOUSBDevicePipe_vfpthunk_
__ZN20IOUSBDeviceInterface13isActiveGatedEPiRb_vfpthunk_
__ZN20IOUSBDeviceInterface15createPipeGatedEP21tCreatePipeParametersiRP15IOUSBDevicePipe_vfpthunk_
__ZN20IOUSBDeviceInterface16isFinalizedGatedERb_vfpthunk_
__ZN20IOUSBDeviceInterface19copyDescriptorGatedEPNS_33tInternalCopyDescriptorParametersERi_vfpthunk_
__ZN20IOUSBDeviceInterface19getDescriptionGatedERP8OSString_vfpthunk_
__ZN20IOUSBDeviceInterface19setDescriptionGatedEPKc_vfpthunk_
__ZN20IOUSBDeviceInterface21appendDescriptorGatedEPNS_35tInternalAppendDescriptorParametersEi_vfpthunk_
__ZN20IOUSBDeviceInterface22findPipeByAddressGatedEhRP15IOUSBDevicePipe_vfpthunk_
__ZN20IOUSBDeviceInterface24addAlternateSettingGatedEiiiRi_vfpthunk_
__ZN20IOUSBDeviceInterface24deActivateInterfaceGatedEv_vfpthunk_
__ZN20IOUSBDeviceInterface24unlockConfigurationGatedEj_vfpthunk_
__ZN20IOUSBDeviceInterface26finalizeConfigurationGatedEv_vfpthunk_
__ZN20IOUSBDeviceInterface31getCurrentAlternateSettingGatedERi_vfpthunk_
__ZN20IOUSBDeviceInterface31getPipeForAlternateSettingGatedEihRP15IOUSBDevicePipe_vfpthunk_
__ZN20IOUSBDeviceInterface32copyClassOrVendorDescriptorGatedEPNS_42tInternalClassOrVendorDescriptorParametersERi_vfpthunk_
__ZN20IOUSBDeviceInterface32registerDriverRequestActionGatedEPvS0__vfpthunk_
__ZN20IOUSBDeviceInterface32registerDriverRequestNotifyGatedEPvS0__vfpthunk_
__ZN20IOUSBDeviceInterface34unregisterDriverRequestTargetGatedEP8OSObject_vfpthunk_
__ZN20IOUSBDeviceInterface35registerCopyDescriptorCallbackGatedEPvS0__vfpthunk_
__ZN20IOUSBDeviceInterface36getPipeCountForAlternateSettingGatedEhRi_vfpthunk_
__ZN21AppleARMIICController15lockIICBusGatedEbP17AppleARMIICDevice_vfpthunk_
__ZN21AppleARMIICController16sleepActionGatedEm_vfpthunk_
__ZN21AppleARMIICController22enqueueIICCommandGatedEP18AppleARMIICCommand_vfpthunk_
__ZN21AppleARMIISController14setMCLKEnabledEP17AppleARMIISConfigb_vfpthunk_
__ZN21AppleARMIISController18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN21AppleARMIISController19stopIISCommandGatedEP17AppleARMIISDevicej_vfpthunk_
__ZN21AppleARMIISController22enqueueIISCommandGatedEP17AppleARMIISDevicejP18AppleARMIISCommand_vfpthunk_
__ZN21AppleARMSPIController16sleepActionGatedEm_vfpthunk_
__ZN21AppleARMSPIController22enqueueSPICommandGatedEP18AppleARMSPICommand_vfpthunk_
__ZN21AppleCS46L21Interface16_getAdcCodeGatedEv_vfpthunk_
__ZN21AppleCS46L21Interface20_gpioCheckInputGatedEj_vfpthunk_
__ZN21AppleCS46L21Interface24_gpioConfigureInputGatedEjNS_17GPIOInterruptTypeENS_12GPIOPUPDTypeEb_vfpthunk_
__ZN21AppleCS46L21Interface25_gpioConfigureOutputGatedEjb_vfpthunk_
__ZN21AppleConvergedIPCPool9gatedStopEv_vfpthunk_
__ZN21AppleEmbeddedPCIEPort13readConfigRegEj_vfpthunk_
__ZN21AppleEmbeddedPCIEPort14writeConfigRegEjj_vfpthunk_
__ZN21AppleMultitouchDevice12_resetDeviceEv_vfpthunk_
__ZN21AppleMultitouchDevice16_addFramesClientEv_vfpthunk_
__ZN21AppleMultitouchDevice17_handleTouchFrameEPhPjP31AppleMultitouchDeviceUserClient_vfpthunk_
__ZN21AppleMultitouchDevice19_registerUserClientEP31AppleMultitouchDeviceUserClient_vfpthunk_
__ZN21AppleMultitouchDevice19_removeFramesClientEv_vfpthunk_
__ZN21AppleMultitouchDevice20_setMaxInjectionSizeEPj_vfpthunk_
__ZN21AppleMultitouchDevice21_unregisterUserClientEP31AppleMultitouchDeviceUserClient_vfpthunk_
__ZN21AppleMultitouchDevice22_cacheDevicePropertiesEv_vfpthunk_
__ZN21AppleMultitouchDevice26_deviceGetReportWithLookUpEP21AMDDeviceReportStructh_vfpthunk_
__ZN21AppleMultitouchDevice26_deviceSetReportWithLookUpEP21AMDDeviceReportStructh_vfpthunk_
__ZN21AppleMultitouchDevice5_stopEP9IOService_vfpthunk_
__ZN21AppleUSBDeviceNCMData12messageGatedEjP9IOServicePv_vfpthunk_
__ZN21AppleUSBHostResources10closeGatedEP9IOServicej_vfpthunk_
__ZN21AppleUSBHostResources21releaseBusNumberGatedEP22AppleUSBHostController_vfpthunk_
__ZN21AppleUSBHostResources21reserveBusNumberGatedEP22AppleUSBHostControllerRh_vfpthunk_
__ZN21AppleUSBHostResources26usbHostResourcesRegisteredEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN21AppleUSBHostResources27registerUSBHostServiceGatedEP22AppleUSBHostControllerP7OSArrayj_vfpthunk_
__ZN21AppleUSBHostResources33allocateDownstreamBusCurrentGatedEP9IOServiceRjS2__vfpthunk_
__ZN21AppleUSBHostResources9openGatedEP9IOServicejPv_vfpthunk_
__ZN21IOAccessoryManagerAID16handleIDBusStateEi_vfpthunk_
__ZN21IOAccessoryPortSerial17transmitDataGatedEP18IOMemoryDescriptorj_vfpthunk_
__ZN21IOInterruptController15handleInterruptEPvP9IOServicei_vfpthunk_
__ZN21IOInterruptController15handleInterruptEPvP9IOServicei_vfpthunk__0
__ZN21IOInterruptController15handleInterruptEPvP9IOServicei_vfpthunk__1
__ZN21IOInterruptController15handleInterruptEPvP9IOServicei_vfpthunk__2
__ZN21IOInterruptController15handleInterruptEPvP9IOServicei_vfpthunk__3
__ZN21IOUSBDeviceController15createPipeGatedER21tCreatePipeParametersRP15IOUSBDevicePipe_vfpthunk_
__ZN21IOUSBDeviceController15gotoDeviceStateENS_12kDeviceStateE_vfpthunk_
__ZN21IOUSBDeviceController17activatePipeGatedEP15IOUSBDevicePipe_vfpthunk_
__ZN21IOUSBDeviceController19deactivatePipeGatedEP15IOUSBDevicePipe_vfpthunk_
__ZN21IOUSBDeviceController19handleStallEndpointEib_vfpthunk_
__ZN21IOUSBDeviceController22systemPowerDownHandlerEPvjP9IOServiceS0_m_vfpthunk_
__ZN21IOUSBDeviceController24handleUSBCableDisconnectEv_vfpthunk_
__ZN21IOUSBDeviceController7ioGatedEP24_IOUSBDeviceIORequestTag_vfpthunk_
__ZN22AGXFirmwareKextRTBuddy16powerStateChangeEmm_vfpthunk_
__ZN22AGXFirmwareKextRTBuddy26sendMessageToFirmwareGatedEPy_vfpthunk_
__ZN22AGXFirmwareKextRTBuddy28sendAsyncNoteToFirmwareGatedEPyPb_vfpthunk_
__ZN22AppleARMDMAAudioDevice14completeBufferEPviyy_vfpthunk_
__ZN22AppleARMIISAudioDevice33_matchingNotificationHandlerGatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN22AppleARMPMUPowerSource18gatedSetPropertiesEP8OSObject_vfpthunk_
__ZN22AppleARMSPMIController16lockSPMIBusGatedEbP18AppleARMSPMIDevice_vfpthunk_
__ZN22AppleARMSPMIController16sleepActionGatedEm_vfpthunk_
__ZN22AppleARMSPMIController23enqueueSPMICommandGatedEP19AppleARMSPMICommand_vfpthunk_
__ZN22AppleSynopsysOTGDevice13softReconnectEP18IOTimerEventSource_vfpthunk_
__ZN22AppleSynopsysOTGDevice21stuckEpDetectFunctionEP18IOTimerEventSource_vfpthunk_
__ZN22AppleTemperatureSensor12timerExpiredEP18IOTimerEventSource_vfpthunk_
__ZN22AppleUSB20CameraKitHub40updateCompanionHubDesiredBusCurrentGatedEjj_vfpthunk_
__ZN22AppleUSBHostController10closeGatedEP9IOServicej_vfpthunk_
__ZN22AppleUSBHostController14abortPipeGatedEP13IOUSBHostPipeiP9IOService_vfpthunk_
__ZN22AppleUSBHostController14closePipeGatedEP13IOUSBHostPipe_vfpthunk_
__ZN22AppleUSBHostController14filterOccurredEP28IOFilterInterruptEventSource_vfpthunk_
__ZN22AppleUSBHostController14stopThreadCallEP11thread_call_vfpthunk_
__ZN22AppleUSBHostController15adjustPipeGatedEP13IOUSBHostPipeRNS0_22StandardUSBDescriptorsE_vfpthunk_
__ZN22AppleUSBHostController15createPipeGatedERN13IOUSBHostPipe22StandardUSBDescriptorsEP15IOUSBHostDeviceP18IOUSBHostInterfaceRPS0__vfpthunk_
__ZN22AppleUSBHostController15forcePowerGatedEmj_vfpthunk_
__ZN22AppleUSBHostController16abortStreamGatedEP15IOUSBHostStreami_vfpthunk_
__ZN22AppleUSBHostController16closeStreamGatedEP15IOUSBHostStream_vfpthunk_
__ZN22AppleUSBHostController16pmStopThreadCallEP11thread_call_vfpthunk_
__ZN22AppleUSBHostController16registerHubGatedEP15IOUSBHostDevicePKN11StandardUSB13HubDescriptorE17tRegisterHubFlags_vfpthunk_
__ZN22AppleUSBHostController16resumePipesGatedEP15IOUSBHostDevice_vfpthunk_
__ZN22AppleUSBHostController17createStreamGatedEP15IOUSBHostDeviceP13IOUSBHostPipejRP15IOUSBHostStream_vfpthunk_
__ZN22AppleUSBHostController17interruptOccurredEP22IOInterruptEventSourcei_vfpthunk_
__ZN22AppleUSBHostController17suspendPipesGatedEP15IOUSBHostDevice_vfpthunk_
__ZN22AppleUSBHostController18enableStreamsGatedEP13IOUSBHostPipe_vfpthunk_
__ZN22AppleUSBHostController18setPowerFloorGatedEm_vfpthunk_
__ZN22AppleUSBHostController18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN22AppleUSBHostController18unregisterHubGatedEP15IOUSBHostDevice_vfpthunk_
__ZN22AppleUSBHostController19clearPipeStallGatedEP13IOUSBHostPipe_vfpthunk_
__ZN22AppleUSBHostController19disableStreamsGatedEP13IOUSBHostPipe_vfpthunk_
__ZN22AppleUSBHostController19serializeStatisticsEPvP11OSSerialize_vfpthunk_
__ZN22AppleUSBHostController19stopThreadCallGatedEv_vfpthunk_
__ZN22AppleUSBHostController20controllerRegisteredEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN22AppleUSBHostController22didTerminateThreadCallEPNS_32tControllerDidTerminateArgumentsE_vfpthunk_
__ZN22AppleUSBHostController22getLPMExitLatencyGatedEj13tUSBLinkState18tUSBLPMExitLatencyRj_vfpthunk_
__ZN22AppleUSBHostController24serializeStatisticsGatedEP12OSDictionaryP11OSSerialize_vfpthunk_
__ZN22AppleUSBHostController26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN22AppleUSBHostController26registerSuperSpeedHubGatedEP15IOUSBHostDevicePKN11StandardUSB23SuperSpeedHubDescriptorE_vfpthunk_
__ZN22AppleUSBHostController27didTerminateThreadCallGatedEP9IOServicej_vfpthunk_
__ZN22AppleUSBHostController27getCompanionControllerGatedEjhRPS__vfpthunk_
__ZN22AppleUSBHostController27hardwareExceptionThreadCallEj_vfpthunk_
__ZN22AppleUSBHostController27stopThreadCallCompleteGatedEv_vfpthunk_
__ZN22AppleUSBHostController30controllerRegisteredThreadCallEP11thread_call_vfpthunk_
__ZN22AppleUSBHostController31adjustDeviceMaxExitLatencyGatedEP15IOUSBHostDevicej_vfpthunk_
__ZN22AppleUSBHostController31controllerRegisteredGatedPhase1Ev_vfpthunk_
__ZN22AppleUSBHostController31controllerRegisteredGatedPhase2Ev_vfpthunk_
__ZN22AppleUSBHostController32hardwareExceptionThreadCallGatedEj_vfpthunk_
__ZN22AppleUSBHostController33allocateDownstreamBusCurrentGatedEP9IOServiceRjS2_Ri_vfpthunk_
__ZN22AppleUSBHostController7ioGatedEP19AppleUSBHostRequest_vfpthunk_
__ZN22AppleUSBHostController9openGatedEP9IOServicejPv_vfpthunk_
__ZN22AppleUSBHostUserClient10closeGatedEP9IOServicej_vfpthunk_
__ZN22AppleUSBHostUserClient17requestCompletionEP37AppleUSBHostUserClientAsyncParamBlockij_vfpthunk_
__ZN22AppleUSBHostUserClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN22IOAVVideoTimingElement24setUnsafeColorElementIDsEP7OSArray_vfpthunk_
__ZN22IOAVVideoTimingElement29setDSCRequiredColorElementIDsEP7OSArray_vfpthunk_
__ZN22IOInterruptEventSource23normalInterruptOccurredEPvP9IOServicei_vfpthunk_
__ZN22IOInterruptEventSource24disableInterruptOccurredEPvP9IOServicei_vfpthunk_
__ZN22IOUSBMassStorageDriver19AcceptSCSITaskGatedEPb_vfpthunk_
__ZN22IOUSBMassStorageDriver20AbortCurrentSCSITaskEv_vfpthunk_
__ZN22IOUSBMassStorageDriver21BeginProvidedServicesEv_vfpthunk_
__ZN22IOUSBMassStorageDriver24CompleteSCSICommandGatedEP8OSObjectP19SCSIServiceResponseP14SCSITaskStatus_vfpthunk_
__ZN22IOUSBMassStorageDriver29WaitForCommandCompletionGatedEv_vfpthunk_
__ZN23AppleAOPAudioController13_publishBelowEP15IORegistryEntry_vfpthunk_
__ZN23AppleAOPAudioController24_systemWillShutdownGatedEPKv_vfpthunk_
__ZN23AppleHIDTransportDevice10startGatedEP9IOService_vfpthunk_
__ZN23AppleHIDTransportDevice15killDeviceGatedEv_vfpthunk_
__ZN23AppleHIDTransportDevice18setPowerStateGatedEPKmP9IOService_vfpthunk_
__ZN23AppleHIDTransportDevice22doomclockTimeoutActionEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN23AppleHIDTransportDevice23systemWillShutdownGatedEPj_vfpthunk_
__ZN23AppleHIDTransportDevice24newLoggerUserClientGatedEP4taskPvP12OSDictionaryPP12IOUserClient_vfpthunk_
__ZN23AppleHIDTransportDevice36handlePrioritySystemPowerStateChangeEPvjP9IOServiceS0_m_vfpthunk_
__ZN23AppleIPCAudioController13_publishBelowEP15IORegistryEntry_vfpthunk_
__ZN23AppleProxHIDEventDriver14getReportGatedEPhPm15IOHIDReportTypej_vfpthunk_
__ZN23AppleProxHIDEventDriver14setReportGatedEPhm15IOHIDReportTypej_vfpthunk_
__ZN23AppleProxHIDEventDriver15aggressorActionEj_vfpthunk_
__ZN23AppleSMCWirelessCharger21handleBacklightUpdateEPvjP9IOServiceS0_m_vfpthunk_
__ZN23AppleTemperatureService16handleReadSensorEv_vfpthunk_
__ZN23AppleUSB20XHCITypeCPort16transportCreatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN23AppleUSB20XHCITypeCPort16transportMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN23AppleUSB30XHCITypeCPort16transportCreatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN23AppleUSB30XHCITypeCPort16transportMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN23AppleUSBHostDeviceIdler14setObjectGatedEPK15OSMetaClassBase_vfpthunk_
__ZN23AppleUSBHostDeviceIdler17removeObjectGatedEPK15OSMetaClassBase_vfpthunk_
__ZN23AppleUSBHostDeviceIdler21updateIdlePolicyGatedEj_vfpthunk_
__ZN23IO80211VirtualInterface12outputPacketEP6__mbufPv_vfpthunk_
__ZN23IOAccessoryManagerOrion18startRoleSwapGatedEj_vfpthunk_
__ZN23IOAppleConvergedIPCPool9gatedStopEv_vfpthunk_
__ZN23IOImageLoaderUserClient19externalMethodGatedEPv_vfpthunk_
__ZN23IOSCSIProtocolInterface17HandlePowerChangeEv_vfpthunk_
__ZN23ProvInfoIOKitUserClient11afpHseTGo8sEPK39ProvInfoIOKitUserGenerateInFieldSeedIO_PS0__vfpthunk_
__ZN23ProvInfoIOKitUserClient12fpXqy2dxjQo7EPK32ProvInfoIOKitUserGenerateSeedIO_PS0__vfpthunk_
__ZN23ProvInfoIOKitUserClient15ucEncryptSUInfoEPK36ProvInfoIOKitUserEncryptSUInfoInput_PS0__vfpthunk_
__ZN23ProvInfoIOKitUserClient23ucEncryptWithWrappedKeyEPK44ProvInfoIOKitUserEncryptWithWrappedKeyInput_PS0__vfpthunk_
__ZN23ProvInfoIOKitUserClient25ucGetEncryptedSeedSegmentEP46ProvInfoIOKitUserGetEncryptedSeedSegmentInput_Ph_vfpthunk_
__ZN23ProvInfoIOKitUserClient6AEWpRsEPKhPhmPm_vfpthunk_
__ZN24AppleBCMWLANBusInterface13parseOTPTupleEhhPKvPv_vfpthunk_
__ZN24AppleBCMWLANBusInterface5resetEv_vfpthunk_
__ZN24AppleBaseAudioController13_attachDeviceEjj_vfpthunk_
__ZN24AppleBaseAudioController13_detachDeviceEjj_vfpthunk_
__ZN24AppleBaseAudioController15_accessRegisterEjP37AppleAOPAudioRegisterAccessDescriptor_vfpthunk_
__ZN24AppleBaseAudioController18_getDevicePropertyEjjPvPm_vfpthunk_
__ZN24AppleBaseAudioController18_setDevicePropertyEjjPKvm_vfpthunk_
__ZN24AppleConvergedIPCControl10pciMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN24AppleConvergedIPCControl15providerMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN24AppleConvergedIPCControl15serviceNotifierEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN24AppleConvergedIPCControl15timerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN24AppleConvergedIPCControl16sleepWakeHandlerEPvjP9IOServiceS0_m_vfpthunk_
__ZN24AppleConvergedIPCControl17asyncEventHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN24AppleConvergedIPCControl17updateReportGatedEP19IOReportChannelListjPvS2__vfpthunk_
__ZN24AppleConvergedIPCControl18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN24AppleConvergedIPCControl19handleTimeSyncGatedEPy_vfpthunk_
__ZN24AppleConvergedIPCControl20asyncThreadCallGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl20configureReportGatedEP19IOReportChannelListjPvS2__vfpthunk_
__ZN24AppleConvergedIPCControl20disableLockPortGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl21enableUnlockPortGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl23timesyncTimerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN24AppleConvergedIPCControl25pciMessageThreadCallGatedEPv_vfpthunk_
__ZN24AppleConvergedIPCControl26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN24AppleConvergedIPCControl26waitIfLinkUnavailableGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl27handleQuiesceUnQuiesceGatedEb_vfpthunk_
__ZN24AppleConvergedIPCControl31handleTLPCompletionTimeoutGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl32informProviderPciDriverIsUpGatedEv_vfpthunk_
__ZN24AppleConvergedIPCControl9handleAEREP16IOPCIEventSourceP10IOPCIEvent_vfpthunk_
__ZN24AppleInterruptController25stopInterruptTimestampingEj_vfpthunk_
__ZN24AppleInterruptController26startInterruptTimestampingEj_vfpthunk_
__ZN24AppleSMCSensorDispatcher15timeoutOccurredEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN24AppleSPUALSSealionDriver20handleFrameBufferMsgEP15IOAOPALSMessageP13IOAOPALSFrame_vfpthunk_
__ZN24AppleUSBDeviceNCMControl12messageGatedEjP9IOServicePv_vfpthunk_
__ZN24AppleUSBHostLegacyClient10closeGatedEP9IOServicej_vfpthunk_
__ZN24AppleUSBHostLegacyClient28legacyDeviceInterestNotifierEPvjP9IOServiceS0_m_vfpthunk_
__ZN24AppleUSBHostLegacyClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN24AppleUSBRequestCompleter13onThreadGatedERb_vfpthunk_
__ZN24AppleUSBRequestCompleter22bundlingTimeoutHandlerEP18IOTimerEventSource_vfpthunk_
__ZN24AppleUSBRequestCompleter25completeRequestThreadCallEPNS_20tRequestCompleteDataE_vfpthunk_
__ZN24AppleUSBRequestCompleter30completeRequestThreadCallGatedEP15AppleUSBRequest_vfpthunk_
__ZN24AppleUSBRequestCompleter41completeSynchronousRequestQueueThreadCallEP11thread_call_vfpthunk_
__ZN24AppleUSBRequestCompleter46completeSynchronousRequestQueueThreadCallGatedEv_vfpthunk_
__ZN24AppleUSBXHCITransferRing7timeoutEP18IOTimerEventSource_vfpthunk_
__ZN24IOAccessoryHSAIDBulkData11handleStartEv_vfpthunk_
__ZN24IOAccessoryIDBusBulkData11handleStartEv_vfpthunk_
__ZN25AppleARMFunctionIISActive20interestNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN25AppleC26ChargerUserClient19externalMethodGatedEjP25IOExternalMethodArguments_vfpthunk_
__ZN25AppleIISAudioLinkDelegate26powerStateDidChangeToGatedEPmS0_P9IOService_vfpthunk_
__ZN25AppleIISAudioLinkDelegate27powerStateWillChangeToGatedEPmS0_P9IOService_vfpthunk_
__ZN25AppleMultitouchHIDService21handleInterruptReportEyP18IOMemoryDescriptor15IOHIDReportTypej_vfpthunk_
__ZN25AppleMultitouchHIDService25_systemPowerChangeHandlerEjP9IOServicePvm_vfpthunk_
__ZN25AppleNubSynopsysOTGDevice12messageGatedEjP9IOServicePv_vfpthunk_
__ZN25AppleSamsungSPIController15_dmaEventActionEP16IODMAEventSourceP12IODMACommandiy_vfpthunk_
__ZN25AppleSamsungSPIController16_interruptActionEP22IOInterruptEventSourcei_vfpthunk_
__ZN25AppleTempSensorUserClient12getTempGatedEPi_vfpthunk_
__ZN25IOAccessoryIDBusTransport14sendBreakGatedEv_vfpthunk_
__ZN25IOAccessoryIDBusTransport17sendBusResetGatedEv_vfpthunk_
__ZN25IOAccessoryIDBusTransport27assertBusResetInternalGatedENS_26IOAccessoryIDBusAssertTypeE_vfpthunk_
__ZN25IOAccessoryIDBusTransport34processAssertBusResetInternalGatedEv_vfpthunk_
__ZN25IOMobileFramebufferLegacy17powerUpDART_gatedEb_vfpthunk_
__ZN25IOMobileFramebufferLegacy18test_control_gatedEPKyj_vfpthunk_
__ZN25IOMobileFramebufferLegacy20set_brightness_gatedEi_vfpthunk_
__ZN25IOMobileFramebufferLegacy20writeDebugInfo_gatedEP12OSDictionary_vfpthunk_
__ZN25IOMobileFramebufferLegacy22set_corner_temps_gatedEPKi_vfpthunk_
__ZN25IOMobileFramebufferLegacy24default_fb_surface_gatedEjj_vfpthunk_
__ZN25IOMobileFramebufferLegacy25disable_calibration_gatedEb_vfpthunk_
__ZN25IOMobileFramebufferLegacy25set_api_power_state_gatedEmP9IOService_vfpthunk_
__ZN25IOMobileFramebufferLegacy25set_api_power_state_gatedEmP9IOService_vfpthunk__0
__ZN25IOMobileFramebufferLegacy25set_postblend_scale_gatedEi_vfpthunk_
__ZN25IOMobileFramebufferLegacy28set_color_filter_scale_gatedEi_vfpthunk_
__ZN25IOMobileFramebufferLegacy30set_thermal_throttle_cap_gatedEj_vfpthunk_
__ZN25IOMobileFramebufferLegacy35deallocate_default_fb_surface_gatedEv_vfpthunk_
__ZN25IOSkywalkNetworkInterface23interfaceAdvisoryEnableEb_vfpthunk_
__ZN25IOUSBDeviceControlRequest13zlpCompletionEPvij_vfpthunk_
__ZN25IOUSBDeviceControlRequest22sendControlInDataGatedEyPK28IOUSBDeviceControlCompletionP18IOMemoryDescriptorPK21IOUSBDeviceCompletion_vfpthunk_
__ZN25IOUSBMassStorageDriverNub21SwitchToInterimParentEPvP9IOServiceP10IONotifier_vfpthunk_
OSKextSavedMutableSegment::restoreContents(segment_command_64*)
__ZN26AppleAOPVoiceTriggerLoggerL10VTLogErrorEPKcz_1_0
__ZN26AppleAOPVoiceTriggerLoggerL10VTLogErrorEPKcz_1_1
__ZN26AppleConvergedIPCRTIDevice15asyncCompletionEP22IOInterruptEventSourcei_vfpthunk_
__ZN26AppleConvergedIPCRTIDevice15timerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator17systemPowerChangeEPvjP9IOServiceS0_m_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator18setPowerStateGatedEm_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator27systemPowerChangeThreadCallEPNS_24tSystemPowerNotifyParamsE_vfpthunk_
__ZN26AppleEmbeddedUSBArbitrator32systemPowerChangeThreadCallGatedEj_vfpthunk_
__ZN26AppleHIDTransportDeviceSPI13setPowerGatedEP13AHTPowerStatePj_vfpthunk_
__ZN26AppleHIDTransportDeviceSPI15interruptActionEv_vfpthunk_
__ZN26AppleHIDTransportDeviceSPI16resetDeviceGatedEv_vfpthunk_
__ZN26AppleHIDTransportDeviceSPI17bootTimeoutActionEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN26AppleHIDTransportDeviceSPI20tempPowerTimerActionEP8OSObjectP18IOTimerEventSource_vfpthunk_
__ZN26AppleHIDTransportHIDDevice14getReportGatedEP18IOMemoryDescriptorP15IOHIDReportTypePh_vfpthunk_
__ZN26AppleHIDTransportHIDDevice14setReportGatedEP18IOMemoryDescriptorP15IOHIDReportTypePh_vfpthunk_
__ZN26AppleNubSynopsysOTG3Device12messageGatedEjP9IOServicePv_vfpthunk_
__ZN26AppleUSB20InternalIntelHub14clientInterestEPvjP9IOServiceS0_m_vfpthunk_
__ZN26AppleUSB20InternalIntelHub21notifyConnectionGatedEP9IOServiceNS_20tNotifyConnectChangeE_vfpthunk_
__ZN26AppleUSBEthernetController26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN26AppleUSBEthernetController27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN26IOAVAbstractVideoInterface20getColorDynamicRangeE14IOAVLinkSource_0_0
__ZN26IOAVIISAudioDMAEventSource18completeDMACommandEP12IODMACommandiyy_vfpthunk_
__ZN26IOAppleConvergedIPCControl10pciMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN26IOAppleConvergedIPCControl10startGatedEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl13asyncFunctionEPvPFvS0_S0_ES0_S0__vfpthunk_
__ZN26IOAppleConvergedIPCControl13errorFunctionEjPvS0__vfpthunk_
__ZN26IOAppleConvergedIPCControl13timerFunctionEPFvPvS0_EyS0_S0__vfpthunk_
__ZN26IOAppleConvergedIPCControl15serviceNotifierEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN26IOAppleConvergedIPCControl15timerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN26IOAppleConvergedIPCControl16sleepAckFunctionEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl16triggerTrapGatedEP17IOACIPCCompletion_vfpthunk_
__ZN26IOAppleConvergedIPCControl17getBootStageGatedEPj_vfpthunk_
__ZN26IOAppleConvergedIPCControl18deviceWakeFunctionEb_vfpthunk_
__ZN26IOAppleConvergedIPCControl18portChangeFunctionEbi_vfpthunk_
__ZN26IOAppleConvergedIPCControl18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN26IOAppleConvergedIPCControl18systemPowerMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN26IOAppleConvergedIPCControl19linkStateUpFunctionEPyS0_PjS1__vfpthunk_
__ZN26IOAppleConvergedIPCControl20asyncThreadCallGatedEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl20collectSnapshotGatedEP18IOMemoryDescriptorjP17IOACIPCCompletion_vfpthunk_
__ZN26IOAppleConvergedIPCControl20createDeviceFunctionEbj_vfpthunk_
__ZN26IOAppleConvergedIPCControl20disableLockPortGatedEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl21enableUnlockPortGatedEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl23mmioReadMemoryBar0GatedEjPhjb_vfpthunk_
__ZN26IOAppleConvergedIPCControl23mmioReadMemoryBar1GatedEjPhjb_vfpthunk_
__ZN26IOAppleConvergedIPCControl23portQuiesceWaitFunctionEbPv_vfpthunk_
__ZN26IOAppleConvergedIPCControl24portManualEnableFunctionEbb_vfpthunk_
__ZN26IOAppleConvergedIPCControl25pciMessageThreadCallGatedEPv_vfpthunk_
__ZN26IOAppleConvergedIPCControl26isDeviceAccessibleFunctionEv_vfpthunk_
__ZN26IOAppleConvergedIPCControl26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN26IOAppleConvergedIPCControl27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN26IOAppleConvergedIPCControl30serviceRegisterThreadCallGatedEP9IOServicePv_vfpthunk_
__ZN26IOAppleConvergedIPCControl9handleAEREP16IOPCIEventSourceP10IOPCIEvent_vfpthunk_
__ZN26IOHDIXControllerUserClient13createDrive64EPK21HDIImageCreateBlock64Pi_vfpthunk_
__ZN26IOHDIXControllerUserClient17testNetBootMethodEPKvm_vfpthunk_
__ZN27AppleCSMikeyBusI2CInterface21_i2cWriteControlGatedEhNS_8I2CSpeedE_vfpthunk_
__ZN27AppleCSMikeyBusI2CInterface22_i2cStartTransferGatedEyPKhy_vfpthunk_
__ZN27AppleConvergedIPCUserClient10closeGatedEP9IOServicej_vfpthunk_
__ZN27AppleConvergedIPCUserClient16clientCloseGatedEv_vfpthunk_
__ZN27AppleConvergedIPCUserClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN27AppleEmbeddedI2CLightSensor14_setPropertiesEP8OSObject_vfpthunk_
__ZN27AppleHIDTransportBootloader17readPropertyGatedEP8OSStringPP6OSData_vfpthunk_
__ZN27AppleHIDTransportBootloader18setPropertiesGatedEP8OSObject_vfpthunk_
__ZN27AppleHIDTransportBootloader19setPropertiesLegacyEP8OSObject_vfpthunk_
__ZN27AppleHIDTransportBootloader19updatePropertyGatedEP8OSStringP6OSDataPj_vfpthunk_
__ZN27AppleHIDTransportBootloader21clearMemoryDumpsGatedEv_vfpthunk_
__ZN27AppleHIDTransportBootloader26copyCachedMemoryDumpsGatedEPP7OSArray_vfpthunk_
__ZN27AppleHIDTransportProtocolZ214getReportGatedEPNS_12ReportStructEP26AppleHIDTransportInterface_vfpthunk_
__ZN27AppleHIDTransportProtocolZ214setReportGatedEPNS_12ReportStructEP26AppleHIDTransportInterface_vfpthunk_
__ZN27AppleHIDTransportProtocolZ215handleInterruptEv_vfpthunk_
__ZN27AppleUSB20XHCILightningPort17cableNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN27AppleUSB30XHCILightningPort17cableNotificationEPvjP9IOServiceS0_m_vfpthunk_
__ZN27AppleUSBHostFrameworkClient10closeGatedEP9IOServicej_vfpthunk_
__ZN27AppleUSBHostFrameworkClient17requestCompletionEPNS_42AppleUSBHostFrameworkClientAsyncParamBlockEij_vfpthunk_
__ZN27AppleUSBHostFrameworkClient9openGatedEP9IOServicej_vfpthunk_
__ZN27AppleUSBHostResourcesClient18usbServiceCallbackEP22AppleUSBHostControllerP7OSArrayj_vfpthunk_
__ZN27IOSCSIPrimaryCommandsDevice15ClampPowerStateEv_vfpthunk_
__ZN28AppleBCMWLANBusInterfacePCIe20externalResetTimeoutEP18IOTimerEventSource_vfpthunk_
__ZN28AppleBCMWLANBusInterfacePCIe21platformActionHandlerEjPv_vfpthunk_
__ZN28AppleBCMWLANBusInterfacePCIe26platformActionHandlerGatedEjPv_vfpthunk_
__ZN28AppleHIDTransportSMCNotifier15smcNotificationEPK8OSSymbolP8OSObjectm_vfpthunk_
__ZN28AppleHIDTransportSMCNotifier25deviceNotificationHandlerEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN28AppleMultitouchSPIUserClient18setPropertiesGatedEP8OSObject_vfpthunk_
__ZN28AppleMultitouchTimestampSync4lockEv_vfpthunk_
__ZN28AppleMultitouchTimestampSync6unlockEv_vfpthunk_
__ZN28AppleUSBHostDeviceUserClient16ResetDeviceGatedEv_vfpthunk_
__ZN28IOAppleConvergedIPCBTIDevice12freeMappedIOEPv_vfpthunk_
__ZN28IOAppleConvergedIPCBTIDevice13allocMappedIOEP13acipcMappedIO_vfpthunk_
__ZN28IOAppleConvergedIPCBTIDevice13errorFunctionEjPvS0__vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice12freeMappedIOEPv_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice13allocMappedIOEP13acipcMappedIO_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice13asyncCallMainEv_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice13errorFunctionEjPvS0__vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice13timerFunctionEPFvPvS0_EyS0_S0__vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice15timerCompletionEP18IOTimerEventSource_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice17dummyTrapFunctionEPviyS0__vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice19openCloseCompletionEbjj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice19stateChangeFunctionEj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice22devSleepEnableFunctionEbj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice23bootStageChangeFunctionEj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice24sleepStateChangeFunctionEj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice26snapshotCompletionFunctionEijj_vfpthunk_
__ZN28IOAppleConvergedIPCRTIDevice27trapCompletionCallbackGatedEi_vfpthunk_
__ZN28IOSlowAdaptiveClockingDomain18_getIndexListGatedEPjS0__vfpthunk_
__ZN28IOSlowAdaptiveClockingDomain19_findIndexListGatedEv_vfpthunk_
__ZN29AppleConvergedIPCBTIInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN29AppleConvergedIPCBTIInterface14sendImageGatedEPNS_7tParamsE_vfpthunk_
__ZN29AppleConvergedIPCBTIInterface17readRegisterGatedEPNS_7rParamsE_vfpthunk_
__ZN29AppleConvergedIPCBTIInterface24prepareImageCommandGatedEP18IOMemoryDescriptorPP12IODMACommand_vfpthunk_
__ZN29AppleConvergedIPCBTIInterface24sendImageCompletionGatedEijj_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl16mmioReadOTPGatedEjPhjb_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl16triggerTrapGatedEP17IOACIPCCompletion_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl22trapBlockingCompletionEPviyS0__vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl23mmioReadMemoryBar0GatedEjPhjb_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl23mmioReadMemoryBar1GatedEjPhjb_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl27prepareForMMIOCoredumpGatedEv_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl27trapBlockingCompletionGatedEPv_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl30collectSnapshotOrCoredumpGatedEP18IOMemoryDescriptorjP17IOACIPCCompletionb_vfpthunk_
__ZN29AppleConvergedIPCOLYBTControl33excludePatchFromMMIOCoredumpGatedEv_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface10writeGatedEPNS_7tParamsE_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface11userLogKnobEPvS0__vfpthunk_
__ZN29AppleConvergedIPCRTIInterface16skywalkReadGatedEP26AppleConvergedIPCSkywalkIO_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface17abortChannelGatedEPNS_7tParamsE_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface17skywalkWriteGatedEP26AppleConvergedIPCSkywalkIO_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface17startChannelGatedEPNS_7tParamsE_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface19abortPipesSyncGatedEv_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface19startPipesSyncGatedEv_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface27enableSkywalkInterfaceGatedEj_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface28disableSkywalkInterfaceGatedEj_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface9openGatedEP9IOServicejPv_vfpthunk_
__ZN29AppleConvergedIPCRTIInterface9readGatedEPNS_7tParamsE_vfpthunk_
__ZN29AppleEmbeddedButtonController16completeHPDetectEbP12OSDictionaryPK8OSSymbol_vfpthunk_
__ZN29AppleEmbeddedButtonController20triggerHPDetectGatedEb_vfpthunk_
__ZN29AppleHIDKeyboardEventDriverV218setPropertiesGatedEP8OSObject_vfpthunk_
__ZN29AppleHIDKeyboardEventDriverV226initKeyboardBacklightGatedEv_vfpthunk_
__ZN29AppleHIDKeyboardEventDriverV230initKeyboardConfigurationGatedEv_vfpthunk_
__ZN29AppleUSBNetworkingCommandPool9stopGatedEv_vfpthunk_
__ZN29IOAppleConvergedIPCUserClient10closeGatedEP9IOServicej_vfpthunk_
__ZN29IOAppleConvergedIPCUserClient16clientCloseGatedEv_vfpthunk_
__ZN29IOAppleConvergedIPCUserClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN29IOSlowAdaptiveClockingManager15_addDomainGatedEjP28IOSlowAdaptiveClockingDomain_vfpthunk_
__ZN29IOSlowAdaptiveClockingManager16_findDomainGatedEjbPP28IOSlowAdaptiveClockingDomain_vfpthunk_
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_100
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_101
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_102
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_103
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_104
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_105
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_106
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_107
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_108
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_109
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_110
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_111
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_112
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_113
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_114
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_115
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_116
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_117
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_118
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_119
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_120
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_121
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_122
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_123
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_124
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_125
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_126
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_127
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_128
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_129
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_130
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_131
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_132
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_133
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_134
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_135
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_136
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_137
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_138
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_139
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_140
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_141
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_142
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_143
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_144
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_145
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_146
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_147
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_148
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_149
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_150
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_151
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_152
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_153
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_154
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_155
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_156
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_157
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_158
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_159
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_160
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_161
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_162
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_163
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_164
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_165
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_166
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_167
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_168
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_169
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_170
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_171
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_172
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_173
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_174
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_175
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_176
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_177
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_178
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_179
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_180
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_181
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_182
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_183
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_184
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_185
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_186
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_187
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_188
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_189
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_190
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_191
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_192
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_193
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_194
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_195
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_196
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_197
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_198
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_199
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_200
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_201
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_202
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_203
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_204
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_205
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_206
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_207
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_208
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_209
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_210
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_211
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_212
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_213
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_214
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_215
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_216
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_217
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_218
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_219
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_220
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_221
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_222
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_223
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_224
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_225
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_226
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_227
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_228
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_229
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_230
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_231
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_232
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_233
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_234
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_235
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_236
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_237
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_238
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_239
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_240
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_241
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_242
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_243
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_244
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_245
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_246
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_247
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_248
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_249
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_250
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_251
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_252
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_253
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_254
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_255
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_256
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_257
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_258
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_259
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_260
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_261
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_262
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_263
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_264
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_265
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_266
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_267
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_268
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_269
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_270
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_271
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_272
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_273
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_274
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_275
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_276
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_277
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_278
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_279
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_280
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_281
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_282
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_283
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_284
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_285
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_286
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_287
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_288
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_289
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_290
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_291
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_292
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_293
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_294
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_295
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_296
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_297
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_298
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_299
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_300
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_301
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_302
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_303
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_304
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_305
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_306
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_307
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_308
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_309
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_310
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_311
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_312
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_313
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_314
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_315
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_316
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_317
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_318
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_319
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_320
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_321
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_322
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_323
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_324
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_325
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_326
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_327
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_328
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_329
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_330
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_331
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_332
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_333
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_334
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_335
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_336
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_337
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_338
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_339
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_340
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_341
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_342
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_343
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_344
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_345
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_346
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_347
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_348
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_349
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_350
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_351
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_352
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_353
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_354
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_355
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_356
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_357
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_358
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_359
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_360
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_361
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_362
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_363
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_364
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_365
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_366
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_367
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_368
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_369
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_370
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_371
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_372
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_373
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_374
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_375
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_376
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_377
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_378
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_379
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_380
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_381
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_382
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_383
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_384
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_385
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_386
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_387
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_388
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_389
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_390
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_391
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_392
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_393
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_394
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_395
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_396
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_397
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_398
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_399
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_400
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_401
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_402
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_403
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_404
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_405
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_406
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_407
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_408
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_409
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_410
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_411
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_412
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_413
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_414
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_415
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_416
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_417
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_418
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_419
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_420
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_421
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_422
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_423
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_424
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_425
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_426
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_427
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_428
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_429
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_430
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_431
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_432
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_433
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_434
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_435
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_436
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_437
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_438
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_439
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_440
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_441
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_442
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_443
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_444
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_445
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_446
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_447
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_448
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_449
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_450
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_451
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_452
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_453
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_454
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_455
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_456
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_457
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_458
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_459
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_460
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_461
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_462
__ZN29IOSlowAdaptiveClockingManagerC2EPK11OSMetaClass_463
__ZN30AppleUSBEthernetControllerAX8818outputTimerExpiredEP18IOTimerEventSource_vfpthunk_
__ZN30AppleUSBEthernetControllerAX8819serializeStatisticsEPvP11OSSerialize_vfpthunk_
__ZN30AppleUSBEthernetControllerAX8822vendorReadRequestGatedEhPvj_vfpthunk_
__ZN30AppleUSBEthernetControllerAX8824serializeStatisticsGatedEP12OSDictionaryP11OSSerialize_vfpthunk_
__ZN30AppleUSBEthernetControllerAX8829vendorWriteNoDataRequestGatedEhtt_vfpthunk_
__ZN30IOUSBDeviceInterfaceUserClient16clientCloseGatedEv_vfpthunk_
__ZN30IOUSBDeviceInterfaceUserClient24setAlternateSettingGatedEh_vfpthunk_
__ZN30IOUSBDeviceInterfaceUserClient33completeClassCommandCallbackGatedEP25IOExternalMethodArguments_vfpthunk_
__ZN31AppleAOPAudioAssetManagerDevice30externalClientRequestCallGatedEP12OSDictionary_vfpthunk_
__ZN31AppleARMPWMInOutPulseController19_setPropertiesGatedEP8OSObject_vfpthunk_
__ZN31AppleHIDTransportProtocolHIDSPI15handleInterruptEv_vfpthunk_
__ZN31AppleHIDTransportProtocolHIDSPI18controlReportGatedEPNS_17ControlReportInfoE_vfpthunk_
__ZN31ApplePPMSystemCapabilityMonitor18_asbArrivalHandlerEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN31ApplePPMSystemCapabilityMonitor29batterySamplingTimeoutHandlerEP18IOTimerEventSource_vfpthunk_
__ZN31AppleUSBHostInterfaceUserClient28isochronousRequestCompletionEP46IOUSBHostInterfaceUserClientISOAsyncParamBlockiP25IOUSBHostIsochronousFrame_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface13errorFunctionEjPvS0__vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface14sendImageGatedEPNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface17readRegisterGatedEPNS_7rParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface18generateNonceGatedEv_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface19synchronousFunctionEPviyS0__vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface23nonceCompletionFunctionEPv_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface24sendImageCompletionGatedEijj_vfpthunk_
__ZN31IOAppleConvergedIPCBTIInterface27sendImageCompletionFunctionEijj_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface10closeGatedEP9IOServicej_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface13asyncFunctionEjPFvPvS0_ES0_S0__vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface13errorFunctionEjPvS0__vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface13openRingGatedE25AppleConvergedIPCRingTypePNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface14closeRingGatedE25AppleConvergedIPCRingTypePNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface15asyncCompletionEj_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface15enqueueIOsGatedEiPP17IOACIPCDescriptorPj_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface21createRingSourceGatedE25AppleConvergedIPCRingTypejP18IOACIPCRingOptionsPP23IOAppleConvergedIPCRing_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface21openTransferRingGatedEPNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface22abortTransferRingGatedEPNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface22closeTransferRingGatedEPNS_7tParamsE_vfpthunk_
__ZN31IOAppleConvergedIPCRTIInterface9openGatedEP9IOServicejPv_vfpthunk_
__ZN32AppleEmbeddedExternalAudioObject11enableGatedEv_vfpthunk_
__ZN32AppleEmbeddedExternalAudioObject12disableGatedEv_vfpthunk_
__ZN32AppleEmbeddedExternalAudioObject18setPowerStateGatedEmP9IOService_vfpthunk_
__ZN32AppleEmbeddedExternalAudioObject9pingGatedEv_vfpthunk_
__ZN32AppleHIDTransportProtocolSCMFIFO14getReportGatedEPhS0_P18IOMemoryDescriptor_vfpthunk_
__ZN32AppleHIDTransportProtocolSCMFIFO14setReportGatedEPhS0_P18IOMemoryDescriptor_vfpthunk_
__ZN32AppleHIDTransportProtocolSCMFIFO18lockInterfaceGatedEPh_vfpthunk_
__ZN32AppleHIDTransportProtocolSCMFIFO20unlockInterfaceGatedEPh_vfpthunk_
__ZN32AppleOLYHALPortInterfacePCIeAMFM11enableGatedEb39AppleOLYHALPortInterfacePowerActionType_vfpthunk_
__ZN32AppleOLYHALPortInterfacePCIeAMFM18processAMFMMessageEPvjP9IOServiceS0_m_vfpthunk_
__ZN32AppleOLYHALPortInterfacePCIeAMFM23processAMFMMessageGatedEjPvm_vfpthunk_
__ZN33AppleEmbeddedAudioResourceManager28_resourceRoutingNotificationEP26AudioKernelClientInterfaceP10IONotifier_vfpthunk_
__ZN33AppleEmbeddedAudioResourceManager31_externalClientRequestCallGatedEP12OSDictionary_vfpthunk_
__ZN33AppleEmbeddedAudioResourceManager33_resourceRoutingNotificationGatedEP26AudioKernelClientInterfaceP10IONotifier_vfpthunk_
__ZN33AppleEmbeddedAudioResourceManager39_loadResourceRoutingFromDeviceTreeGatedEP9IOService_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817813readSROMGatedEPttt_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817817readBulkPipeGatedEv_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817820readPhyRegisterGatedEhPt_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817821bulkReadCompleteGatedEPvij_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817821interruptReadCompleteEPvij_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817822bulkWriteCompleteGatedEPvij_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817822readInterruptPipeGatedEv_vfpthunk_
__ZN33AppleUSBEthernetControllerAX8817825linkChangeThreadCallGatedEv_vfpthunk_
__ZN33AppleUSBEthernetDeviceCommandPool9stopGatedEv_vfpthunk_
__ZN34AppleConvergedIPCControlUserClient10closeGatedEP9IOServicej_vfpthunk_
__ZN34AppleConvergedIPCControlUserClient16clientCloseGatedEv_vfpthunk_
__ZN34AppleConvergedIPCControlUserClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN34AppleMultitouchInputHIDEventDriver18unleashDeviceGatedEv_vfpthunk_
__ZN34AppleMultitouchInputHIDEventDriver18unleashThreadEnterEv_vfpthunk_
__ZN34AppleMultitouchInputHIDEventDriver24setMultitouchPreferencesEP12OSDictionary_vfpthunk_
__ZN34AppleMultitouchInputHIDEventDriver24systemPowerChangeHandlerEPvjP9IOServiceS0_m_vfpthunk_
__ZN34AppleMultitouchInputHIDEventDriver27enableMultitouchEventsGatedEb_vfpthunk_
__ZN34AppleMultitouchMouseHIDEventDriver25syncMousePreferencesGatedEv_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A13readSROMGatedEPttt_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A17readBulkPipeGatedEv_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A20readPhyRegisterGatedEhPt_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A21bulkReadCompleteGatedEPvij_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A21interruptReadCompleteEPvij_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A21writePhyRegisterGatedEht_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A22bulkWriteCompleteGatedEPvij_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A22readInterruptPipeGatedEv_vfpthunk_
__ZN34AppleUSBEthernetControllerAX88772A25linkChangeThreadCallGatedEv_vfpthunk_
__ZN36AppleBCMWLANSkywalkRxCompletionQueue14enqueuePacketsEP26IOSkywalkRxCompletionQueuePP15IOSkywalkPacketjPv_vfpthunk_
__ZN36AppleBCMWLANSkywalkRxSubmissionQueue14dequeuePacketsEP26IOSkywalkRxSubmissionQueuePKP15IOSkywalkPacketjPv_vfpthunk_
__ZN36AppleBCMWLANSkywalkTxCompletionQueue14enqueuePacketsEP26IOSkywalkTxCompletionQueuePP15IOSkywalkPacketjPv_vfpthunk_
__ZN36AppleBCMWLANSkywalkTxSubmissionQueue14dequeuePacketsEP26IOSkywalkTxSubmissionQueuePKP15IOSkywalkPacketjPv_vfpthunk_
__ZN36AppleBCMWLANSkywalkTxSubmissionQueue14queryFreeSpaceEP26IOSkywalkTxSubmissionQueuePj_vfpthunk_
__ZN36AppleDeviceManagementHIDEventService21_resumeFromSleepGatedEv_vfpthunk_
__ZN36AppleDeviceManagementHIDEventService21handleInterruptReportEyP18IOMemoryDescriptor15IOHIDReportTypejPv_vfpthunk_
__ZN36AppleDeviceManagementHIDEventService24systemPowerChangeHandlerEPvjP9IOServiceS0_m_vfpthunk_
__ZN36AppleHIDTransportBootloaderHIDDevice22notifyDeviceEventGatedEPNS_11DeviceEventE_vfpthunk_
__ZN36AppleHIDTransportBootloaderHIDDevice25deviceNotificationHandlerEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN36AppleUSBHostFrameworkInterfaceClient21isochronousCompletionEPNS_55AppleUSBHostFrameworkInterfaceClientIsochAsyncParameterEiP25IOUSBHostIsochronousFrame_vfpthunk_
__ZN36AppleUSBHostFrameworkInterfaceClient32isochronousTransactionCompletionEPNS_55AppleUSBHostFrameworkInterfaceClientIsochAsyncParameterEiP31IOUSBHostIsochronousTransaction_vfpthunk_
__ZN36IOAppleConvergedIPCControlUserClient10closeGatedEP9IOServicej_vfpthunk_
__ZN36IOAppleConvergedIPCControlUserClient16clientCloseGatedEv_vfpthunk_
__ZN36IOAppleConvergedIPCControlUserClient9openGatedEP9IOServicejPv_vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient14ucGenerateSeedEPK32ProvInfoIOKitUserGenerateSeedIO_PS0__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient15initKextSessionEP24ovHBHGCR5ZAwSmgzDIbVv2OxS1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient15ucEncryptSUInfoEPK36ProvInfoIOKitUserEncryptSUInfoInput_PS0__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient16decryptSliceDataEP27KDDecryptDataForSliceDecIO_S1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient20GetReEncryptionVaultEP22KDReEncryptionVaultIO_S1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient20ProcessEncryptedDataEP13RwYEgOMUTKuzQS1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient20ucExchangeWithHooverEPKhPhmPm_vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient21ucGenerateInFieldSeedEPK39ProvInfoIOKitUserGenerateInFieldSeedIO_PS0__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient23decryptOneSampleWithCTREP23KDDecryptDataWithCTRIO_S1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient23decryptSliceDataWithCTREP28KDDecryptSliceDataWithCTRIO_S1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient23ucEncryptWithWrappedKeyEPK44ProvInfoIOKitUserEncryptWithWrappedKeyInput_PS0__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient25DSSessionDongleProcessKeyEP20KDDSSessionDongleIO_S1__vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient25ucGetEncryptedSeedSegmentEP46ProvInfoIOKitUserGetEncryptedSeedSegmentInput_Ph_vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient5uOxAgEPj_vfpthunk_
__ZN40com_apple_driver_FairPlayIOKitUserClient9LQ1N1WLcwEP14RVbEMromyR0SkmS1__vfpthunk_
__ZN43com_apple_driver_KeyDeliveryIOKitUserClient15BhC27sdosUloe3wEP24ovHBHGCR5ZAwSmgzDIbVv2OxS1__vfpthunk_
__ZN43com_apple_driver_KeyDeliveryIOKitUserClient15NeurZDENovkbM5BEP13RwYEgOMUTKuzQS1__vfpthunk_
__ZN43com_apple_driver_KeyDeliveryIOKitUserClient16IUjmnmQJCeChncCMEP20KDDSSessionDongleIO_S1__vfpthunk_
__ZN43com_apple_driver_KeyDeliveryIOKitUserClient26Q7XAVRnkuHxY6niW8U6cz7oXQiEPj_vfpthunk_
__ZN5IOMFB15InstanceTrackerD0Ev_0_0
__ZN5IOMFB15InstanceTrackerD1Ev_0_0
OSKext::copyMachoUUID(mach_header_64 const*)
OSKext::segmentShouldBeWired(segment_command_64*)
OSKext::jettisonFileSetLinkeditSegment(mach_header_64*)
void clpcv3::cpu::ClusterPerfSampler::sample<(clpcv3::cpu::CounterSubset)1>(clpcv3::array<clpcv3::array<unsigned long long, 2ul>, Config::numClusterCounters<(clpcv3::cpu::CounterSubset)1>()>&, clpcv3::array<clpcv3::array<unsigned long long, 2ul>, Config::numClusterCounters<(clpcv3::cpu::CounterSubset)1>()>&)
auto clpcv3::global::PlatformConfigInterface<clpcv3::global::T8030Config>::platformBitCount<unsigned long long>(unsigned long long)
__ZN6clpcv36global23PlatformConfigInterfaceINS0_11T8030ConfigEE16platformBitCountIyEEDaT__0
__ZN6clpcv36global23PlatformConfigInterfaceINS0_11T8030ConfigEE16platformBitCountIyEEDaT__1
__ZN7BTDebug13coreDumpGatedEPNS_15CoreDumpContextE_vfpthunk_
__ZN7BTDebug13dumpLogsGatedEPKc_vfpthunk_
__ZN7BTDebug15serviceNotifierEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN7BTDebug16coreDumpCompleteEPviy_vfpthunk_
__ZN7BTDebug16readLogsCompleteEPviPN14BTDebugService7LogDataEj_vfpthunk_
__ZN7BTDebug17crashInfoCompleteEPvS0_i_vfpthunk_
__ZN7BTDebug17updateReportGatedEP19IOReportChannelListjPvS2__vfpthunk_
__ZN7BTDebug18enableLoggingGatedEjjPK13LogFlowParamsj_vfpthunk_
__ZN7BTDebug19disableLoggingGatedEv_vfpthunk_
__ZN7BTDebug20configureReportGatedEP19IOReportChannelListjPvS2__vfpthunk_
__ZN7OSArraydlEPvm_14_0
__ZN7RTBuddy22_incomingMessageActionEPvj_vfpthunk_
__ZN7RTBuddy27_allocateVisibleMemoryGatedEPKNS_30AllocateVisibleMemoryArgumentsEPP13IOSlaveMemory_vfpthunk_
__ZN7RTBuddy28_slaveMemoryFromIOPPhysGatedEPKyS1_PP18RTBuddySlaveMemory_vfpthunk_
__ZN7RTBuddy29_setPowerStateGuardEntryGatedEPK17RTBuddyPowerStatePKb_vfpthunk_
__ZN7RTBuddy32_setPowerStatePerformChangeGatedEPK17RTBuddyPowerStatePKb_vfpthunk_
__ZN8AppleMCA18deferredStartGatedEv_vfpthunk_
__ZN8AppleMCA22initExternalPowerGatedEP9IOService_vfpthunk_
__ZN8AppleMCA26powerStateDidChangeToGatedEmmP9IOService_vfpthunk_
__ZN8AppleMCA27powerStateWillChangeToGatedEmmP9IOService_vfpthunk_
__ZN8AppleMCA32matchingNotificationHandlerGatedEPvP9IOServiceP10IONotifier_vfpthunk_
__ZN8ApplePPM33policyInputUpdateInterruptHandlerEP22IOInterruptEventSourcei_vfpthunk_
__ZN8AppleSMC22_powerStateActionGatedEmPv_vfpthunk_
__ZN9ApplePMGR38getCurrentCPUCoreSramEnergyAccumulatorEv_0_0
__ZN9IOService15powerChangeDoneEm_vfpthunk_
__ZN9IOService16stringFromReturnEi_vfpthunk_
__ZN9IOService21powerStateDidChangeToEmmPS__vfpthunk_
__ZN9IOService22powerStateWillChangeToEmmPS__vfpthunk_
__ZN9IOService9terminateEj_vfpthunk_
__ZN9IOStorage4readEP9IOServiceyP18IOMemoryDescriptorP19IOStorageAttributesP19IOStorageCompletion_vfpthunk_
__ZN9IOStorage5writeEP9IOServiceyP18IOMemoryDescriptorP19IOStorageAttributesP19IOStorageCompletion_vfpthunk_
__ZNK14AGXAccelerator47getPropertyNoiseSuppressionGPUIdlePowerOffStateEv_vfpthunk_
__ZNK18AppleEmbeddedAudio26_copyPropertyInternalGatedEPK8OSSymbolPP8OSObject_vfpthunk_
__ZNK18IOUSBHostHIDDevice21getHidDescriptorGatedEhhPhPj_vfpthunk_
__ZNK20IOUSBDeviceInterface22getTotalPipeCountGatedERi_vfpthunk_
__ZNK20IOUSBDeviceInterface29getAlternateSettingCountGatedERi_vfpthunk_
__ZNK26AppleEmbeddedUSBArbitrator23getPublishCriteriaGatedEPK8OSSymbol_vfpthunk_
__ZNK7libkern17bounded_array_refIhN9os_detail21panic_trapping_policyEE5sliceEmm_0_0
AppleSimpleUARTSync::enqueueData(__mbuf*)::$_10::__invoke(AppleSimpleUARTSync&, IOSimpleMbufMemoryDescriptor**, __mbuf*) (.cold.1)
AppleSimpleUARTSync::enqueueData(__mbuf*)::$_10::__invoke(AppleSimpleUARTSync&, IOSimpleMbufMemoryDescriptor**, __mbuf*) (.cold.2)
auto clpc::PropertyFactory::cpu_fast_die<0ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::cpu_fast_die<1ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::power_cpu_zone<0ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::cpu_cluster_devel<0ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::cpu_cluster_devel<1ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::power_package_zone<0ul>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
auto clpc::PropertyFactory::thread_group_fabric_memory_cpu_cluster_type<(clpc::cpu::ClusterType::Value)0>()::'lambda0'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda0'(unsigned int&, void*, clpc::PropertyFlags&))
__ZZN4clpc15PropertyFactory43thread_group_fabric_memory_cpu_cluster_typeILNS_3cpu11ClusterType5ValueE0EEEDavENUlRjPvRNS_13PropertyFlagsEE0_8__invokeES6_S7_S9__0
auto clpc::PropertyFactory::thread_group_fabric_memory_cpu_cluster_type<(clpc::cpu::ClusterType::Value)0>()::'lambda1'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda1'(unsigned int&, void*, clpc::PropertyFlags&))
__ZZN4clpc15PropertyFactory43thread_group_fabric_memory_cpu_cluster_typeILNS_3cpu11ClusterType5ValueE0EEEDavENUlRjPvRNS_13PropertyFlagsEE1_8__invokeES6_S7_S9__0
auto clpc::PropertyFactory::thread_group_fabric_memory_cpu_cluster_type<(clpc::cpu::ClusterType::Value)0>()::'lambda2'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda2'(unsigned int&, void*, clpc::PropertyFlags&))
__ZZN4clpc15PropertyFactory43thread_group_fabric_memory_cpu_cluster_typeILNS_3cpu11ClusterType5ValueE0EEEDavENUlRjPvRNS_13PropertyFlagsEE2_8__invokeES6_S7_S9__0
auto clpc::PropertyFactory::thread_group_fabric_memory_cpu_cluster_type<(clpc::cpu::ClusterType::Value)0>()::'lambda'(unsigned int&, void*, clpc::PropertyFlags&)::__invoke(void*, clpc::PropertyFlags, 'lambda'(unsigned int&, void*, clpc::PropertyFlags&))
__ZZN4clpc15PropertyFactory43thread_group_fabric_memory_cpu_cluster_typeILNS_3cpu11ClusterType5ValueE0EEEDavENUlRjPvRNS_13PropertyFlagsEE_8__invokeES6_S7_S9__0
bool clpc::cpu::TemperatureSampler::init(clpc::cpu::TemperatureSamplerConfig)::$_2::operator()<unsigned long long, unsigned int, clpc::UniquePtr<IOMemoryMap, clpc::ObjectDeleter<IOMemoryMap> >, unsigned long long>(unsigned long long, unsigned int, clpc::UniquePtr<IOMemoryMap, clpc::ObjectDeleter<IOMemoryMap> >&, unsigned long long&) const (.cold.1)
bool clpc::cpu::TemperatureSampler::init(clpc::cpu::TemperatureSamplerConfig)::$_2::operator()<unsigned long long, unsigned int, clpc::UniquePtr<IOMemoryMap, clpc::ObjectDeleter<IOMemoryMap> >, unsigned long long>(unsigned long long, unsigned int, clpc::UniquePtr<IOMemoryMap, clpc::ObjectDeleter<IOMemoryMap> >&, unsigned long long&) const (.cold.2)
auto clpc::CLPC::startTrace()::$_6::operator()<clpc::PropertyName, unsigned long>(clpc::PropertyName*, unsigned long, bool) const
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.1)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.2)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.3)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.4)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.5)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.6)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.7)
auto clpc::CLPC::initReporting()::$_4::operator()<unsigned long long, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const>(unsigned long long, OSSymbol const*, unsigned short, clpc::report::SubGroup, clpc::report::HistogramType, clpc::ReportActions const&) const (.cold.8)
clpc::CLPC::init(ApplePMGRNub&, AppleCLPC&, IOWorkLoop*)::$_39::__invoke(int) (.cold.1)
clpc::CLPC::init(ApplePMGRNub&, AppleCLPC&, IOWorkLoop*)::$_39::__invoke(int) (.cold.2)
clpc::CLPC::init(ApplePMGRNub&, AppleCLPC&, IOWorkLoop*)::$_45::__invoke(void*, void*, IOService*, IONotifier*) (.cold.1)
auto float clpc::tgrp::Efficiency<clpc::tgrp::NormalThreadGroup>::updateStallControllers<(clpc::tgrp::metrics::MetricID)4>(clpc::array<float, 2ul> const&, clpc::typed_index_array<clpc::control::PIConfig<float>, clpc::cpu::ClusterType, 2ul> const&, clpc::typed_index_array<clpc::control::PIController<float, (clpc::ControlDirection)0>, clpc::cpu::ClusterType, 2ul>&, unsigned long long, unsigned long long, clpc::trace_detail::EventID, clpc::trace_detail::EventID)::'lambda'(auto, auto const&)::operator()<clpc::cpu::ClusterType::Value, clpc::cpu::Topology>(auto, auto const&) const
auto AHSLeelaPhone::logHapticsStoppedStatistics(OSSharedPtr<AHSEventCollection>)::$_6::operator()(AHSLeelaPhone*, OSSharedPtr<OSDictionary const>, OSSharedPtr<AHSEventCollection>) const::'lambda'(auto, AHS::Leela::Sym, char const*)::operator()<float>(auto, AHS::Leela::Sym, char const*) const
auto AHSLeelaPhone::logHapticsStoppedStatistics(OSSharedPtr<AHSEventCollection>)::$_6::operator()(AHSLeelaPhone*, OSSharedPtr<OSDictionary const>, OSSharedPtr<AHSEventCollection>) const::'lambda'(auto, AHS::Leela::Sym, char const*)::operator()<unsigned int>(auto, AHS::Leela::Sym, char const*) const
__ZZZN4clpc4CLPC4initER12ApplePMGRNubR9AppleCLPCP10IOWorkLoopENK4$_43clIiNS_3ane8TopologyEEEDaT_RKT0_ENUlPvSG_P9IOServiceP10IONotifierE_8__invokeESG_SG_SI_SK_.cold.2
__ZZZN4clpc4CLPC4initER12ApplePMGRNubR9AppleCLPCP10IOWorkLoopENK4$_43clIiNS_3ane8TopologyEEEDaT_RKT0_ENUlPvSG_P9IOServiceP10IONotifierE_8__invokeESG_SG_SI_SK_.cold.3
auto clpc::power::CPUANEPowerMap::init(clpc::array<clpc::cpu::DVFMTable, 2ul> const&)::$_5::operator()() const::'lambda'(auto, auto const&)::operator()<clpc::cpu::ClusterType::Value, clpc::cpu::Topology>(auto, auto const&) const
___Block_byref_object_copy_
___CEDeserialize_block_invoke
___ZN14IOPMrootDomain24idleSleepPreventersCountEv_block_invoke
___ZN19IOGPUWorkQueue24initEP22IOGPU2iii
___ZN19IOGPUWorkQueue24initEP23IOGPU2iii
invocation function for block in validateProfile(ProfileValidationData&, unsigned char const*, unsigned long)
invocation function for block in copyAudioDeviceUID(OSString*, unsigned int)
invocation function for block in ApplePMPv2::setProperties(OSObject*)
invocation function for block in ApplePMPv2::findSlaveMemory(unsigned long long)
invocation function for block in ApplePMPv2::setRegistryEntry(OSSymbol const*, OSData const*)
invocation function for block in AGXFirmware::scrubEvents()
invocation function for block in IOAVService::sortElements()
invocation function for block in IOAVService::filterElements()
invocation function for block in IOAVService::processTimingElements()
invocation function for block in IOCatalogue::removeDrivers(OSDictionary*, bool)
invocation function for block in IOCatalogue::startMatching(OSSymbol const*)
invocation function for block in IOCatalogue::resetAfterUserspaceReboot()
invocation function for block in IOGPUDevice::serialize_app_usage(OSSerialize*)
invocation function for block in IOHIDDevice::free()
invocation function for block in IOServicePH::systemHalt(int)
invocation function for block in IOServicePH::matchingEnd(IOService*)
invocation function for block in AGXWorkQueue::restart()
invocation function for block in ApplePPMCPMS::resolveAndUpdateClientBudgets(UniqueClientID_t)
invocation function for block in AppleSEPXART::commit_hash()
invocation function for block in AppleSEPXART::gl_shutdown()
invocation function for block in AppleSEPXART::_nonce_action(void*, unsigned int*, unsigned char)
invocation function for block in AppleSEPXART::lynx_get_cpsn(void*, unsigned long*)
invocation function for block in AppleSEPXART::lynx_get_pub_key(void*, unsigned long*)
invocation function for block in AppleSEPXART::nonce_invalidate()
invocation function for block in AppleSEPXART::flush_cached_xart(bool)
invocation function for block in AppleSEPXART::lynx_authenticate(void const*, unsigned long)
invocation function for block in AppleSEPXART::xart_shtdwn_vol_unmount()
invocation function for block in AppleSEPXART::gl_eacs()
invocation function for block in AppleUSBXHCI::createDevice(tInternalUSBHostConnectionSpeed, unsigned int, unsigned int)
invocation function for block in AppleUSBXHCI::destroyDevice(IOUSBHostDevice*)
invocation function for block in IOUserServer::systemHalt(int)
invocation function for block in IOUserServer::clientClose()
invocation function for block in IOUserServer::serviceDidStop(IOService*, IOService*)
invocation function for block in IOUserServer::checkEntitlements(OSDictionary*, OSObject*, IOService*, IOService*)
invocation function for block in IOUserServer::objectInstantiate(OSObject*, IORPC, IORPCMessage*)
invocation function for block in IOUserServer::serviceNewUserClient(IOService*, task*, void*, unsigned int, OSDictionary*, IOUserClient**)
invocation function for block in IOUserServer::powerStateDidChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in IOUserServer::finalize(unsigned int)
invocation function for block in AppleMCKAudio::setUpClock(bool)
invocation function for block in AppleMCKAudio::_enableMCLK(bool)
invocation function for block in AppleMCKAudio::setPowerState(unsigned long, IOService*)
invocation function for block in AppleTypeCPhy::openTunnel(AppleTypeCPhyInterface*, AppleTypeCPhyTransportType, AppleTypeCPhyTunnel&, AppleTypeCPhyTunnelOption)
invocation function for block in AppleTypeCPhy::closeTunnel(AppleTypeCPhyTransportType, AppleTypeCPhyTunnel&)
invocation function for block in AppleTypeCPhy::isInterfaceOpen(AppleTypeCPhyInterface*)
invocation function for block in AppleTypeCPhy::assignLaneClient()
invocation function for block in AppleTypeCPhy::assignUSB2Client()
invocation function for block in AppleTypeCPhy::powerStateDidChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleTypeCPhy::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleTypeCPhy::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleTypeCPhy::open(AppleTypeCPhyInterface*, AppleTypeCPhyPowerLevel, unsigned int, unsigned int)
invocation function for block in AppleTypeCPhy::open(AppleTypeCPhyInterface*, AppleTypeCPhyPowerLevel, unsigned int, unsigned int)
invocation function for block in AppleTypeCPhy::close(AppleTypeCPhyInterface*)
invocation function for block in IOSurfaceRoot::purge_iomd_from_mappers(IOMemoryDescriptor*)
invocation function for block in IOSurfaceRoot::writeDebugInfoWithOptions(OSDictionary*, unsigned int)
invocation function for block in IOUSBHostPipe::AsyncIOBundled_Impl(unsigned int, unsigned int, unsigned int*, unsigned int const*, int, OSAction*, unsigned int)
invocation function for block in AGXAccelerator::processAllChannelCommands(AGXWorkQueue*, IOGPUChannel*, unsigned int)
invocation function for block in AGXAccelerator::restart()
invocation function for block in AppleAuthCPAID::_getAuthInfo()
invocation function for block in AppleAuthCPAID::copyCertificate()
invocation function for block in AppleAuthCPAID::_getIDSN()
invocation function for block in IOACIPCRTIPipe::cancelIO()
invocation function for block in IOAccessoryTRM::start(IOService*)
invocation function for block in IOGPUScheduler::enableWorkQueues()
invocation function for block in IOGPUScheduler::disableWorkQueues()
invocation function for block in IOGPUScheduler::scheduleWorkqueue(IOGPUWorkQueue*)
invocation function for block in IOGPUScheduler::unwireAllSysMemory()
invocation function for block in IOGPUScheduler::describeAllocations(IOGPUAllocationInfo*)
invocation function for block in IOHIDInterface::HandleReportPrivate(unsigned long long, IOMemoryDescriptor*, IOHIDReportType, unsigned int, void*)
invocation function for block in IOHIDInterface::AddReportToPool_Impl(IOBufferMemoryDescriptor*)
invocation function for block in IOHIDInterface::close(IOService*, unsigned int)
invocation function for block in IOHIDInterface::Open_Impl(IOService*, unsigned int, OSAction*)
invocation function for block in AppleC26Charger::resetCommsCallout()
invocation function for block in AppleC26Charger::tearDownCommsCallout()
invocation function for block in AppleSEPManager::_setupEpPower(unsigned int, unsigned int)
invocation function for block in AppleSEPManager::checkInMaster(AppleSEPXART*)
invocation function for block in AppleSEPManager::setFirmwareBytes(IOMemoryDescriptor*, bool, bool)
invocation function for block in AppleSEPManager::notifyEndpointEnabled(unsigned int, bool)
invocation function for block in AppleSEPManager::_setGigalockerAvailable(char const*)
invocation function for block in AppleUSBXDCIARM::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleUSBXDCIARM::connectedWithAccessoryCable()
invocation function for block in AppleUSBXHCIARM::systemPowerChangeThreadCall(AppleUSBXHCIARM::tSystemPowerNotifyParams*)
invocation function for block in IOUSBHostDevice::CopyInterface_Impl(unsigned long, IOUSBHostInterface**)
invocation function for block in IOUSBHostDevice::CreateInterfaceIterator_Impl(unsigned long*)
invocation function for block in IOUSBHostDevice::DestroyInterfaceIterator_Impl(unsigned long)
invocation function for block in IOUSBHostDevice::start(IOService*)
invocation function for block in AppleAuthCPHSAID::copyCertificate()
invocation function for block in AppleAuthCPHSAID::generateSignature(void const*, unsigned long long, void*, unsigned long long*)
invocation function for block in AppleAuthCPHSAID::handleStartAuthenticationResponse(void const*, unsigned int)
invocation function for block in AppleAuthCPHSAID::handleGetAuthentationSignatureResponse(void const*, unsigned int)
invocation function for block in AppleAuthCPHSAID::handleGetAuthenticationCertificateResponse(void const*, unsigned int)
invocation function for block in AppleAuthCPHSAID::start(IOService*)
invocation function for block in AppleAuthCPRelay::_receiveAction(AppleAuthCPRelayInterface*, int, unsigned char, OSObject*)
invocation function for block in AppleUSBHostPort::enumerateDeviceComplete(IOUSBHostDevice*, int)
invocation function for block in AppleUSBHostPort::reset(unsigned int, AppleUSBHostPort::AppleUSBHostPortTerminateDeviceReason)
invocation function for block in CCPipeUserClient::registerNotificationPort(ipc_port*, unsigned int, unsigned int)
invocation function for block in IO80211QueueCall::handleEntry(QCEntry*)
invocation function for block in IO80211QueueCall::freeEntry(QCEntry*)
invocation function for block in IOACIPCRTIDevice::deRegisterPipe(unsigned int, unsigned short)
invocation function for block in IOACIPCRTIDevice::terminate()
invocation function for block in IOAVElementArray::withSet(OSSet const*)
invocation function for block in IOAVSplitDisplay::prepareLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOAVSplitDisplay::completeLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOAVSplitDisplay::didStartLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOAVSplitDisplay::willStopLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOAVSplitDisplay::stopLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOAVSplitDisplay::startLink(IOAVLinkData*, IOAVLinkSource)
invocation function for block in IOHIDEventDriver::setProperties(OSObject*)
invocation function for block in IOHIDEventDriver::copyEvent(unsigned int, IOHIDEvent*, unsigned int)
invocation function for block in AppleT8027USB3Phy::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleT8027USB3Phy::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AFKMailboxEndpoint::stateMachineInit(SMMachine*)
invocation function for block in AFKMailboxEndpoint::open(IOService*, unsigned int, void*)
invocation function for block in AIDImageDownloader::init(char const*, unsigned int, OSDictionary*, unsigned int)
invocation function for block in AppleCS46L0xDevice::_doAccMgrTask(AppleCS46L0xDevice::IoAccMgrTask)
invocation function for block in AppleCS46L0xDevice::willTerminate(IOService*, unsigned int)
invocation function for block in AppleCS46L0xDevice::_tempSensorEventCallback(IOHIDEventService*, void*, IOHIDEvent*, unsigned int)
invocation function for block in AppleCS46L0xDevice::_ungatedActionThreadCallback(void*)
invocation function for block in AppleCS46L0xDevice::start(IOService*)
invocation function for block in AppleCS46L0xDevice::message(unsigned int, IOService*, void*)
invocation function for block in AppleSEPARTService::getART()
invocation function for block in AppleSEPARTService::setART(OSData const*)
invocation function for block in AppleSEPARTService::clearART()
invocation function for block in AppleUSB30XHCIPort::setMaximumLinkSpeed(tInternalUSBHostConnectionSpeed)
invocation function for block in AppleUSB30XHCIPort::powerStateWillChangeTo(unsigned long, unsigned long, IOService*)
invocation function for block in AppleUserHIDDevice::handleStop(IOService*)
invocation function for block in AppleUserHIDDevice::handleStop(IOService*)
invocation function for block in AppleUserHIDDevice::processReport(HIDReportCommandType, IOMemoryDescriptor*, IOHIDReportType, unsigned int, unsigned int, IOHIDCompletion*, bool)
invocation function for block in AppleUserHIDDevice::processReport(HIDReportCommandType, IOMemoryDescriptor*, IOHIDReportType, unsigned int, unsigned int, IOHIDCompletion*, bool)
invocation function for block in AppleUserHIDDevice::setProperties(OSObject*)
invocation function for block in AppleUserHIDDevice::completeReport(OSAction*, int, unsigned int)
invocation function for block in AppleUserHIDDevice::getReport(IOMemoryDescriptor*, IOHIDReportType, unsigned int, unsigned int, IOHIDCompletion*)
invocation function for block in AppleUserHIDDevice::setReport(IOMemoryDescriptor*, IOHIDReportType, unsigned int, unsigned int, IOHIDCompletion*)
invocation function for block in IOAccessoryIDBusPD::handlePowerSourceChanged()
invocation function for block in IOFenceTransaction::runTransactionDeadlockCheck(IOFenceTransaction*, IOFenceTransaction*, unsigned int)
invocation function for block in IOFenceTransaction::runTransactionDeadlockCheck(IOFenceTransaction*, IOFenceTransaction*, unsigned int)
invocation function for block in IOHDCP2AuthSession::handleActionThreadFunc(void*, void*)
invocation function for block in IOMemoryDescriptor::makeMapping(IOMemoryDescriptor*, task*, unsigned long long, unsigned int, unsigned long long, unsigned long long)
invocation function for block in AHTFunctionSequence::contains(char const*)
invocation function for block in AppleBCMWLANCoreDbg::cmdWorkQueueDelay(apple80211_debug_command*, AppleBCMWLANCore*)
invocation function for block in ApplePearlSEPDriver::start(IOService*)
invocation function for block in CCLogPipeUserClient::setPipePolicy(CCLogPipeUserClientPolicy const*)
invocation function for block in CCLogPipeUserClient::setPipeNotifyTimeout(CCLogPipeUserClientNotifyTimeout const*)
invocation function for block in CCLogPipeUserClient::setPipeStreamLogFlags(CCLogPipeUserClientStreamLogFlags const*)
invocation function for block in CCLogPipeUserClient::setPipeStreamLogLevel(CCLogPipeUserClientStreamLogLevel const*)
invocation function for block in CCLogPipeUserClient::setPipeWatermarkLevel(CCLogPipeUserClientWatermarkLevel const*)
invocation function for block in CCLogPipeUserClient::updatePipeStreamLogFlags(CCLogPipeUserClientStreamLogFlagsByName const*)
invocation function for block in CCLogPipeUserClient::setPipeStreamConsoleLogFlags(CCLogPipeUserClientStreamLogFlags const*)
invocation function for block in CCLogPipeUserClient::setPipeStreamConsoleLogLevel(CCLogPipeUserClientStreamLogLevel const*)
invocation function for block in CCLogPipeUserClient::updatePipeStreamConsoleLogFlags(CCLogPipeUserClientStreamLogFlagsByName const*)
invocation function for block in CCLogPipeUserClient::open()
invocation function for block in CCLogPipeUserClient::mapPipe(CCLogPipeMap*)
invocation function for block in CCLogPipeUserClient::unmapPipe()
invocation function for block in CCDataPipeUserClient::profileLoaded()
invocation function for block in CCDataPipeUserClient::profileRemoved()
invocation function for block in CCDataPipeUserClient::open()
invocation function for block in CCDataPipeUserClient::close()
invocation function for block in CCDataPipeUserClient::capture(CCPipeUserClientCapture const*)
invocation function for block in IO80211APIUserClient::unmapBuffer()
invocation function for block in IO80211APIUserClient::_runDriverCommandHelper(IOExternalMethodArguments*)
invocation function for block in IO80211APIUserClient::mapBuffer(IOUCPipeMap*)
invocation function for block in IOPortTransportState::_initIndex()
invocation function for block in IOPortTransportState::_serialize(void*, OSSerialize*)
invocation function for block in IOPortTransportState::setMetadata(OSDictionary*)
invocation function for block in IOPortTransportState::setMetadata(char const*, OSObject*)
invocation function for block in IOPortTransportState::mergeMetadata(OSDictionary*)
invocation function for block in IOPortTransportState::_isHashInCache()
invocation function for block in IOPortTransportState::removeMetadata(OSSet*)
invocation function for block in IOPortTransportState::removeMetadata(char const*, OSObject*)
invocation function for block in IOPortTransportState::_addHashToCache()
invocation function for block in IOPortTransportState::_updateTRMState()
invocation function for block in IOPortTransportState::setDriverStatus(IOPortTransportStateDriverStatus)
invocation function for block in IOPortTransportState::setAuthenticationStatus(IOPortTransportStateAuthenticationStatus)
invocation function for block in IOPortTransportState::setAuthenticationStatus(IOPortTransportStateAuthenticationStatus)
invocation function for block in IOPortTransportState::setAuthenticationTimeout(unsigned short)
invocation function for block in IOPortTransportState::setAuthenticationRequired(bool)
invocation function for block in IOPortTransportState::_updatePreDefinedMetadataProperties()
invocation function for block in IOPortTransportState::start(IOService*)
invocation function for block in IOPortTransportState::setHash(OSData const*)
invocation function for block in IOPortTransportState::setActive(bool)
invocation function for block in IOUSBDeviceInterface::controlOutDataReadyCallback(unsigned long long, int)
invocation function for block in IOUSBDeviceInterface::controlRequestDriverCallback(unsigned long long, bool, int, IOMemoryDescriptor*, unsigned long long, IOUSBDeviceControlCompletion*)
invocation function for block in IOUSBDeviceInterface::updateDeviceRemoteWakePolicy(bool)
invocation function for block in AppleBCMWLANCommander::checkQueues(IOTimerEventSource*)
invocation function for block in AppleUSBHostResources::usbHostResourcesRegistered(void*, IOService*, IONotifier*)
invocation function for block in IO80211TrafficMonitor::addTrafficNotification(IO80211TrafficNotification*)
invocation function for block in IO80211TrafficMonitor::addTrafficNotification(IO80211TrafficNotification*)
invocation function for block in IO80211TrafficMonitor::createTrafficNotification(IO80211TrafficNotificationConfig const&, void (*)(OSObject*, void*, unsigned int, unsigned int, unsigned int))
invocation function for block in IOSEPBiometricService::sepMessageHandler(void*, void*)
invocation function for block in IOUSBDeviceController::handleUSBSoftDisconnect()
invocation function for block in AFKIOServiceClientBase::handleServiceInternal(IOService*)
invocation function for block in AFKIOServiceClientBase::handleServiceInternal(IOService*)
invocation function for block in AFKIOServiceClientBase::handleServiceInternal(IOService*)
invocation function for block in AFKIOServiceClientBase::start(IOService*)
invocation function for block in AFKMailboxEndpointBase::postSMEvent(SMEvent*)
invocation function for block in AFKMailboxEndpointBase::_getNubFromInterfaceID(unsigned int)
invocation function for block in AFKMailboxEndpointBase::handleEndpointStateChange(AFKMailboxEndpointBase::AFKEndpointState, AFKMailboxEndpointBase::AFKEndpointState)
invocation function for block in AFKMailboxEndpointBase::open(IOService*, unsigned int, void*)
invocation function for block in AFKMailboxEndpointBase::close(IOService*, unsigned int)
invocation function for block in AGXFirmwareKextRTBuddy::powerStateChange(unsigned long, unsigned long)
invocation function for block in AppleTypeCPhyInterface::setPowerLevel(AppleTypeCPhyPowerLevel)
invocation function for block in AppleTypeCPhyInterface::open(AppleTypeCPhyPowerLevel, unsigned int, unsigned int)
invocation function for block in AppleTypeCPhyInterface::close()
invocation function for block in AppleUSBHostController::systemWillShutdown(unsigned int)
invocation function for block in IO80211ThroughputCache::saveThroughput(ether_addr, unsigned int)
invocation function for block in IOAVVideoTimingElement::pruneColorElementIDs(OSArray const*, OSArray const*, void (IOAVVideoTimingElement::*)(OSArray*))
invocation function for block in AppleHIDTransportDevice::requestKill()
invocation function for block in AppleHIDTransportDevice::handlePrioritySystemPowerStateChange(void*, unsigned int, IOService*, void*, unsigned long)
invocation function for block in AppleMemCacheController::getCacheSize(unsigned int*, unsigned int*)
invocation function for block in AppleMemCacheController::getDSIDCount(MCPersistence)
invocation function for block in AppleMemCacheController::registerClient(MCClientInfo*, MCClient**)
invocation function for block in AppleMemCacheController::updateCacheSize(unsigned int, bool)
invocation function for block in AppleMemCacheController::enableDataStream(MCDataStreamInfoObject*, MCDataStream**)
invocation function for block in AppleMemCacheController::disableDataStream(MCDataStream*)
invocation function for block in AppleMemCacheController::copyDataStreamInfo(MCDataStreamId, dataStreamInfo*)
invocation function for block in AppleMemCacheController::copyDataStreamInfo(MCDataStreamId, dataStreamInfo*)
invocation function for block in AppleMemCacheController::copyDataStreamInfo(MCDataStreamId, dataStreamInfo*)
invocation function for block in AppleMemCacheController::enableDataCollection(unsigned int, unsigned int)
invocation function for block in AppleMemCacheController::disableAllDataStreams()
invocation function for block in AppleMemCacheController::disableDataCollection()
invocation function for block in AppleMemCacheController::enableDataStreamForTest(MCDataStreamUCReq*)
invocation function for block in AppleMemCacheController::getDataCollectionMemDescriptor()
invocation function for block in AppleMemCacheController::testMode(bool)
invocation function for block in AppleMemCacheController::copyDSIDs(MCPersistence, unsigned int*, unsigned int)
invocation function for block in IOAccessoryIDBusProxyPD::handleConfigChanged()
invocation function for block in IOAccessoryIDBusProxyPD::handlePowerSourceChanged()
invocation function for block in IOAppleConvergedIPCRing::setWorkLoop(IOWorkLoop*)
invocation function for block in AppleAirPowerMultiDevice::receiveRetAllPresentDevices(unsigned char const*, unsigned long)
invocation function for block in AppleUserHIDEventService::handleStop(IOService*)
invocation function for block in AppleUserHIDEventService::setProperties(OSObject*)
invocation function for block in AppleUserHIDEventService::completeSetLED(OSAction*, int, unsigned long long)
invocation function for block in AppleUserHIDEventService::setElementValue(unsigned int, unsigned int, unsigned int)
invocation function for block in AppleUserHIDEventService::completeCopyEvent(OSAction*, IOHIDEvent*, unsigned long long)
invocation function for block in AppleUserHIDEventService::copyMatchingEvent(OSDictionary*)
invocation function for block in AppleUserHIDEventService::completeSetProperties(OSAction*, int, unsigned long long)
invocation function for block in IOAccessoryHSAIDBulkData::responseThread(void*, int)
invocation function for block in IOAccessoryHSAIDBulkData::_detachFromIDBus()
invocation function for block in IOAccessoryHSAIDBulkData::_startIDBusInfoInternal()
invocation function for block in IOUSBMassStorageResource::statsReported()
invocation function for block in IOUserServerCheckInToken::cancel()
invocation function for block in IOUserServerCheckInToken::cancelAll()
invocation function for block in IOAccessoryIDBusHIDDevice::processBufferQueue()
invocation function for block in IOServiceUserNotification::handler(void*, IOService*)
invocation function for block in IOSkywalkPacketBufferPool::disposeAllBuffers()
invocation function for block in IOSkywalkPacketBufferPool::disposeAllPackets()
invocation function for block in IOSkywalkPacketBufferPool::releaseAllMemorySegments()
invocation function for block in AppleHIDTransportDeviceSPI::interruptAction()
invocation function for block in AppleHIDTransportDeviceSPI::powerOff(bool)
invocation function for block in AppleHIDTransportInterface::setNotifyHandler(OSObject*, void (*)(OSObject*, OSNumber*))
invocation function for block in AppleHIDTransportInterface::handlePrioritySystemPowerStateChange(unsigned int)
invocation function for block in AFKMailboxEndpointInterface::enqueueResponse(AFKEndpointInterface::CommandContext*, int, unsigned long long, void const*, unsigned long, unsigned int)
invocation function for block in AFKMailboxEndpointInterface::_handlePublishReport(unsigned long long, _AFKPublishReportData const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::_handlePublishReport(unsigned long long, _AFKPublishReportData const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::_handlePublishReport(unsigned long long, _AFKPublishReportData const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::_handleReportSubPacket(_IOPSubPacketHeader const*, unsigned char const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::_handleCommandSubPacket(_IOPSubPacketHeader const*, unsigned char const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::_handleOOBCommandSubPacket(_IOPSubPacketHeader const*, unsigned char const*, unsigned long)
invocation function for block in AFKMailboxEndpointInterface::close(IOService*, unsigned int)
invocation function for block in AFKMailboxEndpointInterface::close(IOService*, unsigned int)
invocation function for block in AppleHIDTransportBootloader::registerUserClient(AppleHIDTransportBootloaderUserClient*)
invocation function for block in AppleHIDTransportBootloader::copyMasterBootloader()
invocation function for block in AppleHIDTransportBootloader::unregisterUserClient(AppleHIDTransportBootloaderUserClient*)
invocation function for block in AppleBCMWLANSkywalkInterface::stop(IOService*)
invocation function for block in AppleBCMWLANSkywalkInterface::enable(unsigned int)
invocation function for block in AppleBCMWLANSkywalkInterface::disable(unsigned int)
invocation function for block in AppleGenericMultitouchHIDSPI::configureSPI()
invocation function for block in AppleGenericMultitouchHIDSPI::transferData(void const*, unsigned long, void*, unsigned long, bool)
invocation function for block in AppleGenericMultitouchHIDSPI::hidspiTransfer(AGMFemtoHIDSPI::LLPacket const&, bool)
invocation function for block in AppleGenericMultitouchHIDSPI::transferDataDMA(void const*, unsigned long, void*, unsigned long, bool)
invocation function for block in AppleGenericMultitouchHIDSPI::setReport(IOMemoryDescriptor*, IOHIDReportType, unsigned int)
invocation function for block in AppleT8030MemCacheController::callPlatformFunction(OSSymbol const*, bool, void*, void*, void*, void*)
invocation function for block in AppleT8030MemCacheController::getDataCollectionHeader(char*, unsigned int*)
invocation function for block in AppleT8030MemCacheController::_mccSelectDynamicCacheMode(unsigned int)
invocation function for block in AppleT8030MemCacheController::getDataCollectionHeaderSize()
invocation function for block in AppleT8110MemCacheController::_mccLockdownHandler()
invocation function for block in IOAccessoryHIDDeviceEndpoint::_receiveDataMsg(unsigned char, unsigned long long, void const*, int)
invocation function for block in IOAccessoryHIDDeviceEndpoint::_receiveDataMsg(unsigned char, unsigned long long, void const*, int)
invocation function for block in IOAccessoryHIDDeviceEndpoint::_receiveDataMsg(unsigned char, unsigned long long, void const*, int)
invocation function for block in IOAccessoryHSAIDBusTransport::receiveData(void const*, unsigned int)
invocation function for block in IOAccessoryHSAIDBusTransport::outputCommand(void const*, unsigned int, IOAccessoryHSAIDBusTransport::Completion*)
invocation function for block in IOAccessoryHSAIDBusTransport::setPowerState(unsigned long, IOService*)
invocation function for block in IOAccessoryHSAIDBusTransport::setBusErrorState(IOAccessoryHSAIDBusTransport::BusErrorReason)
invocation function for block in IOAccessoryHSAIDBusTransport::transmitComplete()
invocation function for block in IOAccessoryHSAIDBusTransport::linkStateTransferCompletion(void*, int)
invocation function for block in IOAccessoryHSAIDBusTransport::registerAccessoryUserClient(HSAIDUserClientAccessory*)
invocation function for block in IOAccessoryHSAIDBusTransport::start(IOService*)
invocation function for block in IOAccessoryHSAIDBusTransport::enable(unsigned short, unsigned char, unsigned short)
invocation function for block in IOAccessoryHSAIDBusTransport::disable()
invocation function for block in IOAppleConvergedIPCRTIDevice::mapSharedMemory(IOMemoryDescriptor*, unsigned short, IOACIPCSharedMemoryOptions*)
invocation function for block in IOAppleConvergedIPCRTIDevice::unmapSharedMemory(unsigned short, IOACIPCSharedMemoryOptions*)
invocation function for block in IOAppleConvergedIPCRTIDevice::notifySharedMemory(unsigned short, IOACIPCSharedMemoryOptions*)
invocation function for block in IOAppleConvergedIPCRTIDevice::updateSharedMemory(unsigned short, IOACIPCSharedMemoryOptions*)
invocation function for block in IOAppleConvergedIPCRTIDevice::terminate(unsigned int)
invocation function for block in RoswellAuthI2CRelayInterface::_threadCallFunc(void*)
invocation function for block in RoswellAuthI2CRelayInterface::_threadCallFunc(void*)
invocation function for block in RoswellAuthI2CRelayInterface::authInit(OSObject*, void (*)(OSObject*, AppleAuthCPRelayInterface*, int, unsigned char, OSObject*))
invocation function for block in IOAccessoryHIDDeviceInterface::_handleStartGated()
invocation function for block in IOAppleConvergedIPCUserClient::mapSharedMemory(IOExternalMethodArguments*)
invocation function for block in IOAppleConvergedIPCUserClient::abortTransferRing(IOExternalMethodArguments*)
invocation function for block in IOAppleConvergedIPCUserClient::unmapSharedMemory(IOExternalMethodArguments*)
invocation function for block in IOAppleConvergedIPCUserClient::updateSharedMemory(IOExternalMethodArguments*)
invocation function for block in IOAppleConvergedIPCUserClient::io(IOMemoryDescriptor*, IOMemoryDescriptor*, IOACIPCUserClientAsyncParamBlock*, unsigned int)
invocation function for block in IOAppleConvergedIPCUserClient::openGated(IOService*, unsigned int, void*)
invocation function for block in IOPortTunnelingTransportState::removeTunneledTransport(IOPortTransportState*)
invocation function for block in IOPortTunnelingTransportState::removeTunneledTransports()
invocation function for block in AFKEndpointInterfaceUserClient::handleReport(AFKEndpointInterface*, unsigned int, unsigned long long, void const*, unsigned long, unsigned int)
invocation function for block in AFKEndpointInterfaceUserClient::handleCommand(AFKEndpointInterface*, AFKEndpointInterface::CommandContext*, unsigned int, unsigned long long, void const*, unsigned long, unsigned int)
invocation function for block in AFKMailboxSharedMemoryEndpoint::stateMachineInit(SMMachine*)
invocation function for block in AFKMailboxSharedMemoryEndpoint::stateMachineInit(SMMachine*)
invocation function for block in AFKMailboxSharedMemoryEndpoint::stateMachineInit(SMMachine*)
invocation function for block in AFKMailboxSharedMemoryEndpoint::open(IOService*, unsigned int, void*)
invocation function for block in IOBioSharedMemoryTransferQueue::osLogQueue(unsigned int)
invocation function for block in IOBioSharedMemoryTransferQueue::releaseObjects(unsigned int, unsigned int)
invocation function for block in IOBioSharedMemoryTransferQueue::getCount(unsigned int)
invocation function for block in IOAppleConvergedIPCRTIInterface::getCompletionCount(AppleConvergedIPCRingType, unsigned int, void*)
invocation function for block in IOAppleConvergedIPCRTIInterface::openCompletionRings(bool)
invocation function for block in IOAppleConvergedIPCRTIInterface::openCompletionRings(bool)
invocation function for block in IOAppleConvergedIPCRTIInterface::openCompletionRings(bool)
invocation function for block in IOAppleConvergedIPCRTIInterface::openCompletionRings(bool)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerMSIEventCallback(unsigned short, void (*)(void*, void*), void*, void*, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerMSIEventCallback(unsigned short, void () block_pointer, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerTimeEventCallback(unsigned int, void (*)(void*, void*, unsigned int, unsigned long long, unsigned int, void*, unsigned long), void*, void*, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerTimeEventCallback(unsigned int, void (unsigned int, unsigned long long, unsigned int, void*, unsigned long) block_pointer, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::deregisterMSIEventCallback(unsigned short, void*)
invocation function for block in IOAppleConvergedIPCRTIInterface::deregisterTimeEventCallback(unsigned int, void*)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerMemoryEventCallback(unsigned short, void (*)(void*, void*, unsigned long long, void*, unsigned long), void*, void*, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::registerMemoryEventCallback(unsigned short, void (unsigned long long, void*, unsigned long) block_pointer, void**)
invocation function for block in IOAppleConvergedIPCRTIInterface::freeContiuousCompletionTable(AppleConvergedIPCRingType, unsigned int, unsigned int, void*)
invocation function for block in IOAppleConvergedIPCRTIInterface::getContinuousCompletionTable(AppleConvergedIPCRingType, unsigned int, unsigned int*, void*)
invocation function for block in IOAppleConvergedIPCRTIInterface::deregisterMemoryEventCallback(unsigned short, void*)
invocation function for block in IOAppleConvergedIPCTransferRing::initWithOptions(unsigned int, IOAppleConvergedIPCInterface*, int (*)(void*, IOACIPCDescriptor**, unsigned int*, void*), void*, void*, int (*)(void*, IOACIPCDescriptor**, unsigned int*, void*), void*, void*, int (IOACIPCDescriptor**, unsigned int*) block_pointer, int (IOACIPCDescriptor**, unsigned int*) block_pointer)
invocation function for block in AppleHIDTransportProtocolSCMFIFO::handleBootload(AppleHIDTransportInterface*)
invocation function for block in AppleHIDTransportProtocolSCMFIFO::handlePrioritySystemPowerStateChange(unsigned int)
invocation function for block in IOAccessoryConfigStreamInterface::_receiveDataMsg(unsigned char, unsigned long long, void const*, int)
invocation function for block in IOAccessoryConfigStreamInterface::_requestPropertyDataIfRequired(unsigned short, unsigned char, bool, bool)
invocation function for block in IOAccessoryHSAIDBulkDataEndpoint::startTransfer(unsigned char, unsigned long long, void const*, unsigned long long, unsigned int, void (*)(void*, unsigned char, unsigned long long, void const*, int), void*)
invocation function for block in IOAccessoryHSAIDBulkDataEndpoint::_receiveResponse(unsigned char, unsigned long long, void const*, int)
invocation function for block in IOAccessoryHSAIDBulkDataEndpoint::stop(IOService*)
invocation function for block in IOServiceMessageUserNotification::handler(void*, unsigned int, IOService*, void*, unsigned long)
invocation function for block in AppleEmbeddedAudioResourceManager::_registerServiceWhenReady()
invocation function for block in AppleEmbeddedAudioResourceManager::stop(IOService*)
invocation function for block in AppleTypeCPhyDisplayPortInterface::openTunnel(AppleTypeCPhyTunnelOption)
invocation function for block in AppleTypeCPhyDisplayPortInterface::closeTunnel()
invocation function for block in AppleTypeCPhyDisplayPortInterface::setLinkRate(unsigned char, unsigned int)
invocation function for block in AppleTypeCPhyDisplayPortInterface::close()
invocation function for block in AFKRemoteMemoryDescriptorAllocator::handleCommand(AFKEndpointInterface*, AFKEndpointInterface::CommandContext*, unsigned int, unsigned long long, void const*, unsigned long, unsigned int)
invocation function for block in AFKRemoteMemoryDescriptorAllocator::setPowerState(unsigned long, IOService*)
invocation function for block in AFKRemoteMemoryDescriptorAllocator::setPowerState(unsigned long, IOService*)
invocation function for block in AFKRemoteMemoryDescriptorAllocator::serializeDebugState(void*, OSSerialize*)
invocation function for block in AFKRemoteMemoryDescriptorAllocator::start(IOService*)
invocation function for block in IOHIDEventServiceFastPathUserClient::message(unsigned int, IOService*, void*)
invocation function for block in IOServiceNotificationDispatchSource::Create_Impl(OSDictionary*, unsigned long long, IODispatchQueue*, IOServiceNotificationDispatchSource**)
invocation function for block in IOServiceNotificationDispatchSource::free()
invocation function for block in AppleUSBHostPortInterruptEventSource::enable()
invocation function for block in AppleUSBHostPortInterruptEventSource::disable(bool)
invocation function for block in IOServiceStateNotificationEventSource::serviceStateNotificationEventSource(IOService*, OSArray*, void () block_pointer)
invocation function for block in IOServiceStateNotificationDispatchSource::Create_Impl(IOService*, OSArray*, IODispatchQueue*, IOServiceStateNotificationDispatchSource**)
invocation function for block in IOPort::addTransport(IOPortTransportState*)
invocation function for block in IOPort::addTransport(IOPortTransportState*)
invocation function for block in IOPort::removeTransport(IOPortTransportStateTransportType)
invocation function for block in IOPort::removeTransports()
invocation function for block in IOPort::_updateConnectionActive()
invocation function for block in IOPort::_updateProvisionedTransports()
invocation function for block in IOPort::_updateProvisionedTransports()
invocation function for block in OSKext::flushNonloadedKexts(bool)
invocation function for block in OSKext::dropMatchingReferences(OSSet*)
invocation function for block in BTDebug::addServiceDebugData(CCFaultReport*)
invocation function for block in AppleSSE::systemWillShutdown(unsigned int)
invocation function for block in H11ANEIn::IsLatencySensitiveClientPresent()
invocation function for block in IOService::SetProperties_Impl(OSDictionary*)
invocation function for block in IOService::SetProperties_Impl(OSDictionary*)
invocation function for block in IOService::RemoveProperty_Impl(OSString*)
invocation function for block in IOService::SearchProperty_Impl(char const*, char const*, unsigned long long, OSObject**)
invocation function for block in IOService::CopyProviderProperties_Impl(OSArray*, OSArray**)
invocation function for block in IOService::stateNotificationListenerAdd(OSArray*, void**, int () block_pointer)
invocation function for block in IOService::StateNotificationItemSet_Impl(OSString*, OSDictionary*)
invocation function for block in IOService::stateNotificationListenerRemove(void*)
invocation function for block in IOSurface::setValue(OSSymbol const*, OSMetaClassBase const*, unsigned int*)
invocation function for block in __IOAVLog::findClassDict(IOService*)
invocation function for block in IOAVValueSet::getMember(OSMetaClassBase const*) const
invocation function for block in IOSystemStateNotification::serializeProperties(OSSerialize*) const
invocation function for block in AFKMailboxEndpointInterface::_getEPICForIOService(IOService const*) const
invocation function for block in IOPortTunnelingTransportState::copyTunneledTransports(IOPortTransportStateTransportType) const
invocation function for block in IOPortTunnelingTransportState::_createTunneledTransportsProvisionedArray(bool) const
invocation function for block in IOMFB::PBTBlockMgr::get_buf_block(task*, IOMFB_Parameter_Block_Type, void const*, unsigned long, unsigned long long const*, unsigned int, bool) const
invocation function for block in IOMFB::PBTBlockMgr::get_block(task*, IOMFB_Parameter_Block_Type, void*, unsigned long, unsigned long long const*, unsigned int) const
invocation function for block in IOPort::copyTransport(IOPortTransportStateTransportType) const
invocation function for block in IOPort::_getConnectionActive() const
invocation function for block in IOPort::_createActiveTransportsArray() const
invocation function for block in IOPort::_createSupportedFeaturesArray() const
invocation function for block in IOPort::_createSupportedTransportsArray() const
invocation function for block in IOPort::_createProvisionedTransportsArray() const
invocation function for block in AppleHIDTransportInterface::performMasterSetReport(AppleHIDTransportDevice*, unsigned char, IOMemoryDescriptor*, IOHIDReportType)::$_0::operator()(void*, void*) const
invocation function for block in AppleHIDTransportProtocolHIDSPI::TestCallback::asyncEvent(HSMTest*, void (*)(HSMTest*))::CallbackContext::run()
_____mac_get_pid_block_invoke
_____mac_get_proc_block_invoke
_____mac_set_proc_block_invoke
____match_entitlement_variable_block_invoke
___btlib_remove_notfound_panic
___btlog_destroy
___btref_invalid
___btstack_over_release_panic
___btstack_resurrect_panic
___copy_assignment_8_8_t0w16_pa0_42493_16_pa0_9870_24_pa0_60491_32_pa0_55059_40_pa0_12009_48_t56w16
___copy_assignment_8_8_t0w16_pa0_6943_16_pa0_16199_24_pa0_20536_32_pa0_3805_40_pa0_49655_48_t56w16
___copy_assignment_8_8_t0w24_pa0_18425_24_pa0_20237_32_pa0_36020_40_pa0_40644_48_pa0_56591_56_pa0_4241_64_t72w8
___copy_assignment_8_8_t0w24_pa0_54061_24_pa0_9080_32_pa0_19860_40_pa0_6512_48_pa0_3468_56_pa0_60028_64_t72w9
___copy_assignment_8_8_t0w24_pa0_61651_24_pa0_61484_32_pa0_17609_40_t48w8
___copy_helper_block_8_32b40r
___copy_helper_block_8_32b40r_0
___copy_helper_block_8_32b40r_1
___copy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE
___copy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE_0
___copy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE_1
___copy_helper_block_8_32r40r48r
___copy_helper_block_8_32r40r48r56r64r72r80r
___copy_helper_block_8_32r40r48r_0
___copy_helper_block_8_32r40r48r_0_0
___copy_helper_block_8_32r40r48r_1
___copy_helper_block_8_32r40r48r_2
___copy_helper_block_8_32r40r_0
___copy_helper_block_8_32r_7
___copy_helper_block_8_40c33_ZTS11OSSharedPtrI12OSDictionaryE
___copy_helper_block_8_40c33_ZTS11OSSharedPtrI12OSDictionaryE_0
___copy_helper_block_8_48c33_ZTS11OSSharedPtrI12OSDictionaryE
___cxa_pure_virtual
___cxa_pure_virtual_0
___del_from_bucket
___derive_summary_block_invoke
___destroy_helper_block_8_32b40r
___destroy_helper_block_8_32b40r_0
___destroy_helper_block_8_32b40r_1
___destroy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE
___destroy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE_0
___destroy_helper_block_8_32c27_ZTS11OSSharedPtrI7OSArrayE_1
___destroy_helper_block_8_32r40r48r
___destroy_helper_block_8_32r40r48r56r64r72r80r
___destroy_helper_block_8_32r40r48r_0
___destroy_helper_block_8_32r40r48r_0_0
___destroy_helper_block_8_32r40r48r_1
___destroy_helper_block_8_32r40r48r_2
___destroy_helper_block_8_32r40r_0
___destroy_helper_block_8_32r_7
___destroy_helper_block_8_40c33_ZTS11OSSharedPtrI12OSDictionaryE
___destroy_helper_block_8_40c33_ZTS11OSSharedPtrI12OSDictionaryE_0
___destroy_helper_block_8_40c33_ZTS11OSSharedPtrI12OSDictionaryE_1
___destroy_helper_block_8_48c33_ZTS11OSSharedPtrI12OSDictionaryE
___emitSerializationElement_block_invoke
___emitSerializationElement_block_invoke.6
___exec_handle_sugid_block_invoke_3
___extensions_notify_create_block_invoke.5
___fe_cuckoo_cmp
___fe_cuckoo_release
___filt_spec_common_block_invoke
___find_in_bucket
___firehose_buffer_tracepoint_reserve
___firehose_kernel_configuration_valid
___firehose_merge_updates
___fsw_mib_get_flow_block_invoke
___hook_iokit_check_set_properties_block_invoke
___hook_iokit_check_set_properties_block_invoke_2
___io_dictionary_apply_block_invoke
___iokit_task_app_suspended_changed_block_invoke
___ipc_kobject_dealloc_bad_mscount_panic
___ipc_kobject_dealloc_bad_srights_panic
___ipc_kobject_dealloc_bad_type_panic
___ipc_port_inactive_panic
___ipc_port_translate_receive_panic
___iterate_sandbox_state_flags_block_invoke
___kauth_cred_create_block_invoke
___kauth_cred_dup_block_invoke
___kauth_proc_label_update_block_invoke
___kauth_proc_label_update_execve_block_invoke
___lck_require_preemption_disabled_panic
___llvm_profile_get_padding_sizes_for_counters
___llvm_profile_get_size_for_buffer_internal
___llvm_profile_is_continuous_mode_enabled
___llvm_profile_write_buffer_internal
___mac_execve_enter_block_invoke
___mac_get_fd
___mac_get_fd_0
___mac_get_file
___mac_get_file_0
___mac_get_link
___mac_get_link_0
___mac_get_pid
___mac_mount_label_get_block_invoke
___mac_set_proc
___mach_port_get_set_status_block_invoke
___match_ancestor_entitlement_block_invoke
___match_ancestor_signing_id_block_invoke
___memcpy_chk
___memmove_chk
___memset_chk
___proc_pidfileportlist_block_invoke
___proc_set_cred_internal_block_invoke
___profile_failed_consistency_panic
___psynch_rw_lock
___removable_volume_init_block_invoke
___removable_volume_init_block_invoke_2
___sandbox_revoke_pty_block_invoke
___sb_evaluate_message_filter_block_invoke
___select_set_link_arguments_panic
___serialize_context_block_invoke
___serialize_extensions_matching_block_invoke
___serialize_state_variables_block_invoke
___strcat_chk
___strcpy_chk
___strlcat_chk
___strlcpy_chk
___strncat_chk
___strncpy_chk
___syscall_enable_state_flag_block_invoke
___syscall_extension_release_block_invoke
___syscall_message_filter_check_block_invoke
___tcp_heuristic_tfo_middlebox_common
___thread_ro_circularity_panic
___valueArrayIsAllowed_block_invoke
___valuesAreAllowed_block_invoke
___waitq_invalid_panic
___waitq_link_arguments_panic
__aks_operation
__apfs_zalloc
__apfs_zfree
__apple_iopkit_hexdump
__atc_extractButtonStateFromBinaryV4Header
__atc_extractButtonStateFromV7Header
__atc_extractTrackingAndButtonState
__atc_parseSimpleMouseV2Packet
__atc_parseSimpleMouseV3Packet
__bcopyin
__bcopyin_0
__bcopyinstr
__blob
__blockInvokeHelper(void *,void *,int)
__ccchacha20_xor
__ccpoly1305_update
__clear_purgeability_log
__clear_purgeable_files_cb
__client_attach_callback(en_client *,void *,ulong)
__collect_purgeable_files_cb
__copy_helper_block_8_32b
__copy_helper_block_8_32r40r
__copy_helper_block_8_32r40r_0
__copy_helper_block_8_32r40r_1
__copy_helper_block_8_32r40r_2
__copy_helper_block_8_32r40r_3
__copyin_atomic32
__copyin_atomic32_wait_if_equals
__copyin_atomic64
__copyout_atomic32
__copyout_atomic64
__copyout_cpu_map
__crack_chain_with_anchor
__crack_chain_with_anchor_0
__create_operation_list
__cuckoo_resize_block_invoke
__delta_restore_nuke_volume_iter
__derive_removable_media
__derive_vnode_apfs_volume_roles
__destroy_helper_block_8_32r40r
__destroy_helper_block_8_32r40r_0
__destroy_helper_block_8_32r40r_1
__destroy_helper_block_8_32r40r_2
__destroy_helper_block_8_32r40r_3
__dict_find_value_cb
__disable_preemption_overflow
__doprnt
__doprnt_log
__dt_get_lock_reg
__enable_preemption_underflow
__enable_preemption_underflow_0
__encode_list_find_key
__fe_cuckoo_retain
__firehose_allocate
__firehose_buffer_create
__firehose_buffer_tracepoint_flush
__fixup_purgeable_drecs_cb
__flow_route_laddr_validate
__freeable_blocks_in_dstream_iter
__fs_add_xattr
__fv_data
__fv_key
__get_dev_node
__get_dstats_cb
__get_inode_with_lookaside_and_hint
__get_merged_params
__get_purgeable_stats_cb
__getq_all
__getq_random
__getq_tail
__global_eventq
__handle_mark_purgeable
__img4_absence_policy_allow
__img4_absence_policy_default
__img4_chip_get_bool
__img4_chip_get_cstr
__img4_chip_get_digest
__img4_chip_get_uint32
__img4_chip_get_uint64
__img4_chip_get_version
__img4_copy_object_unpack
__img4_dgst_from_bytes
__img4_enforce_digest
__img4_enforce_nonce
__img4_entangle_seed_with_uid1
__img4_execute_object_unpack
__img4_firmware_compute_digest_bare
__img4_firmware_compute_digest_im4p
__img4_firmware_get_chip_bool
__img4_firmware_get_eieiuou_hack
__img4_firmware_get_manifest
__img4_firmware_init_chip_bool
__img4_firmware_log_constraint_eval
__img4_firmware_mnm_enforce_first_stage
__img4_firmware_mnm_enforce_manifest_chain
__img4_firmware_mnm_enforce_os_version
__img4_firmware_mnm_enforce_os_version_xgroup
__img4_firmware_mnm_enforce_subsequent_stage
__img4_firmware_property_callback
__img4_instance_select_runtime
__img4_macf_init
__img4_nonce_domain_accessible_cryptex
__img4_nonce_domain_at
__img4_nonce_domain_from_index
__img4_nonce_manager_commit
__img4_nonce_manager_compute_nonce
__img4_nonce_manager_generate_seed
__img4_nonce_manager_lockdown
__img4_object_init_from_storage
__img4_runtime_execute_object
__img4_runtime_find_object_spec64
__img4_runtime_init
__img4_runtime_object_spec_at
__img4_version_from_bytes
__img4_xnu_nvram_read
__img4_xnu_nvram_write
__imp__strcmp
__ioGPUErrorGetBadObject
__ipc_absinthe_collection
__ipc_authentication_token_create
__ipc_authentication_token_verify
__ipc_backup_pfk_data
__ipc_backup_pfk_data_v1
__ipc_change_lock_state
__ipc_change_secret_v1
__ipc_client_terminate_v1
__ipc_copy_keybag
__ipc_copy_volume_cookie_v1
__ipc_create_d_key
__ipc_create_keybag_v1
__ipc_create_signing_key_v1
__ipc_device_state_transition
__ipc_drain_backup_keys
__ipc_drain_backup_keys_v1
__ipc_drop_auxiliary_auth
__ipc_escrow_keys_unlock
__ipc_escrow_stash_commit
__ipc_escrow_stash_create
__ipc_escrow_stash_create_v1
__ipc_escrow_stash_destroy
__ipc_escrow_stash_enable
__ipc_escrow_stash_load_v1
__ipc_escrow_stash_persist
__ipc_fairplay_operation
__ipc_fdr_hmac_data
__ipc_get_configuration
__ipc_get_device_state
__ipc_get_s_key
__ipc_handle_timer_fire
__ipc_header
__ipc_invalidate_keybag
__ipc_kc_unwrap
__ipc_keybag_persona_create
__ipc_keybag_persona_delete
__ipc_keybag_persona_list
__ipc_load_keybag
__ipc_make_system_keybag
__ipc_migrate_s_key
__ipc_msg_process_extended_header
__ipc_msg_protect
__ipc_new_pfk_data_v2
__ipc_null_d_key
__ipc_perform_operation
__ipc_public_backup_handle_for_handle
__ipc_recover_with_escrow_bag
__ipc_remote_peer_drop
__ipc_remote_peer_get_state
__ipc_remote_session_operate
__ipc_set_configuration
__ipc_set_env
__ipc_set_s_key
__ipc_sign_remote_signing_key
__ipc_unload_keybag
__ipc_unload_public_backup_keybag
__ipc_unload_session_keybags
__ipc_unwrap_d_key
__ipc_unwrap_media_key_v1
__ipc_unwrap_pfk_data_v1
__ipc_unwrap_pfk_data_v2
__ipc_verify_secret_v1
__ipc_volume_backup_operation
__ksyn_check_init
__lck_rw_lock_type_panic
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_0
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_1
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_2
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_3
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_4
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_5
__lck_rw_sleep_with_inheritor_and_turnstile_type_block_invoke_2_6
__lck_rw_try_lock_type_panic
__list_add_entry
__logf
__logf_0
__logf_1
__lword
__mach_bridge_remote_time
__mach_make_memory_entry
__mach_make_memory_entry_0
__mach_make_memory_entry_1
__match_any_uuid
__match_byteset
__match_entitlement_variable
__match_front_user_home_variable
__match_home_variable
__match_process_temp_dir_variable
__mergePropertyAction(IONetworkInterface *,OSDictionary *)
__merge_dict_cb
__mpsc_daemon_queue_enqueue
__necp_client_flow_global_tree_RB_FIND
__necp_client_flow_global_tree_RB_INSERT
__necp_client_flow_global_tree_RB_NFIND
__necp_client_flow_tree_RB_FIND
__necp_client_flow_tree_RB_INSERT
__necp_client_flow_tree_RB_INSERT_COLOR
__necp_client_flow_tree_RB_INSERT_COLOR_0
__necp_client_flow_tree_RB_MINMAX
__necp_client_flow_tree_RB_MINMAX_0
__necp_client_flow_tree_RB_NEXT
__necp_client_flow_tree_RB_NEXT_0
__necp_client_flow_tree_RB_NFIND
__necp_client_flow_tree_RB_PREV
__necp_client_flow_tree_RB_REMOVE
__necp_client_flow_tree_RB_REMOVE_0
__necp_client_flow_tree_RB_REMOVE_COLOR
__necp_client_flow_tree_RB_REMOVE_COLOR_0
__necp_client_flow_tree_RB_SETCOLOR
__necp_client_flow_tree_RB_SETCOLOR_0
__necp_client_flow_tree_RB_SETPARENT
__necp_client_flow_tree_RB_SETPARENT_0
__necp_client_global_tree_RB_FIND
__necp_client_global_tree_RB_INSERT_COLOR
__necp_client_global_tree_RB_INSERT_COLOR_0
__necp_client_global_tree_RB_INSERT_COLOR_1
__necp_client_global_tree_RB_INSERT_COLOR_2
__necp_client_global_tree_RB_INSERT_COLOR_3
__necp_client_global_tree_RB_MINMAX
__necp_client_global_tree_RB_MINMAX_0
__necp_client_global_tree_RB_MINMAX_1
__necp_client_global_tree_RB_MINMAX_2
__necp_client_global_tree_RB_MINMAX_3
__necp_client_global_tree_RB_NEXT
__necp_client_global_tree_RB_NEXT_0
__necp_client_global_tree_RB_NEXT_1
__necp_client_global_tree_RB_NEXT_2
__necp_client_global_tree_RB_NEXT_3
__necp_client_global_tree_RB_NFIND
__necp_client_global_tree_RB_PREV
__necp_client_global_tree_RB_PREV_0
__necp_client_global_tree_RB_PREV_1
__necp_client_global_tree_RB_REMOVE
__necp_client_global_tree_RB_REMOVE_0
__necp_client_global_tree_RB_REMOVE_1
__necp_client_global_tree_RB_REMOVE_2
__necp_client_global_tree_RB_REMOVE_3
__necp_client_global_tree_RB_REMOVE_COLOR
__necp_client_global_tree_RB_REMOVE_COLOR_0
__necp_client_global_tree_RB_REMOVE_COLOR_1
__necp_client_global_tree_RB_REMOVE_COLOR_2
__necp_client_global_tree_RB_REMOVE_COLOR_3
__necp_client_global_tree_RB_SETCOLOR
__necp_client_global_tree_RB_SETCOLOR_0
__necp_client_global_tree_RB_SETCOLOR_1
__necp_client_global_tree_RB_SETCOLOR_2
__necp_client_global_tree_RB_SETCOLOR_3
__necp_client_global_tree_RB_SETPARENT
__necp_client_global_tree_RB_SETPARENT_0
__necp_client_global_tree_RB_SETPARENT_1
__necp_client_global_tree_RB_SETPARENT_2
__necp_client_global_tree_RB_SETPARENT_3
__necp_client_tree_RB_FIND
__necp_client_tree_RB_NFIND
__necp_client_tree_RB_PREV
__necp_client_tree_RB_PREV_0
__necp_client_tree_RB_PREV_1
__necp_client_tree_RB_PREV_2
__necp_client_tree_RB_PREV_3
__necp_client_tree_RB_PREV_4
__necp_client_tree_RB_PREV_5
__necp_client_tree_RB_PREV_6
__necp_client_tree_RB_PREV_7
__necp_fd_flow_tree_RB_FIND
__necp_fd_flow_tree_RB_INSERT
__necp_fd_flow_tree_RB_NFIND
__null_get_identifier_bool
__null_get_identifier_cstr
__null_get_identifier_digest
__null_get_identifier_uint32
__null_get_identifier_uint64
__omap_snapshot_create
__omap_snapshot_delete
__op_attest
__os_log_internal
__os_trace_addr_in_text_segment
__params_get_der_key
__payload_hash
__pin_metafile
__pmap_cs_copy_nonce
__pmap_cs_get_identifier_cstr
__pmap_cs_get_identifier_cstr_dtless
__pmap_cs_get_identifier_digest
__pmap_cs_get_identifier_digest_dtless
__pmap_cs_get_identifier_uint64
__pmap_cs_get_identifier_uint64_dtless
__pmap_cs_read
__pmap_cs_roll_nonce
__pmap_cs_set_nonce
__posix_sem_syscall_return
__printf
__psynch_cvsignal
__pthread_priority_combine
__pthread_priority_normalize
__pthread_priority_normalize_for_ipc
__punch_hole_cb
__qinit
__qsort_encode_list
__read16
__readaddr
__readstr
__remove_client
__remove_extents_of_file_cb
__remove_purgeable_drec_cb
__remove_purgeable_file
__revoke_children_cb
__rijndaelEncrypt
__scoreColorData(IOAVVideoColorData const*)
__set_blob
__setup_dstats_cb
__signature_matches_hmac
__thread_selfid
__timeEventBlockInvokeHelper(void ( {block_pointer})(uint,ulong long,uint,void *,ulong),void *,uint,ulong long,uint,void *,ulong)
__tr_init
__tr_stored_block
__tr_tally
__tx_remove_dirty_work_item
__vcgetc
__vm_map_store_entry_link
__wake_write_sleepers
__was_in_userspace
__whereIsAddr(ulong,ulong *,ulong *,int)
__word
_abort_transaction
_absolutetime_to_microtime
_absolutetime_to_nanoseconds
_access
_access1
_accessNVRAMProperty
_acknowledgeSleepWakeNotification
_acm_der_equal
_acm_der_skip_any
_acm_mem_alloc
_acm_mem_alloc_data
_acm_mem_alloc_info
_acm_mem_free
_acm_mem_free_data
_acm_mem_free_info
_act_set_kperf
_act_set_state
_act_set_state_from_user
_addDeviceInfoToDict(ulong long,uint,OSDictionary *,char const*)
_addNodeToList
_addToFlush(OSObject *,IO80211QueueDescriptor *,void *,userPrintCtx *)
_addToFlushList(OSObject *,IO80211QueueDescriptor *,void *,userPrintCtx *)
_add_entry_to_dir_stack
_add_free_extent_cache
_add_free_extent_list
_addentropy
_adjust_fetch_chunked
_adler32
_adler32_combine
_adler32_vec
_adler32_z
_aes_ctr_crypt
_aes_decrypt_key
_aes_decrypt_key128
_aes_decrypt_key256
_aes_decrypt_set_iv_gcm
_aes_encrypt_aad_gcm
_aes_encrypt_cbc
_aes_encrypt_finalize_gcm
_aes_encrypt_gcm
_aes_encrypt_get_ctx_size_gcm
_aes_encrypt_inc_iv_gcm
_aes_encrypt_key
_aes_encrypt_key128
_aes_encrypt_key256
_aes_encrypt_key_gcm
_aes_encrypt_key_with_iv_gcm
_aes_encrypt_reset_gcm
_aes_encrypt_set_iv_gcm
_aes_unwrap(uchar *,int,uchar *,uchar *)
_aggr_one_dev_op_destr
_aggr_one_dev_op_dump
_aggr_one_dev_op_slice_lock
_aggr_one_dev_op_slice_size
_aggr_one_dev_op_slice_unlock
_aggr_two_dev_op_constr
_aggr_two_dev_op_destr
_aggr_two_dev_op_dump
_aggr_two_dev_op_slice_lock
_aggr_two_dev_op_slice_size
_aggr_two_dev_op_slice_unlock
_ah_algorithm_lookup
_ah_hdrsiz
_ah_hmac_md5_loop
_ah_hmac_md5_result
_ah_hmac_sha1_loop
_ah_hmac_sha1_result
_ah_hmac_sha2_256_loop
_ah_hmac_sha2_256_result
_ah_hmac_sha2_384_loop
_ah_hmac_sha2_384_result
_ah_hmac_sha2_512_loop
_ah_hmac_sha2_512_result
_ah_keyed_md5_loop
_ah_keyed_md5_result
_ah_keyed_sha1_loop
_ah_keyed_sha1_result
_aks_dealloc
_aks_migrate_SEPUUID2b_to_classM_key
_aks_new_cred
_aks_params_create
_aks_params_free
_aks_params_get_data
_aks_params_get_number
_aks_params_set_data
_aks_params_set_number
_aks_ref_key_attest
_aks_ref_key_create
_aks_ref_key_create_with_blob
_aks_ref_key_decrypt
_aks_ref_key_delete
_aks_ref_key_encrypt
_aks_ref_key_free
_aks_ref_key_get_external_data
_aks_ref_key_get_public_key
_aks_ref_key_get_uuid
_aks_ref_key_get_version
_aks_ref_key_set_key_class
_aks_ref_key_set_params
_aks_ref_key_transcrypt
_aks_ref_key_unwrap
_aks_ref_key_verify_sig
_aks_sik_attest
_aks_system_key_attest
_aks_system_key_collection
_aks_system_key_operate
_aks_system_key_sign
_akserror_to_errno
_allConfigureReport(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_allCreateReporters(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_allUpdateReport(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_allocPeerNode(apple80211_ranging_peer_t *,uint,bool)
_allocRequestNode(apple80211_ranging_peer_t *,uint,uint)
_allocScanReqNode(apple80211_scan_data *,apple80211_scan_multiple_data *,int)
_alloc_and_set_xattr
_alloc_new_ekwk
_alloc_new_scalable_key_
_alloc_scalable_key
_alloc_scalable_key_max
_alloc_space_for_write
_alloc_tmp_ino_with_crid
_alloc_xattr_tmp_ino
_allocate_phys_range
_amfiLog
_amfiPanic
_amfi_OSEntitlements_asDict_impl
_amfi_OSEntitlements_get_transmuted_impl
_amfi_OSEntitlements_invalidate_impl
_amfi_OSEntitlements_query_impl
_amfi_copy_seatbelt_profile_names
_amfi_free_seatbelt_profile_names
_amfi_get_udid_impl
_amfi_interface_register
_amfi_is_cdhash_in_trust_cache
_analytics_send_event_lazy
_apfs_adjust_reserved_bytes_counter
_apfs_adjust_unwritten_bytes_counter
_apfs_announce_hash_mismatch
_apfs_bp_cleaner
_apfs_cache_key_for_uuid
_apfs_cache_media_key
_apfs_check_and_alloc_alt_name
_apfs_check_if_present
_apfs_check_name
_apfs_check_seal
_apfs_checkpoint_traverse
_apfs_cleanup_purgatory_continuation
_apfs_cleanup_purgatory_wrapper
_apfs_clear_stashed_keys
_apfs_collect_hash_records
_apfs_confirm_intent
_apfs_copy_cached_key_for_uuid
_apfs_create_doc_id_tree_if_needed
_apfs_crypto_state_init
_apfs_crypto_state_rewrap
_apfs_crypto_state_unwrap
_apfs_cstrncmp
_apfs_debug_file_dstreams_collect
_apfs_debug_file_ext_list
_apfs_decmpfs_file_is_compressed
_apfs_decmpfs_file_is_dataless
_apfs_decmpfs_file_is_type5
_apfs_decmpfs_hides_xattr
_apfs_decmpfs_lazy_init_decmpfs_cnode
_apfs_decmpfs_uncompressed_size_of_compressed_file
_apfs_decmpfs_update_dataless_info
_apfs_decrement_counter_of_reserved_ranges
_apfs_decrement_reserved_ranges_counters
_apfs_decrement_unwritten_ranges_counters
_apfs_delete_cached_key_for_uuid
_apfs_delete_ephemeral
_apfs_delete_mtree_ephemeral
_apfs_deletefs
_apfs_derive_permissions_summary_may_relock
_apfs_destroy
_apfs_die
_apfs_do_update_last_modified_by
_apfs_doc_id_index_supported
_apfs_drop_rangelist_entries
_apfs_drop_rangelist_entry
_apfs_drop_reservation
_apfs_drop_reserved_rangelist_entry
_apfs_empty_rangelist
_apfs_ensure_write_count_positive
_apfs_extract_root_hash_arm
_apfs_fake_vnop_blktooff
_apfs_fake_vnop_blockmap
_apfs_fake_vnop_fsync
_apfs_fake_vnop_getattr
_apfs_fake_vnop_inactive
_apfs_fake_vnop_ioctl
_apfs_fake_vnop_lookup
_apfs_fake_vnop_offtoblk
_apfs_fake_vnop_pageout
_apfs_fake_vnop_read
_apfs_fake_vnop_readdir
_apfs_fake_vnop_reclaim
_apfs_fake_vnop_strategy
_apfs_fake_vnop_write
_apfs_fifospec_read
_apfs_fifospec_write
_apfs_filesec_acl_setendian
_apfs_flush_allocated_unwritten_ranges
_apfs_fragmentation_histogram_cb
_apfs_fragmentation_histogram_closeWindow
_apfs_free_data_blocks
_apfs_free_data_blocks_if_needed
_apfs_fsid_to_apfs_callback
_apfs_fsinfo_iterate_fsroot
_apfs_fsinfo_iterate_fsroot_wrapper
_apfs_fsync_for_cloning
_apfs_fsync_internal
_apfs_fx_defrag_fext_defragger_cb
_apfs_fx_defrag_fext_identifier_cb
_apfs_fx_defrag_fs_root_iterator_cb
_apfs_fx_defrag_should_defrag_fext
_apfs_fx_defrag_should_exit
_apfs_fx_defrag_start_defrag
_apfs_fx_defrag_stop_defrag
_apfs_get_alt_name
_apfs_get_cow_exempt_file_count
_apfs_get_doc_id_tree
_apfs_get_doc_id_tree_by_oid
_apfs_get_doc_id_tree_ext
_apfs_get_extentref_tree
_apfs_get_file_size
_apfs_get_firmlink_target_vnode
_apfs_get_firmlink_target_vnode_internal
_apfs_get_first_allocated_unwritten
_apfs_get_fsinfo
_apfs_get_fsroot_tree_ext
_apfs_get_iokit_volume_node_with_ref
_apfs_get_nstream_parent_inode
_apfs_get_paired_volume
_apfs_get_snap_meta_tree
_apfs_get_verification_info
_apfs_get_with_role
_apfs_get_with_uuid
_apfs_getset_role
_apfs_hashinit
_apfs_have_allocated_unwritten_before_offset
_apfs_increment_num_objects
_apfs_inherit_pinned_flags
_apfs_init
_apfs_init_phys
_apfs_inode_authorize_with_lock
_apfs_inode_getxattr
_apfs_inode_sec_getattr
_apfs_internal_lookup
_apfs_io_lock_exclusive
_apfs_io_lock_extending_write_to_shared
_apfs_io_lock_shared
_apfs_io_lock_shared_secondary
_apfs_io_lock_shared_to_exclusive
_apfs_io_unlock_exclusive
_apfs_io_unlock_exclusive_0
_apfs_iodone
_apfs_iokit_mount_eligibility
_apfs_is_hibernate_unlock
_apfs_is_root_volume
_apfs_is_space_reserved_at_offset
_apfs_is_task_entitled_to
_apfs_is_volume_fsindex_allowed
_apfs_is_volume_locked
_apfs_is_volume_role_allowed
_apfs_jhash_getvnode_internal
_apfs_jhash_getvnode_stream
_apfs_jhash_init
_apfs_jhash_insertvnode
_apfs_jhash_removevnode
_apfs_jhash_set_busy
_apfs_jhash_shutdown
_apfs_jhash_swap
_apfs_jhash_try_insert_stream
_apfs_jhash_wakeup
_apfs_key_compare
_apfs_load_fs_vnodes
_apfs_load_inode
_apfs_load_inode_internal
_apfs_load_inode_write_entered
_apfs_lock_inode_lock_pair
_apfs_lock_io_lock_pair
_apfs_lock_phys_extents
_apfs_lock_phys_range
_apfs_lock_stream_id
_apfs_lock_vnode_callback
_apfs_locks_init
_apfs_locks_shutdown
_apfs_lookup_name_with_alt_name
_apfs_lookup_range
_apfs_lowdisk_check
_apfs_lowdisk_check_volume
_apfs_lowmem_check
_apfs_make_space_reservation
_apfs_mark_inconsistent_
_apfs_materialize_dataless_file_ext
_apfs_memmove
_apfs_meta_crypto_state_destroy
_apfs_meta_crypto_state_init
_apfs_meta_crypto_state_unwrap
_apfs_module_start
_apfs_module_stop
_apfs_mount
_apfs_mount_update
_apfs_names_match
_apfs_nstream_read
_apfs_nstream_vnop_getattr
_apfs_nstream_vnop_getxattr
_apfs_nstream_vnop_setattr
_apfs_nstream_write
_apfs_pack_vap_common
_apfs_parse_version
_apfs_phys_range_has_waiters
_apfs_print_mem_stats
_apfs_raw_encrypted_clone
_apfs_raw_encrypted_lookup
_apfs_raw_encrypted_reclaim
_apfs_raw_inode_get
_apfs_raw_jhash_init
_apfs_rawdev_close
_apfs_rawdev_collect_extents
_apfs_rawdev_create
_apfs_rawdev_destroy
_apfs_rawdev_disable_devices_for_unmount
_apfs_rawdev_fini
_apfs_rawdev_init
_apfs_rawdev_ioctl
_apfs_rawdev_lookup_extent
_apfs_rawdev_open
_apfs_rawdev_psize
_apfs_rawdev_strategy
_apfs_real_user_access
_apfs_reap
_apfs_reap_extentref_blocks
_apfs_record_intention_to_allocate
_apfs_release_all_reserved_space
_apfs_release_hash_records
_apfs_release_io_context
_apfs_release_nstream_inode_parent
_apfs_release_nstream_inode_parent_0
_apfs_release_objects
_apfs_release_reserved_blocks
_apfs_release_reserved_bytes_in_range
_apfs_relesnapvnodes
_apfs_remap_mode_is_enabled
_apfs_remove_prev_fsize
_apfs_report_hv_btn_bad_hash
_apfs_report_hv_compr_data_bad_hash
_apfs_report_hv_compr_data_no_hash
_apfs_report_hv_data_bad_hash
_apfs_report_hv_data_no_hash
_apfs_role_policy
_apfs_rr_cb1
_apfs_rr_del_temp_file
_apfs_rr_should_defrag_phys_extents_free_range_cb
_apfs_sanity_check_tree_type
_apfs_scan_for_fragmentation_cb
_apfs_sealed_snap_op_allowed
_apfs_set_bsd_flags
_apfs_set_common_devt
_apfs_set_default_protclass
_apfs_set_file_size
_apfs_set_formatted_by
_apfs_set_mntfromname
_apfs_setxattr_internal
_apfs_shared_tx_flush_unlock
_apfs_slurp_file_data
_apfs_snap_check_arv_disabled
_apfs_snap_delete_pause
_apfs_snap_delete_resume
_apfs_snap_has_base_entitlements
_apfs_snap_has_vfs_entitlement
_apfs_snap_lookup_internal
_apfs_snap_vnop_create
_apfs_snap_vnop_getattr
_apfs_snap_vnop_ioctl
_apfs_snap_vnop_lookup
_apfs_snap_vnop_readdir
_apfs_snap_vnop_reclaim
_apfs_snap_vnop_remove
_apfs_snap_vnop_rename
_apfs_snapshot_create
_apfs_stop_bg_work
_apfs_store_ephemeral
_apfs_strncmp
_apfs_supports_pfkur
_apfs_sysctl_register
_apfs_sysctl_unregister
_apfs_timestamp_to_timespec
_apfs_trim_range_update_counters
_apfs_trim_ranges_in_region
_apfs_trim_to_prev_fsize
_apfs_truncate_decmpfs_lock
_apfs_truncate_decmpfs_unlock
_apfs_try_shared_tx_flush_lock
_apfs_unlock_phys_range
_apfs_unlock_stream_id
_apfs_unlock_vnode_callback
_apfs_unmount
_apfs_update_cow_exempt_file_count
_apfs_update_dev_name
_apfs_update_last_modified_by
_apfs_update_mem_stats
_apfs_update_phys_range
_apfs_update_phys_range_snap_or_live
_apfs_update_volstat_counter
_apfs_uuid_to_ndx
_apfs_validate_file_data
_apfs_vek_cache_operation
_apfs_verify_rangelist
_apfs_vfs_getattr
_apfs_vfsop_fhtovp
_apfs_vfsop_mountroot
_apfs_vfsop_root
_apfs_vfsop_setattr
_apfs_vfsop_statfs
_apfs_vfsop_sysctl
_apfs_vfsop_unmount
_apfs_vfsop_vget_internal
_apfs_vfsop_vget_snapdir
_apfs_vfsop_vptofh
_apfs_vnode_recycle_callback
_apfs_vnop_blktooff
_apfs_vnop_close
_apfs_vnop_getnamedstream
_apfs_vnop_makenamedstream
_apfs_vnop_mmap
_apfs_vnop_mmap_check
_apfs_vnop_mnomap
_apfs_vnop_offtoblk
_apfs_vnop_pathconf
_apfs_vnop_removenamedstream
_apfs_vnop_rename
_apfs_vnop_verify
_apfs_write_drain_full
_apfs_write_drain_with_callback
_apfs_write_resume_full
_apfs_zone_destroy
_apfs_zone_init
_apple_encrypted_archive_interface_register
_apple_encrypted_archive_interface_set_registration_callback
_apple_protect_pager_data_initialize
_apple_protect_pager_data_return
_apple_protect_pager_synchronize
_apple_uart_enable_irq
_apple_uart_init
_apply_func_phys
_arc4random
_arle_alloc_pending_entry
_arm64_force_wfi_clock_gate
_arm64_implementation_specific_error
_arm64_prepare_for_sleep
_arm64_replace_bootstack
_arm64_retention_wfi
_arm_fast_fault
_arm_force_fast_fault_internal
_arm_kva_to_tte
_arm_vm_prot_finalize
_arp_getstat
_arp_getstat_0
_arp_init
_arp_is_entry_probing
_arp_llinfo_get_iflri
_arp_llinfo_get_ri
_arp_llreach_set_reachable
_arp_probe
_arp_send_probe_notification
_arp_timeout
_assert_allocation_is_valid
_assert_fext_riterator
_assert_pext_iterator
_assert_raw_entry
_assert_sfext_iterator
_assert_wait
_assert_wait_queue
_assignRingToQueue(IO80211FlowQueue *,void *)
_ast_gen_init
_ast_generation_get
_atm_init
_atm_inspect_process_buffer
_atm_reset
_atm_set_diagnostic_config
_atomic_and64
_atomic_exchange_complete32
_atomic_or64
_atomic_test_and_set32
_attrlistbulk_iterator
_authapfs_get_hash_args
_authapfs_get_hash_info
_authapfs_hash_node
_authapfs_hash_size
_authapfs_hexdump_hash
_authapfs_integrity_meta_cache
_authapfs_integrity_meta_create
_authapfs_integrity_meta_get
_authapfs_seal_break
_authapfs_seal_is_broken_full
_authapfs_seal_restore
_authapfs_select_root_hash
_authapfs_should_hash_node
_authapfs_valid_hash_type
_authapfs_validate_node_hash
_authorize_signal
_bRyEnFcB
_b_sum16
_backtrace_unpack
_bcc_update
_bcmp
_bdevsw_remove
_bfy4vecFWs
_bfy4vecVW
_binary_match
_bind_hashget
_bind_hashrem
_bind_nodeget
_bindfs_close
_bindfs_getbackingvnode
_bindfs_vfs_getattr
_bit_count_set
_bitmap_clear_range
_bitmap_copy
_bitmap_count_bits
_bitmap_range_find_desired_or_first_clear_range
_bitmap_range_find_first
_bitmap_range_find_last_set
_bitmap_range_is_clear
_bitmap_range_is_set
_bitmap_set_range
_bitmap_shift_down
_bitmap_shift_up
_block_dev_read_write(gl_ctx const*,ulong long,uchar const*,ulong,bool)
_bm_find
_bmul32
_bmul64
_bootprofile_gather
_bootprofile_get
_bootstrap_instructions
_borrow_skey_ek
_borrow_skey_ekwk
_bp_xbyte
_bp_xhalf
_bp_xword
_bpfOutput(__ifnet *,uint,__mbuf *)
_bpfTapCallbackGated(void *,void *,void *,void *,void *)
_bpfTapCallbackThread(void *)
_bpf_tap_callback
_bpf_tap_in
_bpf_tap_out
_bpf_tap_packet_in
_bpf_tap_packet_out
_bpf_timed_out
_bpf_wakeup
_bpfkqfilter
_brange_iend
_brange_intersects
_bridge_bpf_input
_bridge_enqueue
_bridge_get_ip_proto
_bridge_get_tcp_header
_bridge_ioctl_delspan
_bridge_ioctl_gbparam32
_bridge_ioctl_gbparam64
_bridge_ioctl_sfilt
_bridge_link_event
_bridge_proto_input
_bridge_set_bpf_tap
_bridge_set_tso
_bridge_start
_bridge_verify_checksum
_bridgeattach
_bsd_bufferinit
_bsd_exec_setup
_bsd_mbuf_cluster_reserve
_bsd_threadcdir
_bsd_to_mach_failure
_bsdthread_create
_bsdthread_part_of_cooperative_workqueue
_bsdthread_register
_bt_iterator_init_with_hint
_bt_iterator_next
_bt_lookup
_bt_lookup_first
_bt_lookup_ge
_bt_lookup_gt
_bt_lookup_le
_bt_lookup_lt
_bt_remove
_bt_remove_first
_bt_search_node
_bt_search_node_insert
_btree_check_ext
_btree_check_recent_sanity
_btree_copy
_btree_create_extended
_btree_delete
_btree_delete_node
_btree_entry_max_size
_btree_entry_size_check
_btree_evict_range
_btree_evict_state_free
_btree_evict_state_init
_btree_get_extended
_btree_key_count
_btree_level_count
_btree_node_check
_btree_node_checkpoint_traverse
_btree_node_child_id
_btree_node_child_id_update
_btree_node_child_id_update_cb
_btree_node_child_val
_btree_node_count
_btree_node_debug_stats
_btree_node_free_space_total
_btree_node_get
_btree_node_has_room
_btree_node_init_ext
_btree_node_init_phys
_btree_node_insert
_btree_node_is_underused
_btree_node_key_len
_btree_node_key_off
_btree_node_key_ptr
_btree_node_key_range_validate
_btree_node_largest_key_len
_btree_node_reap
_btree_node_release
_btree_node_sanity_check
_btree_node_space_alloc
_btree_node_space_free_list_alloc
_btree_node_space_free_list_search
_btree_node_space_stats
_btree_node_toc_required_capacity
_btree_node_toc_resize
_btree_node_toc_set
_btree_node_toc_shift
_btree_node_val_len
_btree_node_val_off
_btree_node_val_ptr
_btree_node_val_range_validate
_btree_swap_node
_btref_decode_unslide
_btref_put
_btref_retain
_btri_search_node
_buf_acquire
_buf_acquire_0
_buf_acquire_1
_buf_acquire_locked
_buf_callback
_buf_drop
_buf_invalblkno
_buf_iterate
_buf_itercomplete
_buf_map
_buf_markclean
_buf_markdelayed
_buf_reset
_buf_setcallback
_buf_setdevice
_buf_setfilter
_buf_setupl
_buf_unmap
_buf_unmap_0
_buf_wait_for_shadow_io
_bufattr_dup
_buffer_flushed_callback
_buffer_write
_buildAOPSubPacketHeader(void *,SpuPacketType,ulong,SubPacketCategory,ushort)
_build_path
_builddesc
_buildkey
_buildrecord
_builtin_sandbox_create
_bzero
_c_seg_insert_into_q
_c_seg_major_compact_ok
_c_start
_cache_check_vnode_issubdir
_cache_enter_create
_cache_purge_negatives
_cache_purgevfs
_calc_overlap_range
_calculateCRC
_calculate_link_size
_calculate_nonrootfs_lowdisk_levels
_calculate_num_complete_blocks
_calculate_rootfs_lowdisk_levels
_calend_gettime
_can_embed_xattr
_can_manipulate_extents_internal
_can_manipulate_snapshot_extents_callback
_cansignal
_captureCallback(OSObject const*,char const*,CCTimestamp const*)
_cat_acquire_cnid
_cat_binarykeycompare
_cat_check_link_ancestry
_cat_convertattr
_cat_create
_cat_createlink
_cat_delete
_cat_deletelink
_cat_findname
_cat_findposition
_cat_getdirentries
_cat_getentriesattr
_cat_getkeyplusattr
_cat_idlookup
_cat_lookup
_cat_lookup_dirlink
_cat_lookup_lastlink
_cat_lookup_siblinglinks
_cat_lookupbykey
_cat_lookuplink
_cat_lookupmangled
_cat_postflight
_cat_preflight
_cat_releasedesc
_cat_rename
_cat_resolvelink
_cat_set_childlinkbit
_cat_update_dirlink
_cat_update_internal
_cat_update_siblinglinks
_catch_exception_raise
_catrec_update
_cbor_get_varuint_size
_cbor_insert_alignment_tags
_cbor_read_next
_cbor_read_varuint
_cbor_read_varuint_unsafe
_cbor_write_varuint_unsafe
_cbrtf
_cc_abort
_cc_cmp_safe
_cc_fault_canary_set
_cc_get_entropy
_cc_malloc_clear
_cc_module_id
_cc_muxp
_cc_print
_cc_rand_generate
_cc_ws_alloc
_cc_ws_clear
_cc_ws_free
_cc_ws_free_stack
_ccaes_arm_decrypt_cbc
_ccaes_arm_decrypt_key128
_ccaes_arm_decrypt_key192
_ccaes_arm_decrypt_key256
_ccaes_arm_decrypt_key_with_length_check
_ccaes_arm_encrypt_cbc
_ccaes_arm_encrypt_key
_ccaes_ccm_decrypt_mode
_ccaes_ccm_encrypt_mode
_ccaes_cfb_decrypt_vng
_ccaes_cfb_decrypt_vng_vector
_ccaes_cfb_encrypt_vng
_ccaes_cfb_encrypt_vng_vector
_ccaes_ctr_crypt_mode
_ccaes_ecb_encrypt_init
_ccaes_gcm_decrypt_mode
_ccaes_gcm_encrypt_mode
_ccaes_gladman_decrypt
_ccaes_gladman_decrypt_key128
_ccaes_gladman_decrypt_key192
_ccaes_gladman_decrypt_key256
_ccaes_gladman_encrypt
_ccaes_gladman_encrypt_key
_ccaes_gladman_encrypt_key128
_ccaes_gladman_encrypt_key192
_ccaes_gladman_encrypt_key256
_ccaes_ltc_init
_ccaes_ofb_crypt_vng
_ccaes_ofb_crypt_vng_vector
_ccaes_siv_encrypt_mode
_ccaes_siv_hmac_sha256_decrypt_mode
_ccaes_vng_ccm_decrypt
_ccaes_vng_ccm_encrypt
_ccaes_vng_ctr_crypt
_ccaes_vng_gcm_decrypt
_ccaes_vng_gcm_encrypt
_ccaes_xts_decrypt_vng_vector
_ccaes_xts_decrypt_vng_wrapper
_ccaes_xts_encrypt_vng_vector
_ccansikdf_x963
_ccansikdf_x963_final
_ccansikdf_x963_init
_ccansikdf_x963_update
_ccblowfish_cbc_encrypt_mode
_ccblowfish_cfb8_encrypt_mode
_ccblowfish_cfb_encrypt_mode
_ccblowfish_ctr_crypt_mode
_ccblowfish_ltc_ecb_decrypt
_ccblowfish_ltc_ecb_encrypt
_ccblowfish_ltc_setup
_cccast_ecb_decrypt
_cccast_setup
_ccccm_decrypt
_ccccm_encrypt
_ccccm_finalize_and_generate_tag
_ccccm_finalize_and_verify_tag
_ccccm_one_shot
_ccccm_one_shot_decrypt
_ccccm_one_shot_encrypt
_ccchacha20
_ccchacha20_final
_ccchacha20_init
_ccchacha20_setnonce
_ccchacha20_update
_ccchacha20poly1305_aad
_ccchacha20poly1305_decrypt
_ccchacha20poly1305_decrypt_oneshot
_ccchacha20poly1305_encrypt
_ccchacha20poly1305_encrypt_oneshot
_ccchacha20poly1305_finalize
_ccchacha20poly1305_init
_ccchacha20poly1305_setnonce
_ccchacha20poly1305_verify
_cccmac_final_generate
_cccmac_init
_cccmac_one_shot_generate
_cccmac_sl_test_xor
_cccmac_update
_ccctr_one_shot
_cccurve25519
_cccurve25519_internal
_ccder_blob_decode_bitstring
_ccder_blob_decode_eckey
_ccder_blob_decode_len_internal
_ccder_blob_decode_oid
_ccder_blob_decode_range_internal
_ccder_blob_decode_seqii_strict
_ccder_blob_decode_tag
_ccder_blob_decode_tl_internal
_ccder_blob_decode_uint64
_ccder_blob_decode_uint_n
_ccder_blob_decode_uint_range
_ccder_blob_decode_uint_strict
_ccder_blob_encode_body
_ccder_blob_encode_body_tl
_ccder_blob_encode_eckey
_ccder_blob_encode_implicit_integer
_ccder_blob_encode_implicit_uint64
_ccder_blob_encode_len
_ccder_blob_encode_oid
_ccder_blob_encode_tag
_ccder_blob_encode_tl
_ccder_blob_reserve
_ccder_blob_reserve_tl
_ccder_check_null
_ccder_decode_ber_len
_ccder_decode_ber_tl
_ccder_decode_bitstring
_ccder_decode_constructed_tl
_ccder_decode_eckey
_ccder_decode_eoc
_ccder_decode_oid
_ccder_decode_rsa_priv
_ccder_decode_rsa_priv_n
_ccder_decode_rsa_pub
_ccder_decode_rsa_pub_n
_ccder_decode_rsa_pub_x509
_ccder_decode_rsa_pub_x509_n
_ccder_decode_seqii
_ccder_decode_sequence_tl
_ccder_decode_tag
_ccder_decode_tl
_ccder_eat_ber
_ccder_encode_body_nocopy
_ccder_encode_constructed_tl
_ccder_encode_eckey
_ccder_encode_implicit_integer
_ccder_encode_rsa_priv
_ccder_encode_rsa_priv_size
_ccder_encode_rsa_pub
_ccder_encode_rsa_pub_size
_ccder_encode_tag
_ccder_encode_tl
_ccder_sizeof
_ccder_sizeof_eckey
_ccder_sizeof_implicit_integer
_ccder_sizeof_implicit_uint64
_ccder_sizeof_len
_ccder_sizeof_tag
_ccdes3_ltc_setup
_ccdes_cbc_encrypt_mode
_ccdes_cfb8_encrypt_mode
_ccdes_cfb_encrypt_mode
_ccdes_ctr_crypt_mode
_ccdes_key_is_weak
_ccdes_key_set_odd_parity
_ccdes_ltc_setup
_ccdigest_final_64be
_ccdigest_final_64le
_ccdigest_init
_ccdigest_update
_ccdrbg_factory_nistctr
_ccdrbg_factory_nisthmac
_ccec_add_ws
_ccec_affine_point_from_x_ws
_ccec_affinify
_ccec_affinify_ws
_ccec_affinify_x_only
_ccec_affinify_x_only_ws
_ccec_alprint
_ccec_compact_export
_ccec_compact_export_pub
_ccec_compact_generate_key
_ccec_compact_import_priv
_ccec_compact_import_priv_size
_ccec_compact_import_pub
_ccec_compact_import_pub_size
_ccec_compact_import_pub_ws
_ccec_compact_transform_key
_ccec_compressed_x962_export_pub
_ccec_compressed_x962_import_pub
_ccec_cp_for_oid
_ccec_der_export_priv
_ccec_der_export_priv_size
_ccec_der_import_priv
_ccec_der_import_priv_keytype
_ccec_double_ws
_ccec_export_pub
_ccec_extract_rs
_ccec_full_add
_ccec_full_add_normalized_ws
_ccec_full_add_ws
_ccec_full_sub_normalized_ws
_ccec_full_sub_ws
_ccec_generate_key_deterministic
_ccec_generate_key_fips
_ccec_generate_key_internal_fips
_ccec_generate_key_internal_fips_ws
_ccec_generate_key_internal_legacy
_ccec_generate_key_legacy
_ccec_generate_scalar_fips_extrabits
_ccec_generate_scalar_fips_extrabits_ws
_ccec_generate_scalar_fips_retry
_ccec_generate_scalar_fips_retry_ws
_ccec_generate_scalar_legacy
_ccec_generate_scalar_pka
_ccec_get_cp
_ccec_get_fullkey_components
_ccec_get_pubkey_components
_ccec_is_point
_ccec_is_point_projective_ws
_ccec_keysize_is_supported
_ccec_make_priv
_ccec_make_pub
_ccec_make_pub_from_priv
_ccec_make_pub_from_priv_ws
_ccec_mult_XYCZaddC_ws
_ccec_mult_XYCZadd_ws
_ccec_mult_blinded
_ccec_mult_blinded_ws
_ccec_mult_edge_cases_ws
_ccec_mult_inner_ws
_ccec_plprint
_ccec_print_full_key
_ccec_print_public_key
_ccec_print_sig
_ccec_projectify
_ccec_projectify_ws
_ccec_raw_import_priv_only
_ccec_raw_import_pub
_ccec_sign_composite
_ccec_sign_composite_msg
_ccec_sign_composite_ws
_ccec_sign_internal_inner_ws
_ccec_sign_internal_ws
_ccec_sign_ws
_ccec_twin_mult
_ccec_twin_mult_normalize_ws
_ccec_twin_mult_ws
_ccec_validate_pub
_ccec_validate_pub_and_projectify
_ccec_validate_pub_and_projectify_ws
_ccec_validate_pub_ws
_ccec_validate_scalar
_ccec_verify_composite
_ccec_verify_composite_0
_ccec_verify_composite_digest
_ccec_verify_composite_msg
_ccec_verify_composite_msg_0
_ccec_verify_digest
_ccec_verify_internal_ws
_ccec_verify_strict
_ccec_x963_export
_ccec_x963_import_priv
_ccec_x963_import_priv_size
_ccec_x963_import_pub
_ccecb_one_shot
_ccecdh_compute_shared_secret
_ccecdh_compute_shared_secret_ws
_ccecdh_fast_scalar_mult_ws
_ccecdh_generate_key
_ccecdh_generate_key_ws
_ccecdh_pairwise_consistency_check
_ccecdh_pairwise_consistency_check_ws
_ccecies_decrypt_gcm
_ccecies_decrypt_gcm_composite
_ccecies_decrypt_gcm_decrypt
_ccecies_decrypt_gcm_from_shared_secret
_ccecies_decrypt_gcm_from_shared_secret_composite
_ccecies_decrypt_gcm_plaintext_size
_ccecies_decrypt_gcm_plaintext_size_cp
_ccecies_decrypt_gcm_setup
_ccecies_derive_gcm_key_iv
_ccecies_encrypt_gcm
_ccecies_encrypt_gcm_ciphertext_size
_ccecies_encrypt_gcm_composite
_ccecies_encrypt_gcm_from_shared_secret
_ccecies_encrypt_gcm_from_shared_secret_composite
_ccecies_encrypt_gcm_setup
_ccecies_export_eph_pub
_ccecies_import_eph_pub
_ccecies_import_eph_pub_ws
_ccecies_pub_key_size
_ccecies_pub_key_size_cp
_cced25519_make_key_pair
_cced25519_make_pub
_cced25519_sign
_cced25519_sign_deterministic
_cced25519_sign_internal
_cced25519_verify
_ccgcm_inc_iv
_ccgcm_init_with_iv
_ccgcm_one_shot_legacy
_ccgcm_set_iv_legacy
_cchkdf
_cchkdf_expand
_cchkdf_extract
_cchmac
_cchmac_final
_cchmac_init
_cckprng_generate
_cckprng_init
_cckprng_refresh
_cckprng_reseed
_ccm128_decrypt
_ccm128_encrypt
_ccm192_decrypt
_ccm192_encrypt
_ccm256_decrypt
_ccm256_encrypt
_ccmgf
_ccmode_cbc_encrypt
_ccmode_ccm_cbcmac
_ccmode_ccm_crypt
_ccmode_ccm_encrypt
_ccmode_ccm_finalize
_ccmode_ccm_init
_ccmode_ccm_macdata
_ccmode_ccm_reset
_ccmode_ccm_set_iv
_ccmode_cfb8_decrypt
_ccmode_cfb8_encrypt
_ccmode_cfb8_init
_ccmode_cfb_decrypt
_ccmode_cfb_encrypt
_ccmode_cfb_init
_ccmode_ctr_crypt
_ccmode_ctr_init
_ccmode_ctr_setctr
_ccmode_factory_cbc_encrypt
_ccmode_factory_cfb8_encrypt
_ccmode_factory_cfb_encrypt
_ccmode_factory_ctr_crypt
_ccmode_factory_ofb_crypt
_ccmode_factory_siv_encrypt
_ccmode_factory_siv_hmac_decrypt
_ccmode_gcm_aad
_ccmode_gcm_finalize
_ccmode_gcm_gf_mult_32
_ccmode_gcm_gf_mult_64
_ccmode_gcm_reset
_ccmode_gcm_set_iv
_ccmode_ofb_crypt
_ccmode_ofb_init
_ccmode_omac_decrypt
_ccmode_omac_init
_ccmode_siv_auth
_ccmode_siv_auth_finalize
_ccmode_siv_decrypt
_ccmode_siv_encrypt
_ccmode_siv_hmac_auth
_ccmode_siv_hmac_auth_backend
_ccmode_siv_hmac_auth_finalize
_ccmode_siv_hmac_decrypt
_ccmode_siv_hmac_encrypt
_ccmode_siv_hmac_init
_ccmode_siv_hmac_nonce
_ccmode_siv_hmac_reset
_ccmode_siv_hmac_temp_key_gen
_ccmode_siv_init
_ccmode_siv_reset
_ccmode_xts_crypt
_ccmode_xts_init
_ccmode_xts_key_sched
_ccmode_xts_mult_alpha
_ccmode_xts_set_tweak
_ccn_abs_ws
_ccn_add
_ccn_add1
_ccn_addmul1_asm
_ccn_bitlen
_ccn_cmp
_ccn_cmpn
_ccn_cond_add
_ccn_cond_neg
_ccn_cond_shift_right_carry
_ccn_cond_swap
_ccn_div_euclid
_ccn_div_euclid_ws
_ccn_div_exact_ws
_ccn_div_use_recip_ws
_ccn_divides1
_ccn_gcd_update_ws
_ccn_gcd_ws
_ccn_invmod_ws
_ccn_lcm_ws
_ccn_lprint
_ccn_make_recip_ws
_ccn_mod_192_ws
_ccn_mod_224_montgomery
_ccn_mod_256_montgomery
_ccn_mul
_ccn_mul1_asm
_ccn_mul_224_montgomery
_ccn_mul_256_montgomery
_ccn_mul_lo
_ccn_mux
_ccn_n
_ccn_neg
_ccn_p224_from_ws
_ccn_p224_inv_asm_ws
_ccn_p224_is_one_ws
_ccn_p224_mul_ws
_ccn_p224_redc
_ccn_p224_sqr_ws
_ccn_p256_inv_asm_ws
_ccn_p256_redc
_ccn_p384_from_ws
_ccn_p384_is_one_ws
_ccn_p384_mul_ws
_ccn_p384_redc
_ccn_p384_sqr_ws
_ccn_p384_to_ws
_ccn_print
_ccn_random_bits
_ccn_read_uint
_ccn_seed_X
_ccn_set
_ccn_shift_left
_ccn_shift_left_multi
_ccn_shift_right
_ccn_shift_right_multi
_ccn_sqr_224_montgomery
_ccn_sqr_256_montgomery
_ccn_sub
_ccn_sub1
_ccn_trailing_zeros
_ccn_write_int
_ccn_write_int_size
_ccn_write_uint
_ccn_write_uint_padded_ct
_ccn_write_uint_size
_ccn_zero_multi
_ccnistkdf_ctr_cmac
_ccnistkdf_ctr_cmac_fixed
_ccnistkdf_ctr_hmac
_ccnistkdf_ctr_hmac_fixed
_ccnistkdf_fb_hmac
_ccnistkdf_fb_hmac_fixed
_ccoid_equal
_ccpad_cts3_decrypt
_ccpad_cts3_encrypt
_ccpad_xts_decrypt
_ccpad_xts_encrypt
_ccpbkdf2_hmac
_ccpoly1305
_ccpoly1305_final
_ccpoly1305_init
_ccpoly1305_update
_ccprime_rabin_miller
_ccprime_rabin_miller_init_ws
_ccprime_rabin_miller_iteration_ws
_ccprime_rabin_miller_ws
_ccrng
_ccrng_cryptographic_generate
_ccrng_cryptographic_init_once
_ccrng_csprng_generate
_ccrng_csprng_init
_ccrng_csprng_lock_init
_ccrng_csprng_reseed
_ccrng_csprng_reseed_get_entropy
_ccrng_drbg_done
_ccrng_drbg_init
_ccrng_drbg_init_withdrbg
_ccrng_fortuna_generate
_ccrng_fortuna_init
_ccrng_fortuna_refresh
_ccrng_rsafips_test_generate
_ccrng_rsafips_test_init
_ccrng_sequence_init
_ccrng_system_init
_ccrng_uniform
_ccrsa_crt_make_fips186_key
_ccrsa_crt_makekey
_ccrsa_crt_makekey_ws
_ccrsa_decrypt_eme_pkcs1v15
_ccrsa_decrypt_eme_pkcs1v15_blinded_ws
_ccrsa_decrypt_oaep
_ccrsa_decrypt_oaep_blinded_ws
_ccrsa_dump_full_key
_ccrsa_dump_public_key
_ccrsa_eme_pkcs1v15_decode
_ccrsa_eme_pkcs1v15_encode
_ccrsa_emsa_pkcs1v15_encode
_ccrsa_emsa_pkcs1v15_verify
_ccrsa_emsa_pkcs1v15_verify_canary_out
_ccrsa_emsa_pss_decode
_ccrsa_emsa_pss_decode_canary_out_ws
_ccrsa_emsa_pss_encode
_ccrsa_encrypt_oaep
_ccrsa_encrypt_oaep_ws
_ccrsa_export_pub
_ccrsa_generate_fips186_key_trace
_ccrsa_generate_fips186_prime_factors
_ccrsa_generate_key_internal
_ccrsa_generate_prime
_ccrsa_generate_probable_prime
_ccrsa_generate_probable_prime_from_auxiliary_primes
_ccrsa_get_fullkey_components
_ccrsa_get_pubkey_components
_ccrsa_import_pub
_ccrsa_init_pub
_ccrsa_init_pub_ws
_ccrsa_is_valid_prime
_ccrsa_make_fips186_key
_ccrsa_make_fips186_key_trace
_ccrsa_make_priv
_ccrsa_make_pub
_ccrsa_num_mr_iterations
_ccrsa_num_mr_iterations_aux
_ccrsa_oaep_decode_parameter
_ccrsa_oaep_decode_parameter_ws
_ccrsa_oaep_encode_parameter
_ccrsa_oaep_encode_parameter_ws
_ccrsa_pairwise_consistency_check
_ccrsa_priv_crypt
_ccrsa_priv_crypt_blinded
_ccrsa_priv_crypt_blinded_ws
_ccrsa_priv_crypt_ws
_ccrsa_pub_crypt
_ccrsa_pub_crypt_ws
_ccrsa_recover_priv
_ccrsa_sign_pkcs1v15
_ccrsa_sign_pkcs1v15_blinded
_ccrsa_sign_pkcs1v15_blinded_ws
_ccrsa_sign_pkcs1v15_msg
_ccrsa_sign_pss
_ccrsa_sign_pss_blinded
_ccrsa_sign_pss_msg
_ccrsa_verify_pkcs1v15
_ccrsa_verify_pkcs1v15_allowshortsigs
_ccrsa_verify_pkcs1v15_digest
_ccrsa_verify_pkcs1v15_digest_ws
_ccrsa_verify_pkcs1v15_internal_ws
_ccrsa_verify_pkcs1v15_msg
_ccrsa_verify_pss_digest
_ccrsa_verify_pss_msg
_ccscrypt
_ccscrypt_blockmix_salsa8
_ccscrypt_romix
_ccscrypt_salsa20_8
_ccscrypt_storage_size
_ccscrypt_valid_parameters
_ccsha512_final
_ccsha512_ltc_compress
_ccsiv_hmac_aad
_ccsiv_hmac_crypt
_ccsiv_hmac_one_shot
_ccsiv_hmac_set_nonce
_ccss_encode_string_into_value_smaller_than_prime
_ccss_shamir_consistent_primes
_ccss_shamir_evaluate_poly_to_buffer
_ccss_shamir_generate_random_poly_ws
_ccss_shamir_generate_share_poly_ws
_ccss_shamir_parameters_init
_ccss_shamir_poly_coefficient
_ccss_shamir_share_bag_add_share
_ccss_shamir_share_bag_copy_ith_share_x
_ccss_shamir_share_bag_ith_share_y
_ccss_shamir_share_bag_recover_secret
_ccss_shamir_share_bag_set_ith_share
_ccss_shamir_share_bag_set_ith_share_with_xy
_ccss_shamir_share_export
_ccss_shamir_share_generator_deserialize
_ccss_shamir_share_generator_generate_share
_ccss_shamir_share_generator_init
_ccss_shamir_share_generator_init_with_secrets_less_than_prime
_ccss_shamir_share_generator_serialize
_ccss_shamir_share_import
_ccss_sizeof_shamir_share_generator_serialization
_ccwrap_argsvalid
_ccwrap_auth_decrypt_withiv
_ccwrap_auth_encrypt
_ccwrap_auth_encrypt_0
_ccwrap_auth_encrypt_withiv
_cczp_add
_cczp_add_ws
_cczp_check_delta_100bits
_cczp_compute_R
_cczp_div2_ws
_cczp_find_next_prime
_cczp_from
_cczp_generate_non_zero_element
_cczp_generate_non_zero_element_ws
_cczp_generate_random_element_ws
_cczp_init
_cczp_init_ws
_cczp_inv
_cczp_inv_default_ws
_cczp_inv_update_redc_ws
_cczp_inv_update_ws
_cczp_is_one_default_ws
_cczp_is_quadratic_residue_ws
_cczp_mm_from_ws
_cczp_mm_init_ws
_cczp_mm_is_one_ws
_cczp_mm_mod_ws
_cczp_mm_mul_ws
_cczp_mm_power_fast_ws
_cczp_mm_power_ws
_cczp_mm_redc
_cczp_mm_sqr_ws
_cczp_mm_to_ws
_cczp_mod
_cczp_mod_default_ws
_cczp_modn
_cczp_modn_ws
_cczp_mul
_cczp_mul_default_ws
_cczp_power_blinded_ws
_cczp_power_fast
_cczp_power_fast_ws
_cczp_power_ws
_cczp_sqr
_cczp_sqr_default_ws
_cczp_sqrt
_cczp_sqrt_default_ws
_cczp_sqrt_tonelli_shanks_precomp_ws
_cczp_sub
_cczp_sub_ws
_cczp_to
_cdev_close
_cdev_free
_cdev_getc
_cdev_ioctl
_cdev_open
_cdev_putc
_cdev_read
_cdev_select
_cdev_write
_cdevsw_add
_cdevsw_add_with_bdev
_cdevsw_isfree
_cdevsw_remove
_ceil
_cfil_dgram_get_socket_state
_cfil_dgram_peek_socket_state
_cfil_entry_buf_verify
_cfil_info_verify
_cfil_queue_remove
_cfil_queue_verify
_cfil_sock_connected_pending_verdict
_cfil_sock_id_from_socket
_ch_deactivate
_ch_is_multiplex
_chacha20poly1305_aad
_chacha20poly1305_decrypt
_chacha20poly1305_encrypt
_chacha20poly1305_finalize
_chacha20poly1305_incnonce
_chacha20poly1305_init
_chacha20poly1305_reset
_chacha20poly1305_setnonce
_chacha20poly1305_verify
_change_crypto_id_prot_class
_change_dstream_prot_class
_change_prot_class
_change_xdstream_prot_class
_check_for_busy_parent
_check_for_dataless_file
_check_parent_chain_internal
_check_port
_check_rootmount_qualification
_check_stale_doc_id_index
_check_task_access
_check_task_access_with_flavor
_checksumCopy
_chflags0
_child_remover_cb
_child_size_calculator_cb
_chmod
_chmod_vnode
_chop_close
_chown
_chrtoblk
_chrtoblk_set
_circular_queue_dequeue
_circular_queue_enqueue
_circular_queue_init
_circular_queue_peek
_cleanBuffers
_clean_up_forwarded_roothash
_cleanupKernelAESHW
_cleanup_purgatory_dir
_cleanup_snapshot_purgatory
_clearFlushedPacket(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_clear_art_thread_call(void *,void *)
_clear_revert_to_snapshot_ro_mount_state
_clock_alarm_reply
_clock_config
_clock_get_attributes
_clock_get_time
_clock_gettimeofday_set_commpage
_clock_init
_clock_interval_to_absolutetime_interval
_clock_oldconfig
_clock_service_create
_clock_timebase_init
_clone_children_cb
_clone_extents_if_needed
_clone_fexts_
_clone_file_fexts
_clone_fs
_clone_item
_clone_large_ea_extents
_clone_rsrcfork
_clone_split_fext
_clone_symlink
_clone_xattrs
_clonesplit_snk_free
_clr_be_bit
_clrbit
_cluster_align_phys_io
_cluster_handle_associated_upl
_cluster_init
_cluster_pageout
_cluster_read_ext
_cluster_write_ext
_cmam7f
_cnclose
_cnopen
_cnread
_cnselect
_cnwrite
_coalition_get_task_count
_coalition_is_leader
_coalition_ledger_set_logical_writes_limit
_coalition_notification
_coalitions_adopt_corpse_task
_coalitions_adopt_init_task
_code_ipc_absinthe_collection
_code_ipc_authentication_token_verify
_code_ipc_backup_pfk_data
_code_ipc_change_lock_state
_code_ipc_change_secret
_code_ipc_client_terminate
_code_ipc_copy_keybag
_code_ipc_copy_volume_cookie
_code_ipc_create_d_key
_code_ipc_create_keybag
_code_ipc_create_signing_key
_code_ipc_device_state_transition
_code_ipc_drain_backup_keys
_code_ipc_escrow_keys_create
_code_ipc_escrow_keys_unlock
_code_ipc_escrow_stash_create
_code_ipc_escrow_stash_load
_code_ipc_fdr_hmac_data
_code_ipc_fv_get_blob_state
_code_ipc_fv_get_size
_code_ipc_fv_new_kek
_code_ipc_fv_new_sibling_vek
_code_ipc_fv_new_vek
_code_ipc_fv_rewrap_kek
_code_ipc_fv_set_protection
_code_ipc_fv_unwrap_vek
_code_ipc_generic_operation
_code_ipc_get_capabilities
_code_ipc_get_device_state
_code_ipc_handle_timer_fire
_code_ipc_hello
_code_ipc_invalidate_keybag
_code_ipc_kc_unwrap
_code_ipc_kc_wrap
_code_ipc_keybag_persona_create
_code_ipc_keybag_persona_delete
_code_ipc_load_keybag
_code_ipc_make_public_backup_bag
_code_ipc_make_system_keybag
_code_ipc_migrate_s_key
_code_ipc_new_media_key
_code_ipc_new_pfk_data
_code_ipc_null_d_key
_code_ipc_recover_with_escrow_bag
_code_ipc_remote_peer_drop
_code_ipc_remote_peer_get_state
_code_ipc_remote_session
_code_ipc_remote_session_operate
_code_ipc_rewrap_pfk_data
_code_ipc_set_configuration
_code_ipc_set_public_backup_keybag
_code_ipc_sign_remote_signing_key
_code_ipc_smartcard_register
_code_ipc_smartcard_request_unlock
_code_ipc_smartcard_unlock
_code_ipc_smartcard_unregister
_code_ipc_unload_keybag
_code_ipc_unwrap_d_key
_code_ipc_unwrap_media_key
_code_ipc_unwrap_pfk_data
_code_ipc_verify_secret
_code_ipc_volume_backup_operation
_collectCachedPeersStats(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_collect_extents_by_range
_collect_snapshot_sbs_callback
_commpage_increment_cpu_quiescent_counter
_commpage_set_remotetime_params
_commpage_update_active_cpus
_commpage_update_kdebug_state
_commpage_update_mach_approximate_time
_commpage_update_timebase
_compareDpSessionId(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_compareDpSessionSetupInProgress(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_compareNANDpSessionId(IO80211QueueDescriptor *,IO80211QueueDescriptor *,userPrintCtx *)
_compareNANInstanceIds(IO80211QueueDescriptor *,IO80211QueueDescriptor *,userPrintCtx *)
_compareNANRangingSessionId(IO80211QueueDescriptor *,IO80211QueueDescriptor *,userPrintCtx *)
_compareQueueByFlowId(IO80211FlowQueue *,void *)
_compareServiceKeys(IO80211QueueDescriptor *,IO80211QueueDescriptor *,userPrintCtx *)
_compare_octet_string
_compare_octet_string_partial
_compare_octet_string_raw
_completeSampleSizesIOMD
_compress
_compress2
_compression_decode_buffer
_compression_decode_scratch_buffer_size
_compressor_memory_object_data_initialize
_compressor_memory_object_data_reclaim
_compressor_memory_object_data_request
_compressor_memory_object_data_unlock
_compressor_memory_object_last_unmap
_compressor_memory_object_map
_compressor_memory_object_reference
_compressor_memory_object_synchronize
_compressor_memory_object_terminate
_compressor_pager_slots_chunk_free
_compute_averunnable
_compute_pageout_gc_throttle
_compute_sched_load
_compute_telemetry
_cons_cinput
_cons_putc_locked
_consdebug_putc
_consdebug_putc_unbuffered
_conslog_putc
_console_printbuf_clear
_console_printbuf_state_init
_console_read_char
_console_try_read_char
_console_write_char
_console_write_unbuffered
_construct_root_snapshot_name
_consumeNonce
_container_create_dev_for_snapshot
_container_decompose
_container_identify_vnode_from_idx
_container_is_container
_container_is_external
_container_is_external(void *,dev_handle *)
_container_keybag_alloc
_container_keybag_free
_container_manager_get_process_containers
_container_republish
_container_rootmount
_container_unload
_convertChannelToOpClass
_convertCommittedAvailabilityToChannelSequence
_convertOpClassToChannel
_convert_host_to_port
_convert_ino_to_pending_purgeable
_convert_thread_inspect_to_port
_convert_thread_read_to_port
_convert_to_pktap_header_to_v2
_convert_vnode_attr
_copyCachedNdpSessionInfo(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_copyServiceGetChannels(OSArray *,OSArray *,OSArray *,uint,IOService **,IOReportChannelList **,OSNumber **)
_copyServiceGetChannels(OSArray *,OSArray *,uint,IOService **,IOReportChannelList **)
_copyTLV(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_copy_entitlement_value_by_cred
_copy_entitlement_value_by_proc
_copy_mbuf
_copy_metadata
_copy_path_for_vp
_copy_signing_identifier
_copyin
_copyin_atomic32
_copyin_atomic64
_copyin_kern
_copyinstr
_copyout
_copypv
_copystr
_core_analytics_event_size
_core_analytics_field_is_string
_corecrypto_kext_start
_coredump_save_sw_vers(void *,int (*)(void *,ulong long,void *),void *)
_coretrust_interface_register
_coretrust_kext_start
_cos
_cosf
_countAdvertisement(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countAirPlayServices(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countBrowse(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countCachedSingleBandPeers(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countNonATVCachedPeers(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countNonAirDropServices(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countNonAirPlayServices(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countRoutablePeers(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_countWifidOnlyServices(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_count_lock_queue
_count_pages
_cp_dec_ref
_cp_device_locked_callback
_cp_entry_alloc
_cp_entry_dealloc
_cp_entry_init
_cp_flop_generation
_cp_flush_cached_keys
_cp_generate_keys
_cp_get_default_level
_cp_get_ek2
_cp_get_fext_ek
_cp_get_protected_cnode
_cp_get_root_major_vers
_cp_getrootxattr
_cp_handle_open
_cp_handle_strategy
_cp_handle_vnop
_cp_inc_ref
_cp_init_access
_cp_io_params
_cp_is_valid_class
_cp_key_store_action
_cp_key_store_action_for_volume
_cp_lock_vfs_callback
_cp_lock_vnode_callback
_cp_new
_cp_new_rsrcfork_crypto_id
_cp_read_xattr_v5
_cp_replace_entry
_cp_restore_keys
_cp_rewrap
_cp_set_auto_roll
_cp_set_rewrapped
_cp_set_trimmed
_cp_setrootxattr
_cp_setup_newentry
_cp_setxattr
_cp_should_auto_roll
_cp_to_ino_class
_cp_vnode_getclass
_cp_vnode_is_eligible
_cp_vnode_setclass
_cp_vnode_transcode
_cp_xattrid_criteria_matched
_cpkp_copy
_cpkp_init
_cpkp_unwrap
_cpu_broadcast_immediate_xcall_simple
_cpu_broadcast_xcall_simple
_cpu_broadcast_xcall_simple_cbk
_cpu_data_alloc
_cpu_data_free
_cpu_data_init
_cpu_data_register
_cpu_data_startup_init
_cpu_event_unregister_callback
_cpu_exit_wait
_cpu_immediate_xcall
_cpu_info
_cpu_info_count
_cpu_qos_update_register
_cpu_quiescent_counter_init
_cpu_quiescent_counter_set_min_interval_us
_cpu_signal_deferred_timer
_cpu_stack_alloc
_cpu_xcall
_cpuid_get_cpufamily
_cpuid_get_cpusubfamily
_cpx_alloc
_cpx_alloc_ctx
_cpx_alloc_internal(dev_handle *,void const*,ulong,void *,ulong,uint)
_cpx_flush
_cpx_gentempkeys
_cpx_iv_aes_ctx
_cpx_set_aes_iv_key
_cpx_set_is_composite_key
_cpx_set_synthetic_offset_for_iv
_cpx_set_use_offset_for_iv
_crack_chain_rsa4k_sha384_x86
_crc16
_crc32
_crc32_little_aligned_vector
_crc32c_init
_crc32c_soft
_createHexString
_createSampleSizesIOMD
_createSamplesIOMD
_create_empty_extentref_tree
_create_empty_xattr_vnode
_create_fsevent_from_kevent
_create_new_crypto_state_for_id
_create_sibling_link
_createindirectlink
_cred_check_bool_entitlement
_cred_check_posix_semaphore
_cred_check_socket
_cred_has_sandbox
_cred_is_protoboxed
_cred_label_associate(ucred *,ucred *)
_cred_label_associate_kernel(ucred *)
_cred_label_destroy(label *)
_cred_label_update_execve(ucred *,ucred *,proc *,vnode *,long long,vnode *,label *,label *,label *,uint *,void *,ulong,int *)
_cred_sb_evaluate
_cru2x
_crypto_cache_create
_crypto_cache_device_locked
_crypto_cache_purge_freelist_locked
_crypto_hash_cleaner_wakeup
_crypto_hash_cleanup_continuation
_crypto_hash_drop_ref_for_id
_crypto_hash_insert
_crypto_hash_refcount
_crypto_hash_release_state
_crypto_hash_search_with_id
_crypto_id_converter
_crypto_id_map_assert
_crypto_id_map_capacity
_crypto_id_map_free
_crypto_id_map_get
_crypto_id_map_put
_crypto_init_access
_crypto_state_fext_iterator
_crypto_state_init
_crypto_state_unwrap
_crypto_verify_32
_cs_blob_create_validated
_cs_blob_require
_cs_entitlement_flags
_cs_entitlements_blob_get_vnode
_cs_entitlements_dictionary_copy_vnode
_cs_process_invalidated
_cs_valid
_cs_validate_codedirectory
_csblob_entitlements_dictionary_copy
_csblob_entitlements_dictionary_set
_csblob_find_blob
_csblob_find_blob_bytes
_csblob_get_der_entitlements
_csblob_get_entitlements
_csblob_get_identity
_csblob_get_storage_addr
_csblob_os_entitlements_copy
_csf_start
_csf_stop
_csfg_get_cdhash
_csfg_get_identity
_csfg_get_platform_binary
_csfg_get_platform_identifier
_csfg_get_prod_signed
_csfg_get_signer_type
_csfg_get_teamid
_csi_destroy
_csprng_getentropy
_csproc_forced_lv
_csproc_get_prod_signed
_cst_from_rawkey
_csvnode_get_platform_identifier
_csvnode_get_teamid
_ctl_getenqueuereadable
_ctl_getlock
_ctl_id_by_name
_ctl_ioctl
_ctl_name_by_id
_ctrace_record
_cuckoo_hashtable_load_factor
_current_linkid
_current_proc_EXTERNAL
_current_proc_ro
_cv_wait_rw
_cwXQIE1iHb4CJfuX
_dead_badop
_dealloc_service_port_sblabel_callback
_debug_is_in_phys_carveout
_debug_mode_active
_debug_putc
_debug_state_is_valid64
_decmpfs_hides_rsrc
_decmpfs_trylock_compressed_data
_decmpfs_update_attributes
_decode_extended_state
_decode_fv_data
_decode_implicit_raw_octet_string
_decode_implicit_uint64
_decode_octect_string
_decompress
_decompress_lzss
_deconstruct_path
_decrement_cst_refcount
_decrement_dstream_id_for_deletion
_decrement_dstream_id_refcnt
_dedupe_entry_deref
_dedupe_entry_remove
_dedupe_key_cmp_
_dedupe_map_create
_dedupe_map_delete
_dedupe_map_free
_dedupe_map_insert
_dedupe_map_load
_dedupe_map_lookup_gt
_dedupe_map_lookup_le
_dedupe_map_lookup_range
_dedupe_val_end
_default_class_is_ok
_deflate
_deflateBound
_deflateCopy
_deflateEnd
_deflateParams
_deflatePrime
_deflateResetWithIO
_deflateSetDictionary
_deflateSetHeader
_deflateTune
_defrtrlist_add_static
_defrtrlist_del_static
_defrtrlist_ioctl
_dekkerlock_lock
_delete
_delete_bad_purgeable_drec
_delete_buffers
_delete_buffers_triage
_delete_clone_fs
_delete_extentref_tree
_delta_canonicalize
_delta_create_ctx_free
_delta_create_prepare
_delta_emit_doc_id_op
_delta_emit_dstream_crypto
_delta_emit_dstream_hole_punch
_delta_emit_dstream_write
_delta_kext_io_read
_delta_kext_io_read_finish
_delta_kext_io_read_flush
_delta_kext_io_read_start
_delta_kext_io_write
_delta_kext_io_write_finish
_delta_kext_io_write_flush
_delta_kext_io_write_start
_delta_lookup_mcp_mapping
_delta_restore_chunk
_delta_restore_clone_dstream_range_iter
_delta_restore_create_or_update_ekwk
_delta_restore_ctx_free
_delta_restore_delete_dstream_range
_delta_restore_delete_dstream_range_iter
_delta_restore_finalize
_delta_restore_prepare
_delta_restore_verify_compatibility
_delta_unlock_volume
_delta_validate_op
_der_compare
_der_decode_any
_der_decode_boolean
_der_decode_key_value
_der_decode_number
_der_decode_string
_der_dict_find_value
_der_dict_get_number
_der_dict_iterate
_der_get_boolean
_der_get_number
_der_vm_CEType_from_context
_der_vm_bool_from_context
_der_vm_buffer_from_context
_der_vm_execute
_der_vm_execute_match_bool
_der_vm_execute_match_integer
_der_vm_execute_match_string
_der_vm_execute_match_string_prefix
_der_vm_execute_select_index
_der_vm_execute_select_key
_der_vm_execute_select_longest_matching_key
_der_vm_execute_string_prefix_value_allowed
_der_vm_execute_string_value_allowed
_der_vm_integer_from_context
_der_vm_iterate
_der_vm_string_from_context
_der_vm_trampoline
_der_vm_trampoline_0
_dereference_phys_range
_derive_cred
_derive_proc
_derive_target_relation
_derive_vnode_attrs
_des3_ecb_encrypt
_des3_ecb_key_sched
_des_ecb_encrypt
_des_ecb_key_sched
_desfunc
_desfunc3
_deskey
_detach(__ifnet *)
_dev_blk_range2slice_range
_dev_close
_dev_constr
_dev_destr
_dev_dup_entry
_dev_dup_plane
_dev_features
_dev_findname
_dev_init
_dev_insert_write_pending
_dev_read_async
_dev_remove_write_pending
_dev_reprobe_block_count
_dev_set_block_size
_dev_set_tier2_device
_dev_slice_lock
_dev_slice_unlock
_devfs_free_plane
_devfs_init
_devfs_lookup
_devfs_make_node
_devfs_make_node_clone
_devfs_make_symlink
_devfs_mkdir
_devfs_mknod
_devfs_ref_node
_devfs_rmdir
_devfs_setlabel
_devfs_symlink
_devfs_vfs_getattr
_devfs_vnop_remove
_devfsspec_read
_devfsspec_write
_device_close
_device_pager_data_initialize
_device_pager_reference
_device_pager_synchronize
_deviceset_add_rdev
_deviceset_contains_rdev
_deviceset_enlarge_locked
_deviceset_remove_rdev
_devzerobuf_init
_df
_df_bcc_update
_df_initialize
_dhcpol_add
_dhcpol_concat
_dhcpol_element
_dhcpol_free
_dhcpol_parse_buffer
_di_root_image_ext
_di_root_ramfile_buf
_di_safe_uncompress
_dict_find_params_cb
_dir_rec_alloc_with_hash
_dir_stats_moved
_discardAirPlayService(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_discardLockers
_disk_conditioner_get_info
_disk_conditioner_mount_is_ssd
_dkclose
_dkioctl_bdev
_dkioctl_cdev
_dkopen
_dkread
_dksize
_dlil_clat46
_dlil_if_free
_dlil_if_ref
_dlil_if_trace
_dlil_ifaddr_bytes
_dlil_ifproto_input
_dlil_input_handler
_dlil_input_stats_add
_dlil_input_stats_sync
_dlil_input_thread_cont
_dlil_kev_dl_code_str
_dlil_main_input_thread_func
_dlil_node_absent
_dlil_node_present
_dlil_node_present_v2
_dlil_output_cksum_dbg
_dlil_post_complete_msg
_dlil_post_msg
_dlil_post_sifflags_msg
_dlil_proto_unplumb_all
_dlil_report_issues
_dlil_reset_input_handler
_dlil_reset_output_handler
_dlil_rxpoll_get_params
_dlil_rxpoll_validate_params
_dlil_send_arp
_dlil_set_bpf_tap
_dlil_set_input_handler
_dlil_set_output_handler
_dn_mark_for_delayed_times_update
_dn_times_now
_doInputPacket(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_doMonitoring(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_doPeerCredit(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_doReorder
_doTransmitStatus(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_doUserPrint(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_do_attr_lookup
_do_crc8_ccitt(uint,uchar *)
_do_debugid
_do_hfs_truncate
_do_iterative_file_extent_removal
_do_journal_io
_do_large_page_xattr_dstream_extent_io
_do_msync_if_needed
_do_setup_dir_size
_do_xattr_dstream_extent_io
_doc_id_tree_create
_doc_id_tree_destroy
_doc_id_tree_insert
_doc_id_tree_invalid_crypto
_doc_id_tree_key_cmp
_doc_id_tree_key_val_snprintf
_doc_id_tree_lookup
_doc_id_tree_node_count
_doc_id_tree_remove
_doc_tombstone_handle_remove
_doc_tombstone_should_ignore_name
_doc_tombstone_should_save
_dockchannel_ack_irq
_dockchannel_enable_irq
_dockchannel_init
_dockchannel_transmit_data
_dom_init_old
_done
_drbg_update
_drec_hash_func
_drop_extents_fext_iterator
_dstream_evict_range
_dstream_evict_scanner
_dstream_evict_scanner_internal
_dstream_info_cmp
_dstream_pext_tree_create
_dstream_pext_tree_insert_pext
_dstream_pext_tree_lookup_overlap
_dstream_should_ignore
_dummy_putc
_dummynet_event_enqueue_nwk_wq_entry
_dump_dir_iterators
_dump_extents_of_file
_dump_extents_of_stream
_dump_extents_of_xattr
_dump_journal
_dup_sockaddr
_duplicate_jobj_op_to_shadow_fs_root
_eay_RC4
_eay_RC4_set_key
_ecb_from_cbc
_ecfips_test_generate
_effaceGroup
_effaceLockerInternal
_effaceable_is_disabled
_ek_to_crypto_state
_emitSerializationElement
_en_ctl_connect
_en_ctl_disconnect
_en_ctl_receive
_en_ctl_send
_en_ctl_setsockopt
_en_get_enqueue_space
_en_packet_list_to_client
_en_register
_en_set_route_cleanup
_encap_getarg
_encode_comp_t
_encode_extended_state
_encode_list_add_data
_encode_list_add_der
_encode_list_add_list
_encode_list_add_number
_encode_list_cstr_add_data
_encode_list_dict
_encode_list_free
_encode_list_get_data
_encode_list_get_number
_encode_list_merge_dict
_encode_list_remove_key
_encode_pfk_params_public
_encode_pte_flags
_end_transaction
_eraseGroup
_err_pagein
_err_revoke
_errordr
_esp6_output
_esp_3des_blockdecrypt
_esp_3des_blockencrypt
_esp_algorithm_lookup
_esp_cbc_mature
_esp_chachapoly_decrypt_finalize
_esp_chachapoly_encrypt_finalize
_esp_chachapoly_ivlen
_esp_chachapoly_mature
_esp_common_ivlen
_esp_des_blockdecrypt
_esp_descbc_ivlen
_esp_descbc_mature
_esp_gcm_decrypt_finalize
_esp_gcm_encrypt_finalize
_esp_gcm_ivlen
_esp_gcm_mature
_esp_init
_estimate_number_of_extents
_ether_check_multi
_ether_del_proto
_ether_frameout_extended
_ether_inet6_input
_ether_inet6_pre_output
_ether_inet6_prmod_ioctl
_ether_inet6_resolve_multi
_ether_inet_input
_ether_inet_pre_output
_ether_inet_resolve_multi
_event_getlock
_eventhandler_lists_ctxt_destroy
_ever_cloned_bit_is_ok
_evict_mapping_key_compare
_evict_mapping_key_compare_0
_evict_mapping_key_compare_1
_exc_server_routine
_exception_init
_exception_raise
_exec_add_user_string
_exec_save_path
_exec_spawnattr_getmacpolicyinfo
_exp
_expandBuffers
_experiment_factor_int_handler
_experiment_factor_long_handler
_experiment_factor_long_handler_0
_experiment_factor_uint_handler
_experiment_factor_ulong_handler
_experiment_factor_ulong_handler_0
_extensions_init
_extensions_iterate_matching
_extensions_notify_create
_extent_calc_blocks_in_range
_extent_evict_scanner
_extent_list_key_val_snprintf
_extent_list_key_val_snprintf_0
_extent_refcount_fix
_extent_remover_callback
_extent_verify_in_range
_external_module_resources
_extract_fsize_and_uid_from_purgeable_name
_faccessat
_fake_mount_keybag_helper
_falloc_guarded
_fastlane_sc_to_dscp
_fastsim_is_enabled
_fatfile_getarch
_fatfile_validate_fatarches
_fcHfFIGhsx
_fchflags
_fchmod
_fchmod1
_fchmod_extended
_fchmodat
_fchown
_fchownat
_fcontract
_fd9eLZ4
_fd_pcb_tree_RB_FIND
_fd_pcb_tree_RB_INSERT
_fd_pcb_tree_RB_NFIND
_fdiff
_fe_add
_fe_frombytes
_fe_invert
_fe_isnegative
_fe_isnonzero
_fe_mul
_fe_neg
_fe_pow22523
_fe_sq
_fe_sq2
_fe_sub
_fe_tobytes
_fetch_particular_snap_extent
_fetch_uncompressed_data
_feth_buflet_size_sysctl
_feth_clone_destroy
_feth_config
_feth_fake_llink_cnt_sysctl
_feth_fake_qset_cnt_sysctl
_feth_fake_tx_drops_sysctl
_feth_if_adv_interval_sysctl
_feth_if_free
_feth_link_layer_aggregation_factor_sysctl
_feth_max_mtu_sysctl
_feth_netif_prepare
_feth_output
_feth_trailer_length_sysctl
_feth_tx_headroom_sysctl
_feth_user_access_sysctl
_fexpand
_fext2brange_cut
_fext2cluster
_fext_assert_fext
_fext_blockat
_fext_cloner
_fext_collector
_fext_collector_cleanup
_fext_collector_reset
_fext_cryptoid_at
_fext_cut
_fext_get_crypto_id
_fext_iterator_ended
_fext_iterator_next
_fext_iterator_peek
_fext_lend
_fext_offat
_fext_pend
_fext_riterator_next
_fext_riterator_peek
_fext_sanitize
_fext_set_crypto_id_for_new_data
_fext_slide
_fext_tree_insert
_fext_tree_insert_with_tree
_fext_tree_iterate_fexts
_fext_tree_iterate_fexts_with_flags
_fext_tree_key_cmp
_fext_tree_key_cmp_0
_fext_tree_key_cmp_1
_fext_tree_key_val_snprintf
_fext_tree_lookup
_fext_tree_remove
_fext_tree_update
_ffsbit
_ffsctl
_fg_get_data_volatile
_fg_get_vnode
_fg_removeuipc
_fg_sendable
_fg_set_data
_fifo_charcount
_fifo_close_internal
_fifo_pathconf
_fifo_read
_fifo_write
_file_attribute_exist
_file_check_library_validation(proc *,fileglob *,long long,long long,ulong)
_file_check_mmap(ucred *,fileglob *,label *,int,int,ulong long,int *)
_file_has_extents
_file_has_stream
_file_ioctl
_file_is_cloned_or_in_snapshot
_file_type_to_dirent_type
_file_unlinked
_filecache_init
_filecache_notify_create
_fileport_no_senders
_fill32_nt
_fillPage
_fill_channelinfo
_fill_kqueueinfo
_fill_pseminfo
_fill_pshminfo
_fill_task_billed_usage
_fill_vnodeinfo
_filt_bad_event
_filt_bad_process
_filt_bad_touch
_filt_bpfdetach
_filt_bpfprocess
_filt_bpftouch
_filt_fsattach
_filt_fsdetach
_filt_fsdetach_0
_filt_fsdetach_1
_filt_fsevent_detach
_filt_fstouch
_filt_fstouch_0
_filt_machport_kqueue_has_turnstile
_filt_memorystatus
_filt_memorystatusattach
_filt_memorystatustouch
_filt_pipenotsup
_filt_pipenotsupprocess
_filt_pipenotsuptouch
_filt_piperead
_filt_pipereadprocess
_filt_pipereadtouch
_filt_pipewrite
_filt_pipewriteprocess
_filt_pipewritetouch
_filt_procprocess
_filt_signal
_filt_signalprocess
_filt_signaltouch
_filt_sockev_common
_filt_soread_common
_filt_wldetach_sync_ipc
_filt_wlvalidate_kev_flags
_findLockerForRequest
_findOpenStatsID(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_findSlot
_find_adjacent_snapshot
_find_and_destroy_orphaned_snapshots
_find_code_signature
_find_digest
_find_digestOID_for_signingOID
_find_dir_iterator
_find_first_overlapping_phys_extent
_find_lock_group_data
_find_xattr_io_context
_finish_end_thread
_finish_end_transaction
_fips_allowed
_fips_allowed_mode_
_fipspost_get_cpu_key
_fipspost_get_hmac
_fipspost_post_aes_cbc
_fipspost_post_aes_ccm
_fipspost_post_aes_cmac
_fipspost_post_aes_ecb
_fipspost_post_aes_gcm
_fipspost_post_aes_xts
_fipspost_post_drbg_ctr
_fipspost_post_drbg_hmac
_fipspost_post_ecdh
_fipspost_post_ecdsa
_fipspost_post_ecdsa_sign
_fipspost_post_ecdsa_verify
_fipspost_post_hkdf
_fipspost_post_hmac
_fipspost_post_indicator
_fipspost_post_integrity
_fipspost_post_kdf_ctr
_fipspost_post_pbkdf
_fipspost_post_rsa_sig
_fipspost_post_rsa_sign
_fipspost_post_rsa_verify
_fipspost_post_tdes_ecb
_firehose_buffer_create
_firehose_buffer_ring_enqueue
_firehose_buffer_stream_chunk_install
_firehose_buffer_tracepoint_reserve_slow
_firehose_buffer_tracepoint_reserve_slow.cold.1
_firstc
_firstseg
_firstsegfromheader
_fixup_hardlinks
_fixup_ino_with_sibling
_fixup_thread_wrapper
_fletcher64
_fletcher64_set_cksum
_fletcher64_verify_cksum
_flow_divert_append_target_endpoint_tlv
_flow_divert_close
_flow_divert_connect_out
_flow_divert_ctloutput
_flow_divert_detach
_flow_divert_find_proc_by_uuid_callout
_flow_divert_get_buffered_target_address
_flow_divert_implicit_data_out
_flow_divert_init
_flow_divert_kctl_rcvd
_flow_divert_packet_append_tlv
_flow_divert_packet_compute_hmac
_flow_divert_packet_init
_flow_divert_pcb_init
_flow_divert_preconnect
_flow_divert_send_close_if_needed
_flow_divert_send_packet
_flow_divert_set_local_endpoint
_flow_divert_shutdown
_flow_divert_token_set
_flow_entry_id_tree_RB_FIND
_flow_entry_id_tree_RB_INSERT
_flow_entry_id_tree_RB_INSERT_COLOR
_flow_entry_id_tree_RB_MINMAX
_flow_entry_id_tree_RB_NEXT
_flow_entry_id_tree_RB_NFIND
_flow_entry_id_tree_RB_PREV
_flow_entry_id_tree_RB_REMOVE
_flow_entry_id_tree_RB_REMOVE_COLOR
_flow_entry_id_tree_RB_SETCOLOR
_flow_entry_id_tree_RB_SETPARENT
_flow_entry_stats_get
_flow_fini
_flow_mgr_find_conflicting_fe
_flow_mgr_fini
_flow_mgr_flow_hash_mask_add
_flow_mgr_flow_hash_mask_del
_flow_mgr_foreach_flow
_flow_mgr_get_fe_by_uuid_rlock
_flow_mgr_get_frb_by_addr
_flow_mgr_get_frib_by_uuid
_flow_mgr_tree_RB_FIND
_flow_mgr_tree_RB_INSERT
_flow_mgr_tree_RB_INSERT_COLOR
_flow_mgr_tree_RB_MINMAX
_flow_mgr_tree_RB_NEXT
_flow_mgr_tree_RB_NFIND
_flow_mgr_tree_RB_PREV
_flow_mgr_tree_RB_REMOVE
_flow_mgr_tree_RB_REMOVE_COLOR
_flow_mgr_tree_RB_SETCOLOR
_flow_mgr_tree_RB_SETPARENT
_flow_owner_activate_nexus_port
_flow_owner_bucket_activate_nx_port_common
_flow_owner_destroy_entry
_flow_owner_flowadv_index_free
_flow_owner_tree_RB_FIND
_flow_owner_tree_RB_INSERT
_flow_owner_tree_RB_NFIND
_flow_route_fini_0
_flow_route_fini_0_0
_flow_route_id_tree_RB_FIND
_flow_route_id_tree_RB_INSERT
_flow_route_id_tree_RB_NFIND
_flow_route_laddr_validate
_flow_route_tree_RB_FIND
_flow_route_tree_RB_INSERT
_flow_route_tree_RB_NFIND
_flow_track_stats
_flow_track_tcp_want_abort
_flowadv_add
_flowadv_add_entry
_flowadv_alloc_entry
_flowadv_thread_func
_flushPeerQueues(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_flushQueues(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_flush_dirty_data
_flush_mmu_tlb_region
_fma
_fmul
_fmul_121666
_fo_close
_formatStorage
_fourk_pager_data_initialize
_fourk_pager_data_initialize_0
_fourk_pager_data_return
_fourk_pager_synchronize
_fq_alloc
_fq_codel_init
_fq_destroy
_fq_if_is_flow_heavy
_fq_if_purge_classq
_fq_if_stat_sc
_fragmentation_histogram_fill
_frandom
_free_all_iterators
_free_allocated_snapshot_extents
_free_attr_blks
_free_crypto_entry
_free_ekwk
_free_extent_tree_key_cmp
_free_fext_iterator
_free_fext_riterator
_free_filter_context
_free_iterator_state_callback
_free_linkids
_free_lock
_free_old_stuff
_free_old_xattr
_free_recursive_lock
_free_rwlock
_free_scalable_key
_free_space
_free_tmp_ino
_free_xattr_tmp_ino
_freespace_mb
_fs_add_folder_to_shadow_root
_fs_add_symlink_to_shadow_root
_fs_buffer_cache_gc_register
_fs_buffer_cache_gc_unregister
_fs_calc_bootcache_blocks_in_range
_fs_calculate_dir_size
_fs_calculate_snapshot_range_space_usage
_fs_can_manipulate_snapshots_extents
_fs_count_freeable_blocks_in_dstream
_fs_create_dstream
_fs_delete_clone_superblock
_fs_delete_inode_with_name
_fs_delete_inode_with_xid
_fs_delete_snapshot_metadata_tree
_fs_delete_supplemental_tree
_fs_destroy_shadow_fs_root_tree
_fs_dstream_get_crypto_id_for_new_data
_fs_evict_range
_fs_evict_range_internal
_fs_evict_range_snapshot_callback
_fs_get_clone_apfs
_fs_get_dstream
_fs_get_inode_with_hint
_fs_get_inum_for_name
_fs_get_snap_meta
_fs_get_xattr_dstream
_fs_get_xattr_in_snap
_fs_init_bootcache_inodes_dstreams_info
_fs_insert_fext_record
_fs_insert_snapshot_metadata
_fs_insert_snapshot_metadata_ext
_fs_is_content_protected
_fs_is_fully_unencrypted
_fs_iterate_dir
_fs_iterate_snapshots
_fs_lookup_name_and_hash
_fs_lookup_name_with_parent_id
_fs_lookup_root_snapshot_xid
_fs_lookup_snapshot_metadata_by_name
_fs_lookup_snapshot_metadata_by_name_and_return_name
_fs_lookup_snapshot_metadata_by_xid
_fs_lookup_snapshot_metadata_by_xid_and_return_name
_fs_lookup_snapshot_metadata_ext
_fs_lookup_snapshot_metadata_ext_by_uuid
_fs_lookup_snapshot_name
_fs_make_phys_range_writable
_fs_map_file_offset
_fs_map_file_offset_ext
_fs_obj_clone
_fs_obj_clone_name_checked
_fs_obj_create
_fs_obj_create_do
_fs_obj_create_name_checked
_fs_obj_create_prepare_and_lock
_fs_obj_create_unlock
_fs_obj_delete
_fs_private_add_tx_active
_fs_private_get_dummy_lock_acquired
_fs_private_get_tx_active
_fs_private_set_dummy_lock_acquired
_fs_promote_dstream
_fs_promote_dstream_snapshot_callback
_fs_promote_to_soft_block_out_range
_fs_recycle_inode_nstreams
_fs_remove_all_xattrs
_fs_remove_snapshot_metadata
_fs_remove_xattr_with_nstream_inode
_fs_rename_snapshot
_fs_reset_dstream
_fs_sb_dirty
_fs_setup_shadow_fs_root_tree
_fs_snapshot
_fs_snapshot_is_reserved_name
_fs_snapshot_tidemark
_fs_swap_dirs
_fs_truncate
_fs_tx_calc_max_data_blocks
_fs_tx_can_log
_fs_tx_enterx
_fs_tx_freeze
_fs_tx_leave_ext
_fs_tx_thaw
_fs_update_prev_fsize
_fs_update_snap_vol_carefully
_fs_update_unwritten_extent_record
_fs_update_xattr_dstream
_fs_verify_bootcache_defrag
_fsetattrlist
_fseventsopen
_fseventswrite
_fsinfo_cprotect_count_callback
_fsinfo_dir_valence_callback
_fsinfo_dir_valence_cb
_fsinfo_file_extent_count_callback
_fsinfo_file_extent_size_catalog_callback
_fsinfo_file_extent_size_cb
_fsinfo_file_extent_size_overflow_callback
_fsinfo_file_size_callback
_fsinfo_file_size_cb
_fsinfo_filename_size_cb
_fsinfo_free_extents_callback
_fsinfo_free_extents_cb
_fsinfo_name_size_callback
_fsinfo_protection_class_cb
_fsinfo_symlink_size_callback
_fsinfo_symlink_size_cb
_fsinfo_xattr_size_callback
_fsinfo_xattr_size_cb
_fsquare_times
_fstatat
_fstatat64
_fsum
_fsw_detach_barrier_add
_fsw_dp_uninit
_fsw_ethernet_setup
_fsw_host_sendup
_fsw_ip_frag_reass_v4
_fsw_ip_reass_sysctl
_fsw_ip_setup
_fsw_ip_setup_0
_fsw_netif_port_teardown
_fusion_mt_compare
_fusion_mt_count_rc_blocks
_fusion_mt_counts
_fusion_mt_create
_fusion_mt_demote_extent
_fusion_mt_elevator_get_dirty_extent
_fusion_mt_elevator_get_dirty_extent_int
_fusion_mt_elevator_get_mapped_extent
_fusion_mt_elevator_unmap_mapped_extent
_fusion_mt_er_get_extent_mappings
_fusion_mt_er_remove_range
_fusion_mt_er_verify_extent_mappings
_fusion_mt_evict
_fusion_mt_find_extent_mapping
_fusion_mt_free_ssd_space
_fusion_mt_get_first_nonmapped_region
_fusion_mt_get_mapped_extent
_fusion_mt_get_tree
_fusion_mt_get_tree_READ
_fusion_mt_get_tree_WRITE
_fusion_mt_insert
_fusion_mt_insert_int
_fusion_mt_insert_put
_fusion_mt_is_extent_outside_wbc
_fusion_mt_key_cmp
_fusion_mt_key_val_snprintf
_fusion_mt_list
_fusion_mt_range_has_rc_entries
_fusion_mt_read_extent
_fusion_mt_release_tree_WRITE
_fusion_mt_remove
_fusion_mt_remove_range
_fusion_mt_remove_range_deallocate_rc
_fusion_mt_remove_range_insert_tail
_fusion_mt_repopulate_rev
_fusion_mt_repopulate_rev_int
_fusion_mt_shutdown
_fusion_mt_stats
_fusion_mt_validate
_futimes
_fuword
_fuword_0
_gate_already_owned_panic
_gate_destroy_owned_panic
_gate_destroy_panic
_gate_destroy_waiter_panic
_gate_free_panic
_gate_not_closed_panic
_gate_not_owned_panic
_gate_too_many_refs_panic
_gate_verify_destroy_panic
_gate_verify_tag_panic
_gather_populate_corpse_crashinfo
_gbitmap_create
_gbitmap_delete
_gbitmap_find_first
_gbitmap_get
_gbitmap_get_a_bit
_gbitmap_get_block
_gbitmap_get_tree
_gbitmap_init
_gbitmap_init_phys
_gbitmap_key_compare
_gbitmap_key_compare_0
_gbitmap_key_compare_1
_gbitmap_key_compare_2
_gbitmap_key_compare_3
_gbitmap_modify_range
_gbitmap_preallocate
_gbitmap_reap
_gbitmap_set_a_bit
_gbitmap_tree_key_val_snprintf
_gc_putc_normal
_gcmDecrypt
_gcmEncrypt
_gcm_ghash
_gcm_gmult
_gcm_init
_ge_add
_ge_cmov
_ge_frombytes_negate_vartime
_ge_madd
_ge_p1p1_to_p2
_ge_p1p1_to_p3
_ge_p2_dbl
_ge_p3_0
_ge_p3_dbl
_ge_p3_to_cached
_ge_p3_to_p2
_ge_p3_tobytes
_ge_p3_tobytes_0
_ge_scalarmult_base
_ge_scalarmult_base_0
_ge_scalarmult_base_1
_ge_scalarmult_base_10
_ge_scalarmult_base_11
_ge_scalarmult_base_12
_ge_scalarmult_base_13
_ge_scalarmult_base_14
_ge_scalarmult_base_15
_ge_scalarmult_base_16
_ge_scalarmult_base_17
_ge_scalarmult_base_18
_ge_scalarmult_base_19
_ge_scalarmult_base_2
_ge_scalarmult_base_20
_ge_scalarmult_base_21
_ge_scalarmult_base_22
_ge_scalarmult_base_23
_ge_scalarmult_base_24
_ge_scalarmult_base_3
_ge_scalarmult_base_4
_ge_scalarmult_base_5
_ge_scalarmult_base_6
_ge_scalarmult_base_7
_ge_scalarmult_base_8
_ge_scalarmult_base_9
_ge_scalarmult_base_internal
_ge_scalarmult_base_masked
_ge_slide
_ge_sub
_gen_ipc_header
_generate
_generateNonce
_generatePeerDatabase(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_generatePeerInfoForPeer(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_generate_0
_generate_2
_getBytes
_getCapacity
_getCompressorFlagsForType(int,CompressionScheme *,ChunkingScheme *,bool)
_getCopiesPerUnit
_getDeviceProperty
_getFixedValue
_getInterests(OSDictionary *,OSArray **,OSArray **,OSArray **)
_getLockerInternal
_getLockersFromStorage
_getNANPublisherInfo(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_getNANServiceUserInfo(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_getPacket(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_getPeerStats(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_getRTPPointer
_getRuntimePropertyName
_getRuntimePropertyType
_getSystemUptimeS
_get_aks_log_pid
_get_apfs_volume_role_flags_for_device
_get_art_thread_call(void *,void *)
_get_btree_nodesize
_get_clone_info
_get_compressed_dirstats_total_size
_get_cp_class_for_crypto_id
_get_crypto_id_cb
_get_crypto_state_for_extent
_get_crypto_state_for_id
_get_current_unique_pid
_get_decompression_flags_chunked
_get_dir_size
_get_dir_size_base
_get_dstats
_get_dstream_id_refcnt
_get_entitlement_dictionary
_get_fext_crypto_logic
_get_fext_for_xattr_io
_get_file_id_by_doc_id
_get_fpscr
_get_free_extents_info_from_spaceman
_get_fse_info
_get_inum_from_sibling_map
_get_io_info
_get_isakmp_natt_trunc_len
_get_lifs_mount_from_node
_get_lifs_port
_get_local_signing_public_key
_get_more_bits
_get_new_crypto_id_if_needed
_get_next_sibling
_get_next_synthetic_apfs_obj_id
_get_nlink_for_dir
_get_padding_amount_for_dstream
_get_padding_for_volume
_get_platform_cdhash
_get_platform_proc_stuff
_get_primary_ifscope
_get_proto_trunc_len
_get_purgeable_dir_size
_get_purgeable_flags_from_drec
_get_purgeable_flags_from_ino
_get_range_bounds
_get_root_snapshot_name_from_chosen
_get_rsrcfork
_get_sched_statistics
_get_session_uid
_get_sockev_state
_get_task_map
_get_task_memory_region_count
_get_timestamp
_get_two_blocks_entropy
_get_uncompressed_size_and_nchildren
_get_unwrapped_ekwk_snap
_get_userclient_pid
_get_vol_crypto
_get_vol_crypto_check
_get_volume_fext_tree
_get_wrapped_ek_snap
_get_wrapped_ekwk_snap
_get_xattr_context
_get_xattr_size_info
_get_zone_map_size
_getbsdattr
_getcommandfromheader
_getdirentries64
_getdirentries_callback
_getentriesattr_callback
_geteuid
_getfirstlink
_getfsstat
_getfsstat64
_getgid
_getgroups
_getkey
_getlastaddr
_getmaxinlineattrsize
_getnodecount
_getpath_with_mount
_getpeername
_getpgid
_getpid
_getrdev
_getsectbynamefromheader
_getsectbynamefromseg
_getsectdatafromheader
_getsectoffsetfromheader
_getsegbyname
_getsegbynamefromheader
_getsegdatafromheader
_getsockname
_getsockopt
_gettid
_getuuidfromheader
_gpu_fceiling_cb_register
_gre_input
_groupmember
_grow_data
_guarded_kqueue_np
_gxf_ppl_entry_handler
_halt_all_cpus
_halt_log_enter
_handle_apfs_clear_backingstore
_handle_apfs_set_backingstore
_handle_barrierfsync
_handle_bc_getinodenum
_handle_breakpoint
_handle_cas_bsdflags
_handle_check_mat
_handle_clear_purgeable
_handle_control_fx_defrag_thread
_handle_create_synthetic_folder
_handle_doc_id_to_file_id
_handle_drop_extents_in_snap
_handle_eval_roothash
_handle_firmlink_ctl
_handle_flags
_handle_fp_trap
_handle_freeze
_handle_freeze_thaw_extents
_handle_fullfsync
_handle_get_abs_vol_uuid
_handle_get_apfs_features
_handle_get_auto_mount_uuid
_handle_get_bootinfo
_handle_get_clone_info
_handle_get_container_features
_handle_get_cow_stats
_handle_get_crypto_ids
_handle_get_crypto_key
_handle_get_desired_disk
_handle_get_dev_by_role
_handle_get_dir_size
_handle_get_file_hash_record
_handle_get_free_space_change_thres
_handle_get_fsinfo
_handle_get_fx_defrag_progress
_handle_get_fx_defrag_regions
_handle_get_fx_defrag_stats
_handle_get_internal_flags
_handle_get_low_disk
_handle_get_mount_time
_handle_get_mount_time_0
_handle_get_mount_time_1
_handle_get_near_low_disk
_handle_get_parent_sync_root
_handle_get_purgeable_stats
_handle_get_sync_root_flag
_handle_get_very_low_disk
_handle_get_vol_create_time_64
_handle_get_volume_role
_handle_is_block_shared
_handle_is_sparse
_handle_is_vol_locked
_handle_key_rolling_stat
_handle_make_file_cow_exempt
_handle_make_object_dataless
_handle_mark_purgeable
_handle_mount
_handle_msr_trap
_handle_next_link
_handle_omap_lookup
_handle_omap_track_enable
_handle_omap_track_report
_handle_omap_tree_leaf_extents
_handle_pc_align
_handle_punch_hole
_handle_purge_files
_handle_purge_single_file
_handle_rdadvise
_handle_reallocate_file
_handle_release_preallocated_space
_handle_revoke_children
_handle_rosv_query
_handle_seek_holedata
_handle_set_apfs_defrag
_handle_set_auto_mount_uuid
_handle_set_bootinfo
_handle_set_container_defrag
_handle_set_desired_disk
_handle_set_free_space_change_thres
_handle_set_greedy_mode
_handle_set_iotype
_handle_set_low_disk
_handle_set_near_low_disk
_handle_set_static_content
_handle_set_sync_root_flag
_handle_set_very_low_disk
_handle_share_range
_handle_simd_trap
_handle_snap_make_dataless
_handle_snap_range_private_size
_handle_snap_token
_handle_snapshot_lookup
_handle_sp_align
_handle_stackshot_keychord
_handle_sync_and_freeze
_handle_thaw
_handle_transfer_doc_id
_handle_trim_active_file_internal
_handle_unmount_crypto_hint
_handle_use_xattr_max_embedded_size
_handle_user_trapped_instruction32
_handle_vol_bootable
_handle_volume_class_keybag_op
_handle_volume_status
_handle_wait_for_snapshot_deletion
_handle_wf_trap
_handle_xdstream_obj_id
_hash
_hash_string
_hashinit
_hazard_register_mpsc_queue
_hazard_startup
_hexToString
_hexdump
_hf_delete
_hfc_btree_close
_hfc_btree_create
_hfc_btree_delete
_hfc_btree_delete_record
_hfc_btree_open_ext
_hfc_comparekeys
_hfsUnmount
_hfs_MountHFSPlusVolume
_hfs_ValidateHFSPlusVolumeHeader
_hfs_addhotfile
_hfs_addhotfile_internal
_hfs_attrblksize
_hfs_attrkeycompare
_hfs_bit_count
_hfs_bmap
_hfs_btsync
_hfs_btsync_callback
_hfs_buildattrkey
_hfs_changefs_callback
_hfs_chash_getcnode
_hfs_chash_getvnode
_hfs_chash_rehash
_hfs_chash_set_childlinkbit
_hfs_chash_snoop
_hfs_chashinit
_hfs_chashinit_finish
_hfs_chashremove
_hfs_chashwakeup
_hfs_chmod
_hfs_chown
_hfs_close_jvp
_hfs_cnode_teardown
_hfs_count_overflow_extents
_hfs_currentcnid
_hfs_currentparent
_hfs_early_journal_init
_hfs_end_transaction
_hfs_erase_unused_nodes
_hfs_exchangedata_getxattr
_hfs_exchangedata_setxattr
_hfs_ext_find
_hfs_ext_iter_check_group
_hfs_ext_iter_next_group
_hfs_ext_iter_update
_hfs_ext_replace
_hfs_extendfs
_hfs_fhtovp
_hfs_file_is_compressed
_hfs_filedone
_hfs_find_free_extents
_hfs_find_summary_free
_hfs_first_link
_hfs_flush
_hfs_flush_invalid_ranges
_hfs_flushfiles
_hfs_flushvolumeheader
_hfs_free_locked_internal
_hfs_freeblks
_hfs_freeze
_hfs_freezewrite_callback
_hfs_fsync
_hfs_generate_document_id
_hfs_generate_volume_notifications
_hfs_get_fsinfo
_hfs_get_platform_serial_number
_hfs_getinfo_metadata_blocks
_hfs_getnewvnode
_hfs_getvoluuid
_hfs_getxattr_internal
_hfs_haslinkorigin
_hfs_hides_rsrc
_hfs_hides_xattr
_hfs_hotfile_adjust_blocks
_hfs_hotfile_cur_freeblks
_hfs_hotfile_repin_files
_hfs_incr_gencount
_hfs_init
_hfs_init_summary
_hfs_init_zones
_hfs_insertdirhint
_hfs_invalidate_block_numbers_callback
_hfs_is_backingstore
_hfs_is_ejectable
_hfs_isallocated_internal
_hfs_issue_unmap
_hfs_iterate_media_with_content
_hfs_journal_lock
_hfs_journal_relocate_callback
_hfs_journal_unlock
_hfs_key_roll_check
_hfs_key_roll_ctx_alloc
_hfs_key_roll_ctx_free
_hfs_key_roll_start
_hfs_key_roll_step
_hfs_key_roll_up_to
_hfs_lazy_init_decmpfs_cnode
_hfs_lock
_hfs_lock_global
_hfs_lock_truncate
_hfs_lock_upgrade
_hfs_lockfour
_hfs_lockpair
_hfs_locks_destroy
_hfs_lookup_lastlink
_hfs_lookup_siblinglinks
_hfs_makenode
_hfs_mark_inconsistent
_hfs_metadatazone_init
_hfs_metasync
_hfs_metasync_all
_hfs_mount
_hfs_mount_from_cwd
_hfs_mountfs
_hfs_move_data
_hfs_namecmp
_hfs_owner_rights
_hfs_packattrblk
_hfs_pin_block_range
_hfs_pin_extent_record
_hfs_pin_fs_metadata
_hfs_pin_overflow_extents
_hfs_pin_vnode
_hfs_prepare_fork_for_update
_hfs_prepare_release_storage
_hfs_privatedir_init
_hfs_readdirattr_internal
_hfs_real_user_access
_hfs_reclaim_cnode
_hfs_reclaim_extent
_hfs_reclaim_file
_hfs_recording_init
_hfs_recording_suspend
_hfs_ref_data_vp
_hfs_reldirhint
_hfs_reldirhints
_hfs_release_key_roll_ctx
_hfs_release_reserved
_hfs_release_storage
_hfs_release_summary
_hfs_reload
_hfs_reload_callback
_hfs_relocate
_hfs_relocate_journal_file
_hfs_relorigin
_hfs_relorigins
_hfs_remove_orphans
_hfs_removeallattr
_hfs_removedir
_hfs_removefile
_hfs_removefile_callback
_hfs_removehotfile
_hfs_removexattr_by_id
_hfs_repin_hotfiles
_hfs_rsrc_setsize
_hfs_savelinkorigin
_hfs_scan_blocks
_hfs_scan_range_size
_hfs_set_backingstore
_hfs_set_bsd_flags
_hfs_set_volxattr
_hfs_setencodingbits
_hfs_setxattr_internal
_hfs_should_generate_document_id
_hfs_split_extent
_hfs_start_transaction
_hfs_statfs
_hfs_swap_BTNode
_hfs_swap_HFSPlusBTInternalNode
_hfs_sync
_hfs_sync_callback
_hfs_sync_ejectable
_hfs_sync_metadata
_hfs_syncer
_hfs_syncer_free
_hfs_sysctl
_hfs_systemfile_lock
_hfs_systemfile_unlock
_hfs_thaw
_hfs_touchtimes
_hfs_track_unmap_blocks
_hfs_trim_callback
_hfs_truncate
_hfs_truncate_lock_downgrade
_hfs_truncate_lock_upgrade
_hfs_truncatefs
_hfs_truncatefs_progress
_hfs_try_trunclock
_hfs_ubc_setsize
_hfs_uncompressed_size_of_compressed_file
_hfs_unlink
_hfs_unlock
_hfs_unlock_global
_hfs_unlock_truncate
_hfs_unlockfour
_hfs_unmount
_hfs_update
_hfs_valid_cnode
_hfs_vfs_getattr
_hfs_vfs_ioctl
_hfs_vfs_root
_hfs_vfs_setattr
_hfs_vfs_vget
_hfs_vget
_hfs_vgetrsrc
_hfs_virtualmetafile
_hfs_vnop_allocate
_hfs_vnop_blktooff
_hfs_vnop_blockmap
_hfs_vnop_bwrite
_hfs_vnop_close
_hfs_vnop_exchange
_hfs_vnop_fsync
_hfs_vnop_getattr
_hfs_vnop_getattrlistbulk
_hfs_vnop_getxattr
_hfs_vnop_inactive
_hfs_vnop_ioctl
_hfs_vnop_link
_hfs_vnop_listxattr
_hfs_vnop_lookup
_hfs_vnop_mkdir
_hfs_vnop_mknod
_hfs_vnop_mmap
_hfs_vnop_mnomap
_hfs_vnop_offtoblk
_hfs_vnop_open
_hfs_vnop_pagein
_hfs_vnop_pageout
_hfs_vnop_pathconf
_hfs_vnop_read
_hfs_vnop_readdir
_hfs_vnop_readdirattr
_hfs_vnop_readlink
_hfs_vnop_reclaim
_hfs_vnop_remove
_hfs_vnop_removexattr
_hfs_vnop_rename
_hfs_vnop_renamex
_hfs_vnop_rmdir
_hfs_vnop_setattr
_hfs_vnop_setxattr
_hfs_vnop_strategy
_hfs_vnop_symlink
_hfs_vnop_write
_hfs_volupdate
_hfs_vptofh
_hfs_write_access
_hfs_xattr_fext_find
_hfs_xattr_init
_hfs_xattr_read
_hfs_xattr_write
_hfs_zero_eof_page
_hfsfifo_close
_hfsfifo_read
_hfsfifo_write
_hfsspec_close
_hfsspec_read
_hfsspec_write
_hid_trace
_hmac_md5_vector
_hmac_sha1_vector
_hmac_sha256_vector
_holder_lookup_locked
_hook_cred_check_label_update
_hook_cred_label_associate
_hook_cred_label_update
_hook_file_check_fcntl
_hook_file_check_mmap
_hook_file_check_set
_hook_iokit_check_filter_properties
_hook_iokit_check_get_property
_hook_iokit_check_hid_control
_hook_iokit_check_open
_hook_iokit_check_open_service
_hook_iokit_check_set_properties
_hook_kext_check_load
_hook_kext_check_query
_hook_kext_check_unload
_hook_mount_check_fsctl
_hook_mount_check_mount
_hook_mount_check_remount
_hook_mount_check_snapshot_create
_hook_mount_check_snapshot_delete
_hook_mount_check_snapshot_mount
_hook_mount_check_snapshot_revert
_hook_mount_check_umount
_hook_necp_check_client_action
_hook_necp_check_open
_hook_posixsem_check_create
_hook_posixsem_check_post
_hook_posixsem_check_wait
_hook_posixshm_check_create
_hook_posixshm_check_open
_hook_posixshm_check_unlink
_hook_priv_check
_hook_priv_grant
_hook_proc_check_fork
_hook_proc_check_ledger
_hook_proc_check_map_anon
_hook_proc_check_memorystatus_control
_hook_proc_check_proc_info
_hook_proc_check_sched
_hook_proc_check_set_cs_info
_hook_proc_check_set_host_exception_port
_hook_proc_check_suspend_resume
_hook_proc_check_syscall_mac
_hook_proc_check_syscall_unix
_hook_proc_notify_exec_complete
_hook_pty_notify_close
_hook_pty_notify_close_0
_hook_skywalk_flow_check_connect
_hook_skywalk_flow_check_listen
_hook_socket_check_connect
_hook_socket_check_create
_hook_socket_check_getsockopt
_hook_socket_check_ioctl
_hook_socket_check_setsockopt
_hook_system_check_acct
_hook_system_check_auditon
_hook_system_check_auditon_0
_hook_system_check_auditon_1
_hook_system_check_auditon_2
_hook_system_check_auditon_3
_hook_system_check_host_priv
_hook_system_check_info
_hook_system_check_nfsd
_hook_system_check_reboot
_hook_system_check_settime
_hook_system_check_swapon
_hook_system_check_swapon_0
_hook_system_check_sysctlbyname
_hook_sysvmsq_check_msqsnd
_hook_sysvmsq_check_msqsnd_0
_hook_sysvmsq_check_msqsnd_1
_hook_sysvmsq_check_msqsnd_2
_hook_sysvmsq_check_msqsnd_3
_hook_sysvmsq_check_msqsnd_4
_hook_sysvmsq_check_msqsnd_5
_hook_sysvsem_check_semop
_hook_sysvsem_check_semop_0
_hook_sysvsem_check_semop_1
_hook_sysvshm_check_shmget
_hook_sysvshm_check_shmget_0
_hook_sysvshm_check_shmget_1
_hook_sysvshm_check_shmget_2
_hook_thread_userret
_hook_vnode_check_access
_hook_vnode_check_chroot
_hook_vnode_check_copyfile
_hook_vnode_check_exchangedata
_hook_vnode_check_fsgetpath
_hook_vnode_check_fsgetpath_0
_hook_vnode_check_fsgetpath_1
_hook_vnode_check_getattr
_hook_vnode_check_getextattr
_hook_vnode_check_ioctl
_hook_vnode_check_listextattr
_hook_vnode_check_lookup_preflight
_hook_vnode_check_open
_hook_vnode_check_rename
_hook_vnode_check_revoke
_hook_vnode_check_searchfs
_hook_vnode_check_setacl
_hook_vnode_check_setattrlist
_hook_vnode_check_setextattr
_hook_vnode_check_setextattr_0
_hook_vnode_check_setflags
_hook_vnode_check_setmode
_hook_vnode_check_setowner
_hook_vnode_check_setutimes
_hook_vnode_check_stat
_hook_vnode_check_trigger_resolve
_hook_vnode_check_truncate
_hook_vnode_check_uipc_bind
_hook_vnode_check_uipc_connect
_hook_vnode_notify_create
_hook_vnode_notify_deleteextattr
_hook_vnode_notify_deleteextattr_0
_hook_vnode_notify_rename
_host_create_mach_voucher
_host_default_memory_manager
_host_get_boot_info
_host_get_clock_service
_host_get_clock_service_0
_host_get_exception_ports
_host_get_io_master
_host_get_special_port
_host_kernel_version
_host_notify_calendar_change
_host_notify_calendar_set
_host_processor_set_priv
_host_processor_sets
_host_reboot
_host_set_atm_diagnostic_flag
_host_set_exception_ports
_host_set_multiuser_config_flags
_host_statistics64
_host_swap_exception_ports
_hotextents
_hotfiles_collect_callback
_htable_prefix_free
_htable_prefix_free_cb
_hv_vmm_present
_hzto
_iI06b
_icmp6_ctloutput
_icmp6_dgram_ctloutput
_icmp6_dgram_send
_icmp_dgram_attach
_icmp_dgram_ctloutput
_icp_chclass
_icp_clone_ek
_icp_dec_ref
_icp_inc_ref
_icp_lock_inode
_icp_new_crypto
_icp_open
_icp_reclaim
_icp_retain_n
_icp_retain_n_cold
_icp_truncate_allowed
_icp_unretain_n
_ier_alloc_fake_vnode
_ier_blockout_enter
_ier_check_override_extent
_ier_check_override_inode
_ier_clear_override_inode
_ier_cluster_assert
_ier_continue_locked
_ier_continue_metadata_roll
_ier_debug_enter
_ier_debug_leave
_ier_fext_assert
_ier_fext_rollable
_ier_free_fake_vnode
_ier_ierco_destroy
_ier_ierco_xattr_destroy
_ier_ierso_assert
_ier_ierso_finalize
_ier_ierso_update
_ier_ierso_update_tx
_ier_ierto_free
_ier_ierto_new
_ier_inode_unrollable
_ier_load_dedupe_map
_ier_new_def_crypto
_ier_pause
_ier_resume
_ier_roll_all_data
_ier_roll_error_fatal
_ier_roll_volume
_ier_roll_volume_
_ier_round_range
_ier_stat
_ier_stop
_ier_synthetic_ino_new
_ier_thread_exit
_ier_thread_join
_ier_thread_new_crypto
_ier_thread_start
_ier_thread_stop
_ier_thread_wakeup
_ier_xattr_rollable
_ier_yield
_if_add_netagent
_if_add_netagent_locked
_if_check_netagent
_if_clone_lookup
_if_clone_softc_allocate
_if_copy_data_extended
_if_copy_netif_stats
_if_copy_packet_stats
_if_copy_rxpoll_stats
_if_copy_traffic_class
_if_delete_netagent
_if_down
_if_down_all
_if_enable_fsw_transport_netagent_sysctl
_if_functional_type
_if_get_state
_if_low_power_evhdlr_callback
_if_lqm_update
_if_mcasts_update
_if_ports_used_add_inpcb
_if_ports_used_init
_if_ports_used_match_pkt
_if_probe_connectivity
_if_rtmtu
_if_rtproto_del
_if_set_low_power
_if_state_update
_if_up
_if_withname
_ifa_ifwithaddr
_ifa_ifwithaddr_0
_ifa_ifwithaddr_scoped
_ifa_ifwithroute
_ifa_init
_ifaddr_address
_ifaddr_address_family
_ifaddr_dstaddress
_ifaddr_findbestforaddr
_ifaddr_netmask
_ifaddr_withaddr
_ifaddr_withroute
_ifclassq_calc_update_interval
_ifioctl_clat46addr
_ifioctl_ifconf
_ifioctl_nat64prefix
_ifioctl_netsignature
_ifioctl_networkid
_ifioctl_protolist
_ifioctl_qstats
_ifioctllocked
_ifma_remref
_ifma_trace
_ifmaddr_address
_ifmaddr_lladdress
_ifmaddr_reference
_ifmaddr_reference_0
_ifmaddr_reference_1
_ifmaddr_release
_ifnet_add_multicast
_ifnet_add_netagent
_ifnet_add_netagent_0
_ifnet_allocate
_ifnet_allocate_internal
_ifnet_attach_netif_nexus
_ifnet_bandwidths
_ifnet_clear_netagent
_ifnet_datamov_begin
_ifnet_decr_pending_thread_count
_ifnet_detacher_thread_func
_ifnet_disable_output
_ifnet_enqueue_mbuf
_ifnet_enqueue_multi_setup
_ifnet_event
_ifnet_fc_tree_RB_FIND
_ifnet_fc_tree_RB_INSERT
_ifnet_fc_tree_RB_NFIND
_ifnet_filter_update_tso
_ifnet_find_by_name
_ifnet_get_address_list
_ifnet_get_buffer_status
_ifnet_get_delegate
_ifnet_get_keepalive_offload_frames
_ifnet_get_link_mib_data
_ifnet_get_local_ports
_ifnet_get_local_ports_extended
_ifnet_get_log
_ifnet_get_low_power_mode
_ifnet_get_nat64prefix
_ifnet_get_netsignature
_ifnet_get_rcvq_maxlen
_ifnet_get_service_class_sndq_len
_ifnet_get_sndq_len
_ifnet_get_sndq_maxlen
_ifnet_get_tso_mtu
_ifnet_get_unsent_bytes
_ifnet_getset_log
_ifnet_incr_iorefcnt
_ifnet_incr_pending_thread_count
_ifnet_interface_advisory_report
_ifnet_ioctl_async
_ifnet_is_attached
_ifnet_kpi_free
_ifnet_latencies
_ifnet_link_quality
_ifnet_link_status_report
_ifnet_lladdr_copy_bytes_internal
_ifnet_llbroadcast_copy_bytes
_ifnet_llreach_free
_ifnet_llreach_get_defrouter
_ifnet_llreach_ifattach
_ifnet_needs_compat
_ifnet_needs_fsw_transport_netagent
_ifnet_notice_primary_elected
_ifnet_notify_address
_ifnet_output
_ifnet_output_raw
_ifnet_remove_multicast
_ifnet_reset_order
_ifnet_reset_output_handler
_ifnet_reset_start_handler
_ifnet_set_baudrate
_ifnet_set_capabilities_enabled
_ifnet_set_capabilities_supported
_ifnet_set_fastlane_capable
_ifnet_set_input_bandwidths
_ifnet_set_input_latencies
_ifnet_set_interface_state
_ifnet_set_interface_state_0
_ifnet_set_link_mib_data
_ifnet_set_link_quality
_ifnet_set_lladdr_internal
_ifnet_set_log
_ifnet_set_nat64prefix
_ifnet_set_netsignature
_ifnet_set_offload
_ifnet_set_output_handler
_ifnet_set_output_sched_model
_ifnet_set_poll_params
_ifnet_set_promiscuous
_ifnet_set_rcvq_maxlen
_ifnet_set_start_handler
_ifnet_set_tso_mtu
_ifnet_stat
_ifnet_update_rcv
_igmp_v1v2_queue_report
_ikm_body_sig
_ikm_sign
_ilog10
_im6f_graft
_im6o_trace
_im6s_merge
_imageboot_format_is_valid
_img4_chip_custom
_img4_config_dump
_img4_decode_set_root
_img4_firmware_destroy
_img4_firmware_execute
_img4_firmware_init
_img4_firmware_new
_img4_firmware_new_from_vnode_4xnu
_img4_identifier_spec_find
_img4_identifier_spec_iter_next
_img4_image_get_property_bool
_img4_image_get_property_bool_0
_img4_image_get_property_bool_1
_img4_image_get_property_data
_img4_nonce_domain_preroll_nonce
_img4_nonce_domain_roll_nonce
_img4_pmap_align
_img4_pmap_copy_object
_img4_start
_img4_start.cold.3
_img4_version_compare
_img4_version_init
_imo_clone
_imo_trace
_import_iboot_forwarded_roothash
_ims_get_mode
_ims_merge
_in6_addr2scopeid
_in6_addr_is_ours
_in6_addrscope
_in6_aliasreq_32_to_64
_in6_aliasreq_64_to_32
_in6_are_addr_equal_scoped
_in6_are_masked_addr_scope_equal
_in6_are_prefix_equal
_in6_cga_node_lock
_in6_cga_node_unlock
_in6_cga_parameters_prepare
_in6_cgareq_copy_from_user
_in6_clat46_event_enqueue_nwk_wq_entry
_in6_clat46_eventhdlr_callback
_in6_clearscope
_in6_domifattach
_in6_embedscope
_in6_event_enqueue_nwk_wq_entry
_in6_eventhdlr_callback
_in6_getconninfo
_in6_getpeeraddr
_in6_getsockaddr
_in6_getsockaddr_s
_in6_if_up_dad_start
_in6_ifaddr_set_dadprogress
_in6_ifaddr_trace
_in6_iid_from_hw
_in6_iid_mktmp
_in6_inithead
_in6_ip6_to_sockaddr
_in6_len2mask
_in6_lltable_fill_sa_entry
_in6_lltable_match_prefix
_in6_lltattach
_in6_localaddr
_in6_mapped_peeraddr
_in6_mapped_sockaddr
_in6_multi_init
_in6_nigroup
_in6_pcbbind
_in6_pcbconnect
_in6_pcbdisconnect
_in6_pcbladdr
_in6_pcblookup_hash
_in6_pcblookup_hash_exists
_in6_pcblookup_local
_in6_pcbnotify
_in6_pfx_newpersistaddr
_in6_prefixlen2mask
_in6_pseudo
_in6_recoverscope
_in6_rtqdrain
_in6_selecthlim
_in6_selectsrc
_in6_selectsrc_core_ifa
_in6_setmaxmtu
_in6_setrouter
_in6_setscope
_in6_sin6_2_sin
_in6_sin_2_v4mapsin6
_in6_sin_2_v4mapsin6_in_sock
_in6_sockaddr
_in6_sockaddr_s
_in6_src_ioctl
_in6_src_sysctl
_in6_tmpaddrtimer
_in6_to_kamescope
_in6_verify_ifscope
_in6addr_hashval
_in6ctl_associd
_in6ctl_cgastart
_in6ctl_connid
_in6ctl_conninfo
_in6ctl_gifaddr
_in6ctl_gifstat
_in6ctl_llstart
_in6if_do_dad
_in6m_trace
_in6p_findmoptions
_in_addmulti
_in_addword
_in_arpdrain
_in_broadcast
_in_canforward
_in_cksum_hdr_opt
_in_domifattach
_in_getconninfo
_in_getsockaddr_s
_in_ifaddr_init
_in_ifaddr_trace
_in_ifscrub
_in_inithead
_in_lltable_dump_entry
_in_lltable_match_prefix
_in_localaddr
_in_multi_init
_in_pcb_checkstate
_in_pcbconnect
_in_pcbdisconnect
_in_pcbinfo_attach
_in_pcbinfo_detach
_in_pcbinit
_in_pcbinshash
_in_pcblookup_hash
_in_pcblookup_hash_exists
_in_pcblookup_local
_in_pcblookup_local_and_cleanup
_in_pcbnotifyall
_in_pcbrehash
_in_pseudo
_in_pseudo64
_in_rtqdrain
_in_stat_set_activity_bitmap
_inaddr_hashval
_increment_dstream_id_refcnt
_inctl_arpipll
_inctl_associd
_inctl_autoaddr
_inctl_connid
_inctl_conninfo
_inctl_ifaddr
_inctl_ifbrdaddr
_inctl_ifnetmask
_inctl_setrouter
_inet6_cksum
_inet6_cksum_buffer
_inet_arp_init_ifaddr
_inet_aton
_inet_cksum
_inet_cksum_buffer
_inet_ntoa
_inet_ntoa_r
_inferior
_inflate
_inflateBackEnd
_inflateBackInit_
_inflateCopy
_inflateEnd
_inflateGetHeader
_inflateInit_
_inflatePrime
_inflateReset
_inflateSetDictionary
_inflateSync
_inflateSyncPoint
_inflate_fast
_inherit_doc_tombstone
_init
_initKernelAESHW
_initKernelAESHWLSKD
_init_0
_init_1
_init_attrdata_vnode
_init_crc8_ccitt(void)
_init_sin6
_init_statfs
_initgroups
_initializeAppleMobileFileIntegrity(void)
_initializeCoreEntitlementsSupport
_initialize_phys_range_lock_state
_inm_commit
_inm_print
_inm_trace
_ino_cache_ekwk
_ino_get_class_check
_ino_get_class_or_none
_ino_get_ekwk
_ino_get_ekwk_id
_ino_get_rsrc_ekwk
_ino_is_class_v
_ino_is_retainable
_ino_name
_ino_phys_size
_ino_put_ekwk
_ino_put_rsrc_ekwk
_ino_set_class
_ino_swap_ekwk
_ino_test_unwrap
_ino_uncache_ekwk
_ino_xchg_ekwk
_inode_convert_filesec
_inode_get_filesec
_inp_copy_last_owner
_inp_fc_throttle_tcp
_inp_fc_tree_RB_FIND
_inp_fc_tree_RB_INSERT
_inp_fc_tree_RB_INSERT_COLOR
_inp_fc_tree_RB_INSERT_COLOR_0
_inp_fc_tree_RB_MINMAX
_inp_fc_tree_RB_MINMAX_0
_inp_fc_tree_RB_NEXT
_inp_fc_tree_RB_NEXT_0
_inp_fc_tree_RB_NFIND
_inp_fc_tree_RB_REMOVE
_inp_fc_tree_RB_REMOVE_0
_inp_fc_tree_RB_REMOVE_COLOR
_inp_fc_tree_RB_REMOVE_COLOR_0
_inp_fc_tree_RB_SETCOLOR
_inp_fc_tree_RB_SETCOLOR_0
_inp_fc_tree_RB_SETPARENT
_inp_fc_tree_RB_SETPARENT_0
_inp_fc_unthrottle_tcp
_inp_findinpcb_procinfo
_inp_findmoptions
_inp_flowadv
_inp_flush
_inp_get_sndbytes_allunsent
_inp_get_soprocinfo
_inp_incr_sndbytes_total
_inp_incr_sndbytes_unsent
_inp_limit_companion_link
_inp_recover_companion_link
_inp_reset_fc_state
_inp_set_fc_state
_inp_update_necp_policy
_inp_update_necp_want_app_policy
_inp_update_netns_flags
_inp_update_policy
_inpcb_find_anypcb_byaddr
_inpcb_gc_sched
_inpcb_get_if_ports_used
_inpcb_get_ports_used
_inpcb_timer_sched
_inpcb_to_compat
_insert(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_insert_block
_insert_direntry
_insert_direntry_0
_insert_fext
_insert_fext_0
_insert_jobj
_insert_linkid
_insert_phys_extent
_integrity_meta_init_phys
_integrity_meta_obj_init
_intf_event_enqueue_nwk_wq_entry
_invalid
_invalidate_icache64
_invalidate_xattr_extents
_io_array_iterate
_io_dictionary_apply
_io_dictionary_get_value
_io_object_array_contains_string
_io_object_get_boolean
_io_object_get_string_and_length
_io_object_get_uint32
_io_object_retain
_io_object_retain_0
_io_rate_update_register
_io_registry_entry_copy_by_path
_io_string_is_equal
_ioctl(__ifnet *,ulong,void *)
_iofilter_iokit_init
_iokit_add_reference
_iokit_bsd_device_name
_iokit_classname
_iokit_entry_for_bsddev
_iokit_entry_is_instance_of_IODTNVRAM
_iokit_get_property
_iokit_get_property_of_entry_or_ancestor
_iokit_init
_iokit_init.cold.1
_iokit_lookup_connect_port
_iokit_lookup_ident_port
_iokit_lookup_io_object
_iokit_lookup_object_port
_iokit_lookup_uext_object_port
_iokit_make_connect_port
_iokit_make_ident_port
_iokit_make_object_port
_iokit_perform_when_device_attached
_iokit_perform_when_device_attached_0
_iokit_port_for_object
_iokit_registry_entry_get_bsddev
_iokit_remove_connect_reference
_iokit_remove_reference
_iokit_remove_reference_0
_iokit_remove_reference_1
_iokit_remove_reference_2
_iokit_remove_reference_3
_iokit_remove_reference_4
_iokit_remove_reference_5
_iokit_remove_reference_6
_iokit_remove_reference_7
_iokit_switch_object_port
_iomdMapBuf
_iomdUnmapBuf
_iosfc_ref_check_retain
_iosfc_ref_check_retain_0
_iosfc_ref_init_count_internal
_iosfc_ref_panic_overflow
_iosfc_ref_panic_overflow_0
_iosfc_ref_panic_resurrection
_iosfc_ref_panic_resurrection_0
_iosfc_ref_panic_underflow
_iosfc_ref_panic_underflow_0
_iosfc_ref_retain_try_internal
_iosfc_ref_retain_try_internal_0
_ip46_ecn_egress
_ip46_ecn_ingress
_ip64_ecn_egress
_ip64_ecn_ingress
_ip6_delaux
_ip6_ecn_egress
_ip6_ecn_ingress
_ip6_findaux
_ip6_getdstifaddr_info
_ip6_getsrcifaddr_info
_ip6_getstat
_ip6_init_delayed
_ip6_initpktopts
_ip6_input_getdstifscope
_ip6_input_getsrcifscope
_ip6_lasthdr
_ip6_mloopback
_ip6_moptions_init
_ip6_msource_tree_RB_FIND
_ip6_msource_tree_RB_FIND_0
_ip6_msource_tree_RB_INSERT
_ip6_msource_tree_RB_INSERT_0
_ip6_msource_tree_RB_NFIND
_ip6_msource_tree_RB_NFIND_0
_ip6_notify_pmtu
_ip6_optlen
_ip6_output_getdstifscope
_ip6_output_getsrcifscope
_ip6_output_setdstifscope
_ip6_output_setsrcifscope
_ip6_pkt_has_ulp
_ip6_raw_ctloutput
_ip6_setdstifaddr_info
_ip6_setpktopts
_ip6_setsrcifaddr_info
_ip6_unknown_opt
_ip_cksum_hdr_dir
_ip_cksum_hdr_dir_buffer
_ip_dn_init
_ip_ecn_egress
_ip_ecn_ingress
_ip_getdstifaddr_info
_ip_getsrcifaddr_info
_ip_getstat
_ip_moptions_init
_ip_msource_tree_RB_FIND
_ip_msource_tree_RB_INSERT
_ip_msource_tree_RB_NFIND
_ip_multicast_if
_ip_next_mtu
_ip_output_checksum
_ip_output_pf_dn_hook
_ip_setdstifaddr_info
_ip_setsrcifaddr_info
_ipc_clock_init
_ipc_importance_task_is_donor
_ipc_importance_task_is_never_donor
_ipc_importance_thread_call_init
_ipc_kmsg_copyout_size
_ipc_kmsg_enqueue
_ipc_kmsg_enqueue_qos
_ipc_kmsg_get_voucher_port
_ipc_kmsg_init_trailer
_ipc_kmsg_msg_header
_ipc_kmsg_override_qos
_ipc_kmsg_put_to_kernel
_ipc_kobject_get_locked
_ipc_kobject_get_locked_0
_ipc_kobject_get_raw
_ipc_kobject_register_startup
_ipc_kobject_subst_once_no_senders
_ipc_mqueue_peek_locked
_ipc_notify_no_senders
_ipc_notify_port_deleted
_ipc_notify_port_deleted_0
_ipc_notify_port_deleted_1
_ipc_notify_port_deleted_10
_ipc_notify_port_deleted_2
_ipc_notify_port_deleted_3
_ipc_notify_port_deleted_4
_ipc_notify_port_deleted_5
_ipc_notify_port_deleted_6
_ipc_notify_port_deleted_7
_ipc_notify_port_deleted_8
_ipc_notify_port_deleted_9
_ipc_notify_port_destroyed
_ipc_notify_port_destroyed_0
_ipc_object_copyin_type
_ipc_object_deallocate_register_queue
_ipc_object_reference_1
_ipc_object_reference_1_0
_ipc_object_reference_1_1
_ipc_object_reference_1_2
_ipc_object_reference_1_3
_ipc_object_release
_ipc_object_release_0
_ipc_object_release_live
_ipc_object_validate_preflight_panic
_ipc_port_adjust_special_reply_port
_ipc_port_alloc_name
_ipc_port_copyout_send
_ipc_port_has_prdrequest
_ipc_port_make_send_locked
_ipc_port_make_sonce_locked
_ipc_port_release_send
_ipc_port_release_send_0
_ipc_port_release_send_1
_ipc_processor_init
_ipc_pset_alloc_name
_ipc_pset_init
_ipc_pset_prepost
_ipc_service_port_label_get_info
_ipc_space_lock_sleep
_ipc_space_rand_freelist
_ipc_space_retire_table
_ipc_space_set_at_max_limit
_ipc_table_init
_ipc_thread_init_exc_actions
_ipc_voucher_attr_control_reference
_ipc_voucher_init
_ipc_voucher_reference
_ipc_voucher_reference_0
_ipcperm
_ipf_add
_ipf_get_inject_filter
_ipf_inject_input
_ipf_ref
_ipf_unref
_ipsec4_getpolicybyinterface
_ipsec4_in_reject_so
_ipsec4_in_reject_so_0
_ipsec4_logpacketstr
_ipsec4_set_policy
_ipsec6_getpolicybyinterface
_ipsec6_logpacketstr
_ipsec6_output_trans_internal
_ipsec6_set_policy
_ipsec6_setspidx_in6pcb
_ipsec_addhist
_ipsec_clearhist
_ipsec_ctl_setup
_ipsec_delaux
_ipsec_demux
_ipsec_fill_offload_frame
_ipsec_get_reqlevel
_ipsec_gethist
_ipsec_getsocket
_ipsec_hdrsiz_tcp
_ipsec_interface_isvalid
_ipsec_ioctl
_ipsec_kpipe_ring_fini
_ipsec_kpipe_ring_init
_ipsec_logsastr
_ipsec_netif_prepare
_ipsec_netif_ring_fini
_ipsec_netif_ring_init
_ipsec_netif_tx_doorbell
_ipsec_nexus_connected
_ipsec_nexus_detach
_ipsec_nexus_pre_disconnect
_ipsec_register_control
_ipsec_save_wake_packet
_ipsec_set_ipoa_for_interface
_ipsec_set_ipoa_for_interface_0
_ipsec_set_pkthdr_for_interface
_ipsec_sleep_wake_handler
_ipsec_start
_ipsec_wait_data_move_drain
_iptap_getdrvspec
_iptap_init
_iptap_ipf_input
_iptap_ipf_output
_iptime
_isAirDropRegistered(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_isCopyValid
_isDebuggingAllowed(void)
_isDevelopmentFused
_isDeviceInRestoreMode
_isSingleUser
_is_block_uninitialized
_is_cmsg_valid
_is_dataless_directory
_is_file_clean
_is_ier_operation_allowed
_is_ier_operation_allowed_0
_is_io_async_method_scalarI_scalarO
_is_io_async_method_scalarI_structureI
_is_io_async_method_scalarI_structureO
_is_io_async_method_structureI_structureO
_is_io_catalog_get_data
_is_io_catalog_get_gen_count
_is_io_catalog_module_loaded
_is_io_catalog_reset
_is_io_connect_get_service
_is_io_connect_map_memory
_is_io_connect_method_scalarI_scalarO
_is_io_connect_method_scalarI_structureI
_is_io_connect_method_scalarI_structureO
_is_io_connect_method_structureI_structureO
_is_io_device_tree_entry_exists_with_name
_is_io_iterator_is_valid
_is_io_iterator_next
_is_io_iterator_reset
_is_io_object_conforms_to
_is_io_object_get_class
_is_io_object_get_retain_count
_is_io_object_get_superclass
_is_io_registry_entry_from_path
_is_io_registry_entry_get_location_in_plane
_is_io_registry_entry_get_name
_is_io_registry_entry_get_name_in_plane
_is_io_registry_entry_get_path
_is_io_registry_entry_get_property_bytes
_is_io_registry_entry_get_registry_entry_id
_is_io_registry_entry_in_plane
_is_io_registry_get_root_entry
_is_io_registry_iterator_enter_entry
_is_io_registry_iterator_exit_entry
_is_io_service_acknowledge_notification
_is_io_service_add_interest_notification
_is_io_service_add_interest_notification_64
_is_io_service_add_notification_bin
_is_io_service_add_notification_bin_64
_is_io_service_get_authorization_id
_is_io_service_get_busy_state
_is_io_service_get_state
_is_io_service_request_probe
_is_io_service_set_authorization_id
_is_io_service_wait_quiet
_is_localaddr
_is_machport_proc
_is_non_iterative_extent_manipulation_faster
_is_operation_allowed
_is_package_name
_is_partial_clone_cb
_is_proc_binary_in_any_trust_cache
_is_release_type
_is_retainable
_isargsep
_isb_retain_id
_isb_unretain_id
_isdisk
_israngesep
_issue_tlbi
_iterate_ino_crypto_state
_iterate_jobjs
_iterate_jobjs_with_hint
_iterate_jobjs_with_hint_and_snap
_iterate_process_ancestors
_iterate_raw_jobjs_with_hint
_iterate_sandbox_state_flags
_iterate_state_variable_names
_iterative_fext_cloner
_iteratively_remove_extents_of_file
_iteratively_remove_purgeable_drec
_itimerfix
_itoa
_jdev_fext_read_data
_jdev_fext_write_data
_jdev_iodone
_jfs_get_tree_in_snap
_jobj_make_file_extent_record
_jobj_release
_jobj_validate_key_val
_journal_allocate_transaction
_journal_binfo_cmp
_journal_close
_journal_create
_journal_end_transaction
_journal_init
_journal_is_clean
_journal_kill_block
_journal_modify_block_end
_journal_modify_block_start
_journal_open
_journal_open_cb
_journal_relocate
_journal_request_immediate_flush
_journal_start_transaction
_journal_trim_add_extent
_journal_trim_extent_overlap
_journal_trim_remove_extent
_kalloc_owned_map
_kalloc_type_cmp
_kalloc_type_cmp_var
_kalloc_type_handle_data_view_var
_kalloc_type_handle_parray_var
_kalloc_type_views_init
_kalloc_zones_init
_kauth_acl_alloc
_kauth_acl_evaluate
_kauth_authorize_action
_kauth_authorize_generic
_kauth_authorize_generic_callback
_kauth_authorize_process
_kauth_authorize_process_callback
_kauth_cred_copy
_kauth_cred_getgroups
_kauth_cred_getguid
_kauth_cred_getntsid
_kauth_cred_gid_subset
_kauth_cred_guid2gid
_kauth_cred_guid2uid
_kauth_cred_init
_kauth_cred_ismember_gid
_kauth_cred_ismember_guid
_kauth_cred_label_update
_kauth_cred_label_update_0
_kauth_cred_panic_over_released
_kauth_cred_panic_over_retain
_kauth_cred_require
_kauth_cred_rw_verify_panic
_kauth_cred_setauditinfo
_kauth_cred_setresgid
_kauth_cred_setresuid
_kauth_cred_setsvuidgid
_kauth_cred_setuidgid
_kauth_cred_thread_update
_kauth_cred_uid2guid
_kauth_cred_uid2guid_0
_kauth_cred_verify_panic
_kauth_filesec_acl_setendian
_kauth_filesec_alloc
_kauth_getrgid
_kauth_getuid
_kauth_guid_equal
_kauth_init
_kauth_ntsid_equal
_kauth_proc_label_update
_kauth_proc_label_update_0
_kauth_proc_label_update_execve
_kauth_wellknown_guid
_kcdata_add_type_definition
_kcdata_add_uint64_with_description
_kcdata_bzero
_kcdata_compress_zalloc
_kcdata_endalloc
_kcdata_estimate_required_buffer_size
_kcdata_get_memory_addr_for_array
_kcdata_memcpy
_kcdata_memory_static_init
_kcdata_undo_add_container_begin
_kcdata_write_buffer_end
_kctl_fill_socketinfo
_kctl_getstat
_kdb_log
_kdb_log_0
_kdb_printf
_kdebug_commpage_state
_kdebug_debugid_enabled
_kdebug_debugid_explicitly_enabled
_kdebug_lookup
_kdebug_register_coproc
_kdebug_vnode
_kdp_clock_is_locked
_kdp_coalition_get_leader
_kdp_lck_mtx_lock_spin_is_acquired
_kdp_lck_rw_lock_is_acquired_exclusive
_kdp_lck_spin_is_acquired
_kdp_lck_ticket_is_acquired
_kdp_machine_phys_read
_kdp_machine_vm_read
_kdp_machine_vm_write
_kdp_pthread_get_thread_kwq
_kdp_register_callout
_kdp_serialize_packet
_kdp_snapshot_preflight
_kdp_unserialize_packet
_kdp_vtophys
_kern_asl_msg
_kern_channel_available_slot_count
_kern_channel_increment_ring_net_stats
_kern_channel_notify
_kern_channel_slot_attach_packet
_kern_channel_slot_detach_packet
_kern_channel_slot_get_packet
_kern_channel_tx_refill
_kern_channel_tx_refill_canblock
_kern_control_init
_kern_coredump_log
_kern_event_init
_kern_feature_override
_kern_file_mount
_kern_get_extended_state
_kern_invalid
_kern_nexus_attr_create
_kern_nexus_attr_get
_kern_nexus_attr_set
_kern_nexus_get_default_domain_provider
_kern_nexus_get_netif_instance
_kern_nexus_get_pbufpool
_kern_nexus_netif_llink_remove
_kern_nexus_register_netagents
_kern_nexus_register_netagents_0
_kern_nexus_register_netagents_1
_kern_packet_get_buflet_count
_kern_packet_get_euuid
_kern_packet_get_expire_time
_kern_packet_get_flow_uuid
_kern_packet_get_inet_checksum
_kern_packet_get_next
_kern_packet_get_policy_id
_kern_packet_get_service_class
_kern_packet_get_timestamp
_kern_packet_get_trace_id
_kern_packet_get_traffic_class
_kern_packet_get_tx_completion_status
_kern_packet_get_vlan_tag
_kern_packet_is_high_priority
_kern_packet_set_expire_time
_kern_packet_set_headroom
_kern_packet_set_headroom_0
_kern_packet_set_link_header_length
_kern_packet_set_service_class
_kern_packet_set_traffic_class
_kern_packet_set_tx_completion_status
_kern_packet_set_vlan_tag
_kern_pbufpool_alloc
_kern_pbufpool_alloc_nosleep
_kern_pbufpool_destroy
_kern_pbufpool_free_chain
_kern_pbufpool_get_context
_kern_pbufpool_get_memory_info
_kern_perform_operation
_kern_stack_snapshot_with_reason
_kernelMapOOLFile
_kernelUnmapOOLFile
_kernel_debug_register_callback
_kernel_debug_string_early
_kernel_get_special_port
_kernel_set_special_port
_kernel_startup_bootstrap
_kernel_startup_tunable_dt_init
_kernel_startup_tunable_init
_kernel_sysctl
_kernel_upl_abort_range
_kernel_upl_commit
_kernel_upl_commit_range
_kev_detach
_kev_msg_post
_kev_post_msg_internal
_kev_vendor_code_find
_kevent
_kevent_register_wait_block
_kevt_getstat
_kext_alloc_init
_kext_get_vm_map
_kext_receipt
_kext_receipt_set_queried
_kext_receipt_set_queried_0
_kext_weak_symbol_referenced
_kext_weak_symbol_referenced_0
_kext_weak_symbol_referenced_1
_kext_weak_symbol_referenced_2
_kext_weak_symbol_referenced_3
_kext_weak_symbol_referenced_4
_key_allocsa_policy
_key_checktunnelsanity
_key_cmpspidx_withmask
_key_dinit
_key_fill_offload_frames_for_savs
_key_getmsgbuf_x1
_key_output
_key_random
_key_randomfill
_key_release_custom_ipsec
_key_sa_recordxfer
_key_sa_stir_iv
_key_sendup_mbuf
_key_setsadbipsecif
_key_sp2msg
_key_val_to_jobj
_key_validate_address_pair
_keychain_key
_kfree_external
_kfree_size_confusion_panic
_kfree_size_invalid_panic
_kfree_size_require_panic
_kfree_type_var_impl_internal
_kfree_type_var_impl_internal_0
_kfszHrZ3N4HMtvfB5Bws
_kheap_free
_kill_with_violation_report
_kmclose
_kmem_alloc_external
_kmem_alloc_pageable_external
_kminit
_kmioctl
_kmod_dump_log
_kmod_start_0
_kmoutput
_kmread
_kmstart
_kmwrite
_knote_fill_kevent
_knote_fill_kevent_with_sdata
_kpc_controls_fixed_counters
_kpc_counterbuf_free
_kpc_get_cpu_counters
_kpc_get_rawpmu_config
_kpc_get_thread_counting
_kpc_is_running_configurable
_kpc_register_pm_handler
_kpc_reserve_pm_counters
_kperf_action_get_filter
_kperf_action_get_kcallstack_depth
_kperf_action_get_samplers
_kperf_action_get_ucallstack_depth
_kperf_action_get_userdata
_kperf_action_has_task
_kperf_action_has_thread
_kperf_action_reset
_kperf_action_set_filter
_kperf_action_set_kcallstack_depth
_kperf_action_set_samplers
_kperf_action_set_ucallstack_depth
_kperf_action_set_userdata
_kperf_ast_sample_max_stack_phase
_kperf_disable_sampling
_kperf_enable_sampling
_kperf_init
_kperf_init_0
_kperf_init_early
_kperf_kcallstack_log
_kperf_kdbg_cswitch_set
_kperf_kdebug_setup
_kperf_kdebug_should_trigger
_kperf_kpc_config_log
_kperf_kpc_cpu_log
_kperf_kpc_thread_log
_kperf_lazy_reset
_kperf_lazy_set_cpu_action
_kperf_lazy_set_wait_action
_kperf_meminfo_log
_kperf_off_cpu
_kperf_on_cpu_update
_kperf_reset
_kperf_sample_has_non_system
_kperf_sysctl_bless_handler
_kperf_sysctl_limits
_kperf_task_info_log
_kperf_task_snapshot_log
_kperf_thread_info_log
_kperf_thread_inscyc_log
_kperf_thread_snapshot_log
_kperf_ucallstack_log
_kppet_lightweight_active_update
_kppet_reset
_kppet_set_lightweight_pet
_kptimer_get_action
_kptimer_get_period
_kptimer_min_period_abs
_kptimer_set_action
_kptimer_set_period
_kptimer_set_pet_timerid
_kqr_preadopt_thread_group
_kqr_preadopt_thread_group_addr
_kqueue_threadreq_get_turnstile
_kr_init_to_mhints
_krealloc_data_external
_krealloc_ext
_krealloc_size_invalid_panic
_krealloc_type_var_impl
_krpc_portmap
_ksyn_cvupdate_fixup
_ksyn_queue_count_tolowest
_ktrace_assert_lock_held
_ktrace_background_available_notify_user
_ktrace_disable
_ktrace_get_owning_pid
_ktrace_read_check
_ktrace_set_owning_pid
_ktrace_sysctl
_kvprintf
_kvtophys
_kvtophys_0
_kvtophys_nofail
_l2tp_add
_l2tp_attach
_l2tp_control
_l2tp_ctloutput
_l2tp_detach
_l2tp_domain_init
_l2tp_domain_terminate
_l2tp_event
_l2tp_handle_control
_l2tp_handle_data
_l2tp_input
_l2tp_remove
_l2tp_rfc_accept
_l2tp_rfc_compare_address
_l2tp_rfc_dispose
_l2tp_rfc_free_client
_l2tp_rfc_free_now
_l2tp_rfc_handle_ack
_l2tp_rfc_init
_l2tp_rfc_lower_input
_l2tp_rfc_new_client
_l2tp_rfc_output
_l2tp_rfc_output_control
_l2tp_rfc_output_data
_l2tp_rfc_output_queued
_l2tp_rfc_slowtimer
_l2tp_send
_l2tp_timer
_l2tp_udp_attach
_l2tp_udp_clear_INP_INADDR_ANY
_l2tp_udp_detach
_l2tp_udp_dispose
_l2tp_udp_dispose_threads
_l2tp_udp_init
_l2tp_udp_init_threads
_l2tp_udp_input
_l2tp_udp_output
_l2tp_udp_setpeer
_l2tp_udp_thread_func
_l2tp_wan_attach
_l2tp_wan_detach
_l2tp_wan_input
_l2tp_wan_input_error
_l2tp_wan_ioctl
_l2tp_wan_output
_l2tp_wan_xmit_full
_l2tp_wan_xmit_ok
_lDf7Jf6ablA
_label_set_sandbox
_lchown
_lck_attr_startup_init
_lck_group_init
_lck_grp_foreach
_lck_grp_startup_init
_lck_mtx_assert
_lck_mtx_free
_lck_mtx_free_0
_lck_mtx_free_1
_lck_mtx_free_10
_lck_mtx_free_11
_lck_mtx_free_12
_lck_mtx_free_13
_lck_mtx_free_14
_lck_mtx_free_15
_lck_mtx_free_16
_lck_mtx_free_17
_lck_mtx_free_18
_lck_mtx_free_19
_lck_mtx_free_2
_lck_mtx_free_20
_lck_mtx_free_21
_lck_mtx_free_22
_lck_mtx_free_23
_lck_mtx_free_24
_lck_mtx_free_25
_lck_mtx_free_26
_lck_mtx_free_27
_lck_mtx_free_28
_lck_mtx_free_29
_lck_mtx_free_3
_lck_mtx_free_30
_lck_mtx_free_31
_lck_mtx_free_32
_lck_mtx_free_33
_lck_mtx_free_34
_lck_mtx_free_35
_lck_mtx_free_36
_lck_mtx_free_37
_lck_mtx_free_38
_lck_mtx_free_39
_lck_mtx_free_4
_lck_mtx_free_40
_lck_mtx_free_41
_lck_mtx_free_42
_lck_mtx_free_43
_lck_mtx_free_44
_lck_mtx_free_45
_lck_mtx_free_46
_lck_mtx_free_47
_lck_mtx_free_48
_lck_mtx_free_49
_lck_mtx_free_5
_lck_mtx_free_50
_lck_mtx_free_51
_lck_mtx_free_52
_lck_mtx_free_53
_lck_mtx_free_54
_lck_mtx_free_55
_lck_mtx_free_56
_lck_mtx_free_57
_lck_mtx_free_58
_lck_mtx_free_59
_lck_mtx_free_6
_lck_mtx_free_60
_lck_mtx_free_61
_lck_mtx_free_62
_lck_mtx_free_63
_lck_mtx_free_64
_lck_mtx_free_65
_lck_mtx_free_66
_lck_mtx_free_67
_lck_mtx_free_68
_lck_mtx_free_69
_lck_mtx_free_7
_lck_mtx_free_70
_lck_mtx_free_71
_lck_mtx_free_72
_lck_mtx_free_73
_lck_mtx_free_74
_lck_mtx_free_75
_lck_mtx_free_76
_lck_mtx_free_77
_lck_mtx_free_78
_lck_mtx_free_79
_lck_mtx_free_8
_lck_mtx_free_80
_lck_mtx_free_81
_lck_mtx_free_82
_lck_mtx_free_83
_lck_mtx_free_84
_lck_mtx_free_85
_lck_mtx_free_86
_lck_mtx_free_9
_lck_rw_gate_alloc_init
_lck_rw_gate_alloc_init_0
_lck_spin_assert
_lck_spin_sleep_with_inheritor
_lck_ticket_sleep_with_inheritor
_ldisc_deregister
_ldisc_register
_learnPeerPreferredChannelList(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_ledger_get_balance
_ledger_panic_on_negative
_ledger_track_credit_only
_ledger_track_maximum
_legacy_get_ek
_lf_abort_advlocks
_lgh_fb_rel_cb
_lifatype_to_dtype
_lifs_add
_lifs_add_req
_lifs_cache_dirattr
_lifs_clear_busy
_lifs_create_request
_lifs_create_request_0
_lifs_create_send
_lifs_create_send_0
_lifs_get_iobuf
_lifs_getattr
_lifs_getattr_request
_lifs_getattrlistbulk_request
_lifs_getattrlistbulk_send
_lifs_getfsattr_call
_lifs_getfsattr_request
_lifs_getfsattr_send
_lifs_getxattr_request
_lifs_getxattr_send
_lifs_hashremove
_lifs_init
_lifs_invalidate_dirattrcache
_lifs_invalidate_dirattrcache_locked
_lifs_io_thread_start
_lifs_io_thread_stop
_lifs_iobuf_map_thread
_lifs_kext_start
_lifs_kext_stop
_lifs_link_request
_lifs_link_send
_lifs_listxattr_request
_lifs_listxattr_send
_lifs_lookup_node_locked
_lifs_lookup_request
_lifs_lookup_request_0
_lifs_lookup_request_1
_lifs_lookup_send
_lifs_lookup_send_0
_lifs_lookupmed_send
_lifs_lookupsmall_send
_lifs_mirror_mount_domount
_lifs_mirror_mount_trigger_rearm
_lifs_mirror_mount_trigger_resolve
_lifs_mirror_mount_trigger_unresolve
_lifs_mntfromname
_lifs_mount
_lifs_mount_request
_lifs_mount_send
_lifs_next_powerof2
_lifs_num_cpus
_lifs_open_request
_lifs_open_request_0
_lifs_open_request_1
_lifs_open_request_2
_lifs_open_send
_lifs_open_send_0
_lifs_open_send_1
_lifs_pack_vap
_lifs_pathconf_request
_lifs_read_request_async
_lifs_read_send
_lifs_read_wrapped_send
_lifs_readdir_cached
_lifs_readdir_request
_lifs_readdir_send
_lifs_readlink_request
_lifs_reclaim_request
_lifs_remove_req
_lifs_remove_request
_lifs_remove_send
_lifs_removexattr_send
_lifs_rename_request
_lifs_rename_send
_lifs_req_callback_thread
_lifs_req_hashtbl_deinit
_lifs_req_hashtbl_init
_lifs_req_thread_start
_lifs_req_thread_stop
_lifs_request_abort_all
_lifs_request_done
_lifs_root
_lifs_set_busy
_lifs_set_machport
_lifs_setattr_request
_lifs_setattr_request_0
_lifs_setattr_send
_lifs_setfsattr_request
_lifs_setfsattr_send
_lifs_setxattr_large_send
_lifs_setxattr_request
_lifs_setxattr_small_send
_lifs_sillyrename
_lifs_statfs_request
_lifs_statfs_send
_lifs_statfs_send_0
_lifs_statfs_send_1
_lifs_statfs_send_2
_lifs_statfs_send_3
_lifs_symlink_request
_lifs_symlink_send
_lifs_unmount
_lifs_unmount_request
_lifs_unmount_send
_lifs_vnop_access
_lifs_vnop_allocate
_lifs_vnop_blktooff
_lifs_vnop_blockmap
_lifs_vnop_close
_lifs_vnop_create
_lifs_vnop_fsync
_lifs_vnop_getattr
_lifs_vnop_getattrlistbulk
_lifs_vnop_getxattr
_lifs_vnop_inactive
_lifs_vnop_ioctl
_lifs_vnop_link
_lifs_vnop_listxattr
_lifs_vnop_lookup
_lifs_vnop_mkdir
_lifs_vnop_mmap
_lifs_vnop_mnomap
_lifs_vnop_offtoblk
_lifs_vnop_open
_lifs_vnop_pagein
_lifs_vnop_pageout
_lifs_vnop_pathconf
_lifs_vnop_read
_lifs_vnop_readdir
_lifs_vnop_readlink
_lifs_vnop_reclaim
_lifs_vnop_remove
_lifs_vnop_removexattr
_lifs_vnop_rename
_lifs_vnop_rmdir
_lifs_vnop_setattr
_lifs_vnop_setxattr
_lifs_vnop_strategy
_lifs_vnop_strategy_done
_lifs_vnop_symlink
_lifs_vnop_write
_lifs_wait_req_completion
_lifs_write_request_async
_lifs_write_send
_lifs_write_wrapped_send
_link
_linkat
_listattr_callback
_listen
_listxattr_cprotect
_ll_reach_tree_RB_FIND
_ll_reach_tree_RB_INSERT
_ll_reach_tree_RB_INSERT_COLOR
_ll_reach_tree_RB_INSERT_COLOR_0
_ll_reach_tree_RB_MINMAX
_ll_reach_tree_RB_MINMAX_0
_ll_reach_tree_RB_NEXT
_ll_reach_tree_RB_NEXT_0
_ll_reach_tree_RB_NFIND
_ll_reach_tree_RB_PREV
_ll_reach_tree_RB_PREV_0
_ll_reach_tree_RB_REMOVE
_ll_reach_tree_RB_REMOVE_0
_ll_reach_tree_RB_REMOVE_COLOR
_ll_reach_tree_RB_REMOVE_COLOR_0
_ll_reach_tree_RB_SETCOLOR
_ll_reach_tree_RB_SETCOLOR_0
_ll_reach_tree_RB_SETPARENT
_ll_reach_tree_RB_SETPARENT_0
_lltable_allocate_htbl
_lltable_delete_addr
_lltable_drop_entry_queue
_lltable_free_cb
_lltable_link
_lltable_prefix_free
_lltable_set_entry_addr
_lo_ioctl
_lo_pre_output
_lo_start
_load_exclusive32
_load_media_key
_load_wrapping_key
_lock_condition
_lockd_ping
_lockd_request
_lockd_shutdown
_lockd_shutdown_0
_lockd_shutdown_1
_lockd_shutdown_2
_lockd_shutdown_3
_log_0
_log_corrupt
_log_debug
_log_err
_log_info
_log_kernel_report_summary
_log_putc_locked
_log_warn
_logf_0
_lookup_bucket
_lookup_compound_vnop_post_hook
_lookup_consider_update_cache
_lookup_file_data_hash
_lookup_file_extent
_lookup_in_static_trust_cache
_lookup_in_trust_cache_module
_lookup_jobj_in_snap
_lookup_mapping
_lookup_phys_extent
_lookup_phys_extent_internal
_lookup_phys_extent_snap_or_live
_lookup_sibling_link
_lookup_unfoldable_name_iterator
_lookup_validate_creation_path
_lprofBufferIOWrite
_lprofBufferWriter
_lprofWriteDataImpl
_lroundf
_lstat
_lstat64
_lstat64_extended
_lstat_extended
_ltc_des3_ecb_decrypt
_ltc_des_ecb_decrypt
_lz4_decode
_lz4_decode_0
_lz4_decode_0_0
_lz4_decode_0_1
_lz4_decode_asm
_lz4_decode_asm_0
_lz4_decode_asm_0_0
_lz4_decode_asm_0_1
_lz4_decode_buffer
_lz4_decode_buffer_0
_lz4_decode_buffer_1
_lz4_encode_2gb
_lz4raw_decode_buffer
_lz4raw_decode_buffer_0
_lz4raw_decode_buffer_1
_lz4raw_decode_buffer_2
_lz4raw_encode_buffer
_lzbitmap_alloc
_lzbitmap_alloc_0
_lzbitmap_alloc_1
_lzbitmap_create_dictionary_and_token_map
_lzbitmap_create_dictionary_and_token_map_0
_lzbitmap_create_dictionary_and_token_map_1
_lzbitmap_decode
_lzbitmap_decode_0
_lzbitmap_decode_1
_lzbitmap_decode_rle
_lzbitmap_decode_rle_0
_lzbitmap_decode_rle_1
_lzbitmap_encode
_lzbitmap_encode_0
_lzbitmap_encode_1
_lzbitmap_encode_block
_lzbitmap_encode_block_0
_lzbitmap_encode_block_1
_lzbitmap_encode_rle
_lzbitmap_encode_rle_0
_lzbitmap_encode_rle_1
_lzbitmap_encode_state_size
_lzbitmap_encode_state_size_0
_lzbitmap_encode_state_size_1
_lzbitmap_fast_decode
_lzbitmap_fast_decode_0
_lzbitmap_fast_decode_1
_lzbitmap_fast_decode_buffer
_lzbitmap_fast_decode_buffer_0
_lzbitmap_fast_decode_buffer_1
_lzbitmap_fast_decode_buffer_2
_lzbitmap_fast_decode_buffer_3
_lzbitmap_fast_decode_buffer_4
_lzbitmap_fast_encode
_lzbitmap_fast_encode_0
_lzbitmap_fast_encode_1
_lzbitmap_fast_encode_buffer
_lzbitmap_fast_encode_buffer_0
_lzbitmap_fast_encode_buffer_1
_lzbitmap_fast_encode_buffer_2
_lzbitmap_fast_encode_buffer_3
_lzbitmap_fast_encode_buffer_4
_lzbitmap_fast_encode_state_size
_lzbitmap_fast_encode_state_size_0
_lzbitmap_fast_encode_state_size_1
_lzbitmap_fast_parser0
_lzbitmap_fast_parser0_0
_lzbitmap_fast_parser0_1
_lzbitmap_fast_parser1
_lzbitmap_fast_parser1_0
_lzbitmap_fast_parser1_1
_lzbitmap_fast_parser2
_lzbitmap_fast_parser2_0
_lzbitmap_fast_parser2_1
_lzbitmap_flags
_lzbitmap_flags_0
_lzbitmap_flags_1
_lzbitmap_get_top_k
_lzbitmap_get_top_k_0
_lzbitmap_get_top_k_1
_lzbitmap_init_encode_state
_lzbitmap_init_encode_state_0
_lzbitmap_init_encode_state_1
_lzbitmap_init_token_info
_lzbitmap_init_token_info_0
_lzbitmap_init_token_info_1
_lzbitmap_output_masks_and_buffer_commands
_lzbitmap_output_masks_and_buffer_commands_0
_lzbitmap_output_masks_and_buffer_commands_1
_lzbitmap_output_nibbles
_lzbitmap_output_nibbles_0
_lzbitmap_output_nibbles_1
_lzbitmap_parser_l0
_lzbitmap_parser_l0_0
_lzbitmap_parser_l0_1
_lzbitmap_parser_l1
_lzbitmap_parser_l1_0
_lzbitmap_parser_l1_1
_lzbitmap_parser_l2
_lzbitmap_parser_l2_0
_lzbitmap_parser_l2_1
_lzbitmap_process_block
_lzbitmap_process_block_0
_lzbitmap_process_block_1
_lzbitmap_store
_lzbitmap_store_0
_lzbitmap_store_1
_lzfseDecode
_lzfseDecodeV1
_lzfseDecodeV1_0
_lzfseDecodeV1_1
_lzfseDecode_0
_lzfseDecode_1
_lzfse_decode_buffer
_lzfse_decode_buffer_0
_lzfse_decode_buffer_1
_lzfse_decode_buffer_iboot
_lzfse_decode_buffer_iboot_0
_lzfse_decode_buffer_iboot_1
_lzfse_decode_buffer_output_size
_lzfse_decode_buffer_output_size_0
_lzfse_decode_buffer_output_size_1
_lzfse_decode_literals
_lzfse_decode_literals_0
_lzfse_decode_literals_1
_lzfse_decode_lmd
_lzfse_decode_lmd_0
_lzfse_decode_lmd_1
_lzfse_decode_lzvn_block_iboot
_lzfse_decode_lzvn_block_iboot_0
_lzfse_decode_lzvn_block_iboot_1
_lzvnDecode
_lzvnDecode_0
_lzvnDecode_1
_lzvn_decode_buffer
_lzvn_decode_buffer_0
_lzvn_decode_buffer_1
_m_add_crumb
_m_align
_m_classifier_init
_m_copy_classifier
_m_copy_pkthdr
_m_copyback
_m_dup_pkthdr
_m_ext_get_prop
_m_ext_paired_activate
_m_ext_set_prop
_m_fixhdr
_m_free_paired
_m_get_ext_arg
_m_get_ext_free
_m_getclr
_m_getpacket
_m_getpacket_how
_m_getpackethdrs
_m_getpackets
_m_length
_m_length2
_m_mbigget
_m_mbigget_0
_m_mcheck
_m_mclalloc
_m_mclalloc_0
_m_mclalloc_1
_m_mclget
_m_prepend
_m_scratch_init
_m_service_class_from_idx
_m_service_class_from_val
_m_set_ext
_m_set_traffic_class
_m_sum16
_m_tag_alloc
_m_tag_copy
_m_tag_create
_m_tag_delete_chain
_m_tag_first
_m_tag_free
_m_tag_init
_m_tag_next
_m_tag_prepend
_macAddressEqualAndLru(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_macAddressEqualAndRemove(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_mac_cred_label
_mac_cred_label_destroy
_mac_cred_label_externalize_audit
_mac_cred_label_init
_mac_devfs_label_init
_mac_error_select
_mac_exc_create_label_for_current_proc
_mac_exc_free_action_label
_mac_execve_enter
_mac_file_setxattr
_mac_file_setxattr_0
_mac_file_setxattr_1
_mac_find_module_data
_mac_find_policy_data
_mac_label_set
_mac_label_verify_panic
_mac_labelzone_alloc_owned
_mac_mount_label_get
_mac_mount_label_init
_mac_nat_entry_print2
_mac_policy_init
_mac_policy_initmach
_mac_policy_list_conditional_busy
_mac_posixsem_label_init
_mac_posixshm_label_init
_mac_schedule_userret
_mac_sysvmsg_label_init
_mac_sysvmsq_label_init
_mac_sysvsem_label_init
_mac_sysvshm_label_init
_mac_task_register_filter_callbacks
_mac_vnode_label_allocate
_mac_vnode_label_associate
_mac_vnode_label_externalize_audit
_mac_vnode_label_get
_mac_vnode_label_init
_mac_vnode_label_init_needed
_mac_vnode_label_set
_mac_vnop_getxattr
_mac_vnop_removexattr
_mac_vnop_setxattr
_mach_bridge_add_timestamp
_mach_bridge_init_timestamp
_mach_exception_raise
_mach_exception_raise_identity_protected
_mach_generate_activity_id
_mach_gss_accept_sec_context_v2
_mach_gss_hold_cred
_mach_gss_init_sec_context_v2
_mach_gss_init_sec_context_v3
_mach_gss_lookup
_mach_gss_unhold_cred
_mach_kauth_cred_thread_update
_mach_make_memory_entry_64
_mach_msg_fetch_filter_policy
_mach_msg_filter_register_callback
_mach_port_allocate
_mach_port_allocate_name
_mach_port_allocate_qos
_mach_port_get_status_helper
_mach_port_insert_right
_mach_port_type
_mach_syscall_trace_exit
_mach_task_is_self
_mach_test_sync_upcall
_mach_timebase_info_trap
_mach_to_bsd_errno
_mach_vm_map_external
_mach_vm_map_kernel
_mach_vm_page_info
_mach_vm_page_query
_mach_vm_page_query_0
_mach_vm_pressure_level_monitor
_mach_vm_read
_mach_vm_read_0
_mach_vm_region
_mach_vm_region_recurse
_mach_vm_remap_external
_mach_vm_remap_external_0
_mach_vm_remap_kernel
_mach_vm_remap_kernel_0
_mach_vm_remap_new_external
_mach_vm_remap_new_external_0
_mach_vm_server_routine
_mach_wait_until_trap
_machine_max_runnable_latency
_machine_perfcontrol_deadline_passed
_machine_signal_idle
_machine_signal_idle_deferred
_machine_trace_thread_validate_kva
_machine_track_platform_idle
_macx_swapinfo
_make_brand_string
_make_dirent_iterator
_make_fext_iterator
_make_fext_riterator
_make_jkey_from_jobj
_make_purgeable_name
_make_scalable_lookup_key
_malloc
_mapping_free_prime_internal
_mark_doc_id_index_for_rebuild_if_needed
_mask_saved_state_cpsr
_matchExec
_matchFree
_matchInit
_matchUnpack
_match_device_conformance
_match_device_set
_match_extension_ancestor
_match_iokit_connection
_match_iokit_registry_entry
_match_iokit_registry_entry_byname
_match_iokit_registry_entry_byproperty_uint
_match_regex
_match_rootless_disk
_match_rootless_protected_device
_match_storage_class_extension
_match_user_intent_extension
_mbstat_sysctl
_mbuf_add_drvaux
_mbuf_adjustlen
_mbuf_align_32
_mbuf_alloccluster
_mbuf_allocpacket
_mbuf_allocpacket_list
_mbuf_attachcluster
_mbuf_cluster_get_prop
_mbuf_cluster_set_prop
_mbuf_concatenate
_mbuf_copydata
_mbuf_copym
_mbuf_data_to_physical
_mbuf_data_to_physical_0
_mbuf_datastart
_mbuf_default_ncl
_mbuf_dup
_mbuf_find_drvaux
_mbuf_freecluster
_mbuf_freem
_mbuf_freem_0
_mbuf_get
_mbuf_get_class
_mbuf_get_csum_requested
_mbuf_get_flowid
_mbuf_get_status
_mbuf_get_timestamp
_mbuf_get_traffic_class_index
_mbuf_get_tso_requested
_mbuf_get_tx_compl_data
_mbuf_get_vlan_tag
_mbuf_getcluster
_mbuf_gethdr
_mbuf_inet_cksum
_mbuf_inet_cksum_0
_mbuf_is_traffic_class_privileged
_mbuf_leadingspace
_mbuf_maxlen
_mbuf_mclget
_mbuf_mclhasreference
_mbuf_mclhasreference_0
_mbuf_outbound_finalize
_mbuf_pkt_list_len
_mbuf_pkt_list_maxlen
_mbuf_pkthdr_aux_flags
_mbuf_pkthdr_maxlen
_mbuf_prepend
_mbuf_pullup
_mbuf_ring_cluster_alloc
_mbuf_ring_cluster_is_active
_mbuf_ring_cluster_is_active_0
_mbuf_set_flowid
_mbuf_set_keepalive_flag
_mbuf_set_status
_mbuf_set_timestamp
_mbuf_set_traffic_class
_mbuf_set_tx_compl_data
_mbuf_setdata
_mbuf_setflags
_mbuf_setflags_mask
_mbuf_setnext
_mbuf_split
_mbuf_stats
_mbuf_tag_allocate
_mbuf_tag_find
_mbuf_tag_free
_mbuf_trailingspace
_mcache_alloc
_mcache_alloc_0
_mcache_audit_free_verify
_mcache_audit_free_verify_set
_mcache_audit_panic
_mcache_cache_bkt_resize
_mcache_cache_enable
_mcache_create
_mcache_create_ext
_mcache_dump_mca
_mcache_purge_cache
_mcache_reap
_mcache_reap_now
_mcache_set_pattern
_mcache_slab_alloc
_mcache_slab_audit
_mcache_verify_pattern
_mcache_verify_set_pattern
_mcl_audit_mbuf
_mcl_audit_mcheck_panic
_mcl_audit_restore_mbuf
_mcl_audit_verify_nextptr_panic
_mcp_chclass_obj_locked
_mcp_chclass_promoting
_mcp_chclass_tx
_md5_compress
_mdevgetrange
_mdevlookup
_mdevremoveall
_mdevrw
_mdevsize
_memchr
_memcmp
_memcmp_zero_ptr_aligned
_memmove
_memoize
_memory_object_control_server_routine
_memory_object_destroy
_memory_object_synchronize
_memory_object_synchronize_completed
_memorystatus_act_on_entitled_task_limit
_memorystatus_act_on_ios13extended_footprint_entitlement
_memorystatus_get_first_proc_locked
_memorystatus_knote_register
_memorystatus_notify_init
_memorystatus_pages_update
_memorystatus_task_has_increased_memory_limit_entitlement
_memset
_memset_s
_merge_holes_if_needed
_meta_crypto_state_init
_microtime
_microtime_0
_microtime_with_abstime
_mig_strncpy_zerofill
_mig_user_deallocate
_mig_user_deallocate_0
_mig_user_deallocate_1
_mig_user_deallocate_2
_mig_user_deallocate_3
_mig_user_deallocate_4
_migrate_media_keys_if_needed
_mkdir
_mkdir_extended
_mkdirat
_mkfifo
_mkfifo_extended
_ml_auth_ptr_unchecked
_ml_broadcast_cpu_event
_ml_cpu_signal
_ml_cpu_signal_deferred
_ml_cpu_signal_deferred_adjust_timer
_ml_cpu_signal_retract
_ml_disable_user_jop_key
_ml_enable_monitor
_ml_get_booter_memory_size
_ml_get_cluster_number
_ml_get_cpu_number
_ml_get_cpu_number_type
_ml_get_die_id
_ml_get_ppl_cpu_data
_ml_get_time_since_reset
_ml_get_vm_reserved_regions
_ml_init_arm_debug_interface
_ml_init_timebase
_ml_map_cpu_pio
_ml_nofault_copy
_ml_panic_trap_to_debugger
_ml_probe_read
_ml_probe_read_64
_ml_set_max_cpus
_ml_sign_thread_state
_ml_snoop_thread_is_on_core
_ml_static_slide
_ml_static_unslide
_ml_static_vtop
_ml_validate_nofault
_mleak_logger
_mleak_table_sysctl
_mleak_top_trace_sysctl
_mmu_kvtop
_mmu_kvtop_wpreflight
_mmu_uvtop
_monitorDataPath(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_monitorService(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_mount
_mount_failure_cleanup
_mount_isdrained
_mount_iterdrain
_mount_iterref
_mount_iterreset
_mount_list_add
_mount_list_lookupby_fsid
_mount_lock_destroy
_mount_lookupby_volfsid
_mount_refdrain
_mountpointname
_move_inode_to_purgatory
_move_snapshot_to_purgatory
_mp_pcbinfo_attach
_mp_pcbinfo_detach
_mpkl_tcp_send
_mpsc_daemon_queue_init_with_target
_mpsc_daemon_queue_init_with_thread_call
_mpsc_queue_batch_next
_mpsc_queue_dequeue_batch
_mpsc_queue_restore_batch
_mptcp_act_on_txfail
_mptcp_can_send_more
_mptcp_clear_cellicon
_mptcp_control_register
_mptcp_data_ack_rcvd
_mptcp_entitlement_check
_mptcp_fill_info_bytestats
_mptcp_finish_usrclosed
_mptcp_get_map_for_dsn
_mptcp_get_mpjoin_hmac
_mptcp_get_notsent_lowat
_mptcp_get_rands
_mptcp_get_session_dst
_mptcp_getconninfo
_mptcp_getlock
_mptcp_handle_deferred_upcalls
_mptcp_hmac_sha1
_mptcp_hmac_sha256
_mptcp_init_remote_parms
_mptcp_init_urgency_timer
_mptcp_insert_dsn
_mptcp_insert_rmap
_mptcp_is_wifi_unusable_for_session
_mptcp_ok_to_create_subflows
_mptcp_output_getm_data_level_details
_mptcp_output_getm_dsnmap32
_mptcp_remove_cell_subflows
_mptcp_remove_subflows
_mptcp_reset_rexmit_state
_mptcp_sbrcv_grow
_mptcp_set_cellicon
_mptcp_set_notsent_lowat
_mptcp_set_raddr_rand
_mptcp_setup_syn_opts
_mptcp_sopt2str
_mptcp_subflow_adaptive_rtimo_ev
_mptcp_subflow_adaptive_wtimo_ev
_mptcp_subflow_disconnected_ev
_mptcp_subflow_mpstatus_ev
_mptcp_subflow_necp_cb
_mptcp_subflow_shutdown
_mptcp_subflow_sosend
_mptcp_subflow_wupcall
_mptcp_try_alternate_port
_mptcp_unset_cellicon
_mptcp_update_dss_rcv_state
_mptcp_usr_control
_mptcp_usr_detach
_mptcp_usr_disconnect
_mptcp_usr_disconnectx
_mptcp_usr_preconnect
_mptcp_usr_rcvd
_mptcp_usr_send
_mptcp_usr_shutdown
_mptcpstats_get_bytes
_mptcpstats_get_index
_mptcpstats_get_index_by_ifindex
_mptcpstats_inc_switch
_mptcpstats_update
_msg_cache_device_state
_msg_get_cached_device_state
_msg_get_cached_device_state.cold.1
_msg_process_ipc_call_flags
_mt_acquire_counters
_mt_cdev_open
_mt_core_set_snap
_mt_count_pmis
_mt_cur_task_fixed_counts
_mt_cur_task_fixed_counts_0
_mt_insert
_mt_insert_0
_mt_iterator_init
_mt_iterator_next
_mt_lookup
_mt_lookup_internal
_mt_lookup_variant
_mt_microstackshot_start_arch
_mt_microstackshot_stop
_mt_mtc_update_count
_mt_release_counters
_mt_remove
_mt_update_via_callback
_mtree_check
_mtree_check_ephemeral
_mtree_check_recent_sanity
_mtree_checkpoint_traverse
_mtree_delete
_mtree_entry_size_check
_mtree_evict_range
_mtree_get
_mtree_init
_mtree_init_phys
_mtree_key_count
_mtree_level_count
_mtree_merge
_mtree_node_count
_mtree_reap
_mtree_recent_sanity_callback
_mtree_store_ephemeral
_munge_user32_rusage
_munge_user32_stat
_munge_user32_stat64
_munge_user64_rusage
_munge_user64_stat
_munge_user64_stat64
_munge_wlwwwll
_munge_wwlww
_munge_wwwlwww
_munge_wwwwwlll
_munge_wwwwwllw
_munge_wwwwwlww
_munge_wwwwwwll
_munge_wwwwwwlw
_must_throttle_writes
_my_random
_my_zalloc_vector
_my_zfree_vector
_mzRQjC7QF6ZQbBAmA
_na_disable_all_rings
_na_disconnect
_na_fini
_na_kr_get_pp
_na_lock_all_rings
_name2oid
_namei_compound_available
_nameiat
_nanoseconds_to_absolutetime
_nanotime
_nanotime_to_absolutetime
_nat464_addr_cksum_fixup
_nat464_cksum_fixup
_nat464_cksum_fixup_0
_nat464_translate_46
_nat464_translate_64
_nat464_translate_icmp
_nat464_translate_icmp_ip
_nd6_alt_node_addr_decompose
_nd6_dad_detach
_nd6_dad_stop
_nd6_dad_stoptimer
_nd6_drain
_nd6_if_disable
_nd6_if_prproxy
_nd6_llinfo_get_iflri
_nd6_llinfo_get_ri
_nd6_llreach_set_reachable
_nd6_option
_nd6_option_init
_nd6_post_msg
_nd6_prefix_lookup
_nd6_rtr_init
_nd6_setifinfo
_nd6_setmtu
_nd6_storelladdr
_ndcache_state2str
_nddr_addref
_nddr_remref
_nddr_trace
_ndflush
_ndpr_addref
_ndpr_remref
_ndpr_trace
_ndrv_abort
_ndrv_bind
_ndrv_connect
_ndrv_disconnect
_ndrv_dominit
_ndrv_output
_ndrv_peeraddr
_ndrv_send
_ndrv_sockaddr
_necp_addr_compare
_necp_addr_compare_0
_necp_buffer_find_tlv
_necp_buffer_get_tlv_value
_necp_buffer_write_tlv
_necp_buffer_write_tlv_if_different
_necp_client_acquire_agent_token
_necp_client_add_browse_interface_options
_necp_client_add_interface_flow_if_needed
_necp_client_add_nexus_flow_if_needed
_necp_client_add_socket_flow
_necp_client_copy_agent
_necp_client_copy_interface
_necp_client_early_close
_necp_client_get_proc_pid_from_arena_info
_necp_client_init
_necp_client_reap_caches
_necp_client_reap_caches_0
_necp_client_reap_caches_1
_necp_copy_inp_domain_info
_necp_fd_knrdetach
_necp_fd_knrprocess
_necp_fd_knrtouch
_necp_find_conn_netstat_data
_necp_find_netstat_data
_necp_get_app_uuid_from_packet
_necp_get_is_keepalive_from_packet
_necp_get_skip_policy_id_from_packet
_necp_get_socket_attributes
_necp_get_tlv_at_offset
_necp_ifnet_matches_agent_type
_necp_init
_necp_inpcb_dispose
_necp_ip6_output_find_policy_match
_necp_ip_output_find_policy_match
_necp_is_addr_in_subnet
_necp_is_loopback
_necp_kernel_ip_output_policy_is_unnecessary
_necp_kernel_socket_policy_is_unnecessary
_necp_lookup_current_qos_marking
_necp_mark_packet_as_keepalive
_necp_mark_packet_from_interface
_necp_mark_packet_from_ip
_necp_mark_packet_from_socket
_necp_match_policy
_necp_netagent_is_requested
_necp_packet_is_allowed_over_interface
_necp_packet_should_skip_filters
_necp_route_is_allowed
_necp_route_is_allowed_inner
_necp_set_socket_attributes
_necp_sign_resolver_answer
_necp_socket_get_effective_mtu
_necp_socket_get_flow_divert_control_unit
_necp_socket_get_rescope_if_index
_necp_socket_is_allowed_to_send_recv
_necp_socket_is_allowed_to_send_recv_internal
_necp_socket_is_allowed_to_send_recv_v4
_necp_socket_is_allowed_to_send_recv_v6
_necp_socket_should_rescope
_necp_socket_should_use_flow_divert
_necp_socket_update_qos_marking
_necp_update_qos_marking
_necp_validate_resolver_answer
_net_bloom_filter_contains
_net_bloom_filter_destroy
_net_bloom_filter_get_size
_net_bloom_filter_insert
_net_filter_event_callback
_net_filter_event_mark
_net_filter_event_register
_net_filter_event_sysctl
_net_flowhash_jhash
_net_flowhash_mh3_x64_128
_net_flowhash_mh3_x86_32
_net_perf_histogram
_net_perf_initialize
_net_perf_measure_time
_net_perf_start_time
_net_port_info_find_match
_net_port_info_log_npi
_net_qos_guideline
_net_str_id_find_internal
_net_str_id_first_last
_net_update_uptime_with_time
_netagent_assign_nexus
_netagent_copyout
_netagent_create
_netagent_ctl_connect
_netagent_ctl_getopt
_netagent_get_agent_domain_and_type
_netagent_get_flags
_netagent_get_generation
_netagent_init
_netagent_kernel_trigger
_netagent_post_updated_interfaces
_netagent_set_flags
_netagent_trigger
_netagent_unregister
_netagent_unregister_session_wrapper
_netagent_update_flow_protoctl_event
_netagent_use
_netif_flow_list_insert
_netif_flow_list_lookup
_netif_flow_list_remove
_netif_gso_init
_netif_gso_ipv6_tcp_internal
_netif_gso_ipv6_tcp_update
_netif_gso_ipv6_tcp_update_0
_netns_ctl_dump_all
_netns_ctl_write_ns
_netns_find_anyres_byaddr
_netns_get_flow_info
_netns_get_local_ports
_netns_lookup_reservations_count_in6
_netns_namespaces_tree_RB_FIND
_netns_namespaces_tree_RB_INSERT
_netns_namespaces_tree_RB_NFIND
_netpolicy_post_msg
_netsrc_policy_common
_new_clonesplit_snk
_new_lock
_new_lock_0
_new_recursive_lock
_new_skey
_nextsect
_nextsegfromheader
_nfaFree
_nfs3_getlock_rpc
_nfs3_lookup_rpc_async_finish
_nfs3_mount
_nfs3_pathconf_cache
_nfs3_unlock_rpc
_nfs3_write_rpc_async_finish
_nfs_advlock_getlock
_nfs_avoid_needless_id_setting_on_create
_nfs_buf_delwri_thread
_nfs_buf_itercomplete
_nfs_buf_iterprepare
_nfs_buf_pgs_bit_and
_nfs_buf_pgs_bit_not
_nfs_buf_pgs_get_page_mask
_nfs_buf_pgs_is_set
_nfs_buf_pgs_set_pages_between
_nfs_buf_refget
_nfs_buf_refrele
_nfs_buf_timer
_nfs_can_squish
_nfs_case_insensitive
_nfs_check_for_locks
_nfs_connect_error_class
_nfs_connect_search_check
_nfs_connect_search_socket_found
_nfs_data_lock_internal
_nfs_data_lock_noupdate
_nfs_data_unlock
_nfs_data_unlock_internal
_nfs_data_update_size
_nfs_dulookup_start
_nfs_ephemeral_mount_harvester_callback
_nfs_file_lock_conflict
_nfs_fs_path_destroy
_nfs_fs_path_init
_nfs_fs_path_replace
_nfs_get_xid
_nfs_getattr
_nfs_hash
_nfs_invaldir
_nfs_is_squishy
_nfs_location_index_cmp
_nfs_location_mntfromname
_nfs_location_next
_nfs_lock_owner_insert_held_lock
_nfs_lockdmsg_compare_to_answer
_nfs_lockdmsg_dequeue
_nfs_lockdmsg_enqueue
_nfs_lockdmsg_find_by_answer
_nfs_lockdmsg_find_by_xid
_nfs_lockxid_get
_nfs_mount_gone
_nfs_mount_rele
_nfs_mount_state_error_delegation_lost
_nfs_mount_state_error_should_restart
_nfs_mount_state_in_use_start
_nfs_mount_state_wait_for_recovery
_nfs_mountopts
_nfs_name_cache_purge
_nfs_nbinit
_nfs_need_reconnect
_nfs_need_recover
_nfs_nhinit_finish
_nfs_node_clear_busy
_nfs_node_clear_busy2
_nfs_node_lock
_nfs_node_lock2
_nfs_node_lock_internal
_nfs_node_set_busy
_nfs_node_set_busy2
_nfs_node_unlock2
_nfs_open_file_add_open
_nfs_open_file_clear_busy
_nfs_open_file_remove_open_find
_nfs_open_file_set_busy
_nfs_open_state_clear_busy
_nfs_open_state_set_busy
_nfs_pageouterrorhandler
_nfs_parsefattr
_nfs_printf
_nfs_rdirplus_update_node_attrs
_nfs_removeit
_nfs_reqbusy
_nfs_reqdequeue
_nfs_reqnext
_nfs_request
_nfs_request_rele
_nfs_request_rele_0
_nfs_request_using_gss
_nfs_request_wait
_nfs_rpc_record_state_cleanup
_nfs_sndunlock
_nfs_sock_poke
_nfs_socket_options
_nfs_socket_search_cleanup
_nfs_socket_search_update_error
_nfs_sync_callout
_nfs_tcp_rcv
_nfs_udp_rcv
_nfs_use_cache
_nfs_vfs_sync
_nfs_vnop_blktooff
_nfs_vnop_monitor
_nfs_vnop_offtoblk
_nfsm_chaim_add_exclusive_create_verifier
_nfsm_chain_add_opaque_f
_nfsm_chain_add_opaque_nopad_f
_nfsm_chain_add_uio
_nfsm_chain_add_v2sattr_f
_nfsm_chain_add_v3sattr_f
_nfsm_chain_advance
_nfsm_chain_get_fh_attr
_nfsm_chain_get_wcc_data_f
_nfsm_chain_offset
_nfsm_chain_reverse
_nfsrv_slpderef
_nfstov_type
_nibbleFromChar
_nistctr_init
_node_lookup
_non_repeat_sequence_generate
_nop_pagein
_nop_pagein_0
_noroot_icon_test
_npoKianhz5eqeqJHjqa9
_ns_reservation_tree_RB_FIND
_ns_reservation_tree_RB_INSERT
_ns_reservation_tree_RB_NFIND
_nspace_resolver_init
_nspace_resolver_req_remove
_nspace_resolver_req_wait
_nstat_accumulate_msg
_nstat_control_append_description
_nstat_copy_sa_out
_nstat_flush_accumulated_msgs
_nstat_ifnet_copy_descriptor
_nstat_ifnet_counts
_nstat_ifnet_gone
_nstat_ifnet_threshold_reached
_nstat_ifnet_to_flags
_nstat_ifnet_to_flags_extended
_nstat_init
_nstat_pcb_cache
_nstat_pcb_invalidate_cache
_nstat_route_add_watcher
_nstat_route_attach
_nstat_route_copy_descriptor
_nstat_route_counts
_nstat_route_detach
_nstat_route_lookup
_nstat_route_reporting_allowed
_nstat_tcp_copy_descriptor
_nstat_tcp_counts
_nstat_tcp_extensions
_nstat_tcpudp_reporting_allowed
_nstat_udp_copy_descriptor
_nstat_udp_counts
_nstat_udp_extensions
_nstat_userland_release_snapshot
_ntp_init
_ntstat_userland_count
_num_trailing_0
_numtose
_numtoue
_nvme_ppl_init
_nvme_ppl_map
_nwk_wq_enqueue
_nwk_wq_thread_func
_nx_allocate_metadata_range
_nx_bio_doread
_nx_bio_doread_callback
_nx_block_out_physical_range
_nx_block_out_physical_range_internal
_nx_calculate_metadata_parameters
_nx_cancel_block_out
_nx_check_checkpoint_map_block
_nx_check_recent_sanity
_nx_check_recent_sanity_omap
_nx_check_superblock
_nx_checkpoint_data_block_address
_nx_checkpoint_desc_block_address
_nx_checkpoint_find_highest_xid
_nx_checkpoint_find_valid_checkpoint
_nx_checkpoint_load_data
_nx_checkpoint_traverse
_nx_checkpoint_validate_checkpoint_map_blocks
_nx_container_keybag_helper
_nx_corruption_detected_int
_nx_debug_find_xdstream_cb
_nx_defrag
_nx_defrag_hdd_boot_files
_nx_destroy_incompletely_restored_volumes
_nx_dev_init
_nx_evict_efi_record
_nx_evict_omap_tree
_nx_evict_physical_tree
_nx_evict_physical_tree_in_snap
_nx_find_free_blocks_callback
_nx_fsw_prov_mib_get
_nx_fsw_prov_params
_nx_fsw_prov_params_0
_nx_fsw_prov_params_1
_nx_fsw_prov_params_2
_nx_fsw_prov_params_3
_nx_fsw_prov_params_adjust
_nx_fusion_superblock_write
_nx_fx_defrag_do_defrag_thread
_nx_fx_defrag_get_progress
_nx_fx_defrag_get_regions
_nx_fx_defrag_get_stats
_nx_fx_defrag_identify_ranges
_nx_get_block_count_per_dev
_nx_get_defrag_state_for_volume
_nx_get_efi_file
_nx_get_evict_mapping_tree
_nx_get_fsindex
_nx_get_minimal_tier_size
_nx_get_next_free_blocks_from_free_extents_tree
_nx_get_role_volume_uuid
_nx_get_stat_counter
_nx_get_stats
_nx_get_volume
_nx_get_volume_group
_nx_global_extent_manipulation_lock
_nx_global_extent_manipulation_unlock
_nx_init
_nx_init_phys
_nx_is_panic_on_corruption_enabled
_nx_is_removable
_nx_keybag_create
_nx_keybag_create_rollingkey
_nx_keybag_default_rollingkey
_nx_keybag_delete
_nx_keybag_evict
_nx_keybag_lookup
_nx_keybag_lookup_rollingkey
_nx_keybag_payload_get
_nx_keybag_payload_set
_nx_keybag_setup_with_placeholder_nx
_nx_keybag_wipe
_nx_mbq_destroy
_nx_mbq_empty
_nx_mbq_empty_0
_nx_mbq_init
_nx_mbq_safe_destroy
_nx_mbq_safe_purge
_nx_mbq_safe_purge_0
_nx_metadata_fragmented_block_address_lookup
_nx_metadata_fragmented_extent_list_tree_cache_clear
_nx_metadata_fragmented_extent_list_tree_free
_nx_metadata_fragmented_extent_list_tree_get
_nx_metadata_fragmented_extent_list_tree_mark_extents_allocated
_nx_metadata_fragmented_extent_list_tree_store
_nx_metadata_fragmented_sanity_check
_nx_metadata_range_add
_nx_metadata_range_add_btree_callback
_nx_metadata_range_check_and_insert
_nx_metadata_range_overlap_check
_nx_minimal_storage_size_for_file_systems
_nx_mon_parent_rxsync
_nx_mon_parent_txsync
_nx_mount
_nx_mount_add_fxd_state
_nx_mount_fxd_upgrade
_nx_mount_initiate_free_space_trims
_nx_mount_rm_fxd_state
_nx_mount_trim_thread
_nx_netif_alloc_packet
_nx_netif_compat_ring_alloc
_nx_netif_copy_stats
_nx_netif_ctl_flow_del
_nx_netif_default_drop_sysctl
_nx_netif_llink_module_fini
_nx_netif_mbuf_chain_info
_nx_netif_netagent_fill_flow_info
_nx_netif_netagent_handle_custom_ether_flow_add
_nx_netif_netagent_handle_flow_del
_nx_netif_netagent_handle_interpose_flow_add
_nx_netif_pkt_chain_info
_nx_netif_qset_release
_nx_obj_cache_reset
_nx_panic_on_corruption
_nx_pktq_destroy
_nx_pktq_init
_nx_pktq_safe_destroy
_nx_port_defunct
_nx_port_foreach
_nx_port_get_info
_nx_port_get_na
_nx_ratelimit_log_allowed
_nx_reap_list_init
_nx_reap_list_init_phys
_nx_reaper_add
_nx_reaper_add_sub_object
_nx_reaper_check_for_work
_nx_reaper_checkpoint_traverse
_nx_reaper_get
_nx_reaper_init
_nx_reaper_init_phys
_nx_reaper_obj_get
_nx_reaper_revert_shut_down
_nx_reaper_shut_down
_nx_reaper_thread
_nx_reaper_wait
_nx_reaper_wakeup
_nx_register_fs_mount_unmount
_nx_resize
_nx_resize_free_old_metadata
_nx_resize_free_old_metadata_btree_callback
_nx_resize_free_old_metadata_extent
_nx_resize_roundup
_nx_rw_update
_nx_set_stat_counter
_nx_should_abort_extent_manipulation
_nx_superblock_agrees_with_main_superblock
_nx_superblock_sanity_check_extent
_nx_thread_shutdown
_nx_thread_start
_nx_unblock_physical_range
_nx_unmount
_nx_unregister_fs_mount_unmount
_nx_update_efi_record
_nx_update_stat_counter
_nx_volume_group_add
_nx_volume_group_ctx_get
_nx_volume_group_ctx_get_if_rosv_config
_nx_volume_group_ctx_release
_nx_volume_group_destitch_firmlinks
_nx_volume_group_free_ctx
_nx_volume_group_get
_nx_volume_group_get_firmlinks
_nx_volume_group_get_volume_indices
_nx_volume_group_get_volumes_with_ctx
_nx_volume_group_has_role
_nx_volume_group_manual_update
_nx_volume_group_remove
_nx_volume_group_replace_id
_nx_volume_group_set
_nx_volume_group_update
_nx_volume_groups_destroy
_nx_volume_groups_key_cmp
_nxdom_find
_nxdom_prov_find
_nxdom_prov_find_uuid
_nxprov_create_kern
_nxprov_detacher
_obj_alloc
_obj_async_poll
_obj_async_wait
_obj_cache_create
_obj_cache_destroy
_obj_cache_enqueue_deferred_update
_obj_cache_ephemeral_adjust
_obj_cache_flush
_obj_cache_flush_if_needed
_obj_cache_flush_needed_count
_obj_cache_flush_prepare
_obj_cache_flush_unprepare
_obj_cache_flush_write
_obj_cache_gc_internal
_obj_cache_lock_by_state
_obj_cache_perform_deferred_updates
_obj_cache_remove
_obj_cache_remove_new_fs_objects
_obj_cache_remove_reverted_fs_objects
_obj_cache_reset
_obj_cache_tx_start_closing
_obj_cache_unlock_by_state
_obj_cache_unlock_write
_obj_checkpoint_check_for_unknown
_obj_checkpoint_done
_obj_checkpoint_get
_obj_checkpoint_known
_obj_checkpoint_start
_obj_checkpoint_traverse
_obj_checksum_set
_obj_checksum_set_phys
_obj_checksum_verify
_obj_checksum_verify_phys
_obj_clone
_obj_create
_obj_create_backdated
_obj_create_bootstrap
_obj_create_internal
_obj_delete_and_free_by_oid
_obj_delete_internal
_obj_descriptor_and_flags_for_type
_obj_destroy
_obj_destroy_complete
_obj_destroy_for_obj
_obj_dirty
_obj_dirty_locked
_obj_ephemeral_set_persistent
_obj_exchange_phys
_obj_free
_obj_free_list_remove
_obj_get
_obj_get_callback
_obj_get_finish
_obj_init
_obj_lock
_obj_lock_has_pending_writers
_obj_modify
_obj_refcount
_obj_reference_release_wait
_obj_release
_obj_retain
_obj_set_encrypted
_obj_set_encrypted_locked
_obj_set_skip_checkpoint_traverse
_obj_snapshot_ref_update
_obj_type_contains_ephemeral
_obj_type_is_or_contains_ephemeral
_obj_unlock
_obj_update_rw_stats
_obj_update_stat_counter
_obj_write
_obj_write_prepare
_object_in_jhash
_oc_dummy_lock_safe
_off_in_fext
_oh70aLVr
_oidForPubKeyLength
_omac1_aes_128
_omap_checkpoint_traverse
_omap_conversion
_omap_create
_omap_delete
_omap_destroy
_omap_evict_range
_omap_evict_range_mappings
_omap_evict_state_init
_omap_expunge_oids_below_watermark
_omap_find_next_snapshot_xid
_omap_get
_omap_init
_omap_init_phys
_omap_key_val_snprintf
_omap_map_tree_get
_omap_obj_destroy
_omap_obj_get
_omap_obj_modify
_omap_reap
_omap_recent_sanity_callback
_omap_revert_to_snapshot
_omap_set
_omap_snapshot_create
_omap_snapshot_delete
_omap_snapshot_key_val_snprintf
_omap_snapshot_set_busy
_omap_tree_leaf_extents_callback
_onekey_get_vek
_open_journal_dev
_openat_nocancel
_operation_is_forbidden
_orphan_snap_check_iterator
_os_cpu_copy_in_cksum
_os_cpu_in_cksum
_os_cpu_in_cksum_mbuf
_os_log_context_free
_os_log_info_enabled
_os_log_info_enabled_0
_os_memcmp_mask_16B
_os_memcmp_mask_32B
_os_memcmp_mask_48B
_os_memcmp_mask_64B
_os_memcmp_mask_80B
_os_ref_init_count_internal
_os_ref_init_count_mask
_os_ref_panic_live
_os_ref_panic_overflow
_os_ref_panic_resurrection
_os_ref_panic_underflow
_os_ref_release_locked_internal
_os_ref_retain_acquire_mask_internal
_os_ref_retain_internal
_os_ref_retain_internal_0
_os_ref_retain_locked_internal
_os_ref_retain_mask_internal
_osenvironment_is_diagnostics
_osobject_release
_osobject_release_0
_osobject_release_1
_osobject_release_2
_osobject_retain
_overflow_extents
_packetStats(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_paired_apfs_is_or_was_sealed
_pal_serial_getc
_pal_serial_getc_0
_pal_serial_getc_1
_pal_serial_putc_nocr
_pal_serial_putc_nocr_0
_pal_serial_putc_nocr_1
_pal_serial_putc_nocr_2
_panic_cs_blob_backref_mismatch
_panic_display_compressor_stats
_panic_display_ecc_errors
_panic_display_kernel_aslr
_panic_display_kernel_uuid
_panic_display_model_name
_panic_kernel
_panic_label_set_sentinel
_panic_label_set_sentinel_0
_panic_proc_ro_proc_backref_mismatch
_panic_proc_ro_task_backref_mismatch
_panic_sigacts_backref_mismatch
_panic_unimplemented
_panic_validate_ptr
_panic_with_thread_kernel_state
_parseMacAddress(ether_addr *,char *)
_parseNANAttributes(OSObject *,uchar *,ushort)
_parse_chain
_parse_chain_0
_parse_ec_chain
_parse_extensions
_parse_extensions_0
_patch_low_glo_static_region
_patch_low_glo_vm_page_info
_pbuf_clone_to_mbuf
_pbuf_destroy
_pbuf_ensure_writable
_pbuf_get_packet_buffer_address
_pbuf_get_service_class
_pbuf_inet6_cksum
_pbuf_inet_cksum
_pbuf_init_mbuf
_pbuf_init_memory
_peerPacketStats(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_pending_event_destroy
_pending_event_entry_destroy
_perfcontrol_callout_stat_avg
_perfmon_config_add_event
_perfmon_config_create
_perfmon_config_set_attr
_perfmon_configure
_perfmon_cpmu_configure_xcall
_perfmon_dev_clone
_perfmon_machine_reset
_perfmon_machine_sample_regs
_perfmon_machine_startup
_performAESCBCDecryption
_performAESonSamplesIOMD
_performHWAESLSKD
_performHWAESOnBufferLSKD
_performHWAESOnGlobalBuffer
_permitUnrestrictedDebugging(void)
_permit_unrestricted_debugging
_persona_proc_adopt_id
_persona_proc_inherit
_persona_uuid_is_valid
_personas_bootstrap
_pext_clamp
_pext_lookup_gt
_pf_addr_inc
_pf_addrcpy
_pf_anchor_global_RB_FIND
_pf_anchor_global_RB_INSERT
_pf_anchor_global_RB_NFIND
_pf_anchor_node_RB_FIND
_pf_anchor_node_RB_INSERT
_pf_anchor_node_RB_NFIND
_pf_anchor_remove
_pf_calc_skip_steps
_pf_calendar_time_second
_pf_calendar_time_second_0
_pf_calendar_time_second_1
_pf_calendar_time_second_2
_pf_change_a
_pf_change_a6
_pf_change_addr
_pf_change_ap
_pf_change_icmp
_pf_find_fragment_by_ipv4_header
_pf_find_fragment_by_ipv6_header
_pf_find_fragment_tag
_pf_find_state
_pf_find_state_byid
_pf_flush_fragments
_pf_frag_tree_RB_FIND
_pf_frag_tree_RB_INSERT
_pf_frag_tree_RB_NFIND
_pf_get_ruleset_number
_pf_hash_rule_addr
_pf_ifnet_hook
_pf_inet6_hook
_pf_inet_hook
_pf_init_ruleset
_pf_lazy_makewritable
_pf_match
_pf_match_addr
_pf_match_port
_pf_match_uid
_pf_match_uid_0
_pf_match_xport
_pf_mv_pool
_pf_normalize_init
_pf_normalize_isempty
_pf_osfp_find
_pf_osfp_fingerprint
_pf_osfp_flush
_pf_osfp_initialize
_pf_pull_hdr
_pf_purge_thread_fn
_pf_rule_copyin
_pf_send_icmp
_pf_setup_pfsync_matching
_pf_socket_lookup
_pf_src_tree_RB_FIND
_pf_src_tree_RB_INSERT
_pf_src_tree_RB_NFIND
_pf_state_compare_ext_gwy
_pf_state_compare_lan_ext
_pf_state_tree_ext_gwy_RB_FIND
_pf_state_tree_ext_gwy_RB_INSERT
_pf_state_tree_ext_gwy_RB_INSERT_COLOR
_pf_state_tree_ext_gwy_RB_MINMAX
_pf_state_tree_ext_gwy_RB_NEXT
_pf_state_tree_ext_gwy_RB_NFIND
_pf_state_tree_ext_gwy_RB_REMOVE
_pf_state_tree_ext_gwy_RB_REMOVE_COLOR
_pf_state_tree_ext_gwy_RB_SETCOLOR
_pf_state_tree_ext_gwy_RB_SETPARENT
_pf_state_tree_id_RB_FIND
_pf_state_tree_id_RB_INSERT
_pf_state_tree_id_RB_NFIND
_pf_state_tree_lan_ext_RB_FIND
_pf_state_tree_lan_ext_RB_INSERT
_pf_state_tree_lan_ext_RB_INSERT_COLOR
_pf_state_tree_lan_ext_RB_MINMAX
_pf_state_tree_lan_ext_RB_NEXT
_pf_state_tree_lan_ext_RB_NFIND
_pf_state_tree_lan_ext_RB_REMOVE
_pf_state_tree_lan_ext_RB_REMOVE_COLOR
_pf_state_tree_lan_ext_RB_SETCOLOR
_pf_state_tree_lan_ext_RB_SETPARENT
_pf_tag_packet
_pf_tag_ref
_pf_tagname2tag_ext
_pf_tbladdr_remove
_pf_tbladdr_setup
_pf_test_mbuf
_pf_test_mbuf_0
_pf_translate_icmp_af
_pfclose
_pfi_clear_flags
_pfi_dynaddr_copyout
_pfi_kif_get
_pfi_match_addr
_pfkur_tree_insert
_pfkur_tree_is_empty
_pfkur_tree_iterate_pfkursos
_pfkur_tree_key_val_snprintf
_pfkur_tree_lookup
_pfkur_tree_remove
_pfkur_tree_update
_pfopen
_pfr_detach_table
_pfr_initialize
_pfr_update_stats
_pgsignal
_phyModeForAsr(apple80211_scan_result *)
_phystokv_range
_pid_channelinfo
_pid_hibernate
_pid_kqueueinfo
_pid_pipeinfo
_pid_pseminfo
_pid_pshminfo
_pid_shutdown_sockets
_pid_socketinfo
_pid_vnodeinfo
_pin_blocks_if_needed
_pinst_spsel_1
_pipe_close
_pkt_copypkt_sum
_pktap_filter_evaluate
_pktap_finalize_proc_info
_pktap_init
_pktap_output
_pktap_v2_finalize_proc_info
_pktsched_abs_to_nsecs
_pktsched_get_pkt_sfb_vars
_pktsched_get_pkt_svc
_pktsched_get_pkt_vars
_pktsched_init
_pktsched_nsecs_to_abstime
_pktsched_pkt_encap
_pktsched_pkt_encap_chain
_platform_set_container
_platform_start
_pmap_accept_iommu_addr
_pmap_attribute_cache_sync
_pmap_bootloader_page
_pmap_bootloader_page_0
_pmap_create_options
_pmap_cs_assert_addr
_pmap_cs_associations_SPLAY
_pmap_cs_associations_SPLAY_INSERT
_pmap_cs_associations_SPLAY_MINMAX
_pmap_cs_associations_SPLAY_REMOVE
_pmap_cs_code_directories_RB_FIND
_pmap_cs_code_directories_RB_INSERT
_pmap_cs_code_directories_RB_NFIND
_pmap_find_io_attr
_pmap_free_pages
_pmap_free_pages_span
_pmap_has_managed_page
_pmap_hibernate_invoke
_pmap_image4_get_object_spec_from_index
_pmap_iommu_grant_page_internal
_pmap_iommu_ioctl_internal
_pmap_iommu_iovmalloc_internal
_pmap_iommu_iovmfree_internal
_pmap_iommu_map_internal
_pmap_iommu_unmap
_pmap_iommu_unmap_internal
_pmap_is_bad_ram
_pmap_pin_kernel_pages
_pmap_ppl_lockdown_pages
_pmap_ppl_unlockdown_pages
_pmap_ref_iommu_table
_pmap_release_iommu_page
_pmap_remove_range
_pmap_require
_pmap_ro_zone_bzero_internal
_pmap_ro_zone_memcpy_internal
_pmap_ro_zone_validate_element
_pmap_ro_zone_validate_element_dst
_pmap_sync_page_data_phys
_pmap_sync_page_data_phys_0
_pmap_sync_wimg
_pmap_trim
_pmap_valid_address
_pmap_valid_page
_pmap_validate_iommu_addr
_pmap_verify_free
_pmap_virtual_region
_pmap_vtophys
_pmu_status
_pool_init
_posix_cred_access
_posix_cred_create
_posix_cred_label
_post_kev_in_arpfailure
_post_rename
_pow
_pow_f
_pow_f_0
_powf_0
_pp_buf_seg_ctor
_pp_buf_seg_dtor
_pp_find_upp
_pp_free_pktq
_pp_isempty_upp
_pp_reap_caches
_pp_remove_upp_bft
_ppl_bootstrap_dispatch
_ppl_trampoline_start
_ppp_comp_ccp
_ppp_comp_close
_ppp_comp_compress
_ppp_comp_decompress
_ppp_comp_dispose
_ppp_comp_incompress
_ppp_dequeue
_ppp_domain_dispose
_ppp_domain_init
_ppp_enqueue
_ppp_if_add_proto
_ppp_if_attach
_ppp_if_attachclient
_ppp_if_attachlink
_ppp_if_control
_ppp_if_del_proto
_ppp_if_demux
_ppp_if_detachclient
_ppp_if_detachlink
_ppp_if_dispose
_ppp_if_error
_ppp_if_frameout
_ppp_if_if_free
_ppp_if_init
_ppp_if_input
_ppp_if_ioctl
_ppp_if_send
_ppp_if_set_bpf_tap
_ppp_if_start
_ppp_if_xmit
_ppp_ip_af_src_in
_ppp_ip_af_src_out
_ppp_ip_attach
_ppp_ip_bootp_client_in
_ppp_ip_bootp_server_in
_ppp_ip_detach
_ppp_ip_dispose
_ppp_ip_init
_ppp_ip_input
_ppp_ip_ioctl
_ppp_ip_preoutput
_ppp_ipv6_attach
_ppp_ipv6_detach
_ppp_ipv6_dispose
_ppp_ipv6_init
_ppp_ipv6_input
_ppp_ipv6_ioctl
_ppp_link_attach
_ppp_link_attachclient
_ppp_link_control
_ppp_link_detach
_ppp_link_event
_ppp_link_findfreeindex
_ppp_link_input
_ppp_link_logmbuf
_ppp_link_send
_ppp_module_start
_ppp_module_stop
_ppp_prepend
_ppp_proto_add
_ppp_proto_attach
_ppp_proto_free
_ppp_proto_input
_ppp_proto_ioctl
_ppp_proto_remove
_ppp_proto_send
_pppisr_thread
_pppserial_close
_pppserial_dispose
_pppserial_getm
_pppserial_init
_pppserial_input
_pppserial_ioctl
_pppserial_lk_ioctl
_pppserial_lk_output
_pppserial_logchar
_pppserial_open
_pppserial_ouput
_pppserial_start
_pr_init_old
_pre_unp_init
_preallocate_check_requested_space
_preallocate_get_newallocedsize
_preallocate_inline
_preallocate_transfer_fext
_prepareSampleSizesIOMD
_prepareSampleSizesIOMD_0
_prepareSampleSizesIOMD_1
_prepareSampleSizesIOMD_2
_prevent_synthetic_object_operation
_prf
_printBytes
_printDataPathInfo(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_printMac(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_printServiceInfo(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_printf_log_locked
_priority_is_urgent
_priority_queue_remove_root(priority_queue_min *)
_priority_queue_remove_root(priority_queue_sched_min *)
_priv_check_cred
_proc_apply_resource_actions
_proc_apply_syscall_masks
_proc_check_footprint_priv
_proc_check_inherit_ipc_ports(proc *,vnode *,long long,vnode *,long long,vnode *)
_proc_check_run_cs_invalid(proc *)
_proc_csflags_clear
_proc_csflags_set
_proc_csflags_update
_proc_darwin_role_to_task_role
_proc_fdlist
_proc_find_by_args
_proc_findthread
_proc_get_ro
_proc_get_sandbox
_proc_get_syscall_filter_mask_size
_proc_getcsflags
_proc_getpid
_proc_info_extended_id
_proc_info_internal
_proc_is_alien
_proc_isinitproc
_proc_kernmsgbuf
_proc_limitsetcur_fsize
_proc_min_sdk
_proc_parent_audit_token
_proc_pid_rusage
_proc_pidfileportinfo
_proc_pidipctableinfo
_proc_pidoriginatorinfo
_proc_pidoriginatoruuid
_proc_pidregioninfo
_proc_pidtaskinfo
_proc_pidthreadinfo
_proc_pidversion
_proc_pidworkqueueinfo
_proc_platform
_proc_restore_resource_actions
_proc_ro_alloc
_proc_ro_ref_task
_proc_ro_release_proc
_proc_ro_release_task
_proc_sdk
_proc_selfcsflags
_proc_selfpgrpid
_proc_selfpid
_proc_selfppid
_proc_set_syscall_filter_callbacks
_proc_set_task
_proc_set_ucred
_proc_setpidversion
_proc_setplatformdata
_proc_syscall_filter_mask
_proc_syscall_filter_mask_set
_proc_task
_proc_tier_to_iopol
_proc_ucred
_proc_uniqueid
_proc_uniqueid_task
_proc_update_creds_onproc
_proc_uuid_policy
_proc_uuid_policy_init
_proc_uuid_policy_lookup
_processor_active_thread_no_smt
_processor_get_assignment
_processor_info_count
_processor_set_default
_processor_set_default_0
_processor_set_info
_processor_set_statistics
_processor_set_tasks_with_flavor
_procinit
_profile_get_dynamic_state
_profile_init_0
_profile_release_persistent
_profile_syscallmask_destroy
_proto_hash_value
_proto_input
_proto_plumb
_proto_register_plumber
_proto_unplumb
_proto_unregister_input
_protoctl_event_enqueue_nwk_wq_entry
_protons_fini
_protons_token_has_matching_pid
_protons_token_tree_RB_FIND
_protons_token_tree_RB_NFIND
_pru_sanitize
_psem_cache_init
_pset_available_cpu_count
_pset_has_stealable_rt_threads
_pset_rt_init
_pset_rt_init_0
_pset_should_accept_spilled_thread
_pshm_stat
_pshmhead_RB_FIND
_pshmhead_RB_INSERT
_pshmhead_RB_NFIND
_psynch_cvbroad
_psynch_cvclrprepost
_psynch_cvsignal
_psynch_cvwait
_psynch_mutexdrop
_psynch_mutexwait
_psynch_rw_longrdlock
_psynch_rw_rdlock
_psynch_rw_unlock
_psynch_rw_wrlock
_psynch_rw_yieldwrlock
_psynch_zoneinit
_ptcclose
_ptcopen
_ptcwakeup
_pthread_init
_pthread_kext_register
_pthread_start
_ptmx_get_name
_ptmx_kqops_detach
_ptrauth_utils_auth_blob_generic
_ptrauth_utils_sign_blob_generic
_ptsclose
_ptsd_kqops_detach
_ptsd_kqops_process
_ptsread
_ptsstart
_ptsstop
_ptswrite
_pty_get_ioctl
_pty_get_name
_pty_init
_punch_hole_range_file
_purgatory_cleaner_cb
_purgatory_cleaner_wakeup
_push_ext
_putLockersInStorage
_putchar_asl
_pzfind
_q_to_b
_random_init
_random_write
_ranges_cmp
_raw_attach
_raw_clone_fexts
_raw_entry_remove
_raw_entry_wakeup_locked
_raw_ino_loader
_raw_ino_split
_raw_lookup_name_iterator
_raw_xattr_remover
_rb_head_RB_FIND
_rb_head_RB_INSERT
_rb_head_RB_INSERT_COLOR
_rb_head_RB_INSERT_COLOR_0
_rb_head_RB_INSERT_COLOR_1
_rb_head_RB_INSERT_COLOR_10
_rb_head_RB_INSERT_COLOR_11
_rb_head_RB_INSERT_COLOR_12
_rb_head_RB_INSERT_COLOR_13
_rb_head_RB_INSERT_COLOR_14
_rb_head_RB_INSERT_COLOR_2
_rb_head_RB_INSERT_COLOR_3
_rb_head_RB_INSERT_COLOR_4
_rb_head_RB_INSERT_COLOR_5
_rb_head_RB_INSERT_COLOR_6
_rb_head_RB_INSERT_COLOR_7
_rb_head_RB_INSERT_COLOR_8
_rb_head_RB_INSERT_COLOR_9
_rb_head_RB_MINMAX
_rb_head_RB_MINMAX_0
_rb_head_RB_MINMAX_1
_rb_head_RB_MINMAX_10
_rb_head_RB_MINMAX_11
_rb_head_RB_MINMAX_12
_rb_head_RB_MINMAX_13
_rb_head_RB_MINMAX_14
_rb_head_RB_MINMAX_2
_rb_head_RB_MINMAX_3
_rb_head_RB_MINMAX_4
_rb_head_RB_MINMAX_5
_rb_head_RB_MINMAX_6
_rb_head_RB_MINMAX_7
_rb_head_RB_MINMAX_8
_rb_head_RB_MINMAX_9
_rb_head_RB_NEXT
_rb_head_RB_NEXT_0
_rb_head_RB_NEXT_1
_rb_head_RB_NEXT_10
_rb_head_RB_NEXT_11
_rb_head_RB_NEXT_12
_rb_head_RB_NEXT_13
_rb_head_RB_NEXT_14
_rb_head_RB_NEXT_2
_rb_head_RB_NEXT_3
_rb_head_RB_NEXT_4
_rb_head_RB_NEXT_5
_rb_head_RB_NEXT_6
_rb_head_RB_NEXT_7
_rb_head_RB_NEXT_8
_rb_head_RB_NEXT_9
_rb_head_RB_NFIND
_rb_head_RB_REMOVE
_rb_head_RB_REMOVE_0
_rb_head_RB_REMOVE_1
_rb_head_RB_REMOVE_10
_rb_head_RB_REMOVE_11
_rb_head_RB_REMOVE_12
_rb_head_RB_REMOVE_13
_rb_head_RB_REMOVE_14
_rb_head_RB_REMOVE_2
_rb_head_RB_REMOVE_3
_rb_head_RB_REMOVE_4
_rb_head_RB_REMOVE_5
_rb_head_RB_REMOVE_6
_rb_head_RB_REMOVE_7
_rb_head_RB_REMOVE_8
_rb_head_RB_REMOVE_9
_rb_head_RB_REMOVE_COLOR
_rb_head_RB_REMOVE_COLOR_0
_rb_head_RB_REMOVE_COLOR_1
_rb_head_RB_REMOVE_COLOR_10
_rb_head_RB_REMOVE_COLOR_11
_rb_head_RB_REMOVE_COLOR_12
_rb_head_RB_REMOVE_COLOR_13
_rb_head_RB_REMOVE_COLOR_14
_rb_head_RB_REMOVE_COLOR_2
_rb_head_RB_REMOVE_COLOR_3
_rb_head_RB_REMOVE_COLOR_4
_rb_head_RB_REMOVE_COLOR_5
_rb_head_RB_REMOVE_COLOR_6
_rb_head_RB_REMOVE_COLOR_7
_rb_head_RB_REMOVE_COLOR_8
_rb_head_RB_REMOVE_COLOR_9
_rb_head_RB_SETCOLOR
_rb_head_RB_SETCOLOR_0
_rb_head_RB_SETCOLOR_1
_rb_head_RB_SETCOLOR_10
_rb_head_RB_SETCOLOR_11
_rb_head_RB_SETCOLOR_12
_rb_head_RB_SETCOLOR_13
_rb_head_RB_SETCOLOR_14
_rb_head_RB_SETCOLOR_2
_rb_head_RB_SETCOLOR_3
_rb_head_RB_SETCOLOR_4
_rb_head_RB_SETCOLOR_5
_rb_head_RB_SETCOLOR_6
_rb_head_RB_SETCOLOR_7
_rb_head_RB_SETCOLOR_8
_rb_head_RB_SETCOLOR_9
_rb_head_RB_SETPARENT
_rb_head_RB_SETPARENT_0
_rb_head_RB_SETPARENT_1
_rb_head_RB_SETPARENT_10
_rb_head_RB_SETPARENT_11
_rb_head_RB_SETPARENT_12
_rb_head_RB_SETPARENT_13
_rb_head_RB_SETPARENT_14
_rb_head_RB_SETPARENT_2
_rb_head_RB_SETPARENT_3
_rb_head_RB_SETPARENT_4
_rb_head_RB_SETPARENT_5
_rb_head_RB_SETPARENT_6
_rb_head_RB_SETPARENT_7
_rb_head_RB_SETPARENT_8
_rb_head_RB_SETPARENT_9
_rb_node_compare
_rc4_skip
_rc_to_errno
_re_queue_tail
_readBytesFromSampleSizesIOMD
_readBytesFromSampleSizesIOMD_0
_readBytesFromSampleSizesIOMD_1
_readHuffmanTable
_readHuffmanTable_0
_readHuffmanTable_1
_readUnit
_read_attr_data
_read_buf
_read_xattr_dstream
_receivedNANFollowup(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_reclaimFlushedPacket(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_recursivelyValidateEntitlements
_recursively_remove_children
_ref_key_op_der_to_enum
_reference_overlapping_ranges_in_zero_ref_tree
_reference_phys_range
_reference_remove_locked
_registerSleepWakeInterest
_registerSleepWakeInterest_0
_register_additional_panic_data_buffer
_register_crypto_functions
_releaseCacheNode(apple80211scan_cache_node *)
_releasePacketQueue(IO80211FlowQueue *,void *)
_releaseReqNode(apple80211scan_req_node *)
_releaseRequestNode(io80211_ranging_request_node *)
_releaseSamplesIOMD
_releaseSamplesIOMD_0
_releaseSamplesIOMD_1
_releaseSamplesIOMD_2
_release_crypto_state
_release_phys_range_lock_state
_release_xattr_context
_removeAllNANService(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_removeAllSession(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_removeNANService(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_removeNotifier(void *,int)
_removeNotifier2(OSObject *,void *,void *,void *,void *)
_removeRangingSession(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_remove_attribute_records
_remove_dir_entry
_remove_dirty_work_item_if_present
_remove_dstream_id_and_fexts_copy
_remove_eof_extents
_remove_extent_of_file
_remove_extents_of_file
_remove_extents_of_file_ext
_remove_fext
_remove_free_extent_list
_remove_hash_file_info_record
_remove_inode_doc_id
_remove_jobj
_remove_purgatory_entry
_remove_sibling_link
_remove_stale_dir_iterators
_rename
_renameat
_renameatx_np
_replace_desc
_reportTransmitStatus(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_report_forbidden
_reseed
_reseed_0
_reseed_1
_reseed_internal
_resetPeerPreferredChannelList(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_reset_file_ids
_restartable_init
_restoreServiceDescriptors(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_retain_crypto_states
_retain_id_n
_retain_xdstream_crypto_states
_retired_pages_count
_return_ek
_return_ekwk
_return_skey_ek
_return_skey_ekwk
_return_to_ppl
_revealCopy
_revert_extents_iterator
_revert_extents_to_snapshot
_revert_superblock_to_snapshot_superblock
_revert_to_snapshot
_rewrap_ek
_rewrap_ekwk
_rfc4594_dscp_to_tc
_rfc4594_sc_to_dscp
_rip6_bind
_rip6_connect
_rip6_ctlinput
_rip6_ctloutput
_rip6_pr_output
_rip6_send
_rip_abort
_rip_attach
_rip_bind
_rip_connect
_rip_ctloutput
_rip_detach
_rip_disconnect
_rip_send
_rip_unlock
_rl_add_0
_rl_collapse_backwards
_rl_collapse_backwards_0
_rl_collapse_forwards
_rl_collapse_forwards_0
_rl_overlap
_rl_overlap_0
_rl_remove
_rl_remove_0
_rl_remove_all_0
_rl_remove_all_0_0
_rl_scan_0
_rl_scan_from
_rl_subtract
_rl_subtract_0
_rmdir
_rn_inithead
_rn_lookup
_rn_lookup_args
_rn_refines
_rn_walktree
_rn_walktree_from
_rolling_stats_destroy
_rolling_stats_init
_rolling_stats_read
_rolling_stats_roll_window
_rootedRamdisk
_rootless_check_setflags
_rootless_forbid_xattr
_round
_round_page
_route_dinit
_route_event2str
_route_event2str_0
_route_event_init
_route_op_entitlement_check
_routefs_kernel_mount
_routefs_root
_routefs_vfs_getattr
_routegenid_update
_rsa_make_pub
_rsrc_borrow_parent_ekwk
_rsrc_move_parent_ekwk
_rsrc_uncache_ekwk
_rt6_flush
_rt_ifmsg
_rt_newmaddrmsg
_rt_primary_default
_rt_setexpire
_rt_str
_rt_validate
_rte_if_ref
_rtgw_to_sa6
_rtkey_to_sa6
_rts_detach
_run_queue_peek
_running_timers_deadline
_sDFTPermute
_sPFA3p1
_sPFA3p1o
_sPFA3p2
_sPFA3p2o
_sPFA4Final
_sPFA4Final2
_sPFA5p1
_sPFA5p1o
_sPFA5p2
_sPFA5p2o
_sPFA5p3
_sPFA5p3o
_sPFA5p4
_sPFA5p4o
_sPFAFFT
_sPFAFFT2
_sa6_embedscope
_sa6_recoverscope
_sa_copy
_sandbox_get_dynamic_state
_sandbox_init_extensions
_sandbox_release_persistent
_sandbox_syscallmask_destroy
_sanitize_drec_name_len
_sanitize_fext_iterator
_sanity_check_alloced_blocks
_sart_init
_save_btree_user_info
_save_dir_iterator
_sb_container_manager_request_append_app_group_id
_sb_container_manager_request_append_system_container_id
_sb_container_manager_request_append_system_group_container_id
_sb_container_manager_request_new
_sb_container_manager_request_send
_sb_empty_assert
_sb_notify
_sb_packbuff_alloc_vm_buffer
_sb_packbuff_free
_sb_packbuff_new
_sb_packbuff_pack_key_with_string_value
_sb_packbuff_realloc
_sb_packbuff_unpack_key_with_string_value
_sb_ustate_copy_app_group_container_path_for_id
_sb_ustate_copy_app_group_container_path_for_id_0
_sb_ustate_create
_sb_ustate_inspect
_sb_ustate_manager_add_ustate
_sb_ustate_manager_copy_ustate_for_uid
_sb_ustate_manager_init
_sb_ustate_manager_inspect
_sb_ustate_manager_remove_ustate
_sb_ustate_release
_sballoc
_sbappendmptcpstream_rcv
_sbappendstream_rcvdemux
_sbdroprecord
_sbrelease
_sbreserve
_sbspace
_sbtoxsockbuf
_sbtoxsockstat_n
_sbuf_bcat
_sbuf_cat
_sbuf_finish
_sbuf_printf
_sbuf_printf_0
_sbuf_printf_1
_sbuf_putc
_sbuf_setpos
_sbuf_trim
_sc_muladd
_sc_reduce
_scale_delta
_scale_setup
_scanc
_sched_amp_choose_node
_sched_amp_choose_thread
_sched_amp_processor_queue_empty
_sched_amp_processor_queue_has_priority
_sched_amp_pset_init
_sched_amp_qos_max_parallelism
_sched_amp_runq_stats_count_sum
_sched_amp_runq_stats_count_sum_0
_sched_amp_runq_stats_count_sum_1
_sched_amp_steal_thread_enabled
_sched_amp_thread_avoid_processor
_sched_amp_thread_eligible_for_pset
_sched_amp_thread_should_yield
_sched_dualq_init
_sched_dualq_processor_queue_empty
_sched_dualq_processor_queue_empty_0
_sched_dualq_processor_queue_has_priority
_sched_dualq_processor_queue_has_priority_0
_sched_rtlocal_runq_count_sum
_sched_stats_handle_csw
_sched_thread_should_yield
_sched_timeshare_consider_maintenance
_sched_traditional_processor_init
_sched_traditional_processor_queue_empty
_sched_traditional_processor_queue_has_priority
_sched_traditional_processor_runq_count
_sched_traditional_processor_runq_stats_count_sum
_sched_traditional_pset_init
_sched_traditional_with_pset_runqueue_init
_sched_traditional_with_pset_runqueue_processor_runq_stats_count_sum
_schedreseed
_scope6_addr2default
_scope6_ifattach
_scope6_setdefault
_scopyinstr
_search_crypto_hash_locked
_segtfreehead_RB_FIND
_segtfreehead_RB_INSERT
_segtfreehead_RB_NFIND
_selcontinue
_select_cleanup_uthread
_semaphore_signal
_semaphore_wait
_semaphore_wait_deadline
_semaphore_wait_noblock
_semaphore_wait_signal_trap
_sendIONotification
_send_file_descriptors_violation
_send_freeze_thaw_notification
_send_nspace_resolve_cancel
_send_port_space_violation
_sequence_repeat_generate
_serial_ack_irq
_serial_enable_irq
_serial_filter_irq
_serial_go_to_sleep
_serial_init
_serial_keyboard_poll
_serial_putc_crlf
_serviceFindAndRemove(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_serviceResponseSendToUserLand(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_service_response_init_context(serviceOperationDataCtx *,uchar *,ulong)
_service_response_tlv_checks(uchar *,ushort,ushort *,ushort *,ushort *,ushort *,uchar *)
_session_find_locked
_setBytes
_setFlagsCallback(OSObject const*,ulong long)
_setLockerInternal
_setLockerWithIDExternal
_setPeerState(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_setVolumeSpilloverProperty
_set_art_thread_call(void *,void *)
_set_art_thread_call(void *,void *)
_set_bp_ret
_set_cloneinfo_id_epoch
_set_fpscr
_set_fsblocksize
_set_ino_purgeable_state
_set_invalidate_hmac_function
_set_local_signing_public_key
_set_maintain_dir_size
_set_primary_ifscope
_set_rootvnode
_set_security_token
_setattrlist_setfinderinfo
_setbit
_seteuid
_seteuid_0
_seteuid_1
_setfirstlink
_setgroups
_setregid
_setreuid
_setsockopt
_setuid
_setup_demo_mode
_setup_dir_size
_setup_prot_class
_setutimes
_sfext_end
_sfext_iterator_entry_end
_sfext_iterator_next
_sfi_class_register
_sfi_ctl
_sfi_get_ledger_alias_for_class
_sfi_ledger_entry_add
_sfi_processor_needs_ast
_sfi_thread_needs_ast
_sflt_entry_release
_sflt_permission_check
_sfree_data
_sfree_match
_sha1_hardware_hook
_sha1_init
_sha1_loop
_sha1_prf
_sha256_prf
_sha256_vector
_shared_region_find_key
_shared_region_map_and_slide_cleanup
_shared_region_pager_data_initialize
_shared_region_pager_data_return
_shared_region_pager_dequeue
_shared_region_pager_dequeue_0
_shared_region_pager_dequeue_1
_shared_region_pager_dequeue_2
_shared_region_pager_synchronize
_shared_region_pivot
_should_embed_xattr
_should_pin_blocks
_shuffleVec4a
_shuffleVec4b
_shutdown
_shutdown_sockets_on_interface
_siginfo_user_to_user32
_siginfo_user_to_user64
_simple_remove_xattr
_sin
_sin6_get_ifscope
_sin_get_ifscope
_sin_set_ifscope
_sinf
_size_up_tbuffer
_sk3kcwm3l2
_sk_sa_has_port
_sk_uuid_unparse
_skey_insert
_skey_lookup
_skipTree
_skmem_arena_fini
_skmem_arena_fini_0
_skmem_arena_get_stats
_skmem_arena_nexus_sd_idle
_skmem_arena_reap
_skmem_cache_magazine_max
_skmem_cache_reap
_skmem_get_sysctls_obj
_skmem_region_for_pp
_skmem_region_get_stats
_skmem_sysctl_handle_int
_skmem_sysctl_init
_skoid_create
_skywalk_mac_system_check_proc_cred
_skywalk_mac_system_check_proc_cred_0
_skywalk_netif_direct_allowed
_sl_compress_init
_sl_uncompress_tcp
_sl_uncompress_tcp_core
_slab_nextptr_panic
_slab_remove
_slave_machine_init
_sm_aggr_delete
_sm_aggr_new
_sm_fqt_flip_persistent_callback
_smalloc_data
_smalloc_data_track
_smalloc_match
_smr_init
_snoop_callback
_snprintf
_so_drain_extended_bk_idle
_so_get_netsvc_marking_level
_so_get_recv_anyif
_so_inc_recv_data_stat
_so_isdstlocal
_so_recv_data_stat
_so_set_net_service_type
_so_set_recv_anyif
_so_set_restrictions
_so_tc2msc
_so_tc_from_control
_so_tc_update_stats
_so_tos_from_control
_so_update_policy
_so_wait_for_if_feedback
_soalloc
_socantrcvmore
_socantsendmore
_socanwrite
_sock_connectwait
_sock_freeaddr
_sock_getaddr
_sock_getpeername
_sock_getsockname
_sock_getsockopt
_sock_gettclassopt
_sock_gettype
_sock_inject_data_in
_sock_isconnected
_sock_isnonblocking
_sock_receive
_sock_receivembuf
_sock_send
_sock_sendmbuf
_sock_setpriv
_sock_setsockopt
_sock_setupcall
_sock_setupcalls
_sock_setupcalls_locked
_sock_socket_common
_socket
_socket_clear_traffic_mgt_flags
_socket_clear_traffic_mgt_flags_locked
_socket_getlock
_socket_post_kev_msg
_socket_post_kev_msg_closed
_socket_set_traffic_mgt_flags
_socket_set_traffic_mgt_flags_locked
_socket_unlock
_sockopt_copyin
_soclearfastopen
_socreate
_socreate_delegate
_sodereference
_sodisconnectlocked
_sodisconnectwakeup
_sodisconnectxlocked
_soevent
_soevupcall
_soflow_feat_set_functions
_sogetaddr_locked
_soioctl
_soisdisconnected
_soisdisconnecting
_soissrcbackground
_soissrcbesteffort
_soo_close
_soo_stat
_soopt_cred_check
_soopt_mcopyin
_soopt_mcopyout
_sooptcopyin
_sooptcopyout
_soreadable
_soreceive_ctl
_sorflush
_soshutdownlock
_soshutdownlock_final
_sotoxsocket_n
_sowflush
_sowwakeup
_spaceForLocker
_spaceman_allocated
_spaceman_allocation_init
_spaceman_available_space
_spaceman_cab_sanity_check
_spaceman_check_allocation_status_internal
_spaceman_check_free_space_on_host
_spaceman_checkpoint_traverse
_spaceman_cib_sanity_check
_spaceman_compare_currently_available_space
_spaceman_count_free_in_range
_spaceman_create
_spaceman_create_get_next_free_blocks
_spaceman_currently_available_space
_spaceman_datazone_destroy
_spaceman_datazone_init
_spaceman_decrement_free_queue_count
_spaceman_destroy
_spaceman_evaluate_chunk_for_disabled_allocation_zones
_spaceman_fq_over_threshold
_spaceman_fq_tree_find_overlap
_spaceman_fq_tree_get
_spaceman_fq_tree_insert
_spaceman_fq_tree_over_threshold
_spaceman_fq_trim_list_flush
_spaceman_free
_spaceman_free_completed
_spaceman_free_fs_deduct_block_counts
_spaceman_free_queue_key_cmp
_spaceman_free_queue_key_val_snprintf
_spaceman_free_queue_trim_list_init
_spaceman_free_up_some_blocks
_spaceman_freed
_spaceman_freed_internal
_spaceman_fs_bounds_clear
_spaceman_fs_bounds_set
_spaceman_fusion_space_info_on_tier
_spaceman_get
_spaceman_get_max_allowed_shrink
_spaceman_get_metazone_alloc_index
_spaceman_get_metazone_boundaries
_spaceman_get_new_chunk_for_allocation_zone
_spaceman_get_number_of_disabled_allocation_zones
_spaceman_get_prange_for_defrag
_spaceman_handle_metazone_freed
_spaceman_info
_spaceman_init
_spaceman_init_cab
_spaceman_init_cib
_spaceman_init_phys
_spaceman_initialize_allocation_zone_from_disk
_spaceman_ip_block_alloc
_spaceman_ip_block_free
_spaceman_ip_block_index
_spaceman_ip_bm_block_address
_spaceman_ip_bm_block_alloc
_spaceman_ip_bm_block_free
_spaceman_ip_extent_validate
_spaceman_ip_freed
_spaceman_is_allocated
_spaceman_is_block_out_range_free
_spaceman_iterate_bitmap_hints
_spaceman_iterate_free_extents_internal
_spaceman_manage_free_queues
_spaceman_metazone_get_partitions
_spaceman_metazone_get_size
_spaceman_metazone_init
_spaceman_modify_bits
_spaceman_range_reserved
_spaceman_resize
_spaceman_revert_alloc
_spaceman_sanitize_datazone
_spaceman_scan_free_blocks
_spaceman_search_bitmap_hints_for_space
_spaceman_set_block_out_range
_spaceman_set_soft_block_out_range
_spaceman_should_avoid_data_allocation_at_block
_spaceman_size_info
_spaceman_trim_free_extent_callback
_spaceman_trim_free_extent_flush
_spaceman_tx_complete
_spaceman_tx_start_closing
_spaceman_unreserve
_spaceman_unset_block_out_range
_spaceman_unset_soft_block_out_range
_spaceman_update_allocation_zone_boundaries
_spaceman_update_metazone_alloc_index
_spec_fsync
_spec_fsync_internal
_spec_pathconf
_spec_select
_sprintdgst_npx
_sqrt
_sqrtf
_sr_insert_fexts
_sr_remove_fexts
_srealloc_data
_sreallocf_data
_sstrdup_track
_sstrndup
_ssv_get_encrypted_data_vol_from_system
_stack_microstackshot
_stackshot_init
_stackshot_kern_return_to_bsd_error
_stackshot_memcpy
_startEffaceableBDEV
_startEffaceableStorage
_start_fixup_thread_if_needed
_stat
_stat64
_stat64_extended
_stat_extended
_storage_class_cache_insert
_storage_class_cache_invalidate
_storage_class_cache_lookup
_storage_class_get_name
_storeNANServiceDiscoveryResult(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_store_exclusive32
_strcasecmp
_strchr
_strcmp
_strdr
_strdup
_strerror
_string_prefix_allowed_iterate
_string_value_allowed_iterate
_strlcat
_strlcpy
_strlen
_strncasecmp
_strncat
_strncmp
_strncpy
_strnlen
_strnstr
_strprefix
_strrchr
_strrchr_0
_strsep_0
_strstr
_strtol
_strtoq
_strtou32_npx
_strtoul
_strtouq
_supplemental_tree_copy
_supplemental_tree_create
_supplemental_tree_destroy
_supplemental_tree_node_count
_supplemental_tree_revert
_suser
_suspendPeers(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_suword
_suword_0
_swap_dirs_cb
_swap_journal_header
_swapfile_pager_control
_swapfile_pager_data_initialize
_swapfile_pager_data_return
_swapfile_pager_setup
_swapfile_pager_synchronize
_swapfile_pager_synchronize_0
_switch_to_old_console
_symlink
_symlinkat
_sync
_sync_callback
_sync_internal_callback
_sync_thread
_sys_getdtablesize
_sys_getdtablesize_0
_syscall_builtin_query
_syscall_extension_release
_syscall_extension_update_file
_syscall_rootless_check_clear_storage_class
_syscall_rootless_clear_storage_class
_syscall_rootless_protected_volume
_syscall_rootless_set_storage_class
_syscallmask_apply_to_proc
_sysctl_action_filter
_sysctl_add_wire_count_over_global_limit
_sysctl_add_wire_count_over_global_limit_0
_sysctl_aiomax
_sysctl_aioprocmax
_sysctl_aiothreads
_sysctl_apfsprebootuuid
_sysctl_bootuuid
_sysctl_bpf_maxbufsize
_sysctl_change_ecn_setting
_sysctl_clockrate
_sysctl_cpu_quiescent_counter_interval
_sysctl_darkboot
_sysctl_def_policy
_sysctl_default_netsvctype_to_dscp_map
_sysctl_dequeue_max
_sysctl_dequeue_scidx
_sysctl_domainname
_sysctl_dumpentry
_sysctl_dumpentry_ext
_sysctl_dyld_flags
_sysctl_ephemeral_storage
_sysctl_filesetuuid
_sysctl_getset_int_debug_priv
_sysctl_global_no_user_wire_amount
_sysctl_grade_cputype
_sysctl_handle_int
_sysctl_handle_int2quad
_sysctl_handle_long
_sysctl_handle_long_0
_sysctl_handle_opaque
_sysctl_handle_string
_sysctl_hostname
_sysctl_if_ports_used_stats
_sysctl_igmp_gsr
_sysctl_igmp_gsr_0
_sysctl_igmp_ifinfo
_sysctl_initproc_spawned
_sysctl_io_compression_dump_stats
_sysctl_io_number
_sysctl_io_opaque
_sysctl_io_string
_sysctl_ip6_cga_conflict_retries
_sysctl_ip6_tempvltime
_sysctl_ip_input_getperf
_sysctl_ip_input_getperf_0
_sysctl_ip_input_measure_bins
_sysctl_ip_input_measure_bins_0
_sysctl_ip_input_measure_bins_1
_sysctl_ipsec_wake_packet
_sysctl_jetsam_set_sysprocs_idle_delay_time
_sysctl_jetsam_set_sysprocs_idle_delay_time_0
_sysctl_kdebug_ops
_sysctl_kern_debug_get_preoslog
_sysctl_kern_tcsm_available
_sysctl_libmalloc_experiments
_sysctl_load_brand_string
_sysctl_load_devicetree_entries
_sysctl_mach_bridge_conversion_params
_sysctl_maxproc
_sysctl_maxvnodes
_sysctl_memorypressure_manual_trigger
_sysctl_memorystatus_do_fastwake_warmup_all
_sysctl_memorystatus_freezer_thaw_percentage
_sysctl_memorystatus_freezer_thaw_percentage_0
_sysctl_memorystatus_freezer_thaw_percentage_1
_sysctl_memorystatus_freezer_thaw_percentage_bg
_sysctl_memorystatus_freezer_thaw_percentage_fg_non_xpc_service
_sysctl_memorystatus_vm_pressure_level
_sysctl_minimalboot
_sysctl_mld_ifinfo
_sysctl_mld_v2enable
_sysctl_msec_to_ticks
_sysctl_new_kernel
_sysctl_new_user
_sysctl_old_kernel
_sysctl_old_user
_sysctl_osenvironment
_sysctl_osproductversion
_sysctl_osproductversion_0
_sysctl_osproductversion_1
_sysctl_osvariant_status
_sysctl_osversion
_sysctl_pagesize32
_sysctl_pfz_start
_sysctl_ptmx_max
_sysctl_reset_ip_input_stats
_sysctl_reset_ip_input_stats_0
_sysctl_reset_ip_input_stats_1
_sysctl_restricted_port_bitmap
_sysctl_rexmtthresh
_sysctl_rxpoll_interval_time
_sysctl_rxpoll_mode_holdtime
_sysctl_rxpoll_sample_holdtime
_sysctl_safeboot
_sysctl_sb_max
_sysctl_sched_enable_smt
_sysctl_securelvl
_sysctl_serialdebugmode
_sysctl_set_osenvironment
_sysctl_set_v6_compliance_profile
_sysctl_settfp_policy
_sysctl_singleuser
_sysctl_slide
_sysctl_sndq_maxlen
_sysctl_sndq_maxlen_0
_sysctl_soqlencomp
_sysctl_swapusage
_sysctl_sysctl_bootargs
_sysctl_sysctl_debug
_sysctl_sysctl_name
_sysctl_sysctl_name2oid
_sysctl_sysctl_next
_sysctl_sysctl_oidfmt
_sysctl_targetsystemvolgroupuuid
_sysctl_tcp_sospace
_sysctl_test_ca_event
_sysctl_thread_groups_supported
_sysctl_time_since_reset
_sysctl_timer_user_us_kernel_abstime
_sysctl_tx_chain_len_stats
_sysctl_udp_sospace
_sysctl_use_kernelmanagerd
_sysctl_use_recovery_securityd
_sysctl_vfs_generic_conf
_sysctl_vfs_trace_paths
_sysctl_vfs_vfslist
_sysctl_wake_conttime
_sysctl_wakeuuid_not_set_last_if
_sysctlbyname
_sysdoproc_filt_KERN_PROC_PID
_t8020dart_dart_powerup_locked
_t8020dart_enable_translation_locked
_t8020dart_powerdown_locked
_t8020dart_smmu_powerup_locked
_t8020dart_validate_carveout_table
_t8020dart_verify_apf_reg
_t8020dart_verify_dart_reg
_t8020dart_verify_smmu_reg
_t8020dart_vo_tte
_t8020dart_write_or_verify_ttbr_locked
_tablefull
_tap(__ifnet *,uint,uint)
_task_clear_cpuusage
_task_convert_phys_footprint_limit
_task_get_default_manager_qos
_task_id_token_get_task(ucred *,proc_ident *,uint)
_task_importance_mark_donor
_task_inspect
_task_map_corpse_info
_task_register_dyld_shared_cache_image_info
_task_start_halt
_tcp6_input
_tcp6_usr_accept
_tcp6_usr_bind
_tcp6_usr_connect
_tcp6_usr_listen
_tcp_add_notify_ack_marker
_tcp_bwmeas_alloc
_tcp_cache_get_cookie
_tcp_cache_get_cookie_len
_tcp_cache_get_mptcp_version
_tcp_cache_set_cookie
_tcp_cache_update_mptcp_version
_tcp_canceltimers
_tcp_cansbgrow
_tcp_cc_adjust_nonvalidated_cwnd
_tcp_cc_delay_ack
_tcp_cc_init
_tcp_cc_resize_sndbuf
_tcp_ccdbg_control_connect
_tcp_ceil
_tcp_clear_keep_alive_offload
_tcp_compute_rcv_rtt
_tcp_connect_complete
_tcp_cubic_after_timeout
_tcp_cubic_init
_tcp_cubic_post_fr
_tcp_del_fsw_flow
_tcp_detect_bad_rexmt
_tcp_disconnect
_tcp_dooptions
_tcp_drain
_tcp_fill_info
_tcp_fill_keepalive_offload_frames
_tcp_fillheaders
_tcp_find_anypcb_byaddr
_tcp_flight_size
_tcp_free_sackholes
_tcp_gc
_tcp_get_connectivity_status
_tcp_get_max_pipeack
_tcp_getconninfo
_tcp_getlock
_tcp_getstat
_tcp_heuristic_do_ecn
_tcp_heuristic_do_ecn_with_address
_tcp_heuristic_do_mptcp
_tcp_heuristic_do_tfo
_tcp_heuristic_do_tfo_with_address
_tcp_heuristic_ecn_aggressive
_tcp_heuristic_ecn_aggressive_common
_tcp_heuristic_ecn_droprst
_tcp_heuristic_ecn_droprxmt
_tcp_heuristic_ecn_loss
_tcp_heuristic_ecn_success
_tcp_heuristic_ecn_synrst
_tcp_heuristic_inc_counters
_tcp_heuristic_mptcp_loss
_tcp_heuristic_mptcp_success
_tcp_heuristic_reset_counters
_tcp_heuristic_tfo_loss
_tcp_heuristic_tfo_middlebox
_tcp_heuristic_tfo_rst
_tcp_heuristic_tfo_success
_tcp_heuristics_ecn_update
_tcp_heuristics_tfo_update
_tcp_itimer
_tcp_keepalive_reset
_tcp_ledbat_after_idle
_tcp_ledbat_after_timeout
_tcp_ledbat_cwnd_init
_tcp_ledbat_delay_ack
_tcp_ledbat_init
_tcp_ledbat_post_fr
_tcp_ledbat_pre_fr
_tcp_ledbat_switch_cc
_tcp_log_inp_addresses
_tcp_log_pkt_addresses
_tcp_lookup_peer_pid_locked
_tcp_make_keepalive_frame
_tcp_newreno_ack_rcvd
_tcp_newreno_congestion_avd
_tcp_newreno_post_fr
_tcp_notify
_tcp_notify_ack_active
_tcp_notify_ack_id_valid
_tcp_notify_acknowledgement
_tcp_notsent_lowat_check
_tcp_pmtud_revert_segment_size
_tcp_remove_from_time_wait
_tcp_reset_stretch_ack
_tcp_rexmt_save_state
_tcp_rledbat_after_idle
_tcp_rledbat_get_rlwin
_tcp_rledbat_init
_tcp_rledbat_rwnd_init
_tcp_rledbat_switch_to
_tcp_round_up
_tcp_rxtseg_detect_bad_rexmt
_tcp_rxtseg_dsack_for_tlp
_tcp_rxtseg_find
_tcp_rxtseg_insert
_tcp_rxtseg_set_spurious
_tcp_rxtseg_total_size
_tcp_sack_adjust
_tcp_sack_byte_islost
_tcp_sack_detect_reordering
_tcp_sack_lost_rexmit
_tcp_sack_partialack
_tcp_sack_process_dsack
_tcp_sbrcv_grow
_tcp_sbrcv_trim
_tcp_send_implied_connect
_tcp_set_ecn
_tcp_set_lotimer_index
_tcp_set_max_rwinscale
_tcp_set_recv_bg
_tcp_set_tso
_tcp_sysctl_fastopenkey
_tcp_sysctl_info
_tcp_tfo_check
_tcp_tfo_gen_cookie
_tcp_tfo_write_cookie
_tcp_tfo_write_cookie_rep
_tcp_usr_abort
_tcp_usr_accept
_tcp_usr_bind
_tcp_usr_connect
_tcp_usr_listen
_tcp_usr_preconnect
_tcp_usr_rcvd
_tcp_usr_rcvoob
_tcp_usr_shutdown
_tcp_xmit_timer
_telemetry
_telemetry_init.2922
_telemetry_timer_event
_terminateEncryptedDPsessions(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_termios32to64
_termios64to32
_testbit
_thread_act_server_routine
_thread_call_func_delayed
_thread_call_func_delayed_with_leeway
_thread_call_setup
_thread_convert_thread_state
_thread_daemon_init
_thread_deallocate_daemon_register_queue
_thread_entrypoint
_thread_get_inheritor_turnstile_sched_priority
_thread_get_special_port
_thread_group_uses_immediate_ipi
_thread_handoff_parameter
_thread_ro_update_cred
_thread_ro_update_flags
_thread_set_policy
_thread_set_special_port
_thread_terminate_continue
_thread_terminate_continue_0
_thread_update_add_thread
_thread_user_promotion_qos_for_pri
_thread_userstack
_thread_userstackdefault
_thread_wakeup
_thread_wakeup_identify
_thread_wakeup_one_with_pri
_thread_wakeup_prim
_thread_wakeup_thread
_thread_wire
_thread_wire_internal
_thread_workq_qos_for_pri
_throttle_info_disable_throttle
_throttle_info_get_last_io_time
_throttle_info_mount_reset_period
_throttle_info_update
_throttle_info_update_0
_timer_call_past_deadline_timer_handle
_timer_call_setup
_timer_set_user_idle_level
_timer_sysctl_get
_timer_user_idle_level.29376
_timespec_is_valid
_timespec_to_apfs_timestamp
_timevalfix
_tm_cv_wait
_tmpfs_alloc_dirent
_tmpfs_alloc_file
_tmpfs_alloc_vp
_tmpfs_blktooff
_tmpfs_check_name
_tmpfs_check_parent_chain
_tmpfs_chflags
_tmpfs_chmod
_tmpfs_chown
_tmpfs_chsize
_tmpfs_chtimes
_tmpfs_close
_tmpfs_create
_tmpfs_dir_RB_INSERT
_tmpfs_dir_RB_INSERT_COLOR
_tmpfs_dir_RB_NEXT
_tmpfs_dir_RB_NEXT_0
_tmpfs_dir_RB_REMOVE
_tmpfs_dir_RB_REMOVE_COLOR
_tmpfs_dir_attach
_tmpfs_dir_attach.cold.1
_tmpfs_dir_attach_dup
_tmpfs_dir_destroy
_tmpfs_dir_detach
_tmpfs_dir_getdents
_tmpfs_dir_getdents.cold.1
_tmpfs_dir_lookup
_tmpfs_dir_next
_tmpfs_dirent_hash_func
_tmpfs_dirent_init
_tmpfs_dirent_matches
_tmpfs_extent_free
_tmpfs_extent_remove_and_free
_tmpfs_extents_free
_tmpfs_extents_head_RB_INSERT
_tmpfs_extents_head_RB_INSERT_COLOR
_tmpfs_extents_head_RB_NEXT
_tmpfs_extents_head_RB_PREV
_tmpfs_extents_head_RB_REMOVE
_tmpfs_extents_head_RB_REMOVE_COLOR
_tmpfs_extents_insert
_tmpfs_fhtovp
_tmpfs_fifo_read
_tmpfs_fifo_write
_tmpfs_free_dirent
_tmpfs_free_node
_tmpfs_fsync
_tmpfs_get_extent_overlapping_range
_tmpfs_get_parent
_tmpfs_getattr
_tmpfs_getxattr
_tmpfs_inactive
_tmpfs_initialize_file
_tmpfs_initialize_region
_tmpfs_io_lock_exclusive
_tmpfs_io_lock_shared
_tmpfs_io_lock_shared_0
_tmpfs_io_lock_shared_to_exclusive
_tmpfs_io_lock_shared_to_exclusive.cold.1
_tmpfs_is_dot_or_dot_dot
_tmpfs_itimes
_tmpfs_link
_tmpfs_listxattr
_tmpfs_lookup
_tmpfs_mkdir
_tmpfs_mknod
_tmpfs_mmap
_tmpfs_mount
_tmpfs_node_add_xattr
_tmpfs_node_free_xattrs
_tmpfs_node_list_xattr
_tmpfs_node_lookup_xattr
_tmpfs_node_remove_xattr
_tmpfs_offtoblk
_tmpfs_open
_tmpfs_pagein
_tmpfs_pagein_range
_tmpfs_pageout
_tmpfs_pathconf
_tmpfs_read
_tmpfs_readdir
_tmpfs_readlink
_tmpfs_reclaim
_tmpfs_remove
_tmpfs_removexattr
_tmpfs_rename
_tmpfs_rename.cold.1
_tmpfs_rename.cold.2
_tmpfs_rmdir
_tmpfs_root
_tmpfs_setattr
_tmpfs_setxattr
_tmpfs_start
_tmpfs_stop
_tmpfs_symlink
_tmpfs_trim_paged_out
_tmpfs_unmount
_tmpfs_vfs_getattr
_tmpfs_vget
_tmpfs_vptofh
_tmpfs_write
_tmpfs_xattr_name_to_kind
_tmpfs_xattr_val_alloc
_tmpfs_xattr_val_free
_tmpfs_xattrs_RB_FIND
_tmpfs_xattrs_RB_INSERT
_tmpfs_xattrs_RB_INSERT_COLOR
_tmpfs_xattrs_RB_REMOVE
_tmpfs_xattrs_RB_REMOVE_COLOR
_trace_resource_violation
_track_this_zone
_tracker_entry_log
_tracker_retrieve_attribute
_traverse_btree
_tree_check
_tree_checkpoint_traverse
_tree_create
_tree_create_0
_tree_create_extended
_tree_evict_range
_tree_evict_state_free
_tree_evict_state_init
_tree_get
_tree_get_0
_tree_get_extended
_tree_iterator_get_next
_tree_iterator_init
_tree_iterator_init_0
_tree_iterator_init_with_hint
_tree_key_compare_function_for_type
_tree_key_count
_tree_level_count
_tree_lookup
_tree_lookup_ge
_tree_lookup_gt
_tree_lookup_le
_tree_lookup_lt
_tree_node_count
_tree_remove
_tree_update_via_callback
_trim_file_tail_if_needed
_trim_realloc
_trim_remove_extent
_tstoabstime
_ttcompat
_ttcompatgetflags
_tte_get_ptd
_ttyprintf
_turnstile_update_turnstile_promotion_locked
_tvtoabstime
_tvtohz
_tx_add_active
_tx_add_dirty_work_item
_tx_barrier
_tx_barrier_internal
_tx_checkpoint_desc_zero
_tx_checkpoint_write
_tx_checkpoint_write_prepare
_tx_clean_up_dirty_work
_tx_finish
_tx_flush
_tx_flush_all_dirty_work
_tx_flush_initiate
_tx_flush_thread
_tx_flush_thread_wakeup
_tx_freeze
_tx_leave
_tx_mgr_checkpoint_setup
_tx_mgr_destroy
_tx_mgr_free_tx
_tx_mgr_init
_tx_mgr_init_tx
_tx_need_to_expedite_meta_io
_tx_thaw
_tx_unmount
_u32CharToUTF8Bytes
_uat_free_tables
_uat_get_leaf_table
_uat_init
_uat_iovmfree
_uat_map
_uat_perform_unmap
_ubc_create_upl_external
_ubc_create_upl_kernel
_ubc_cs_check_validation_bitmap
_ubc_cs_generation_check
_ubc_cs_validation_bitmap_deallocate
_ubc_destroy_named
_ubc_get_cs_blobs
_ubc_get_cs_mtime
_ubc_getcred
_ubc_getobject
_ubc_getpager
_ubc_getsize
_ubc_getsize_0
_ubc_is_mapped
_ubc_is_mapped_writable
_ubc_isinuse
_ubc_msync
_ubc_page_op
_ubc_page_op_0
_ubc_pages_resident
_ubc_setcred
_ubc_setsize
_ubc_umcallback
_ubc_umount
_ubc_upl_abort_range
_ubc_upl_commit
_ubc_upl_commit_range
_ubc_upl_pageinfo
_ubc_upl_pageinfo_0
_udp6_abort
_udp6_attach
_udp6_bind
_udp6_ctlinput
_udp6_disconnect
_udp_abort
_udp_attach
_udp_bind
_udp_connect
_udp_detach
_udp_disconnect
_udp_disconnectx
_udp_find_anypcb_byaddr
_udp_getlock
_udp_getstat
_uext_server
_uio_calculateresid
_uio_curriovbase
_uio_curriovlen
_uio_getiov
_uio_iovsaddr
_uio_isuserspace
_uio_pushback
_uio_reset
_uio_set_fext
_uio_setcurriovlen
_uio_update
_uipc_listen
_uipc_rcvd
_umask_extended
_umask_extended_0
_unicode_combinable
_unicode_decomposeable
_unicode_recursive_decompose
_unlink
_unlinkat
_unload_media_key
_unload_wrapping_key
_unp_detach
_unp_discard
_unp_gc_setup
_unp_get_locks_in_order
_unp_getlock
_unretain_crypto_states
_unslide_for_kdebug
_untimeout
_untimeout_0
_unwrap_ek
_unwrap_ekwk
_update
_updateCachedPeers(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_updateDynamicProperties
_updateFusionPromotionThreshold
_updateNumHostPackets(OSObject *,IO80211QueueDescriptor *,void *,mapExtraParam *)
_update_0
_update_atime
_update_base_rtt
_update_bm_hint
_update_burst_write_stats
_update_counters
_update_dir_size_state
_update_directory_purgeable_drec
_update_doc_id_mapping
_update_file_extent
_update_ino_purgeable_drec
_update_ino_purgeable_state
_update_inode_doc_id
_update_jobj
_update_lnode_attr
_update_lnode_attr_locked
_update_mdscr
_update_rusage_info_child
_update_siblinglinks_callback
_update_sparse_bytes
_update_summary_table
_update_time
_updatewindow
_upgrade_vnode
_upl_abort
_upl_adjusted_size
_upl_commit
_upl_dirty_page
_upl_server_routine
_upl_set_blkno
_upl_speculative_page
_upl_valid_page
_ureadc
_url_decode
_userPrint(userPrintCtx *,char const*,...)
_user_data_release
_user_fault_addr_matches_pac_error_code
_userland_sysctl
_userret_entry_remove_locked
_utf8_getcp
_utf8_strlen_with_ascii_status
_utf8_validatestr
_uthread_cred_free
_utun_attach_proto
_utun_attach_proto_0
_utun_ctl_setup
_utun_demux
_utun_detach_ip
_utun_detach_ip_0
_utun_detach_provider_and_instance
_utun_detach_provider_and_instance_0
_utun_detached
_utun_detached_0
_utun_framer
_utun_ioctl
_utun_kpipe_ring_fini
_utun_kpipe_ring_init
_utun_netif_prepare
_utun_netif_ring_fini
_utun_netif_ring_init
_utun_nexus_connected
_utun_nexus_detach
_utun_nexus_disconnected
_utun_register_control
_utun_wait_data_move_drain
_uuid_compare
_uuid_generate_early_random
_uuid_get_ethernet
_uuid_is_null
_uuid_unparse_lower
_uuid_unparse_lower_0
_uuid_unparse_lower_1
_ux_handler_setup
_vButterfly8OutOfPlace
_vButterflyOffset
_vDSPCalloc
_vDSPMalloc
_vDSPPosix_Memalign
_vDSPRealloc
_vDSP_DFT_CreateSetup
_vDSP_DFT_DestroySetup
_vDSP_DFT_zop
_vDSP_DFT_zop_CreateSetup
_vDSP_FFTCS
_vDSP_FFTCSBFirst4IBackward
_vDSP_FFTCSBFirst4IForward
_vDSP_FFTCSBFirst4S
_vDSP_FFTCSBFirst8IBackward
_vDSP_FFTCSBFirst8IForward
_vDSP_FFTCSBFirst8S
_vDSP_FFTCSBInterior4
_vDSP_FFTCSBInterior4Twister
_vDSP_FFTCSBInterior4Typhoon
_vDSP_FFTCSBInteriorWeightLite4Twister
_vDSP_FFTCSBInteriorWeightless4
_vDSP_FFTCSBPenultimate4
_vDSP_FFTCSBPenultimate4Twister
_vDSP_FFTCSBPenultimate4Typhoon
_vDSP_FFTCSBPermuteAndFinalIBackward
_vDSP_FFTCSBPermuteAndFinalIBackwardTwister
_vDSP_FFTCSBPermuteAndFinalIBackwardTyphoon
_vDSP_FFTCSBPermuteAndFinalIForward
_vDSP_FFTCSBPermuteAndFinalIForwardTwister
_vDSP_FFTCSBPermuteAndFinalIForwardTyphoon
_vDSP_FFTCSBPermuteAndFinalS
_vDSP_FFTCSBPermuteAndFinalSTwister
_vDSP_FFTCSBPermuteAndFinalSTyphoon
_vDSP_FFTCSCreateSetup
_vDSP_FFTCSDestroySetup
_vDSP_FFTCSGenerateFinalWeights
_vDSP_FFTCSGenerateFinalWeightsFMA
_vDSP_FFTCSGenerateGeneralWeights
_vDSP_FFTCSGenerateGeneralWeightsFMA
_vDSP_FFTRSConvertBackward
_vDSP_FFTRSConvertForward
_vDSP_create_fftsetup
_vDSP_destroy_fftsetup
_vDSP_fft2d_zip
_vDSP_fft2d_zip_0
_vDSP_fft2d_zip_1
_vDSP_fft2d_zip_2
_vDSP_fft2d_zipt
_vDSP_fft2d_zipt_0
_vDSP_fft2d_zipt_1
_vDSP_fft2d_zipt_2
_vDSP_fft2d_zop
_vDSP_fft2d_zop1
_vDSP_fft2d_zopt
_vDSP_fft2d_zopt2
_vDSP_fft2d_zrop
_vDSP_fft_zop
_vDSP_fft_zrop
_vDSP_fftm_zop
_vDSP_fftm_zrop
_vDSP_vmov
_vDSP_zvmov
_vImageConvert_XRGB2101010ToARGB8888_0
_vPFA3p1
_vPFA3p1Twister
_vPFA3p1o
_vPFA3p1oTwister
_vPFA3p2
_vPFA3p2Twister
_vPFA3p2o
_vPFA3p2oTwister
_vPFA4Final
_vPFA4Final2
_vPFA5p1
_vPFA5p1Twister
_vPFA5p1o
_vPFA5p1oTwister
_vPFA5p2
_vPFA5p2Twister
_vPFA5p2o
_vPFA5p2oTwister
_vPFA5p3
_vPFA5p3Twister
_vPFA5p3o
_vPFA5p3oTwister
_vPFA5p4
_vPFA5p4Twister
_vPFA5p4o
_vPFA5p4oTwister
_vPFAFFT
_vPFAFFT2
_validate
_validateOIDs
_validateSignatureEC
_validateSignatureRSA
_validateSignerInfo
_validate_chunked
_validate_file_data
_validate_inputs
_validate_stream_xattr
_variables_populate
_vattr_get_alt_data
_vc_blit_rect
_vc_clear_screen
_vc_display_icon
_vc_display_lzss_icon
_vc_paint_char
_vc_progress_initialize
_vcattach
_vector_upl_get_iostate
_vector_upl_get_iostate_byindex
_vector_upl_get_submap
_vector_upl_is_valid
_vector_upl_set_iostate
_vector_upl_set_submap
_vector_upl_set_subupl
_vector_upl_subupl_byindex
_vector_upl_subupl_byoffset
_verify_chain_img4_ec_v1
_verify_chain_img4_ecdsa384_local_policy
_verify_chain_img4_v1
_verify_chain_img4_v2_with_crack_callback
_verify_chain_img4_v2_with_crack_callback_0
_verify_chain_signatures
_verify_chain_signatures_0
_verify_code_directory
_verify_ecdsa_sig
_verify_pkcs1_sig
_verify_pkcs1_sig_0
_verify_signature_ecdsa
_verify_signature_rsa
_verify_signature_rsa_0
_vetoSleepWakeNotification
_vfs_64bitready
_vfs_attr_pack
_vfs_authcache_ttl
_vfs_busy
_vfs_clearauthcache_ttl
_vfs_clearauthopaque
_vfs_clearauthopaqueaccess
_vfs_clearextendedsecurity
_vfs_clearflags
_vfs_context_copy_audit_token
_vfs_context_create
_vfs_context_get_special_port
_vfs_context_issignal
_vfs_context_pid
_vfs_context_proc
_vfs_context_set_special_port
_vfs_event_signal
_vfs_get_statfs64
_vfs_getbyid
_vfs_getvfs
_vfs_getvfs_by_mntonname
_vfs_ioattr
_vfs_iocs_callback
_vfs_iocs_callback_0
_vfs_materialize_dir
_vfs_materialize_file
_vfs_mount_override_type_name
_vfs_mountedon
_vfs_name
_vfs_nested_trigger_unmounts
_vfs_notify_mount
_vfs_op_init
_vfs_purge
_vfs_purge_callback
_vfs_rootmountalloc
_vfs_setattr
_vfs_setauthcache_ttl
_vfs_setauthopaque
_vfs_setauthopaqueaccess
_vfs_setextendedsecurity
_vfs_setflags
_vfs_setfsprivate
_vfs_setioattr
_vfs_setlocklocal
_vfs_typenum
_vfs_update_vfsstat
_vfs_vnodecovered
_vget_internal
_virtual_address_size
_vm32_make_memory_entry
_vm32_map
_vm32_map_64
_vm32_map_page_query
_vm32_read
_vm32_read_list
_vm32_read_overwrite
_vm32_region
_vm32_region_64
_vm32_region_recurse
_vm32_region_recurse_64
_vm32_remap
_vmButterfly4Weighted
_vm_allocate_cpm
_vm_available_memory
_vm_commpage_enter
_vm_compressor_compute_elapsed_msecs
_vm_compressor_finished_filling
_vm_compressor_low_on_space
_vm_compressor_out_of_space
_vm_compressor_pager_get_count
_vm_compressor_pager_next_compressed
_vm_compressor_slots_init
_vm_compute_max_offset
_vm_ctl_page_free_wanted
_vm_decompressor_lock
_vm_decompressor_unlock
_vm_fault$XNU_INTERNAL
_vm_init_before_launchd
_vm_kernel_addrhide
_vm_kernel_addrperm_external
_vm_kernel_addrperm_external_0
_vm_kernel_map_is_kernel
_vm_map_64_kernel
_vm_map_64_kernel_0
_vm_map_copyin_object
_vm_map_enter_mem_object
_vm_map_enter_mem_object_prefault
_vm_map_external
_vm_map_external_0
_vm_map_get_max_aslr_slide_pages
_vm_map_get_max_loader_aslr_slide_pages
_vm_map_get_pmap
_vm_map_get_upl
_vm_map_iokit_mapped_region
_vm_map_iokit_mapped_region_0
_vm_map_is_exotic
_vm_map_page_query_internal
_vm_map_remove_locked
_vm_map_set_64bit
_vm_map_set_jit_entitled
_vm_map_set_jit_entitled_0
_vm_map_set_page_shift
_vm_map_steal_memory
_vm_map_store_copy_reset
_vm_map_store_copy_reset_rb
_vm_map_store_entry_link_ll
_vm_map_store_entry_link_rb
_vm_map_store_entry_unlink_ll
_vm_map_store_entry_unlink_rb
_vm_map_store_find_last_free
_vm_map_store_find_last_free_0
_vm_map_store_lookup_entry
_vm_map_store_lookup_entry_ll
_vm_map_store_lookup_entry_rb
_vm_map_store_update
_vm_map_store_walk_rb
_vm_map_wire_and_extract_external
_vm_map_wire_and_extract_kernel
_vm_map_wire_kernel
_vm_object_lock_avoid
_vm_object_lock_yield_shared
_vm_packing_max_packable
_vm_packing_pointer_invalid
_vm_packing_verify_range
_vm_page_alloc
_vm_page_delayed_work_init_ctx
_vm_page_free_prepare_object
_vm_page_init
_vm_page_insert
_vm_page_insert_wired
_vm_page_module_init
_vm_page_part_zero_fill
_vm_page_validate_cs_mapped
_vm_page_zero_fill
_vm_pageout_anonymous_pages
_vm_pageout_steal_laundry
_vm_panic_hibernate_write_image_failed
_vm_purgeable_object_purge_one_unlocked
_vm_record_file_write
_vm_region
_vm_region_0
_vm_region_64
_vm_region_recurse
_vm_set_buffer_cleanup_callout
_vm_set_page_size
_vm_set_restrictions
_vm_shared_region_is_reslide
_vm_shared_region_reference_locked
_vm_shared_region_root_dir
_vm_swap_consider_defragmenting
_vm_swap_files_pinned
_vm_swap_get_free_space
_vm_swap_low_on_space
_vm_swap_out_of_space
_vm_swap_put_finish
_vm_swap_reset_max_segs_tracking
_vm_swap_vol_get_budget
_vm_swapfile_get_blksize
_vm_thrashing_jetsam_done
_vn_attribute_cleanup
_vn_attribute_prepare
_vn_authorize_create
_vn_authorize_mkdir
_vn_authorize_open_existing
_vn_authorize_renamex
_vn_authorize_renamex_with_paths
_vn_authorize_rmdir
_vn_authorize_unlink
_vn_checkunionwait
_vn_clearunionwait
_vn_closefile
_vn_getpath_ext
_vn_getpath_ext_with_mntlen
_vn_getpath_fsenter
_vn_getpath_fsenter_with_parent
_vn_getpath_no_firmlink
_vn_offset_lock
_vn_offset_unlock
_vn_revoke
_vn_setunionwait
_vn_setxattr
_vn_stat
_vnio_read
_vnode_addfsref
_vnode_attr_authorize
_vnode_attr_authorize_dir_clone
_vnode_attr_authorize_init
_vnode_attr_handle_mnt_ignore_ownership
_vnode_authattr
_vnode_authattr_new_internal
_vnode_authorize
_vnode_authorize_init
_vnode_check_exec(ucred *,vnode *,vnode *,label *,label *,label *,componentname *,uint *,void *,ulong)
_vnode_check_exec(ucred *,vnode *,vnode *,label *,label *,label *,componentname *,uint *,void *,ulong)
_vnode_check_signature(vnode *,label *,int,cs_blob *,uint *,uint *,int,uint,char **,ulong *)
_vnode_clear_openevt
_vnode_clearautocandidate
_vnode_cleardirty
_vnode_clearfastdevicecandidate
_vnode_clearmountedon
_vnode_clearnocache
_vnode_clearnoreadahead
_vnode_compound_mkdir_available
_vnode_compound_op_available
_vnode_compound_open_available
_vnode_compound_remove_available
_vnode_compound_rename_available
_vnode_compound_rmdir_available
_vnode_cred
_vnode_dev_block_count
_vnode_dev_block_size
_vnode_dev_encryption_type
_vnode_dev_features
_vnode_dev_flush_buf
_vnode_dev_unmap
_vnode_dev_unmap_flush
_vnode_dev_write
_vnode_drain
_vnode_flags
_vnode_get
_vnode_get_fse_info_from_vap
_vnode_get_locked
_vnode_get_snapdir
_vnode_get_va_fsid
_vnode_getalways
_vnode_getalways_from_pager
_vnode_getfromfd
_vnode_getname
_vnode_getname_printable
_vnode_getparent
_vnode_getswappin_avail
_vnode_getwithref
_vnode_getwithvid
_vnode_getwithvid_drainok
_vnode_hasdirtyblks
_vnode_iocs_callback
_vnode_isaliased
_vnode_isdirty
_vnode_isinuse
_vnode_isinuse_locked
_vnode_isinuse_locked_0
_vnode_ismountedon
_vnode_isonexternalstorage
_vnode_isonssd
_vnode_isrecycled
_vnode_iterate
_vnode_lookup_continue_needed
_vnode_materialize_dataless_file
_vnode_mount
_vnode_mountdevvp
_vnode_mountedhere
_vnode_mtime
_vnode_notify
_vnode_on_reliable_media
_vnode_pager_cs_check_validation_bitmap
_vnode_pager_data_initialize
_vnode_pager_get_cs_blobs
_vnode_pager_get_isSSD
_vnode_pager_get_isinuse
_vnode_pager_get_mtime
_vnode_pager_get_name
_vnode_pager_get_object_name
_vnode_pager_get_object_name_0
_vnode_pager_get_object_size
_vnode_pager_get_throttle_io_limit
_vnode_pager_isSSD
_vnode_pager_issue_reprioritize_io
_vnode_pager_lookup_vnode
_vnode_pager_setup
_vnode_pager_setup_0
_vnode_pager_synchronize
_vnode_pager_vrele
_vnode_parent
_vnode_purge_callback
_vnode_put
_vnode_put_from_pager
_vnode_put_locked
_vnode_put_locked_0
_vnode_put_locked_1
_vnode_recycle
_vnode_relabel
_vnode_relenamedstream
_vnode_removefsref
_vnode_resume
_vnode_set_openevt
_vnode_setasnamedstream
_vnode_setasnamedstream_internal
_vnode_setautocandidate
_vnode_setdirty
_vnode_setfastdevicecandidate
_vnode_setmountedon
_vnode_setmultipath
_vnode_setneedinactive
_vnode_setnocache
_vnode_setnoreadahead
_vnode_setparent
_vnode_setsize
_vnode_setswapmount
_vnode_size
_vnode_specrdev
_vnode_suspend
_vnode_trigger_rearm
_vnode_trigger_resolve
_vnode_trigger_update
_vnode_trim
_vnode_uncache_authorized_action
_vnode_uncache_credentials
_vnode_updateiocompressionbufferstats
_vnode_vfs64bitready
_vnode_vfscmdflags
_vnode_vfsisrdonly
_vnode_vfsmaxsymlen
_vnode_vfsname
_vnode_vfsstatfs
_vnode_vfstypenum
_vnode_vfsvisflags
_vnode_waitforwrites
_vnode_writedone
_vnops_read_data
_vprintf_log_locked
_vsnprintf
_vsock_accept
_vsock_add_transport
_vsock_bind
_vsock_control
_vsock_dinit
_vsock_listen
_vsock_pcb_reset_address
_vsock_peeraddr
_vsock_remove_transport
_vsock_sockaddr
_vtonfs_type
_vtonfsv2_mode
_wait_condition
_wait_until_keybag_state
_waitq_set_foreach_member_locked
_walk_file_extents
_was_in_userspace
_was_in_userspace_0
_was_in_userspace_1
_was_in_userspace_2
_was_in_userspace_3
_was_in_userspace_4
_was_in_userspace_5
_was_in_userspace_6
_was_in_userspace_7
_was_in_userspace_8
_wfe_timeout_init
_wimg_to_pte
_wipeStorage
_wipe_volume_keys
_workq_destroy_threadstack
_workq_init
_workq_reference
_workq_sysctl_handle_usecs
_workqueue_get_pwq_exceeded
_wrap_crypto_state
_wrapped_crypto_state_init
_wrapperObjectForBuf
_writeBytesToSamplesIOMD
_writeBytesToSamplesIOMD_0
_writeClone
_writeUnit
_write_header_thread
_write_journal_header
_write_random
_write_xattr_simple
_xattr_cloner
_xattr_collector
_xattr_fext_alloc
_xattr_fext_clear
_xattr_fext_free
_xattr_fext_set
_xattr_invalidate_extents_cb
_xattr_name_to_kind
_xattr_nrec_counter
_xattr_protected
_xattr_validatename
_xb_add_bytes
_xb_advance
_xb_cleanup
_xb_get_bytes
_xb_grow
_xb_init_buffer
_xb_offset
_xb_realloc
_xb_seek
_xb_set_cur_buf_len
_xf_deep_copy
_xf_get
_xf_get_flags_for_type
_xf_get_from_blob
_xf_get_ptr_and_size
_xf_init
_xf_init_with_blob
_xf_release
_xf_remove
_xf_serialize
_xf_set
_xf_sort
_xfext_free_blocks
_xid_is_current_tx
_xml_copy_string_to_buffer
_xml_size_array
_xml_size_dictionary
_xml_size_string
_xnu_copy_object(_img4_runtime const*,_img4_runtime_object_spec const*,_img4_buff *,ulong *)
_xnu_get_identifier_cstr(_img4_runtime const*,_img4_chip const*,img4_identifier_t,_img4_cstr *)
_xnu_get_identifier_digest(_img4_runtime const*,_img4_chip const*,img4_identifier_t,_img4_dgst *)
_xnu_get_identifier_uint64(_img4_runtime const*,_img4_chip const*,img4_identifier_t,ulong long *)
_xnu_init(_img4_runtime const*)
_xnu_log(_img4_runtime const*,void *,img4_log_level_t,char const*,...)
_xnu_read(IORegistryEntry *,char const*,void *,uint *)
_xts_decrypt
_xts_done
_xts_encrypt
_xts_start
_z_crc32
_z_crc32_combine
_zalloc_needs_refill
_zalloc_permanent_tag
_zba_chain_corruption_panic
_zba_grow
_zba_head_corruption_panic
_zba_init_chunk
_zero_range
_zgcqcxw1qve0CY
_zlib_decode_buffer
_zlib_decode_buffer_0
_zlib_decode_buffer_1
_zlib_deflate_memory_size
_zone_accounting_panic
_zone_create_panic
_zone_create_startup
_zone_get_foreign_alloc_size
_zone_id_for_native_element
_zone_id_require
_zone_id_require_allow_foreign
_zone_invalid_element_addr_panic
_zone_invalid_panic
_zone_kmem_suballoc
_zone_map_jetsam_set_limit
_zone_maps_owned
_zone_metadata_corruption
_zone_nofail_panic
_zone_page_meta_accounting_panic
_zone_page_metadata_list_corruption
_zone_page_metadata_native_queue_corruption
_zone_require_ro
_zone_spans_ro_va
_zone_userspace_reboot_checks
_zzLw2eOVu9pOHqpiNw1K4ki
`anonymous namespace'::add_parameter<OSString *>(OSSharedPtr<OSDictionary> &,char const*,OSString * const&)
`anonymous namespace'::add_parameter<uint>(OSSharedPtr<OSDictionary> &,char const*,uint const&)
`anonymous namespace'::add_parameter<ulong long>(OSSharedPtr<OSDictionary> &,char const*,ulong long const&)
`anonymous namespace'::apfs_analytics_send(OSSharedPtr<OSDictionary> &,char const*)
AHTHSWorkLoop::addEventSource(HSEventSource *)
AHTHSWorkLoop::commandSleep(void *,ulong long)
AHTHSWorkLoop::commandWakeup(void *)
AHTHSWorkLoop::removeEventSource(HSEventSource *)
AHTHSWorkLoop::~AHTHSWorkLoop()
AppleHIDTransportDevice::getBootloadableMaster(void)
AppleHIDTransportDevice::getBootloadableSlave(void)
AppleHIDTransportDevice::getConfigProvider(void)
AppleHIDTransportDevice::handleDeferredBootload(void)
AppleHIDTransportInterface::getReporterInterface(uchar)
AppleHIDTransportInterface::getReportersReportID(void)
AppleHIDTransportInterface::resetDevice(void)
AppleHIDTransportProtocolHIDSPI::transferData(void *,ulong,void *,ulong,bool)
AppleHIDTransportProtocolHIDSPI::~AppleHIDTransportProtocolHIDSPI()
HSMDeviceTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMDeviceTest()
HSMParserTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMParserTest()
HSMSPITest<2048ul,AHTHSBufferStatic>::checkForWork(void)
HSMSPITest<2048ul,AHTHSBufferStatic>::~HSMSPITest()
HSMTransferTest<2048ul,8192ul,AHTHSBufferStatic>::~HSMTransferTest()
HSParserDevice::checkForWork(void)
HSTransferTest<8192ul,AHTHSBufferStatic>::~HSTransferTest()
IOAVAbstractVideoInterface::completeLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::copyColorElements(OSObject **)
IOAVAbstractVideoInterface::copyTimingElements(OSObject **)
IOAVAbstractVideoInterface::stopLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAbstractVideoInterface::willStopLink(IOAVVideoLinkData *,IOAVLinkSource)
IOAVAudioDMADelegate::~IOAVAudioDMADelegate()
IOAVAudioDriver::~IOAVAudioDriver()
IOAVAudioInterface::copyChannelLayoutElements(OSObject **)
IOAVAudioInterface::copyEDIDUUID(OSObject **)
IOAVAudioInterface::copyElements(OSObject **)
IOAVAudioInterface::copyProductAttributes(OSObject **)
IOAVAudioInterface::getDataLatency(IOAVAudioLinkData const*)
IOAVAudioInterface::getDataSafetyOffset(IOAVAudioLinkData const*)
IOAVAudioInterface::getLinkData(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVAudioInterface::getProductAttributes(void)
IOAVAudioInterface::getTransport(IOAVLinkSource)
IOAVAudioInterface::prepareLink(IOAVAudioLinkData *,IOAVLinkSource)
IOAVAudioInterface::stopTransfer(void)
IOAVAudioInterface::transferData(IOMemoryDescriptor *,ulong long,ulong long,IOAVDataCompletion *)
IOAVAudioInterface::~IOAVAudioInterface()
IOAVService::clearEventLog(void)
IOAVService::copyPhysicalAddress(OSObject **)
IOAVService::getHDCPAuthenticatedContentType(void)
IOAVService::getLinkData(IOAVLinkType,IOAVLinkData *,IOAVLinkSource)
IOAVService::getProtectionStatus(IOAVProtectionStatus *)
IOAVService::readI2C(uint,uint,uchar *,uint)
IOAVService::setContentProtectionCapabilities(IOAVCPCapabilities const*)
IOAVService::setContentProtectionPolicyOptions(IOAVCPPolicyOptions const*)
IOAVService::setContentProtectionSupportEnabled(bool)
IOAVService::setEventLogCommandMask(ulong long)
IOAVService::setEventLogEventMask(ulong long)
IOAVService::setEventLogMaxCapacity(uint)
IOAVService::setHDRStaticMetadata(OSDictionary const*)
IOAVService::startInfoFrame(IOAVInfoFrame *,IOAVLinkSource)
IOAVService::startLink(IOAVLinkData *,IOAVLinkSource,uint)
IOAVService::stopInfoFrame(IOAVInfoFrame *,IOAVLinkSource)
IOAVService::~IOAVService()
IOAVSimpleVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSimpleVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSimpleVideoInterface::getTransport(IOAVLinkSource)
IOAVSimpleVideoInterface::setBounds(IOAVVideoBoundsRect)
IOAVSimpleVideoInterface::setColorDitherRemoval(bool)
IOAVSimpleVideoInterface::setRotation(int)
IOAVSimpleVideoInterface::setScreenVirtualTemperature(int)
IOAVSimpleVideoInterface::~IOAVSimpleVideoInterface()
IOAVSliceVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSliceVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSliceVideoInterface::getTransport(IOAVLinkSource)
IOAVSliceVideoInterface::setScreenVirtualTemperature(int)
IOAVSliceVideoInterface::~IOAVSliceVideoInterface()
IOAVSplitDisplay::~IOAVSplitDisplay()
IOAVSplitDisplayVideoInterface::getLinkData(IOAVVideoLinkData *,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::getLinkStatus(IOAVLinkType,IOAVLinkSource)
IOAVSplitDisplayVideoInterface::getTransport(IOAVLinkSource)
IOAVSplitDisplayVideoInterface::setScreenVirtualTemperature(int)
IOMFB::PropRelay::~PropRelay()
IOMFB::SEPBICSProxy::~SEPBICSProxy()
IOMFB::UPBlock_BICS::get_frame_size(uint *,uint *)
IOMFB::UPBlock_BICS::temperature_changed(void)
IOMFB::UPBlock_BICS::temperature_table_changed(void)
IOMFB::UPBlock_ColorManager_v4::matrix_changed(IOMFB::MatrixHandler::Function)
IOMFB::UPBlock_ColorManager_v4::on_brightness_change(int)
IOMFB::UPBlock_ColorManager_v4::register_matrix_handler(IOMFB::MatrixHandler *)
IOMFB::UPBlock_PDC::register_2D_temp_comp(IOMFB::TempComp2DHandler *)
IOMFB::UPBlock_PDC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_PDC_v2::hgod_register(IOMFB::HighGrayOverdrive *)
IOMFB::UPBlock_PRC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_PRC_v2::hdr_regamma_set_dirty(void)
IOMFB::UPBlock_SWMPR::register_dbsr_hand(IOMFB::DBSRHandler *)
IOMFB::UPBlock_SWMPR::register_vp_hand(IOMFB::VPHandler *)
IOMFB::UPBlock_WPC::get_frame_size(uint *,uint *)
IOMFB::UPBlock_WPC::register_2D_temp_comp(IOMFB::TempComp2DHandler *)
IOMFB::UPBlock_WPC::register_handler(IOMFB::BrightnessScale *)
IOMFB::UPBlock_WPC::register_ksf_comp(IOMFB::KSFCompHandler *)
IOMFB::UPBlock_WPC::register_temp_comp(IOMFB::TempCompHandler *)
IOMFB::UPBlock_WPC::register_uniform_comp(IOMFB::UniformityCompensator *)
IOMFB::UPBlock_WPC::temp_2D_changed(void)
IOMFB::UPBlock_WPC::temp_2D_table_changed(void)
IOMFB::UPBlock_WPC_v5::icc_dest_profile_changed(void)
IOMFB::UPBlock_WPC_v5::register_handler(IOMFB::ICCHandler *)
UPAsynchronousScheduler::checkAndQueueArgument(UPAsynchronousScheduler_::ArgumentEntry *)
UPPipe_H11P_Trampoline::wait_for_mode_change(bool)
abort_with_payload
add128(U128,U128)
add256(U256,U256)
add512(U512,U512)
addKeyAndDump(char const*,char *,OSDictionary *)
addNumberToDict(OSDictionary *,char const*,ulong long,uint)
add_common_fields(OSSharedPtr<OSDictionary> &,nx const*)
add_number(OSDictionary *,char const*,ulong long,uint)
aes_dkey_expansion
aes_kb_get(kb_access *,bool *)
aes_kb_put(kb_access *)
aes_kb_wipe(kb_access *)
aes_key_expansion
agxkHalG12RTSetupCommonRegisters(uint,uint,uint,uint,uint,AGXSampleOffsetRec *,uint,uint,AGXRenderTargetCommonRegs *)
agxsTwiddledBlockInfo::getCPUPhysicalOffsetWithinLayer(uint)
agxsTwiddledBlockInfo::getGPUVirtualOffset(ulong long)
agxsTwiddledBlockInfo::getParamsForLevel(uint,uint &,uint &,uint &,uint &)
agxsTwiddledBlockInfo::initialize(uint,uint,uint,uint,uint,ulong,uint,uchar,bool,bool,bool,uint,AGXTextureMemoryLayout,bool)
agxsTwiddledBlockInfo::isGPUVirtualOffsetForPadding(ulong long)
ah_hmac_sha2_512_mature
ah_none_mature
ah_sumsiz_1216
aks_new_media(keybag_entry *,void const*,void *,bool)
aks_unwrap_media(keybag_entry *,void const*,void *,bool)
allocMemHook(_effaceable_system *,uint)
alloc_shared(_IOSurfaceSharedListEntry **,uint,ulong,uint,void **)
analyticsHelperFuncFaceDetectEventResultFromResult(uint,bool)
apfs_analytics_fini(void)
apfs_analytics_init(void)
apfs_get_scheme_for_volume(AppleAPFSVolume *)
arm_init_tramp
asynchronousCallback(void *,int,void *)
atoi
attachCoreAnalyticsService(void *,void *,IOService *,IONotifier *)
auc_CreateAUPPacketCallback(OSObject *,OSData *,void *)
authtypeupper2str(ushort)
awdlStringForMIUpdateReason(MIPayloadUpdateReason_t)
bridge_ioctl_flush
bsd_hostname
buf_breadn
buf_meta_breadn
cache::addCache(OSSymbol const*,OSObject *)
cache::free(void)
cache::queryCache(OSSymbol const*)
cache::withCapacity(uint)
calculateCRC(uchar const*,ulong)
calculateTimeDeltaMS(timeval)
calend_getattr
catq
cdevsw_setkqueueok
channelToFrequency(uint,uint)
checkForRNMIPacket(__mbuf *,int,int,char const*)
checkString(mDNSHandoff *,uchar *)
chipNumberFromDeviceID(ushort)
choose_scale_bin(uint,uint)
ciphertype2str(uint)
clearAwdlStatistics(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
clear_mntk_backs_root_callback
clfree
clientTerminateApplier(IOService *,void *)
clock_server_routine
clpc::CLPC::aneWorkEnd(clpc::tgrp::ThreadGroupVariant &,ulong long,IOPerfControlClient::PerfControllerInterface::WorkState &,IOPerfControlClient::WorkEndArgs *,bool,uint)
clpc::CLPC::clientGetDVFMTable(OSObject *,int &)
clpc::CLPC::clientGetPerfDomainInfo(OSObject *,int &)
clpc::CLPC::clientGetPerfMap(OSObject *,int &)
clpc::CLPC::clientGetPowerMap(OSObject *,int &)
clpc::CLPC::clientGetStatus(OSObject *,int &)
clpc::CLPC::clientGetTopology(OSObject *,int &)
clpc::CLPC::clientGetVersionInfo(OSObject *,int &)
clpc::CLPC::cpuClusterLimiterEffortForFrequency(uint,uint &)
clpc::CLPC::cpuPerfEffortForFrequency(uint,clpc::cpu::ClusterType,uint &)
clpc::CLPC::enable(bool)
clpc::CLPC::eventInterruptHandler(IOInterruptEventSource *,int)
clpc::CLPC::findReport(ulong long,clpc::ReportName *&,clpc::LegacyReportName *&,clpc::ReportActions const*&)
clpc::CLPC::getGPUMaxPower(void)
clpc::CLPC::getReportDimensions(IOReportChannelList &,int &)
clpc::CLPC::init(ApplePMGRNub &,AppleCLPC &,IOWorkLoop *)
clpc::CLPC::initProperties(void)
clpc::CLPC::initReporting(void)
clpc::CLPC::insertChain(clpc::tgrp::ThreadGroupContainer &,queue_entry &,bool,bool)
clpc::CLPC::invalidateEvents(clpc::tgrp::ThreadGroupContainer const&)
clpc::CLPC::invalidateReferences(clpc::tgrp::ThreadGroupContainer &)
clpc::CLPC::perfDeviceWorkCanSubmit(IOService *,IOPerfControlClient::PerfControllerInterface::WorkState *,IOPerfControlClient::WorkSubmitArgs *)
clpc::CLPC::performanceChangeHandler(IOInterruptEventSource *,int)
clpc::CLPC::processEvents(void)
clpc::CLPC::registerPerfDevice(IOService *,IOService *,IOPerfControlClient::PerfControllerInterface::DriverState *)
clpc::CLPC::removeChain(clpc::tgrp::ThreadGroupContainer &)
clpc::CLPC::reset(void)
clpc::CLPC::sampleCPUWorkloadPower(ulong long,ulong long,clpc::SamplerFlags &)
clpc::CLPC::sampleSystem(ulong long,ulong long,clpc::SamplerFlags &)
clpc::CLPC::sampleSystemAMX(clpc::SystemPerfSample &,ulong long,clpc::SamplerFlags &)
clpc::CLPC::sendPPMAdmissionCheck(void)
clpc::CLPC::setCPUDynamicThreadGroupControl(bool)
clpc::CLPC::setGPUTargetsAndLimits(void)
clpc::CLPC::setPreSplitPowerFloor(uint,clpc::Timescale)
clpc::CLPC::setProperties(OSDictionary *)
clpc::CLPC::setThermalSMCPowerBudget(uint,clpc::Timescale)
clpc::CLPC::setThermalSlowPowerBudget(uint,clpc::Timescale)
clpc::CLPC::sleepWakeRequestPPMBudgetHandler(IOInterruptEventSource *,int)
clpc::CLPC::submitEvent(clpc::Event const&,bool)
clpc::CLPC::systemPowerOn(void)
clpc::CLPC::systemPowerOn(void)
clpc::CLPC::systemSleep(void)
clpc::CLPC::systemWake(void)
clpc::CLPC::timerInterruptHandler(bool)
clpc::CLPC::uncorePerfSamplerConfig(void)
clpc::CPUPerfMap<256ul,clpc::CPUPerfMapPolicyLUT<10ul,256ul>>::operatingStateForEffort(clpc::cpu::ClusterType,clpc::fixed_t<24,uint,clpc::NormalFixedPointCoversions> &)
clpc::CounterSetInfo<6u,uint>::flip(bool,memory_order)
clpc::CounterSetInfo<6u,uint>::removeWriter(clpc::CounterSetInfo<6u,uint>::Inner,memory_order)
clpc::EnableStatus::setEnabled(bool,memory_order)
clpc::PerfMap<clpc::PerfMapPolicyDirect<1ul,3ul,clpc::array<uchar,1ul>,uchar,uchar,0ul>>::copyAsObject(char const* (*)(uchar))
clpc::PropertyFactory::cpu_devel_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::cpu_devel_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#2}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::cpu_workload_power_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::cpu_workload_power_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#3}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::fabric_devel_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#2}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::global_param_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::memory_devel_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::memory_devel_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#2}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::power_cpu_limiter_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::power_cpu_limiter_read_only_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#8}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::power_package_external_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::power_package_read_only_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::setFrequencyToEffort<float>(clpc::cpu::ClusterType,uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::setPerfConfigurationToEffort<float>(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::thread_group_cpu_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#14}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::thread_group_cpu_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::thread_group_work_interval_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::thread_group_work_interval_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#3}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::PropertyFactory::urgent_property_defs(void)::{lambda(uint &,void *,clpc::PropertyFlags &)#1}::__invoke(uint &,void *,clpc::PropertyFlags &)
clpc::SimplePerfMap<true,3ul,clpc::PerfMapPolicyDirect<1ul,3ul,clpc::array<uchar,1ul>,uchar,uchar,0ul>>::init<3ul>(clpc::array<uint,3ul> const&,uint,clpc::array<double,3ul> const&,char const*,char const*,char const*)
clpc::T8030CLPC::clusterPerfSamplerConfig(void)
clpc::T8030CLPC::corePerfSamplerConfig(void)
clpc::T8030CLPC::cpuTemperatureSamplerConfigs(void)
clpc::T8030CLPC::initPropertyNamesAndSetters(void)
clpc::ane::Topology::copyAsObject(bool)
clpc::ane::Topology::init(void)
clpc::configureFeatureReport(ulong long,ulong long,ushort,bool,void *)
clpc::configureLostPerfReport(ulong long,ulong long,ushort,bool,void *)
clpc::configureSimpleArrayReport<clpc::array<ulong long,2ul>,(void *)0>(ulong long,ulong long,ushort,bool,void *)
clpc::configureSimpleReport<ulong long,(void *)0>(ulong long,ulong long,ushort,bool,void *)
clpc::control::PICurvedConfig<float>::Curve::setCoefficient(ulong,uint,clpc::PropertyFlags &)
clpc::control::PIPowerLimiter<float>::update<ulong long>(clpc::Metric<float>,float,clpc::control::PIPowerLimiterConfig<float> &,ulong long,clpc::control::ControlLimits<float>)
clpc::control::PIPowerLimiter<float>::updateOrSeed<ulong long,clpc::power::CPULimiter::run(ulong long,clpc::SystemThermalSample const&)::$_5 &>(clpc::Metric<float>,float,clpc::control::PIPowerLimiterConfig<float> &,ulong long,clpc::power::CPULimiter::run(ulong long,clpc::SystemThermalSample const&)::$_5 &,bool,clpc::trace_detail::EventID,clpc::control::ControlLimits<float>)
clpc::control::PowerSplitter<float>::split(float,clpc::control::PowerSplitterConfig<float> const&)
clpc::cpu::CPUTimer::disable(void)
clpc::cpu::CPUTimer::enable(ulong long)
clpc::cpu::CPUTimer::init(void (*)(OSObject *,IOTimerEventSource *),void (*)(OSObject *,IOInterruptEventSource *,int),clpc::UniquePtr<IOWorkLoop,clpc::ObjectDeleter<IOWorkLoop>> &,AppleCLPC *)
clpc::cpu::CPUTimer::init(void (*)(OSObject *,IOTimerEventSource *),void (*)(OSObject *,IOInterruptEventSource *,int),clpc::UniquePtr<IOWorkLoop,clpc::ObjectDeleter<IOWorkLoop>> &,AppleCLPC *)
clpc::cpu::CPUTimer::serviceSoftInterrupt(ulong long)
clpc::cpu::CPUTimer::setSamplerTimer(clpc::cpu::SamplerTimerType,ulong long)
clpc::cpu::ClusterPerfSampler::enable(bool)
clpc::cpu::ClusterPerfSampler::init(clpc::cpu::ClusterPerfSamplerConfig)
clpc::cpu::ClusterPerfSampler::init(clpc::cpu::ClusterPerfSamplerConfig)
clpc::cpu::CorePerfSampler::enable(bool,bool)::$_5::operator() const(ulong long)::{lambda(void *)#1}::__invoke(void *)
clpc::cpu::CorePerfSampler::init(clpc::cpu::CorePerfSamplerConfig,void (*)(int))
clpc::cpu::CorePerfSampler::sample(clpc::array<ulong long,6ul> &,clpc::array<ulong long,6ul> &)
clpc::cpu::CorePerfSampler::sampleRemote(int,clpc::array<ulong long,6ul> &,clpc::array<ulong long,6ul> &)
clpc::cpu::DVFMTable::copyAsObject(void)
clpc::cpu::DVFMTable::countReducedWeightStates(uint)
clpc::cpu::DVFMTable::getMaxCPUCount(uint)
clpc::cpu::DVFMTable::getSharedANEFrequency(uint,uchar)
clpc::cpu::DVFMTable::getSharedANEFrequencyAtMaxCPUPower(uint)
clpc::cpu::DVFMTable::init(uint,OSDictionary *)
clpc::cpu::DVFMTable::initClass(void)
clpc::cpu::DVFMTable::lookupByFrequency(uint,bool)
clpc::cpu::DVFMTable::lookupByMaxWeight(uint)
clpc::cpu::DVFManager::enable(bool)
clpc::cpu::DVFManager::getEffortForPowerLimiterSeeding(ulong long)
clpc::cpu::DVFManager::hasElevatedOperatingStateRequest(void)
clpc::cpu::DVFManager::init(void)
clpc::cpu::DVFManager::requestFixedFrequency(uint,bool)
clpc::cpu::DVFManager::setANEUsage(float)
clpc::cpu::DVFManager::setAbsolutePowerLimit(clpc::fixed_t<20,uint,clpc::NormalFixedPointCoversions>,clpc::report::lostperf::Reason)
clpc::cpu::DVFManager::setCPUCoreMask(ulong long)
clpc::cpu::DVFManager::setFastDieClusterLimit(uint,clpc::fixed_t<24,uint,clpc::NormalFixedPointCoversions>,clpc::report::lostperf::Reason)
clpc::cpu::DVFManager::setFixedFrequency(uint,uint &)
clpc::cpu::DVFManager::setInternalClusterLimit(uint,float,clpc::report::lostperf::Reason)
clpc::cpu::DVFManager::setInternalClusterLimits(clpc::array<float,2ul> const&,clpc::array<clpc::report::lostperf::Reason,2ul> const&)
clpc::cpu::DVFManager::setMinimumDVMRWeight(uint,uint)
clpc::cpu::DVFManager::setPowerLimit(float,clpc::report::lostperf::Reason)
clpc::cpu::DVFManager::startTrace(void)
clpc::cpu::Limiter::init(void)
clpc::cpu::Limiter::reset(ulong long)
clpc::cpu::Limiter::updateMetrics(clpc::SystemThermalSample &,clpc::cpu::LimiterMetrics &)
clpc::cpu::SchedulerInterface::getHighestDVFMRequest(uint,ulong long)
clpc::cpu::SchedulerInterface::getThreadGroupOnCurrentCore(bool)
clpc::cpu::SchedulerInterface::reset(void)
clpc::cpu::SchedulerInterface::setCounterAvailability(bool,clpc::cpu::CorePerfSampler &,clpc::cpu::CoreMemStallSampler &)
clpc::cpu::SchedulerInterface::setCounterAvailability(bool,clpc::cpu::CorePerfSampler &,clpc::cpu::CoreMemStallSampler &)::$_20::__invoke(void *)
clpc::cpu::SchedulerInterface::threadGroupDeinit(thread_group_data *)
clpc::cpu::SchedulerInterface::threadGroupFlagsUpdate(thread_group_data *)
clpc::cpu::SchedulerInterface::threadGroupInit(thread_group_data *)
clpc::cpu::SchedulerInterface::updateDVFMRequestCounts(uchar,clpc::cpu::ClusterType,uint,uint,uchar,ulong long)
clpc::cpu::SchedulerInterface::updateSamplerState(clpc::array<uchar,2ul> &,clpc::array<uchar,2ul> &,ulong long,uint)
clpc::cpu::SchedulerInterface::workIntervalNotify(perfcontrol_state *,perfcontrol_work_interval *)
clpc::cpu::TemperatureSampler::init(clpc::cpu::TemperatureSamplerConfig)
clpc::cpu::TemperatureSampler::init(clpc::cpu::TemperatureSamplerConfig)
clpc::cpu::TemperatureSampler::init(clpc::cpu::TemperatureSamplerConfig)::$_2::operator()<ulong long,uint,clpc::UniquePtr<IOMemoryMap,clpc::ObjectDeleter<IOMemoryMap>>,ulong long>(bool,ulong long,uint,clpc::UniquePtr<IOMemoryMap,clpc::ObjectDeleter<IOMemoryMap>> &,ulong long &)
clpc::cpu::Topology::copyAsObject(bool)
clpc::cpu::Topology::initStaticCPUTopology(void)
clpc::cpu::UncorePerfSampler::init(clpc::cpu::UncorePerfSamplerConfig)
clpc::cpu::UncorePerfSampler::init(clpc::cpu::UncorePerfSamplerConfig)
clpc::dynamic_array<clpc::CLPC::clientListThreadGroups(OSObject *,int &)::GroupInfo,clpc::allocator<clpc::CLPC::clientListThreadGroups(OSObject *,int &)::GroupInfo>>::deinit(void)
clpc::generateReport<clpc::report::StateReport<13ul>>(int &,IOBufferMemoryDescriptor &,ulong long,ulong long,ushort,void *)
clpc::generateReport<clpc::report::StateReport<2ul>>(int &,IOBufferMemoryDescriptor &,ulong long,ulong long,ushort,void *)
clpc::generateSimpleArrayReport<clpc::array<ulong long,2ul>,(void *)0>(int &,IOBufferMemoryDescriptor &,ulong long,ulong long,ushort,void *)
clpc::generateSimpleReport<ulong long,(void *)0>(int &,IOBufferMemoryDescriptor &,ulong long,ulong long,ushort,void *)
clpc::max_of<clpc::tgrp::ControlOutputs::CombinedOutputs>(clpc::tgrp::ControlOutputs::CombinedOutputs,clpc::tgrp::ControlOutputs::CombinedOutputs)
clpc::memory::DVFManager::enable(bool)
clpc::memory::DVFManager::init(void)
clpc::memory::DVFManager::startTrace(void)
clpc::power::CPUANEPowerMap::copyAsObject(void)
clpc::power::CPUANEPowerMap::getMaxPower(void)
clpc::power::CPUANEPowerMap::init(clpc::array<clpc::cpu::DVFMTable,2ul> const&)
clpc::power::CPUANEPowerMap::inverseLookup(clpc::array<float,2ul> const&,clpc::fixed_t<24,uint,clpc::NormalFixedPointCoversions>)
clpc::power::CPUANEPowerMap::lookupByPeakPower(clpc::fixed_t<20,uint,clpc::NormalFixedPointCoversions>,clpc::fixed_t<24,uint,clpc::NormalFixedPointCoversions>)
clpc::power::CPUCorePowerMap::init(uint,clpc::cpu::Topology const&,clpc::cpu::DVFMTable const&,char const*)
clpc::power::CPUWorkloadPowerMap::copyAsObject(void)
clpc::power::CPUWorkloadPowerMap::init(clpc::CPUPerfMap<256ul,clpc::CPUPerfMapPolicyLUT<10ul,256ul>> const&,clpc::array<clpc::power::CPUCorePowerMap,2ul> const&)
clpc::power::CPUWorkloadPowerMap::lookupByEffort(clpc::fixed_t<24,uint,clpc::NormalFixedPointCoversions>)
clpc::power::EnergySampler::syncACC(clpc::array<ulong long,8ul> &)
clpc::power::EnergySampler::syncPMGR(clpc::array<ulong long,8ul> &)
clpc::power::PackageLimiter::init(void)
clpc::power::SimplePowerEquation::calcPower(uint,uint,double,double,uint)
clpc::power::SimplePowerEquation::copyConstants(void)
clpc::priv::Scheduler::signalPerformanceChange(clpc::CLPC &,ulong long,bool)
clpc::report::StateReport<13ul>::setState(uint,ulong long)
clpc::set1MSGainProperty<float,16u,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setBoolProperty<bool>(uint &,void *,clpc::PropertyFlags &)
clpc::setGainProperty<float,16,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setGainProperty<float,24,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setMSToTicksProperty<float,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setMSToTicksProperty<uint,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setMSToTicksProperty<ulong long,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setSaturatingFixedProperty<clpc::fixed_t<15,ushort,clpc::NormalFixedPointCoversions>,16u,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setSimpleProperty<float,16u,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setSimpleProperty<float,24u,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setUSToTicksProperty<float,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setUSToTicksProperty<uint,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::setUSToTicksProperty<ulong long,(void *)0>(uint &,void *,clpc::PropertyFlags &)
clpc::soc::DVFManager::enable(bool)
clpc::soc::DVFManager::startTrace(void)
clpc::tgrp::ANEActivity::update(ulong long,bool)
clpc::tgrp::CPUActivity::update(ulong long,ulong long,bool,bool)
clpc::tgrp::ControlInputs::ControlInputs(ulong long,ulong long,ulong long,ulong long,ulong long,clpc::tgrp::ChainType,bool,clpc::power::FilteredComponentPower const&,bool)
clpc::tgrp::SystemActivity::addActiveTime(ulong long,clpc::tgrp::SystemActivity::ActiveFlags)
clpc::tgrp::ThreadGroupContainer::variant(void)
clpc::tgrp::WorkIntervalInstance::addUsage(ulong long)
clpc::trace<bool &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,bool &)
clpc::trace<clpc::counter::UnaryRateMetric<float> &,ulong long &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,clpc::counter::UnaryRateMetric<float> &,ulong long &)
clpc::trace<float &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,float &)
clpc::trace<ulong long &,clpc::filter::FilteredMetric<float>,clpc::filter::FilteredMetric<float>>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,clpc::filter::FilteredMetric<float>,clpc::filter::FilteredMetric<float> &&)
clpc::trace<ulong long &,float &,float &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,float &,float &)
clpc::trace<ulong long &,float,float>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,float,float &&)
clpc::trace<ulong long &,ulong long &,ulong long &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,ulong long &,ulong long &)
clpc::trace<ulong long &,ulong long const&,clpc::filter::FilteredMetric<float> &,float &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,ulong long const&,clpc::filter::FilteredMetric<float> &,float &)
clpc::trace<ulong long &,ulong long const&,clpc::filter::FilteredMetric<float> &,float>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,ulong long const&,clpc::filter::FilteredMetric<float> &,float &&)
clpc::trace<ulong long &,ulong long,ulong long,ulong long &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long &,ulong long,ulong long,ulong long &)
clpc::trace<ulong long,ulong long &,bool &>(clpc::trace_detail::Level,clpc::trace_detail::EventID,ulong long,ulong long &,bool &)
clpcv3::CLPC::init(ApplePMGRNub &,AppleCLPC &,IOWorkLoop *)
clpcv3::CLPC::processEvent(clpcv3::Event const&)
clpcv3::PropertyFactory::thread_group_cpu_property_defs(void)::{lambda(uint &,void *,clpcv3::PropertyFlags &)#2}::__invoke(uint &,void *,clpcv3::PropertyFlags &)
clpcv3::control::PICurvedConfig<float>::Curve::updateSegment(long)
clpcv3::cpu::CorePerfSampler::sync(clpcv3::array<ulong long,6ul> &)
clpcv3::cpu::DVFMTable::maxCPUCountForDVMRWeightType(clpcv3::cpu::DVMRWeightType)
clpcv3::cpu::DVFManager::checkCoreMaskHoldoffExpired(ulong long)
clpcv3::power::CPUANEPowerMap::lookupByEffort(clpcv3::fixed_t<24,uint,clpcv3::NormalFixedPointCoversions>,clpcv3::fixed_t<24,uint,clpcv3::NormalFixedPointCoversions>)
clpcv3::power::EnergySampler::samplePMGR(clpcv3::array<ulong long,8ul> &,clpcv3::array<ulong long,8ul> &)
clpcv3::report::StateReport<2ul>::setState(uint,ulong long)
clpcv3::setSimpleProperty<clpcv3::fixed_t<24,uint,clpcv3::NormalFixedPointCoversions>,24,(void *)0>(uint &,void *,clpcv3::PropertyFlags &)
clpcv3::tgrp::WorkIntervalConfig::{unnamed type#1}::computeMinEffortSlopeAndIntercept(void)
clpcv3::trace<float &,float &,float &>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,float &,float &,float &)
clpcv3::trace<ulong long &,bool &,ulong long>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ulong long &,bool &,ulong long &&)
clpcv3::trace<ulong long &,clpcv3::filter::FilteredMetric<float> &,float &,float &>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ulong long &,clpcv3::filter::FilteredMetric<float> &,float &,float &)
clpcv3::trace<ulong long &,ulong long const&,float &,float &>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ulong long &,ulong long const&,float &,float &)
clpcv3::trace<ulong long &,ulong long const&,float &>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ulong long &,ulong long const&,float &)
clpcv3::trace<ulong long>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ulong long &&)
clpcv3::trace<ushort &,ushort &,ushort &,ushort &>(clpcv3::trace_detail::Level,clpcv3::trace_detail::EventID,ushort &,ushort &,ushort &,ushort &)
cluster_max_io_size
cmp256(U256,U256)
cmp_io_rgns
coalition_info_resource_usage
collection::count(void)
collection::dequeue(void *)
collection::enqueue(void const*,bool,bool *)
collection::enqueueAddr(bool,bool *)
com_apple_AppleFSCompression_AppleFSCompressionTypeZlib::start(IOService *)
com_apple_AppleFSCompression_AppleFSCompressionTypeZlib::stop(IOService *)
com_apple_driver_AppleUSBCardReaderDriverNub::AttachToInterimParent(void)
com_apple_driver_AppleUSBCardReaderDriverNub::DetachFromInterimParent(void)
com_apple_driver_AppleUSBCardReaderDriverNub::MetaClass::alloc(void)
com_apple_driver_AppleUSBCardReaderDriverNub::QuietDisconnect(void)
com_apple_driver_AppleUSBCardReaderDriverNub::SwitchToInterimParent(void *,IOService *,IONotifier *)
com_apple_driver_AppleUSBCardReaderDriverNub::free(void)
com_apple_driver_AppleUSBCardReaderDriverNub::initialPowerStateForDomainState(ulong)
com_apple_driver_AppleUSBCardReaderDriverNub::powerStateWillChangeTo(ulong,ulong,IOService *)
com_apple_driver_AppleUSBCardReaderDriverNub::requestTerminate(IOService *,uint)
com_apple_driver_AppleUSBCardReaderDriverNub::setPowerState(ulong,IOService *)
com_apple_driver_AppleUSBCardReaderDriverNub::start(IOService *)
com_apple_driver_AppleUSBCardReaderDriverNub::terminate(uint)
com_apple_driver_AppleUSBCardReaderDriverNub::willTerminate(IOService *,uint)
com_apple_driver_AppleUSBCardReaderDriverNub::~com_apple_driver_AppleUSBCardReaderDriverNub()
com_apple_driver_AppleUSBCardReaderDriverNub__InitializePowerManagement_IOService
com_apple_driver_AppleUSBCardReaderInterfaceNub::InitializePowerManagement(IOService *)
com_apple_driver_AppleUSBCardReaderInterfaceNub::MetaClass::alloc(void)
com_apple_driver_AppleUSBCardReaderInterfaceNub::~com_apple_driver_AppleUSBCardReaderInterfaceNub()
com_apple_driver_AppleUSBCardReaderSBC::ApplyGL3213PlatformSettings(void)
com_apple_driver_AppleUSBCardReaderSBC::ApplyGL3219PlatformSettings(void)
com_apple_driver_AppleUSBCardReaderSBC::ApplyPlatformSettings(void)
com_apple_driver_AppleUSBCardReaderSBC::AsyncReadWriteCompletion(OSObject *)
com_apple_driver_AppleUSBCardReaderSBC::CheckForBootArgs(void)
com_apple_driver_AppleUSBCardReaderSBC::CheckForIOSPlatformSettingsAndFeatures(void)
com_apple_driver_AppleUSBCardReaderSBC::GetSDWP(void)
com_apple_driver_AppleUSBCardReaderSBC::GetUSB3LinkErrorCount(void)
com_apple_driver_AppleUSBCardReaderSBC::GetUSB3RxEqualization(uchar,uchar *)
com_apple_driver_AppleUSBCardReaderSBC::HandleCheckPowerState(void)
com_apple_driver_AppleUSBCardReaderSBC::InitializeDeviceSupport(void)
com_apple_driver_AppleUSBCardReaderSBC::InitializePowerManagement(IOService *)
com_apple_driver_AppleUSBCardReaderSBC::IsIphone(void)
com_apple_driver_AppleUSBCardReaderSBC::ProcessPoll(void)
com_apple_driver_AppleUSBCardReaderSBC::ReadLBAZero(OSObject *)
com_apple_driver_AppleUSBCardReaderSBC::ResetGL3219PLL(void)
com_apple_driver_AppleUSBCardReaderSBC::ResetMediumCharacteristics(void)
com_apple_driver_AppleUSBCardReaderSBC::SetCardReadeUHS2Settings(uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar)
com_apple_driver_AppleUSBCardReaderSBC::SetCardReaderClockSettings(uchar,uchar)
com_apple_driver_AppleUSBCardReaderSBC::SetCardReaderSetSSC(bool)
com_apple_driver_AppleUSBCardReaderSBC::SetCardReaderSettingsCMDDelay(uchar)
com_apple_driver_AppleUSBCardReaderSBC::SetUSB3RxEqualization(uchar)
com_apple_driver_AppleUSBCardReaderSBC::SynchronizeCache(void)
com_apple_driver_AppleUSBCardReaderSBC::TicklePowerManager(void)
com_apple_driver_AppleUSBCardReaderSBC::free(void)
com_apple_driver_AppleUSBCardReaderSBC::message(uint,IOService *,void *)
com_apple_driver_AppleUSBCardReaderSBC::probe(IOService *,int *)
com_apple_driver_AppleUSBCardReaderSBC::setAggressiveness(ulong,ulong)
com_apple_driver_AppleUSBCardReaderSBC::terminate(uint)
com_apple_driver_AppleUSBCardReaderUMC::FunctionSuspendFeature(bool)
com_apple_driver_AppleUSBCardReaderUMC::HandleLogicalUnitReset(uchar)
com_apple_driver_AppleUSBCardReaderUMC::InitializePowerManagement(IOService *)
com_apple_driver_AppleUSBCardReaderUMC::SDControllerPower(bool)
com_apple_driver_AppleUSBCardReaderUMC::ValidateGL3219Descriptors(void)
com_apple_driver_AppleUSBCardReaderUMC::free(void)
com_apple_driver_AppleUSBCardReaderUMC::message(uint,IOService *,void *)
com_apple_driver_AppleUSBCardReaderUMC::probe(IOService *,int *)
com_apple_driver_AppleUSBCardReaderUMC::start(IOService *)
com_apple_driver_AppleUSBCardReaderUMC::willTerminate(IOService *,uint)
com_apple_driver_FairPlayIOKit::CrBz3MJei(guNUWjBHDxSrlXfjY *,uint,uchar const*,uchar *,uint)
com_apple_driver_FairPlayIOKit::Dqyxc6zf2Sv(_ProvInfoSeedVersion_ *,uchar const*,uchar *)
com_apple_driver_FairPlayIOKit::Fd7DxKaV3(_ProvInfoSeedVersion_,uchar *,uchar *)
com_apple_driver_FairPlayIOKit::GetDeviceProperty(char const*,char const*,void *,uint *)
com_apple_driver_FairPlayIOKit::GetProductID(uchar *)
com_apple_driver_FairPlayIOKit::H08LTMOhY3h8(uchar *,uint,uchar *,uint,uint *,uint *)
com_apple_driver_FairPlayIOKit::J8i0aN2gZ6hA3nG(_PUCryptoOperation_,uchar *,uint,uchar *,uint)
com_apple_driver_FairPlayIOKit::KDGetReEncryptionVault(guNUWjBHDxSrlXfjY *,uchar *,uint *)
com_apple_driver_FairPlayIOKit::KLzN(uchar const*,ulong,uchar *,ulong *)
com_apple_driver_FairPlayIOKit::Kp0289aEmoqcAa(rp6S0jzg *,_AVDDecryptParams *)
com_apple_driver_FairPlayIOKit::LDdKLPm0(_ProvInfoSeedVersion_,uint,uchar const*,uchar *,uchar *,uint)
com_apple_driver_FairPlayIOKit::LQ1N1WLcw(rp6S0jzg *,uchar const*,uchar *,uint)
com_apple_driver_FairPlayIOKit::OPqktfVJi(void)
com_apple_driver_FairPlayIOKit::R2nPsUOYx6h(uchar *,uint,uchar *,uint)
com_apple_driver_FairPlayIOKit::TtFcxN6vAci(uchar *,uint,uchar *,uint)
com_apple_driver_FairPlayIOKit::ZURJElCowjwysX(_KDIsAVDDecryptionAllowedParamsIO *)
com_apple_driver_FairPlayIOKit::baHb6fa7i(uint,task *,uchar const*,uchar *,uint,uchar *)
com_apple_driver_FairPlayIOKit::eJ7hqOh8Z(guNUWjBHDxSrlXfjY *,ulong long *)
com_apple_driver_FairPlayIOKit::esdDlAoG91SwMkqi(guNUWjBHDxSrlXfjY *,uint,uchar const*,uchar *,uint,SliceInfo_ const*,uint)
com_apple_driver_FairPlayIOKit::fDkV4Su(_PUCryptoOperation_,uchar *,uint)
com_apple_driver_FairPlayIOKit::isJ42dDevice(bool *,uchar *)
com_apple_driver_FairPlayIOKit::qtQQt(task *,uint,uint,uint,uchar const*,uchar const*,uint,uchar *,uchar *,uint *)
com_apple_driver_FairPlayIOKit::rt7FG4pJ0q63hCQQkT1L(guNUWjBHDxSrlXfjY *,uint,uchar const*,uchar *,uint,SliceInfo_ const*,uint)
com_apple_driver_FairPlayIOKit::start(IOService *)
com_apple_driver_FairPlayIOKit::stop(IOService *)
com_apple_driver_FairPlayIOKit::sxvHysrIgQq2V(guNUWjBHDxSrlXfjY *,_AVDDecryptParams *)
com_apple_driver_FairPlayIOKit::wT74ohNhs04Oy(void)
com_apple_driver_FairPlayIOKit::xhU6d1(char const*,long long,long long,rp6S0jzg **)
com_apple_driver_FairPlayIOKit::ycJai39mD8(char const*,long long,long long,FPAppDecryptOrigin_,rp6S0jzg **)
com_apple_driver_FairPlayIOKitUserClient::DSSessionDongleProcessKey(KDDSSessionDongleIO_ *,KDDSSessionDongleIO_ *)
com_apple_driver_FairPlayIOKitUserClient::GetReEncryptionVault(KDReEncryptionVaultIO_ *,KDReEncryptionVaultIO_ *)
com_apple_driver_FairPlayIOKitUserClient::ProcessEncryptedData(RwYEgOMUTKuzQ *,RwYEgOMUTKuzQ *)
com_apple_driver_FairPlayIOKitUserClient::getTargetAndMethodForIndex(IOService **,uint)
com_apple_driver_FairPlayIOKitUserClient::initKextSession(ovHBHGCR5ZAwSmgzDIbVv2Ox *,ovHBHGCR5ZAwSmgzDIbVv2Ox *)
com_apple_driver_FairPlayIOKitUserClient::initWithTask(task *,void *,uint)
com_apple_driver_FairPlayIOKitUserClient::uOxAg(uint *)
com_apple_driver_FairPlayIOKitUserClient::ucADIDeprotectBagWithUID(FPUserADIBagParams_ const*,FPUserADIBagParams_*)
com_apple_driver_FairPlayIOKitUserClient::ucADIProtectBagWithUID(FPUserADIBagParams_ const*,FPUserADIBagParams_*)
com_apple_driver_FairPlayIOKitUserClient::ucDecryptOneSample(lvIKvKE const*,lvIKvKE*)
com_apple_driver_FairPlayIOKitUserClient::ucEncryptSUInfo(ProvInfoIOKitUserEncryptSUInfoInput_ const*,ProvInfoIOKitUserEncryptSUInfoInput_*)
com_apple_driver_FairPlayIOKitUserClient::ucEncryptWithWrappedKey(ProvInfoIOKitUserEncryptWithWrappedKeyInput_ const*,ProvInfoIOKitUserEncryptWithWrappedKeyInput_*)
com_apple_driver_FairPlayIOKitUserClient::ucExchangeWithHoover(uchar const*,uchar *,ulong,ulong *)
com_apple_driver_FairPlayIOKitUserClient::ucGenerateInFieldSeed(ProvInfoIOKitUserGenerateInFieldSeedIO_ const*,ProvInfoIOKitUserGenerateInFieldSeedIO_*)
com_apple_driver_FairPlayIOKitUserClient::ucGenerateSeed(ProvInfoIOKitUserGenerateSeedIO_ const*,ProvInfoIOKitUserGenerateSeedIO_*)
com_apple_driver_FairPlayIOKitUserClient::ucGetEncryptedSeedSegment(ProvInfoIOKitUserGetEncryptedSeedSegmentInput_ *,uchar *)
com_apple_driver_FairPlayIOKitUserClient::ucGetProtocolCapabilities(uint *)
com_apple_driver_FairPlayIOKitUserClient::ucGetVersion(uint *)
com_apple_driver_FairPlayIOKitUserClient::ucRunVersioned(kJAimpk const*,kJAimpk*)
com_apple_driver_KeyDeliveryIOKit::C3eOYyXKaxVgNh(guNUWjBHDxSrlXfjY *,uint,uint,uint,uchar *,uint,uchar const*,uchar *,uint)
com_apple_driver_KeyDeliveryIOKit::CrBz3MJei(guNUWjBHDxSrlXfjY *,uint,uchar const*,uchar *,uint)
com_apple_driver_KeyDeliveryIOKit::LookupFairPlayIOKit(void)
com_apple_driver_KeyDeliveryIOKit::eJ7hqOh8Z(guNUWjBHDxSrlXfjY *,ulong long *)
com_apple_driver_KeyDeliveryIOKit::init(OSDictionary *)
com_apple_driver_KeyDeliveryIOKit::rt7FG4pJ0q63hCQQkT1L(guNUWjBHDxSrlXfjY *,uint,uchar const*,uchar *,uint,SliceInfo_ const*,uint)
com_apple_driver_KeyDeliveryIOKit::stop(IOService *)
com_apple_driver_KeyDeliveryIOKit::sxFZW6XTFuWAV(guNUWjBHDxSrlXfjY *,uchar const*,uint,uchar const*,uint,SliceInfo_ const*,uint,uchar *)
com_apple_driver_KeyDeliveryIOKit::sxvHysrIgQq2V(guNUWjBHDxSrlXfjY *,_AVDDecryptParams *)
com_apple_driver_KeyDeliveryIOKitUserClient::BhC27sdosUloe3w(ovHBHGCR5ZAwSmgzDIbVv2Ox *,ovHBHGCR5ZAwSmgzDIbVv2Ox *)
com_apple_driver_KeyDeliveryIOKitUserClient::IUjmnmQJCeChncCM(KDDSSessionDongleIO_ *,KDDSSessionDongleIO_ *)
com_apple_driver_KeyDeliveryIOKitUserClient::NeurZDENovkbM5B(RwYEgOMUTKuzQ *,RwYEgOMUTKuzQ *)
com_apple_driver_KeyDeliveryIOKitUserClient::Q7XAVRnkuHxY6niW8U6cz7oXQi(uint *)
com_apple_driver_KeyDeliveryIOKitUserClient::getTargetAndMethodForIndex(IOService **,uint)
com_apple_driver_KeyDeliveryIOKitUserClient::initWithTask(task *,void *,uint)
com_apple_driver_KeyDeliveryIOKitUserClient::stop(IOService *)
com_apple_filesystems_apfs::start(IOService *)
com_apple_filesystems_hfs::start(IOService *)
com_apple_filesystems_hfs::stop(IOService *)
com_apple_filesystems_lifs::start(IOService *)
com_apple_filesystems_lifs::stop(IOService *)
common_start
compareAudioStreams(Audio2Stream *,Audio2Stream *,void *)
completeSynchronousCommand(void *,void *,int,ulong long)
compressAwdl(uchar *,uint,uchar *,uint,uchar *,uint)
compressed_fb_size(uint,uint,IOMobileFramebufferLegacy::BufferLayout *,uint *,uint *)
configureIPv6LLOnBSDInterface(IONetworkInterface *,bool)
container_get(char const*,int *)
container_kb_get(kb_access *,bool *)
container_kb_put(kb_access *)
container_kb_wipe(kb_access *)
container_keybag_operation(nx_keybag *,ulong long,keybag_entry *,keybag_entry *,container_keybag_operation_t,bool)
container_keybag_setup(nx_keybag *,int,dev_handle **,prange *,nx **,media_keybag **,ulong *,uint *)
container_list_lock(void)
container_location_is_not_internal(IORegistryEntry *)
container_location_is_virtual(IORegistryEntry *)
context(_effaceable_system *)
context(_effaceable_system *)
contrast_engamma::operator()(double)
controllerTerminated(void *,void *,IOService *,IONotifier *)
convertApple80211IOCTLToString(int)
convertApple80211ReturnToErrno(int)
convertApple80211ReturnToString(int)
convertApplePMKIDlistToV2(apple_pmkid_list *)
convertStringToEvent(char const*)
copyBSDNameForInterface(IONetworkInterface *,char *)
copyDTProperty(void *,IORegistryEntry *,char const*,uint,bool)
copyDataToVec(uchar const*,uint,int,decmpfs_vector *)
copyEntitlements(proc *)
copyEntitlements(ucred *)
copy_container_path_for_id(sb_ustate *,OSDictionary *,char const*)
corecaptureIsDebuggble(void)
corecaptureIsValidNumber(char const*,ulong long *)
countBSDEnablesApplier(IOService *,void *)
countChannelsInIOReportChannels(OSArray const*)
countChannelsInIOReportLegend(OSArray const*)
countChannelsInIOServiceDictionary(OSDictionary const*)
count_keepalive(mDNSHandoff *,bool)
counter_alloc(ulong long **)
cpu_to_processor
cpx_copy
createClaryAvcDecoder(void *)
createCloverHevcDecoder(void *)
createCloverLghDecoder(void *)
createDahliaAvcDecoder(void *)
createDahliaHevcDecoder(void *)
createDahliaLghDecoder(void *)
createDictionaryFromThisLegend(IOReportLegend *)
createDictionaryOfThisService(IOService *)
createInfoDictionary(char const*,nx *,OSDictionary **,bool)
createInterestDictionaryFromIOServiceDictionary(OSDictionary const*,IOService *)
createInterestDictionaryFromInterestsAndSubscription(OSArray *,ulong long)
createInterestList(OSDictionary *,int,ulong *)
createInterestListFromArray(OSArray *,int,ulong *)
createInterestsDictionary(IOReportInterestList *)
createIxoraHevcDecoder(void *)
createNewRootDictWithSubscriptionDict(OSDictionary *,OSDictionary *)
createResourceGroupIDKey(uint,uint)
createRoseHevcDecoder(void *)
createSalviaA0LghDecoder(void *)
createViolaHevcDecoder(void *)
csops_audittoken
cst_from_fvkey(dev_handle *,crypto_state *,aks_fv_key_s *)
ctl_getenqueuepacketcount
cuckoo_hashtable_add_with_hash
dbg_mach_time_us(void)
dead_strategy
debugApComm(uint,uint)
debug_legacy_state_is_valid
debug_legacy_state_is_valid_0
decmpfs_cnode_set_vnode_state
decmpfs_fetch_uncompressed_data_Type1
decmpfs_lock_compressed_data
decmpfs_unlock_compressed_data
decompress(FileChunker *,long long,long long,int,decmpfs_vector *,ulong long *)
delayed_event_delivery
delta_teardown_thread(void *,int)
dev_free_hier
devfs_inactive
devfs_is_name_protected
devfs_readlink
devfs_reclaim
devfs_root
deviceUnlocked(bool *)
devs_vnop_pathconf
dflt_cmp
di_load_controller(void)
disableTarget(IOKernelDebugger *,IOService *,uint *,uint)
div256(U256,U256)
dkreadwrite(void *,dkrtype_t)
dkreadwritecompletion(void *,void *,int,ulong long)
dlil_dt_tcall_fn
dlil_input_wakeup
doc_tombstone_clear
doublePrintFraction(double)
doublePrintZeros(double)
doubleSetFraction(double,double)
doubleToFixed(double,uint,uint)
doubleZeroSign(double)
dropOldHoldNew(OSDictionary *,OSDictionary *)
dtrace_assfail
dumpBcomPMK(CCLogStream *,wsec_pmk &)
dump_apple_key(CCLogStream *,apple80211_key const&)
dump_assoc_data(CCLogStream *,apple80211_assoc_data const&)
edrScaledsRGB::operator()(double)
edtNameToClientID(char const*)
el1_sp0_serror_vector_long
el1_sp1_irq_vector_long
elementWithHighestScoreFromArray(OSArray *,OSMetaClass const*)
enableBSDInterface(IONetworkInterface *)
enableTarget(IOKernelDebugger *,IOService *,uint *,uint)
entitlementAllowedByConstraints(entitlement_constraint_t const*,char const*,OSObject *,char const*)
epilog1
escape_str
esp4_output
esp_3des_schedule
esp_gcm_schedlen
eventCompareCallback(void *,void *)
eventhandler_find_list
execve
extension_cmp
external_module_alloc(void)
extractKeepAliveInfo(mDNSHandoff *,uint,uint)
fatal_error_fmt(LazyPath *,char **,ulong *,char const*,...)
ffw_calloc(ulong,ulong)
file_extent_callback(void *,ulong long,ulong long)
fillAdditionalPlaneInfo(IOSurfaceLockResultPlaneInfo *,IOSurfaceAdditionalPlaneInfo *,uint)
fill_in_filter_coeffs(uint *,uint *,bool,bool)
filt_che_detach
filt_chrdetach
filt_chwdetach
filt_fsevent
filt_fsevent_touch
filt_memorystatusprocess
filt_timerdetach
filt_userprocess
filt_usertouch
filt_vnprocess
filt_vntouch
findEntryInternal(MISDenylistEntry const*,MISDenylistEntry*,ulong)
findMatchingEndpoint(uchar,uchar,StandardUSB::ConfigurationDescriptor const*,StandardUSB::InterfaceDescriptor const*)
findPercentIndex(int)
findServiceWithRole(char const*,OSObject *)
findTLVCursorForType<IO80211TLVHeader<uchar,ushort,0ul,1ul>,uchar>(IO80211BufferCursor,IO80211BufferCursor&,uchar,ulong *)
find_closest_ref(HevcPictureInfo **,int,int)
firmwareExecutionCallback(_img4_firmware *,_img4_image *,int,void *)
fixedToDouble(int,uint,uint)
fixedToDouble(long long,uint,uint,bool)
fixedToFloat(int,uint,uint)
fixedToFloat(int,uint,uint,bool)
fleh_invalid_stack
fleh_invalid_stack_0
fleh_serror_from_ppl
fleh_synchronous_from_ppl
floatToFixed(float,uint,uint)
flow_divert_disconnectx
flow_divert_pcb_remove
flow_divert_send_connect_packet
flow_namespace_create
flow_route_cleanup
formatHook(_effaceable_bdev_hal *)
fps_IOFixed_to_period_ns(int)
freeExtentInfoCallback(void *,long long *,long long *)
fsw_ethernet_ctor
fsw_uninit
fubyte
fusion_unpairing(uchar *,AppleAPFSContainerScheme *,int)
gIOHIDFamilyDtraceDebug(void)
generateOptionPacket(void *,ulong,optionCodes,char const*,char *)
generate_container_key(char const*,uint)
get2GChainDisable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
get40MhzIntolerant(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getACIPCDirectionString(acipcDirection)
getAP_IE_List(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getARMFunction(IORegistryEntry *,char const*)
getAVDVersion(uint *,uint)
getAggressivenessTypeString(uint)
getAntenna(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getApMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getArray(OSDictionary *,char const*,OSArray **)
getAssociateResult(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAssociationHistory(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAssociationStatus(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAuthType(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlAirplayStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlAvailabilityWindowApAlignment(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlBssid(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlBtleStateParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlCCA(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlChannelSequence(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlCommonChannel(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlCtl(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlDevStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlElectionId(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlElectionParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlElectionRssiThresholds(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlExtensionParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlForceMaster(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlGuardTime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlMasterSyncFramePeriod(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlMaxPeers(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlOUI(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlOperatingMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlPeerDatabase(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlPeerServiceParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlPeerServiceRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlPeerTrafficRegistration(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlPresenceMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlRestorDefaults(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSidecarDiagnostics(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSidecarStatistics(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlStatistics(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlStrategy(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSyncEnabled(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSyncFrameApAlignment(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSyncFramePacketLifetime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSyncParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlSyncState(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getAwdlTopMaster(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBGScanCacheResults(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBSSID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBTCoexFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBTCoexMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBTPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBackgroundScan(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBasebandChipset(char *,ulong)
getBeaconInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBeaconPeriod(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBeaconScanCache(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBlockAck(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getBlockSizeHook(_effaceable_bdev_hal *)
getBoolean(OSDictionary *,char const*)
getBufferData(ulong long,ulong long,task *,void **)
getCCA(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCDDMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCLDebugString(ChromaOrLuma)
getCacheAgeThresh(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCacheThreshBcast(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCacheThreshDirect(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCalendarTimeNanoSec(ulong long *)
getCalendarTimeNanoSec(ulong long *)
getCardCapabilities(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getChannel(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getChannelInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getChipDiags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getChipPowerRange(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getChromaDownsamplingMethod(uint)
getClassName(OSObject const*)
getColocatedNetworkScopeID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCountryCode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCurPmk(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getCurrentNetwork(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getDTIMInt(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getDaemonPort(ipc_port **)
getDbgGuardTime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getDeauth(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getDebugFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getDecimatorConfig(IOService *,char const*,AppleAOPAudioFirmware::LowPowerPDM2Configuration::DecimatorConfig &)
getDriverLengthBeforeSensitivePayloadUDP(int,__mbuf *)
getDriverLengthBeforeSensitivePayloadUDPSkywalk(int,uchar *)
getDynSARDet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getEntitlements(ucred *)
getErrorNo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getErrorString(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getFactoryMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getFloodModuleType(void)
getFragThreshold(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getGASResults(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getGuardInterval(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getHEMCSIndexSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getHostApModeHidden(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getHtCapabilityIE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getHwMacAddr(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getHwSupportedChannels(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getIE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getIntMit(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getIntegerPropertyDefault<uint>(IOService *,char const*,uint)
getKeyRSC(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLDPC(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLLWParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLQMConfig(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLQMSummary(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLastBcastScanTime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLastRxPktData(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLeakyAPStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLeakyAPStatsMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLengthBeforeSensitivePayload(int,__mbuf *)
getLengthBeforeSensitivePayloadFromEthHeaderStart(uchar *,ulong,ulong,__mbuf *)
getLengthBeforeSensitivePayloadFromLinkHeaderStart(uint,IOSkywalkNetworkPacket *,uchar *)
getLengthBeforeSensitivePayloadUDP(int,__mbuf *,uchar *)
getLinkChangedEventData(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLinkQualEventParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLocale(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLogFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLogLevelName(CCStreamLogLevel)
getLowlatencyStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getLqmCrashTracerData(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMCS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMCSIndexSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMCSRateTable(mcs_rt_entry const**,uint *,uchar,apple80211_channel_width,apple80211_ampdu_stat_rate)
getMPDU(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMSDU(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMaxBlockHook(_effaceable_bdev_hal *)
getMaxSupportedNSSForAssociatedAP(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMimoPowersave(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMimoStatus(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getMonotonicTime(void)
getMulticastRate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANAdvertisers(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANClusterId(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANCommittedAvailability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANCtl(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANCurrentAMRRecord(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANDWAwakePeriod(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANDeviceInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANDiscBcnPeriod(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANDiscoveryResult(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANDpInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANEnable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANFollowupReceivedInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANMasterRank(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANPeerDataBase(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANPublishedServiceList(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANPublisherList(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANQosParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANServiceDiscoveryStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANSyncStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNANUserConfiguredChannelSequence(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNSS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNoise(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getNumber(OSDictionary *,char const*,uint *)
getNumberFromDeviceTree(char const*,char const*)
getOffloadTcpkaEnable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getOpMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getOtherVH(VerticalOrHorizontal)
getP2PCTWindow(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getP2PNoAList(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getP2POppPS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPLS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPMKCache(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPSMP(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPacket(uint,uint,uint,uint)
getPeerStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPhyMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPhySubMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPidForTask(task *)
getPidLocked(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPowerBudget(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPowerDebugInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPowerStateString(uint)
getPowersave(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getPrivateMAC(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getProtMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRIFS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getROM(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRSN_Conf(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRSN_IE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRSSI(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRSSIBounds(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRadioInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRand(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRangingCapabilities(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRangingEnable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRangingResults(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRateSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getReferenceToSubscriptionInterestArrayFromRoot(ulong long,OSDictionary *)
getRetryLimit(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRllwStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRoamProfile(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getRoleFromDictionary(OSDictionary const*,void *)
getRxRate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSSID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSTA_IE_LIST(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSTA_Stats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getScanBackoffReport(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getScanResult(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getScansSuppressed(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getShortSlot(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSkywalkPacketAddress(IOSkywalkNetworkPacket *)
getSoftAPParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSoftAPStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getStateReq(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getStationList(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getStorageSizeHook(_effaceable_bdev_hal *)
getSupportedChannels(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSupportedChannelsForCountry(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getSystemSleepPreventerString(uint)
getTKODump(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getTKOParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getTXChainPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getThermalIndex(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getThermalThrottling(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getTrapCrashTracerMiniDump(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getTrapInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getTxPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getUCMCoexProfile(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getUCMCoexProfileActive(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getUInt32Property(IOService *,char const*)
getUserspaceP2POptions(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getVHDebugString(VerticalOrHorizontal)
getVHTMCSIndexSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getValueFromKeyInDict(OSDictionary const*,OSSymbol const*,uint *,bool)
getVendorDebugFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getVersion(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getVersionInfo(AGXVersionInfo &)
getVhtCapabilityIE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getVirtualIfParent(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getVirtualIfRole(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getWoWEnabled(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getWoWParameters(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getWoWTest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
getWpsInfoRollingHash(WPSInfo const*)
get_apfs(int,nx *,apfs **)
get_chosen_property(char const*,bool)
get_chosen_property(char const*,bool)
get_container_for_uuid(uchar *)
get_ioreg_entry_property(IORegistryEntry *,char const*,uchar *,uint)
get_mac_addr
get_rr_type_len(mDNSHandoff *,void *,ushort *,ushort *)
get_terminated_scheme_from_stash(IOService *)
getattrlist_fixupattrs
getc
gl_close(gl_ctx *)
gl_corrupt_nand_size_test(gl_ctx *)
gl_crash_recovery_test(gl_ctx *)
gl_fillup_test(gl_ctx *)
gl_fixup_rev_init(gl_ctx *)
gl_many_duplicate_records_test(gl_ctx *)
gl_open(char const*,gl_ctx *)
gl_rec_delete(gl_ctx const*,ulong long)
gl_rec_delete_all(gl_ctx const*)
gl_rec_find(gl_ctx const*,gl_rec_id const*,int *,gl_rec_hdr *)
gl_rec_find_free(gl_ctx const*,int *,ulong)
gl_rec_multiple_write_read_test(gl_ctx *)
gl_rec_read(gl_ctx const*,gl_rec_id const*,bool *,uchar *,ulong *)
gl_rec_write(gl_ctx *,gl_rec_id const*,uchar const*,ulong)
gl_rec_write_read_test(gl_ctx *,gl_rec_id const*)
gl_records(gl_ctx const*,ulong long *)
gl_write(gl_ctx const*,ulong long,uchar const*,ulong)
gso_ipv4_tcp_update
h264_sqrt(float)
halt_log(char const*,...)
halt_log_putc(char)
handleActivationChange(IOKernelDebugger *,void *)
handleDataPathChannelChangeCallback(void *,apple80211_nan_radio_resource_change_reason,void *)
handleDictAddition(OSSharedPtr<OSDictionary> const&,der_vm_context)
handle_watchpoint
have_container_path_for_id(sb_ustate *,OSDictionary *,char const*)
hex_dump(uchar *,int,char const*,...)
host_priv_server_routine
iBootAudioVolumeManager::applyPendingNVRAMVolumeUpdate(void)
iBootAudioVolumeManager::initWithConfig(iBootAudioVolumeManager::iBootAudioVolumeManagerConfig const*)
iBootAudioVolumeManager::readFromNVRAM(ushort &)
iBootAudioVolumeManager::updateMute(bool)
iBootAudioVolumeManager::updateVolume(ushort)
iBootAudioVolumeManager::withTargetSpecificConfig(OSData const*)
iBootAudioVolumeManager::writeNVRAMVariable(ushort)
iOSAAFProxy::callFunction(void *,void *,void *)
iOSAAFProxy::create(AppleARMFunction *,uint)
iOSAAFProxy::free(void)
iOSAAFProxy::init(AppleARMFunction *,uint)
iOSAAFProxy::operator delete(void *,ulong)
iOSAAFProxy::operator new(ulong)
iOSAAFProxy::~iOSAAFProxy()
iOSBufferDescriptor::get_capacity(void)
iOSBufferDescriptor::operator delete(void *,ulong)
iOSBufferDescriptor::operator new(ulong)
iOSMemoryDescriptor::complete(IOMFB::MemoryDescriptor::Options)
iOSMemoryDescriptor::getLength(void)
iOSMemoryDescriptor::getPhysicalAddress(void)
iOSMemoryDescriptor::get_ap_phys_addr(void)
iOSMemoryDescriptor::init(IOMemoryDescriptor *)
iOSMemoryDescriptor::map(uint)
iOSMemoryDescriptor::operator delete(void *,ulong)
iOSMemoryDescriptor::operator new(ulong)
iOSMemoryDescriptor::prepare(IOMFB::MemoryDescriptor::Options)
iOSMemoryMap::cache_release(bool)
iOSMemoryMap::get_ap_phys_addr(void)
iOSMemoryMap::get_len(void)
iOSMemoryMap::get_phys_addr(void)
iOSMemoryMap::get_virt_addr(void)
iOSMemoryMap::iOSMemoryMap(void)
iOSMemoryMap::init(IOMemoryMap *)
iOSMemoryMap::operator delete(void *,ulong)
iOSMemoryMap::operator new(ulong)
iOSMemoryMap::~iOSMemoryMap()
iOSSvcProx::enableDeviceClock(uint,uint)
iOSSvcProx::enableDevicePower(uint,uint *,uint)
iOSSvcProx::free(void)
iOSSvcProx::getClockFrequency(uint)
iOSSvcProx::get_fx_prop(char const*,int *)
iOSSvcProx::get_property(char const*,IOMFB::UPIOSvcProxy::DataBuffer *,bool)
iOSSvcProx::get_property(char const*,void const**,uint *)
iOSSvcProx::get_uint_prop(char const*,uint *)
iOSSvcProx::get_uint_prop(char const*,ulong long *)
iOSSvcProx::iOSSvcProx(void)
iOSSvcProx::init(IOService *)
iOSSvcProx::mapDeviceMemoryWithIndex(uint,uint)
iOSSvcProx::mapDisplayDeviceMemoryWithPhysicalAddress(ulong long,ulong long,uint)
iOSSvcProx::operator delete(void *,ulong)
iOSSvcProx::operator new(ulong)
iOSSvcProx::removeProperty(OSString const*)
iOSSvcProx::removeProperty(char const*)
iOSSvcProx::setProperty(OSString const*,OSArray const*)
iOSSvcProx::setProperty(char const*,OSArray const*)
iOSSvcProx::setProperty(char const*,bool)
iOSSvcProx::set_bool_prop(char const*,bool)
iOSSvcProx::set_fx_prop(char const*,int)
iOSSvcProx::set_uint_prop(char const*,uint)
iOSSvcProx::set_uint_prop(char const*,ulong long)
iOSSvcProx::~iOSSvcProx()
i_coal_resource_dealloc
i_coal_resource_init
idle_timer_expired(void *,void *)
if_data_internal_to_if_data
if_data_internal_to_if_data64
if_get_protolist
if_rtdel
ifioctl_nexus
ifnet_enable_output
ifnet_enqueue
ifnet_flowid
ifnet_get_fastlane_capable
ifnet_get_inuse_address_list
ifnet_lastchange
ifnet_lladdr
ifnet_notice_node_absence
ifnet_notice_node_presence
ifnet_notice_node_presence_v2
ifnet_notify_tcp_keepalive_offload_timeout
ifnet_poll_params
ifnet_report_issues
ifnet_set_bandwidths
ifnet_set_low_power_mode
ifp_if_demux
ifp_if_framer_extended
ifp_if_input
ifp_if_input_poll
ifp_if_output
im6f_leave
imf_leave
in6_if2idlen
in_lltable_delete_entry
in_matroute
in_matroute_args
inc256(U256 *)
inet_cksum_simple
initOSLog(void)
initTrustCacheAccess(void)
initUDIDEnforcement(void)
init_block
init_fs_context(aks_cred_s *,aks_fs_context_s *)
initializeCoalesceKeys(void)
inp_clear_INP_INADDR_ANY
inspect_container_map(ushort,ushort,OSDictionary *,sb_packbuff *)
inspect_system_group_container_path(sandbox *,sb_creation_context *,OSString *,void *)
interchange_detile_plane(uchar *,int,uchar const*,int,int,int)
interchange_detile_sb_neon(uchar *,int,uchar const*,int)
interchange_init_functions(void)
interchange_tile_plane(uchar *,uchar const*,int,int,int,int)
interchange_tile_sb_neon(uchar *,uchar const*,int,int)
interruptAccountingDataAddToList(IOInterruptAccountingData *)
interruptAccountingDataInheritChannels(IOInterruptAccountingData *,IOSimpleReporter *)
interruptAccountingDataRemoveFromList(IOInterruptAccountingData *)
interruptAccountingDataUpdateChannels(IOInterruptAccountingData *,IOSimpleReporter *)
interruptAccountingInit(void)
intervalXtoIntervalY(ulong long,ulong long,ulong long)
intrusive_osobject_retainer::release(OSMetaClassBase const&)
io_fence_callback(void *,void *,IOSurface *,int)
iofilter_applier(IOUserClient *,ulong,io_filter_type_t,uint)
iokit_block_count(dev_handle *)
iokit_block_size(dev_handle *)
iokit_bsddev_cache_find(bsddev_cache *,int)
iokit_bsddev_cache_insert(void *,void *,IOService *,IONotifier *)
iokit_bsddev_cache_remove(void *,void *,IOService *,IONotifier *)
iokit_entry_for_bsddev_slow(int,char const*)
iokit_features(dev_handle *,uint *,uint *,uint *,uint *)
iokit_notification_callback(void *,void *,IOService *,IONotifier *)
iokit_read(dev_handle *,long long,ulong,void *,crypto_state *,int)
iokit_server_routine
iomfb_CreateAUPPacketCallback(OSObject *,OSData *,void *)
iomfb_parse_boot_argn(char const*,void *,int)
iop_ringbuffer_dequeue_all(iop_ringbuffer_ref *,void (*)(void *,void *,void *,ulong,uint,uint,uint),void *)
iop_ringbuffer_enqueue_msg_vec(iop_ringbuffer_ref *,iop_ringbuffer_iovec *,ulong,uint,uint,uint)
iop_ringbuffer_get_extended_info(iop_ringbuffer_ref *,uint,ulong *)
iop_ringbuffer_init_ex(iop_ringbuffer_ref *,void *,uchar *,ulong,iop_ringbuffer_cb const*,uint,uint,uint,iop_ringbuffer_config *)
iop_ringbuffer_is_empty(iop_ringbuffer_ref *)
iop_ringbuffer_read(iop_ringbuffer_ref *,uchar **,ulong *,uint *,uint *,uint *)
iop_ringbuffer_reset(iop_ringbuffer_ref *)
iop_ringbuffer_update_read_pointer(iop_ringbuffer_ref *)
ip6_addaux
ip6_drain
ip6_proto_input
ip6_splithdr
ip_drain
ip_gre_register_input
ip_input_adjust
ipfq_drain_sysctl
ipsec_copy_policy
ipsec_ctl_send
ipsec_nexus_disconnected
ipsec_setsocket
iptap_if_output
isCallingProcessEntitled(void)
isKeepAliveRR(mDNSHandoff *,void *,char const*,uchar **,uchar *)
isProfileHardeningExempt(ProfileValidationData &)
isValidTxStatus(int)
issue_extension_for_iokit_registry_entry(sandbox *,sb_creation_context *,OSString *,void *)
issue_extension_for_mach_service(sandbox *,sb_creation_context *,OSString *,void *)
issue_extension_for_preference_domain(sandbox *,sb_creation_context *,OSString *,void *)
issue_extension_for_sysctl(sandbox *,sb_creation_context *,OSString *,void *)
issue_extensions_for_system_group(sandbox *,sb_creation_context *,OSString *,void *)
kauth_add_callback_to_scope
kcdata_push_array
kcdata_push_data
kern_buflet_get_object_segment
kern_buflet_set_data_address
kern_buflet_set_data_length
kern_buflet_set_data_limit
kern_buflet_set_data_offset
kern_channel_get_service_class
kern_channel_slot_get_context
kern_copy_and_inet_checksum
kern_nexus_controller_deregister_provider
kern_packet_set_flow_uuid
kern_pbufpool_alloc_batch
kern_pbufpool_alloc_batch_callback
kern_pbufpool_alloc_batch_nosleep
kern_pbufpool_alloc_batch_nosleep_callback
kernel::IOSerialBSDClientGlobals::IOSerialBSDClientGlobals(void)
kernel::IOSerialBSDClientGlobals::assign_dev_t(void)
kernel::IOSerialBSDClientGlobals::getUniqueTTYSuffix(OSSymbol const*,OSSymbol const*,int,bool)
kernel::IOSerialBSDClientGlobals::releaseUniqueTTYSuffix(OSSymbol const*,OSSymbol const*)
kernel::IOSerialBSDClientGlobals::~IOSerialBSDClientGlobals()
kev_control
kext_log(char const*,...)
kext_log_putc(char)
key_checkspidup
key_cmpspidx_exactly
key_services(void)
key_setsadbaddr
keybag_operation(kb_access *,keybag_entry *,keybag_entry *,bool)
kmem_alloc_kobject_external
kmputc
kmtimeout
knote
knote_detach
kperf_kpc_cpu_sample
kperf_thread_scheduling_log
kr_rxprologue_upp
ktraceFenceLocked(uint,uint,uint,bool)
ktraceFenceRequest(uint,uint,uint,uint,bool)
ktraceFenceUnlock(uint,uint,uint,bool)
ktraceIntervalEnd(uint,uint,uint,uint,uint)
ktraceIntervalStart(uint,uint,uint,uint,uint)
ktracePackArgs2(uint,uint)
ktracePackArgs4(uint,uint,uint,uint)
ktraceSignpost(uint,uint,uint,uint,uint)
ktraceSwapQueue(IOMFBSwapIORequest const*)
layout_buffers(IOSurface *,uint,uint,IOMobileFramebufferLegacy::BufferLayout *)
libkern::bounded_array<AHS::Leela::Sym const,5ul,os_detail::panic_trapping_policy>::begin(void)
libkern::bounded_array<RTBuddyBinaryLogEntryHandler *,8ul,os_detail::panic_trapping_policy>::end(void)
libkern::bounded_array_ref<AHS::Fault::LogFault const,os_detail::panic_trapping_policy>::end(void)
libkern::bounded_array_ref<IOReporterChannelInfo const,os_detail::panic_trapping_policy>::end(void)
libkern::bounded_array_ref<uchar,os_detail::panic_trapping_policy>::slice(ulong,ulong)
libkern::intrusive_shared_ptr<IOMemoryDescriptor,intrusive_tagged_osobject_retainer<OSCollection>>::reset(IOMemoryDescriptor*,libkern::retain_t)
libkern::intrusive_shared_ptr<IOMemoryMap,intrusive_osobject_retainer>::reset(void)
libkern::intrusive_shared_ptr<IOSurfaceSharedEvent,intrusive_osobject_retainer>::reset(IOSurfaceSharedEvent*,libkern::retain_t)
libkern::intrusive_shared_ptr<OSData,intrusive_osobject_retainer>::operator bool(void)
libkern::intrusive_shared_ptr<OSData,intrusive_osobject_retainer>::operator=(libkern::intrusive_shared_ptr<OSData,intrusive_osobject_retainer>&&)
libkern::intrusive_shared_ptr<OSData,intrusive_osobject_retainer>::reset(OSData*,libkern::no_retain_t)
libkern::operator!=<IOBufferMemoryDescriptor,intrusive_osobject_retainer>(libkern::intrusive_shared_ptr<IOBufferMemoryDescriptor,intrusive_osobject_retainer> const&,decltype(nullptr))
libkern::operator==<IOBufferMemoryDescriptor,intrusive_osobject_retainer>(libkern::intrusive_shared_ptr<IOBufferMemoryDescriptor,intrusive_osobject_retainer> const&,decltype(nullptr))
libkern::safe_allocation<OSSharedPtr<OSSymbol const>,os_detail::IOKit_allocator,os_detail::panic_trapping_policy>::destroy_dealloc_(OSSharedPtr<OSSymbol const>*,ulong)
libkern::safe_allocation<RTBuddyEndpoint *,os_detail::IOKit_allocator,os_detail::panic_trapping_policy>::end(void)
lo_framer
lo_set_bpf_tap
loadRequest(char const*)
loadTrustCacheWithExternalManifest(void *,ulong long,void *,ulong long)
lock_vnode_and_post
logHex(char const*,uchar const*,ulong long)
logIosaActivity(iosaLogActivity,uint,void *,ulong long)
logIosaActivity(iosaLogActivity,uint,void *,ulong long)
loge(double)
lookupDTProperty(IORegistryEntry *,OSSymbol const*,uint,bool)
lookupDTProperty(IORegistryEntry *,OSSymbol const*,uint,bool)
lookupDTProperty(IORegistryEntry *,char const*,uint,bool)
lookupDTProperty(IORegistryEntry *,char const*,uint,bool)
lookupSurfaces(uint,uint *,IOSurface **)
lookup_registry_devno(int,char *,int,bool *)
lookup_registry_name(char const*,bool *)
lut_interp(IOMFB::BICGainProcessor::ParamLUT const*,int)
mDNSHandoff::cleanupAllocations(void)
mDNSHandoff::free(void)
mDNSHandoff::getInfoFromInterfaces(__ifnet *)
mDNSHandoff::getIpV4_AddressInfo(__ifaddr **,bool,__ifnet *,int,__ifnet *)
mDNSHandoff::getIpV6_AddressInfo(__ifaddr **,bool,__ifnet *,int,__ifnet *)
mDNSHandoff::init(task *,__ifnet *,mDNSOffloadCmd *,uint,uint)
mDNSHandoff::processRRRecords(task *,mDNSOffloadCmd &)
mDNSHandoff::withTaskIfNetCommand(task *,__ifnet *,mDNSOffloadCmd *,uint,uint)
mDNSOffloadUserClient::GetKeepaliveData(sockaddr_in6 *,sockaddr_in6 *,uint *,uint *,uint *)
mDNSOffloadUserClient::GetKeepaliveData(uint,ushort,uint,ushort,uint *,uint *,uint *)
mDNSOffloadUserClient::PublishForDaemon(IORegistryEntry *,bool,bool)
mDNSOffloadUserClient::doRequest(void *,void *,ulong long,ulong long *)
mDNSOffloadUserClient::doRequestGated(void *,void *,ulong long *,ulong long *)
mDNSOffloadUserClient::free(void)
mDNSOffloadUserClient::getTargetAndMethodForIndex(IOService **,uint)
mDNSOffloadUserClient::start(IOService *)
mDNSOffloadUserClient::stop(IOService *)
mDNSOffloadUserClient::withTask(task *,__ifnet *,int (*)(OSObject *,mDNSOffloadUserClient*,mDNSHandoff *,void *),int (*)(OSObject *,mDNSOffloadUserClient*,ulong long,ulong long,void *),void *)
m_cat
m_drain_force_sysctl
m_get_service_class
m_get_traffic_class
m_prepend_2
m_set_service_class
m_tag_copy_chain
m_tag_delete
m_tag_locate
m_tag_unlink
machTimeToNsecs(ulong long)
mach_eventlink_signal
mach_eventlink_signal_wait_until
mach_eventlink_wait_until
mach_host_server_routine
mach_vm_copy
mach_vm_read_overwrite
mach_vmcopyout(vm_map_copy *,ulong,uchar *)
mach_voucher_server_routine
machine_conf
machine_set_current_thread
makeCapabilitiesDictionary(OSDictionary *,uint,uint (*)[2])
make_fusion_id(uchar *,uchar const*,int)
manufacturingCallback(der_vm_iteration_context)
mapApplePMKToBcomPMK(wsec_pmk &,apple80211_key const*,ushort,uint)
mapAppleSSEError(int)
mapAppleUpperAuthToBcomWpaAuth(uint &,ushort,bool)
mapBcomAlgoToBcomWsecFlags(uint &,uint,uint)
mapBcomRatesetToAppleRateset(apple80211_rate_set_data *,wl_rateset *)
mapVectorToKey(uint,bool)
map_arg(task *,arg_map_s *,uint)
map_client_shared(_IOSurfaceSharedListEntry *,_IOSurfaceClientSharedListEntry **,uint,task *,uint,ulong,ulong long *)
map_server_routine
match_superclasses(bool *,profile const*,filter_context *,ulong,int (*)(bool *,profile const*,filter_context *,ulong,char const*,ulong),OSMetaClass const*)
max_idx(IOMFB::TableCompensator const*)
mbuf_copy_pkthdr
mbuf_cslab_free
mbuf_del_drvaux
mbuf_drain
mbuf_get_buffer_status
mbuf_get_driver_scratch
mbuf_get_keepalive_flag
mbuf_get_service_class_index
mbuf_get_service_class_index_0
mbuf_get_timestamp_requested
mbuf_get_unsent_data_bytes
mbuf_getpacket
mbuf_last_pkt
mbuf_pkt_new_flow
mbuf_pulldown
mbuf_ring_cluster_activate
mbuf_slab_free
mbuf_slab_notify
mbuf_worker_thread_init
mcache_purge
mdevopen
med3(uchar *,uchar *,uchar *,int (*)(void const*,void const*))
media_keybag_operation(nx_keybag *,keybag_entry *,keybag_entry *,ulong long)
memCpy32toSMC(void *,uchar *,ulong)
membuf_t::alloc(ulong)
membuf_t::append_elements(void const*,ulong,ulong)
membuf_t::copy_out(void *,ulong)
membuf_t::free(void)
memcpy
memcpy_from32(void *,void const*,ulong)
memcpy_to32(void *,void const*,ulong)
memory_entry_server_routine
memorystatus_get_level
memorystatus_send_low_swap_note
messageClientsApplier(OSObject *,void *)
migrateProperty(IOService *,char const*,IOService *,char const*)
ml_wait_max_cpus
mmioctl
moduleOnThreadCall(void *,void *)
mount_drop
mount_set_noreaddirext
moveMemHook(_effaceable_system *,void *,void const*,uint)
mp_dinit
mptcp_subflow_mpcantrcvmore_ev
mptcp_subflow_mpsuberror_ev
mptcp_subflow_propagate_ev
mptcp_symptoms_ctl_connect
mtr_get_error(double **,double **,int,double **,int,int,double *,double *)
mtr_householder_reflect_mtx(double **,int,double **,int,int,int,int)
mtr_init_mtx(int,int,ulong)
mtr_loge(double)
mtr_solve(double *,double *,double *,double *,double *,double *,uint *,int,int,uchar,double,double,double,int,int,bool,uint *,uchar *)
mtr_solve(double *,double *,double *,double *,double *,double *,uint *,int,int,uchar,double,double,double,int,int,bool,uint *,uchar *)
mtr_solve_least_squares(double **,double **,int,double **,int)
mul128(U128,U128)
mul256(U256,U256)
mul256(U256,ulong long)
mul64(ulong long,ulong long)
munge_lwww
munge_lwwwwwww
munge_wlll
munge_wllll
munge_wlllww
munge_wllww
munge_wllwwll
munge_wlww
munge_wlwwlwlw
munge_wlwwwl
munge_wlwwwllw
munge_wwlll
munge_wwllww
munge_wwlw
munge_wwlwww
munge_wwlwwwl
munge_wwwl
munge_wwwlw
munge_wwwlww
munge_wwws
munge_wwwsw
munge_wwww
munge_wwwwl
munge_wwwwllww
munge_wwwwlw
munge_wwwww
munge_wwwwwl
munge_wwwwww
munge_wwwwwwl
munge_wwwwwww
munge_wwwwwwww
my_strnstr(char *,char const*,ulong)
na_enable_all_rings
na_flowadv_event
na_notify
na_pseudo_krings_delete
nameBSDInterface(IONetworkInterface *,uint)
nameWakeReason(char *,ulong,char const*,IOService *)
nameWakeReason(char *,ulong,uint,IOService *)
nat464_insert_frag46
nd6_ifptomac
nd6_need_cache
ndrv_detach
necp_close_empty_arenas_callout
necp_sign_update_context
need_fsevent
netif_filter_cb
netif_flow_ipv6_ula_match
netns_lookup_reservations_count_in
netns_reap_caches
netns_reserve
netsrc_common
newOSArray(float *,uint)
newOSArray(int *,uint)
newOSArray(uint *,uint)
nextIndex(uint,uint)
next_PBTexec
nfs_buf_normalize_valid_range
nfs_disconnect
nfs_mbuf_init
nfs_open_owner_ref
nfs_request_add_header
nfs_sockaddr_cmp
noEntitlementsPresent(cs_blob *)
nosys
nstat_route_connect_attempt
nstat_route_connect_success
nstat_route_new_entry
nstat_route_rx
nstat_route_tx
nstat_route_walktree_add
nstat_tcp_gone
nstat_udp_gone
nullfs_root
nx_ctx_release(void *)
nx_fsw_dom_terminate
nx_kpipe_dom_defunct
nx_kpipe_dom_disconnect
nx_kpipe_dom_terminate
nx_kpipe_prov_params_adjust
nx_mbq_concat
nx_mkb_write(kb_access *,int (*)(kb_access *))
nx_mon_dom_bind_port
nx_mon_dom_connect
nx_mon_dom_disconnect
nx_mon_dom_terminate
nx_mon_dom_unbind_port
nx_netif_compat_fini
nx_netif_dev_krings_create
nx_netif_dev_krings_delete
nx_netif_dom_defunct_finalize
nx_netif_host_krings_delete
nx_netif_na_notify_tx
nx_netif_netagent_event
nx_upipe_prov_params_adjust
nxb_is_equal
nxctl_set_opt
nxdom_attach
nxdp_init(kern_nexus_domain_provider *)
nxp_connected(kern_nexus_provider *,kern_nexus *,kern_channel *)
nxp_disconnected(kern_nexus_provider *,kern_nexus *,kern_channel *)
nxp_pre_connect(kern_nexus_provider *,proc *,kern_nexus *,uint,kern_channel *,void **)
nxp_pre_disconnect(kern_nexus_provider *,kern_nexus *,kern_channel *)
nxp_ring_fini(kern_nexus_provider *,kern_nexus *,__kern_channel_ring *)
nxp_ring_init(kern_nexus_provider *,kern_nexus *,kern_channel *,__kern_channel_ring *,int,void **)
nxp_slot_fini(kern_nexus_provider *,kern_nexus *,__kern_channel_ring *,__slot_desc *,uint)
nxp_slot_init(kern_nexus_provider *,kern_nexus *,__kern_channel_ring *,__slot_desc *,uint,kern_slot_prop **,void **)
okOrPanic(der_vm_context)
okOrPanic(der_vm_context)
operator*(IOTS_U128 const&,ulong long)
operator-(IOTS_U256 const&,IOTS_U256 const&)
operator<<(IOTS_U128 const&,int)
operator<<(IOTS_U256 const&,int)
operator>>(IOTS_U128 const&,int)
operator>>(IOTS_U256 const&,int)
os_detail::panic_trapping_policy::trap(char const*)
os_reason_ref
os_reason_set_flags
other_to_IOFBSAFixed64(ulong long,uint,uint)
pack_request_for_system_group_container(sandbox *,sb_creation_context *,OSString *,void *)
packetFilterInterfaceAddProto(__ifnet *,uint,ifnet_demux_desc const*,uint)
packetFilterInterfaceDelProto(__ifnet *,uint)
packetFilterInterfaceDemux(__ifnet *,__mbuf *,char *,uint *)
packetFilterInterfaceOutput(__ifnet *,__mbuf *)
page_round_size(uint)
panic
panic_crash_fail_cast(OSMetaClassBase const*,OSMetaClass const*)
paniclog_append_noflush
parametricInv::operator()(double)
parseAdditionalPlaneInfo(IOSurfaceAdditionalPlaneInfo *,OSDictionary *)
parseNANAvailabilityAttribute(apple80211_nan_attribute *)
parseNANClusterAttribute(apple80211_nan_attribute *)
parseNANConnectionCapabilityttribute(apple80211_nan_attribute *)
parseNANCountryCodeAttribute(apple80211_nan_attribute *)
parseNANDataClusterAttribute(apple80211_nan_attribute *)
parseNANDeviceCapabilityAttribute(apple80211_nan_attribute *)
parseNANElementContainerAttribute(apple80211_nan_attribute *)
parseNANExtInfraAttribute(apple80211_nan_attribute *)
parseNANInfraAttribute(apple80211_nan_attribute *)
parseNANMasterIndicationAttribute(apple80211_nan_attribute *)
parseNANQoSAttribute(apple80211_nan_attribute *)
parseNANServDescExtAttribute(apple80211_nan_attribute *)
parseNANServiceDescriptorAttribute(apple80211_nan_attribute *)
parseNANServiceIdListAttribute(apple80211_nan_attribute *)
parseNANVendorSpecificAttribute(apple80211_nan_attribute *)
parseSInt32FromCMD(apple80211_debug_command *,ulong long,int)
parseUInt32FromCMD(apple80211_debug_command *,ulong long,uint)
parseUInt64FromCMD(apple80211_debug_command *,ulong long,ulong long)
parse_in6_addr(char const*,in6_addr *)
partitionComparison(OSMetaClassBase const*,OSMetaClassBase const*,void *)
pe_arm_get_soc_base_phys
pe_identify_machine
performAESonIOMD(IOMemoryDescriptor *,IOMemoryDescriptor *,ulong long,IOAESIV *,IOAESOperation,IOAESKeyData *,ulong long,ulong long)
performActions_handler(OSObject *,IOMFB::InterruptEventSource *,int)
persona_get
persona_get_type
persona_lookup
pf_copy_fragment_tag
pf_frag_compare
pf_grev1_unlink
pf_match_addr_range
pf_nat64_ipv4
pf_nat64_ipv6
pf_poolmask
pf_pptp_unlink
pf_unlink_state
pfi_set_flags
pfr_match_addr
pgsignal_callback
phystokv
pick_bootable_volume(nx const*)
pktap_set_procinfo
pmap_cs_compare_regions
pmksaBeaconSorter(OSMetaClassBase const*,OSMetaClassBase const*,void *)
postValidation(LazyPath *,cs_blob *,uint,OSDictionary *,uchar,bool,uint,char const*,char **,ulong *)
pp_ctx_retain(void *)
ppgrp_donice_callback
pqueue<priority_queue_deadline_max *,priority_queue_entry_deadline *>::merge_pair(priority_queue_deadline_max *,priority_queue_entry_deadline *,priority_queue_entry_deadline *)
pqueue<priority_queue_deadline_min *,priority_queue_entry_deadline *>::merge_pair(priority_queue_deadline_min *,priority_queue_entry_deadline *,priority_queue_entry_deadline *)
pqueue<priority_queue_max *,priority_queue_entry *>::merge_pair(priority_queue_max *,priority_queue_entry *,priority_queue_entry *)
pqueue<priority_queue_min *,priority_queue_entry *>::merge_pair(priority_queue_min *,priority_queue_entry *,priority_queue_entry *)
pqueue<priority_queue_sched_max *,priority_queue_entry_sched *>::merge_pair(priority_queue_sched_max *,priority_queue_entry_sched *,priority_queue_entry_sched *)
pqueue<priority_queue_sched_min *,priority_queue_entry_sched *>::merge_pair(priority_queue_sched_min *,priority_queue_entry_sched *,priority_queue_entry_sched *)
pqueue<priority_queue_sched_stable_max *,priority_queue_entry_stable *>::merge_pair(priority_queue_sched_stable_max *,priority_queue_entry_stable *,priority_queue_entry_stable *)
pqueue<priority_queue_sched_stable_min *,priority_queue_entry_stable *>::merge_pair(priority_queue_sched_stable_min *,priority_queue_entry_stable *,priority_queue_entry_stable *)
precookExemptionProfile(void)
precookExemptionProfile(void)
preflight_extents(IOStorageExtent *,uint,uint *,uint *)
prepareTransformBuffersAndOptions(IOSurface *,IOSurface *,OSDictionary *,bool,TransformSurfaceData *)
printDictionaryKeys(OSDictionary *,char *)
printRotationDebugString(LogicalFlipRotateFlags *)
printableInt64Fraction(long long,uint)
priority_queue_entry_decreased(priority_queue_min *,priority_queue_entry *)
priority_queue_entry_increased(priority_queue_sched_max *,priority_queue_entry_sched *)
priority_queue_insert(priority_queue_min *,priority_queue_entry *)
priority_queue_insert(priority_queue_sched_min *,priority_queue_entry_sched *)
procIsSuperuser(void)
proc_has_entitlement(proc *,char const*)
proc_info
proc_piddynkqueueinfo
proc_pidlistuptrs
processor_server_routine
processor_set_server_routine
profilerDatabaseInit(void)
profilerDebug(KTRACE_SCALER_DEBUG_METHOD,uint,uint,uint,uint,uint,uint)
profilerDebugInit(void)
profilerDebugStatsIdleEnd(ulong long)
propertyExport(OSDictionary *,char const*,ulong long)
providerNameIsUART(OSData *)
pru_sense_null
ptk_thread(void *,void *)
ptmx_clone
ptmx_kqops_event
ptmx_kqops_process
ptmx_kqops_touch
ptsd_revoke_knotes
putAsNameD2Dv1(uchar *,uint,uchar *,uint)
qSort(uchar *,uchar,uchar,int (*)(void const*,void const*))
qsort(void *,uint,uint,int (*)(void const*,void const*))
queueNotifyAction(IOSkywalkPacketQueue *,void *)
quiescePowerTreeCallback(void *,void *)
ratespec2rate(CCLogStream *,uint)
raw_uattach
readHook(_effaceable_bdev_hal *,void *,uint)
readMetaDataGetAddress(OSSymbol const*,OSDictionary const*)
readMetaDataGetSymbolInfo(OSSymbol const*,OSDictionary const*)
readRandomHook(_effaceable_system *,void *,uint)
readReportBits(uchar const*,uint *,uint,uint,bool,bool *)
read_write_buf_alloc(ulong,uchar **,uchar **)
read_write_buf_free(ulong,uchar **,uchar **)
readv_nocancel
rec709_degamma(double)
rec709_engamma(double)
rect_iter(uint,IOMFBRect const*,IOMFB::PixelDef const*)
registerAndTriggerErrorPath(M2ScalerCSCRequest *,char const*,int)
removeCommand(OSArray *,AppleSimpleUARTCommand *)
remove_container_entry(sb_ustate *,OSDictionary *,char const*,uint)
remove_terminated_scheme_from_stash(IOService *)
resetLeakyAPStats(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
rn_match_ifscope
rsn_pmkid(uchar *,uchar *,uchar *,uchar *)
rt6_deleteroute
rt_ifa_is_dst
rt_missmsg
rtclock_getattr
rtsetifa
ruadd
run_queue_init
s_reserved(IOMobileFramebufferUserClient *,void *,IOExternalMethodArguments *)
sample(uint *,uint,uint,uint)
sart_find_region
saveNANAvailabilityAttribute(OSObject *,apple80211_nan_attribute *)
saveNANClusterAttribute(OSObject *,apple80211_nan_attribute *)
saveNANCountryCodeAttribute(OSObject *,apple80211_nan_attribute *)
saveNANDeviceCapabilityAttribute(OSObject *,apple80211_nan_attribute *)
saveNANNDCAttribute(OSObject *,apple80211_nan_attribute *)
saveNANQoSAttribute(OSObject *,apple80211_nan_attribute *)
saveNANServiceIdListAttribute(OSObject *,apple80211_nan_attribute *)
saved_state_to_thread_state32
sb_ustate_dealloc(sb_ustate *)
sbtoxsockbuf_n
scaledInterval(ulong long,ulong long)
scaled_sRGB_degamma::operator()(double)
scaled_twopfour_degamma::operator()(double)
scaling_list(WriteBits *,ushort *,uint,bool)
search_for_boolean_property(IORegistryEntry *,char const*)
selfCallback(InterleavedTest *,int)
semaphore_timedwait_signal_trap
semaphore_timedwait_trap
sendEssentialConfigToAOP(AppleSPUHIDInterface *)
serialDeviceToName(serial_device)
serviceOpenMessageApplier(OSObject *,void *)
set2GChainDisable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
set40MhzIntolerant(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAbortScan(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAntenna(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAntennaDiversity(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setApMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAssertionState(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAssociateRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAuthType(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlBssid(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlChannelSequence(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlCtl(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlForceMaster(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlForcedRoamConfig(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlGuardTime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlKey(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlMasterSyncFramePeriod(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlPeerServiceParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlPeerServiceRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setAwdlTopMaster(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBSSID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBTCoexFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBTCoexMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBTCoexULOFDMADisable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBTPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBackgroundScan(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBlockAck(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setBoolean(OSDictionary *,char const*,bool)
setCDDMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCacheAgeThresh(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCacheThreshBcast(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCacheThreshDirect(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCaptureDebugInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setChannel(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCipherKey(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setClearPMKCache(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCompanionSkywalkIfCreate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCompanionSkywalkLinkState(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setContainerExtentedInfo(char const*,OSDictionary *,OSDictionary *)
setCounterMeasures(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCountryCode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setCrashID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDTIMInt(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDbgGuardTime(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDeadlineInterval(ulong long *,ulong long,uint)
setDeauth(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDebugFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDebugInfo(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDisassociate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setDisplayState(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setFactoryMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setFragThreshold(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setGASPeer(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setGASQuery(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setGASReq(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setGuardInterval(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setHTCapability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setHostApModeHidden(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setIBSS_Or_HostAP_Mode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setIE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setIOReportersStreamLevelCallback(OSObject const*,CCStreamLogLevel)
setIntMit(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setInterfaceQueueStreamFlagsCallback(OSObject const*,ulong long)
setLDPC(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLLWParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLQMConfig(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLeakyAPSSIDMetrics(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLeakyAPStatsMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLinkQualEventParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLocale(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLogFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setLogFlagsCallback(OSObject const*,ulong long)
setLogLevelCallback(OSObject const*,CCStreamLogLevel)
setMCS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setMCSIndexSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setMPDU(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setMSDU(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setMulticastRate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANCommittedAvailability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANDataClusterAvailability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANDataPathReq(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANDataPathResp(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANDataPathTerminate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANFastDiscoveryRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANFollowupTransmit(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANImmutableAvailability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANInfraRelayPacketCapture(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANKeepAliveDatapathIdentifier(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANLLWParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANOobActionFrame(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANPotentialAvailability(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANPublish(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANQosParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANRangingCancel(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANRangingRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANScheduleUpdate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANSubscribe(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANUserConfiguredChannelSequence(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNANVendorPayload(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setNetworkFamilystackStreamFlagsCallback(OSObject const*,ulong long)
setNumber(OSDictionary *,char const*,uint,uint)
setNumber(OSDictionary *,char const*,ulong long,uint)
setOffloadTcpkaEnable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setP2PCTWindow(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setP2PGroupOwnerConfigure(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setP2PListen(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setP2POppPS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setP2PScan(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPLS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPSMP(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPeerInputStreamFlagsCallback(OSObject const*,ulong long)
setPeerQueueStreamFlagsCallback(OSObject const*,ulong long)
setPhyMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPhySubMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPidLock(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPmMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPowerBudget(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPowersave(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPrivateMAC(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPrivateMacAddress(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setPropertiesIoctl(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setProtMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRIFS(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRSN_Conf(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRSN_IE(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRangingEnable(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRangingFollowMode(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRangingIdentifier(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRangingStart(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRateSet(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setReassociate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setReassociateWithCoreCapture(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setResetChip(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRetryLimit(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRoam(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRoamCache(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setRoamProfile(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSSID(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSTA_Authorize(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSTA_DissasociateOrDeauth(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setScanBackoffReport(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setScanCacheClear(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setScanRequest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setScanRequestMultiple(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setScansSuppressed(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setShortSlot(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSoftAPCSAParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSoftAPParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSoftWiFiNetworkIEParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setSystemAwakeReport(AppleHIDTransportManagement *,bool)
setTKOParams(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setTXChainPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setThermalIndex(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setThermalThrottling(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setTimeNS(OSDictionary *,OSSymbol const*,ulong long)
setTrafficRegistration(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setTxPower(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setUCMCoexProfile(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setUCMCoexProfileActive(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setUInt32InDict(OSDictionary *,char const*,uint)
setUSBHostNotification(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setUserspaceP2POptions(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setVendorDebugFlags(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setVirtualInterfaceCreate(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setVirtualInterfaceDelete(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setWMEtclass(__mbuf **)
setWoWEnabled(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setWoWParameters(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
setWoWTest(IO80211Controller *,IO80211Interface *,IO80211VirtualInterface *,IO80211InfraInterface *,apple80211req *,bool)
set_active_region(gp_config_src_act_offset_v9_t *,gp_config_src_act_size_v9_t *,gp_config_src_fmt_v9_t const*,IOMFBRect const*,IOMFBRect const*)
set_container_entry(sb_ustate *,OSDictionary *,char const*,uint,char const*)
set_nex_pg
setlocklocal_callback
shutdownPhase2String(shutdownPhase_t)
skipKey(OSSymbol const*)
skmem_arena_defunct
skmem_arena_release
skmem_reap_caches
snoop_chain(__ifnet *,uint,ulong long)
snprintf_func
so_svc2tc
sock_nointerrupt
socket_defunct
socket_delegate
sohasoutofband
soisconnecting
soreserve
sorwakeup
start
start_cpu
startup_entry_cmp
staticEnableHostClickControlHandler(bool,uchar,void *)
staticEnableMultitouchEventsHandler(bool,void *)
staticGetPowerStateHandler(uchar *,void *)
staticGetReportHandler(AADDeviceReportStruct *,uchar,void *)
staticGetReportHandler(AMDDeviceReportStruct *,uchar,void *)
staticReportInfoHandler(uchar,AADDeviceReportInfoStruct *,uchar,void *)
staticReportInfoHandler(uchar,AMDReportInfoStruct *,uchar,void *)
staticResetDeviceHandler(void *)
staticSetPowerStateHandler(uchar,void *)
staticSetReportHandler(AADDeviceReportStruct *,uchar,void *)
staticSetReportHandler(AMDDeviceReportStruct *,uchar,void *)
staticSetWaveformHandler(AADDeviceReportStruct *,uchar,void *)
std::__throw_length_error(char const*)
std::vector<InstanceTypeIDAndElement<AACSyntacticElement *>>::push_back(InstanceTypeIDAndElement<AACSyntacticElement *>&&)
std::vector<uchar>::resize(ulong)
storageCompletion(void *,void *,int,ulong long)
strPanicCause(PanicCause_t)
strcontainstr(char const*,char const*,uint)
stringForRxDropReason(RxDropReason,uint,char *,uint)
stringFromRecordType(uint)
stringFromTxStatus(int)
sub256(U256,U128)
sub256(U256,U256)
subyte
symbolInfoGetAddress(OSDictionary const*)
sys_preadv_nocancel
sysctl_amfm_log_ctl(sysctl_oid *,void *,int,sysctl_req *)
sysctl_aotmetrics(sysctl_oid *,void *,int,sysctl_req *)
sysctl_aotmode(sysctl_oid *,void *,int,sysctl_req *)
sysctl_aotmodebits(sysctl_oid *,void *,int,sysctl_req *)
sysctl_bootreason(sysctl_oid *,void *,int,sysctl_req *)
sysctl_consoleoptions(sysctl_oid *,void *,int,sysctl_req *)
sysctl_debug_iokit(sysctl_oid *,void *,int,sysctl_req *)
sysctl_handle_necp_unentitled_level
sysctl_hwcksum_dbg_mode
sysctl_hwcksum_dbg_partial_rxoff_adj
sysctl_hwcksum_dbg_partial_rxoff_forced
sysctl_if_utun_ring_size
sysctl_ifalldata
sysctl_ifdata
sysctl_ip_checkinterface
sysctl_progressoptions(sysctl_oid *,void *,int,sysctl_req *)
sysctl_restricted_port_enforced
sysctl_rxpoll
sysctl_rxpoll_whiwat
sysctl_rxpoll_wlowat
sysctl_sched_model
sysctl_sched_stats_enable
sysctl_setthread_cpupercent
sysctl_shutdownreason(sysctl_oid *,void *,int,sysctl_req *)
sysctl_targettype(sysctl_oid *,void *,int,sysctl_req *)
sysctl_vfsnspace
sysctl_wakereason(sysctl_oid *,void *,int,sysctl_req *)
sysctl_willshutdown(sysctl_oid *,void *,int,sysctl_req *)
sysctl_willuserspacereboot(sysctl_oid *,void *,int,sysctl_req *)
systemdomain_init
t8020dart_get_apf_hw_lock_state
t8020dart_get_dart_hw_lock_state
t8020dart_get_smmu_hw_lock_state
tab_pow(double,PowTab const*)
task_sfi_reevaluate_cb
task_suspend_internal
task_wait_till_threads_terminate_locked
tasks_system_suspend
tcp6_usr_connectx
tcp_bad_rexmt_fix_sndbuf
tcp_ccdbg_control_disconnect
tcp_cubic_switch_cc
tcp_newreno_after_timeout
tcp_newreno_cwnd_init_or_reset
tcp_newreno_pre_fr
tcp_usr_connectx
tellKernelClientApplier(OSObject *,void *)
termioschars
testCallback(SCALER_PROPERTIES_EXTENTS const*,IOSAKernelTestsArguments *,int *)
testHistogram(SCALER_PROPERTIES_EXTENTS const*,IOSAKernelTestsArguments *,int *)
testRetain(SCALER_PROPERTIES_EXTENTS const*,IOSAKernelTestsArguments *,int *)
testStress(SCALER_PROPERTIES_EXTENTS const*,IOSAKernelTestsArguments *,int *)
testSynchronous(SCALER_PROPERTIES_EXTENTS const*,IOSAKernelTestsArguments *,int *)
thread_deallocate
thread_read_times
thread_selfcounts
thread_selfusage
thread_switch_continue
throttle_init_throttle_period
timeXtoTimeY(ulong long,ulong long,ulong long,ulong long,ulong long)
timeXtoTimeY128(IOTS_U128,IOTS_U128,ulong long,IOTS_U128,ulong long)
timebase_callback
ttioctl
ttselect
ttspeedtab
ttwwakeup
ttylclose
ttysleep
twoptwo_engamma(double)
ubc_upl_abort
uc_get_format(uint,uint)
udp6_connectx
udp_connectx
udp_notify
udp_shutdown
uipc_sense
uipc_shutdown
ulock_wait
uncompressAwdl(uchar *,uint,uchar *,uint,uchar *,uint)
uniqueStringPlistProperty(OSDictionary *,OSString const*)
uniqueStringPlistProperty(OSDictionary *,char const*)
unmap_arg(arg_map_s *)
unp_dispose
unpackInterestsDict(OSDictionary *,OSArray **,OSArray **)
unpackOSArray(OSArray *,float *,uint,int)
unpackOSArray(OSArray *,float *,uint,int)
unpackOSArray(OSArray *,int *,uint,int)
unpackOSArray(OSArray *,uint *,uint,int)
unpackOSArray(OSArray *,uint *,uint,int)
updateAnchorTime(ANCHORTIME *,ulong long,ulong long)
updateConsoleUsersCallout(void *,void *)
update_mntfrom(mount *,IOMedia *,bool)
upl_get_size
utf8clip(char *,char const*)
utun_ctl_rcvd
uuid_parse
validateAndRegisterProfile(ProfileValidationData &)
validateNANAvailabilityAttribute(apple80211_nan_attribute *)
validateNANElementContainerAttribute(apple80211_nan_attribute *)
validateNANNDCAttribute(apple80211_nan_attribute *)
validateProfile(ProfileValidationData &,uchar const*,ulong)
validate_ethertype
validate_ipv6_sockaddr
vfs_clearnoswap
vfs_devvp
vfs_setcompoundopen
vfs_setmntswap
vfs_setmntsystem
vfs_setmntsystemdata
vfs_setnoswap
vlan_if_free
vlogfHook(_effaceable_system *,char const*,char *)
vm_fault_external
vm_map_copy_footprint_ledgers
vm_map_copyout
vm_map_wire_external
vm_object_cache_remove
vm_object_do_collapse_compressor
vm_page_part_copy
vm_page_sleep
vm_pageclean_setup
vm_pressure_monitor
vm_purgeable_nonvolatile_dequeue
vm_purgeable_purge_task_owned
vm_purgeable_stats
vm_purgeable_token_delete_last
vm_run_compactor
vm_swapfile_close
vm_update_darkwake_mode
vn_authorize_rename
vn_rdwr
vn_searchfs_inappropriate_name
vnode_clearnoflush
vnode_pager_data_return
vnode_pager_last_unmap
vnode_setnoflush
vnode_should_flush_after_write
vsock_shutdown
wipeOSData(OSData *)
wpa_eapol_key_mic(uchar *,int,uchar *,ulong,uchar *,int)
wrapping_key_get(nx_keybag *,void const*,ushort,bool)
wrapping_key_set(nx_keybag *,void const*,ushort *,ulong long,bool)
wrapping_keybag_setup(nx_keybag *,bool *,bool *,bool *,int (**)(nx_keybag *,void const*,ushort,bool),int (**)(nx_keybag *,void const*,ushort *,ulong long,bool))
writeHook(_effaceable_bdev_hal *,void const*,uint)
zeroFillRegion(IOMemoryDescriptor *,ulong long,ulong long,char *)
zone_range_contains(zone_map_range const*,ulong)
zone_range_contains(zone_map_range const*,ulong,ulong)
